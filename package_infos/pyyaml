{"6.0.1": "\n* https://github.com/yaml/pyyaml/pull/702 -- pin Cython build dep to < 3.0\n\n", "6.0": "\n* https://github.com/yaml/pyyaml/pull/327 -- Change README format to Markdown\n* https://github.com/yaml/pyyaml/pull/483 -- Add a test for YAML 1.1 types\n* https://github.com/yaml/pyyaml/pull/497 -- fix float resolver to ignore `.` and `._`\n* https://github.com/yaml/pyyaml/pull/550 -- drop Python 2.7\n* https://github.com/yaml/pyyaml/pull/553 -- Fix spelling of \u201chexadecimal\u201d\n* https://github.com/yaml/pyyaml/pull/556 -- fix representation of Enum subclasses\n* https://github.com/yaml/pyyaml/pull/557 -- fix libyaml extension compiler warnings\n* https://github.com/yaml/pyyaml/pull/560 -- fix ResourceWarning on leaked file descriptors\n* https://github.com/yaml/pyyaml/pull/561 -- always require `Loader` arg to `yaml.load()`\n* https://github.com/yaml/pyyaml/pull/564 -- remove remaining direct distutils usage\n\n", "5.4.1": "\n* https://github.com/yaml/pyyaml/pull/480 -- Fix stub compat with older pyyaml versions that may unwittingly load it\n\n", "5.4": "\n* https://github.com/yaml/pyyaml/pull/407 -- Build modernization, remove distutils, fix metadata, build wheels, CI to GHA\n* https://github.com/yaml/pyyaml/pull/472 -- Fix for CVE-2020-14343, moves arbitrary python tags to UnsafeLoader\n* https://github.com/yaml/pyyaml/pull/441 -- Fix memory leak in implicit resolver setup\n* https://github.com/yaml/pyyaml/pull/392 -- Fix py2 copy support for timezone objects\n* https://github.com/yaml/pyyaml/pull/378 -- Fix compatibility with Jython\n\n", "5.3.1": "\n* https://github.com/yaml/pyyaml/pull/386 -- Prevents arbitrary code execution during python/object/new constructor\n\n", "5.3": "\n* https://github.com/yaml/pyyaml/pull/290 -- Use `is` instead of equality for comparing with `None`\n* https://github.com/yaml/pyyaml/pull/270 -- Fix typos and stylistic nit\n* https://github.com/yaml/pyyaml/pull/309 -- Fix up small typo\n* https://github.com/yaml/pyyaml/pull/161 -- Fix handling of __slots__\n* https://github.com/yaml/pyyaml/pull/358 -- Allow calling add_multi_constructor with None\n* https://github.com/yaml/pyyaml/pull/285 -- Add use of safe_load() function in README\n* https://github.com/yaml/pyyaml/pull/351 -- Fix reader for Unicode code points over 0xFFFF\n* https://github.com/yaml/pyyaml/pull/360 -- Enable certain unicode tests when maxunicode not > 0xffff\n* https://github.com/yaml/pyyaml/pull/359 -- Use full_load in yaml-highlight example\n* https://github.com/yaml/pyyaml/pull/244 -- Document that PyYAML is implemented with Cython\n* https://github.com/yaml/pyyaml/pull/329 -- Fix for Python 3.10\n* https://github.com/yaml/pyyaml/pull/310 -- Increase size of index, line, and column fields\n* https://github.com/yaml/pyyaml/pull/260 -- Remove some unused imports\n* https://github.com/yaml/pyyaml/pull/163 -- Create timezone-aware datetimes when parsed as such\n* https://github.com/yaml/pyyaml/pull/363 -- Add tests for timezone\n\n", "5.2": "------------------\n\n* Repair incompatibilities introduced with 5.1. The default Loader was changed,\n  but several methods like add_constructor still used the old default\n  https://github.com/yaml/pyyaml/pull/279 -- A more flexible fix for custom tag constructors\n  https://github.com/yaml/pyyaml/pull/287 -- Change default loader for yaml.add_constructor\n  https://github.com/yaml/pyyaml/pull/305 -- Change default loader for add_implicit_resolver, add_path_resolver\n* Make FullLoader safer by removing python/object/apply from the default FullLoader\n  https://github.com/yaml/pyyaml/pull/347 -- Move constructor for object/apply to UnsafeConstructor\n* Fix bug introduced in 5.1 where quoting went wrong on systems with sys.maxunicode <= 0xffff\n  https://github.com/yaml/pyyaml/pull/276 -- Fix logic for quoting special characters\n* Other PRs:\n  https://github.com/yaml/pyyaml/pull/280 -- Update CHANGES for 5.1\n\n", "5.1.2": "------------------\n\n* Re-release of 5.1 with regenerated Cython sources to build properly for Python 3.8b2+\n\n", "5.1.1": "------------------\n\n* Re-release of 5.1 with regenerated Cython sources to build properly for Python 3.8b1\n\n", "5.1": "----------------\n\n* https://github.com/yaml/pyyaml/pull/35 -- Some modernization of the test running\n* https://github.com/yaml/pyyaml/pull/42 -- Install tox in a virtualenv\n* https://github.com/yaml/pyyaml/pull/45 -- Allow colon in a plain scalar in a flow context\n* https://github.com/yaml/pyyaml/pull/48 -- Fix typos\n* https://github.com/yaml/pyyaml/pull/55 -- Improve RepresenterError creation\n* https://github.com/yaml/pyyaml/pull/59 -- Resolves #57, update readme issues link\n* https://github.com/yaml/pyyaml/pull/60 -- Document and test Python 3.6 support\n* https://github.com/yaml/pyyaml/pull/61 -- Use Travis CI built in pip cache support\n* https://github.com/yaml/pyyaml/pull/62 -- Remove tox workaround for Travis CI\n* https://github.com/yaml/pyyaml/pull/63 -- Adding support to Unicode characters over codepoint 0xffff\n* https://github.com/yaml/pyyaml/pull/75 -- add 3.12 changelog\n* https://github.com/yaml/pyyaml/pull/76 -- Fallback to Pure Python if Compilation fails\n* https://github.com/yaml/pyyaml/pull/84 -- Drop unsupported Python 3.3\n* https://github.com/yaml/pyyaml/pull/102 -- Include license file in the generated wheel package\n* https://github.com/yaml/pyyaml/pull/105 -- Removed Python 2.6 & 3.3 support\n* https://github.com/yaml/pyyaml/pull/111 -- Remove commented out Psyco code\n* https://github.com/yaml/pyyaml/pull/129 -- Remove call to `ord` in lib3 emitter code\n* https://github.com/yaml/pyyaml/pull/149 -- Test on Python 3.7-dev\n* https://github.com/yaml/pyyaml/pull/158 -- Support escaped slash in double quotes \"\\/\"\n* https://github.com/yaml/pyyaml/pull/175 -- Updated link to pypi in release announcement\n* https://github.com/yaml/pyyaml/pull/181 -- Import Hashable from collections.abc\n* https://github.com/yaml/pyyaml/pull/194 -- Reverting https://github.com/yaml/pyyaml/pull/74\n* https://github.com/yaml/pyyaml/pull/195 -- Build libyaml on travis\n* https://github.com/yaml/pyyaml/pull/196 -- Force cython when building sdist\n* https://github.com/yaml/pyyaml/pull/254 -- Allow to turn off sorting keys in Dumper (2)\n* https://github.com/yaml/pyyaml/pull/256 -- Make default_flow_style=False\n* https://github.com/yaml/pyyaml/pull/257 -- Deprecate yaml.load and add FullLoader and UnsafeLoader classes\n* https://github.com/yaml/pyyaml/pull/261 -- Skip certain unicode tests when maxunicode not > 0xffff\n* https://github.com/yaml/pyyaml/pull/263 -- Windows Appveyor build\n\n", "3.13": "-----------------\n\n* Resolved issues around PyYAML working in Python 3.7.\n\n", "3.12": "-----------------\n\n* Wheel packages for Windows binaries.\n* Adding an implicit resolver to a derived loader should not affect the base loader.\n* Uniform representation for OrderedDict? across different versions of Python.\n* Fixed comparison to None warning.\n\n", "3.11": "-----------------\n\n* Source and binary distributions are rebuilt against the latest\n  versions of Cython and LibYAML.\n\n", "3.10": "-----------------\n\n* Do not try to build LibYAML bindings on platforms other than CPython\n  (Thank to olt(at)bogosoft(dot)com).\n* Clear cyclic references in the parser and the emitter\n  (Thank to kristjan(at)ccpgames(dot)com).\n* Dropped support for Python 2.3 and 2.4.\n\n", "3.09": "-----------------\n\n* Fixed an obscure scanner error not reported when there is\n  no line break at the end of the stream (Thank to Ingy).\n* Fixed use of uninitialized memory when emitting anchors with\n  LibYAML bindings (Thank to cegner(at)yahoo-inc(dot)com).\n* Fixed emitting incorrect BOM characters for UTF-16 (Thank to\n  Valentin Nechayev)\n* Fixed the emitter for folded scalars not respecting the preferred\n  line width (Thank to Ingy).\n* Fixed a subtle ordering issue with emitting '%TAG' directives\n  (Thank to Andrey Somov).\n* Fixed performance regression with LibYAML bindings.\n\n\n", "3.08": "-----------------\n\n* Python 3 support (Thank to Erick Tryzelaar).\n* Use Cython instead of Pyrex to build LibYAML bindings.\n* Refactored support for unicode and byte input/output streams.\n\n\n", "3.07": "-----------------\n\n* The emitter learned to use an optional indentation indicator\n  for block scalar; thus scalars with leading whitespaces\n  could now be represented in a literal or folded style.\n* The test suite is now included in the source distribution.\n  To run the tests, type 'python setup.py test'.\n* Refactored the test suite: dropped unittest in favor of\n  a custom test appliance.\n* Fixed the path resolver in CDumper.\n* Forced an explicit document end indicator when there is\n  a possibility of parsing ambiguity.\n* More setup.py improvements: the package should be usable\n  when any combination of setuptools, Pyrex and LibYAML\n  is installed.\n* Windows binary packages are built against LibYAML-0.1.2.\n* Minor typos and corrections (Thank to Ingy dot Net\n  and Andrey Somov).\n\n\n", "3.06": "-----------------\n\n* setup.py checks whether LibYAML is installed and if so, builds\n  and installs LibYAML bindings.  To force or disable installation\n  of LibYAML bindings, use '--with-libyaml' or '--without-libyaml'\n  respectively.\n* The source distribution includes compiled Pyrex sources so\n  building LibYAML bindings no longer requires Pyrex installed.\n* 'yaml.load()' raises an exception if the input stream contains\n  more than one YAML document.\n* Fixed exceptions produced by LibYAML bindings.\n* Fixed a dot '.' character being recognized as !!float.\n* Fixed Python 2.3 compatibility issue in constructing !!timestamp values.\n* Windows binary packages are built against the LibYAML stable branch.\n* Added attributes 'yaml.__version__' and  'yaml.__with_libyaml__'.\n\n\n", "3.05": "-----------------\n\n* Windows binary packages were built with LibYAML trunk.\n* Fixed a bug that prevent processing a live stream of YAML documents in\n  timely manner (Thanks edward(at)sweetbytes(dot)net).\n* Fixed a bug when the path in add_path_resolver contains boolean values\n  (Thanks jstroud(at)mbi(dot)ucla(dot)edu).\n* Fixed loss of microsecond precision in timestamps\n  (Thanks edemaine(at)mit(dot)edu).\n* Fixed loading an empty YAML stream.\n* Allowed immutable subclasses of YAMLObject.\n* Made the encoding of the unicode->str conversion explicit so that\n  the conversion does not depend on the default Python encoding.\n* Forced emitting float values in a YAML compatible form.\n\n\n", "3.04": "-----------------\n\n* Include experimental LibYAML bindings.\n* Fully support recursive structures.\n* Sort dictionary keys.  Mapping node values are now represented\n  as lists of pairs instead of dictionaries.  No longer check\n  for duplicate mapping keys as it didn't work correctly anyway.\n* Fix invalid output of single-quoted scalars in cases when a single\n  quote is not escaped when preceded by whitespaces or line breaks.\n* To make porting easier, rewrite Parser not using generators.\n* Fix handling of unexpected block mapping values.\n* Fix a bug in Representer.represent_object: copy_reg.dispatch_table\n  was not correctly handled.\n* Fix a bug when a block scalar is incorrectly emitted in the simple\n  key context.\n* Hold references to the objects being represented.\n* Make Representer not try to guess !!pairs when a list is represented.\n* Fix timestamp constructing and representing.\n* Fix the 'N' plain scalar being incorrectly recognized as !!bool.\n\n\n", "3.03": "-----------------\n\n* Fix Python 2.5 compatibility issues.\n* Fix numerous bugs in the float handling.\n* Fix scanning some ill-formed documents.\n* Other minor fixes.\n\n\n", "3.02": "-----------------\n\n* Fix win32 installer.  Apparently bdist_wininst does not work well\n  under Linux.\n* Fix a bug in add_path_resolver.\n* Add the yaml-highlight example.  Try to run on a color terminal:\n  `python yaml_hl.py <any_document.yaml`.\n\n\n", "3.01": "-----------------\n\n* Initial release.  The version number reflects the codename\n  of the project (PyYAML 3000) and differentiates it from\n  the abandoned PyYaml module.\n\n"}